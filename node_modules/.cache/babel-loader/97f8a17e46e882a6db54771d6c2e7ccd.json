{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/New Policy/CreatePolicy.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Card, CardBody, Col, Row, Input, Modal, ModalBody, ModalFooter, ModalHeader, Button as BTN } from 'reactstrap';\nimport { Button } from 'primereact/button';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Calendar } from 'primereact/calendar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig } from '../../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass NewPolicy extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ValidateAndAddBoatingQualification = () => {\n      if (this.state.boatingQualifications === '' || this.state.boatingQualifications === null || this.state.boatingQualificationsError) {\n        this.setState({\n          boatingQualificationsError: true\n        });\n        this.show('boatingQualifications', true, \"boatingQualificationsError\", \"Please select Boating Qualifications\");\n      } else {\n        let BoatingQualificationsArray = this.state.boatingQualificationsArr;\n        let BoatingQualificationsList = this.state.boatingQualificationList;\n        let index = BoatingQualificationsList.findIndex(x => x.StringMapKey === this.state.boatingQualifications);\n        let bqindex = BoatingQualificationsArray.findIndex(x => x.BoatingQualification === this.state.boatingQualifications);\n\n        if (bqindex == -1) {\n          var boatingQuaData = {\n            BoatingQualification: BoatingQualificationsList[index].StringMapId,\n            BoatingQualificationName: BoatingQualificationsList[index].StringMapKey,\n            Status: BoatingQualificationsList[index].Status\n          };\n          BoatingQualificationsArray.push(boatingQuaData);\n        } else {\n          BoatingQualificationsArray[bqindex].Status = \"Active\";\n        }\n\n        BoatingQualificationsList.splice(index, 1);\n        this.setState({\n          boatingQualificationsArr: BoatingQualificationsArray,\n          boatingQualificationList: BoatingQualificationsList,\n          boatingQualifications: ''\n        });\n      }\n    };\n\n    this.deleteBoatingQualification = data => {\n      let BoatingQualificationsArray = this.state.boatingQualificationsArr;\n      let BoatingQualificationsList = this.state.boatingQualificationList;\n      let boatingQualificationAllList = this.state.boatingQualificationAllList;\n\n      if (data.PolicyId) {\n        let index = BoatingQualificationsArray.findIndex(x => x.BoatingQualification === data.BoatingQualification);\n        BoatingQualificationsArray[index].Status = \"Inactive\";\n      } else {\n        let index = BoatingQualificationsArray.findIndex(x => x.BoatingQualification === data.BoatingQualification);\n        BoatingQualificationsArray.splice(index, 1);\n      }\n\n      let bqindex = boatingQualificationAllList.findIndex(x => x.StringMapId === data.BoatingQualification);\n      BoatingQualificationsList.push(boatingQualificationAllList[bqindex]);\n      this.setState({\n        boatingQualificationsArr: BoatingQualificationsArray,\n        boatingQualificationList: BoatingQualificationsList,\n        toggleModal: false,\n        temData: ''\n      });\n    };\n\n    this.delete = data => {\n      this.setState({\n        temData: data\n      });\n      this.openModal('Delete');\n    };\n\n    this.toggleLarge = modal => {\n      if (modal == 'Delete') {\n        this.setState({\n          toggleModal: false,\n          temData: ''\n        });\n      } else if (modal == 'Assumption') {\n        this.setState({\n          toggleAssumption: false\n        });\n      } else if (modal == 'TermsAndCondition') {\n        this.setState({\n          toggleTermsAndCondition: false\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }); // SAGAR\n\n      let alphaNumeric = CommonConfig.RegExp.alphaNumeric;\n\n      if (e.target.name === 'policyNumber') {\n        debugger;\n\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            policyNumberError: true\n          });\n          this.show(\"policyNumber\", true, \"policyNumberError\", \"Please enter Policy Number\");\n        } else if (e.target.value.length > 10) {\n          this.setState({\n            policyNumberError: true,\n            policyNumber: this.state.policyNumber\n          });\n          this.show(\"policyNumber\", true, \"policyNumberError\", \"Please enter less than 10\");\n        } else {\n          this.setState({\n            policyNumber: e.target.value,\n            policyNumberError: false\n          });\n          this.show(\"policyNumber\", false, \"policyNumberError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'refer') {\n        if (e.target.checked) {\n          this.setState({\n            refer: e.target.checked\n          });\n        } else {\n          this.setState({\n            refer: e.target.checked\n          });\n        }\n      }\n\n      if (e.target.name === 'TPO') {\n        this.setState({\n          TPO: e.target.checked\n        });\n\n        if (!CommonConfig.isEmpty(this.state.country)) {\n          this.getVesselClassByCountry(this.state.country, e.target.checked);\n          this.setState({\n            vesselClass: '',\n            VesselClassError: true,\n            vesselType: '',\n            vesselTypeError: true\n          });\n        }\n      }\n\n      if (e.target.name === 'policyEffectiveDate') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            policyEffectiveDateError: true\n          });\n          this.show(\"policyEffectiveDate\", true, \"policyEffectiveDateError\", \"Please enter policy effective date\");\n        } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\n          this.setState({\n            policyEffectiveDateError: true\n          });\n          this.show(\"policyEffectiveDate\", true, \"policyEffectiveDateError\", \"Please enter valid policy effective date\");\n        } else {\n          let RenewalDate = moment(e.target.value).add(365, 'days').format('YYYY-MM-DD');\n          this.setState({\n            policyEffectiveDateError: false,\n            policyEffectiveDate: e.target.value,\n            renewalDate: RenewalDate\n          });\n          this.show(\"policyEffectiveDate\", false, \"policyEffectiveDateError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'premium') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            premiumError: true\n          });\n          this.show(\"premium\", true, \"premiumError\", \"Please enter Premium Amount\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              premiumError: true\n            });\n            this.show(\"premium\", true, \"premiumError\", \"Please enter valid Premium Amount\");\n          } else {\n            this.calculateTotal(e.target.value, this.state.levy, this.state.adminFee);\n            this.setState({\n              premiumError: false,\n              premium: e.target.value\n            });\n            this.show(\"premium\", false, \"premiumError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'levy') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            levyError: true\n          });\n          this.show(\"levy\", true, \"levyError\", \"Please enter Premium Amount\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              levyError: true\n            });\n            this.show(\"levy\", true, \"levyError\", \"Please enter valid Premium Amount\");\n          } else {\n            this.calculateTotal(this.state.premium, e.target.value, this.state.adminFee);\n            this.setState({\n              levyError: false,\n              levy: e.target.value\n            });\n            this.show(\"levy\", false, \"levyError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'adminFee') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            adminFeeError: true\n          });\n          this.show(\"adminFee\", true, \"adminFeeError\", \"Please enter Premium Amount\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              adminFeeError: true\n            });\n            this.show(\"adminFee\", true, \"adminFeeError\", \"Please enter valid Premium Amount\");\n          } else {\n            this.calculateTotal(this.state.premium, this.state.levy, e.target.value);\n            this.setState({\n              adminFeeError: false,\n              adminFee: e.target.value\n            });\n            this.show(\"adminFee\", false, \"adminFeeError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'rate') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            rateError: true\n          });\n          this.show(\"rate\", true, \"rateError\", \"Please enter Rate\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.percentage;\n          let percentage = e.target.value;\n\n          if (!decimalRegEx.test(percentage)) {\n            this.setState({\n              rateError: true\n            });\n            this.show(\"rate\", true, \"rateError\", \"Please enter valid Rate\");\n          } else {\n            this.setState({\n              rateError: false,\n              rate: e.target.value\n            });\n            this.show(\"rate\", false, \"rateError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'excess') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            excessError: true\n          });\n          this.show(\"excess\", true, \"excessError\", \"Please enter Excess Amount\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              excessError: true\n            });\n            this.show(\"excess\", true, \"excessError\", \"Please enter valid Excess Amount\");\n          } else {\n            this.setState({\n              excessError: false,\n              excess: e.target.value\n            });\n            this.show(\"excess\", false, \"excessError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'vesselName') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            vesselNameError: true\n          });\n          this.show(\"vesselName\", true, \"vesselNameError\", \"Please enter Make & Model \");\n        } else if (e.target.value.length > 50) {\n          this.setState({\n            vesselNameError: true,\n            vesselName: this.state.vesselName\n          });\n          this.show(\"vesselName\", true, \"vesselNameError\", \"Please enter less than 50\");\n        } else {\n          this.setState({\n            vesselName: e.target.value,\n            vesselNameError: false\n          });\n          this.show(\"vesselName\", false, \"vesselNameError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'makeAndModel') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            makeAndModelError: true\n          });\n          this.show(\"makeAndModel\", true, \"makeAndModelError\", \"Please enter Make & Model \");\n        } else if (e.target.value.length > 38) {\n          this.setState({\n            makeAndModelError: true,\n            makeAndModel: this.state.makeAndModel\n          });\n          this.show(\"makeAndModel\", true, \"makeAndModelError\", \"Please enter less than 38\");\n        } else {\n          this.setState({\n            makeAndModel: e.target.value,\n            makeAndModelError: false\n          });\n          this.show(\"makeAndModel\", false, \"makeAndModelError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'length') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            lengthError: true\n          });\n          this.show(\"length\", true, \"lengthError\", \"Please enter length\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              lengthError: true\n            });\n            this.show(\"length\", true, \"lengthError\", \"Please enter valid length\");\n          } else {\n            this.setState({\n              lengthError: false,\n              length: e.target.value\n            });\n            this.show(\"length\", false, \"lengthError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'yearBuilt') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            yearBuiltError: true\n          });\n          this.show(\"yearBuilt\", true, \"yearBuiltError\", \"Please enter year built\");\n        } else {\n          let yearRegEx = CommonConfig.RegExp.year;\n          let year = e.target.value;\n          var minYear = moment().subtract(100, 'year').format('YYYY');\n          var maxYear = moment().year();\n\n          if (!yearRegEx.test(year) || year < minYear || year > maxYear) {\n            this.setState({\n              yearBuiltError: true\n            });\n            this.show(\"yearBuilt\", true, \"yearBuiltError\", \"Please enter valid year built\");\n          } else {\n            this.setState({\n              yearBuiltError: false,\n              yearBuilt: e.target.value\n            });\n            this.show(\"yearBuilt\", false, \"yearBuiltError\", \"\"); // var el = document.getElementById('vesselClass');\n            // var vesselClass = el.options[el.selectedIndex].innerHTML;\n\n            var vesselClass = this.state.VesselClassList.filter(e => e.value === this.state.vesselClass);\n\n            if (vesselClass.length) {\n              var SelectedClass = vesselClass[0].label;\n              let BoatAge = new Date().getFullYear() - e.target.value;\n\n              if (SelectedClass != 'Dinghy' && SelectedClass != 'Lake Boat' && SelectedClass != 'Personal Watercraft') {\n                this.setState({\n                  lastSurveyDateRequired: BoatAge >= 20 ? true : false\n                });\n              } else {\n                this.setState({\n                  lastSurveyDateRequired: false\n                });\n              }\n\n              this.show(\"lastSurveyDate\", BoatAge >= 30 ? '' : false, \"lastSurveyDateError\", BoatAge >= 30 ? \"\" : \"\");\n            }\n          }\n        }\n\n        var YBuilt = moment(e.target.value).format('YYYY');\n        this.setState({\n          YBuilt: YBuilt,\n          yearPurchased: ''\n        });\n      }\n\n      if (e.target.name === 'yearPurchased') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            yearPurchasedError: true\n          });\n          this.show(\"yearPurchased\", true, \"yearPurchasedError\", \"Please enter year purchased\");\n        } else {\n          let yearRegEx = CommonConfig.RegExp.year;\n          let year = e.target.value;\n          var Ybuilt = this.state.YBuilt;\n          var maxYear = moment().year();\n\n          if (!yearRegEx.test(year) || year < Ybuilt || year > maxYear) {\n            this.setState({\n              yearPurchasedError: true\n            });\n            this.show(\"yearPurchased\", true, \"yearPurchasedError\", \"Please enter valid year purchased\");\n          } else {\n            this.setState({\n              yearPurchasedError: false,\n              yearPurchased: e.target.value\n            });\n            this.show(\"yearPurchased\", false, \"yearPurchasedError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'purchasePrice') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            purchasePriceError: true\n          });\n          this.show(\"purchasePrice\", true, \"purchasePriceError\", \"Please enter purchase price\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              purchasePriceError: true\n            });\n            this.show(\"purchasePrice\", true, \"purchasePriceError\", \"Please enter valid purchase price\");\n          } else {\n            this.setState({\n              purchasePriceError: false,\n              purchasePrice: e.target.value\n            });\n            this.show(\"purchasePrice\", false, \"purchasePriceError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'sumInsured') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            sumInsuredError: true\n          });\n          this.show(\"sumInsured\", true, \"sumInsuredError\", \"Please enter sum insured\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              sumInsuredError: true\n            });\n            this.show(\"sumInsured\", true, \"sumInsuredError\", \"Please enter valid sum insured\");\n          } else {\n            this.setState({\n              sumInsuredError: false,\n              sumInsured: e.target.value\n            });\n            this.show(\"sumInsured\", false, \"sumInsuredError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'lastSurveyDate') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            lastSurveyDateError: true,\n            surveyDueDate: ''\n          }); // this.show(\"lastSurveyDate\", true, \"lastSurveyDateError\", \"Please enter Last Survey Date\");\n        } else if (moment(e.target.value).format('YYYY-MM-DD') > moment().format('YYYY-MM-DD')) {\n          this.setState({\n            lastSurveyDateError: true\n          });\n          this.show(\"lastSurveyDate\", true, \"lastSurveyDateError\", \"Please enter valid last survey date\");\n        } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().subtract(5, 'years').format('YYYY-MM-DD')) {\n          this.setState({\n            lastSurveyDateError: true\n          });\n          this.show(\"lastSurveyDate\", true, \"lastSurveyDateError\", \"Please enter valid last survey date\");\n        } else {\n          let SurveyDueDate = moment(e.target.value).add(5, 'years').format('YYYY-MM-DD');\n          this.setState({\n            lastSurveyDateError: false,\n            lastSurveyDate: e.target.value,\n            surveyDueDate: SurveyDueDate\n          });\n          this.show(\"lastSurveyDate\", false, \"lastSurveyDateError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'mainEngine') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            mainEngineError: true\n          });\n          this.show(\"mainEngine\", true, \"mainEngineError\", \"Please enter main engine \");\n        } else if (e.target.value.length > 200) {\n          this.setState({\n            mainEngineError: true,\n            mainEngine: this.state.mainEngine\n          });\n          this.show(\"mainEngine\", true, \"mainEngineError\", \"Please enter less than 200\");\n        } else {\n          this.setState({\n            mainEngine: e.target.value,\n            mainEngineError: false\n          });\n          this.show(\"mainEngine\", false, \"mainEngineError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'mainEngineHp') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            mainEngineHpError: true\n          });\n          this.show(\"mainEngineHp\", true, \"mainEngineHpError\", \"Please enter main engine HP\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              mainEngineHpError: true\n            });\n            this.show(\"mainEngineHp\", true, \"mainEngineHpError\", \"Please enter valid main engine HP\");\n          } else {\n            this.setState({\n              mainEngineHpError: false,\n              mainEngineHp: e.target.value\n            });\n            this.show(\"mainEngineHp\", false, \"mainEngineHpError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'mainEngineSerialNo') {\n        if (CommonConfig.isEmpty(e.target.value) || !alphaNumeric.test(e.target.value)) {\n          this.setState({\n            mainEngineSerialNoError: true\n          });\n          this.show(\"mainEngineSerialNo\", true);\n        } else {\n          this.setState({\n            mainEngineSerialNoError: false,\n            mainEngineSerialNo: e.target.value\n          });\n          this.show(\"mainEngineSerialNo\", false);\n        }\n      }\n\n      if (e.target.name === 'mainEngineYear') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            mainEngineYearError: true\n          });\n          this.show(\"mainEngineYear\", true, \"mainEngineYearError\", \"Please enter main engine year\");\n        } else {\n          let yearRegEx = CommonConfig.RegExp.year;\n          let year = e.target.value;\n          var minYear = moment().subtract(100, 'year').format('YYYY');\n          var maxYear = moment().year();\n\n          if (!yearRegEx.test(year) || year < minYear || year > maxYear) {\n            this.setState({\n              mainEngineYearError: true\n            });\n            this.show(\"mainEngineYear\", true, \"mainEngineYearError\", \"Please enter valid main engine year\");\n          } else {\n            this.setState({\n              mainEngineYearError: false,\n              mainEngineYear: e.target.value\n            });\n            this.show(\"mainEngineYear\", false, \"mainEngineYearError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'auxiliaryEngine') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            auxiliaryEngineError: true\n          });\n          this.show(\"auxiliaryEngine\", true, \"auxiliaryEngineError\", \"Please enter auxiliary engine \");\n        } else if (e.target.value.length > 200) {\n          this.setState({\n            auxiliaryEngineError: true,\n            auxiliaryEngine: this.state.auxiliaryEngine\n          });\n          this.show(\"auxiliaryEngine\", true, \"auxiliaryEngineError\", \"Please enter less than 200\");\n        } else {\n          this.setState({\n            auxiliaryEngine: e.target.value,\n            auxiliaryEngineError: false\n          });\n          this.show(\"auxiliaryEngine\", false, \"auxiliaryEngineError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'auxiliaryEngineHp') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            auxiliaryEngineHpError: true\n          });\n          this.show(\"auxiliaryEngineHp\", true, \"auxiliaryEngineHpError\", \"Please enter auxiliary engine HP\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              auxiliaryEngineHpError: true\n            });\n            this.show(\"auxiliaryEngineHp\", true, \"auxiliaryEngineHpError\", \"Please enter valid auxiliary engine HP\");\n          } else {\n            this.setState({\n              auxiliaryEngineHpError: false,\n              auxiliaryEngineHp: e.target.value\n            });\n            this.show(\"auxiliaryEngineHp\", false, \"auxiliaryEngineHpError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'auxiliaryEngineSerialNo') {\n        if (CommonConfig.isEmpty(e.target.value) || !alphaNumeric.test(e.target.value)) {\n          this.setState({\n            auxiliaryEngineSerialNoError: true\n          });\n          this.show(\"auxiliaryEngineSerialNo\", true);\n        } else {\n          this.setState({\n            auxiliaryEngineSerialNoError: false,\n            auxiliaryEngineSerialNo: e.target.value\n          });\n          this.show(\"auxiliaryEngineSerialNo\", false);\n        }\n      }\n\n      if (e.target.name === 'auxiliaryEngineYear') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            auxiliaryEngineYearError: true\n          });\n          this.show(\"auxiliaryEngineYear\", true, \"auxiliaryEngineYearError\", \"Please enter auxiliary engine year\");\n        } else {\n          let yearRegEx = CommonConfig.RegExp.year;\n          let year = e.target.value;\n\n          if (!yearRegEx.test(year)) {\n            this.setState({\n              auxiliaryEngineYearError: true\n            });\n            this.show(\"auxiliaryEngineYear\", true, \"auxiliaryEngineYearError\", \"Please enter valid auxiliary engine year\");\n          } else {\n            this.setState({\n              auxiliaryEngineYearError: false,\n              auxiliaryEngineYear: e.target.value\n            });\n            this.show(\"auxiliaryEngineYear\", false, \"auxiliaryEngineYearError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'maxSpeed') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            maxSpeedError: true\n          });\n          this.show(\"maxSpeed\", true, \"maxSpeedError\", \"Please enter max speed\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              maxSpeedError: true\n            });\n            this.show(\"maxSpeed\", true, \"maxSpeedError\", \"Please enter valid max speed\");\n          } else {\n            this.setState({\n              maxSpeedError: false,\n              maxSpeed: e.target.value\n            });\n            this.show(\"maxSpeed\", false, \"maxSpeedError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'makeofTrailer') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            makeofTrailerError: true\n          });\n          this.show(\"makeofTrailer\", true, \"makeofTrailerError\", \"Please enter make of trailer \");\n        } else if (e.target.value.length > 50) {\n          this.setState({\n            makeofTrailerError: true,\n            makeofTrailer: this.state.makeofTrailer\n          });\n          this.show(\"makeofTrailer\", true, \"makeofTrailerError\", \"Please enter less than 50\");\n        } else {\n          this.setState({\n            makeofTrailer: e.target.value,\n            makeofTrailerError: false\n          });\n          this.show(\"makeofTrailer\", false, \"makeofTrailerError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'trailerSerialNo') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            trailerSerialNoError: true\n          });\n          this.show(\"trailerSerialNo\", true, \"trailerSerialNoError\", \"Please enter trailer serial no\");\n        } else {\n          let alphaNumericRegEx = CommonConfig.RegExp.alphaNumeric;\n          let alphaNumeric = e.target.value;\n\n          if (!alphaNumericRegEx.test(alphaNumeric)) {\n            this.setState({\n              trailerSerialNoError: true\n            });\n            this.show(\"trailerSerialNo\", true, \"trailerSerialNoError\", \"Please enter valid trailer serial no\");\n          } else if (e.target.value.length > 50) {\n            this.setState({\n              trailerSerialNoError: true,\n              trailerSerialNo: this.state.trailerSerialNo\n            });\n            this.show(\"trailerSerialNo\", true, \"trailerSerialNoError\", \"Please enter less than 50\");\n          } else {\n            this.setState({\n              trailerSerialNoError: false,\n              trailerSerialNo: e.target.value\n            });\n            this.show(\"trailerSerialNo\", false, \"trailerSerialNoError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'additionalCruisingRange') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            additionalCruisingRangeError: true\n          });\n          this.show(\"additionalCruisingRange\", true, \"additionalCruisingRangeError\", \"Please enter additional cruising range\");\n        } else if (e.target.value.length > 500) {\n          this.setState({\n            additionalCruisingRangeError: true,\n            additionalCruisingRange: this.state.additionalCruisingRange\n          });\n          this.show(\"additionalCruisingRange\", true, \"additionalCruisingRangeError\", \"Please enter less than 500\");\n        } else {\n          this.setState({\n            additionalCruisingRange: e.target.value,\n            additionalCruisingRangeError: false\n          });\n          this.show(\"additionalCruisingRange\", false, \"additionalCruisingRangeError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'previousPolicyNo') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            previousPolicyNoError: true\n          });\n          this.show(\"previousPolicyNo\", true, \"previousPolicyNoError\", \"Please enter previous policy no\");\n        } else {\n          let alphaNumericRegEx = CommonConfig.RegExp.alphaNumeric;\n          let alphaNumeric = e.target.value;\n\n          if (!alphaNumericRegEx.test(alphaNumeric)) {\n            this.setState({\n              previousPolicyNoError: true\n            });\n            this.show(\"previousPolicyNo\", true, \"previousPolicyNoError\", \"Please enter valid policy no\");\n          } else {\n            this.setState({\n              previousPolicyNoError: false,\n              previousPolicyNo: e.target.value\n            });\n            this.show(\"previousPolicyNo\", false, \"previousPolicyNoError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'lossesDescribe') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            lossesDescribeError: true\n          });\n          this.show(\"lossesDescribe\", true, \"lossesDescribeError\", \"Please enter losses describe\");\n        } else if (e.target.value.length > 500) {\n          this.setState({\n            lossesDescribeError: true,\n            lossesDescribe: this.state.lossesDescribe\n          });\n          this.show(\"lossesDescribe\", true, \"lossesDescribeError\", \"Please enter less than 500\");\n        } else {\n          this.setState({\n            lossesDescribe: e.target.value,\n            lossesDescribeError: false\n          });\n          this.show(\"lossesDescribe\", false, \"lossesDescribeError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'convictedDescribe') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            convictedDescribeError: true\n          });\n          this.show(\"convictedDescribe\", true, \"convictedDescribeError\", \"Please enter convicted describe\");\n        } else if (e.target.value.length > 500) {\n          this.setState({\n            convictedDescribeError: true,\n            convictedDescribe: this.state.convictedDescribe\n          });\n          this.show(\"convictedDescribe\", true, \"convictedDescribeError\", \"Please enter less than 500\");\n        } else {\n          this.setState({\n            convictedDescribe: e.target.value,\n            convictedDescribeError: false\n          });\n          this.show(\"convictedDescribe\", false, \"convictedDescribeError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'insurancecanceledDescribe') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            insurancecanceledDescribeError: true\n          });\n          this.show(\"insurancecanceledDescribe\", true, \"insurancecanceledDescribeError\", \"Please enter insurance canceled Describe\");\n        } else if (e.target.value.length > 500) {\n          this.setState({\n            insurancecanceledDescribeError: true,\n            insurancecanceledDescribe: this.state.insurancecanceledDescribe\n          });\n          this.show(\"insurancecanceledDescribe\", true, \"insurancecanceledDescribeError\", \"Please enter less than 500\");\n        } else {\n          this.setState({\n            insurancecanceledDescribe: e.target.value,\n            insurancecanceledDescribeError: false\n          });\n          this.show(\"insurancecanceledDescribe\", false, \"insurancecanceledDescribeError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'damagedDescribe') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            damagedDescribeError: true\n          });\n          this.show(\"damagedDescribe\", true, \"damagedDescribeError\", \"Please enter damaged describe\");\n        } else if (e.target.value.length > 500) {\n          this.setState({\n            damagedDescribeError: true,\n            damagedDescribe: this.state.damagedDescribe\n          });\n          this.show(\"damagedDescribe\", true, \"damagedDescribeError\", \"Please enter less than 500\");\n        } else {\n          this.setState({\n            damagedDescribe: e.target.value,\n            damagedDescribeError: false\n          });\n          this.show(\"damagedDescribe\", false, \"damagedDescribeError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'isWaterSkiing') {\n        if (e.target.checked) {\n          this.setState({\n            isWaterSkiing: e.target.checked,\n            waterSkiingLiability: this.state.systemWaterSkiingLiability\n          });\n        } else {\n          this.setState({\n            isWaterSkiing: e.target.checked,\n            waterSkiingLiability: ''\n          });\n        }\n      }\n\n      if (e.target.name === 'waterSkiingLiability') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            waterSkiingLiabilityError: true\n          });\n          this.show(\"waterSkiingLiability\", true, \"waterSkiingLiabilityError\", \"Please enter water skiing liability\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              waterSkiingLiabilityError: true\n            });\n            this.show(\"waterSkiingLiability\", true, \"waterSkiingLiabilityError\", \"Please enter valid water skiing liability\");\n          } else {\n            this.setState({\n              waterSkiingLiabilityError: false,\n              waterSkiingLiability: e.target.value\n            });\n            this.show(\"waterSkiingLiability\", false, \"waterSkiingLiabilityError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'isWaterToys') {\n        if (e.target.checked) {\n          this.setState({\n            isWaterToys: e.target.checked,\n            waterToysLiability: this.state.systemWaterToysLiabiility\n          });\n        } else {\n          this.setState({\n            isWaterToys: e.target.checked,\n            waterToysLiability: ''\n          });\n        }\n      }\n\n      if (e.target.name === 'waterToysLiability') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            waterToysLiabilityError: true\n          });\n          this.show(\"waterToysLiability\", true, \"waterToysLiabilityError\", \"Please enter water toys liability\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              waterToysLiabilityError: true\n            });\n            this.show(\"waterToysLiability\", true, \"waterToysLiabilityError\", \"Please enter valid water toys liability\");\n          } else {\n            this.setState({\n              waterToysLiabilityError: false,\n              waterToysLiability: e.target.value\n            });\n            this.show(\"waterToysLiability\", false, \"waterToysLiabilityError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'isSailRacing') {\n        if (e.target.checked) {\n          this.setState({\n            isSailRacing: e.target.checked\n          });\n        } else {\n          this.setState({\n            isSailRacing: e.target.checked\n          });\n        }\n      }\n\n      if (e.target.name === 'sailRacingCoverage') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            sailRacingCoverageError: true\n          });\n          this.show(\"sailRacingCoverage\", true, \"sailRacingCoverageError\", \"Please enter sail racing coverage\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              sailRacingCoverageError: true\n            });\n            this.show(\"sailRacingCoverage\", true, \"sailRacingCoverageError\", \"Please enter valid sail racing coverage\");\n          } else {\n            this.setState({\n              sailRacingCoverageError: false,\n              sailRacingCoverage: e.target.value\n            });\n            this.show(\"sailRacingCoverage\", false, \"sailRacingCoverageError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'AssumptionAndTerms') {\n        console.log(e.target.checked);\n\n        if (e.target.checked) {\n          this.setState({\n            AssumptionAndTerms: e.target.checked,\n            AssumptionAndTermsError: false\n          });\n        } else {\n          this.setState({\n            AssumptionAndTerms: e.target.checked,\n            AssumptionAndTermsError: true\n          });\n        }\n      } // SAGAR\n\n    };\n\n    let Options = [{\n      StringMapKey: \"Yes\",\n      StringMapName: \"Yes\"\n    }, {\n      StringMapKey: \"No\",\n      StringMapName: \"No\"\n    }];\n    this.state = {\n      //Sagar\n      //Common\n      PolicyId: '',\n      isInsert: true,\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      Status: 'Active',\n      PolicyStatus: 'Quotation',\n      LoginUserType: '',\n      addOnCoverageArr: [],\n      addOnCoverageCount: '',\n      assumptionArr: [],\n      assumptionCount: '',\n      //User\n      EntityId: '',\n      EntityType: '',\n      Policy_Holder: '',\n      Policy_Holder_Email: '',\n      Policy_Holder_Address: '',\n      Policy_Holder_Conatct: '',\n      ContactCode: '',\n      // Policy\n      policyNumber: '',\n      policyNumberError: false,\n      changePolicyNumber: false,\n      refer: false,\n      TPO: false,\n      countryList: [],\n      country: '',\n      countryError: true,\n      policyTypeList: [],\n      policyType: '',\n      policyTypeError: true,\n      documentLanguageList: [],\n      documentLanguage: '',\n      documentLanguageError: true,\n      currencyList: [],\n      currency: '',\n      currencyError: true,\n      PolicyDepartment: '',\n      departmentList: [],\n      PolicyDepartmentError: true,\n      source: '',\n      sourceError: false,\n      sourceList: [],\n      sourceDisplay: false,\n      rate: '',\n      rateError: false,\n      ratingType: '',\n      excess: '',\n      excessError: false,\n      isShowNonRateParams: 0,\n      isEditDocLang: false,\n      isEditCurrency: false,\n      // Policy\n      // -----------------------------------------------------------\n      //Vessel\n      VesselClassList: [],\n      vesselClass: '',\n      VesselClassError: true,\n      vesselTypeList: [],\n      vesselType: '',\n      vesselTypeError: true,\n      vesselName: '',\n      vesselNameError: true,\n      UseofVesselList: [],\n      UseofVessel: '',\n      UseofVesselError: true,\n      hullMaterialList: [],\n      hullMaterial: '',\n      hullMaterialError: true,\n      makeAndModel: '',\n      makeAndModelError: true,\n      length: '',\n      lengthError: true,\n      vesselBuildType: '',\n      vesselBuildTypearr: [],\n      vesselBuildTypeError: true,\n      lastSurveyDateRequired: false,\n      lastSurveyDate: '',\n      lastSurveyDateError: true,\n      surveyDueDate: '',\n      yearBuilt: '',\n      yearBuiltError: true,\n      YBuilt: '',\n      yearPurchased: '',\n      yearPurchasedError: true,\n      purchasePrice: '',\n      purchasePriceError: true,\n      sumInsured: '',\n      sumInsuredError: true,\n      sumInsuredMethodList: [],\n      sumInsuredMethod: '',\n      sumInsuredMethodError: true,\n      whereRegList: [],\n      whereReg: '',\n      whereRegError: true,\n      boatMooredList: [],\n      boatMoored: '',\n      boatMooredError: true,\n      mooringTypeList: [],\n      mooringType: '',\n      mooringTypeError: true,\n      //Vessel\n      // -----------------------------------------------------------\n      // Engine & Trailer Details\n      mainEngine: '',\n      mainEngineError: true,\n      mainEngineHp: '',\n      mainEngineHpError: true,\n      mainEngineYear: '',\n      mainEngineYearError: true,\n      mainengineSerialNoLabel: \"Main Engine Serial Number\",\n      mainEngineSerialNo: '',\n      mainEngineSerialNoError: true,\n      noOfEngineList: [],\n      noOfMainEngine: '',\n      noOfMainEngineError: true,\n      tarnsmissionMainEngine: '',\n      tarnsmissionMainEngineList: [],\n      tarnsmissionMainEngineError: true,\n      auxiliaryEngine: '',\n      auxiliaryEngineError: true,\n      auxiliaryEngineHp: '',\n      auxiliaryEngineHpError: true,\n      auxiliaryEngineYear: '',\n      auxiliaryEngineYearError: true,\n      auxiliaryEngineSerialNoLabel: \"Auxiliary Engine Serial Number\",\n      auxiliaryEngineSerialNo: '',\n      auxiliaryEngineSerialNoError: true,\n      noOfAuxiliaryEngine: '',\n      noOfAuxiliaryEngineError: true,\n      auxiliaryEngineTransmission: '',\n      auxiliaryEngineTransmissionarr: [],\n      auxiliaryEngineTransmissionError: true,\n      maxSpeed: '',\n      maxSpeedError: true,\n      makeofTrailer: '',\n      makeofTrailerError: true,\n      trailerSerialNo: '',\n      trailerSerialNoError: true,\n      // Engine & Trailer Details\n      // -----------------------------------------------------------\n      // Navigational Limits\n      cruisingRangeList: [],\n      cruisingRange: '',\n      cruisingRangeError: true,\n      additionalCruisingRange: '',\n      additionalCruisingRangeError: true,\n      // Navigational Limits\n      // -----------------------------------------------------------\n      // General Questions\n      PreviousBoatingExperienceList: [],\n      PreviousBoatingExperience: '',\n      PreviousBoatingExperienceError: true,\n      CurrentNCBYearsList: [],\n      CurrentNCBYears: '',\n      CurrentNCBYearsError: true,\n      previousInsurerList: [],\n      previousInsurer: \"\",\n      previousInsurerError: false,\n      previousPolicyNo: \"\",\n      previousPolicyNoError: false,\n      boatingQualifications: '',\n      boatingQualificationsArr: [],\n      boatingQualificationsError: true,\n      boatingQualificationList: [],\n      boatingQualificationAllList: [],\n      Options: Options,\n      losses: '',\n      lossesError: true,\n      lossesDescribe: '',\n      lossesDescribeError: true,\n      showLossesDescribe: false,\n      convicted: '',\n      convictedError: true,\n      convictedDescribe: '',\n      convictedDescribeError: true,\n      showconvictedDescribe: false,\n      insurancecanceled: '',\n      insurancecanceledError: true,\n      insurancecanceledDescribe: '',\n      insurancecanceledDescribeError: true,\n      showinsurancecanceledDescribe: false,\n      damaged: '',\n      damagedError: true,\n      damagedDescribe: '',\n      damagedDescribeError: true,\n      showdamagedDescribe: false,\n      // General Questions\n      // -----------------------------------------------------------\n      // Limits / Additional Cover\n      DisplayWater: 0,\n      DisplayRacing: 0,\n      DisplayCrew: 0,\n      ThirdPartyLiabilityList: [],\n      thirdPartyLiability: '',\n      thirdPartyLiabilityError: true,\n      isWaterSkiing: false,\n      waterSkiingLiability: '',\n      systemWaterSkiingLiability: '',\n      isWaterToys: false,\n      waterToysLiability: '',\n      systemWaterToysLiabiility: '',\n      isSailRacing: false,\n      sailRacingCoverage: '',\n      RacingEventTypeList: [],\n      racingEventType: '',\n      racingEventTypeError: true,\n      CrewLiabilityList: [],\n      crewLiability: '',\n      crewLiabilityError: true,\n      policyEffectiveDate: '',\n      renewalDate: '',\n      policyEffectiveDateError: true,\n      // Limits / Additional Cover\n      // PolicySumInsured\n      conditionalVessel: 1,\n      conditionalEngine: 1,\n      conditionalNavigation: 1,\n      conditionalGeneral: 1,\n      conditionalLimits: 1,\n      binderList: [],\n      binder: '',\n      binderError: true,\n      premium: '',\n      premiumError: true,\n      levy: '',\n      levyError: true,\n      adminFee: '',\n      adminFeeError: true,\n      total: '',\n      // PolicySumInsured\n      binder: '',\n      binderError: false,\n      premium: '',\n      premiumError: false,\n      levy: '',\n      levyError: false,\n      adminFee: '',\n      adminFeeError: false,\n      // PolicySumInsured\n      AssumptionAndTerms: false,\n      AssumptionAndTermsError: false,\n      sumInsuredMethodList: [],\n      CrewLiabilityList: [],\n      RacingEventTypeList: [],\n      ThirdPartyLiabilityList: [] //Sagar\n\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.getPolicyContactDetails(this.props.match.params.Id);\n\n      if (this.props.match.params.PolicyId && this.props.match.params.PolicyId !== undefined) {\n        //get policy details\n        this.setState({\n          PolicyId: this.props.match.params.PolicyId,\n          isInsert: false\n        });\n      } else {\n        this.setState({\n          isEditDocLang: true,\n          isEditCurrency: true,\n          country: '',\n          policyType: \"Vessel\",\n          documentLanguage: \"English\",\n          currency: \"EUR\",\n          policyEffectiveDate: moment().format('YYYY-MM-DD'),\n          renewalDate: moment().add(365, 'days').format('YYYY-MM-DD'),\n          PolicyDepartment: 'Direct',\n          countryError: false,\n          documentLanguageError: false,\n          policyTypeError: false,\n          currencyError: false,\n          policyEffectiveDateError: false,\n          PolicyDepartmentError: false,\n          sumInsuredMethod: 'Market Value',\n          sumInsuredMethodError: false\n        });\n        setTimeout(() => {\n          let ThirdPartyStringMapType = CommonConfig.ThirdPartyStringMapOnCountry(this.state.country);\n          this.getDropDownValues(ThirdPartyStringMapType, 'ThirdPartyLiabilityList', 'SortOrder');\n        }, 500);\n      }\n    }\n\n    let userType = CommonConfig.loggedInUserData().ContactType;\n    this.setState({\n      LoginUserType: userType\n    });\n    this.setState({\n      AssumptionAndTerms: userType == \"InternalStaff\" ? true : false\n    });\n    this.boatingQualificationDropdown();\n    this.getMooringZones();\n    this.getDropdown();\n    this.getWaterSkiiAndWaterToys();\n    this.getCruisingRangeList();\n    this.getBoatRegisterList();\n    this.getNextPolicyNumer();\n    this.getDropDownValues('PREVIOUSBOATINGEXPERIENCE', 'PreviousBoatingExperienceList', 'SortOrder');\n    this.getDropDownValues('PREVIOUSINSURER', 'previousInsurerList', 'StringMapName');\n    this.getDropDownValues('CURRENTNCBYEARS', 'CurrentNCBYearsList', 'SortOrder');\n    this.getDropDownValues('SUMINSUREDMETHOD', 'sumInsuredMethodList', 'StringMapName');\n    this.getDropDownValues('BOATINGQUALIFICATIONS', 'boatingQualificationAllList', 'StringMapName');\n    this.getDropDownValues('CREWLIABILITY', 'CrewLiabilityList', 'SortOrder');\n    this.getDropDownValues('RACINGEVENTTYPE', 'RacingEventTypeList', 'StringMapName');\n    this.getDropDownValues('NOOFENGINES', 'noOfEngineList', 'StringMapName');\n    this.getDropDownValues('TRANSMISSIONS', 'tarnsmissionMainEngineList', 'StringMapName');\n    this.getDropDownValues('POLICYCOUNTRY', 'countryList', 'StringMapName');\n    this.getDropDownValues('POLICYTYPE', 'policyTypeList', 'StringMapName');\n    this.getDropDownValues('HULLMATERIAL', 'hullMaterialList', 'StringMapName');\n    this.getDropDownValues('TYPEOFBUILD', 'vesselBuildTypearr', 'StringMapName');\n    this.getDropDownValues('POLICYDEPARTMENT', 'departmentList');\n  }\n\n  getPolicyContactDetails(id) {\n    const data = {\n      id: id\n    };\n    this.setState({\n      EntityId: id\n    });\n    api.post('api/getContactList', data).then(res => {\n      if (res.success) {\n        console.log(\"getContactList\", res.data);\n        this.setState({\n          Policy_Holder: res.data[0].fullname,\n          Policy_Holder_Email: res.data[0].Email,\n          Policy_Holder_Address: (CommonConfig.isEmpty(res.data[0].addr) ? '' : res.data[0].addr + ', ') + res.data[0].Country + ', ' + res.data[0].PostalCode,\n          Policy_Holder_Conatct: CommonConfig.formatPhone(res.data[0].CountryCode, res.data[0].AreaCode, res.data[0].PhoneNumber),\n          EntityType: res.data[0].EntityType,\n          ContactCode: ' (#' + res.data[0].ContactCode + ')'\n        });\n        this.setState({\n          vesselClass: '',\n          VesselClassError: true,\n          vesselType: '',\n          vesselTypeError: true\n        });\n        var resCountry = res.data[0].Country;\n        var newCountry = this.state.countryList.find(x => x.StringMapKey === resCountry);\n\n        if (newCountry) {\n          this.getVesselClassByCountry(res.data[0].Country, this.state.TPO);\n          this.setState({\n            country: newCountry.StringMapKey\n          });\n\n          if (newCountry == \"UK\") {\n            this.setState({\n              currency: \"GBP\"\n            });\n          } else {\n            this.setState({\n              currency: \"EUR\"\n            });\n          }\n        } else {\n          this.setState({\n            country: \"Ireland\"\n          });\n          this.getVesselClassByCountry(\"Ireland\", this.state.TPO);\n        }\n      } else {}\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  }\n\n  getWaterSkiiAndWaterToys() {\n    api.post('api/getWaterSkiiAndWaterToys').then(res => {\n      console.log(res.data);\n\n      if (res.success) {\n        this.setState({\n          systemWaterSkiingLiability: res.data[0].WaterSkiingLiability,\n          systemWaterToysLiabiility: res.data[0].WaterToysLiabiility\n        });\n      }\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  }\n\n  getBinderByPolicyType(stringType) {\n    debugger;\n    var data = {\n      stringMapType: stringType\n    };\n    api.post('api/getBinderByPolicyType', data).then(res => {\n      console.log('getBinderByPolicyType', res.data);\n\n      if (res.success) {\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            label: res.data[i].UMRN,\n            value: res.data[i].BinderId\n          });\n        }\n\n        this.setState({\n          binderList: formattedData\n        });\n      }\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  }\n\n  getDropdown() {\n    var formattedLanguage = []; // Get Language\n\n    try {\n      api.get(APIConstant.path.getLanguage).then(res => {\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            formattedLanguage.push({\n              label: res.data[i].Language,\n              value: res.data[i].Language\n            });\n          }\n\n          this.setState({\n            documentLanguageList: formattedLanguage\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (err) {}\n\n    var formattedCurrency = []; // Get Currency\n\n    try {\n      api.get(APIConstant.path.getCurrency).then(res => {\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            formattedCurrency.push({\n              label: res.data[i].CurrncyCode,\n              value: res.data[i].CurrncyCode\n            });\n          }\n\n          this.setState({\n            currencyList: formattedCurrency\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (err) {} // var formattedVesselClass = [];\n    // // Get Vessel Class\n    // try {\n    //     api.get(APIConstant.path.getVesselClass).then(res => {\n    //         if (res.success) {\n    //             for (var i = 0; i < res.data.length; i++) {\n    //                 formattedVesselClass.push({\n    //                     label: res.data[i].VesselClassName,\n    //                     value: res.data[i].VesselClassId,\n    //                 });\n    //             }\n    //             this.setState({ VesselClassList: formattedVesselClass });\n    //         } else {\n    //         }\n    //     }).catch(err => {\n    //     });\n    // } catch (err) {\n    // }\n\n  }\n\n  editDocLang(task) {\n    if (task == 'View') {\n      this.setState({\n        isEditDocLang: false\n      });\n    } else {\n      this.setState({\n        isEditDocLang: true\n      });\n    }\n  }\n\n  editCurrency(task) {\n    if (task == 'View') {\n      this.setState({\n        isEditCurrency: false\n      });\n    } else {\n      this.setState({\n        isEditCurrency: true\n      });\n    }\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getVesselClassByCountry(country, TPO) {\n    try {\n      const data = {\n        Country: country,\n        TPO: TPO ? 1 : 0\n      };\n      console.log('getVesselClassByCountry', data);\n      api.post(APIConstant.path.getVesselClassByCountry, data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n          console.log('getVesselClassByCountry', res);\n\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].VesselClassName,\n              value: res.data[i].VesselClassId\n            });\n          }\n\n          this.setState({\n            VesselClassList: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getVesselType(id, Country, TPO) {\n    try {\n      const data = {\n        VesselClassId: id,\n        Country: Country,\n        TPO: TPO ? 1 : 0\n      };\n      console.log('getVesselTypeByCountry', data);\n      api.post(APIConstant.path.getVesselTypeByCountry, data).then(res => {\n        console.log('getVesselTypeByCountry', res);\n\n        if (res.success) {\n          var formattedData = [];\n\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].VesselTypeName,\n              value: res.data[i].VesselTypeId\n            });\n          }\n\n          this.setState({\n            vesselTypeList: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  } // getVesselType(id) {\n  //     try {\n  //         const data = {\n  //             VesselClassId: id\n  //         };\n  //         api.post(APIConstant.path.getVesselType, data).then(res => {\n  //             if (res.success) {\n  //                 var formattedData = [];\n  //                 for (var i = 0; i < res.data.length; i++) {\n  //                     formattedData.push({\n  //                         label: res.data[i].VesselTypeName,\n  //                         value: res.data[i].VesselTypeId,\n  //                     });\n  //                 }\n  //                 this.setState({ vesselTypeList: formattedData });\n  //             } else {\n  //             }\n  //         }).catch(err => {\n  //         });\n  //     } catch (error) {\n  //     }\n  // }\n\n\n  getDefaultAddonCoverage(id) {\n    try {\n      const data = {\n        VesselTypeId: id\n      };\n      api.post(APIConstant.path.getDefaultAddonCoverage, data).then(res => {\n        if (res.success) {\n          this.setState({\n            addOnCoverageCount: res.data.length,\n            addOnCoverageArr: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getAssumption(id) {\n    try {\n      const data = {\n        VesselTypeId: id\n      };\n      api.post(APIConstant.path.getAssumption, data).then(res => {\n        if (res.success) {\n          this.setState({\n            assumptionCount: res.data.length,\n            assumptionArr: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getMooringZones() {\n    const data = {\n      pMode: 'mooringName',\n      zone: 'Irish Website',\n      mooringName: '',\n      mooringType: '',\n      PolicyId: ''\n    };\n    api.post('api/getMooringGuideDetails', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            label: res.data[i].MooringName,\n            value: res.data[i].MooringName\n          });\n        }\n\n        this.setState({\n          boatMooredList: formattedData\n        });\n      }\n    }).catch(err => {}); // try {\n    //     const data = {\n    //         zone: 'Irish Website',\n    //         isStringMap: 0,\n    //         PolicyId: this.state.PolicyId,\n    //         DDName: 'MooringName'\n    //     };\n    //     api.post(APIConstant.path.getcommondropdown, data).then(res => {\n    //         console.log('-p-o-p-p--o-l--p-l-k-l-l-',res);                    \n    //         if (res.success) {\n    //             var formattedData = [];\n    //             for (let i = 0; i < res.data.length; i++) {\n    //                 formattedData.push({\n    //                     label: res.data[i].MooringName,\n    //                     value: res.data[i].MooringName,\n    //                 })\n    //             }\n    //             this.setState({ boatMooredList: formattedData });\n    //         } else {\n    //         }\n    //     }).catch(err => {\n    //     });\n    // } catch (error) {\n    // }\n  }\n\n  getCruisingRangeList() {\n    try {\n      const data = {\n        stringmaptype: 'CRUISINGRANGE',\n        orderby: 'SortOrder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].Description,\n              value: res.data[i].StringMapKey\n            });\n          }\n\n          this.setState({\n            cruisingRangeList: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getBoatRegisterList() {\n    try {\n      const data = {\n        stringmaptype: 'COUNTRY',\n        orderby: 'StringMapName'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].StringMapKey\n            });\n          }\n\n          this.setState({\n            whereRegList: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getmooringType(value) {\n    let data = {\n      mooring_Type: value\n    };\n    api.post('api/getMooringTypeDataByMoored', data).then(res => {\n      if (res.success) {\n        var mooringType = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          mooringType.push({\n            label: res.data[i].MooringType,\n            value: res.data[i].MooringGuideId\n          });\n        }\n\n        this.setState({\n          mooringTypeList: mooringType\n        });\n      }\n    });\n  }\n\n  getNextPolicyNumer() {\n    api.post(APIConstant.path.getNextPolicyNumer).then(res => {\n      if (res.success) {\n        var tempPolicyNumber = '';\n        console.log('getNextPolicyNumer', res.data[0].PolicyNumber);\n        tempPolicyNumber = res.data[0].PolicyNumber + 1;\n        console.log('tempPolicyNumber', tempPolicyNumber);\n        this.setState({\n          policyNumber: tempPolicyNumber\n        });\n      }\n    });\n  }\n\n  async checkPolicyNumberExists(policyNumber) {\n    this.setState({\n      changePolicyNumber: false\n    });\n    let data = {\n      PolicyNumber: policyNumber\n    };\n    var returnval = await api.post(APIConstant.path.checkPolicyNumberExists, data).then(res => {\n      if (res.success) {\n        if (res.data.length != 0) {\n          toast.error(\"Policy Number Already Exists\");\n          this.setState({\n            policyNumberError: true\n          });\n          this.show(\"policyNumber\", true, \"policyNumberError\", \"Policy Number Already Exists\");\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    });\n    return returnval;\n  }\n\n  editPolicyNumber() {\n    console.log('this.state.changePolicyNumber', this.state.changePolicyNumber);\n    this.setState({\n      changePolicyNumber: !this.state.changePolicyNumber\n    });\n\n    if (this.state.changePolicyNumber) {\n      this.checkPolicyNumberExists(this.state.policyNumber);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  boatingQualificationDropdown() {\n    try {\n      const data = {\n        stringmaptype: \"BOATINGQUALIFICATIONS\",\n        orderby: 'StringMapName'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var listData = res.data;\n          this.state.boatingQualificationsArr.forEach(data => {\n            let index = listData.findIndex(x => x.StringMapKey === data.BoatingQualification);\n            res.data.splice(index, 1);\n          });\n          this.setState({\n            boatingQualificationList: listData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  openModal(modal) {\n    if (modal == 'Delete') {\n      this.setState({\n        toggleModal: !this.state.toggleModal\n      });\n    } else if (modal == 'Assumption') {\n      this.setState({\n        toggleAssumption: !this.state.toggleAssumption\n      });\n    } else if (modal == 'TermsAndCondition') {\n      this.setState({\n        toggleTermsAndCondition: !this.state.toggleTermsAndCondition\n      });\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  suggestPreviousInsurer(event) {\n    console.log('this.state.previousInsurerList', this.state.previousInsurerList);\n    let results = this.state.previousInsurerList.filter(previousInsurerData => {\n      var previousInsurerName = previousInsurerData.StringMapName;\n      return previousInsurerName.toLowerCase().startsWith(event.query.toLowerCase());\n    });\n    console.log('this.state.previousInsurerList', results);\n    var previousInsurerResult = [];\n    results.forEach(res => {\n      previousInsurerResult.push(res.StringMapName);\n    });\n    this.setState({\n      previousInsurerSuggestions: previousInsurerResult\n    });\n  }\n\n  changePreviousInsurer(value) {\n    console.log(\"changePreviousInsurer >\", value);\n\n    if (CommonConfig.isEmpty(value)) {\n      this.setState({\n        previousInsurerError: true,\n        previousInsurer: value\n      });\n      this.show('previousInsurer', true, 'previousInsurerError', 'Please select previous insurer');\n    } else {\n      this.setState({\n        previousInsurerError: false,\n        previousInsurer: value\n      });\n      this.show('previousInsurer', false, 'previousInsurerError', '');\n      let results = this.state.previousInsurerList.filter(previousInsurerData => {\n        var previousInsurerName = previousInsurerData.StringMapName;\n        return previousInsurerName == value;\n      }); // if (results.length > 0) {\n      //     this.setState({ insuranceComapny: results[0].InsuranceCompanyName, gross: results[0].GrossCommission, subBinders: results[0].subBinderData, adminFees: results[0].adminFees, totalgross: totalgross, balance: balance, balanceTotal: balanceTotal })\n      // }\n    }\n  }\n\n  calculateTotal(premium, levy, adminFee) {\n    var totalDue = '';\n    var Premium = CommonConfig.isEmpty(premium) ? 0 : premium;\n    var Levy = CommonConfig.isEmpty(levy) ? 0 : levy;\n    var AdminFee = CommonConfig.isEmpty(adminFee) ? 0 : adminFee;\n    totalDue = Number(Premium) + Number(Levy) + Number(AdminFee);\n    this.setState({\n      total: totalDue\n    });\n  }\n\n  getVesselClassIdFromName(vesselClassName) {\n    try {\n      const data = {\n        class: vesselClassName\n      };\n      console.log('getVesselClassIdFromName1', data);\n      api.post(APIConstant.path.getVesselClassIdFromName, data).then(res => {\n        if (res.success) {\n          console.log('getVesselClassIdFromName2', res);\n          var vesselClassId = res.data[0].VesselClassId;\n          var vesselTypeName = CommonConfig.getFixedVesselTypeFromVesselClassName(vesselClassName);\n          const data = {\n            classId: vesselClassId,\n            type: vesselTypeName\n          };\n          console.log('getVesselClassIdFromName3', data);\n          api.post(APIConstant.path.getVesselTypeIdFromNameandClassId, data).then(result => {\n            console.log('getVesselClassIdFromName4', result);\n\n            if (result.success) {\n              this.setState({\n                vesselClass: vesselClassId,\n                vesselType: result.data[0].VesselTypeId\n              });\n            } else {}\n          }).catch(err => {});\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  conditionalFields(policyType) {\n    console.log('policyType out', policyType);\n\n    if (policyType == 'MarineTrade' || policyType == 'MultiVessel' || policyType == 'Engineering') {\n      console.log('policyType in', policyType);\n      this.setState({\n        rate: '',\n        rateError: false,\n        ratingType: '',\n        excess: '',\n        excessError: false,\n        vesselClass: '',\n        VesselClassError: false,\n        vesselType: '',\n        vesselTypeError: false,\n        vesselName: '',\n        vesselNameError: false,\n        UseofVessel: '',\n        UseofVesselError: false,\n        hullMaterial: '',\n        hullMaterialError: false,\n        makeAndModel: '',\n        makeAndModelError: false,\n        length: '',\n        lengthError: false,\n        vesselBuildType: '',\n        vesselBuildTypeError: false,\n        lastSurveyDateRequired: false,\n        lastSurveyDate: '',\n        lastSurveyDateError: false,\n        surveyDueDate: '',\n        yearBuilt: '',\n        yearBuiltError: false,\n        YBuilt: '',\n        yearPurchased: '',\n        yearPurchasedError: false,\n        purchasePrice: 0,\n        purchasePriceError: false,\n        sumInsured: 0,\n        sumInsuredError: false,\n        sumInsuredMethod: '',\n        sumInsuredMethodError: false,\n        whereReg: '',\n        whereRegError: false,\n        boatMoored: '',\n        boatMooredError: false,\n        mooringType: '',\n        mooringTypeError: false,\n        //Vessel\n        // -----------------------------------------------------------\n        // Engine & Trailer Details\n        mainEngine: '',\n        mainEngineError: false,\n        mainEngineHp: '',\n        mainEngineHpError: false,\n        mainEngineYear: '',\n        mainEngineYearError: false,\n        mainEngineSerialNo: '',\n        mainEngineSerialNoError: false,\n        noOfMainEngine: '',\n        noOfMainEngineError: false,\n        tarnsmissionMainEngine: '',\n        tarnsmissionMainEngineError: false,\n        auxiliaryEngine: '',\n        auxiliaryEngineError: false,\n        auxiliaryEngineHp: '',\n        auxiliaryEngineHpError: false,\n        auxiliaryEngineYear: '',\n        auxiliaryEngineYearError: false,\n        auxiliaryEngineSerialNo: '',\n        auxiliaryEngineSerialNoError: false,\n        noOfAuxiliaryEngine: '',\n        noOfAuxiliaryEngineError: false,\n        auxiliaryEngineTransmission: '',\n        auxiliaryEngineTransmissionError: false,\n        maxSpeed: 0,\n        maxSpeedError: false,\n        makeofTrailer: '',\n        makeofTrailerError: false,\n        trailerSerialNo: '',\n        trailerSerialNoError: false,\n        // Engine & Trailer Details\n        // -----------------------------------------------------------\n        // Navigational Limits\n        cruisingRange: '',\n        cruisingRangeError: false,\n        additionalCruisingRange: '',\n        additionalCruisingRangeError: false,\n        // Navigational Limits\n        // -----------------------------------------------------------\n        // General Questions\n        PreviousBoatingExperience: '',\n        PreviousBoatingExperienceError: false,\n        CurrentNCBYears: 0,\n        CurrentNCBYearsError: false,\n        previousInsurer: \"\",\n        previousInsurerError: false,\n        previousPolicyNo: \"\",\n        previousPolicyNoError: false,\n        boatingQualifications: '',\n        boatingQualificationsError: false,\n        losses: '',\n        lossesError: false,\n        lossesDescribe: '',\n        lossesDescribeError: false,\n        showLossesDescribe: false,\n        convicted: '',\n        convictedError: false,\n        convictedDescribe: '',\n        convictedDescribeError: false,\n        showconvictedDescribe: false,\n        insurancecanceled: '',\n        insurancecanceledError: false,\n        insurancecanceledDescribe: '',\n        insurancecanceledDescribeError: false,\n        showinsurancecanceledDescribe: false,\n        damaged: '',\n        damagedError: false,\n        damagedDescribe: '',\n        damagedDescribeError: false,\n        showdamagedDescribe: false,\n        // General Questions\n        // -----------------------------------------------------------\n        // Limits / Additional Cover            \n        thirdPartyLiability: '',\n        thirdPartyLiabilityError: false,\n        isWaterSkiing: false,\n        waterSkiingLiability: '',\n        systemWaterSkiingLiability: '',\n        isWaterToys: false,\n        waterToysLiability: '',\n        systemWaterToysLiabiility: '',\n        isSailRacing: false,\n        sailRacingCoverage: '',\n        racingEventType: '',\n        racingEventTypeError: false,\n        crewLiability: '',\n        crewLiabilityError: false,\n        // PolicySumInsured\n        binder: '',\n        binderError: true,\n        premium: '',\n        premiumError: true,\n        levy: '',\n        levyError: true,\n        adminFee: '',\n        adminFeeError: true,\n        // PolicySumInsured\n        conditionalVessel: 0,\n        conditionalEngine: 0,\n        conditionalNavigation: 0,\n        conditionalGeneral: 0,\n        conditionalLimits: 0,\n        isShowNonRateParams: 0\n      });\n\n      if (policyType == 'MarineTrade') {\n        this.getVesselClassIdFromName('MarineTradeVessel');\n      }\n\n      if (policyType == 'MultiVessel') {\n        this.getVesselClassIdFromName('MultiVessel');\n      }\n\n      if (policyType == 'Engineering') {\n        this.getVesselClassIdFromName('Engineering Vessel');\n      }\n    } else if (policyType == 'VesselNonrated') {\n      this.setState({\n        excessError: true,\n        rateError: true,\n        ratingType: 'Rating',\n        conditionalVessel: 1,\n        conditionalEngine: 1,\n        conditionalNavigation: 1,\n        conditionalGeneral: 1,\n        conditionalLimits: 1,\n        isShowNonRateParams: 1\n      });\n    } else {\n      this.setState({\n        rate: '',\n        rateError: false,\n        ratingType: '',\n        excess: '',\n        excessError: false,\n        vesselClass: '',\n        VesselClassError: true,\n        vesselType: '',\n        vesselTypeError: true,\n        vesselName: '',\n        vesselNameError: true,\n        UseofVessel: '',\n        UseofVesselError: true,\n        hullMaterial: '',\n        hullMaterialError: true,\n        makeAndModel: '',\n        makeAndModelError: true,\n        length: '',\n        lengthError: true,\n        vesselBuildType: '',\n        vesselBuildTypeError: true,\n        lastSurveyDateRequired: false,\n        lastSurveyDate: '',\n        lastSurveyDateError: true,\n        surveyDueDate: '',\n        yearBuilt: '',\n        yearBuiltError: true,\n        YBuilt: '',\n        yearPurchased: '',\n        yearPurchasedError: true,\n        purchasePrice: '',\n        purchasePriceError: true,\n        sumInsured: '',\n        sumInsuredError: true,\n        sumInsuredMethod: 'Market Value',\n        // sumInsuredMethodError: true,\n        whereReg: '',\n        whereRegError: true,\n        boatMoored: '',\n        boatMooredError: true,\n        mooringType: '',\n        mooringTypeError: true,\n        //Vessel\n        // -----------------------------------------------------------\n        // Engine & Trailer Details\n        mainEngine: '',\n        mainEngineError: true,\n        mainEngineHp: '',\n        mainEngineHpError: true,\n        mainEngineYear: '',\n        mainEngineYearError: true,\n        mainEngineSerialNo: '',\n        mainEngineSerialNoError: true,\n        noOfMainEngine: '',\n        noOfMainEngineError: true,\n        tarnsmissionMainEngine: '',\n        tarnsmissionMainEngineError: true,\n        auxiliaryEngine: '',\n        auxiliaryEngineError: true,\n        auxiliaryEngineHp: '',\n        auxiliaryEngineHpError: true,\n        auxiliaryEngineYear: '',\n        auxiliaryEngineYearError: true,\n        auxiliaryEngineSerialNo: '',\n        auxiliaryEngineSerialNoError: true,\n        noOfAuxiliaryEngine: '',\n        noOfAuxiliaryEngineError: true,\n        auxiliaryEngineTransmission: '',\n        auxiliaryEngineTransmissionError: true,\n        maxSpeed: '',\n        maxSpeedError: true,\n        makeofTrailer: '',\n        makeofTrailerError: true,\n        trailerSerialNo: '',\n        trailerSerialNoError: true,\n        // Engine & Trailer Details\n        // -----------------------------------------------------------\n        // Navigational Limits\n        cruisingRange: '',\n        cruisingRangeError: true,\n        additionalCruisingRange: '',\n        additionalCruisingRangeError: true,\n        // Navigational Limits\n        // -----------------------------------------------------------\n        // General Questions\n        PreviousBoatingExperience: '',\n        PreviousBoatingExperienceError: true,\n        CurrentNCBYears: '',\n        CurrentNCBYearsError: true,\n        previousInsurer: \"\",\n        previousInsurerError: false,\n        previousPolicyNo: \"\",\n        previousPolicyNoError: false,\n        boatingQualifications: '',\n        boatingQualificationsError: true,\n        losses: '',\n        lossesError: true,\n        lossesDescribe: '',\n        lossesDescribeError: true,\n        showLossesDescribe: false,\n        convicted: '',\n        convictedError: true,\n        convictedDescribe: '',\n        convictedDescribeError: true,\n        showconvictedDescribe: false,\n        insurancecanceled: '',\n        insurancecanceledError: true,\n        insurancecanceledDescribe: '',\n        insurancecanceledDescribeError: true,\n        showinsurancecanceledDescribe: false,\n        damaged: '',\n        damagedError: true,\n        damagedDescribe: '',\n        damagedDescribeError: true,\n        showdamagedDescribe: false,\n        // General Questions\n        // -----------------------------------------------------------\n        // Limits / Additional Cover            \n        thirdPartyLiability: '',\n        thirdPartyLiabilityError: true,\n        isWaterSkiing: false,\n        waterSkiingLiability: '',\n        systemWaterSkiingLiability: '',\n        isWaterToys: false,\n        waterToysLiability: '',\n        systemWaterToysLiabiility: '',\n        isSailRacing: false,\n        sailRacingCoverage: '',\n        racingEventType: '',\n        racingEventTypeError: true,\n        crewLiability: '',\n        crewLiabilityError: true,\n        // PolicySumInsured\n        binder: '',\n        binderError: false,\n        premium: '',\n        premiumError: false,\n        levy: '',\n        levyError: false,\n        adminFee: '',\n        adminFeeError: false,\n        // PolicySumInsured\n        conditionalVessel: 1,\n        conditionalEngine: 1,\n        conditionalNavigation: 1,\n        conditionalGeneral: 1,\n        conditionalLimits: 1,\n        isShowNonRateParams: 0\n      });\n    }\n  }\n\n  selectType(value, type) {\n    console.log(this.state);\n\n    if (type === 'country') {\n      if (CommonConfig.isEmpty(value.value)) {\n        this.setState({\n          countryError: true,\n          country: value.value\n        });\n        this.show(\"country\", true, \"countryError\", \"Please select Country\");\n      } else {\n        this.setState({\n          countryError: false,\n          country: value.value\n        });\n        this.show(\"country\", false, \"countryError\", \"\");\n        let ThirdPartyStringMapType = CommonConfig.ThirdPartyStringMapOnCountry(value.value);\n        this.getDropDownValues(ThirdPartyStringMapType, 'ThirdPartyLiabilityList', 'SortOrder');\n\n        if (value.value == \"UK\") {\n          this.setState({\n            currency: \"GBP\"\n          });\n        } else {\n          this.setState({\n            currency: \"EUR\"\n          });\n        }\n\n        this.getVesselClassByCountry(value.value, this.state.TPO);\n        this.setState({\n          vesselClass: '',\n          VesselClassError: true,\n          vesselType: '',\n          vesselTypeError: true\n        });\n      }\n    }\n\n    if (type === 'policyType') {\n      console.log(value.value);\n\n      if (CommonConfig.isEmpty(value.value)) {\n        this.setState({\n          policyTypeError: true,\n          policyType: value.value\n        });\n        this.show(\"policyType\", true, \"policyTypeError\", \"Please select policy type\");\n      } else {\n        // if (value.value == 'VesselNonrated') {\n        //     this.setState({ excessError: true, rateError: true, ratingType: 'Rating', isShowNonRateParams: 1 })\n        // } else {\n        //     this.setState({ rate: '', excess: '', ratingType: '', excessError: false, rateError: false, isShowNonRateParams: 0 })\n        // }\n        // console.log('conditionalFields',value.value);\n        this.conditionalFields(value.value);\n        this.setState({\n          policyTypeError: false,\n          policyType: value.value\n        });\n        this.show(\"policyType\", false, \"policyTypeError\", \"\");\n\n        if (value.value == 'MarineTrade' || value.value == 'MultiVessel') {\n          this.getBinderByPolicyType('MARINBINDER');\n        } else if (value.value == 'Engineering') {\n          this.getBinderByPolicyType('ENGINEERINGBINDER');\n        }\n      }\n    }\n\n    if (type === 'documentLanguage') {\n      if (CommonConfig.isEmpty(value.value)) {\n        this.setState({\n          documentLanguageError: true,\n          documentLanguage: value.value\n        });\n        this.show(\"documentLanguage\", true, \"documentLanguageError\", \"Please select document language\");\n      } else {\n        this.setState({\n          documentLanguageError: false,\n          documentLanguage: value.value\n        });\n        this.show(\"documentLanguage\", false, \"documentLanguageError\", \"\");\n      }\n    }\n\n    if (type === 'currency') {\n      if (CommonConfig.isEmpty(value.value)) {\n        this.setState({\n          currencyError: true,\n          currency: value.value\n        });\n        this.show(\"currency\", true, \"currencyError\", \"Please select currency\");\n      } else {\n        this.setState({\n          currencyError: false,\n          currency: value.value\n        });\n        this.show(\"currency\", false, \"currencyError\", \"\");\n      }\n    }\n\n    if (type === 'PolicyDepartment') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          PolicyDepartmentError: true,\n          PolicyDepartment: value\n        });\n        this.show(\"PolicyDepartment\", true, \"PolicyDepartmentError\", \"Please select policy department\");\n      } else {\n        this.setState({\n          PolicyDepartmentError: false,\n          PolicyDepartment: value\n        });\n        this.show(\"PolicyDepartment\", false, \"PolicyDepartmentError\", \"\");\n\n        if (value == 'ServiceCenter' || value == 'SubAgent') {\n          this.setState({\n            sourceDisplay: true\n          });\n          this.getOrganazationData(value);\n        } else {\n          this.setState({\n            sourceDisplay: false\n          });\n        }\n      }\n    }\n\n    if (type === 'source') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          sourceError: true,\n          source: value\n        });\n        this.show(\"\", true, \"sourceError\", \"\");\n      } else {\n        this.setState({\n          sourceError: false,\n          source: value.value\n        });\n        this.show(\"source\", false, \"sourceError\", \"\");\n      }\n    }\n\n    if (type === 'binder') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          binderError: true,\n          binder: value\n        });\n        this.show(\"\", true, \"binderError\", \"\");\n      } else {\n        this.setState({\n          binderError: false,\n          binder: value.value\n        });\n        this.show(\"binder\", false, \"binderError\", \"\");\n      }\n    }\n\n    if (type === 'vesselClass') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          VesselClassError: true,\n          vesselClass: value,\n          vesselTypeList: []\n        });\n        this.show(\"\", true, \"vesselClassError\", \"Please select vessel class\");\n      } else {\n        this.setState({\n          VesselClassError: false,\n          vesselClass: value.value,\n          VesselType: '',\n          vesselTypeError: true\n        });\n        this.show(\"vesselClass\", false, \"vesselClassError\", \"\");\n        this.getVesselType(value.value, this.state.country, this.state.TPO);\n        var SelectedId = value.label;\n        let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(SelectedId);\n\n        if (!CommonConfig.isEmpty(this.state.yearBuilt)) {\n          let BoatAge = new Date().getFullYear() - this.state.yearBuilt;\n\n          if (SelectedId != 'Dinghy' && SelectedId != 'Lake Boat' && SelectedId != 'Personal Watercraft') {\n            this.setState({\n              lastSurveyDateRequired: BoatAge >= 20 ? true : false\n            });\n          } else {\n            this.setState({\n              lastSurveyDateRequired: false,\n              vesselType: ''\n            });\n          }\n\n          this.show(\"lastSurveyDate\", BoatAge >= 30 ? '' : false, \"lastSurveyDateError\", BoatAge >= 30 ? \"\" : \"\");\n        }\n\n        this.setState({\n          DisplayWater: DisplayCondition.displayWater,\n          DisplayRacing: DisplayCondition.displayRacing,\n          DisplayCrew: DisplayCondition.displayCrew\n        });\n\n        if (SelectedId == \"Dinghy\" || SelectedId == \"Rowing Sculls\") {\n          this.setState({\n            conditionalEngine: 0,\n            mainEngine: '',\n            mainEngineHp: '',\n            mainEngineYear: '',\n            noOfMainEngine: '',\n            tarnsmissionMainEngine: '',\n            auxiliaryEngine: '',\n            auxiliaryEngineHp: '',\n            auxiliaryEngineYear: '',\n            auxiliaryEngineNoEngine: '',\n            auxiliaryEngineTransmission: '',\n            maxSpeed: 0,\n            makeofTrailer: '',\n            trailerSerialNo: '',\n            mainEngineError: false,\n            mainEngineHpError: false,\n            mainEngineYearError: false,\n            noOfMainEngineError: false,\n            tarnsmissionMainEngineError: false,\n            maxSpeedError: false\n          });\n        } else {\n          this.setState({\n            conditionalEngine: 1,\n            mainEngine: '',\n            mainEngineHp: '',\n            mainEngineYear: '',\n            noOfMainEngine: '',\n            tarnsmissionMainEngine: '',\n            auxiliaryEngine: '',\n            auxiliaryEngineHp: '',\n            auxiliaryEngineYear: '',\n            auxiliaryEngineNoEngine: '',\n            auxiliaryEngineTransmission: '',\n            maxSpeed: '',\n            makeofTrailer: '',\n            trailerSerialNo: '',\n            mainEngineError: true,\n            mainEngineHpError: true,\n            mainEngineYearError: true,\n            noOfMainEngineError: true,\n            tarnsmissionMainEngineError: true,\n            maxSpeedError: true\n          });\n        }\n\n        if (SelectedId === \"Commercial Vessels\") {\n          this.getDropDownValues('COMMERCIALUSEOFVESSEL', 'UseofVesselList', 'StringMapName');\n        } else {\n          this.getDropDownValues('USEOFVESSEL', 'UseofVesselList', 'StringMapName');\n        }\n      } // this.setState({ VesselType:'' })\n\n    }\n\n    if (type === 'vesselType') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          vesselTypeError: true,\n          vesselType: value.value\n        });\n        this.show(\"\", true, \"vesselTypeError\", \"Please select vessel type\");\n      } else {\n        this.setState({\n          vesselTypeError: false,\n          vesselType: value.value\n        });\n        this.show(\"vesselType\", false, \"vesselTypeError\", \"\");\n        this.getDefaultAddonCoverage(value.value);\n        this.getAssumption(value.value);\n        var vesselClass = this.state.VesselClassList.filter(e => e.value === this.state.vesselClass);\n\n        if (vesselClass.length) {\n          var SelectedClass = vesselClass[0].label;\n\n          if (SelectedClass == 'Yacht' || SelectedClass == 'Vela') {\n            var SelectedId = value.label;\n            let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(SelectedId);\n            this.setState({\n              DisplayWater: DisplayCondition.displayWater,\n              DisplayRacing: DisplayCondition.displayRacing,\n              DisplayCrew: DisplayCondition.displayCrew\n            });\n          }\n        }\n      }\n    }\n\n    if (type === 'UseofVessel') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          UseofVesselError: true,\n          UseofVessel: value\n        });\n        this.show(\"UseofVessel\", true, \"UseofVesselError\", \"Please select use of vessel\");\n      } else {\n        this.setState({\n          UseofVesselError: false,\n          UseofVessel: value\n        });\n        this.show(\"UseofVessel\", false, \"UseofVesselError\", \"\");\n      }\n    }\n\n    if (type === 'hullMaterial') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          hullMaterialError: true,\n          hullMaterial: value\n        });\n        this.show(\"hullMaterial\", true, \"hullMaterialError\", \"Please select hull material\");\n      } else {\n        this.setState({\n          hullMaterialError: false,\n          hullMaterial: value\n        });\n        this.show(\"hullMaterial\", false, \"hullMaterialError\", \"\");\n      }\n    }\n\n    if (type === 'vesselBuildType') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          vesselBuildTypeError: true,\n          vesselBuildType: value\n        });\n        this.show(\"vesselBuildType\", true, \"vesselBuildTypeError\", \"Please select type of build\");\n      } else {\n        this.setState({\n          vesselBuildTypeError: false,\n          vesselBuildType: value\n        });\n        this.show(\"vesselBuildType\", false, \"vesselBuildTypeError\", \"\");\n      }\n    }\n\n    if (type === 'sumInsuredMethod') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          sumInsuredMethodError: true,\n          sumInsuredMethod: value\n        });\n        this.show(\"sumInsuredMethod\", true, \"sumInsuredMethodError\", \"Please select sum insured method\");\n      } else {\n        this.setState({\n          sumInsuredMethodError: false,\n          sumInsuredMethod: value\n        });\n        this.show(\"sumInsuredMethod\", false, \"sumInsuredMethodError\", \"\");\n      }\n    }\n\n    if (type === 'whereReg') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          whereRegError: true,\n          whereReg: value\n        });\n        this.show(\"\", true, \"whereRegError\", \"Please select Where is boat registered\");\n      } else {\n        this.setState({\n          whereRegError: false,\n          whereReg: value.value\n        });\n        this.show(\"whereReg\", false, \"whereRegError\", \"\");\n      }\n    }\n\n    if (type === 'boatMoored') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          boatMooredError: true,\n          boatMoored: value,\n          mooringTypeList: []\n        });\n        this.show(\"\", true, \"boatMooredError\", \"Please select Where is boat moored\");\n      } else {\n        this.getmooringType(value.value);\n        this.setState({\n          boatMooredError: false,\n          boatMoored: value.value\n        });\n        this.show(\"boatMoored\", false, \"boatMooredError\", \"\");\n      }\n    }\n\n    if (type === 'mooringType') {\n      if (CommonConfig.isEmpty(value.value)) {\n        this.setState({\n          mooringTypeError: true,\n          mooringType: value.value\n        });\n        this.show(\"mooringType\", true, \"mooringTypeError\", \"Please select moored type\");\n      } else {\n        this.setState({\n          mooringTypeError: false,\n          mooringType: value.value\n        });\n        this.show(\"mooringType\", false, \"mooringTypeError\", \"\");\n      }\n    }\n\n    if (type === 'cruisingRange') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          cruisingRangeError: true,\n          cruisingRange: value\n        });\n        this.show(\"\", true, \"cruisingRangeError\", \"Please select cruising range\");\n      } else {\n        this.setState({\n          cruisingRangeError: false,\n          cruisingRange: value.value\n        });\n        this.show(\"cruisingRange\", false, \"cruisingRangeError\", \"\");\n      }\n    }\n\n    if (type === 'noOfMainEngine') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          noOfMainEngineError: true,\n          noOfMainEngine: value\n        });\n        this.show(\"noOfMainEngine\", true, \"noOfMainEngineError\", \"Please select no of engine\");\n      } else {\n        this.setState({\n          noOfMainEngineError: false,\n          noOfMainEngine: value\n        });\n        this.show(\"noOfMainEngine\", false, \"noOfMainEngineError\", \"\");\n      }\n    }\n\n    if (type === 'tarnsmissionMainEngine') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          tarnsmissionMainEngineError: true,\n          tarnsmissionMainEngine: value\n        });\n        this.show(\"tarnsmissionMainEngine\", true, \"tarnsmissionMainEngineError\", \"Please select tarnsmission\");\n      } else {\n        this.setState({\n          tarnsmissionMainEngineError: false,\n          tarnsmissionMainEngine: value\n        });\n        this.show(\"tarnsmissionMainEngine\", false, \"tarnsmissionMainEngineError\", \"\");\n      }\n    }\n\n    if (type === 'noOfAuxiliaryEngine') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          noOfAuxiliaryEngineError: true,\n          noOfAuxiliaryEngine: value\n        });\n        this.show(\"noOfAuxiliaryEngine\", true, \"noOfAuxiliaryEngineError\", \"Please select no of engine\");\n      } else {\n        this.setState({\n          noOfAuxiliaryEngineError: false,\n          noOfAuxiliaryEngine: value\n        });\n        this.show(\"noOfAuxiliaryEngine\", false, \"noOfAuxiliaryEngineError\", \"\");\n      }\n    }\n\n    if (type === 'auxiliaryEngineTransmission') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          auxiliaryEngineTransmissionError: true,\n          auxiliaryEngineTransmission: value\n        });\n        this.show(\"auxiliaryEngineTransmission\", true, \"auxiliaryEngineTransmissionError\", \"Please select Transmission\");\n      } else {\n        this.setState({\n          auxiliaryEngineTransmissionError: false,\n          auxiliaryEngineTransmission: value\n        });\n        this.show(\"auxiliaryEngineTransmission\", false, \"auxiliaryEngineTransmissionError\", \"\");\n      }\n    }\n\n    if (type === 'boatingQualifications') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          boatingQualificationsError: true,\n          boatingQualifications: value\n        });\n        this.show(\"boatingQualifications\", true, \"boatingQualificationsError\", \"Please select boating qualifications\");\n      } else {\n        this.setState({\n          boatingQualificationsError: false,\n          boatingQualifications: value\n        });\n        this.show(\"boatingQualifications\", false, \"boatingQualificationsError\", \"\");\n      }\n    }\n\n    if (type === 'losses') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          lossesDescribeError: true,\n          losses: value,\n          showLossesDescribe: false,\n          lossesError: true\n        });\n        this.show(\"losses\", true, \"lossesError\", \"Please select losses\");\n      } else {\n        if (value == \"Yes\") {\n          this.setState({\n            showLossesDescribe: true,\n            lossesDescribeError: true\n          });\n        } else {\n          this.setState({\n            showLossesDescribe: false,\n            lossesDescribeError: false,\n            lossesDescribe: ''\n          });\n        }\n\n        this.setState({\n          losses: value,\n          lossesError: false\n        });\n        this.show(\"losses\", false, \"lossesError\", \"\");\n      }\n    }\n\n    if (type === 'convicted') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          convictedDescribeError: true,\n          convicted: value,\n          showconvictedDescribe: false,\n          convictedError: true\n        });\n        this.show(\"convicted\", true, \"convictedError\", \"Please select convicted\");\n      } else {\n        if (value == \"Yes\") {\n          this.setState({\n            showconvictedDescribe: true,\n            convictedDescribeError: true\n          });\n        } else {\n          this.setState({\n            showconvictedDescribe: false,\n            convictedDescribeError: false,\n            convictedDescribe: ''\n          });\n        }\n\n        this.setState({\n          convicted: value,\n          convictedError: false\n        });\n        this.show(\"convicted\", false, \"convictedError\", \"\");\n      }\n    }\n\n    if (type === 'insurancecanceled') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          insurancecanceledDescribeError: true,\n          insurancecanceled: value,\n          showinsurancecanceledDescribe: false,\n          insurancecanceledError: true\n        });\n        this.show(\"insurancecanceled\", true, \"insurancecanceledError\", \"Please select is insurance canceled-refused or not\");\n      } else {\n        if (value == \"Yes\") {\n          this.setState({\n            showinsurancecanceledDescribe: true,\n            insurancecanceledDescribeError: true\n          });\n        } else {\n          this.setState({\n            showinsurancecanceledDescribe: false,\n            insurancecanceledDescribeError: false,\n            insurancecanceledDescribe: ''\n          });\n        }\n\n        this.setState({\n          insurancecanceled: value,\n          insurancecanceledError: false\n        });\n        this.show(\"insurancecanceled\", false, \"insurancecanceledError\", \"\");\n      }\n    }\n\n    if (type === 'damaged') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          damagedDescribeError: true,\n          damaged: value,\n          showdamagedDescribe: false,\n          damagedError: true\n        });\n        this.show(\"damaged\", true, \"damagedError\", \"Please select is vessel ever been damaged or not\");\n      } else {\n        if (value == \"Yes\") {\n          this.setState({\n            showdamagedDescribe: true,\n            damagedDescribeError: true\n          });\n        } else {\n          this.setState({\n            showdamagedDescribe: false,\n            damagedDescribeError: false,\n            damagedDescribe: ''\n          });\n        }\n\n        this.setState({\n          damaged: value,\n          damagedError: false\n        });\n        this.show(\"damaged\", false, \"damagedError\", \"\");\n      }\n    }\n\n    if (type === 'PreviousBoatingExperience') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          PreviousBoatingExperienceError: true,\n          PreviousBoatingExperience: value\n        });\n        this.show(\"PreviousBoatingExperience\", true, \"PreviousBoatingExperienceError\", \"Please select previous boating experience\");\n      } else {\n        this.setState({\n          PreviousBoatingExperienceError: false,\n          PreviousBoatingExperience: value\n        });\n        this.show(\"PreviousBoatingExperience\", false, \"PreviousBoatingExperienceError\", \"\");\n      }\n    }\n\n    if (type === 'CurrentNCBYears') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          CurrentNCBYearsError: true,\n          CurrentNCBYears: value\n        });\n        this.show(\"CurrentNCBYears\", true, \"CurrentNCBYearsError\", \"Please select current NCB years\");\n      } else {\n        this.setState({\n          CurrentNCBYearsError: false,\n          CurrentNCBYears: value\n        });\n        this.show('CurrentNCBYears', false, \"CurrentNCBYearsError\", \"\");\n      }\n    }\n\n    if (type === 'thirdPartyLiability') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          thirdPartyLiabilityError: true,\n          thirdPartyLiability: value\n        });\n        this.show(\"thirdPartyLiability\", true, \"thirdPartyLiabilityError\", \"Please select third party liability\");\n      } else {\n        this.setState({\n          thirdPartyLiabilityError: false,\n          thirdPartyLiability: value\n        });\n        this.show('thirdPartyLiability', false, \"thirdPartyLiabilityError\", \"\");\n      }\n    }\n\n    if (type === 'racingEventType') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          racingEventTypeError: true,\n          racingEventType: value\n        });\n        this.show(\"racingEventType\", true, \"racingEventTypeError\", \"Please select racing event type\");\n      } else {\n        this.setState({\n          racingEventTypeError: false,\n          racingEventType: value\n        });\n        this.show('racingEventType', false, \"racingEventTypeError\", \"\");\n      }\n    }\n\n    if (type === 'crewLiability') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          crewLiabilityError: true,\n          crewLiability: value\n        });\n        this.show(\"crewLiability\", true, \"crewLiabilityError\", \"Please select crew liability\");\n      } else {\n        this.setState({\n          crewLiabilityError: false,\n          crewLiability: value\n        });\n        this.show('crewLiability', false, \"crewLiabilityError\", \"\");\n      }\n    }\n  }\n\n  async Save() {\n    // <---------------------------- Check Policy Number on the Go and Show Error ----------------------------> \n    // var checkPolicyNumberExists = await this.checkPolicyNumberExists(this.state.policyNumber);\n    // if (checkPolicyNumberExists) {\n    //     return false;\n    // }\n    // <---------------------------- Check Policy Number on the Go and Show Error ----------------------------> \n    if (this.state.lastSurveyDateRequired && CommonConfig.isEmpty(this.state.lastSurveyDate)) {\n      toast.error(\"Please select Last Survey Date\");\n      return;\n    }\n\n    if (this.state.policyType == 'MarineTrade' || this.state.policyType == 'MultiVessel' || this.state.policyType == 'Engineering') {\n      this.setState({\n        vesselTypeError: false,\n        VesselClassError: false\n      });\n      this.state.vesselTypeError = false;\n      this.state.VesselClassError = false;\n    }\n\n    if (!this.state.policyNumberError && !this.state.countryError && !this.state.policyTypeError && !this.state.documentLanguageError && !this.state.currencyError && !this.state.policyEffectiveDateError && !this.state.PolicyDepartmentError && !this.state.binderError && !this.state.premiumError && !this.state.levyError && !this.state.adminFeeError && !this.state.rateError && !this.state.excessError && !this.state.VesselClassError && !this.state.vesselTypeError && !this.state.UseofVesselError && !this.state.hullMaterialError && !this.state.makeAndModelError && !this.state.lengthError && !this.state.vesselBuildTypeError && !this.state.yearBuiltError && !this.state.yearPurchasedError && !this.state.purchasePriceError && !this.state.sumInsuredError && !this.state.sumInsuredMethodError && !this.state.whereRegError && !this.state.boatMooredError && !this.state.mooringTypeError && !this.state.mainEngineError && !this.state.mainEngineHpError && !this.state.mainEngineYearError && !this.state.noOfMainEngineError && !this.state.tarnsmissionMainEngineError && !this.state.maxSpeedError && !this.state.cruisingRangeError && !this.state.PreviousBoatingExperienceError && !this.state.CurrentNCBYearsError && !this.state.lossesError && !this.state.lossesDescribeError && !this.state.convictedError && !this.state.convictedDescribeError && !this.state.insurancecanceledError && !this.state.insurancecanceledDescribeError && !this.state.damagedError && !this.state.damagedDescribeError && !this.state.thirdPartyLiabilityError\n    /*&& !this.state.racingEventTypeError && !this.state.crewLiabilityError*/\n    && this.state.AssumptionAndTerms) {\n      let data = {\n        // Common\n        LanguageId: this.state.LanguageId,\n        Status: this.state.Status,\n        LoggedInUserId: CommonConfig.loggedInUserId(),\n        TPO: this.state.TPO,\n        // Policy\n        PolicyNumber: this.state.policyNumber,\n        EntityId: this.state.EntityId,\n        EntityType: this.state.EntityType,\n        IsReferred: this.state.refer == true ? 1 : 0,\n        Country: this.state.country,\n        PolicyType: this.state.policyType,\n        DocLang: this.state.documentLanguage,\n        Currency: this.state.currency,\n        InceptionDate: this.state.policyEffectiveDate != '' && this.state.policyEffectiveDate != null ? moment(this.state.policyEffectiveDate).format(CommonConfig.dateFormat.dbDateTime) : '',\n        RenewalDate: moment(this.state.renewalDate).format(CommonConfig.dateFormat.dbDateTime),\n        PolicyStatus: this.state.PolicyStatus,\n        // Vessel\n        VesselClass: this.state.vesselClass,\n        VesselType: this.state.vesselType,\n        VesselName: this.state.vesselName,\n        VesselUse: this.state.UseofVessel,\n        HullMaterial: this.state.hullMaterial,\n        Make: this.state.makeAndModel,\n        Length: this.state.length,\n        BuildType: this.state.vesselBuildType,\n        LastSurveyDate: this.state.lastSurveyDate !== '' && this.state.lastSurveyDate !== null ? moment(this.state.lastSurveyDate).format('YYYY/MM/DD') : '',\n        SurveyDueDate: this.state.surveyDueDate !== '' && this.state.surveyDueDate !== null ? moment(this.state.surveyDueDate).format('YYYY/MM/DD') : '',\n        YearBuilt: this.state.yearBuilt,\n        BoatAge: new Date().getFullYear() - this.state.yearBuilt,\n        YearPurchased: this.state.yearPurchased !== '' && this.state.yearPurchased !== null ? moment(this.state.yearPurchased).format(CommonConfig.dateFormat.yearOnly) : '',\n        PurchasePrice: this.state.purchasePrice,\n        SumInsured: this.state.sumInsured,\n        SumInsuredMethod: this.state.sumInsuredMethod,\n        // EngineTrailer \n        MainEngine: this.state.mainEngine,\n        MainEngineHp: this.state.mainEngineHp,\n        MainEngineYear: this.state.mainEngineYear,\n        MainEngineSerialNo: this.state.mainEngineSerialNo,\n        MainEngineCount: this.state.noOfMainEngine,\n        MainEngineTransmission: this.state.tarnsmissionMainEngine,\n        AuxiliaryEngine: this.state.auxiliaryEngine,\n        AuxiliaryEngineHp: this.state.auxiliaryEngineHp,\n        AuxiliaryEngineYear: this.state.auxiliaryEngineYear,\n        AuxiliaryEngineSerialNo: this.state.auxiliaryEngineSerialNo,\n        AuxiliaryEngineCount: this.state.noOfAuxiliaryEngine,\n        AuxiliaryEngineTransmission: this.state.auxiliaryEngineTransmission,\n        MaxSpeed: this.state.maxSpeed,\n        MakeOfTrailer: this.state.makeofTrailer,\n        TrailerSrNo: this.state.trailerSerialNo,\n        // MooringNavigation\n        VesselRegistrationLocation: this.state.whereReg,\n        MooringGuideId: this.state.mooringType,\n        CruisingRange: this.state.cruisingRange,\n        AdditionalCruisingRange: this.state.additionalCruisingRange,\n        // General \n        PreviousBoatingExperinceInYears: this.state.PreviousBoatingExperience,\n        CurrentNCBYear: this.state.CurrentNCBYears,\n        PreviousInsurer: this.state.previousInsurer,\n        PreviousPolicyNumber: this.state.previousPolicyNo,\n        boatingQualificationsArr: this.state.boatingQualificationsArr,\n        BoatingQualificationsCount: this.state.boatingQualificationsArr.length,\n        IsLossesInLastFiveYears: this.state.losses == \"Yes\" ? 1 : 0,\n        LossesInLastFiveYearsDescription: this.state.lossesDescribe,\n        IsConvictedOrCharged: this.state.convicted == \"Yes\" ? 1 : 0,\n        ConvictedOrChargedDescription: this.state.convictedDescribe,\n        IsInsuranceCanceledOrRefused: this.state.insurancecanceled == \"Yes\" ? 1 : 0,\n        InsuranceCanceledOrRefusedDescription: this.state.insurancecanceledDescribe,\n        IsVesselHasBeenDamaged: this.state.damaged == \"Yes\" ? 1 : 0,\n        VesselHasBeenDamagedDescription: this.state.damagedDescribe,\n        // PolicyInsured\n        ThirdPartyLiabilityAmount: this.state.thirdPartyLiability,\n        WaterSkiingLiabilityAmount: this.state.waterSkiingLiability,\n        WaterToysLiabilityAmount: this.state.waterToysLiability,\n        SailRacingCoverageAmount: this.state.sailRacingCoverage,\n        RacingEventType: this.state.racingEventType,\n        CrewLiability: this.state.crewLiability,\n        NonRatableRatingType: this.state.ratingType,\n        NonRatableRateAmount: this.state.rate,\n        ExcessAmount: this.state.excess,\n        MarineTradePremium: this.state.premium,\n        GovtLevyAmount: this.state.levy,\n        AdminFeeAmount: this.state.adminFee,\n        // policyUnderwriting\n        Department: this.state.PolicyDepartment,\n        SourceId: this.state.source,\n        BinderId: this.state.binder,\n        // policyAddOnCoverage\n        addOnCoverageArr: this.state.addOnCoverageArr,\n        addOnCoverageCount: this.state.addOnCoverageCount\n      };\n      api.post('api/savePolicy', data).then(res => {\n        if (res.success) {\n          // toast.error(res.data.returnValue);\n          toast.success('Quotation Generated successfully');\n          this.props.history.push({\n            pathname: '/PolicyDetailsMerged/' + res.data.policyid + '/1/1',\n            state: {\n              Id: res.data.policyid,\n              tab: 1\n            }\n          });\n        } else {}\n      }).catch(err => {});\n    } else {\n      if (this.state.policyNumberError) {\n        this.checkPolicyNumberExists(this.state.policyNumber);\n        return;\n      }\n\n      if (this.state.countryError) {\n        toast.error(\"Please select country\");\n        return;\n      }\n\n      if (this.state.policyTypeError) {\n        toast.error(\"Please select policy type\");\n        return;\n      }\n\n      if (this.state.documentLanguageError) {\n        toast.error(\"Please select document language\");\n        return;\n      }\n\n      if (this.state.currencyError) {\n        toast.error(\"Please select currency\");\n        return;\n      }\n\n      if (this.state.policyEffectiveDateError) {\n        toast.error(\"Please select policy effective date\");\n        return;\n      }\n\n      if (this.state.PolicyDepartmentError) {\n        toast.error(\"Please select policy department\");\n        return;\n      }\n\n      if (this.state.binderError) {\n        toast.error(\"Please select Binder\");\n        return;\n      }\n\n      if (this.state.premiumError) {\n        toast.error(\"Please enter Premium\");\n        return;\n      }\n\n      if (this.state.levyError) {\n        toast.error(\"Please enter Levy\");\n        return;\n      }\n\n      if (this.state.adminFeeError) {\n        toast.error(\"Please enter AdminFee\");\n        return;\n      }\n\n      if (this.state.rateError) {\n        toast.error(\"Please enter Rate\");\n        return;\n      }\n\n      if (this.state.excessError) {\n        toast.error(\"Please enter Excess\");\n        return;\n      }\n\n      if (this.state.VesselClassError) {\n        toast.error(\"Please select vessel class\");\n        return;\n      }\n\n      if (this.state.vesselTypeError) {\n        toast.error(\"Please select vessel type\");\n        return;\n      }\n\n      if (this.state.UseofVesselError) {\n        toast.error(\"Please select Use of vessel\");\n        return;\n      }\n\n      if (this.state.hullMaterialError) {\n        toast.error(\"Please select hull material\");\n        return;\n      }\n\n      if (this.state.makeAndModelError) {\n        toast.error(\"Please enter make and model\");\n        return;\n      }\n\n      if (this.state.lengthError) {\n        toast.error(\"Please enter length\");\n        return;\n      }\n\n      if (this.state.vesselBuildTypeError) {\n        toast.error(\"Please select vessel built type\");\n        return;\n      }\n\n      if (this.state.yearBuiltError) {\n        toast.error(\"Please enter year built\");\n        return;\n      }\n\n      if (this.state.yearPurchasedError) {\n        toast.error(\"Please enter year purchased\");\n        return;\n      }\n\n      if (this.state.purchasePriceError) {\n        toast.error(\"Please enter purchase price\");\n        return;\n      }\n\n      if (this.state.sumInsuredError) {\n        toast.error(\"Please enter sum insured\");\n        return;\n      }\n\n      if (this.state.sumInsuredMethodError) {\n        toast.error(\"Please select sum insured method\");\n        return;\n      } // if (this.state.lastSurveyDateRequired && CommonConfig.isEmpty(this.state.lastSurveyDate)) {\n      //     toast.error(\"Please select Last Survey Date\")\n      //     return;\n      // }\n\n\n      if (this.state.whereRegError) {\n        toast.error(\"Please select Where is boat registered\");\n        return;\n      }\n\n      if (this.state.boatMooredError) {\n        toast.error(\"Please select Where is boat moored\");\n        return;\n      }\n\n      if (this.state.mooringTypeError) {\n        toast.error(\"Please select mooring type\");\n        return;\n      }\n\n      if (this.state.mainEngineError) {\n        toast.error(\"Please enter main engine\");\n        return;\n      }\n\n      if (this.state.mainEngineHpError) {\n        toast.error(\"Please enter main engine HP\");\n        return;\n      }\n\n      if (this.state.mainEngineYearError) {\n        toast.error(\"Please enter main engine year\");\n        return;\n      }\n\n      if (this.state.noOfMainEngineError) {\n        toast.error(\"Please select No of main engine\");\n        return;\n      }\n\n      if (this.state.tarnsmissionMainEngineError) {\n        toast.error(\"Please select Tarnsmission main engine\");\n        return;\n      }\n\n      if (this.state.maxSpeedError) {\n        toast.error(\"Please enter max speed\");\n        return;\n      }\n\n      if (this.state.cruisingRangeError) {\n        toast.error(\"Please select cruising range\");\n        return;\n      }\n\n      if (this.state.PreviousBoatingExperienceError) {\n        toast.error(\"Please select Previous boating experience\");\n        return;\n      }\n\n      if (this.state.CurrentNCBYearsError) {\n        toast.error(\"Please select your NCB years\");\n        return;\n      }\n\n      if (this.state.lossesError) {\n        toast.error(\"Please select Any losses in last 5 years ?\");\n        return;\n      }\n\n      if (this.state.lossesDescribeError) {\n        toast.error(\"Please enter losses description\");\n        return;\n      }\n\n      if (this.state.convictedError) {\n        toast.error(\"Please select convicted or charged\");\n        return;\n      }\n\n      if (this.state.convictedDescribeError) {\n        toast.error(\"Please enter convict or charge description\");\n        return;\n      }\n\n      if (this.state.insurancecanceledError) {\n        toast.error(\"Please select insurance canceled or refused\");\n        return;\n      }\n\n      if (this.state.insurancecanceledDescribeError) {\n        toast.error(\"Please enter insurance cancelled or refused description\");\n        return;\n      }\n\n      if (this.state.damagedError) {\n        toast.error(\"Please select Has the vessel ever been damaged?\");\n        return;\n      }\n\n      if (this.state.damagedDescribeError) {\n        toast.error(\"Please enter description of damage\");\n        return;\n      }\n\n      if (this.state.thirdPartyLiabilityError) {\n        toast.error(\"Please select third party liability\");\n        return;\n      } // if (this.state.racingEventTypeError) {\n      //     toast.error(\"Please select Racing Event Type\")\n      //     return;\n      // }\n      // if (this.state.crewLiabilityError) {\n      //     toast.error(\"Please select Crew Liability\")\n      //     return;\n      // }\n\n\n      if (!this.state.AssumptionAndTerms) {\n        toast.error(\"You must agree to assumption and terms & conditions\");\n        return;\n      } // this.show('country', this.state.countryError);\n      // this.show('policyType', this.state.policyTypeError);\n      // this.show('documentLanguage', this.state.documentLanguageError);\n      // this.show('currency', this.state.currencyError);\n      // this.show('vesselClass', this.state.VesselClassError);\n      // this.show('vesselType', this.state.vesselTypeError);\n      // this.show('UseofVessel', this.state.UseofVesselError);\n      // this.show('hullMaterial', this.state.hullMaterialError);\n      // this.show('makeAndModel', this.state.makeAndModelError);\n      // this.show('length', this.state.lengthError);\n      // this.show('yearBuilt', this.state.yearBuiltError);\n      // this.show('yearPurchased', this.state.yearPurchasedError);\n      // this.show('purchasePrice', this.state.purchasePriceError);\n      // this.show('sumInsured', this.state.sumInsuredError);\n      // this.show('sumInsuredMethod', this.state.sumInsuredMethodError);\n      // this.show('whereReg', this.state.whereRegError);\n      // this.show('boatMoored', this.state.boatMooredError);\n      // this.show('mooringType', this.state.mooringTypeError);\n      // this.show('mainEngine', this.state.mainEngineError);\n      // this.show('mainEngineHp', this.state.mainEngineHpError);\n      // this.show('noOfMainEngine', this.state.noOfMainEngineError);\n      // this.show('mainEngineYear', this.state.mainEngineYearError);\n      // this.show('tarnsmissionMainEngine', this.state.tarnsmissionMainEngineError);\n      // this.show('maxSpeed', this.state.maxSpeedError);\n      // this.show('cruisingRange', this.state.cruisingRangeError);\n      // this.show('PreviousBoatingExperience', this.state.PreviousBoatingExperienceError);\n      // this.show('losses', this.state.lossesError);\n      // this.show('convicted', this.state.convictedError);\n      // this.show('insurancecanceled', this.state.insurancecanceledError);\n      // this.show('damaged', this.state.damagedError);\n      // this.show('racingEventType', this.state.racingEventTypeError);\n      // this.show('crewLiability', this.state.crewLiabilityError);\n      // this.setState({ AssumptionAndTermsError: !this.state.AssumptionAndTerms});\n\n    }\n  }\n\n  BackToPolicyList() {\n    this.props.history.push({\n      pathname: '/PolicyList'\n    });\n  }\n\n  render() {\n    const {\n      t,\n      i18n\n    } = this.props;\n    const SaveButton = t(\"buttons.Save\");\n    const CancelButton = t(\"buttons.Cancel\");\n    const BackButton = t(\"buttons.BackToPolicy\");\n    const AddButton = t(\"buttons.Add\");\n    const DeleteButton = t(\"buttons.Delete\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2961,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2962,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2963,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2964,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2965,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2966,\n        columnNumber: 33\n      }\n    }, \"New Policy Quotation\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2966,\n        columnNumber: 62\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2967,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        width: \"70%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2968,\n        columnNumber: 37\n      }\n    }, \"Policy Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2969,\n        columnNumber: 37\n      }\n    }, this.state.changePolicyNumber ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2971,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"policyNumber\",\n      id: \"policyNumber\",\n      onChange: e => this.handleChange(e),\n      onBlur: e => this.checkPolicyNumberExists(e.target.value),\n      value: this.state.policyNumber,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2972,\n        columnNumber: 49\n      }\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2976,\n        columnNumber: 49\n      }\n    }, this.state.policyNumber), /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editPolicyNumber(),\n      title: \"Change Policy Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2978,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2979,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2984,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2985,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2986,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2987,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2988,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2989,\n        columnNumber: 45\n      }\n    }, this.state.Policy_Holder, this.state.ContactCode, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2989,\n        columnNumber: 98\n      }\n    })), this.state.Policy_Holder_Address, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2990,\n        columnNumber: 79\n      }\n    }), this.state.Policy_Holder_Conatct, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2991,\n        columnNumber: 79\n      }\n    }), this.state.Policy_Holder_Email))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2998,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2999,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3000,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3001,\n        columnNumber: 37\n      }\n    }, \"General\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3003,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3004,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3005,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        verticalAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3006,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3007,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3008,\n        columnNumber: 53\n      }\n    }, \"Binder Country *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"country\",\n      id: \"country\",\n      onChange: e => this.selectType(e.target, 'country'),\n      value: this.state.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3009,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3010,\n        columnNumber: 57\n      }\n    }, \"Select\"), this.state.countryList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3012,\n          columnNumber: 69\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"countryError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3016,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3019,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3020,\n        columnNumber: 53\n      }\n    }, \"Policy Type *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyType\",\n      id: \"policyType\",\n      onChange: e => this.selectType(e.target, 'policyType'),\n      value: this.state.policyType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3021,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3022,\n        columnNumber: 57\n      }\n    }, \"Select\"), this.state.policyTypeList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3024,\n          columnNumber: 69\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3028,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3031,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3032,\n        columnNumber: 53\n      }\n    }, \"Document Language *\"), this.state.isEditDocLang ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3034,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"documentLanguage\",\n      id: \"documentLanguage\",\n      onChange: e => this.selectType(e.target, 'documentLanguage'),\n      value: this.state.documentLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3035,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3036,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.documentLanguageList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3038,\n          columnNumber: 77\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"documentLanguageError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3042,\n        columnNumber: 61\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3045,\n        columnNumber: 61\n      }\n    }, this.state.documentLanguage)), this.state.isInsert ? null : /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3053,\n        columnNumber: 57\n      }\n    }, this.state.isEditDocLang ? /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Save\",\n      icon: \"fa fa-save\",\n      style: {\n        float: \"left\",\n        margin: \"3px\"\n      },\n      color: \"primary\",\n      onClick: () => this.editDocLang('View'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3055,\n        columnNumber: 65\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Edit\",\n      icon: \"fa fa-pencil\",\n      style: {\n        float: \"left\",\n        margin: \"3px\"\n      },\n      color: \"primary\",\n      onClick: () => this.editDocLang('Edit'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3058,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3063,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3064,\n        columnNumber: 53\n      }\n    }, \"Currency *\"), this.state.isEditCurrency ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3066,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"currency\",\n      id: \"currency\",\n      onChange: e => this.selectType(e.target, 'currency'),\n      value: this.state.currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3067,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3068,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.currencyList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3070,\n          columnNumber: 77\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"currencyError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3074,\n        columnNumber: 61\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3077,\n        columnNumber: 61\n      }\n    }, this.state.currency)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        alignSelf: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3082,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3083,\n        columnNumber: 53\n      }\n    }, \"Refer\", /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"refer\",\n      id: \"refer\",\n      value: this.state.refer,\n      style: {\n        marginLeft: \"3px\"\n      },\n      checked: this.state.refer == true ? \"checked\" : \"\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3083,\n        columnNumber: 62\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"referError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3084,\n        columnNumber: 57\n      }\n    }))), this.state.isInsert ? null : /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3089,\n        columnNumber: 57\n      }\n    }, this.state.isEditCurrency ? /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Save\",\n      icon: \"fa fa-save\",\n      style: {\n        float: \"left\",\n        margin: \"3px\"\n      },\n      color: \"primary\",\n      onClick: () => this.editCurrency('View'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3091,\n        columnNumber: 65\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Edit\",\n      icon: \"fa fa-pencil\",\n      style: {\n        float: \"left\",\n        margin: \"3px\"\n      },\n      color: \"primary\",\n      onClick: () => this.editCurrency('Edit'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3094,\n        columnNumber: 69\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3100,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3101,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3102,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3103,\n        columnNumber: 53\n      }\n    }, \"Policy Effective Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3104,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"policyEffectiveDate\",\n      id: \"policyEffectiveDate\",\n      placeholder: \"Date of Birth\",\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      value: this.state.policyEffectiveDate,\n      min: moment().format('YYYY-MM-DD') // max={moment().subtract(12, 'years').format('YYYY-MM-DD')}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3108,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyEffectiveDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3113,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3116,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3117,\n        columnNumber: 53\n      }\n    }, t(\"policyUnderwriting:Department.label\"), \" *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3118,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"PolicyDepartment\",\n      disabled: this.state.departmentDisable == true ? true : false,\n      id: \"PolicyDepartment\",\n      onChange: e => this.selectType(e.target.value, 'PolicyDepartment'),\n      value: this.state.PolicyDepartment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3119,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3120,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:Department.defaultValue\")), this.state.departmentList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3122,\n          columnNumber: 73\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"PolicyDepartmentError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3126,\n        columnNumber: 57\n      }\n    }))), this.state.sourceDisplay ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3130,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3131,\n        columnNumber: 57\n      }\n    }, t(\"policyUnderwriting:Source.label\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3132,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"source\",\n      id: \"source\",\n      options: this.state.sourceList,\n      value: this.state.source,\n      onChange: data => this.selectType(data, 'source'),\n      placeholder: t(\"policyUnderwriting:Source.defaultValue\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3133,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"sourceError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3134,\n        columnNumber: 61\n      }\n    }))) : null, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        alignSelf: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3146,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3147,\n        columnNumber: 53\n      }\n    }, \"Third Party Only\", /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"TPO\",\n      id: \"TPO\",\n      value: this.state.TPO,\n      style: {\n        marginLeft: \"3px\"\n      },\n      checked: this.state.TPO == true ? \"checked\" : \"\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3147,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"TPOError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3148,\n        columnNumber: 57\n      }\n    })))))))), this.state.isShowNonRateParams == 1 ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3157,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3158,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3159,\n        columnNumber: 41\n      }\n    }, \"Non Rated Policy Params\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3161,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3162,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3163,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        verticalAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3164,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3165,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3166,\n        columnNumber: 57\n      }\n    }, \"Rate *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"rate\",\n      id: \"rate\",\n      onChange: e => this.handleChange(e),\n      value: this.state.rate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3167,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"rateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3168,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3170,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3171,\n        columnNumber: 57\n      }\n    }, \"Excess *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"excess\",\n      id: \"excess\",\n      onChange: e => this.handleChange(e),\n      value: this.state.excess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3172,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"excessError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3173,\n        columnNumber: 57\n      }\n    }))))))) : null, this.state.policyType == 'MarineTrade' || this.state.policyType == 'MultiVessel' || this.state.policyType == 'Engineering' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3182,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3183,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3184,\n        columnNumber: 41\n      }\n    }, this.state.policyType == 'MarineTrade' ? 'Marine Trade' : this.state.policyType == 'MultiVessel' ? 'Multi Vessel' : 'Engineering', \" Params\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3188,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3189,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3190,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        verticalAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3191,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3192,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3193,\n        columnNumber: 57\n      }\n    }, \"Binder *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"binder\",\n      id: \"binder\",\n      onChange: e => this.selectType(e.target, 'binder'),\n      value: this.state.binder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3194,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3195,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.binderList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3197,\n          columnNumber: 73\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"binderError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3201,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3203,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3204,\n        columnNumber: 57\n      }\n    }, \"Premium *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"premium\",\n      id: \"premium\",\n      onChange: e => this.handleChange(e),\n      value: this.state.premium,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3205,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"excessError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3206,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3208,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3209,\n        columnNumber: 57\n      }\n    }, \"Levy *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"levy\",\n      id: \"levy\",\n      onChange: e => this.handleChange(e),\n      value: this.state.levy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3210,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"excessError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3211,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3213,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3214,\n        columnNumber: 57\n      }\n    }, \"Admin Fee *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"adminFee\",\n      id: \"adminFee\",\n      onChange: e => this.handleChange(e),\n      value: this.state.adminFee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3215,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"excessError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3216,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3218,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3219,\n        columnNumber: 57\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"total\",\n      id: \"total\",\n      onChange: e => this.handleChange(e),\n      value: this.state.total,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3220,\n        columnNumber: 57\n      }\n    }))))))) : null), this.state.conditionalVessel ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3230,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3231,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3232,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3233,\n        columnNumber: 41\n      }\n    }, \"Vessel\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3235,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3236,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3237,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3238,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3239,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3240,\n        columnNumber: 57\n      }\n    }, \"Class *\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"vesselClass\",\n      id: \"vesselClass\",\n      options: this.state.VesselClassList,\n      value: this.state.vesselClass,\n      onChange: data => this.selectType(data, 'vesselClass'),\n      placeholder: \"Select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3241,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"whereRegError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3243,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3255,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3256,\n        columnNumber: 57\n      }\n    }, \"Type *\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"vesselType\",\n      id: \"vesselType\",\n      options: this.state.vesselTypeList,\n      value: this.state.vesselType,\n      onChange: data => this.selectType(data, 'vesselType'),\n      placeholder: \"Select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3257,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"vesselTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3259,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3271,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3272,\n        columnNumber: 57\n      }\n    }, \"Vessel Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"vesselName\",\n      id: \"vesselName\",\n      onChange: e => this.handleChange(e),\n      value: this.state.vesselName,\n      placeholder: \"Vessel Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3273,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"vesselNameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3274,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3277,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3278,\n        columnNumber: 57\n      }\n    }, \"Use of Vessel *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"UseofVessel\",\n      id: \"UseofVessel\",\n      onChange: e => this.selectType(e.target.value, 'UseofVessel'),\n      value: this.state.UseofVessel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3279,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3280,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.UseofVesselList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.Description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3282,\n          columnNumber: 73\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"UseofVesselError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3286,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3289,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3290,\n        columnNumber: 57\n      }\n    }, \"Hull Material *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"hullMaterial\",\n      id: \"hullMaterial\",\n      onChange: e => this.selectType(e.target.value, 'hullMaterial'),\n      value: this.state.hullMaterial,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3291,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3292,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.hullMaterialList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3294,\n          columnNumber: 73\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"hullMaterialError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3298,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3303,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3304,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3305,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3306,\n        columnNumber: 57\n      }\n    }, \"Make & Model *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"makeAndModel\",\n      id: \"makeAndModel\",\n      onChange: e => this.handleChange(e),\n      value: this.state.makeAndModel,\n      placeholder: \"Make & Model\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3307,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"makeAndModelError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3308,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3310,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3311,\n        columnNumber: 57\n      }\n    }, \"Length (meters) *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"length\",\n      id: \"length\",\n      onChange: e => this.handleChange(e),\n      value: this.state.length,\n      placeholder: \"Length (meters)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3312,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"lengthError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3313,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3315,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3316,\n        columnNumber: 57\n      }\n    }, \"Type of Build *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"vesselBuildType\",\n      id: \"vesselBuildType\",\n      value: this.state.vesselBuildType,\n      onChange: e => this.selectType(e.target.value, 'vesselBuildType'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3317,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3320,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.vesselBuildTypearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapName,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3322,\n          columnNumber: 73\n        }\n      }, type.Description);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"vesselBuildTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3326,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3328,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3329,\n        columnNumber: 57\n      }\n    }, \"Year Built *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"yearBuilt\",\n      id: \"yearBuilt\",\n      onChange: e => this.handleChange(e),\n      value: this.state.yearBuilt,\n      placeholder: \"Year Built\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3330,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"yearBuiltError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3331,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3333,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3334,\n        columnNumber: 57\n      }\n    }, \"Year Purchased *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"yearPurchased\",\n      id: \"yearPurchased\",\n      onChange: e => this.handleChange(e),\n      value: this.state.yearPurchased,\n      placeholder: \"Year Purchased\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3335,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"yearPurchasedError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3336,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3338,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3339,\n        columnNumber: 57\n      }\n    }, \"Purchase Price *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"purchasePrice\",\n      id: \"purchasePrice\",\n      onChange: e => this.handleChange(e),\n      value: this.state.purchasePrice,\n      placeholder: \"Purchase Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3340,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"purchasePriceError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3341,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3346,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3347,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3348,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3349,\n        columnNumber: 57\n      }\n    }, \"Sum Insured *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"sumInsured\",\n      id: \"sumInsured\",\n      onChange: e => this.handleChange(e),\n      value: this.state.sumInsured,\n      placeholder: \"Sum Insured\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3350,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"sumInsuredError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3351,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3353,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3354,\n        columnNumber: 57\n      }\n    }, \"Sum Insured Method *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"sumInsuredMethod\",\n      id: \"sumInsuredMethod\",\n      onChange: e => this.selectType(e.target.value, 'sumInsuredMethod'),\n      value: this.state.sumInsuredMethod,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3355,\n        columnNumber: 57\n      }\n    }, this.state.sumInsuredMethodList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.Description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3357,\n          columnNumber: 73\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"sumInsuredMethodError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3361,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3363,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3364,\n        columnNumber: 57\n      }\n    }, \"Last Survey Date \", this.state.lastSurveyDateRequired ? '*' : null), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"lastSurveyDate\",\n      id: \"lastSurveyDate\",\n      placeholder: \"Date of Birth\",\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      value: this.state.lastSurveyDate,\n      min: moment().subtract(5, 'years').format('YYYY-MM-DD'),\n      max: moment().format('YYYY-MM-DD'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3368,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"lastSurveyDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3373,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3378,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3379,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3380,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3381,\n        columnNumber: 57\n      }\n    }, \"Where is boat registered? *\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"whereReg\",\n      id: \"whereReg\",\n      options: this.state.whereRegList,\n      value: this.state.whereReg,\n      onChange: data => this.selectType(data, 'whereReg'),\n      placeholder: \"Select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3382,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"whereRegError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3384,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3386,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3387,\n        columnNumber: 57\n      }\n    }, \"Where is the boat Moored? *\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"boatMoored\",\n      id: \"boatMoored\",\n      options: this.state.boatMooredList,\n      value: this.state.boatMoored,\n      onChange: data => this.selectType(data, 'boatMoored'),\n      placeholder: \"Select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3388,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"boatMooredError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3390,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3392,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3393,\n        columnNumber: 57\n      }\n    }, \"Mooring Type *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"mooringType\",\n      id: \"mooringType\",\n      onChange: e => this.selectType(e.target, 'mooringType'),\n      value: this.state.mooringType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3394,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3395,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.mooringTypeList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3397,\n          columnNumber: 73\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"mooringTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3401,\n        columnNumber: 57\n      }\n    })))))))) : null, this.state.conditionalEngine ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3413,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3414,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3415,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3416,\n        columnNumber: 41\n      }\n    }, \"Engine & Trailer Details\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3418,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3419,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3420,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3421,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3422,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3423,\n        columnNumber: 57\n      }\n    }, \"Main Engine(s) *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"mainEngine\",\n      id: \"mainEngine\",\n      placeholder: \"Main Engine(s)\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mainEngine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3424,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"mainEngineError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3425,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3428,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3429,\n        columnNumber: 57\n      }\n    }, \"HP *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"mainEngineHp\",\n      id: \"mainEngineHp\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mainEngineHp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3430,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"mainEngineHpError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3431,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3434,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3435,\n        columnNumber: 57\n      }\n    }, \"Year *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"mainEngineYear\",\n      id: \"mainEngineYear\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mainEngineYear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3436,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"mainEngineYearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3437,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3440,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3441,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3442,\n        columnNumber: 61\n      }\n    }, this.state.mainengineSerialNoLabel), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"mainEngineSerialNo\",\n      id: \"mainEngineSerialNo\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mainEngineSerialNo // onBlur={(e) => this.handleChange(e)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3443,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"documentLanguageError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3448,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3449,\n        columnNumber: 61\n      }\n    }, \"Please enter serial number of Main Engine\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3453,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3454,\n        columnNumber: 57\n      }\n    }, \"No of Engines *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"noOfMainEngine\",\n      id: \"noOfMainEngine\",\n      onChange: e => this.selectType(e.target.value, 'noOfMainEngine'),\n      value: this.state.noOfMainEngine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3455,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3456,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.noOfEngineList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.Description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3458,\n          columnNumber: 73\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"noOfMainEngineError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3462,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3465,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3466,\n        columnNumber: 57\n      }\n    }, \"Transmission *\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tarnsmissionMainEngine\",\n      id: \"tarnsmissionMainEngine\",\n      onChange: e => this.selectType(e.target.value, 'tarnsmissionMainEngine'),\n      value: this.state.tarnsmissionMainEngine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3467,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3468,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.tarnsmissionMainEngineList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.Description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3470,\n          columnNumber: 73\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"tarnsmissionMainEngineError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3474,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3480,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3481,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3482,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3483,\n        columnNumber: 57\n      }\n    }, \"Auxiliary Engine\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"auxiliaryEngine\",\n      id: \"auxiliaryEngine\",\n      placeholder: \"Auxiliary Engine\",\n      onChange: e => this.handleChange(e),\n      value: this.state.auxiliaryEngine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3484,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"auxiliaryEngineError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3485,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3488,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3489,\n        columnNumber: 57\n      }\n    }, \"HP\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"auxiliaryEngineHp\",\n      id: \"auxiliaryEngineHp\",\n      onChange: e => this.handleChange(e),\n      value: this.state.auxiliaryEngineHp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3490,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"auxiliaryEngineHpError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3491,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3494,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3495,\n        columnNumber: 57\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"auxiliaryEngineYear\",\n      id: \"auxiliaryEngineYear\",\n      onChange: e => this.handleChange(e),\n      value: this.state.auxiliaryEngineYear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3496,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"auxiliaryEngineYearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3497,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3500,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3501,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3502,\n        columnNumber: 61\n      }\n    }, this.state.auxiliaryEngineSerialNoLabel), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"auxiliaryEngineSerialNo\",\n      id: \"auxiliaryEngineSerialNo\",\n      onChange: e => this.handleChange(e),\n      value: this.state.auxiliaryEngineSerialNo // onBlur={(e) => this.handleChange(e)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3503,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3508,\n        columnNumber: 61\n      }\n    }, \"Please enter serial number of auxiliary engine\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3512,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3513,\n        columnNumber: 57\n      }\n    }, \"No of Engines\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"noOfAuxiliaryEngine\",\n      id: \"noOfAuxiliaryEngine\",\n      onChange: e => this.selectType(e.target.value, 'noOfAuxiliaryEngine'),\n      value: this.state.noOfAuxiliaryEngine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3514,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3515,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.noOfEngineList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3517,\n          columnNumber: 73\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"noOfAuxiliaryEngineError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3521,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3524,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3525,\n        columnNumber: 57\n      }\n    }, \"Transmission\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"auxiliaryEngineTransmission\",\n      id: \"auxiliaryEngineTransmission\",\n      onChange: e => this.selectType(e.target.value, 'auxiliaryEngineTransmission'),\n      value: this.state.auxiliaryEngineTransmission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3526,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3527,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.tarnsmissionMainEngineList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3529,\n          columnNumber: 73\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"auxiliaryEngineTransmissionError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3533,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3539,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3540,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3541,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3542,\n        columnNumber: 57\n      }\n    }, \"Max Speed (Knots)*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"maxSpeed\",\n      id: \"maxSpeed\",\n      placeholder: \"Max Speed\",\n      onChange: e => this.handleChange(e),\n      value: this.state.maxSpeed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3543,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"maxSpeedError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3544,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3547,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3548,\n        columnNumber: 57\n      }\n    }, \"Make of Trailer\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"makeofTrailer\",\n      id: \"makeofTrailer\",\n      placeholder: \"Make of Trailer\",\n      onChange: e => this.handleChange(e),\n      value: this.state.makeofTrailer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3549,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"makeofTrailerError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3550,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3553,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3554,\n        columnNumber: 57\n      }\n    }, \"Trailer Serial No.\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"trailerSerialNo\",\n      id: \"trailerSerialNo\",\n      placeholder: \"Trailer Serial No.\",\n      onChange: e => this.handleChange(e),\n      value: this.state.trailerSerialNo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3555,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"trailerSerialNoError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3556,\n        columnNumber: 57\n      }\n    })))))))) : null, this.state.conditionalNavigation ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3568,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3569,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3570,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3571,\n        columnNumber: 41\n      }\n    }, \"Navigational Limits\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3573,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3574,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3575,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3576,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3577,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3578,\n        columnNumber: 57\n      }\n    }, \"Cruising Range *\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"cruisingRange\",\n      id: \"cruisingRange\",\n      options: this.state.cruisingRangeList,\n      value: this.state.cruisingRange,\n      onChange: data => this.selectType(data, 'cruisingRange'),\n      placeholder: \"Select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3579,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"cruisingRangeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3580,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3594,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3595,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3596,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3597,\n        columnNumber: 57\n      }\n    }, \"Additional Cruising Range\"), /*#__PURE__*/React.createElement(InputTextarea, {\n      style: {\n        width: \"100%\"\n      },\n      rows: 1,\n      autoResize: true,\n      name: \"additionalCruisingRange\",\n      id: \"additionalCruisingRange\",\n      placeholder: \"Additional Cruising Range\",\n      onChange: e => this.handleChange(e),\n      value: this.state.additionalCruisingRange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3598,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"additionalCruisingRangeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3599,\n        columnNumber: 57\n      }\n    })))))))) : null, this.state.conditionalGeneral ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3610,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3611,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3612,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3613,\n        columnNumber: 41\n      }\n    }, \"General Questions\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3615,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3616,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3618,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3619,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3620,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3621,\n        columnNumber: 57\n      }\n    }, \"Previous Boating Experience (Years)*\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3622,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      style: {\n        float: \"left\",\n        marginRight: \"8px\"\n      },\n      name: \"PreviousBoatingExperience\",\n      id: \"PreviousBoatingExperience\",\n      onChange: e => this.selectType(e.target.value, 'PreviousBoatingExperience'),\n      value: this.state.PreviousBoatingExperience,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3623,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3624,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.PreviousBoatingExperienceList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3626,\n          columnNumber: 77\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"PreviousBoatingExperienceError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3630,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3633,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3634,\n        columnNumber: 57\n      }\n    }, \"Select your NCB (Years)*\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3635,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      style: {\n        float: \"left\",\n        marginRight: \"8px\"\n      },\n      name: \"CurrentNCBYears\",\n      id: \"CurrentNCBYears\",\n      onChange: e => this.selectType(e.target.value, 'CurrentNCBYears'),\n      value: this.state.CurrentNCBYears,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3636,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3637,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.CurrentNCBYearsList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3639,\n          columnNumber: 77\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"CurrentNCBYearsError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3643,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3646,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3647,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3648,\n        columnNumber: 61\n      }\n    }, t(\"policyGeneral:previousInsurer.label\")), /*#__PURE__*/React.createElement(AutoComplete, {\n      placeholder: \"Previous Insurer Name\",\n      value: this.state.previousInsurer,\n      id: \"previousInsurer\",\n      onChange: e => this.setState({\n        previousInsurer: e.value\n      }, this.changePreviousInsurer(e.value)),\n      suggestions: this.state.previousInsurerSuggestions,\n      completeMethod: this.suggestPreviousInsurer.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3651,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"previousInsurerError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3653,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3666,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3667,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3668,\n        columnNumber: 61\n      }\n    }, \"Previous Policy No.\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Previous Policy\",\n      name: \"previousPolicyNo\",\n      id: \"previousPolicyNo\",\n      onChange: e => this.handleChange(e),\n      value: this.state.previousPolicyNo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3669,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"previousPolicyNoError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3670,\n        columnNumber: 61\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3676,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3677,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3678,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3679,\n        columnNumber: 57\n      }\n    }, t(\"policyGeneral:boatingQualifications.label\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3680,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"boatingQualifications\",\n      id: \"boatingQualifications\",\n      onChange: e => this.selectType(e.target.value, 'boatingQualifications'),\n      value: this.state.boatingQualifications,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3681,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3682,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.boatingQualificationList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3684,\n          columnNumber: 77\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"boatingQualificationsError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3688,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3689,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3690,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3691,\n        columnNumber: 69\n      }\n    }, this.state.boatingQualificationsArr.map((bqa, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3694,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3695,\n          columnNumber: 85\n        }\n      }, bqa.BoatingQualificationName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3698,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3699,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(BTN, {\n        type: \"button\",\n        tooltip: \"Delete\",\n        color: \"danger\",\n        onClick: () => this.delete(bqa),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3700,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-trash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3701,\n          columnNumber: 97\n        }\n      })))));\n    })))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3713,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3714,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Add\",\n      icon: \"fa fa-plus\",\n      color: \"primary\",\n      onClick: () => this.ValidateAndAddBoatingQualification(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3715,\n        columnNumber: 61\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3721,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3722,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3723,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3724,\n        columnNumber: 57\n      }\n    }, \"Any Losses in last 5 years? *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3725,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"losses\",\n      id: \"losses\",\n      onChange: e => this.selectType(e.target.value, 'losses'),\n      value: this.state.losses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3726,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3727,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.Options.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3729,\n          columnNumber: 77\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"lossesError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3733,\n        columnNumber: 61\n      }\n    })), this.state.showLossesDescribe ? /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3736,\n        columnNumber: 61\n      }\n    }, \"Describe\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3741,\n        columnNumber: 57\n      }\n    }, this.state.showLossesDescribe ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3743,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(InputTextarea, {\n      style: {\n        width: \"100%\"\n      },\n      rows: 1,\n      autoResize: true,\n      name: \"lossesDescribe\",\n      id: \"lossesDescribe\",\n      onChange: e => this.handleChange(e),\n      value: this.state.lossesDescribe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3744,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"lossesDescribeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3745,\n        columnNumber: 69\n      }\n    })) : null)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3756,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3757,\n        columnNumber: 57\n      }\n    }, \"Has been Convicted or Charged? *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3758,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"convicted\",\n      id: \"convicted\",\n      onChange: e => this.selectType(e.target.value, 'convicted'),\n      value: this.state.convicted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3759,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3760,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.Options.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3762,\n          columnNumber: 77\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"convictedError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3766,\n        columnNumber: 61\n      }\n    })), this.state.showconvictedDescribe ? /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3770,\n        columnNumber: 61\n      }\n    }, \"Describe\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3774,\n        columnNumber: 57\n      }\n    }, this.state.showconvictedDescribe ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3776,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(InputTextarea, {\n      style: {\n        width: \"100%\"\n      },\n      rows: 1,\n      cols: 30,\n      autoResize: true,\n      name: \"convictedDescribe\",\n      id: \"convictedDescribe\",\n      onChange: e => this.handleChange(e),\n      value: this.state.convictedDescribe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3777,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"convictedDescribeError\",\n      className: \"error invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3778,\n        columnNumber: 69\n      }\n    })) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3796,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3797,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3798,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3799,\n        columnNumber: 57\n      }\n    }, \"Has the Insurance been canceled or refused? *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3800,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"insurancecanceled\",\n      id: \"insurancecanceled\",\n      onChange: e => this.selectType(e.target.value, 'insurancecanceled'),\n      value: this.state.insurancecanceled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3801,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3802,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.Options.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3804,\n          columnNumber: 77\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"insurancecanceledError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3808,\n        columnNumber: 61\n      }\n    })), this.state.showinsurancecanceledDescribe ? /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3811,\n        columnNumber: 61\n      }\n    }, \"Describe\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3815,\n        columnNumber: 57\n      }\n    }, this.state.showinsurancecanceledDescribe ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3817,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(InputTextarea, {\n      style: {\n        width: \"100%\"\n      },\n      rows: 1,\n      cols: 30,\n      autoResize: true,\n      name: \"insurancecanceledDescribe\",\n      id: \"insurancecanceledDescribe\",\n      onChange: e => this.handleChange(e),\n      value: this.state.insurancecanceledDescribe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3818,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"insurancecanceledDescribeError\",\n      className: \"error invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3819,\n        columnNumber: 69\n      }\n    })) : null)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3833,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3834,\n        columnNumber: 57\n      }\n    }, \"Has the vessel ever been damaged? *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3835,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"damaged\",\n      id: \"damaged\",\n      onChange: e => this.selectType(e.target.value, 'damaged'),\n      value: this.state.damaged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3836,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3837,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.Options.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3839,\n          columnNumber: 77\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"damagedError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3843,\n        columnNumber: 61\n      }\n    })), this.state.showdamagedDescribe ? /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3846,\n        columnNumber: 61\n      }\n    }, \"Describe\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3850,\n        columnNumber: 57\n      }\n    }, this.state.showdamagedDescribe ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3852,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(InputTextarea, {\n      style: {\n        width: \"100%\"\n      },\n      rows: 1,\n      cols: 30,\n      autoResize: true,\n      name: \"damagedDescribe\",\n      id: \"damagedDescribe\",\n      onChange: e => this.handleChange(e),\n      value: this.state.damagedDescribe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3853,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"damagedDescribeError\",\n      className: \"error invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3854,\n        columnNumber: 69\n      }\n    })) : null)))))))) : null, this.state.conditionalLimits ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3876,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3877,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3878,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3879,\n        columnNumber: 41\n      }\n    }, \"Limits / Additional Cover\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3881,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3882,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3883,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3884,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3885,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3886,\n        columnNumber: 57\n      }\n    }, \"Third Party Liability *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3887,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"thirdPartyLiability\",\n      id: \"thirdPartyLiability\",\n      onChange: e => this.selectType(e.target.value, 'thirdPartyLiability'),\n      value: this.state.thirdPartyLiability,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3888,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3889,\n        columnNumber: 65\n      }\n    }, \"Select\"), this.state.ThirdPartyLiabilityList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3891,\n          columnNumber: 77\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"thirdPartyLiabilityError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3895,\n        columnNumber: 61\n      }\n    }))))), this.state.DisplayWater == 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3903,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3904,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3905,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3906,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3907,\n        columnNumber: 69\n      }\n    }, \"Water Skiing Liability\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3909,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3911,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isWaterSkiing\",\n      id: \"isWaterSkiing\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isWaterSkiing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3912,\n        columnNumber: 73\n      }\n    }), this.state.isWaterSkiing ? /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"waterSkiingLiability\",\n      id: \"waterSkiingLiability\",\n      onChange: e => this.handleChange(e),\n      value: this.state.waterSkiingLiability,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3914,\n        columnNumber: 77\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"em\", {\n      id: \"waterSkiingLiabilityError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3916,\n        columnNumber: 73\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3922,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3923,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3924,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3925,\n        columnNumber: 69\n      }\n    }, \"Water Toys Liabiility\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3927,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3929,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isWaterToys\",\n      id: \"isWaterToys\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isWaterToys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3930,\n        columnNumber: 73\n      }\n    }), this.state.isWaterToys ? /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"waterToysLiability\",\n      id: \"waterToysLiability\",\n      onChange: e => this.handleChange(e),\n      value: this.state.waterToysLiability,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3932,\n        columnNumber: 77\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"em\", {\n      id: \"waterToysLiabilityError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3934,\n        columnNumber: 73\n      }\n    })))))) : null, this.state.DisplayRacing == 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3944,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3945,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3946,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3947,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3948,\n        columnNumber: 69\n      }\n    }, \"Sail Racing Coverage Required?\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3950,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3952,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isSailRacing\",\n      id: \"isSailRacing\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isSailRacing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3953,\n        columnNumber: 73\n      }\n    }), this.state.isSailRacing ? /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"sailRacingCoverage\",\n      id: \"sailRacingCoverage\",\n      onChange: e => this.handleChange(e),\n      value: this.state.sailRacingCoverage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3955,\n        columnNumber: 77\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"em\", {\n      id: \"sailRacingCoverageError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3957,\n        columnNumber: 73\n      }\n    })))))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3967,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3968,\n        columnNumber: 49\n      }\n    }, this.state.DisplayRacing == 1 ? /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3971,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3972,\n        columnNumber: 65\n      }\n    }, \"Racing Event Type *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3973,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"racingEventType\",\n      id: \"racingEventType\",\n      onChange: e => this.selectType(e.target.value, 'racingEventType'),\n      value: this.state.racingEventType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3974,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3975,\n        columnNumber: 73\n      }\n    }, \"Select\"), this.state.RacingEventTypeList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3977,\n          columnNumber: 85\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"racingEventTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3981,\n        columnNumber: 69\n      }\n    }))) : null, this.state.DisplayCrew == 1 ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3987,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3988,\n        columnNumber: 65\n      }\n    }, \"Crew Liability? *\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3989,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"crewLiability\",\n      id: \"crewLiability\",\n      onChange: e => this.selectType(e.target.value, 'crewLiability'),\n      value: this.state.crewLiability,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3990,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3991,\n        columnNumber: 73\n      }\n    }, \"Select\"), this.state.CrewLiabilityList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3993,\n          columnNumber: 85\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"crewLiabilityError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3997,\n        columnNumber: 69\n      }\n    }))) : null)))))) : null, this.state.LoginUserType == \"InternalStaff\" ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4010,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4011,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4012,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"AssumptionAndTerms\",\n      id: \"AssumptionAndTerms\",\n      onChange: e => this.handleChange(e),\n      checked: this.state.AssumptionAndTerms == true ? \"checked\" : \"\",\n      value: this.state.AssumptionAndTerms,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4013,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4014,\n        columnNumber: 41\n      }\n    }, \"I agree to the \", this.state.assumptionCount == 0 ? 'Assumption' : /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.openModal('Assumption'),\n      style: {\n        textDecorationLine: 'underline',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4014,\n        columnNumber: 113\n      }\n    }, \"Assumptions\"), \" as well as \", /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.openModal('TermsAndCondition'),\n      style: {\n        textDecorationLine: 'underline',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4014,\n        columnNumber: 253\n      }\n    }, \"Terms & Conditions\")), this.state.AssumptionAndTermsError ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4016,\n        columnNumber: 47\n      }\n    }, \"You must agree to Assumption And Terms & Conditions\") : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4021,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4022,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4023,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.BackToPolicyList(),\n      label: BackButton,\n      icon: \"fa fa-angle-left\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4024,\n        columnNumber: 37\n      }\n    }), this.state.refer ? /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.Save(),\n      label: \"Generate Quotation Referred\",\n      icon: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4027,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.Save(),\n      label: \"Generate Quotation\",\n      icon: \"fa fa-check\",\n      disabled: !this.state.AssumptionAndTerms,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4028,\n        columnNumber: 44\n      }\n    })))))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: () => this.toggleLarge('Delete'),\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4034,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleLarge('Delete'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4036,\n        columnNumber: 21\n      }\n    }, \"Delete Boating Qualification\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4037,\n        columnNumber: 21\n      }\n    }, \"Are you sure you want to Delete Boating Qualification?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4040,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"primary\",\n      onClick: () => this.deleteBoatingQualification(this.state.temData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4041,\n        columnNumber: 25\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: () => this.toggleLarge('Delete'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4042,\n        columnNumber: 25\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleAssumption,\n      toggle: () => this.toggleLarge('Assumption'),\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4045,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleLarge('Assumption'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4047,\n        columnNumber: 21\n      }\n    }, \"Assumption\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4048,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4049,\n        columnNumber: 25\n      }\n    }, this.state.assumptionArr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4051,\n          columnNumber: 41\n        }\n      }, type.AssumptionDescription);\n    }))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4055,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: () => this.toggleLarge('TermsAndCondition'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4056,\n        columnNumber: 25\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleTermsAndCondition,\n      toggle: () => this.toggleLarge('TermsAndCondition'),\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4059,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleLarge('TermsAndCondition'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4061,\n        columnNumber: 21\n      }\n    }, \"Terms And Condition\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4062,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: t(\"translation:termsAndCondition.terms\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4063,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4065,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: () => this.toggleLarge('TermsAndCondition'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4066,\n        columnNumber: 25\n      }\n    }, \"Close\"))));\n  }\n\n}\n\nexport default withTranslation()(NewPolicy);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/New Policy/CreatePolicy.js"],"names":["React","Component","Select","Card","CardBody","Col","Row","Input","Modal","ModalBody","ModalFooter","ModalHeader","Button","BTN","api","APIConstant","AutoComplete","Calendar","InputTextarea","CommonConfig","DatePicker","moment","toast","useTranslation","withTranslation","Trans","NewPolicy","constructor","props","ValidateAndAddBoatingQualification","state","boatingQualifications","boatingQualificationsError","setState","show","BoatingQualificationsArray","boatingQualificationsArr","BoatingQualificationsList","boatingQualificationList","index","findIndex","x","StringMapKey","bqindex","BoatingQualification","boatingQuaData","StringMapId","BoatingQualificationName","Status","push","splice","deleteBoatingQualification","data","boatingQualificationAllList","PolicyId","toggleModal","temData","delete","openModal","toggleLarge","modal","toggleAssumption","toggleTermsAndCondition","handleChange","e","target","name","value","alphaNumeric","RegExp","isEmpty","policyNumberError","length","policyNumber","checked","refer","TPO","country","getVesselClassByCountry","vesselClass","VesselClassError","vesselType","vesselTypeError","policyEffectiveDateError","format","RenewalDate","add","policyEffectiveDate","renewalDate","premiumError","decimalRegEx","decimalWithOne","test","calculateTotal","levy","adminFee","premium","levyError","adminFeeError","rateError","percentage","rate","excessError","excess","vesselNameError","vesselName","makeAndModelError","makeAndModel","lengthError","yearBuiltError","yearRegEx","year","minYear","subtract","maxYear","yearBuilt","VesselClassList","filter","SelectedClass","label","BoatAge","Date","getFullYear","lastSurveyDateRequired","YBuilt","yearPurchased","yearPurchasedError","Ybuilt","purchasePriceError","purchasePrice","sumInsuredError","sumInsured","lastSurveyDateError","surveyDueDate","SurveyDueDate","lastSurveyDate","mainEngineError","mainEngine","mainEngineHpError","mainEngineHp","mainEngineSerialNoError","mainEngineSerialNo","mainEngineYearError","mainEngineYear","auxiliaryEngineError","auxiliaryEngine","auxiliaryEngineHpError","auxiliaryEngineHp","auxiliaryEngineSerialNoError","auxiliaryEngineSerialNo","auxiliaryEngineYearError","auxiliaryEngineYear","maxSpeedError","maxSpeed","makeofTrailerError","makeofTrailer","trailerSerialNoError","alphaNumericRegEx","trailerSerialNo","additionalCruisingRangeError","additionalCruisingRange","previousPolicyNoError","previousPolicyNo","lossesDescribeError","lossesDescribe","convictedDescribeError","convictedDescribe","insurancecanceledDescribeError","insurancecanceledDescribe","damagedDescribeError","damagedDescribe","isWaterSkiing","waterSkiingLiability","systemWaterSkiingLiability","waterSkiingLiabilityError","isWaterToys","waterToysLiability","systemWaterToysLiabiility","waterToysLiabilityError","isSailRacing","sailRacingCoverageError","sailRacingCoverage","console","log","AssumptionAndTerms","AssumptionAndTermsError","Options","StringMapName","isInsert","LanguageId","i18n","language","PolicyStatus","LoginUserType","addOnCoverageArr","addOnCoverageCount","assumptionArr","assumptionCount","EntityId","EntityType","Policy_Holder","Policy_Holder_Email","Policy_Holder_Address","Policy_Holder_Conatct","ContactCode","changePolicyNumber","countryList","countryError","policyTypeList","policyType","policyTypeError","documentLanguageList","documentLanguage","documentLanguageError","currencyList","currency","currencyError","PolicyDepartment","departmentList","PolicyDepartmentError","source","sourceError","sourceList","sourceDisplay","ratingType","isShowNonRateParams","isEditDocLang","isEditCurrency","vesselTypeList","UseofVesselList","UseofVessel","UseofVesselError","hullMaterialList","hullMaterial","hullMaterialError","vesselBuildType","vesselBuildTypearr","vesselBuildTypeError","sumInsuredMethodList","sumInsuredMethod","sumInsuredMethodError","whereRegList","whereReg","whereRegError","boatMooredList","boatMoored","boatMooredError","mooringTypeList","mooringType","mooringTypeError","mainengineSerialNoLabel","noOfEngineList","noOfMainEngine","noOfMainEngineError","tarnsmissionMainEngine","tarnsmissionMainEngineList","tarnsmissionMainEngineError","auxiliaryEngineSerialNoLabel","noOfAuxiliaryEngine","noOfAuxiliaryEngineError","auxiliaryEngineTransmission","auxiliaryEngineTransmissionarr","auxiliaryEngineTransmissionError","cruisingRangeList","cruisingRange","cruisingRangeError","PreviousBoatingExperienceList","PreviousBoatingExperience","PreviousBoatingExperienceError","CurrentNCBYearsList","CurrentNCBYears","CurrentNCBYearsError","previousInsurerList","previousInsurer","previousInsurerError","losses","lossesError","showLossesDescribe","convicted","convictedError","showconvictedDescribe","insurancecanceled","insurancecanceledError","showinsurancecanceledDescribe","damaged","damagedError","showdamagedDescribe","DisplayWater","DisplayRacing","DisplayCrew","ThirdPartyLiabilityList","thirdPartyLiability","thirdPartyLiabilityError","RacingEventTypeList","racingEventType","racingEventTypeError","CrewLiabilityList","crewLiability","crewLiabilityError","conditionalVessel","conditionalEngine","conditionalNavigation","conditionalGeneral","conditionalLimits","binderList","binder","binderError","total","componentDidMount","match","params","Object","keys","getPolicyContactDetails","Id","undefined","setTimeout","ThirdPartyStringMapType","ThirdPartyStringMapOnCountry","getDropDownValues","userType","loggedInUserData","ContactType","boatingQualificationDropdown","getMooringZones","getDropdown","getWaterSkiiAndWaterToys","getCruisingRangeList","getBoatRegisterList","getNextPolicyNumer","id","post","then","res","success","fullname","Email","addr","Country","PostalCode","formatPhone","CountryCode","AreaCode","PhoneNumber","resCountry","newCountry","find","catch","err","WaterSkiingLiability","WaterToysLiabiility","getBinderByPolicyType","stringType","stringMapType","formattedData","i","UMRN","BinderId","formattedLanguage","get","path","getLanguage","Language","formattedCurrency","getCurrency","CurrncyCode","editDocLang","task","editCurrency","setStateName","orderBy","stringmaptype","orderby","dropdownbycode","error","VesselClassName","VesselClassId","getVesselType","getVesselTypeByCountry","VesselTypeName","VesselTypeId","getDefaultAddonCoverage","getAssumption","pMode","zone","mooringName","MooringName","Description","getmooringType","mooring_Type","MooringType","MooringGuideId","tempPolicyNumber","PolicyNumber","checkPolicyNumberExists","returnval","editPolicyNumber","field","condition","errorField","message","document","getElementById","className","innerHTML","listData","forEach","getOrganazationData","OrganizationName","OrganizationId","suggestPreviousInsurer","event","results","previousInsurerData","previousInsurerName","toLowerCase","startsWith","query","previousInsurerResult","previousInsurerSuggestions","changePreviousInsurer","totalDue","Premium","Levy","AdminFee","Number","getVesselClassIdFromName","vesselClassName","class","vesselClassId","vesselTypeName","getFixedVesselTypeFromVesselClassName","classId","type","getVesselTypeIdFromNameandClassId","result","conditionalFields","selectType","VesselType","SelectedId","DisplayCondition","ShowHideLimitAdditionalFields","displayWater","displayRacing","displayCrew","auxiliaryEngineNoEngine","Save","LoggedInUserId","loggedInUserId","IsReferred","PolicyType","DocLang","Currency","InceptionDate","dateFormat","dbDateTime","VesselClass","VesselName","VesselUse","HullMaterial","Make","Length","BuildType","LastSurveyDate","YearBuilt","YearPurchased","yearOnly","PurchasePrice","SumInsured","SumInsuredMethod","MainEngine","MainEngineHp","MainEngineYear","MainEngineSerialNo","MainEngineCount","MainEngineTransmission","AuxiliaryEngine","AuxiliaryEngineHp","AuxiliaryEngineYear","AuxiliaryEngineSerialNo","AuxiliaryEngineCount","AuxiliaryEngineTransmission","MaxSpeed","MakeOfTrailer","TrailerSrNo","VesselRegistrationLocation","CruisingRange","AdditionalCruisingRange","PreviousBoatingExperinceInYears","CurrentNCBYear","PreviousInsurer","PreviousPolicyNumber","BoatingQualificationsCount","IsLossesInLastFiveYears","LossesInLastFiveYearsDescription","IsConvictedOrCharged","ConvictedOrChargedDescription","IsInsuranceCanceledOrRefused","InsuranceCanceledOrRefusedDescription","IsVesselHasBeenDamaged","VesselHasBeenDamagedDescription","ThirdPartyLiabilityAmount","WaterSkiingLiabilityAmount","WaterToysLiabilityAmount","SailRacingCoverageAmount","RacingEventType","CrewLiability","NonRatableRatingType","NonRatableRateAmount","ExcessAmount","MarineTradePremium","GovtLevyAmount","AdminFeeAmount","Department","SourceId","history","pathname","policyid","tab","BackToPolicyList","render","t","SaveButton","CancelButton","BackButton","AddButton","DeleteButton","marginTop","width","display","verticalAlign","map","float","margin","alignSelf","marginLeft","departmentDisable","ct","marginRight","bind","bqa","textDecorationLine","cursor","color","textAlign","AssumptionDescription","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,kDAAP;AACA,OAAO,yCAAP;AACA,OAAO,2BAAP;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,SAAjD,EAA4DC,WAA5D,EAAyEC,WAAzE,EAAsFC,MAAM,IAAIC,GAAhG,QAA2G,YAA3G;AACA,SAASD,MAAT,QAAuB,mBAAvB;AACA,OAAOE,GAAP,MAAgB,0BAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,uCAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;;AAEA,MAAMC,SAAN,SAAwBzB,SAAxB,CAAkC;AAC9B0B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAy2BnBC,kCAz2BmB,GAy2BkB,MAAM;AACvC,UAAI,KAAKC,KAAL,CAAWC,qBAAX,KAAqC,EAArC,IAA2C,KAAKD,KAAL,CAAWC,qBAAX,KAAqC,IAAhF,IAAwF,KAAKD,KAAL,CAAWE,0BAAvG,EAAmI;AAC/H,aAAKC,QAAL,CAAc;AAAED,UAAAA,0BAA0B,EAAE;AAA9B,SAAd;AACA,aAAKE,IAAL,CAAU,uBAAV,EAAmC,IAAnC,EAAyC,4BAAzC,EAAuE,sCAAvE;AACH,OAHD,MAGO;AACH,YAAIC,0BAA0B,GAAG,KAAKL,KAAL,CAAWM,wBAA5C;AACA,YAAIC,yBAAyB,GAAG,KAAKP,KAAL,CAAWQ,wBAA3C;AACA,YAAIC,KAAK,GAAGF,yBAAyB,CAACG,SAA1B,CAAoCC,CAAC,IAAIA,CAAC,CAACC,YAAF,KAAmB,KAAKZ,KAAL,CAAWC,qBAAvE,CAAZ;AACA,YAAIY,OAAO,GAAGR,0BAA0B,CAACK,SAA3B,CAAqCC,CAAC,IAAIA,CAAC,CAACG,oBAAF,KAA2B,KAAKd,KAAL,CAAWC,qBAAhF,CAAd;;AACA,YAAIY,OAAO,IAAI,CAAC,CAAhB,EAAmB;AACf,cAAIE,cAAc,GAAG;AACjBD,YAAAA,oBAAoB,EAAEP,yBAAyB,CAACE,KAAD,CAAzB,CAAiCO,WADtC;AAEjBC,YAAAA,wBAAwB,EAAEV,yBAAyB,CAACE,KAAD,CAAzB,CAAiCG,YAF1C;AAGjBM,YAAAA,MAAM,EAAEX,yBAAyB,CAACE,KAAD,CAAzB,CAAiCS;AAHxB,WAArB;AAKAb,UAAAA,0BAA0B,CAACc,IAA3B,CAAgCJ,cAAhC;AACH,SAPD,MAOO;AACHV,UAAAA,0BAA0B,CAACQ,OAAD,CAA1B,CAAoCK,MAApC,GAA6C,QAA7C;AACH;;AACDX,QAAAA,yBAAyB,CAACa,MAA1B,CAAiCX,KAAjC,EAAwC,CAAxC;AACA,aAAKN,QAAL,CAAc;AAAEG,UAAAA,wBAAwB,EAAED,0BAA5B;AAAwDG,UAAAA,wBAAwB,EAAED,yBAAlF;AAA6GN,UAAAA,qBAAqB,EAAE;AAApI,SAAd;AACH;AACJ,KA/3BkB;;AAAA,SAi4BnBoB,0BAj4BmB,GAi4BWC,IAAD,IAAU;AAEnC,UAAIjB,0BAA0B,GAAG,KAAKL,KAAL,CAAWM,wBAA5C;AACA,UAAIC,yBAAyB,GAAG,KAAKP,KAAL,CAAWQ,wBAA3C;AACA,UAAIe,2BAA2B,GAAG,KAAKvB,KAAL,CAAWuB,2BAA7C;;AAEA,UAAID,IAAI,CAACE,QAAT,EAAmB;AACf,YAAIf,KAAK,GAAGJ,0BAA0B,CAACK,SAA3B,CAAqCC,CAAC,IAAIA,CAAC,CAACG,oBAAF,KAA2BQ,IAAI,CAACR,oBAA1E,CAAZ;AACAT,QAAAA,0BAA0B,CAACI,KAAD,CAA1B,CAAkCS,MAAlC,GAA2C,UAA3C;AACH,OAHD,MAGO;AACH,YAAIT,KAAK,GAAGJ,0BAA0B,CAACK,SAA3B,CAAqCC,CAAC,IAAIA,CAAC,CAACG,oBAAF,KAA2BQ,IAAI,CAACR,oBAA1E,CAAZ;AACAT,QAAAA,0BAA0B,CAACe,MAA3B,CAAkCX,KAAlC,EAAyC,CAAzC;AACH;;AACD,UAAII,OAAO,GAAGU,2BAA2B,CAACb,SAA5B,CAAsCC,CAAC,IAAIA,CAAC,CAACK,WAAF,KAAkBM,IAAI,CAACR,oBAAlE,CAAd;AACAP,MAAAA,yBAAyB,CAACY,IAA1B,CAA+BI,2BAA2B,CAACV,OAAD,CAA1D;AACA,WAAKV,QAAL,CAAc;AAAEG,QAAAA,wBAAwB,EAAED,0BAA5B;AAAwDG,QAAAA,wBAAwB,EAAED,yBAAlF;AAA6GkB,QAAAA,WAAW,EAAE,KAA1H;AAAiIC,QAAAA,OAAO,EAAE;AAA1I,OAAd;AACH,KAj5BkB;;AAAA,SA65BnBC,MA75BmB,GA65BTL,IAAD,IAAU;AACf,WAAKnB,QAAL,CAAc;AAAEuB,QAAAA,OAAO,EAAEJ;AAAX,OAAd;AACA,WAAKM,SAAL,CAAe,QAAf;AACH,KAh6BkB;;AAAA,SAk6BnBC,WAl6BmB,GAk6BJC,KAAD,IAAW;AACrB,UAAIA,KAAK,IAAI,QAAb,EAAuB;AACnB,aAAK3B,QAAL,CAAc;AAAEsB,UAAAA,WAAW,EAAE,KAAf;AAAsBC,UAAAA,OAAO,EAAE;AAA/B,SAAd;AACH,OAFD,MAEO,IAAII,KAAK,IAAI,YAAb,EAA2B;AAC9B,aAAK3B,QAAL,CAAc;AAAE4B,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACH,OAFM,MAEA,IAAID,KAAK,IAAI,mBAAb,EAAkC;AACrC,aAAK3B,QAAL,CAAc;AAAE6B,UAAAA,uBAAuB,EAAE;AAA3B,SAAd;AACH;AACJ,KA16BkB;;AAAA,SAu4DnBC,YAv4DmB,GAu4DHC,CAAD,IAAO;AAElB,WAAK/B,QAAL,CAAc;AAAE,SAAC+B,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5B,OAAd,EAFkB,CAIlB;;AACA,UAAIC,YAAY,GAAGjD,YAAY,CAACkD,MAAb,CAAoBD,YAAvC;;AACA,UAAIJ,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClC;;AACA,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEsC,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACA,eAAKrC,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,4BAArD;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,EAA5B,EAAgC;AACnC,eAAKvC,QAAL,CAAc;AAAEsC,YAAAA,iBAAiB,EAAE,IAArB;AAA2BE,YAAAA,YAAY,EAAE,KAAK3C,KAAL,CAAW2C;AAApD,WAAd;AACA,eAAKvC,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,2BAArD;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEwC,YAAAA,YAAY,EAAET,CAAC,CAACC,MAAF,CAASE,KAAzB;AAAgCI,YAAAA,iBAAiB,EAAE;AAAnD,WAAd;AACA,eAAKrC,IAAL,CAAU,cAAV,EAA0B,KAA1B,EAAiC,mBAAjC,EAAsD,EAAtD;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,OAAtB,EAA+B;AAC3B,YAAIF,CAAC,CAACC,MAAF,CAASS,OAAb,EAAsB;AAClB,eAAKzC,QAAL,CAAc;AAAE0C,YAAAA,KAAK,EAAEX,CAAC,CAACC,MAAF,CAASS;AAAlB,WAAd;AACH,SAFD,MAEO;AACH,eAAKzC,QAAL,CAAc;AAAE0C,YAAAA,KAAK,EAAEX,CAAC,CAACC,MAAF,CAASS;AAAlB,WAAd;AACH;AACJ;;AAED,UAAIV,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,KAAtB,EAA6B;AACzB,aAAKjC,QAAL,CAAc;AAAE2C,UAAAA,GAAG,EAAEZ,CAAC,CAACC,MAAF,CAASS;AAAhB,SAAd;;AACA,YAAI,CAACvD,YAAY,CAACmD,OAAb,CAAqB,KAAKxC,KAAL,CAAW+C,OAAhC,CAAL,EAA+C;AAC3C,eAAKC,uBAAL,CAA6B,KAAKhD,KAAL,CAAW+C,OAAxC,EAAiDb,CAAC,CAACC,MAAF,CAASS,OAA1D;AACA,eAAKzC,QAAL,CAAc;AAAC8C,YAAAA,WAAW,EAAC,EAAb;AAAiBC,YAAAA,gBAAgB,EAAE,IAAnC;AAAyCC,YAAAA,UAAU,EAAC,EAApD;AAAwDC,YAAAA,eAAe,EAAE;AAAzE,WAAd;AACH;AACJ;;AAED,UAAIlB,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,qBAAtB,EAA6C;AACzC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEkD,YAAAA,wBAAwB,EAAE;AAA5B,WAAd;AACA,eAAKjD,IAAL,CAAU,qBAAV,EAAiC,IAAjC,EAAuC,0BAAvC,EAAmE,oCAAnE;AACH,SAHD,MAGO,IAAIb,MAAM,CAAC2C,CAAC,CAACC,MAAF,CAASE,KAAV,CAAN,CAAuBiB,MAAvB,CAA8B,YAA9B,IAA8C/D,MAAM,GAAG+D,MAAT,CAAgB,YAAhB,CAAlD,EAAiF;AACpF,eAAKnD,QAAL,CAAc;AAAEkD,YAAAA,wBAAwB,EAAE;AAA5B,WAAd;AACA,eAAKjD,IAAL,CAAU,qBAAV,EAAiC,IAAjC,EAAuC,0BAAvC,EAAmE,0CAAnE;AACH,SAHM,MAGA;AACH,cAAImD,WAAW,GAAGhE,MAAM,CAAC2C,CAAC,CAACC,MAAF,CAASE,KAAV,CAAN,CAAuBmB,GAAvB,CAA2B,GAA3B,EAAgC,MAAhC,EAAwCF,MAAxC,CAA+C,YAA/C,CAAlB;AACA,eAAKnD,QAAL,CAAc;AAAEkD,YAAAA,wBAAwB,EAAE,KAA5B;AAAmCI,YAAAA,mBAAmB,EAAEvB,CAAC,CAACC,MAAF,CAASE,KAAjE;AAAwEqB,YAAAA,WAAW,EAAEH;AAArF,WAAd;AACA,eAAKnD,IAAL,CAAU,qBAAV,EAAiC,KAAjC,EAAwC,0BAAxC,EAAoE,EAApE;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,SAAtB,EAAiC;AAC7B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEwD,YAAAA,YAAY,EAAE;AAAhB,WAAd;AACA,eAAKvD,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,cAA3B,EAA2C,6BAA3C;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEwD,cAAAA,YAAY,EAAE;AAAhB,aAAd;AACA,iBAAKvD,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,cAA3B,EAA2C,mCAA3C;AACH,WAHD,MAGO;AACH,iBAAK2D,cAAL,CAAoB7B,CAAC,CAACC,MAAF,CAASE,KAA7B,EAAoC,KAAKrC,KAAL,CAAWgE,IAA/C,EAAqD,KAAKhE,KAAL,CAAWiE,QAAhE;AACA,iBAAK9D,QAAL,CAAc;AAAEwD,cAAAA,YAAY,EAAE,KAAhB;AAAuBO,cAAAA,OAAO,EAAEhC,CAAC,CAACC,MAAF,CAASE;AAAzC,aAAd;AACA,iBAAKjC,IAAL,CAAU,SAAV,EAAqB,KAArB,EAA4B,cAA5B,EAA4C,EAA5C;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,MAAtB,EAA8B;AAC1B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEgE,YAAAA,SAAS,EAAE;AAAb,WAAd;AACA,eAAK/D,IAAL,CAAU,MAAV,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,6BAArC;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEgE,cAAAA,SAAS,EAAE;AAAb,aAAd;AACA,iBAAK/D,IAAL,CAAU,MAAV,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,mCAArC;AACH,WAHD,MAGO;AACH,iBAAK2D,cAAL,CAAoB,KAAK/D,KAAL,CAAWkE,OAA/B,EAAwChC,CAAC,CAACC,MAAF,CAASE,KAAjD,EAAwD,KAAKrC,KAAL,CAAWiE,QAAnE;AACA,iBAAK9D,QAAL,CAAc;AAAEgE,cAAAA,SAAS,EAAE,KAAb;AAAoBH,cAAAA,IAAI,EAAE9B,CAAC,CAACC,MAAF,CAASE;AAAnC,aAAd;AACA,iBAAKjC,IAAL,CAAU,MAAV,EAAkB,KAAlB,EAAyB,WAAzB,EAAsC,EAAtC;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAC9B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEiE,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACA,eAAKhE,IAAL,CAAU,UAAV,EAAsB,IAAtB,EAA4B,eAA5B,EAA6C,6BAA7C;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEiE,cAAAA,aAAa,EAAE;AAAjB,aAAd;AACA,iBAAKhE,IAAL,CAAU,UAAV,EAAsB,IAAtB,EAA4B,eAA5B,EAA6C,mCAA7C;AACH,WAHD,MAGO;AACH,iBAAK2D,cAAL,CAAoB,KAAK/D,KAAL,CAAWkE,OAA/B,EAAwC,KAAKlE,KAAL,CAAWgE,IAAnD,EAAyD9B,CAAC,CAACC,MAAF,CAASE,KAAlE;AACA,iBAAKlC,QAAL,CAAc;AAAEiE,cAAAA,aAAa,EAAE,KAAjB;AAAwBH,cAAAA,QAAQ,EAAE/B,CAAC,CAACC,MAAF,CAASE;AAA3C,aAAd;AACA,iBAAKjC,IAAL,CAAU,UAAV,EAAsB,KAAtB,EAA6B,eAA7B,EAA8C,EAA9C;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,MAAtB,EAA8B;AAC1B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEkE,YAAAA,SAAS,EAAE;AAAb,WAAd;AACA,eAAKjE,IAAL,CAAU,MAAV,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,mBAArC;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoB+B,UAAvC;AACA,cAAIA,UAAU,GAAGpC,CAAC,CAACC,MAAF,CAASE,KAA1B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBQ,UAAlB,CAAL,EAAoC;AAChC,iBAAKnE,QAAL,CAAc;AAAEkE,cAAAA,SAAS,EAAE;AAAb,aAAd;AACA,iBAAKjE,IAAL,CAAU,MAAV,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,yBAArC;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEkE,cAAAA,SAAS,EAAE,KAAb;AAAoBE,cAAAA,IAAI,EAAErC,CAAC,CAACC,MAAF,CAASE;AAAnC,aAAd;AACA,iBAAKjC,IAAL,CAAU,MAAV,EAAkB,KAAlB,EAAyB,WAAzB,EAAsC,EAAtC;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,QAAtB,EAAgC;AAC5B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEqE,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA,eAAKpE,IAAL,CAAU,QAAV,EAAoB,IAApB,EAA0B,aAA1B,EAAyC,4BAAzC;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEqE,cAAAA,WAAW,EAAE;AAAf,aAAd;AACA,iBAAKpE,IAAL,CAAU,QAAV,EAAoB,IAApB,EAA0B,aAA1B,EAAyC,kCAAzC;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEqE,cAAAA,WAAW,EAAE,KAAf;AAAsBC,cAAAA,MAAM,EAAEvC,CAAC,CAACC,MAAF,CAASE;AAAvC,aAAd;AACA,iBAAKjC,IAAL,CAAU,QAAV,EAAoB,KAApB,EAA2B,aAA3B,EAA0C,EAA1C;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEuE,YAAAA,eAAe,EAAE;AAAnB,WAAd;AACA,eAAKtE,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,4BAAjD;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,EAA5B,EAAgC;AACnC,eAAKvC,QAAL,CAAc;AAAEuE,YAAAA,eAAe,EAAE,IAAnB;AAAyBC,YAAAA,UAAU,EAAE,KAAK3E,KAAL,CAAW2E;AAAhD,WAAd;AACA,eAAKvE,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,2BAAjD;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEwE,YAAAA,UAAU,EAAEzC,CAAC,CAACC,MAAF,CAASE,KAAvB;AAA8BqC,YAAAA,eAAe,EAAE;AAA/C,WAAd;AACA,eAAKtE,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+B,iBAA/B,EAAkD,EAAlD;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEyE,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACA,eAAKxE,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,4BAArD;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,EAA5B,EAAgC;AACnC,eAAKvC,QAAL,CAAc;AAAEyE,YAAAA,iBAAiB,EAAE,IAArB;AAA2BC,YAAAA,YAAY,EAAE,KAAK7E,KAAL,CAAW6E;AAApD,WAAd;AACA,eAAKzE,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,2BAArD;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAE0E,YAAAA,YAAY,EAAE3C,CAAC,CAACC,MAAF,CAASE,KAAzB;AAAgCuC,YAAAA,iBAAiB,EAAE;AAAnD,WAAd;AACA,eAAKxE,IAAL,CAAU,cAAV,EAA0B,KAA1B,EAAiC,mBAAjC,EAAsD,EAAtD;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,QAAtB,EAAgC;AAC5B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAE2E,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA,eAAK1E,IAAL,CAAU,QAAV,EAAoB,IAApB,EAA0B,aAA1B,EAAyC,qBAAzC;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAE2E,cAAAA,WAAW,EAAE;AAAf,aAAd;AACA,iBAAK1E,IAAL,CAAU,QAAV,EAAoB,IAApB,EAA0B,aAA1B,EAAyC,2BAAzC;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAE2E,cAAAA,WAAW,EAAE,KAAf;AAAsBpC,cAAAA,MAAM,EAAER,CAAC,CAACC,MAAF,CAASE;AAAvC,aAAd;AACA,iBAAKjC,IAAL,CAAU,QAAV,EAAoB,KAApB,EAA2B,aAA3B,EAA0C,EAA1C;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,WAAtB,EAAmC;AAC/B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAE4E,YAAAA,cAAc,EAAE;AAAlB,WAAd;AACA,eAAK3E,IAAL,CAAU,WAAV,EAAuB,IAAvB,EAA6B,gBAA7B,EAA+C,yBAA/C;AACH,SAHD,MAGO;AACH,cAAI4E,SAAS,GAAG3F,YAAY,CAACkD,MAAb,CAAoB0C,IAApC;AACA,cAAIA,IAAI,GAAG/C,CAAC,CAACC,MAAF,CAASE,KAApB;AACA,cAAI6C,OAAO,GAAG3F,MAAM,GAAG4F,QAAT,CAAkB,GAAlB,EAAuB,MAAvB,EAA+B7B,MAA/B,CAAsC,MAAtC,CAAd;AACA,cAAI8B,OAAO,GAAG7F,MAAM,GAAG0F,IAAT,EAAd;;AACA,cAAI,CAACD,SAAS,CAAClB,IAAV,CAAemB,IAAf,CAAD,IAA0BA,IAAI,GAAGC,OAAP,IAAkBD,IAAI,GAAGG,OAAvD,EAAiE;AAC7D,iBAAKjF,QAAL,CAAc;AAAE4E,cAAAA,cAAc,EAAE;AAAlB,aAAd;AACA,iBAAK3E,IAAL,CAAU,WAAV,EAAuB,IAAvB,EAA6B,gBAA7B,EAA+C,+BAA/C;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAE4E,cAAAA,cAAc,EAAE,KAAlB;AAAyBM,cAAAA,SAAS,EAAEnD,CAAC,CAACC,MAAF,CAASE;AAA7C,aAAd;AACA,iBAAKjC,IAAL,CAAU,WAAV,EAAuB,KAAvB,EAA8B,gBAA9B,EAAgD,EAAhD,EAFG,CAIH;AACA;;AAEA,gBAAI6C,WAAW,GAAG,KAAKjD,KAAL,CAAWsF,eAAX,CAA2BC,MAA3B,CAAkCrD,CAAC,IAAIA,CAAC,CAACG,KAAF,KAAY,KAAKrC,KAAL,CAAWiD,WAA9D,CAAlB;;AACA,gBAAIA,WAAW,CAACP,MAAhB,EAAwB;AACpB,kBAAI8C,aAAa,GAAGvC,WAAW,CAAC,CAAD,CAAX,CAAewC,KAAnC;AAEA,kBAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,WAAX,KAA2B1D,CAAC,CAACC,MAAF,CAASE,KAAlD;;AACA,kBAAImD,aAAa,IAAI,QAAjB,IAA6BA,aAAa,IAAI,WAA9C,IAA6DA,aAAa,IAAI,qBAAlF,EAAyG;AACrG,qBAAKrF,QAAL,CAAc;AAAE0F,kBAAAA,sBAAsB,EAAGH,OAAO,IAAI,EAAZ,GAAkB,IAAlB,GAAyB;AAAnD,iBAAd;AACH,eAFD,MAEO;AACH,qBAAKvF,QAAL,CAAc;AAAE0F,kBAAAA,sBAAsB,EAAE;AAA1B,iBAAd;AACH;;AACD,mBAAKzF,IAAL,CAAU,gBAAV,EAA6BsF,OAAO,IAAI,EAAZ,GAAkB,EAAlB,GAAuB,KAAnD,EAA0D,qBAA1D,EAAkFA,OAAO,IAAI,EAAZ,GAAkB,EAAlB,GAAuB,EAAxG;AACH;AACJ;AACJ;;AACD,YAAII,MAAM,GAAGvG,MAAM,CAAC2C,CAAC,CAACC,MAAF,CAASE,KAAV,CAAN,CAAuBiB,MAAvB,CAA8B,MAA9B,CAAb;AACA,aAAKnD,QAAL,CAAc;AAAE2F,UAAAA,MAAM,EAAEA,MAAV;AAAkBC,UAAAA,aAAa,EAAE;AAAjC,SAAd;AACH;;AAED,UAAI7D,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACnC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAE6F,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;AACA,eAAK5F,IAAL,CAAU,eAAV,EAA2B,IAA3B,EAAiC,oBAAjC,EAAuD,6BAAvD;AACH,SAHD,MAGO;AACH,cAAI4E,SAAS,GAAG3F,YAAY,CAACkD,MAAb,CAAoB0C,IAApC;AACA,cAAIA,IAAI,GAAG/C,CAAC,CAACC,MAAF,CAASE,KAApB;AACA,cAAI4D,MAAM,GAAG,KAAKjG,KAAL,CAAW8F,MAAxB;AACA,cAAIV,OAAO,GAAG7F,MAAM,GAAG0F,IAAT,EAAd;;AACA,cAAI,CAACD,SAAS,CAAClB,IAAV,CAAemB,IAAf,CAAD,IAA0BA,IAAI,GAAGgB,MAAP,IAAiBhB,IAAI,GAAGG,OAAtD,EAAgE;AAC5D,iBAAKjF,QAAL,CAAc;AAAE6F,cAAAA,kBAAkB,EAAE;AAAtB,aAAd;AACA,iBAAK5F,IAAL,CAAU,eAAV,EAA2B,IAA3B,EAAiC,oBAAjC,EAAuD,mCAAvD;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAE6F,cAAAA,kBAAkB,EAAE,KAAtB;AAA6BD,cAAAA,aAAa,EAAE7D,CAAC,CAACC,MAAF,CAASE;AAArD,aAAd;AACA,iBAAKjC,IAAL,CAAU,eAAV,EAA2B,KAA3B,EAAkC,oBAAlC,EAAwD,EAAxD;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACnC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAE+F,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;AACA,eAAK9F,IAAL,CAAU,eAAV,EAA2B,IAA3B,EAAiC,oBAAjC,EAAuD,6BAAvD;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAE+F,cAAAA,kBAAkB,EAAE;AAAtB,aAAd;AACA,iBAAK9F,IAAL,CAAU,eAAV,EAA2B,IAA3B,EAAiC,oBAAjC,EAAuD,mCAAvD;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAE+F,cAAAA,kBAAkB,EAAE,KAAtB;AAA6BC,cAAAA,aAAa,EAAEjE,CAAC,CAACC,MAAF,CAASE;AAArD,aAAd;AACA,iBAAKjC,IAAL,CAAU,eAAV,EAA2B,KAA3B,EAAkC,oBAAlC,EAAwD,EAAxD;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEiG,YAAAA,eAAe,EAAE;AAAnB,WAAd;AACA,eAAKhG,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,0BAAjD;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEiG,cAAAA,eAAe,EAAE;AAAnB,aAAd;AACA,iBAAKhG,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,gCAAjD;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEiG,cAAAA,eAAe,EAAE,KAAnB;AAA0BC,cAAAA,UAAU,EAAEnE,CAAC,CAACC,MAAF,CAASE;AAA/C,aAAd;AACA,iBAAKjC,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+B,iBAA/B,EAAkD,EAAlD;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,gBAAtB,EAAwC;AACpC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEmG,YAAAA,mBAAmB,EAAE,IAAvB;AAA6BC,YAAAA,aAAa,EAAE;AAA5C,WAAd,EADsC,CAEtC;AACH,SAHD,MAGO,IAAIhH,MAAM,CAAC2C,CAAC,CAACC,MAAF,CAASE,KAAV,CAAN,CAAuBiB,MAAvB,CAA8B,YAA9B,IAA8C/D,MAAM,GAAG+D,MAAT,CAAgB,YAAhB,CAAlD,EAAiF;AACpF,eAAKnD,QAAL,CAAc;AAAEmG,YAAAA,mBAAmB,EAAE;AAAvB,WAAd;AACA,eAAKlG,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,qCAAzD;AACH,SAHM,MAGA,IAAIb,MAAM,CAAC2C,CAAC,CAACC,MAAF,CAASE,KAAV,CAAN,CAAuBiB,MAAvB,CAA8B,YAA9B,IAA8C/D,MAAM,GAAG4F,QAAT,CAAkB,CAAlB,EAAqB,OAArB,EAA8B7B,MAA9B,CAAqC,YAArC,CAAlD,EAAsG;AACzG,eAAKnD,QAAL,CAAc;AAAEmG,YAAAA,mBAAmB,EAAE;AAAvB,WAAd;AACA,eAAKlG,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,qCAAzD;AACH,SAHM,MAGA;AACH,cAAIoG,aAAa,GAAGjH,MAAM,CAAC2C,CAAC,CAACC,MAAF,CAASE,KAAV,CAAN,CAAuBmB,GAAvB,CAA2B,CAA3B,EAA8B,OAA9B,EAAuCF,MAAvC,CAA8C,YAA9C,CAApB;AACA,eAAKnD,QAAL,CAAc;AAAEmG,YAAAA,mBAAmB,EAAE,KAAvB;AAA8BG,YAAAA,cAAc,EAAEvE,CAAC,CAACC,MAAF,CAASE,KAAvD;AAA8DkE,YAAAA,aAAa,EAAEC;AAA7E,WAAd;AACA,eAAKpG,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAAmC,qBAAnC,EAA0D,EAA1D;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEuG,YAAAA,eAAe,EAAE;AAAnB,WAAd;AACA,eAAKtG,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,2BAAjD;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,GAA5B,EAAiC;AACpC,eAAKvC,QAAL,CAAc;AAAEuG,YAAAA,eAAe,EAAE,IAAnB;AAAyBC,YAAAA,UAAU,EAAE,KAAK3G,KAAL,CAAW2G;AAAhD,WAAd;AACA,eAAKvG,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,4BAAjD;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEwG,YAAAA,UAAU,EAAEzE,CAAC,CAACC,MAAF,CAASE,KAAvB;AAA8BqE,YAAAA,eAAe,EAAE;AAA/C,WAAd;AACA,eAAKtG,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+B,iBAA/B,EAAkD,EAAlD;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEyG,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACA,eAAKxG,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,6BAArD;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEyG,cAAAA,iBAAiB,EAAE;AAArB,aAAd;AACA,iBAAKxG,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,mCAArD;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEyG,cAAAA,iBAAiB,EAAE,KAArB;AAA4BC,cAAAA,YAAY,EAAE3E,CAAC,CAACC,MAAF,CAASE;AAAnD,aAAd;AACA,iBAAKjC,IAAL,CAAU,cAAV,EAA0B,KAA1B,EAAiC,mBAAjC,EAAsD,EAAtD;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,oBAAtB,EAA4C;AACxC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,KAAwC,CAACC,YAAY,CAACwB,IAAb,CAAkB5B,CAAC,CAACC,MAAF,CAASE,KAA3B,CAA7C,EAAgF;AAC5E,eAAKlC,QAAL,CAAc;AAAE2G,YAAAA,uBAAuB,EAAE;AAA3B,WAAd;AACA,eAAK1G,IAAL,CAAU,oBAAV,EAAgC,IAAhC;AACH,SAHD,MAGO;AACH,eAAKD,QAAL,CAAc;AAAE2G,YAAAA,uBAAuB,EAAE,KAA3B;AAAkCC,YAAAA,kBAAkB,EAAE7E,CAAC,CAACC,MAAF,CAASE;AAA/D,WAAd;AACA,eAAKjC,IAAL,CAAU,oBAAV,EAAgC,KAAhC;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,gBAAtB,EAAwC;AACpC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAE6G,YAAAA,mBAAmB,EAAE;AAAvB,WAAd;AACA,eAAK5G,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,+BAAzD;AACH,SAHD,MAGO;AACH,cAAI4E,SAAS,GAAG3F,YAAY,CAACkD,MAAb,CAAoB0C,IAApC;AACA,cAAIA,IAAI,GAAG/C,CAAC,CAACC,MAAF,CAASE,KAApB;AACA,cAAI6C,OAAO,GAAG3F,MAAM,GAAG4F,QAAT,CAAkB,GAAlB,EAAuB,MAAvB,EAA+B7B,MAA/B,CAAsC,MAAtC,CAAd;AACA,cAAI8B,OAAO,GAAG7F,MAAM,GAAG0F,IAAT,EAAd;;AACA,cAAI,CAACD,SAAS,CAAClB,IAAV,CAAemB,IAAf,CAAD,IAA0BA,IAAI,GAAGC,OAAP,IAAkBD,IAAI,GAAGG,OAAvD,EAAiE;AAC7D,iBAAKjF,QAAL,CAAc;AAAE6G,cAAAA,mBAAmB,EAAE;AAAvB,aAAd;AACA,iBAAK5G,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,qCAAzD;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAE6G,cAAAA,mBAAmB,EAAE,KAAvB;AAA8BC,cAAAA,cAAc,EAAE/E,CAAC,CAACC,MAAF,CAASE;AAAvD,aAAd;AACA,iBAAKjC,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAAmC,qBAAnC,EAA0D,EAA1D;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,iBAAtB,EAAyC;AACrC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAE+G,YAAAA,oBAAoB,EAAE;AAAxB,WAAd;AACA,eAAK9G,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,gCAA3D;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,GAA5B,EAAiC;AACpC,eAAKvC,QAAL,CAAc;AAAE+G,YAAAA,oBAAoB,EAAE,IAAxB;AAA8BC,YAAAA,eAAe,EAAE,KAAKnH,KAAL,CAAWmH;AAA1D,WAAd;AACA,eAAK/G,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,4BAA3D;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEgH,YAAAA,eAAe,EAAEjF,CAAC,CAACC,MAAF,CAASE,KAA5B;AAAmC6E,YAAAA,oBAAoB,EAAE;AAAzD,WAAd;AACA,eAAK9G,IAAL,CAAU,iBAAV,EAA6B,KAA7B,EAAoC,sBAApC,EAA4D,EAA5D;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,mBAAtB,EAA2C;AACvC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEiH,YAAAA,sBAAsB,EAAE;AAA1B,WAAd;AACA,eAAKhH,IAAL,CAAU,mBAAV,EAA+B,IAA/B,EAAqC,wBAArC,EAA+D,kCAA/D;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEiH,cAAAA,sBAAsB,EAAE;AAA1B,aAAd;AACA,iBAAKhH,IAAL,CAAU,mBAAV,EAA+B,IAA/B,EAAqC,wBAArC,EAA+D,wCAA/D;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEiH,cAAAA,sBAAsB,EAAE,KAA1B;AAAiCC,cAAAA,iBAAiB,EAAEnF,CAAC,CAACC,MAAF,CAASE;AAA7D,aAAd;AACA,iBAAKjC,IAAL,CAAU,mBAAV,EAA+B,KAA/B,EAAsC,wBAAtC,EAAgE,EAAhE;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,yBAAtB,EAAiD;AAC7C,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,KAAwC,CAACC,YAAY,CAACwB,IAAb,CAAkB5B,CAAC,CAACC,MAAF,CAASE,KAA3B,CAA7C,EAAgF;AAC5E,eAAKlC,QAAL,CAAc;AAAEmH,YAAAA,4BAA4B,EAAE;AAAhC,WAAd;AACA,eAAKlH,IAAL,CAAU,yBAAV,EAAqC,IAArC;AACH,SAHD,MAGO;AACH,eAAKD,QAAL,CAAc;AAAEmH,YAAAA,4BAA4B,EAAE,KAAhC;AAAuCC,YAAAA,uBAAuB,EAAErF,CAAC,CAACC,MAAF,CAASE;AAAzE,WAAd;AACA,eAAKjC,IAAL,CAAU,yBAAV,EAAqC,KAArC;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,qBAAtB,EAA6C;AACzC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEqH,YAAAA,wBAAwB,EAAE;AAA5B,WAAd;AACA,eAAKpH,IAAL,CAAU,qBAAV,EAAiC,IAAjC,EAAuC,0BAAvC,EAAmE,oCAAnE;AACH,SAHD,MAGO;AACH,cAAI4E,SAAS,GAAG3F,YAAY,CAACkD,MAAb,CAAoB0C,IAApC;AACA,cAAIA,IAAI,GAAG/C,CAAC,CAACC,MAAF,CAASE,KAApB;;AACA,cAAI,CAAC2C,SAAS,CAAClB,IAAV,CAAemB,IAAf,CAAL,EAA2B;AACvB,iBAAK9E,QAAL,CAAc;AAAEqH,cAAAA,wBAAwB,EAAE;AAA5B,aAAd;AACA,iBAAKpH,IAAL,CAAU,qBAAV,EAAiC,IAAjC,EAAuC,0BAAvC,EAAmE,0CAAnE;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEqH,cAAAA,wBAAwB,EAAE,KAA5B;AAAmCC,cAAAA,mBAAmB,EAAEvF,CAAC,CAACC,MAAF,CAASE;AAAjE,aAAd;AACA,iBAAKjC,IAAL,CAAU,qBAAV,EAAiC,KAAjC,EAAwC,0BAAxC,EAAoE,EAApE;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAC9B,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEuH,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACA,eAAKtH,IAAL,CAAU,UAAV,EAAsB,IAAtB,EAA4B,eAA5B,EAA6C,wBAA7C;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEuH,cAAAA,aAAa,EAAE;AAAjB,aAAd;AACA,iBAAKtH,IAAL,CAAU,UAAV,EAAsB,IAAtB,EAA4B,eAA5B,EAA6C,8BAA7C;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEuH,cAAAA,aAAa,EAAE,KAAjB;AAAwBC,cAAAA,QAAQ,EAAEzF,CAAC,CAACC,MAAF,CAASE;AAA3C,aAAd;AACA,iBAAKjC,IAAL,CAAU,UAAV,EAAsB,KAAtB,EAA6B,eAA7B,EAA8C,EAA9C;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACnC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEyH,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;AACA,eAAKxH,IAAL,CAAU,eAAV,EAA2B,IAA3B,EAAiC,oBAAjC,EAAuD,+BAAvD;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,EAA5B,EAAgC;AACnC,eAAKvC,QAAL,CAAc;AAAEyH,YAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,YAAAA,aAAa,EAAE,KAAK7H,KAAL,CAAW6H;AAAtD,WAAd;AACA,eAAKzH,IAAL,CAAU,eAAV,EAA2B,IAA3B,EAAiC,oBAAjC,EAAuD,2BAAvD;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAE0H,YAAAA,aAAa,EAAE3F,CAAC,CAACC,MAAF,CAASE,KAA1B;AAAiCuF,YAAAA,kBAAkB,EAAE;AAArD,WAAd;AACA,eAAKxH,IAAL,CAAU,eAAV,EAA2B,KAA3B,EAAkC,oBAAlC,EAAwD,EAAxD;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,iBAAtB,EAAyC;AACrC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAE2H,YAAAA,oBAAoB,EAAE;AAAxB,WAAd;AACA,eAAK1H,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,gCAA3D;AACH,SAHD,MAGO;AACH,cAAI2H,iBAAiB,GAAG1I,YAAY,CAACkD,MAAb,CAAoBD,YAA5C;AACA,cAAIA,YAAY,GAAGJ,CAAC,CAACC,MAAF,CAASE,KAA5B;;AACA,cAAI,CAAC0F,iBAAiB,CAACjE,IAAlB,CAAuBxB,YAAvB,CAAL,EAA2C;AACvC,iBAAKnC,QAAL,CAAc;AAAE2H,cAAAA,oBAAoB,EAAE;AAAxB,aAAd;AACA,iBAAK1H,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,sCAA3D;AACH,WAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,EAA5B,EAAgC;AACnC,iBAAKvC,QAAL,CAAc;AAAE2H,cAAAA,oBAAoB,EAAE,IAAxB;AAA8BE,cAAAA,eAAe,EAAE,KAAKhI,KAAL,CAAWgI;AAA1D,aAAd;AACA,iBAAK5H,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,2BAA3D;AACH,WAHM,MAGA;AACH,iBAAKD,QAAL,CAAc;AAAE2H,cAAAA,oBAAoB,EAAE,KAAxB;AAA+BE,cAAAA,eAAe,EAAE9F,CAAC,CAACC,MAAF,CAASE;AAAzD,aAAd;AACA,iBAAKjC,IAAL,CAAU,iBAAV,EAA6B,KAA7B,EAAoC,sBAApC,EAA4D,EAA5D;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,yBAAtB,EAAiD;AAC7C,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAE8H,YAAAA,4BAA4B,EAAE;AAAhC,WAAd;AACA,eAAK7H,IAAL,CAAU,yBAAV,EAAqC,IAArC,EAA2C,8BAA3C,EAA2E,wCAA3E;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,GAA5B,EAAiC;AACpC,eAAKvC,QAAL,CAAc;AAAE8H,YAAAA,4BAA4B,EAAE,IAAhC;AAAsCC,YAAAA,uBAAuB,EAAE,KAAKlI,KAAL,CAAWkI;AAA1E,WAAd;AACA,eAAK9H,IAAL,CAAU,yBAAV,EAAqC,IAArC,EAA2C,8BAA3C,EAA2E,4BAA3E;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAE+H,YAAAA,uBAAuB,EAAEhG,CAAC,CAACC,MAAF,CAASE,KAApC;AAA2C4F,YAAAA,4BAA4B,EAAE;AAAzE,WAAd;AACA,eAAK7H,IAAL,CAAU,yBAAV,EAAqC,KAArC,EAA4C,8BAA5C,EAA4E,EAA5E;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,kBAAtB,EAA0C;AACtC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEgI,YAAAA,qBAAqB,EAAE;AAAzB,WAAd;AACA,eAAK/H,IAAL,CAAU,kBAAV,EAA8B,IAA9B,EAAoC,uBAApC,EAA6D,iCAA7D;AACH,SAHD,MAGO;AACH,cAAI2H,iBAAiB,GAAG1I,YAAY,CAACkD,MAAb,CAAoBD,YAA5C;AACA,cAAIA,YAAY,GAAGJ,CAAC,CAACC,MAAF,CAASE,KAA5B;;AACA,cAAI,CAAC0F,iBAAiB,CAACjE,IAAlB,CAAuBxB,YAAvB,CAAL,EAA2C;AACvC,iBAAKnC,QAAL,CAAc;AAAEgI,cAAAA,qBAAqB,EAAE;AAAzB,aAAd;AACA,iBAAK/H,IAAL,CAAU,kBAAV,EAA8B,IAA9B,EAAoC,uBAApC,EAA6D,8BAA7D;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEgI,cAAAA,qBAAqB,EAAE,KAAzB;AAAgCC,cAAAA,gBAAgB,EAAElG,CAAC,CAACC,MAAF,CAASE;AAA3D,aAAd;AACA,iBAAKjC,IAAL,CAAU,kBAAV,EAA8B,KAA9B,EAAqC,uBAArC,EAA8D,EAA9D;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,gBAAtB,EAAwC;AACpC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEkI,YAAAA,mBAAmB,EAAE;AAAvB,WAAd;AACA,eAAKjI,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,8BAAzD;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,GAA5B,EAAiC;AACpC,eAAKvC,QAAL,CAAc;AAAEkI,YAAAA,mBAAmB,EAAE,IAAvB;AAA6BC,YAAAA,cAAc,EAAE,KAAKtI,KAAL,CAAWsI;AAAxD,WAAd;AACA,eAAKlI,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,4BAAzD;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEmI,YAAAA,cAAc,EAAEpG,CAAC,CAACC,MAAF,CAASE,KAA3B;AAAkCgG,YAAAA,mBAAmB,EAAE;AAAvD,WAAd;AACA,eAAKjI,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAAmC,qBAAnC,EAA0D,EAA1D;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,mBAAtB,EAA2C;AACvC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEoI,YAAAA,sBAAsB,EAAE;AAA1B,WAAd;AACA,eAAKnI,IAAL,CAAU,mBAAV,EAA+B,IAA/B,EAAqC,wBAArC,EAA+D,iCAA/D;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,GAA5B,EAAiC;AACpC,eAAKvC,QAAL,CAAc;AAAEoI,YAAAA,sBAAsB,EAAE,IAA1B;AAAgCC,YAAAA,iBAAiB,EAAE,KAAKxI,KAAL,CAAWwI;AAA9D,WAAd;AACA,eAAKpI,IAAL,CAAU,mBAAV,EAA+B,IAA/B,EAAqC,wBAArC,EAA+D,4BAA/D;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEqI,YAAAA,iBAAiB,EAAEtG,CAAC,CAACC,MAAF,CAASE,KAA9B;AAAqCkG,YAAAA,sBAAsB,EAAE;AAA7D,WAAd;AACA,eAAKnI,IAAL,CAAU,mBAAV,EAA+B,KAA/B,EAAsC,wBAAtC,EAAgE,EAAhE;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,2BAAtB,EAAmD;AAC/C,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEsI,YAAAA,8BAA8B,EAAE;AAAlC,WAAd;AACA,eAAKrI,IAAL,CAAU,2BAAV,EAAuC,IAAvC,EAA6C,gCAA7C,EAA+E,0CAA/E;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,GAA5B,EAAiC;AACpC,eAAKvC,QAAL,CAAc;AAAEsI,YAAAA,8BAA8B,EAAE,IAAlC;AAAwCC,YAAAA,yBAAyB,EAAE,KAAK1I,KAAL,CAAW0I;AAA9E,WAAd;AACA,eAAKtI,IAAL,CAAU,2BAAV,EAAuC,IAAvC,EAA6C,gCAA7C,EAA+E,4BAA/E;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEuI,YAAAA,yBAAyB,EAAExG,CAAC,CAACC,MAAF,CAASE,KAAtC;AAA6CoG,YAAAA,8BAA8B,EAAE;AAA7E,WAAd;AACA,eAAKrI,IAAL,CAAU,2BAAV,EAAuC,KAAvC,EAA8C,gCAA9C,EAAgF,EAAhF;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,iBAAtB,EAAyC;AACrC,YAAI/C,YAAY,CAACmD,OAAb,CAAqBN,CAAC,CAACC,MAAF,CAASE,KAA9B,CAAJ,EAA0C;AACtC,eAAKlC,QAAL,CAAc;AAAEwI,YAAAA,oBAAoB,EAAE;AAAxB,WAAd;AACA,eAAKvI,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,+BAA3D;AACH,SAHD,MAGO,IAAI8B,CAAC,CAACC,MAAF,CAASE,KAAT,CAAeK,MAAf,GAAwB,GAA5B,EAAiC;AACpC,eAAKvC,QAAL,CAAc;AAAEwI,YAAAA,oBAAoB,EAAE,IAAxB;AAA8BC,YAAAA,eAAe,EAAE,KAAK5I,KAAL,CAAW4I;AAA1D,WAAd;AACA,eAAKxI,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,4BAA3D;AACH,SAHM,MAGA;AACH,eAAKD,QAAL,CAAc;AAAEyI,YAAAA,eAAe,EAAE1G,CAAC,CAACC,MAAF,CAASE,KAA5B;AAAmCsG,YAAAA,oBAAoB,EAAE;AAAzD,WAAd;AACA,eAAKvI,IAAL,CAAU,iBAAV,EAA6B,KAA7B,EAAoC,sBAApC,EAA4D,EAA5D;AACH;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACnC,YAAIF,CAAC,CAACC,MAAF,CAASS,OAAb,EAAsB;AAClB,eAAKzC,QAAL,CAAc;AAAE0I,YAAAA,aAAa,EAAE3G,CAAC,CAACC,MAAF,CAASS,OAA1B;AAAmCkG,YAAAA,oBAAoB,EAAE,KAAK9I,KAAL,CAAW+I;AAApE,WAAd;AACH,SAFD,MAEO;AACH,eAAK5I,QAAL,CAAc;AAAE0I,YAAAA,aAAa,EAAE3G,CAAC,CAACC,MAAF,CAASS,OAA1B;AAAmCkG,YAAAA,oBAAoB,EAAE;AAAzD,WAAd;AACH;AACJ;;AAED,UAAI5G,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,sBAAtB,EAA8C;AAC1C,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAE6I,YAAAA,yBAAyB,EAAE;AAA7B,WAAd;AACA,eAAK5I,IAAL,CAAU,sBAAV,EAAkC,IAAlC,EAAwC,2BAAxC,EAAqE,qCAArE;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAE6I,cAAAA,yBAAyB,EAAE;AAA7B,aAAd;AACA,iBAAK5I,IAAL,CAAU,sBAAV,EAAkC,IAAlC,EAAwC,2BAAxC,EAAqE,2CAArE;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAE6I,cAAAA,yBAAyB,EAAE,KAA7B;AAAoCF,cAAAA,oBAAoB,EAAE5G,CAAC,CAACC,MAAF,CAASE;AAAnE,aAAd;AACA,iBAAKjC,IAAL,CAAU,sBAAV,EAAkC,KAAlC,EAAyC,2BAAzC,EAAsE,EAAtE;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,aAAtB,EAAqC;AACjC,YAAIF,CAAC,CAACC,MAAF,CAASS,OAAb,EAAsB;AAClB,eAAKzC,QAAL,CAAc;AAAE8I,YAAAA,WAAW,EAAE/G,CAAC,CAACC,MAAF,CAASS,OAAxB;AAAiCsG,YAAAA,kBAAkB,EAAE,KAAKlJ,KAAL,CAAWmJ;AAAhE,WAAd;AACH,SAFD,MAEO;AACH,eAAKhJ,QAAL,CAAc;AAAE8I,YAAAA,WAAW,EAAE/G,CAAC,CAACC,MAAF,CAASS,OAAxB;AAAiCsG,YAAAA,kBAAkB,EAAE;AAArD,WAAd;AACH;AACJ;;AAED,UAAIhH,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,oBAAtB,EAA4C;AACxC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEiJ,YAAAA,uBAAuB,EAAE;AAA3B,WAAd;AACA,eAAKhJ,IAAL,CAAU,oBAAV,EAAgC,IAAhC,EAAsC,yBAAtC,EAAiE,mCAAjE;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEiJ,cAAAA,uBAAuB,EAAE;AAA3B,aAAd;AACA,iBAAKhJ,IAAL,CAAU,oBAAV,EAAgC,IAAhC,EAAsC,yBAAtC,EAAiE,yCAAjE;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEiJ,cAAAA,uBAAuB,EAAE,KAA3B;AAAkCF,cAAAA,kBAAkB,EAAEhH,CAAC,CAACC,MAAF,CAASE;AAA/D,aAAd;AACA,iBAAKjC,IAAL,CAAU,oBAAV,EAAgC,KAAhC,EAAuC,yBAAvC,EAAkE,EAAlE;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClC,YAAIF,CAAC,CAACC,MAAF,CAASS,OAAb,EAAsB;AAClB,eAAKzC,QAAL,CAAc;AAAEkJ,YAAAA,YAAY,EAAEnH,CAAC,CAACC,MAAF,CAASS;AAAzB,WAAd;AACH,SAFD,MAEO;AACH,eAAKzC,QAAL,CAAc;AAAEkJ,YAAAA,YAAY,EAAEnH,CAAC,CAACC,MAAF,CAASS;AAAzB,WAAd;AACH;AACJ;;AAED,UAAIV,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,oBAAtB,EAA4C;AACxC,YAAIF,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBH,CAAC,CAACC,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKlC,QAAL,CAAc;AAAEmJ,YAAAA,uBAAuB,EAAE;AAA3B,WAAd;AACA,eAAKlJ,IAAL,CAAU,oBAAV,EAAgC,IAAhC,EAAsC,yBAAtC,EAAiE,mCAAjE;AACH,SAHD,MAGO;AACH,cAAIwD,YAAY,GAAGvE,YAAY,CAACkD,MAAb,CAAoBsB,cAAvC;AACA,cAAIA,cAAc,GAAG3B,CAAC,CAACC,MAAF,CAASE,KAA9B;;AACA,cAAI,CAACuB,YAAY,CAACE,IAAb,CAAkBD,cAAlB,CAAL,EAAwC;AACpC,iBAAK1D,QAAL,CAAc;AAAEmJ,cAAAA,uBAAuB,EAAE;AAA3B,aAAd;AACA,iBAAKlJ,IAAL,CAAU,oBAAV,EAAgC,IAAhC,EAAsC,yBAAtC,EAAiE,yCAAjE;AACH,WAHD,MAGO;AACH,iBAAKD,QAAL,CAAc;AAAEmJ,cAAAA,uBAAuB,EAAE,KAA3B;AAAkCC,cAAAA,kBAAkB,EAAErH,CAAC,CAACC,MAAF,CAASE;AAA/D,aAAd;AACA,iBAAKjC,IAAL,CAAU,oBAAV,EAAgC,KAAhC,EAAuC,yBAAvC,EAAkE,EAAlE;AACH;AACJ;AACJ;;AAED,UAAI8B,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,oBAAtB,EAA4C;AACxCoH,QAAAA,OAAO,CAACC,GAAR,CAAYvH,CAAC,CAACC,MAAF,CAASS,OAArB;;AAEA,YAAIV,CAAC,CAACC,MAAF,CAASS,OAAb,EAAsB;AAClB,eAAKzC,QAAL,CAAc;AAAEuJ,YAAAA,kBAAkB,EAAExH,CAAC,CAACC,MAAF,CAASS,OAA/B;AAAwC+G,YAAAA,uBAAuB,EAAE;AAAjE,WAAd;AACH,SAFD,MAEO;AACH,eAAKxJ,QAAL,CAAc;AAAEuJ,YAAAA,kBAAkB,EAAExH,CAAC,CAACC,MAAF,CAASS,OAA/B;AAAwC+G,YAAAA,uBAAuB,EAAE;AAAjE,WAAd;AACH;AACJ,OA3mBiB,CA4mBlB;;AAEH,KAr/EkB;;AAGf,QAAIC,OAAO,GAAG,CACV;AAAEhJ,MAAAA,YAAY,EAAE,KAAhB;AAAuBiJ,MAAAA,aAAa,EAAE;AAAtC,KADU,EAEV;AAAEjJ,MAAAA,YAAY,EAAE,IAAhB;AAAsBiJ,MAAAA,aAAa,EAAE;AAArC,KAFU,CAAd;AAKA,SAAK7J,KAAL,GAAa;AACT;AACA;AACAwB,MAAAA,QAAQ,EAAE,EAHD;AAITsI,MAAAA,QAAQ,EAAE,IAJD;AAKTC,MAAAA,UAAU,EAAGjK,KAAK,CAACkK,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4CnK,KAAK,CAACkK,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4CnK,KAAK,CAACkK,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA2CnK,KAAK,CAACkK,IAAN,CAAWC,QAL/I;AAMT/I,MAAAA,MAAM,EAAE,QANC;AAOTgJ,MAAAA,YAAY,EAAE,WAPL;AAQTC,MAAAA,aAAa,EAAE,EARN;AASTC,MAAAA,gBAAgB,EAAE,EATT;AAUTC,MAAAA,kBAAkB,EAAE,EAVX;AAWTC,MAAAA,aAAa,EAAE,EAXN;AAYTC,MAAAA,eAAe,EAAE,EAZR;AAaT;AACAC,MAAAA,QAAQ,EAAE,EAdD;AAeTC,MAAAA,UAAU,EAAE,EAfH;AAgBTC,MAAAA,aAAa,EAAE,EAhBN;AAiBTC,MAAAA,mBAAmB,EAAE,EAjBZ;AAkBTC,MAAAA,qBAAqB,EAAE,EAlBd;AAmBTC,MAAAA,qBAAqB,EAAE,EAnBd;AAoBTC,MAAAA,WAAW,EAAE,EApBJ;AAqBT;AACAnI,MAAAA,YAAY,EAAE,EAtBL;AAuBTF,MAAAA,iBAAiB,EAAE,KAvBV;AAwBTsI,MAAAA,kBAAkB,EAAE,KAxBX;AA0BTlI,MAAAA,KAAK,EAAE,KA1BE;AA2BTC,MAAAA,GAAG,EAAE,KA3BI;AA4BTkI,MAAAA,WAAW,EAAE,EA5BJ;AA6BTjI,MAAAA,OAAO,EAAE,EA7BA;AA8BTkI,MAAAA,YAAY,EAAE,IA9BL;AAgCTC,MAAAA,cAAc,EAAE,EAhCP;AAiCTC,MAAAA,UAAU,EAAE,EAjCH;AAkCTC,MAAAA,eAAe,EAAE,IAlCR;AAoCTC,MAAAA,oBAAoB,EAAE,EApCb;AAqCTC,MAAAA,gBAAgB,EAAE,EArCT;AAsCTC,MAAAA,qBAAqB,EAAE,IAtCd;AAwCTC,MAAAA,YAAY,EAAE,EAxCL;AAyCTC,MAAAA,QAAQ,EAAE,EAzCD;AA0CTC,MAAAA,aAAa,EAAE,IA1CN;AA4CTC,MAAAA,gBAAgB,EAAE,EA5CT;AA6CTC,MAAAA,cAAc,EAAE,EA7CP;AA8CTC,MAAAA,qBAAqB,EAAE,IA9Cd;AAgDTC,MAAAA,MAAM,EAAE,EAhDC;AAiDTC,MAAAA,WAAW,EAAE,KAjDJ;AAkDTC,MAAAA,UAAU,EAAE,EAlDH;AAmDTC,MAAAA,aAAa,EAAE,KAnDN;AAqDT1H,MAAAA,IAAI,EAAE,EArDG;AAsDTF,MAAAA,SAAS,EAAE,KAtDF;AAwDT6H,MAAAA,UAAU,EAAE,EAxDH;AA0DTzH,MAAAA,MAAM,EAAE,EA1DC;AA2DTD,MAAAA,WAAW,EAAE,KA3DJ;AA6DT2H,MAAAA,mBAAmB,EAAE,CA7DZ;AA+DTC,MAAAA,aAAa,EAAE,KA/DN;AAgETC,MAAAA,cAAc,EAAE,KAhEP;AAiET;AACA;AACA;AACA/G,MAAAA,eAAe,EAAE,EApER;AAqETrC,MAAAA,WAAW,EAAE,EArEJ;AAsETC,MAAAA,gBAAgB,EAAE,IAtET;AAwEToJ,MAAAA,cAAc,EAAE,EAxEP;AAyETnJ,MAAAA,UAAU,EAAE,EAzEH;AA0ETC,MAAAA,eAAe,EAAE,IA1ER;AA4ETuB,MAAAA,UAAU,EAAE,EA5EH;AA6ETD,MAAAA,eAAe,EAAE,IA7ER;AA+ET6H,MAAAA,eAAe,EAAE,EA/ER;AAgFTC,MAAAA,WAAW,EAAE,EAhFJ;AAiFTC,MAAAA,gBAAgB,EAAE,IAjFT;AAmFTC,MAAAA,gBAAgB,EAAE,EAnFT;AAoFTC,MAAAA,YAAY,EAAE,EApFL;AAqFTC,MAAAA,iBAAiB,EAAE,IArFV;AAuFT/H,MAAAA,YAAY,EAAE,EAvFL;AAwFTD,MAAAA,iBAAiB,EAAE,IAxFV;AA0FTlC,MAAAA,MAAM,EAAE,EA1FC;AA2FToC,MAAAA,WAAW,EAAE,IA3FJ;AA6FT+H,MAAAA,eAAe,EAAE,EA7FR;AA8FTC,MAAAA,kBAAkB,EAAE,EA9FX;AA+FTC,MAAAA,oBAAoB,EAAE,IA/Fb;AAiGTlH,MAAAA,sBAAsB,EAAE,KAjGf;AAkGTY,MAAAA,cAAc,EAAE,EAlGP;AAmGTH,MAAAA,mBAAmB,EAAE,IAnGZ;AAoGTC,MAAAA,aAAa,EAAE,EApGN;AAsGTlB,MAAAA,SAAS,EAAE,EAtGF;AAuGTN,MAAAA,cAAc,EAAE,IAvGP;AAwGTe,MAAAA,MAAM,EAAE,EAxGC;AA0GTC,MAAAA,aAAa,EAAE,EA1GN;AA2GTC,MAAAA,kBAAkB,EAAE,IA3GX;AA6GTG,MAAAA,aAAa,EAAE,EA7GN;AA8GTD,MAAAA,kBAAkB,EAAE,IA9GX;AAgHTG,MAAAA,UAAU,EAAE,EAhHH;AAiHTD,MAAAA,eAAe,EAAE,IAjHR;AAmHT4G,MAAAA,oBAAoB,EAAE,EAnHb;AAoHTC,MAAAA,gBAAgB,EAAE,EApHT;AAqHTC,MAAAA,qBAAqB,EAAE,IArHd;AAuHTC,MAAAA,YAAY,EAAE,EAvHL;AAwHTC,MAAAA,QAAQ,EAAE,EAxHD;AAyHTC,MAAAA,aAAa,EAAE,IAzHN;AA2HTC,MAAAA,cAAc,EAAE,EA3HP;AA4HTC,MAAAA,UAAU,EAAE,EA5HH;AA6HTC,MAAAA,eAAe,EAAE,IA7HR;AA+HTC,MAAAA,eAAe,EAAE,EA/HR;AAgITC,MAAAA,WAAW,EAAE,EAhIJ;AAiITC,MAAAA,gBAAgB,EAAE,IAjIT;AAkIT;AACA;AACA;AACAhH,MAAAA,UAAU,EAAE,EArIH;AAsITD,MAAAA,eAAe,EAAE,IAtIR;AAwITG,MAAAA,YAAY,EAAE,EAxIL;AAyITD,MAAAA,iBAAiB,EAAE,IAzIV;AA2ITK,MAAAA,cAAc,EAAE,EA3IP;AA4ITD,MAAAA,mBAAmB,EAAE,IA5IZ;AA8IT4G,MAAAA,uBAAuB,EAAE,2BA9IhB;AA+IT7G,MAAAA,kBAAkB,EAAE,EA/IX;AAgJTD,MAAAA,uBAAuB,EAAE,IAhJhB;AAkJT+G,MAAAA,cAAc,EAAE,EAlJP;AAoJTC,MAAAA,cAAc,EAAE,EApJP;AAqJTC,MAAAA,mBAAmB,EAAE,IArJZ;AAuJTC,MAAAA,sBAAsB,EAAE,EAvJf;AAwJTC,MAAAA,0BAA0B,EAAE,EAxJnB;AAyJTC,MAAAA,2BAA2B,EAAE,IAzJpB;AA2JT/G,MAAAA,eAAe,EAAE,EA3JR;AA4JTD,MAAAA,oBAAoB,EAAE,IA5Jb;AA8JTG,MAAAA,iBAAiB,EAAE,EA9JV;AA+JTD,MAAAA,sBAAsB,EAAE,IA/Jf;AAiKTK,MAAAA,mBAAmB,EAAE,EAjKZ;AAkKTD,MAAAA,wBAAwB,EAAE,IAlKjB;AAoKT2G,MAAAA,4BAA4B,EAAE,gCApKrB;AAqKT5G,MAAAA,uBAAuB,EAAE,EArKhB;AAsKTD,MAAAA,4BAA4B,EAAE,IAtKrB;AAwKT8G,MAAAA,mBAAmB,EAAE,EAxKZ;AAyKTC,MAAAA,wBAAwB,EAAE,IAzKjB;AA2KTC,MAAAA,2BAA2B,EAAE,EA3KpB;AA4KTC,MAAAA,8BAA8B,EAAE,EA5KvB;AA6KTC,MAAAA,gCAAgC,EAAE,IA7KzB;AA+KT7G,MAAAA,QAAQ,EAAE,EA/KD;AAgLTD,MAAAA,aAAa,EAAE,IAhLN;AAkLTG,MAAAA,aAAa,EAAE,EAlLN;AAmLTD,MAAAA,kBAAkB,EAAE,IAnLX;AAqLTI,MAAAA,eAAe,EAAE,EArLR;AAsLTF,MAAAA,oBAAoB,EAAE,IAtLb;AAuLT;AACA;AACA;AACA2G,MAAAA,iBAAiB,EAAE,EA1LV;AA2LTC,MAAAA,aAAa,EAAE,EA3LN;AA4LTC,MAAAA,kBAAkB,EAAE,IA5LX;AA8LTzG,MAAAA,uBAAuB,EAAE,EA9LhB;AA+LTD,MAAAA,4BAA4B,EAAE,IA/LrB;AAgMT;AACA;AACA;AACA2G,MAAAA,6BAA6B,EAAE,EAnMtB;AAoMTC,MAAAA,yBAAyB,EAAE,EApMlB;AAqMTC,MAAAA,8BAA8B,EAAE,IArMvB;AAuMTC,MAAAA,mBAAmB,EAAE,EAvMZ;AAwMTC,MAAAA,eAAe,EAAE,EAxMR;AAyMTC,MAAAA,oBAAoB,EAAE,IAzMb;AA2MTC,MAAAA,mBAAmB,EAAE,EA3MZ;AA4MTC,MAAAA,eAAe,EAAE,EA5MR;AA6MTC,MAAAA,oBAAoB,EAAE,KA7Mb;AA+MThH,MAAAA,gBAAgB,EAAE,EA/MT;AAgNTD,MAAAA,qBAAqB,EAAE,KAhNd;AAkNTlI,MAAAA,qBAAqB,EAAE,EAlNd;AAmNTK,MAAAA,wBAAwB,EAAE,EAnNjB;AAoNTJ,MAAAA,0BAA0B,EAAE,IApNnB;AAqNTM,MAAAA,wBAAwB,EAAE,EArNjB;AAsNTe,MAAAA,2BAA2B,EAAE,EAtNpB;AAwNTqI,MAAAA,OAAO,EAAEA,OAxNA;AA0NTyF,MAAAA,MAAM,EAAE,EA1NC;AA2NTC,MAAAA,WAAW,EAAE,IA3NJ;AA4NThH,MAAAA,cAAc,EAAE,EA5NP;AA6NTD,MAAAA,mBAAmB,EAAE,IA7NZ;AA8NTkH,MAAAA,kBAAkB,EAAE,KA9NX;AAgOTC,MAAAA,SAAS,EAAE,EAhOF;AAiOTC,MAAAA,cAAc,EAAE,IAjOP;AAkOTjH,MAAAA,iBAAiB,EAAE,EAlOV;AAmOTD,MAAAA,sBAAsB,EAAE,IAnOf;AAoOTmH,MAAAA,qBAAqB,EAAE,KApOd;AAsOTC,MAAAA,iBAAiB,EAAE,EAtOV;AAuOTC,MAAAA,sBAAsB,EAAE,IAvOf;AAwOTlH,MAAAA,yBAAyB,EAAE,EAxOlB;AAyOTD,MAAAA,8BAA8B,EAAE,IAzOvB;AA0OToH,MAAAA,6BAA6B,EAAE,KA1OtB;AA4OTC,MAAAA,OAAO,EAAE,EA5OA;AA6OTC,MAAAA,YAAY,EAAE,IA7OL;AA8OTnH,MAAAA,eAAe,EAAE,EA9OR;AA+OTD,MAAAA,oBAAoB,EAAE,IA/Ob;AAgPTqH,MAAAA,mBAAmB,EAAE,KAhPZ;AAiPT;AACA;AACA;AACAC,MAAAA,YAAY,EAAE,CApPL;AAqPTC,MAAAA,aAAa,EAAE,CArPN;AAsPTC,MAAAA,WAAW,EAAE,CAtPJ;AAwPTC,MAAAA,uBAAuB,EAAE,EAxPhB;AAyPTC,MAAAA,mBAAmB,EAAE,EAzPZ;AA0PTC,MAAAA,wBAAwB,EAAE,IA1PjB;AA4PTzH,MAAAA,aAAa,EAAE,KA5PN;AA6PTC,MAAAA,oBAAoB,EAAE,EA7Pb;AA8PTC,MAAAA,0BAA0B,EAAE,EA9PnB;AAgQTE,MAAAA,WAAW,EAAE,KAhQJ;AAiQTC,MAAAA,kBAAkB,EAAE,EAjQX;AAkQTC,MAAAA,yBAAyB,EAAE,EAlQlB;AAoQTE,MAAAA,YAAY,EAAE,KApQL;AAqQTE,MAAAA,kBAAkB,EAAE,EArQX;AAuQTgH,MAAAA,mBAAmB,EAAE,EAvQZ;AAwQTC,MAAAA,eAAe,EAAE,EAxQR;AAyQTC,MAAAA,oBAAoB,EAAE,IAzQb;AA2QTC,MAAAA,iBAAiB,EAAE,EA3QV;AA4QTC,MAAAA,aAAa,EAAE,EA5QN;AA6QTC,MAAAA,kBAAkB,EAAE,IA7QX;AA+QTnN,MAAAA,mBAAmB,EAAE,EA/QZ;AAgRTC,MAAAA,WAAW,EAAE,EAhRJ;AAiRTL,MAAAA,wBAAwB,EAAE,IAjRjB;AAkRT;AACA;AACAwN,MAAAA,iBAAiB,EAAE,CApRV;AAqRTC,MAAAA,iBAAiB,EAAE,CArRV;AAsRTC,MAAAA,qBAAqB,EAAE,CAtRd;AAuRTC,MAAAA,kBAAkB,EAAE,CAvRX;AAwRTC,MAAAA,iBAAiB,EAAE,CAxRV;AA0RTC,MAAAA,UAAU,EAAE,EA1RH;AA2RTC,MAAAA,MAAM,EAAE,EA3RC;AA4RTC,MAAAA,WAAW,EAAE,IA5RJ;AA8RTlN,MAAAA,OAAO,EAAE,EA9RA;AA+RTP,MAAAA,YAAY,EAAE,IA/RL;AAiSTK,MAAAA,IAAI,EAAE,EAjSG;AAkSTG,MAAAA,SAAS,EAAE,IAlSF;AAoSTF,MAAAA,QAAQ,EAAE,EApSD;AAqSTG,MAAAA,aAAa,EAAE,IArSN;AAuSTiN,MAAAA,KAAK,EAAE,EAvSE;AAwST;AACAF,MAAAA,MAAM,EAAE,EAzSC;AA0STC,MAAAA,WAAW,EAAE,KA1SJ;AA4STlN,MAAAA,OAAO,EAAE,EA5SA;AA6STP,MAAAA,YAAY,EAAE,KA7SL;AA+STK,MAAAA,IAAI,EAAE,EA/SG;AAgTTG,MAAAA,SAAS,EAAE,KAhTF;AAkTTF,MAAAA,QAAQ,EAAE,EAlTD;AAmTTG,MAAAA,aAAa,EAAE,KAnTN;AAoTT;AACAsF,MAAAA,kBAAkB,EAAE,KArTX;AAsTTC,MAAAA,uBAAuB,EAAE,KAtThB;AAuTTqD,MAAAA,oBAAoB,EAAE,EAvTb;AAwTT0D,MAAAA,iBAAiB,EAAE,EAxTV;AAyTTH,MAAAA,mBAAmB,EAAE,EAzTZ;AA0TTH,MAAAA,uBAAuB,EAAE,EA1ThB,CA2TT;;AA3TS,KAAb;AA6TH;;AAEDkB,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKxR,KAAL,CAAWyR,KAAX,CAAiBC,MAAjB,CAAwB3R,WAAxB,KAAwC4R,MAAxC,IAAkDA,MAAM,CAACC,IAAP,CAAY,KAAK5R,KAAL,CAAWyR,KAAX,CAAiBC,MAA7B,EAAqC9O,MAArC,KAAgD,CAAtG,EAAyG;AACrG,WAAKiP,uBAAL,CAA6B,KAAK7R,KAAL,CAAWyR,KAAX,CAAiBC,MAAjB,CAAwBI,EAArD;;AACA,UAAI,KAAK9R,KAAL,CAAWyR,KAAX,CAAiBC,MAAjB,CAAwBhQ,QAAxB,IAAoC,KAAK1B,KAAL,CAAWyR,KAAX,CAAiBC,MAAjB,CAAwBhQ,QAAxB,KAAqCqQ,SAA7E,EAAwF;AACpF;AACA,aAAK1R,QAAL,CAAc;AAAEqB,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWyR,KAAX,CAAiBC,MAAjB,CAAwBhQ,QAApC;AAA8CsI,UAAAA,QAAQ,EAAE;AAAxD,SAAd;AACH,OAHD,MAGO;AACH,aAAK3J,QAAL,CAAc;AAAEiM,UAAAA,aAAa,EAAE,IAAjB;AAAuBC,UAAAA,cAAc,EAAE,IAAvC;AAA6CtJ,UAAAA,OAAO,EAAE,EAAtD;AAA0DoI,UAAAA,UAAU,EAAE,QAAtE;AAAgFG,UAAAA,gBAAgB,EAAE,SAAlG;AAA6GG,UAAAA,QAAQ,EAAE,KAAvH;AAA8HhI,UAAAA,mBAAmB,EAAElE,MAAM,GAAG+D,MAAT,CAAgB,YAAhB,CAAnJ;AAAkLI,UAAAA,WAAW,EAAEnE,MAAM,GAAGiE,GAAT,CAAa,GAAb,EAAkB,MAAlB,EAA0BF,MAA1B,CAAiC,YAAjC,CAA/L;AAA+OqI,UAAAA,gBAAgB,EAAE,QAAjQ;AAA2QV,UAAAA,YAAY,EAAE,KAAzR;AAAgSM,UAAAA,qBAAqB,EAAE,KAAvT;AAA8TH,UAAAA,eAAe,EAAE,KAA/U;AAAsVM,UAAAA,aAAa,EAAE,KAArW;AAA4WrI,UAAAA,wBAAwB,EAAE,KAAtY;AAA6YwI,UAAAA,qBAAqB,EAAE,KAApa;AAA2aoB,UAAAA,gBAAgB,EAAE,cAA7b;AAA6cC,UAAAA,qBAAqB,EAAE;AAApe,SAAd;AACA4E,QAAAA,UAAU,CAAC,MAAM;AACb,cAAIC,uBAAuB,GAAG1S,YAAY,CAAC2S,4BAAb,CAA0C,KAAKhS,KAAL,CAAW+C,OAArD,CAA9B;AACA,eAAKkP,iBAAL,CAAuBF,uBAAvB,EAAgD,yBAAhD,EAA2E,WAA3E;AACH,SAHS,EAGP,GAHO,CAAV;AAIH;AACJ;;AACD,QAAIG,QAAQ,GAAG7S,YAAY,CAAC8S,gBAAb,GAAgCC,WAA/C;AACA,SAAKjS,QAAL,CAAc;AAAEgK,MAAAA,aAAa,EAAE+H;AAAjB,KAAd;AACA,SAAK/R,QAAL,CAAc;AAAEuJ,MAAAA,kBAAkB,EAAGwI,QAAQ,IAAI,eAAb,GAAgC,IAAhC,GAAuC;AAA7D,KAAd;AACA,SAAKG,4BAAL;AACA,SAAKC,eAAL;AACA,SAAKC,WAAL;AACA,SAAKC,wBAAL;AACA,SAAKC,oBAAL;AACA,SAAKC,mBAAL;AACA,SAAKC,kBAAL;AAEA,SAAKV,iBAAL,CAAuB,2BAAvB,EAAoD,+BAApD,EAAqF,WAArF;AACA,SAAKA,iBAAL,CAAuB,iBAAvB,EAA0C,qBAA1C,EAAiE,eAAjE;AACA,SAAKA,iBAAL,CAAuB,iBAAvB,EAA0C,qBAA1C,EAAiE,WAAjE;AACA,SAAKA,iBAAL,CAAuB,kBAAvB,EAA2C,sBAA3C,EAAmE,eAAnE;AACA,SAAKA,iBAAL,CAAuB,uBAAvB,EAAgD,6BAAhD,EAA+E,eAA/E;AACA,SAAKA,iBAAL,CAAuB,eAAvB,EAAwC,mBAAxC,EAA6D,WAA7D;AACA,SAAKA,iBAAL,CAAuB,iBAAvB,EAA0C,qBAA1C,EAAiE,eAAjE;AACA,SAAKA,iBAAL,CAAuB,aAAvB,EAAsC,gBAAtC,EAAwD,eAAxD;AACA,SAAKA,iBAAL,CAAuB,eAAvB,EAAwC,4BAAxC,EAAsE,eAAtE;AACA,SAAKA,iBAAL,CAAuB,eAAvB,EAAwC,aAAxC,EAAuD,eAAvD;AACA,SAAKA,iBAAL,CAAuB,YAAvB,EAAqC,gBAArC,EAAuD,eAAvD;AACA,SAAKA,iBAAL,CAAuB,cAAvB,EAAuC,kBAAvC,EAA2D,eAA3D;AACA,SAAKA,iBAAL,CAAuB,aAAvB,EAAsC,oBAAtC,EAA4D,eAA5D;AACA,SAAKA,iBAAL,CAAuB,kBAAvB,EAA2C,gBAA3C;AACH;;AAEDN,EAAAA,uBAAuB,CAACiB,EAAD,EAAK;AACxB,UAAMtR,IAAI,GAAG;AAAEsR,MAAAA,EAAE,EAAEA;AAAN,KAAb;AACA,SAAKzS,QAAL,CAAc;AAAEqK,MAAAA,QAAQ,EAAEoI;AAAZ,KAAd;AACA5T,IAAAA,GAAG,CAAC6T,IAAJ,CAAS,oBAAT,EAA+BvR,IAA/B,EAAqCwR,IAArC,CAA0CC,GAAG,IAAI;AAC7C,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACbxJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BsJ,GAAG,CAACzR,IAAlC;AACA,aAAKnB,QAAL,CAAc;AACVuK,UAAAA,aAAa,EAAEqI,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY2R,QADjB;AAEVtI,UAAAA,mBAAmB,EAAEoI,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY4R,KAFvB;AAGVtI,UAAAA,qBAAqB,EAAE,CAACvL,YAAY,CAACmD,OAAb,CAAqBuQ,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY6R,IAAjC,IAAyC,EAAzC,GAA8CJ,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY6R,IAAZ,GAAmB,IAAlE,IAA0EJ,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY8R,OAAtF,GAAgG,IAAhG,GAAuGL,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY+R,UAHhI;AAIVxI,UAAAA,qBAAqB,EAAExL,YAAY,CAACiU,WAAb,CAAyBP,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYiS,WAArC,EAAkDR,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYkS,QAA9D,EAAwET,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYmS,WAApF,CAJb;AAKVhJ,UAAAA,UAAU,EAAEsI,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYmJ,UALd;AAK0BK,UAAAA,WAAW,EAAE,QAAQiI,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYwJ,WAApB,GAAkC;AALzE,SAAd;AAOA,aAAK3K,QAAL,CAAc;AAAC8C,UAAAA,WAAW,EAAC,EAAb;AAAiBC,UAAAA,gBAAgB,EAAE,IAAnC;AAAyCC,UAAAA,UAAU,EAAC,EAApD;AAAwDC,UAAAA,eAAe,EAAE;AAAzE,SAAd;AACA,YAAIsQ,UAAU,GAAGX,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY8R,OAA7B;AACA,YAAIO,UAAU,GAAG,KAAK3T,KAAL,CAAWgL,WAAX,CAAuB4I,IAAvB,CAA4BjT,CAAC,IAAIA,CAAC,CAACC,YAAF,KAAmB8S,UAApD,CAAjB;;AACA,YAAIC,UAAJ,EAAgB;AAEZ,eAAK3Q,uBAAL,CAA6B+P,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY8R,OAAzC,EAAkD,KAAKpT,KAAL,CAAW8C,GAA7D;AAEA,eAAK3C,QAAL,CAAc;AAAE4C,YAAAA,OAAO,EAAE4Q,UAAU,CAAC/S;AAAtB,WAAd;;AACA,cAAI+S,UAAU,IAAI,IAAlB,EAAwB;AACpB,iBAAKxT,QAAL,CAAc;AAAEsL,cAAAA,QAAQ,EAAE;AAAZ,aAAd;AACH,WAFD,MAEO;AACH,iBAAKtL,QAAL,CAAc;AAAEsL,cAAAA,QAAQ,EAAE;AAAZ,aAAd;AACH;AACJ,SAVD,MAUO;AACH,eAAKtL,QAAL,CAAc;AAAE4C,YAAAA,OAAO,EAAE;AAAX,WAAd;AACA,eAAKC,uBAAL,CAA6B,SAA7B,EAAwC,KAAKhD,KAAL,CAAW8C,GAAnD;AACH;AACJ,OA1BD,MA0BO,CAEN;AACJ,KA9BD,EA8BG+Q,KA9BH,CA8BSC,GAAG,IAAI;AACZtK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqK,GAArB;AACH,KAhCD;AAiCH;;AAEDtB,EAAAA,wBAAwB,GAAG;AACvBxT,IAAAA,GAAG,CAAC6T,IAAJ,CAAS,8BAAT,EAAyCC,IAAzC,CAA8CC,GAAG,IAAI;AACjDvJ,MAAAA,OAAO,CAACC,GAAR,CAAYsJ,GAAG,CAACzR,IAAhB;;AAEA,UAAIyR,GAAG,CAACC,OAAR,EAAiB;AACb,aAAK7S,QAAL,CAAc;AAAE4I,UAAAA,0BAA0B,EAAEgK,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYyS,oBAA1C;AAAgE5K,UAAAA,yBAAyB,EAAE4J,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAY0S;AAAvG,SAAd;AACH;AACJ,KAND,EAMGH,KANH,CAMSC,GAAG,IAAI;AACZtK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqK,GAArB;AACH,KARD;AASH;;AAEDG,EAAAA,qBAAqB,CAACC,UAAD,EAAa;AAAE;AAChC,QAAI5S,IAAI,GAAG;AACP6S,MAAAA,aAAa,EAAGD;AADT,KAAX;AAGAlV,IAAAA,GAAG,CAAC6T,IAAJ,CAAS,2BAAT,EAAsCvR,IAAtC,EAA4CwR,IAA5C,CAAiDC,GAAG,IAAI;AACpDvJ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCsJ,GAAG,CAACzR,IAAzC;;AAEA,UAAIyR,GAAG,CAACC,OAAR,EAAiB;AACb,YAAIoB,aAAa,GAAG,EAApB;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCD,UAAAA,aAAa,CAACjT,IAAd,CAAmB;AACfsE,YAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYC,IADJ;AAEfjS,YAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYE;AAFJ,WAAnB;AAIH;;AACD,aAAKpU,QAAL,CAAc;AAAE+Q,UAAAA,UAAU,EAAEkD;AAAd,SAAd;AAEH;AACJ,KAfD,EAeGP,KAfH,CAeSC,GAAG,IAAI;AACZtK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqK,GAArB;AACH,KAjBD;AAkBH;;AAEDvB,EAAAA,WAAW,GAAG;AAEV,QAAIiC,iBAAiB,GAAG,EAAxB,CAFU,CAIV;;AACA,QAAI;AACAxV,MAAAA,GAAG,CAACyV,GAAJ,CAAQxV,WAAW,CAACyV,IAAZ,CAAiBC,WAAzB,EAAsC7B,IAAtC,CAA2CC,GAAG,IAAI;AAE9C,YAAIA,GAAG,CAACC,OAAR,EAAiB;AAEb,eAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCG,YAAAA,iBAAiB,CAACrT,IAAlB,CAAuB;AACnBsE,cAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYO,QADA;AAEnBvS,cAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYO;AAFA,aAAvB;AAIH;;AACD,eAAKzU,QAAL,CAAc;AAAEkL,YAAAA,oBAAoB,EAAEmJ;AAAxB,WAAd;AACH,SATD,MASO,CAEN;AACJ,OAdD,EAcGX,KAdH,CAcSC,GAAG,IAAI,CAEf,CAhBD;AAiBH,KAlBD,CAkBE,OAAOA,GAAP,EAAY,CAEb;;AAED,QAAIe,iBAAiB,GAAG,EAAxB,CA3BU,CA6BV;;AACA,QAAI;AACA7V,MAAAA,GAAG,CAACyV,GAAJ,CAAQxV,WAAW,CAACyV,IAAZ,CAAiBI,WAAzB,EAAsChC,IAAtC,CAA2CC,GAAG,IAAI;AAE9C,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,eAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCQ,YAAAA,iBAAiB,CAAC1T,IAAlB,CAAuB;AACnBsE,cAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYU,WADA;AAEnB1S,cAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYU;AAFA,aAAvB;AAIH;;AACD,eAAK5U,QAAL,CAAc;AAAEqL,YAAAA,YAAY,EAAEqJ;AAAhB,WAAd;AACH,SARD,MAQO,CAEN;AACJ,OAbD,EAaGhB,KAbH,CAaSC,GAAG,IAAI,CAEf,CAfD;AAgBH,KAjBD,CAiBE,OAAOA,GAAP,EAAY,CAEb,CAjDS,CAmDV;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AACH;;AAEDkB,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,QAAIA,IAAI,IAAI,MAAZ,EAAoB;AAChB,WAAK9U,QAAL,CAAc;AAAEiM,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACH,KAFD,MAEO;AACH,WAAKjM,QAAL,CAAc;AAAEiM,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACH;AACJ;;AAED8I,EAAAA,YAAY,CAACD,IAAD,EAAO;AACf,QAAIA,IAAI,IAAI,MAAZ,EAAoB;AAChB,WAAK9U,QAAL,CAAc;AAAEkM,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KAFD,MAEO;AACH,WAAKlM,QAAL,CAAc;AAAEkM,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH;AACJ;;AAED4F,EAAAA,iBAAiB,CAACkC,aAAD,EAAgBgB,YAAhB,EAA8BC,OAA9B,EAAuC;AACpD,QAAI;AACA,YAAM9T,IAAI,GAAG;AACT+T,QAAAA,aAAa,EAAElB,aADN;AAETmB,QAAAA,OAAO,EAAEF;AAFA,OAAb;AAIApW,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBa,cAA1B,EAA0CjU,IAA1C,EAAgDwR,IAAhD,CAAqDC,GAAG,IAAI;AACxD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,eAAK7S,QAAL,CAAc;AAAE,aAACgV,YAAD,GAAgBpC,GAAG,CAACzR;AAAtB,WAAd;AACH,SAFD,MAEO,CACN;AACJ,OALD,EAKGuS,KALH,CAKSC,GAAG,IAAI,CACf,CAND;AAOH,KAZD,CAYE,OAAO0B,KAAP,EAAc,CACf;AACJ;;AAEDxS,EAAAA,uBAAuB,CAACD,OAAD,EAAUD,GAAV,EAAe;AAClC,QAAI;AACA,YAAMxB,IAAI,GAAG;AACT8R,QAAAA,OAAO,EAAErQ,OADA;AAETD,QAAAA,GAAG,EAAGA,GAAD,GAAM,CAAN,GAAQ;AAFJ,OAAb;AAIA0G,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCnI,IAAtC;AACAtC,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiB1R,uBAA1B,EAAmD1B,IAAnD,EAAyDwR,IAAzD,CAA8DC,GAAG,IAAI;AACjE,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,cAAIoB,aAAa,GAAG,EAApB;AACA5K,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCsJ,GAAvC;;AAEA,eAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCD,YAAAA,aAAa,CAACjT,IAAd,CAAmB;AACfsE,cAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYoB,eADJ;AAEfpT,cAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYqB;AAFJ,aAAnB;AAIH;;AAED,eAAKvV,QAAL,CAAc;AAAEmF,YAAAA,eAAe,EAAE8O;AAAnB,WAAd;AACH,SAZD,MAYO,CACN;AACJ,OAfD,EAeGP,KAfH,CAeSC,GAAG,IAAI,CACf,CAhBD;AAiBH,KAvBD,CAuBE,OAAO0B,KAAP,EAAc,CACf;AACJ;;AAEDG,EAAAA,aAAa,CAAC/C,EAAD,EAAKQ,OAAL,EAActQ,GAAd,EAAmB;AAC5B,QAAI;AACA,YAAMxB,IAAI,GAAG;AACToU,QAAAA,aAAa,EAAE9C,EADN;AAETQ,QAAAA,OAAO,EAAEA,OAFA;AAGTtQ,QAAAA,GAAG,EAAGA,GAAD,GAAM,CAAN,GAAQ;AAHJ,OAAb;AAKA0G,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCnI,IAArC;AACAtC,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBkB,sBAA1B,EAAkDtU,IAAlD,EAAwDwR,IAAxD,CAA6DC,GAAG,IAAI;AAChEvJ,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCsJ,GAArC;;AAEA,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,cAAIoB,aAAa,GAAG,EAApB;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCD,YAAAA,aAAa,CAACjT,IAAd,CAAmB;AACfsE,cAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYwB,cADJ;AAEfxT,cAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYyB;AAFJ,aAAnB;AAIH;;AAED,eAAK3V,QAAL,CAAc;AAAEmM,YAAAA,cAAc,EAAE8H;AAAlB,WAAd;AACH,SAXD,MAWO,CACN;AACJ,OAhBD,EAgBGP,KAhBH,CAgBSC,GAAG,IAAI,CACf,CAjBD;AAkBH,KAzBD,CAyBE,OAAO0B,KAAP,EAAc,CACf;AACJ,GAhmB6B,CAkmB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAO,EAAAA,uBAAuB,CAACnD,EAAD,EAAK;AACxB,QAAI;AACA,YAAMtR,IAAI,GAAG;AACTwU,QAAAA,YAAY,EAAElD;AADL,OAAb;AAGA5T,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBqB,uBAA1B,EAAmDzU,IAAnD,EAAyDwR,IAAzD,CAA8DC,GAAG,IAAI;AACjE,YAAIA,GAAG,CAACC,OAAR,EAAiB;AAEb,eAAK7S,QAAL,CAAc;AAAEkK,YAAAA,kBAAkB,EAAE0I,GAAG,CAACzR,IAAJ,CAASoB,MAA/B;AAAuC0H,YAAAA,gBAAgB,EAAE2I,GAAG,CAACzR;AAA7D,WAAd;AAEH,SAJD,MAIO,CACN;AACJ,OAPD,EAOGuS,KAPH,CAOSC,GAAG,IAAI,CACf,CARD;AASH,KAbD,CAaE,OAAO0B,KAAP,EAAc,CACf;AACJ;;AAEDQ,EAAAA,aAAa,CAACpD,EAAD,EAAK;AACd,QAAI;AACA,YAAMtR,IAAI,GAAG;AACTwU,QAAAA,YAAY,EAAElD;AADL,OAAb;AAGA5T,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBsB,aAA1B,EAAyC1U,IAAzC,EAA+CwR,IAA/C,CAAoDC,GAAG,IAAI;AACvD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AAEb,eAAK7S,QAAL,CAAc;AAAEoK,YAAAA,eAAe,EAAEwI,GAAG,CAACzR,IAAJ,CAASoB,MAA5B;AAAoC4H,YAAAA,aAAa,EAAEyI,GAAG,CAACzR;AAAvD,WAAd;AAEH,SAJD,MAIO,CACN;AACJ,OAPD,EAOGuS,KAPH,CAOSC,GAAG,IAAI,CACf,CARD;AASH,KAbD,CAaE,OAAO0B,KAAP,EAAc,CACf;AACJ;;AAEDlD,EAAAA,eAAe,GAAG;AACd,UAAMhR,IAAI,GAAG;AACT2U,MAAAA,KAAK,EAAE,aADE;AAETC,MAAAA,IAAI,EAAE,eAFG;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITzI,MAAAA,WAAW,EAAE,EAJJ;AAKTlM,MAAAA,QAAQ,EAAE;AALD,KAAb;AAOAxC,IAAAA,GAAG,CAAC6T,IAAJ,CAAS,4BAAT,EAAuCvR,IAAvC,EAA6CwR,IAA7C,CAAkDC,GAAG,IAAI;AACrD,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,YAAIoB,aAAa,GAAG,EAApB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCD,UAAAA,aAAa,CAACjT,IAAd,CAAmB;AACfsE,YAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAY+B,WADJ;AAEf/T,YAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAY+B;AAFJ,WAAnB;AAKH;;AACD,aAAKjW,QAAL,CAAc;AAAEmN,UAAAA,cAAc,EAAE8G;AAAlB,SAAd;AACH;AACJ,KAZD,EAYGP,KAZH,CAYSC,GAAG,IAAI,CAEf,CAdD,EARc,CAwBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDrB,EAAAA,oBAAoB,GAAG;AACnB,QAAI;AACA,YAAMnR,IAAI,GAAG;AACT+T,QAAAA,aAAa,EAAE,eADN;AAETC,QAAAA,OAAO,EAAE;AAFA,OAAb;AAIAtW,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBa,cAA1B,EAA0CjU,IAA1C,EAAgDwR,IAAhD,CAAqDC,GAAG,IAAI;AACxD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,cAAIoB,aAAa,GAAG,EAApB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCD,YAAAA,aAAa,CAACjT,IAAd,CAAmB;AACfsE,cAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYgC,WADJ;AAEfhU,cAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYzT;AAFJ,aAAnB;AAIH;;AACD,eAAKT,QAAL,CAAc;AAAEsO,YAAAA,iBAAiB,EAAE2F;AAArB,WAAd;AACH,SATD,MASO,CACN;AACJ,OAZD,EAYGP,KAZH,CAYSC,GAAG,IAAI,CACf,CAbD;AAcH,KAnBD,CAmBE,OAAO0B,KAAP,EAAc,CACf;AACJ;;AAED9C,EAAAA,mBAAmB,GAAG;AAClB,QAAI;AACA,YAAMpR,IAAI,GAAG;AACT+T,QAAAA,aAAa,EAAE,SADN;AAETC,QAAAA,OAAO,EAAE;AAFA,OAAb;AAIAtW,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBa,cAA1B,EAA0CjU,IAA1C,EAAgDwR,IAAhD,CAAqDC,GAAG,IAAI;AACxD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,cAAIoB,aAAa,GAAG,EAApB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCD,YAAAA,aAAa,CAACjT,IAAd,CAAmB;AACfsE,cAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYxK,aADJ;AAEfxH,cAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYzT;AAFJ,aAAnB;AAIH;;AACD,eAAKT,QAAL,CAAc;AAAEgN,YAAAA,YAAY,EAAEiH;AAAhB,WAAd;AACH,SATD,MASO,CACN;AACJ,OAZD,EAYGP,KAZH,CAYSC,GAAG,IAAI,CACf,CAbD;AAcH,KAnBD,CAmBE,OAAO0B,KAAP,EAAc,CACf;AACJ;;AAEDc,EAAAA,cAAc,CAACjU,KAAD,EAAQ;AAClB,QAAIf,IAAI,GAAG;AACPiV,MAAAA,YAAY,EAAElU;AADP,KAAX;AAGArD,IAAAA,GAAG,CAAC6T,IAAJ,CAAS,gCAAT,EAA2CvR,IAA3C,EAAiDwR,IAAjD,CAAsDC,GAAG,IAAI;AACzD,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,YAAItF,WAAW,GAAG,EAAlB;;AAEA,aAAK,IAAI2G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtC3G,UAAAA,WAAW,CAACvM,IAAZ,CAAiB;AACbsE,YAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYmC,WADN;AAEbnU,YAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYoC;AAFN,WAAjB;AAIH;;AACD,aAAKtW,QAAL,CAAc;AAAEsN,UAAAA,eAAe,EAAEC;AAAnB,SAAd;AACH;AACJ,KAZD;AAaH;;AAEDiF,EAAAA,kBAAkB,GAAG;AACjB3T,IAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiB/B,kBAA1B,EAA8CG,IAA9C,CAAmDC,GAAG,IAAI;AACtD,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,YAAI0D,gBAAgB,GAAG,EAAvB;AACAlN,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCsJ,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYqV,YAA9C;AACAD,QAAAA,gBAAgB,GAAG3D,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYqV,YAAZ,GAA2B,CAA9C;AACAnN,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCiN,gBAAhC;AAEA,aAAKvW,QAAL,CAAc;AAAEwC,UAAAA,YAAY,EAAE+T;AAAhB,SAAd;AACH;AACJ,KATD;AAUH;;AAED,QAAME,uBAAN,CAA8BjU,YAA9B,EAA4C;AACxC,SAAKxC,QAAL,CAAc;AAAE4K,MAAAA,kBAAkB,EAAE;AAAtB,KAAd;AACA,QAAIzJ,IAAI,GAAG;AACPqV,MAAAA,YAAY,EAAEhU;AADP,KAAX;AAGA,QAAIkU,SAAS,GAAG,MAAM7X,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBkC,uBAA1B,EAAmDtV,IAAnD,EAAyDwR,IAAzD,CAA8DC,GAAG,IAAI;AACvF,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,YAAID,GAAG,CAACzR,IAAJ,CAASoB,MAAT,IAAmB,CAAvB,EAA0B;AACtBlD,UAAAA,KAAK,CAACgW,KAAN,CAAY,8BAAZ;AACA,eAAKrV,QAAL,CAAc;AAAEsC,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACA,eAAKrC,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,8BAArD;AACA,iBAAO,IAAP;AACH,SALD,MAKO;AACH,iBAAO,KAAP;AACH;AAEJ,OAVD,MAUO;AACH,eAAO,IAAP;AACH;AACJ,KAdqB,CAAtB;AAgBA,WAAOyW,SAAP;AACH;;AAEDC,EAAAA,gBAAgB,GAAG;AACftN,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C,KAAKzJ,KAAL,CAAW+K,kBAAxD;AAEA,SAAK5K,QAAL,CAAc;AAAE4K,MAAAA,kBAAkB,EAAE,CAAC,KAAK/K,KAAL,CAAW+K;AAAlC,KAAd;;AACA,QAAI,KAAK/K,KAAL,CAAW+K,kBAAf,EAAmC;AAC/B,WAAK6L,uBAAL,CAA6B,KAAK5W,KAAL,CAAW2C,YAAxC;AACH;AACJ;;AAEDvC,EAAAA,IAAI,CAAC2W,KAAD,EAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAwC;AACxC,QAAIF,SAAJ,EAAe;AACX,UAAIG,QAAQ,CAACC,cAAT,CAAwBL,KAAxB,CAAJ,EACII,QAAQ,CAACC,cAAT,CAAwBL,KAAxB,EAA+BM,SAA/B,GAA2C,yBAA3C;AAEJ,UAAIF,QAAQ,CAACC,cAAT,CAAwBH,UAAxB,CAAJ,EACIE,QAAQ,CAACC,cAAT,CAAwBH,UAAxB,EAAoCK,SAApC,GAAgD,QAAQJ,OAAR,GAAkB,OAAlE;AACP,KAND,MAMO;AACH,UAAIC,QAAQ,CAACC,cAAT,CAAwBL,KAAxB,CAAJ,EACII,QAAQ,CAACC,cAAT,CAAwBL,KAAxB,EAA+BM,SAA/B,GAA2C,cAA3C;AAEJ,UAAIF,QAAQ,CAACC,cAAT,CAAwBH,UAAxB,CAAJ,EACIE,QAAQ,CAACC,cAAT,CAAwBH,UAAxB,EAAoCK,SAApC,GAAgD,IAAhD;AACP;AACJ;;AAEDjF,EAAAA,4BAA4B,GAAG;AAC3B,QAAI;AACA,YAAM/Q,IAAI,GAAG;AACT+T,QAAAA,aAAa,EAAE,uBADN;AAETC,QAAAA,OAAO,EAAE;AAFA,OAAb;AAIAtW,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBa,cAA1B,EAA0CjU,IAA1C,EAAgDwR,IAAhD,CAAqDC,GAAG,IAAI;AACxD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,cAAIuE,QAAQ,GAAGxE,GAAG,CAACzR,IAAnB;AACA,eAAKtB,KAAL,CAAWM,wBAAX,CAAoCkX,OAApC,CAA4ClW,IAAI,IAAI;AAChD,gBAAIb,KAAK,GAAG8W,QAAQ,CAAC7W,SAAT,CAAmBC,CAAC,IAAIA,CAAC,CAACC,YAAF,KAAmBU,IAAI,CAACR,oBAAhD,CAAZ;AACAiS,YAAAA,GAAG,CAACzR,IAAJ,CAASF,MAAT,CAAgBX,KAAhB,EAAuB,CAAvB;AACH,WAHD;AAIA,eAAKN,QAAL,CAAc;AAAEK,YAAAA,wBAAwB,EAAE+W;AAA5B,WAAd;AACH,SAPD,MAOO,CACN;AACJ,OAVD,EAUG1D,KAVH,CAUSC,GAAG,IAAI,CACf,CAXD;AAYH,KAjBD,CAiBE,OAAO0B,KAAP,EAAc,CACf;AACJ;;AA4CD5T,EAAAA,SAAS,CAACE,KAAD,EAAQ;AACb,QAAIA,KAAK,IAAI,QAAb,EAAuB;AACnB,WAAK3B,QAAL,CAAc;AAAEsB,QAAAA,WAAW,EAAE,CAAC,KAAKzB,KAAL,CAAWyB;AAA3B,OAAd;AACH,KAFD,MAEO,IAAIK,KAAK,IAAI,YAAb,EAA2B;AAC9B,WAAK3B,QAAL,CAAc;AAAE4B,QAAAA,gBAAgB,EAAE,CAAC,KAAK/B,KAAL,CAAW+B;AAAhC,OAAd;AACH,KAFM,MAEA,IAAID,KAAK,IAAI,mBAAb,EAAkC;AACrC,WAAK3B,QAAL,CAAc;AAAE6B,QAAAA,uBAAuB,EAAE,CAAC,KAAKhC,KAAL,CAAWgC;AAAvC,OAAd;AACH;AACJ;;AAiBDyV,EAAAA,mBAAmB,CAACrF,WAAD,EAAc;AAC7B,QAAI;AACA,UAAI9Q,IAAI,GAAG;AAAE8Q,QAAAA,WAAW,EAAEA;AAAf,OAAX;AACApT,MAAAA,GAAG,CAAC6T,IAAJ,CAAS,yBAAT,EAAoCvR,IAApC,EAA0CwR,IAA1C,CAA+CC,GAAG,IAAI;AAClD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,cAAIoB,aAAa,GAAG,EAApB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,GAAG,CAACzR,IAAJ,CAASoB,MAA7B,EAAqC2R,CAAC,EAAtC,EAA0C;AACtCD,YAAAA,aAAa,CAACjT,IAAd,CAAmB;AACfsE,cAAAA,KAAK,EAAEsN,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYqD,gBADJ;AAEfrV,cAAAA,KAAK,EAAE0Q,GAAG,CAACzR,IAAJ,CAAS+S,CAAT,EAAYsD;AAFJ,aAAnB;AAIH;;AACD,eAAKxX,QAAL,CAAc;AAAE6L,YAAAA,UAAU,EAAEoI;AAAd,WAAd;AACH,SATD,MASO;AACH5K,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;AACJ,OAbD,EAaGoK,KAbH,CAaSC,GAAG,IAAI;AACZtK,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCqK,GAAnC;AACH,OAfD;AAgBH,KAlBD,CAkBE,OAAO0B,KAAP,EAAc;AACZhM,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC+L,KAAnC;AACH;AACJ;;AAEDoC,EAAAA,sBAAsB,CAACC,KAAD,EAAQ;AAC1BrO,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKzJ,KAAL,CAAWkP,mBAAzD;AAEA,QAAI4I,OAAO,GAAG,KAAK9X,KAAL,CAAWkP,mBAAX,CAA+B3J,MAA/B,CAAuCwS,mBAAD,IAAyB;AACzE,UAAIC,mBAAmB,GAAGD,mBAAmB,CAAClO,aAA9C;AACA,aAAOmO,mBAAmB,CAACC,WAApB,GAAkCC,UAAlC,CAA6CL,KAAK,CAACM,KAAN,CAAYF,WAAZ,EAA7C,CAAP;AACH,KAHa,CAAd;AAIAzO,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CqO,OAA9C;AACA,QAAIM,qBAAqB,GAAG,EAA5B;AACAN,IAAAA,OAAO,CAACN,OAAR,CAAgBzE,GAAG,IAAI;AACnBqF,MAAAA,qBAAqB,CAACjX,IAAtB,CAA2B4R,GAAG,CAAClJ,aAA/B;AACH,KAFD;AAGA,SAAK1J,QAAL,CAAc;AAAEkY,MAAAA,0BAA0B,EAAED;AAA9B,KAAd;AACH;;AAEDE,EAAAA,qBAAqB,CAACjW,KAAD,EAAQ;AACzBmH,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCpH,KAAvC;;AACA,QAAIhD,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,WAAKlC,QAAL,CAAc;AAAEiP,QAAAA,oBAAoB,EAAE,IAAxB;AAA8BD,QAAAA,eAAe,EAAE9M;AAA/C,OAAd;AACA,WAAKjC,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,gCAA3D;AACH,KAHD,MAGO;AACH,WAAKD,QAAL,CAAc;AAAEiP,QAAAA,oBAAoB,EAAE,KAAxB;AAA+BD,QAAAA,eAAe,EAAE9M;AAAhD,OAAd;AACA,WAAKjC,IAAL,CAAU,iBAAV,EAA6B,KAA7B,EAAoC,sBAApC,EAA4D,EAA5D;AACA,UAAI0X,OAAO,GAAG,KAAK9X,KAAL,CAAWkP,mBAAX,CAA+B3J,MAA/B,CAAuCwS,mBAAD,IAAyB;AACzE,YAAIC,mBAAmB,GAAGD,mBAAmB,CAAClO,aAA9C;AACA,eAAOmO,mBAAmB,IAAI3V,KAA9B;AACH,OAHa,CAAd,CAHG,CAOH;AACA;AACA;AACH;AACJ;;AAED0B,EAAAA,cAAc,CAACG,OAAD,EAAUF,IAAV,EAAgBC,QAAhB,EAA0B;AACpC,QAAIsU,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAGnZ,YAAY,CAACmD,OAAb,CAAqB0B,OAArB,IAAgC,CAAhC,GAAoCA,OAAlD;AACA,QAAIuU,IAAI,GAAGpZ,YAAY,CAACmD,OAAb,CAAqBwB,IAArB,IAA6B,CAA7B,GAAiCA,IAA5C;AACA,QAAI0U,QAAQ,GAAGrZ,YAAY,CAACmD,OAAb,CAAqByB,QAArB,IAAiC,CAAjC,GAAqCA,QAApD;AACAsU,IAAAA,QAAQ,GAAGI,MAAM,CAACH,OAAD,CAAN,GAAkBG,MAAM,CAACF,IAAD,CAAxB,GAAiCE,MAAM,CAACD,QAAD,CAAlD;AACA,SAAKvY,QAAL,CAAc;AAAEkR,MAAAA,KAAK,EAAEkH;AAAT,KAAd;AACH;;AAEDK,EAAAA,wBAAwB,CAACC,eAAD,EAAkB;AACtC,QAAI;AACA,YAAMvX,IAAI,GAAG;AACTwX,QAAAA,KAAK,EAAED;AADE,OAAb;AAGArP,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCnI,IAAxC;AACAtC,MAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiBkE,wBAA1B,EAAoDtX,IAApD,EAA0DwR,IAA1D,CAA+DC,GAAG,IAAI;AAClE,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACbxJ,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCsJ,GAAxC;AACA,cAAIgG,aAAa,GAAGhG,GAAG,CAACzR,IAAJ,CAAS,CAAT,EAAYoU,aAAhC;AACA,cAAIsD,cAAc,GAAG3Z,YAAY,CAAC4Z,qCAAb,CAAmDJ,eAAnD,CAArB;AACA,gBAAMvX,IAAI,GAAG;AACT4X,YAAAA,OAAO,EAAEH,aADA;AAETI,YAAAA,IAAI,EAAEH;AAFG,WAAb;AAIAxP,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCnI,IAAxC;AACAtC,UAAAA,GAAG,CAAC6T,IAAJ,CAAS5T,WAAW,CAACyV,IAAZ,CAAiB0E,iCAA1B,EAA6D9X,IAA7D,EAAmEwR,IAAnE,CAAwEuG,MAAM,IAAI;AAC9E7P,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwC4P,MAAxC;;AACA,gBAAIA,MAAM,CAACrG,OAAX,EAAoB;AAChB,mBAAK7S,QAAL,CAAc;AAAE8C,gBAAAA,WAAW,EAAE8V,aAAf;AAA8B5V,gBAAAA,UAAU,EAAEkW,MAAM,CAAC/X,IAAP,CAAY,CAAZ,EAAewU;AAAzD,eAAd;AACH,aAFD,MAEO,CAEN;AACJ,WAPD,EAOGjC,KAPH,CAOSC,GAAG,IAAI,CAEf,CATD;AAUH,SAnBD,MAmBO,CAEN;AACJ,OAvBD,EAuBGD,KAvBH,CAuBSC,GAAG,IAAI,CAEf,CAzBD;AA0BH,KA/BD,CA+BE,OAAO0B,KAAP,EAAc;AACZhM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB+L,KAAnB;AACH;AACJ;;AAED8D,EAAAA,iBAAiB,CAACnO,UAAD,EAAa;AAC1B3B,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B0B,UAA7B;;AACA,QAAIA,UAAU,IAAI,aAAd,IAA+BA,UAAU,IAAI,aAA7C,IAA8DA,UAAU,IAAI,aAAhF,EAA+F;AAC3F3B,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B0B,UAA5B;AACA,WAAKhL,QAAL,CAAc;AACVoE,QAAAA,IAAI,EAAE,EADI;AAEVF,QAAAA,SAAS,EAAE,KAFD;AAIV6H,QAAAA,UAAU,EAAE,EAJF;AAMVzH,QAAAA,MAAM,EAAE,EANE;AAOVD,QAAAA,WAAW,EAAE,KAPH;AASVvB,QAAAA,WAAW,EAAE,EATH;AAUVC,QAAAA,gBAAgB,EAAE,KAVR;AAYVC,QAAAA,UAAU,EAAE,EAZF;AAaVC,QAAAA,eAAe,EAAE,KAbP;AAeVuB,QAAAA,UAAU,EAAE,EAfF;AAgBVD,QAAAA,eAAe,EAAE,KAhBP;AAkBV8H,QAAAA,WAAW,EAAE,EAlBH;AAmBVC,QAAAA,gBAAgB,EAAE,KAnBR;AAqBVE,QAAAA,YAAY,EAAE,EArBJ;AAsBVC,QAAAA,iBAAiB,EAAE,KAtBT;AAwBV/H,QAAAA,YAAY,EAAE,EAxBJ;AAyBVD,QAAAA,iBAAiB,EAAE,KAzBT;AA2BVlC,QAAAA,MAAM,EAAE,EA3BE;AA4BVoC,QAAAA,WAAW,EAAE,KA5BH;AA8BV+H,QAAAA,eAAe,EAAE,EA9BP;AAgCVE,QAAAA,oBAAoB,EAAE,KAhCZ;AAkCVlH,QAAAA,sBAAsB,EAAE,KAlCd;AAmCVY,QAAAA,cAAc,EAAE,EAnCN;AAoCVH,QAAAA,mBAAmB,EAAE,KApCX;AAqCVC,QAAAA,aAAa,EAAE,EArCL;AAuCVlB,QAAAA,SAAS,EAAE,EAvCD;AAwCVN,QAAAA,cAAc,EAAE,KAxCN;AAyCVe,QAAAA,MAAM,EAAE,EAzCE;AA2CVC,QAAAA,aAAa,EAAE,EA3CL;AA4CVC,QAAAA,kBAAkB,EAAE,KA5CV;AA8CVG,QAAAA,aAAa,EAAE,CA9CL;AA+CVD,QAAAA,kBAAkB,EAAE,KA/CV;AAiDVG,QAAAA,UAAU,EAAE,CAjDF;AAkDVD,QAAAA,eAAe,EAAE,KAlDP;AAoDV6G,QAAAA,gBAAgB,EAAE,EApDR;AAqDVC,QAAAA,qBAAqB,EAAE,KArDb;AAuDVE,QAAAA,QAAQ,EAAE,EAvDA;AAwDVC,QAAAA,aAAa,EAAE,KAxDL;AA0DVE,QAAAA,UAAU,EAAE,EA1DF;AA2DVC,QAAAA,eAAe,EAAE,KA3DP;AA6DVE,QAAAA,WAAW,EAAE,EA7DH;AA8DVC,QAAAA,gBAAgB,EAAE,KA9DR;AA+DV;AACA;AACA;AACAhH,QAAAA,UAAU,EAAE,EAlEF;AAmEVD,QAAAA,eAAe,EAAE,KAnEP;AAqEVG,QAAAA,YAAY,EAAE,EArEJ;AAsEVD,QAAAA,iBAAiB,EAAE,KAtET;AAwEVK,QAAAA,cAAc,EAAE,EAxEN;AAyEVD,QAAAA,mBAAmB,EAAE,KAzEX;AA2EVD,QAAAA,kBAAkB,EAAE,EA3EV;AA4EVD,QAAAA,uBAAuB,EAAE,KA5Ef;AA8EVgH,QAAAA,cAAc,EAAE,EA9EN;AA+EVC,QAAAA,mBAAmB,EAAE,KA/EX;AAiFVC,QAAAA,sBAAsB,EAAE,EAjFd;AAmFVE,QAAAA,2BAA2B,EAAE,KAnFnB;AAqFV/G,QAAAA,eAAe,EAAE,EArFP;AAsFVD,QAAAA,oBAAoB,EAAE,KAtFZ;AAwFVG,QAAAA,iBAAiB,EAAE,EAxFT;AAyFVD,QAAAA,sBAAsB,EAAE,KAzFd;AA2FVK,QAAAA,mBAAmB,EAAE,EA3FX;AA4FVD,QAAAA,wBAAwB,EAAE,KA5FhB;AA8FVD,QAAAA,uBAAuB,EAAE,EA9Ff;AA+FVD,QAAAA,4BAA4B,EAAE,KA/FpB;AAiGV8G,QAAAA,mBAAmB,EAAE,EAjGX;AAkGVC,QAAAA,wBAAwB,EAAE,KAlGhB;AAoGVC,QAAAA,2BAA2B,EAAE,EApGnB;AAsGVE,QAAAA,gCAAgC,EAAE,KAtGxB;AAwGV7G,QAAAA,QAAQ,EAAE,CAxGA;AAyGVD,QAAAA,aAAa,EAAE,KAzGL;AA2GVG,QAAAA,aAAa,EAAE,EA3GL;AA4GVD,QAAAA,kBAAkB,EAAE,KA5GV;AA8GVI,QAAAA,eAAe,EAAE,EA9GP;AA+GVF,QAAAA,oBAAoB,EAAE,KA/GZ;AAgHV;AACA;AACA;AAEA4G,QAAAA,aAAa,EAAE,EApHL;AAqHVC,QAAAA,kBAAkB,EAAE,KArHV;AAuHVzG,QAAAA,uBAAuB,EAAE,EAvHf;AAwHVD,QAAAA,4BAA4B,EAAE,KAxHpB;AAyHV;AACA;AACA;AACA4G,QAAAA,yBAAyB,EAAE,EA5HjB;AA6HVC,QAAAA,8BAA8B,EAAE,KA7HtB;AA+HVE,QAAAA,eAAe,EAAE,CA/HP;AAgIVC,QAAAA,oBAAoB,EAAE,KAhIZ;AAkIVE,QAAAA,eAAe,EAAE,EAlIP;AAmIVC,QAAAA,oBAAoB,EAAE,KAnIZ;AAqIVhH,QAAAA,gBAAgB,EAAE,EArIR;AAsIVD,QAAAA,qBAAqB,EAAE,KAtIb;AAwIVlI,QAAAA,qBAAqB,EAAE,EAxIb;AA0IVC,QAAAA,0BAA0B,EAAE,KA1IlB;AA4IVmP,QAAAA,MAAM,EAAE,EA5IE;AA6IVC,QAAAA,WAAW,EAAE,KA7IH;AA8IVhH,QAAAA,cAAc,EAAE,EA9IN;AA+IVD,QAAAA,mBAAmB,EAAE,KA/IX;AAgJVkH,QAAAA,kBAAkB,EAAE,KAhJV;AAkJVC,QAAAA,SAAS,EAAE,EAlJD;AAmJVC,QAAAA,cAAc,EAAE,KAnJN;AAoJVjH,QAAAA,iBAAiB,EAAE,EApJT;AAqJVD,QAAAA,sBAAsB,EAAE,KArJd;AAsJVmH,QAAAA,qBAAqB,EAAE,KAtJb;AAwJVC,QAAAA,iBAAiB,EAAE,EAxJT;AAyJVC,QAAAA,sBAAsB,EAAE,KAzJd;AA0JVlH,QAAAA,yBAAyB,EAAE,EA1JjB;AA2JVD,QAAAA,8BAA8B,EAAE,KA3JtB;AA4JVoH,QAAAA,6BAA6B,EAAE,KA5JrB;AA8JVC,QAAAA,OAAO,EAAE,EA9JC;AA+JVC,QAAAA,YAAY,EAAE,KA/JJ;AAgKVnH,QAAAA,eAAe,EAAE,EAhKP;AAiKVD,QAAAA,oBAAoB,EAAE,KAjKZ;AAkKVqH,QAAAA,mBAAmB,EAAE,KAlKX;AAmKV;AACA;AACA;AACAK,QAAAA,mBAAmB,EAAE,EAtKX;AAuKVC,QAAAA,wBAAwB,EAAE,KAvKhB;AAyKVzH,QAAAA,aAAa,EAAE,KAzKL;AA0KVC,QAAAA,oBAAoB,EAAE,EA1KZ;AA2KVC,QAAAA,0BAA0B,EAAE,EA3KlB;AA6KVE,QAAAA,WAAW,EAAE,KA7KH;AA8KVC,QAAAA,kBAAkB,EAAE,EA9KV;AA+KVC,QAAAA,yBAAyB,EAAE,EA/KjB;AAiLVE,QAAAA,YAAY,EAAE,KAjLJ;AAkLVE,QAAAA,kBAAkB,EAAE,EAlLV;AAoLViH,QAAAA,eAAe,EAAE,EApLP;AAqLVC,QAAAA,oBAAoB,EAAE,KArLZ;AAuLVE,QAAAA,aAAa,EAAE,EAvLL;AAwLVC,QAAAA,kBAAkB,EAAE,KAxLV;AAyLV;AACAO,QAAAA,MAAM,EAAE,EA1LE;AA2LVC,QAAAA,WAAW,EAAE,IA3LH;AA6LVlN,QAAAA,OAAO,EAAE,EA7LC;AA8LVP,QAAAA,YAAY,EAAE,IA9LJ;AAgMVK,QAAAA,IAAI,EAAE,EAhMI;AAiMVG,QAAAA,SAAS,EAAE,IAjMD;AAmMVF,QAAAA,QAAQ,EAAE,EAnMA;AAoMVG,QAAAA,aAAa,EAAE,IApML;AAqMV;AACAyM,QAAAA,iBAAiB,EAAE,CAtMT;AAuMVC,QAAAA,iBAAiB,EAAE,CAvMT;AAwMVC,QAAAA,qBAAqB,EAAE,CAxMb;AAyMVC,QAAAA,kBAAkB,EAAE,CAzMV;AA0MVC,QAAAA,iBAAiB,EAAE,CA1MT;AA2MV9E,QAAAA,mBAAmB,EAAE;AA3MX,OAAd;;AA6MA,UAAIhB,UAAU,IAAI,aAAlB,EAAgC;AAC5B,aAAKyN,wBAAL,CAA8B,mBAA9B;AACH;;AACD,UAAIzN,UAAU,IAAI,aAAlB,EAAiC;AAC7B,aAAKyN,wBAAL,CAA8B,aAA9B;AACH;;AACD,UAAIzN,UAAU,IAAI,aAAlB,EAAiC;AAC7B,aAAKyN,wBAAL,CAA8B,oBAA9B;AACH;AACJ,KAxND,MAwNO,IAAIzN,UAAU,IAAI,gBAAlB,EAAoC;AACvC,WAAKhL,QAAL,CAAc;AACVqE,QAAAA,WAAW,EAAE,IADH;AAEVH,QAAAA,SAAS,EAAE,IAFD;AAGV6H,QAAAA,UAAU,EAAE,QAHF;AAIV2E,QAAAA,iBAAiB,EAAE,CAJT;AAKVC,QAAAA,iBAAiB,EAAE,CALT;AAMVC,QAAAA,qBAAqB,EAAE,CANb;AAOVC,QAAAA,kBAAkB,EAAE,CAPV;AAQVC,QAAAA,iBAAiB,EAAE,CART;AASV9E,QAAAA,mBAAmB,EAAE;AATX,OAAd;AAWH,KAZM,MAYA;AACH,WAAKhM,QAAL,CAAc;AACVoE,QAAAA,IAAI,EAAE,EADI;AAEVF,QAAAA,SAAS,EAAE,KAFD;AAIV6H,QAAAA,UAAU,EAAE,EAJF;AAMVzH,QAAAA,MAAM,EAAE,EANE;AAOVD,QAAAA,WAAW,EAAE,KAPH;AASVvB,QAAAA,WAAW,EAAE,EATH;AAUVC,QAAAA,gBAAgB,EAAE,IAVR;AAYVC,QAAAA,UAAU,EAAE,EAZF;AAaVC,QAAAA,eAAe,EAAE,IAbP;AAeVuB,QAAAA,UAAU,EAAE,EAfF;AAgBVD,QAAAA,eAAe,EAAE,IAhBP;AAkBV8H,QAAAA,WAAW,EAAE,EAlBH;AAmBVC,QAAAA,gBAAgB,EAAE,IAnBR;AAqBVE,QAAAA,YAAY,EAAE,EArBJ;AAsBVC,QAAAA,iBAAiB,EAAE,IAtBT;AAwBV/H,QAAAA,YAAY,EAAE,EAxBJ;AAyBVD,QAAAA,iBAAiB,EAAE,IAzBT;AA2BVlC,QAAAA,MAAM,EAAE,EA3BE;AA4BVoC,QAAAA,WAAW,EAAE,IA5BH;AA8BV+H,QAAAA,eAAe,EAAE,EA9BP;AAgCVE,QAAAA,oBAAoB,EAAE,IAhCZ;AAkCVlH,QAAAA,sBAAsB,EAAE,KAlCd;AAmCVY,QAAAA,cAAc,EAAE,EAnCN;AAoCVH,QAAAA,mBAAmB,EAAE,IApCX;AAqCVC,QAAAA,aAAa,EAAE,EArCL;AAuCVlB,QAAAA,SAAS,EAAE,EAvCD;AAwCVN,QAAAA,cAAc,EAAE,IAxCN;AAyCVe,QAAAA,MAAM,EAAE,EAzCE;AA2CVC,QAAAA,aAAa,EAAE,EA3CL;AA4CVC,QAAAA,kBAAkB,EAAE,IA5CV;AA8CVG,QAAAA,aAAa,EAAE,EA9CL;AA+CVD,QAAAA,kBAAkB,EAAE,IA/CV;AAiDVG,QAAAA,UAAU,EAAE,EAjDF;AAkDVD,QAAAA,eAAe,EAAE,IAlDP;AAqDV6G,QAAAA,gBAAgB,EAAE,cArDR;AAsDV;AAEAG,QAAAA,QAAQ,EAAE,EAxDA;AAyDVC,QAAAA,aAAa,EAAE,IAzDL;AA2DVE,QAAAA,UAAU,EAAE,EA3DF;AA4DVC,QAAAA,eAAe,EAAE,IA5DP;AA8DVE,QAAAA,WAAW,EAAE,EA9DH;AA+DVC,QAAAA,gBAAgB,EAAE,IA/DR;AAgEV;AACA;AACA;AACAhH,QAAAA,UAAU,EAAE,EAnEF;AAoEVD,QAAAA,eAAe,EAAE,IApEP;AAsEVG,QAAAA,YAAY,EAAE,EAtEJ;AAuEVD,QAAAA,iBAAiB,EAAE,IAvET;AAyEVK,QAAAA,cAAc,EAAE,EAzEN;AA0EVD,QAAAA,mBAAmB,EAAE,IA1EX;AA4EVD,QAAAA,kBAAkB,EAAE,EA5EV;AA6EVD,QAAAA,uBAAuB,EAAE,IA7Ef;AA+EVgH,QAAAA,cAAc,EAAE,EA/EN;AAgFVC,QAAAA,mBAAmB,EAAE,IAhFX;AAkFVC,QAAAA,sBAAsB,EAAE,EAlFd;AAoFVE,QAAAA,2BAA2B,EAAE,IApFnB;AAsFV/G,QAAAA,eAAe,EAAE,EAtFP;AAuFVD,QAAAA,oBAAoB,EAAE,IAvFZ;AAyFVG,QAAAA,iBAAiB,EAAE,EAzFT;AA0FVD,QAAAA,sBAAsB,EAAE,IA1Fd;AA4FVK,QAAAA,mBAAmB,EAAE,EA5FX;AA6FVD,QAAAA,wBAAwB,EAAE,IA7FhB;AA+FVD,QAAAA,uBAAuB,EAAE,EA/Ff;AAgGVD,QAAAA,4BAA4B,EAAE,IAhGpB;AAkGV8G,QAAAA,mBAAmB,EAAE,EAlGX;AAmGVC,QAAAA,wBAAwB,EAAE,IAnGhB;AAqGVC,QAAAA,2BAA2B,EAAE,EArGnB;AAuGVE,QAAAA,gCAAgC,EAAE,IAvGxB;AAyGV7G,QAAAA,QAAQ,EAAE,EAzGA;AA0GVD,QAAAA,aAAa,EAAE,IA1GL;AA4GVG,QAAAA,aAAa,EAAE,EA5GL;AA6GVD,QAAAA,kBAAkB,EAAE,IA7GV;AA+GVI,QAAAA,eAAe,EAAE,EA/GP;AAgHVF,QAAAA,oBAAoB,EAAE,IAhHZ;AAiHV;AACA;AACA;AAEA4G,QAAAA,aAAa,EAAE,EArHL;AAsHVC,QAAAA,kBAAkB,EAAE,IAtHV;AAwHVzG,QAAAA,uBAAuB,EAAE,EAxHf;AAyHVD,QAAAA,4BAA4B,EAAE,IAzHpB;AA0HV;AACA;AACA;AAEA4G,QAAAA,yBAAyB,EAAE,EA9HjB;AA+HVC,QAAAA,8BAA8B,EAAE,IA/HtB;AAkIVE,QAAAA,eAAe,EAAE,EAlIP;AAmIVC,QAAAA,oBAAoB,EAAE,IAnIZ;AAsIVE,QAAAA,eAAe,EAAE,EAtIP;AAuIVC,QAAAA,oBAAoB,EAAE,KAvIZ;AAyIVhH,QAAAA,gBAAgB,EAAE,EAzIR;AA0IVD,QAAAA,qBAAqB,EAAE,KA1Ib;AA4IVlI,QAAAA,qBAAqB,EAAE,EA5Ib;AA8IVC,QAAAA,0BAA0B,EAAE,IA9IlB;AAgJVmP,QAAAA,MAAM,EAAE,EAhJE;AAiJVC,QAAAA,WAAW,EAAE,IAjJH;AAkJVhH,QAAAA,cAAc,EAAE,EAlJN;AAmJVD,QAAAA,mBAAmB,EAAE,IAnJX;AAoJVkH,QAAAA,kBAAkB,EAAE,KApJV;AAsJVC,QAAAA,SAAS,EAAE,EAtJD;AAuJVC,QAAAA,cAAc,EAAE,IAvJN;AAwJVjH,QAAAA,iBAAiB,EAAE,EAxJT;AAyJVD,QAAAA,sBAAsB,EAAE,IAzJd;AA0JVmH,QAAAA,qBAAqB,EAAE,KA1Jb;AA4JVC,QAAAA,iBAAiB,EAAE,EA5JT;AA6JVC,QAAAA,sBAAsB,EAAE,IA7Jd;AA8JVlH,QAAAA,yBAAyB,EAAE,EA9JjB;AA+JVD,QAAAA,8BAA8B,EAAE,IA/JtB;AAgKVoH,QAAAA,6BAA6B,EAAE,KAhKrB;AAkKVC,QAAAA,OAAO,EAAE,EAlKC;AAmKVC,QAAAA,YAAY,EAAE,IAnKJ;AAoKVnH,QAAAA,eAAe,EAAE,EApKP;AAqKVD,QAAAA,oBAAoB,EAAE,IArKZ;AAsKVqH,QAAAA,mBAAmB,EAAE,KAtKX;AAuKV;AACA;AACA;AACAK,QAAAA,mBAAmB,EAAE,EA1KX;AA2KVC,QAAAA,wBAAwB,EAAE,IA3KhB;AA6KVzH,QAAAA,aAAa,EAAE,KA7KL;AA8KVC,QAAAA,oBAAoB,EAAE,EA9KZ;AA+KVC,QAAAA,0BAA0B,EAAE,EA/KlB;AAiLVE,QAAAA,WAAW,EAAE,KAjLH;AAkLVC,QAAAA,kBAAkB,EAAE,EAlLV;AAmLVC,QAAAA,yBAAyB,EAAE,EAnLjB;AAqLVE,QAAAA,YAAY,EAAE,KArLJ;AAsLVE,QAAAA,kBAAkB,EAAE,EAtLV;AAyLViH,QAAAA,eAAe,EAAE,EAzLP;AA0LVC,QAAAA,oBAAoB,EAAE,IA1LZ;AA6LVE,QAAAA,aAAa,EAAE,EA7LL;AA8LVC,QAAAA,kBAAkB,EAAE,IA9LV;AA+LV;AACAO,QAAAA,MAAM,EAAE,EAhME;AAiMVC,QAAAA,WAAW,EAAE,KAjMH;AAmMVlN,QAAAA,OAAO,EAAE,EAnMC;AAoMVP,QAAAA,YAAY,EAAE,KApMJ;AAsMVK,QAAAA,IAAI,EAAE,EAtMI;AAuMVG,QAAAA,SAAS,EAAE,KAvMD;AAyMVF,QAAAA,QAAQ,EAAE,EAzMA;AA0MVG,QAAAA,aAAa,EAAE,KA1ML;AA2MV;AACAyM,QAAAA,iBAAiB,EAAE,CA5MT;AA6MVC,QAAAA,iBAAiB,EAAE,CA7MT;AA8MVC,QAAAA,qBAAqB,EAAE,CA9Mb;AA+MVC,QAAAA,kBAAkB,EAAE,CA/MV;AAgNVC,QAAAA,iBAAiB,EAAE,CAhNT;AAiNV9E,QAAAA,mBAAmB,EAAE;AAjNX,OAAd;AAmNH;AACJ;;AAEDoN,EAAAA,UAAU,CAAClX,KAAD,EAAQ8W,IAAR,EAAc;AACpB3P,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzJ,KAAjB;;AAEA,QAAImZ,IAAI,KAAK,SAAb,EAAwB;AAEpB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAAK,CAACA,KAA3B,CAAJ,EAAuC;AACnC,aAAKlC,QAAL,CAAc;AAAE8K,UAAAA,YAAY,EAAE,IAAhB;AAAsBlI,UAAAA,OAAO,EAAEV,KAAK,CAACA;AAArC,SAAd;AACA,aAAKjC,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,cAA3B,EAA2C,uBAA3C;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE8K,UAAAA,YAAY,EAAE,KAAhB;AAAuBlI,UAAAA,OAAO,EAAEV,KAAK,CAACA;AAAtC,SAAd;AACA,aAAKjC,IAAL,CAAU,SAAV,EAAqB,KAArB,EAA4B,cAA5B,EAA4C,EAA5C;AACA,YAAI2R,uBAAuB,GAAG1S,YAAY,CAAC2S,4BAAb,CAA0C3P,KAAK,CAACA,KAAhD,CAA9B;AACA,aAAK4P,iBAAL,CAAuBF,uBAAvB,EAAgD,yBAAhD,EAA2E,WAA3E;;AACA,YAAI1P,KAAK,CAACA,KAAN,IAAe,IAAnB,EAAyB;AACrB,eAAKlC,QAAL,CAAc;AAAEsL,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACH,SAFD,MAEO;AACH,eAAKtL,QAAL,CAAc;AAAEsL,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACH;;AACD,aAAKzI,uBAAL,CAA6BX,KAAK,CAACA,KAAnC,EAA0C,KAAKrC,KAAL,CAAW8C,GAArD;AACA,aAAK3C,QAAL,CAAc;AAAC8C,UAAAA,WAAW,EAAC,EAAb;AAAiBC,UAAAA,gBAAgB,EAAE,IAAnC;AAAyCC,UAAAA,UAAU,EAAC,EAApD;AAAwDC,UAAAA,eAAe,EAAE;AAAzE,SAAd;AACH;AACJ;;AAED,QAAI+V,IAAI,KAAK,YAAb,EAA2B;AACvB3P,MAAAA,OAAO,CAACC,GAAR,CAAYpH,KAAK,CAACA,KAAlB;;AACA,UAAIhD,YAAY,CAACmD,OAAb,CAAqBH,KAAK,CAACA,KAA3B,CAAJ,EAAuC;AACnC,aAAKlC,QAAL,CAAc;AAAEiL,UAAAA,eAAe,EAAE,IAAnB;AAAyBD,UAAAA,UAAU,EAAE9I,KAAK,CAACA;AAA3C,SAAd;AACA,aAAKjC,IAAL,CAAU,YAAV,EAAwB,IAAxB,EAA8B,iBAA9B,EAAiD,2BAAjD;AACH,OAHD,MAGO;AACH;AACA;AACA;AACA;AACA;AACA;AAEA,aAAKkZ,iBAAL,CAAuBjX,KAAK,CAACA,KAA7B;AACA,aAAKlC,QAAL,CAAc;AAAEiL,UAAAA,eAAe,EAAE,KAAnB;AAA0BD,UAAAA,UAAU,EAAE9I,KAAK,CAACA;AAA5C,SAAd;AACA,aAAKjC,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+B,iBAA/B,EAAkD,EAAlD;;AAEA,YAAKiC,KAAK,CAACA,KAAN,IAAe,aAAf,IAAgCA,KAAK,CAACA,KAAN,IAAe,aAApD,EAAoE;AAChE,eAAK4R,qBAAL,CAA2B,aAA3B;AACH,SAFD,MAEM,IAAI5R,KAAK,CAACA,KAAN,IAAe,aAAnB,EAAkC;AACpC,eAAK4R,qBAAL,CAA2B,mBAA3B;AACH;AACJ;AACJ;;AAED,QAAIkF,IAAI,KAAK,kBAAb,EAAiC;AAE7B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAAK,CAACA,KAA3B,CAAJ,EAAuC;AACnC,aAAKlC,QAAL,CAAc;AAAEoL,UAAAA,qBAAqB,EAAE,IAAzB;AAA+BD,UAAAA,gBAAgB,EAAEjJ,KAAK,CAACA;AAAvD,SAAd;AACA,aAAKjC,IAAL,CAAU,kBAAV,EAA8B,IAA9B,EAAoC,uBAApC,EAA6D,iCAA7D;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEoL,UAAAA,qBAAqB,EAAE,KAAzB;AAAgCD,UAAAA,gBAAgB,EAAEjJ,KAAK,CAACA;AAAxD,SAAd;AACA,aAAKjC,IAAL,CAAU,kBAAV,EAA8B,KAA9B,EAAqC,uBAArC,EAA8D,EAA9D;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,UAAb,EAAyB;AAErB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAAK,CAACA,KAA3B,CAAJ,EAAuC;AACnC,aAAKlC,QAAL,CAAc;AAAEuL,UAAAA,aAAa,EAAE,IAAjB;AAAuBD,UAAAA,QAAQ,EAAEpJ,KAAK,CAACA;AAAvC,SAAd;AACA,aAAKjC,IAAL,CAAU,UAAV,EAAsB,IAAtB,EAA4B,eAA5B,EAA6C,wBAA7C;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEuL,UAAAA,aAAa,EAAE,KAAjB;AAAwBD,UAAAA,QAAQ,EAAEpJ,KAAK,CAACA;AAAxC,SAAd;AACA,aAAKjC,IAAL,CAAU,UAAV,EAAsB,KAAtB,EAA6B,eAA7B,EAA8C,EAA9C;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,kBAAb,EAAiC;AAC7B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAE0L,UAAAA,qBAAqB,EAAE,IAAzB;AAA+BF,UAAAA,gBAAgB,EAAEtJ;AAAjD,SAAd;AACA,aAAKjC,IAAL,CAAU,kBAAV,EAA8B,IAA9B,EAAoC,uBAApC,EAA6D,iCAA7D;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE0L,UAAAA,qBAAqB,EAAE,KAAzB;AAAgCF,UAAAA,gBAAgB,EAAEtJ;AAAlD,SAAd;AACA,aAAKjC,IAAL,CAAU,kBAAV,EAA8B,KAA9B,EAAqC,uBAArC,EAA8D,EAA9D;;AACA,YAAIiC,KAAK,IAAI,eAAT,IAA4BA,KAAK,IAAI,UAAzC,EAAqD;AACjD,eAAKlC,QAAL,CAAc;AAAE8L,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACA,eAAKwL,mBAAL,CAAyBpV,KAAzB;AACH,SAHD,MAIK;AACD,eAAKlC,QAAL,CAAc;AAAE8L,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACH;AACJ;AACJ;;AAED,QAAIkN,IAAI,KAAK,QAAb,EAAuB;AACnB,UAAI9W,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKwP,SAA1B,IAAuCxP,KAAK,KAAK,IAArD,EAA2D;AACvD,aAAKlC,QAAL,CAAc;AAAE4L,UAAAA,WAAW,EAAE,IAAf;AAAqBD,UAAAA,MAAM,EAAEzJ;AAA7B,SAAd;AACA,aAAKjC,IAAL,CAAU,EAAV,EAAc,IAAd,EAAoB,aAApB,EAAmC,EAAnC;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE4L,UAAAA,WAAW,EAAE,KAAf;AAAsBD,UAAAA,MAAM,EAAEzJ,KAAK,CAACA;AAApC,SAAd;AACA,aAAKjC,IAAL,CAAU,QAAV,EAAoB,KAApB,EAA2B,aAA3B,EAA0C,EAA1C;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,QAAb,EAAuB;AACnB,UAAI9W,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKwP,SAA1B,IAAuCxP,KAAK,KAAK,IAArD,EAA2D;AACvD,aAAKlC,QAAL,CAAc;AAAEiR,UAAAA,WAAW,EAAE,IAAf;AAAqBD,UAAAA,MAAM,EAAE9O;AAA7B,SAAd;AACA,aAAKjC,IAAL,CAAU,EAAV,EAAc,IAAd,EAAoB,aAApB,EAAmC,EAAnC;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEiR,UAAAA,WAAW,EAAE,KAAf;AAAsBD,UAAAA,MAAM,EAAE9O,KAAK,CAACA;AAApC,SAAd;AACA,aAAKjC,IAAL,CAAU,QAAV,EAAoB,KAApB,EAA2B,aAA3B,EAA0C,EAA1C;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,aAAb,EAA4B;AAExB,UAAI9W,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKwP,SAA1B,IAAuCxP,KAAK,KAAK,IAArD,EAA2D;AACvD,aAAKlC,QAAL,CAAc;AAAE+C,UAAAA,gBAAgB,EAAE,IAApB;AAA0BD,UAAAA,WAAW,EAAEZ,KAAvC;AAA8CiK,UAAAA,cAAc,EAAE;AAA9D,SAAd;AACA,aAAKlM,IAAL,CAAU,EAAV,EAAc,IAAd,EAAoB,kBAApB,EAAwC,4BAAxC;AACH,OAHD,MAGO;AAEH,aAAKD,QAAL,CAAc;AAAE+C,UAAAA,gBAAgB,EAAE,KAApB;AAA2BD,UAAAA,WAAW,EAAEZ,KAAK,CAACA,KAA9C;AAAqDmX,UAAAA,UAAU,EAAE,EAAjE;AAAqEpW,UAAAA,eAAe,EAAE;AAAtF,SAAd;AACA,aAAKhD,IAAL,CAAU,aAAV,EAAyB,KAAzB,EAAgC,kBAAhC,EAAoD,EAApD;AACA,aAAKuV,aAAL,CAAmBtT,KAAK,CAACA,KAAzB,EAAgC,KAAKrC,KAAL,CAAW+C,OAA3C,EAAoD,KAAK/C,KAAL,CAAW8C,GAA/D;AAEA,YAAI2W,UAAU,GAAGpX,KAAK,CAACoD,KAAvB;AACA,YAAIiU,gBAAgB,GAAGra,YAAY,CAACsa,6BAAb,CAA2CF,UAA3C,CAAvB;;AAEA,YAAI,CAACpa,YAAY,CAACmD,OAAb,CAAqB,KAAKxC,KAAL,CAAWqF,SAAhC,CAAL,EAAiD;AAC7C,cAAIK,OAAO,GAAG,IAAIC,IAAJ,GAAWC,WAAX,KAA2B,KAAK5F,KAAL,CAAWqF,SAApD;;AACA,cAAIoU,UAAU,IAAI,QAAd,IAA0BA,UAAU,IAAI,WAAxC,IAAuDA,UAAU,IAAI,qBAAzE,EAAgG;AAC5F,iBAAKtZ,QAAL,CAAc;AAAE0F,cAAAA,sBAAsB,EAAGH,OAAO,IAAI,EAAZ,GAAkB,IAAlB,GAAyB;AAAnD,aAAd;AACH,WAFD,MAEO;AACH,iBAAKvF,QAAL,CAAc;AAAE0F,cAAAA,sBAAsB,EAAE,KAA1B;AAAiC1C,cAAAA,UAAU,EAAE;AAA7C,aAAd;AACH;;AACD,eAAK/C,IAAL,CAAU,gBAAV,EAA6BsF,OAAO,IAAI,EAAZ,GAAkB,EAAlB,GAAuB,KAAnD,EAA0D,qBAA1D,EAAkFA,OAAO,IAAI,EAAZ,GAAkB,EAAlB,GAAuB,EAAxG;AACH;;AAED,aAAKvF,QAAL,CAAc;AACV8P,UAAAA,YAAY,EAAEyJ,gBAAgB,CAACE,YADrB;AAEV1J,UAAAA,aAAa,EAAEwJ,gBAAgB,CAACG,aAFtB;AAGV1J,UAAAA,WAAW,EAAEuJ,gBAAgB,CAACI;AAHpB,SAAd;;AAMA,YAAIL,UAAU,IAAI,QAAd,IAA0BA,UAAU,IAAI,eAA5C,EAA6D;AACzD,eAAKtZ,QAAL,CAAc;AACV2Q,YAAAA,iBAAiB,EAAE,CADT;AACYnK,YAAAA,UAAU,EAAE,EADxB;AAC4BE,YAAAA,YAAY,EAAE,EAD1C;AAC8CI,YAAAA,cAAc,EAAE,EAD9D;AACkE6G,YAAAA,cAAc,EAAE,EADlF;AACsFE,YAAAA,sBAAsB,EAAE,EAD9G;AAEV7G,YAAAA,eAAe,EAAE,EAFP;AAEWE,YAAAA,iBAAiB,EAAE,EAF9B;AAEkCI,YAAAA,mBAAmB,EAAE,EAFvD;AAE2DsS,YAAAA,uBAAuB,EAAE,EAFpF;AAEwFzL,YAAAA,2BAA2B,EAAE,EAFrH;AAEyH3G,YAAAA,QAAQ,EAAE,CAFnI;AAGVE,YAAAA,aAAa,EAAE,EAHL;AAGSG,YAAAA,eAAe,EAAE,EAH1B;AAIVtB,YAAAA,eAAe,EAAE,KAJP;AAIcE,YAAAA,iBAAiB,EAAE,KAJjC;AAIwCI,YAAAA,mBAAmB,EAAE,KAJ7D;AAIoE+G,YAAAA,mBAAmB,EAAE,KAJzF;AAIgGG,YAAAA,2BAA2B,EAAE,KAJ7H;AAIoIxG,YAAAA,aAAa,EAAE;AAJnJ,WAAd;AAMH,SAPD,MAOO;AACH,eAAKvH,QAAL,CAAc;AACV2Q,YAAAA,iBAAiB,EAAE,CADT;AACYnK,YAAAA,UAAU,EAAE,EADxB;AAC4BE,YAAAA,YAAY,EAAE,EAD1C;AAC8CI,YAAAA,cAAc,EAAE,EAD9D;AACkE6G,YAAAA,cAAc,EAAE,EADlF;AACsFE,YAAAA,sBAAsB,EAAE,EAD9G;AAEV7G,YAAAA,eAAe,EAAE,EAFP;AAEWE,YAAAA,iBAAiB,EAAE,EAF9B;AAEkCI,YAAAA,mBAAmB,EAAE,EAFvD;AAE2DsS,YAAAA,uBAAuB,EAAE,EAFpF;AAEwFzL,YAAAA,2BAA2B,EAAE,EAFrH;AAEyH3G,YAAAA,QAAQ,EAAE,EAFnI;AAGVE,YAAAA,aAAa,EAAE,EAHL;AAGSG,YAAAA,eAAe,EAAE,EAH1B;AAIVtB,YAAAA,eAAe,EAAE,IAJP;AAIaE,YAAAA,iBAAiB,EAAE,IAJhC;AAIsCI,YAAAA,mBAAmB,EAAE,IAJ3D;AAIiE+G,YAAAA,mBAAmB,EAAE,IAJtF;AAI4FG,YAAAA,2BAA2B,EAAE,IAJzH;AAI+HxG,YAAAA,aAAa,EAAE;AAJ9I,WAAd;AAMH;;AAED,YAAI+R,UAAU,KAAK,oBAAnB,EAAyC;AACrC,eAAKxH,iBAAL,CAAuB,uBAAvB,EAAgD,iBAAhD,EAAmE,eAAnE;AACH,SAFD,MAEO;AACH,eAAKA,iBAAL,CAAuB,aAAvB,EAAsC,iBAAtC,EAAyD,eAAzD;AACH;AACJ,OAnDuB,CAoDxB;;AACH;;AAED,QAAIkH,IAAI,KAAK,YAAb,EAA2B;AAEvB,UAAI9W,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKwP,SAA1B,IAAuCxP,KAAK,KAAK,IAArD,EAA2D;AACvD,aAAKlC,QAAL,CAAc;AAAEiD,UAAAA,eAAe,EAAE,IAAnB;AAAyBD,UAAAA,UAAU,EAAEd,KAAK,CAACA;AAA3C,SAAd;AACA,aAAKjC,IAAL,CAAU,EAAV,EAAc,IAAd,EAAoB,iBAApB,EAAuC,2BAAvC;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEiD,UAAAA,eAAe,EAAE,KAAnB;AAA0BD,UAAAA,UAAU,EAAEd,KAAK,CAACA;AAA5C,SAAd;AACA,aAAKjC,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+B,iBAA/B,EAAkD,EAAlD;AACA,aAAK2V,uBAAL,CAA6B1T,KAAK,CAACA,KAAnC;AACA,aAAK2T,aAAL,CAAmB3T,KAAK,CAACA,KAAzB;AAEA,YAAIY,WAAW,GAAG,KAAKjD,KAAL,CAAWsF,eAAX,CAA2BC,MAA3B,CAAkCrD,CAAC,IAAIA,CAAC,CAACG,KAAF,KAAY,KAAKrC,KAAL,CAAWiD,WAA9D,CAAlB;;AACA,YAAIA,WAAW,CAACP,MAAhB,EAAwB;AACpB,cAAI8C,aAAa,GAAGvC,WAAW,CAAC,CAAD,CAAX,CAAewC,KAAnC;;AAEA,cAAID,aAAa,IAAI,OAAjB,IAA4BA,aAAa,IAAI,MAAjD,EAAyD;AACrD,gBAAIiU,UAAU,GAAGpX,KAAK,CAACoD,KAAvB;AACA,gBAAIiU,gBAAgB,GAAGra,YAAY,CAACsa,6BAAb,CAA2CF,UAA3C,CAAvB;AACA,iBAAKtZ,QAAL,CAAc;AACV8P,cAAAA,YAAY,EAAEyJ,gBAAgB,CAACE,YADrB;AAEV1J,cAAAA,aAAa,EAAEwJ,gBAAgB,CAACG,aAFtB;AAGV1J,cAAAA,WAAW,EAAEuJ,gBAAgB,CAACI;AAHpB,aAAd;AAKH;AACJ;AACJ;AACJ;;AAED,QAAIX,IAAI,KAAK,aAAb,EAA4B;AAExB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEsM,UAAAA,gBAAgB,EAAE,IAApB;AAA0BD,UAAAA,WAAW,EAAEnK;AAAvC,SAAd;AACA,aAAKjC,IAAL,CAAU,aAAV,EAAyB,IAAzB,EAA+B,kBAA/B,EAAmD,6BAAnD;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEsM,UAAAA,gBAAgB,EAAE,KAApB;AAA2BD,UAAAA,WAAW,EAAEnK;AAAxC,SAAd;AACA,aAAKjC,IAAL,CAAU,aAAV,EAAyB,KAAzB,EAAgC,kBAAhC,EAAoD,EAApD;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,cAAb,EAA6B;AAEzB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEyM,UAAAA,iBAAiB,EAAE,IAArB;AAA2BD,UAAAA,YAAY,EAAEtK;AAAzC,SAAd;AACA,aAAKjC,IAAL,CAAU,cAAV,EAA0B,IAA1B,EAAgC,mBAAhC,EAAqD,6BAArD;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEyM,UAAAA,iBAAiB,EAAE,KAArB;AAA4BD,UAAAA,YAAY,EAAEtK;AAA1C,SAAd;AACA,aAAKjC,IAAL,CAAU,cAAV,EAA0B,KAA1B,EAAiC,mBAAjC,EAAsD,EAAtD;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,iBAAb,EAAgC;AAE5B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAE4M,UAAAA,oBAAoB,EAAE,IAAxB;AAA8BF,UAAAA,eAAe,EAAExK;AAA/C,SAAd;AACA,aAAKjC,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,6BAA3D;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE4M,UAAAA,oBAAoB,EAAE,KAAxB;AAA+BF,UAAAA,eAAe,EAAExK;AAAhD,SAAd;AACA,aAAKjC,IAAL,CAAU,iBAAV,EAA6B,KAA7B,EAAoC,sBAApC,EAA4D,EAA5D;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,kBAAb,EAAiC;AAE7B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAE+M,UAAAA,qBAAqB,EAAE,IAAzB;AAA+BD,UAAAA,gBAAgB,EAAE5K;AAAjD,SAAd;AACA,aAAKjC,IAAL,CAAU,kBAAV,EAA8B,IAA9B,EAAoC,uBAApC,EAA6D,kCAA7D;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE+M,UAAAA,qBAAqB,EAAE,KAAzB;AAAgCD,UAAAA,gBAAgB,EAAE5K;AAAlD,SAAd;AACA,aAAKjC,IAAL,CAAU,kBAAV,EAA8B,KAA9B,EAAqC,uBAArC,EAA8D,EAA9D;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,UAAb,EAAyB;AACrB,UAAI9W,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKwP,SAA1B,IAAuCxP,KAAK,KAAK,IAArD,EAA2D;AACvD,aAAKlC,QAAL,CAAc;AAAEkN,UAAAA,aAAa,EAAE,IAAjB;AAAuBD,UAAAA,QAAQ,EAAE/K;AAAjC,SAAd;AACA,aAAKjC,IAAL,CAAU,EAAV,EAAc,IAAd,EAAoB,eAApB,EAAqC,wCAArC;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEkN,UAAAA,aAAa,EAAE,KAAjB;AAAwBD,UAAAA,QAAQ,EAAE/K,KAAK,CAACA;AAAxC,SAAd;AACA,aAAKjC,IAAL,CAAU,UAAV,EAAsB,KAAtB,EAA6B,eAA7B,EAA8C,EAA9C;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,YAAb,EAA2B;AACvB,UAAI9W,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKwP,SAA1B,IAAuCxP,KAAK,KAAK,IAArD,EAA2D;AACvD,aAAKlC,QAAL,CAAc;AAAEqN,UAAAA,eAAe,EAAE,IAAnB;AAAyBD,UAAAA,UAAU,EAAElL,KAArC;AAA4CoL,UAAAA,eAAe,EAAE;AAA7D,SAAd;AACA,aAAKrN,IAAL,CAAU,EAAV,EAAc,IAAd,EAAoB,iBAApB,EAAuC,oCAAvC;AACH,OAHD,MAGO;AACH,aAAKkW,cAAL,CAAoBjU,KAAK,CAACA,KAA1B;AACA,aAAKlC,QAAL,CAAc;AAAEqN,UAAAA,eAAe,EAAE,KAAnB;AAA0BD,UAAAA,UAAU,EAAElL,KAAK,CAACA;AAA5C,SAAd;AACA,aAAKjC,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+B,iBAA/B,EAAkD,EAAlD;AAEH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,aAAb,EAA4B;AACxB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAAK,CAACA,KAA3B,CAAJ,EAAuC;AACnC,aAAKlC,QAAL,CAAc;AAAEwN,UAAAA,gBAAgB,EAAE,IAApB;AAA0BD,UAAAA,WAAW,EAAErL,KAAK,CAACA;AAA7C,SAAd;AACA,aAAKjC,IAAL,CAAU,aAAV,EAAyB,IAAzB,EAA+B,kBAA/B,EAAmD,2BAAnD;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEwN,UAAAA,gBAAgB,EAAE,KAApB;AAA2BD,UAAAA,WAAW,EAAErL,KAAK,CAACA;AAA9C,SAAd;AACA,aAAKjC,IAAL,CAAU,aAAV,EAAyB,KAAzB,EAAgC,kBAAhC,EAAoD,EAApD;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,eAAb,EAA8B;AAC1B,UAAI9W,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKwP,SAA1B,IAAuCxP,KAAK,KAAK,IAArD,EAA2D;AACvD,aAAKlC,QAAL,CAAc;AAAEwO,UAAAA,kBAAkB,EAAE,IAAtB;AAA4BD,UAAAA,aAAa,EAAErM;AAA3C,SAAd;AACA,aAAKjC,IAAL,CAAU,EAAV,EAAc,IAAd,EAAoB,oBAApB,EAA0C,8BAA1C;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEwO,UAAAA,kBAAkB,EAAE,KAAtB;AAA6BD,UAAAA,aAAa,EAAErM,KAAK,CAACA;AAAlD,SAAd;AACA,aAAKjC,IAAL,CAAU,eAAV,EAA2B,KAA3B,EAAkC,oBAAlC,EAAwD,EAAxD;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,gBAAb,EAA+B;AAC3B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAE4N,UAAAA,mBAAmB,EAAE,IAAvB;AAA6BD,UAAAA,cAAc,EAAEzL;AAA7C,SAAd;AACA,aAAKjC,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,4BAAzD;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE4N,UAAAA,mBAAmB,EAAE,KAAvB;AAA8BD,UAAAA,cAAc,EAAEzL;AAA9C,SAAd;AACA,aAAKjC,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAAmC,qBAAnC,EAA0D,EAA1D;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,wBAAb,EAAuC;AACnC,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAE+N,UAAAA,2BAA2B,EAAE,IAA/B;AAAqCF,UAAAA,sBAAsB,EAAE3L;AAA7D,SAAd;AACA,aAAKjC,IAAL,CAAU,wBAAV,EAAoC,IAApC,EAA0C,6BAA1C,EAAyE,4BAAzE;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE+N,UAAAA,2BAA2B,EAAE,KAA/B;AAAsCF,UAAAA,sBAAsB,EAAE3L;AAA9D,SAAd;AACA,aAAKjC,IAAL,CAAU,wBAAV,EAAoC,KAApC,EAA2C,6BAA3C,EAA0E,EAA1E;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,qBAAb,EAAoC;AAChC,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEkO,UAAAA,wBAAwB,EAAE,IAA5B;AAAkCD,UAAAA,mBAAmB,EAAE/L;AAAvD,SAAd;AACA,aAAKjC,IAAL,CAAU,qBAAV,EAAiC,IAAjC,EAAuC,0BAAvC,EAAmE,4BAAnE;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEkO,UAAAA,wBAAwB,EAAE,KAA5B;AAAmCD,UAAAA,mBAAmB,EAAE/L;AAAxD,SAAd;AACA,aAAKjC,IAAL,CAAU,qBAAV,EAAiC,KAAjC,EAAwC,0BAAxC,EAAoE,EAApE;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,6BAAb,EAA4C;AACxC,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEqO,UAAAA,gCAAgC,EAAE,IAApC;AAA0CF,UAAAA,2BAA2B,EAAEjM;AAAvE,SAAd;AACA,aAAKjC,IAAL,CAAU,6BAAV,EAAyC,IAAzC,EAA+C,kCAA/C,EAAmF,4BAAnF;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEqO,UAAAA,gCAAgC,EAAE,KAApC;AAA2CF,UAAAA,2BAA2B,EAAEjM;AAAxE,SAAd;AACA,aAAKjC,IAAL,CAAU,6BAAV,EAAyC,KAAzC,EAAgD,kCAAhD,EAAoF,EAApF;AACH;AACJ;;AAID,QAAI+Y,IAAI,KAAK,uBAAb,EAAsC;AAClC,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAED,UAAAA,0BAA0B,EAAE,IAA9B;AAAoCD,UAAAA,qBAAqB,EAAEoC;AAA3D,SAAd;AACA,aAAKjC,IAAL,CAAU,uBAAV,EAAmC,IAAnC,EAAyC,4BAAzC,EAAuE,sCAAvE;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAED,UAAAA,0BAA0B,EAAE,KAA9B;AAAqCD,UAAAA,qBAAqB,EAAEoC;AAA5D,SAAd;AACA,aAAKjC,IAAL,CAAU,uBAAV,EAAmC,KAAnC,EAA0C,4BAA1C,EAAwE,EAAxE;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,QAAb,EAAuB;AACnB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEkI,UAAAA,mBAAmB,EAAE,IAAvB;AAA6BgH,UAAAA,MAAM,EAAEhN,KAArC;AAA4CkN,UAAAA,kBAAkB,EAAE,KAAhE;AAAuED,UAAAA,WAAW,EAAE;AAApF,SAAd;AACA,aAAKlP,IAAL,CAAU,QAAV,EAAoB,IAApB,EAA0B,aAA1B,EAAyC,sBAAzC;AACH,OAHD,MAGO;AACH,YAAIiC,KAAK,IAAI,KAAb,EAAoB;AAChB,eAAKlC,QAAL,CAAc;AAAEoP,YAAAA,kBAAkB,EAAE,IAAtB;AAA4BlH,YAAAA,mBAAmB,EAAE;AAAjD,WAAd;AACH,SAFD,MAEO;AACH,eAAKlI,QAAL,CAAc;AAAEoP,YAAAA,kBAAkB,EAAE,KAAtB;AAA6BlH,YAAAA,mBAAmB,EAAE,KAAlD;AAAyDC,YAAAA,cAAc,EAAE;AAAzE,WAAd;AACH;;AACD,aAAKnI,QAAL,CAAc;AAAEkP,UAAAA,MAAM,EAAEhN,KAAV;AAAiBiN,UAAAA,WAAW,EAAE;AAA9B,SAAd;AACA,aAAKlP,IAAL,CAAU,QAAV,EAAoB,KAApB,EAA2B,aAA3B,EAA0C,EAA1C;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,WAAb,EAA0B;AACtB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEoI,UAAAA,sBAAsB,EAAE,IAA1B;AAAgCiH,UAAAA,SAAS,EAAEnN,KAA3C;AAAkDqN,UAAAA,qBAAqB,EAAE,KAAzE;AAAgFD,UAAAA,cAAc,EAAE;AAAhG,SAAd;AACA,aAAKrP,IAAL,CAAU,WAAV,EAAuB,IAAvB,EAA6B,gBAA7B,EAA+C,yBAA/C;AACH,OAHD,MAGO;AACH,YAAIiC,KAAK,IAAI,KAAb,EAAoB;AAChB,eAAKlC,QAAL,CAAc;AAAEuP,YAAAA,qBAAqB,EAAE,IAAzB;AAA+BnH,YAAAA,sBAAsB,EAAE;AAAvD,WAAd;AACH,SAFD,MAEO;AACH,eAAKpI,QAAL,CAAc;AAAEuP,YAAAA,qBAAqB,EAAE,KAAzB;AAAgCnH,YAAAA,sBAAsB,EAAE,KAAxD;AAA+DC,YAAAA,iBAAiB,EAAE;AAAlF,WAAd;AACH;;AACD,aAAKrI,QAAL,CAAc;AAAEqP,UAAAA,SAAS,EAAEnN,KAAb;AAAoBoN,UAAAA,cAAc,EAAE;AAApC,SAAd;AACA,aAAKrP,IAAL,CAAU,WAAV,EAAuB,KAAvB,EAA8B,gBAA9B,EAAgD,EAAhD;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,mBAAb,EAAkC;AAC9B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEsI,UAAAA,8BAA8B,EAAE,IAAlC;AAAwCkH,UAAAA,iBAAiB,EAAEtN,KAA3D;AAAkEwN,UAAAA,6BAA6B,EAAE,KAAjG;AAAwGD,UAAAA,sBAAsB,EAAE;AAAhI,SAAd;AACA,aAAKxP,IAAL,CAAU,mBAAV,EAA+B,IAA/B,EAAqC,wBAArC,EAA+D,oDAA/D;AACH,OAHD,MAGO;AACH,YAAIiC,KAAK,IAAI,KAAb,EAAoB;AAChB,eAAKlC,QAAL,CAAc;AAAE0P,YAAAA,6BAA6B,EAAE,IAAjC;AAAuCpH,YAAAA,8BAA8B,EAAE;AAAvE,WAAd;AACH,SAFD,MAEO;AACH,eAAKtI,QAAL,CAAc;AAAE0P,YAAAA,6BAA6B,EAAE,KAAjC;AAAwCpH,YAAAA,8BAA8B,EAAE,KAAxE;AAA+EC,YAAAA,yBAAyB,EAAE;AAA1G,WAAd;AACH;;AACD,aAAKvI,QAAL,CAAc;AAAEwP,UAAAA,iBAAiB,EAAEtN,KAArB;AAA4BuN,UAAAA,sBAAsB,EAAE;AAApD,SAAd;AACA,aAAKxP,IAAL,CAAU,mBAAV,EAA+B,KAA/B,EAAsC,wBAAtC,EAAgE,EAAhE;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,SAAb,EAAwB;AACpB,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEwI,UAAAA,oBAAoB,EAAE,IAAxB;AAA8BmH,UAAAA,OAAO,EAAEzN,KAAvC;AAA8C2N,UAAAA,mBAAmB,EAAE,KAAnE;AAA0ED,UAAAA,YAAY,EAAE;AAAxF,SAAd;AACA,aAAK3P,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,cAA3B,EAA2C,kDAA3C;AACH,OAHD,MAGO;AACH,YAAIiC,KAAK,IAAI,KAAb,EAAoB;AAChB,eAAKlC,QAAL,CAAc;AAAE6P,YAAAA,mBAAmB,EAAE,IAAvB;AAA6BrH,YAAAA,oBAAoB,EAAE;AAAnD,WAAd;AACH,SAFD,MAEO;AACH,eAAKxI,QAAL,CAAc;AAAE6P,YAAAA,mBAAmB,EAAE,KAAvB;AAA8BrH,YAAAA,oBAAoB,EAAE,KAApD;AAA2DC,YAAAA,eAAe,EAAE;AAA5E,WAAd;AACH;;AACD,aAAKzI,QAAL,CAAc;AAAE2P,UAAAA,OAAO,EAAEzN,KAAX;AAAkB0N,UAAAA,YAAY,EAAE;AAAhC,SAAd;AACA,aAAK3P,IAAL,CAAU,SAAV,EAAqB,KAArB,EAA4B,cAA5B,EAA4C,EAA5C;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,2BAAb,EAA0C;AACtC,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAE2O,UAAAA,8BAA8B,EAAE,IAAlC;AAAwCD,UAAAA,yBAAyB,EAAExM;AAAnE,SAAd;AACA,aAAKjC,IAAL,CAAU,2BAAV,EAAuC,IAAvC,EAA6C,gCAA7C,EAA+E,2CAA/E;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE2O,UAAAA,8BAA8B,EAAE,KAAlC;AAAyCD,UAAAA,yBAAyB,EAAExM;AAApE,SAAd;AACA,aAAKjC,IAAL,CAAU,2BAAV,EAAuC,KAAvC,EAA8C,gCAA9C,EAAgF,EAAhF;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,iBAAb,EAAgC;AAC5B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAE8O,UAAAA,oBAAoB,EAAE,IAAxB;AAA8BD,UAAAA,eAAe,EAAE3M;AAA/C,SAAd;AACA,aAAKjC,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,iCAA3D;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAE8O,UAAAA,oBAAoB,EAAE,KAAxB;AAA+BD,UAAAA,eAAe,EAAE3M;AAAhD,SAAd;AACA,aAAKjC,IAAL,CAAU,iBAAV,EAA6B,KAA7B,EAAoC,sBAApC,EAA4D,EAA5D;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,qBAAb,EAAoC;AAChC,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEmQ,UAAAA,wBAAwB,EAAE,IAA5B;AAAkCD,UAAAA,mBAAmB,EAAEhO;AAAvD,SAAd;AACA,aAAKjC,IAAL,CAAU,qBAAV,EAAiC,IAAjC,EAAuC,0BAAvC,EAAmE,qCAAnE;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEmQ,UAAAA,wBAAwB,EAAE,KAA5B;AAAmCD,UAAAA,mBAAmB,EAAEhO;AAAxD,SAAd;AACA,aAAKjC,IAAL,CAAU,qBAAV,EAAiC,KAAjC,EAAwC,0BAAxC,EAAoE,EAApE;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,iBAAb,EAAgC;AAC5B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEsQ,UAAAA,oBAAoB,EAAE,IAAxB;AAA8BD,UAAAA,eAAe,EAAEnO;AAA/C,SAAd;AACA,aAAKjC,IAAL,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,sBAAnC,EAA2D,iCAA3D;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEsQ,UAAAA,oBAAoB,EAAE,KAAxB;AAA+BD,UAAAA,eAAe,EAAEnO;AAAhD,SAAd;AACA,aAAKjC,IAAL,CAAU,iBAAV,EAA6B,KAA7B,EAAoC,sBAApC,EAA4D,EAA5D;AACH;AACJ;;AAED,QAAI+Y,IAAI,KAAK,eAAb,EAA8B;AAC1B,UAAI9Z,YAAY,CAACmD,OAAb,CAAqBH,KAArB,CAAJ,EAAiC;AAC7B,aAAKlC,QAAL,CAAc;AAAEyQ,UAAAA,kBAAkB,EAAE,IAAtB;AAA4BD,UAAAA,aAAa,EAAEtO;AAA3C,SAAd;AACA,aAAKjC,IAAL,CAAU,eAAV,EAA2B,IAA3B,EAAiC,oBAAjC,EAAuD,8BAAvD;AACH,OAHD,MAGO;AACH,aAAKD,QAAL,CAAc;AAAEyQ,UAAAA,kBAAkB,EAAE,KAAtB;AAA6BD,UAAAA,aAAa,EAAEtO;AAA5C,SAAd;AACA,aAAKjC,IAAL,CAAU,eAAV,EAA2B,KAA3B,EAAkC,oBAAlC,EAAwD,EAAxD;AACH;AACJ;AACJ;;AAknBD,QAAM4Z,IAAN,GAAa;AAET;AAEA;AACA;AACA;AACA;AAEA;AAEA,QAAI,KAAKha,KAAL,CAAW6F,sBAAX,IAAqCxG,YAAY,CAACmD,OAAb,CAAqB,KAAKxC,KAAL,CAAWyG,cAAhC,CAAzC,EAA0F;AACtFjH,MAAAA,KAAK,CAACgW,KAAN,CAAY,gCAAZ;AACA;AACH;;AACD,QAAG,KAAKxV,KAAL,CAAWmL,UAAX,IAAyB,aAAzB,IAA0C,KAAKnL,KAAL,CAAWmL,UAAX,IAAwB,aAAlE,IAAmF,KAAKnL,KAAL,CAAWmL,UAAX,IAAyB,aAA/G,EAA6H;AACzH,WAAKhL,QAAL,CAAc;AACViD,QAAAA,eAAe,EAAC,KADN;AAEVF,QAAAA,gBAAgB,EAAC;AAFP,OAAd;AAIA,WAAKlD,KAAL,CAAWoD,eAAX,GAA2B,KAA3B;AACA,WAAKpD,KAAL,CAAWkD,gBAAX,GAA4B,KAA5B;AACH;;AACD,QAAI,CAAC,KAAKlD,KAAL,CAAWyC,iBAAZ,IAAiC,CAAC,KAAKzC,KAAL,CAAWiL,YAA7C,IAA6D,CAAC,KAAKjL,KAAL,CAAWoL,eAAzE,IAA4F,CAAC,KAAKpL,KAAL,CAAWuL,qBAAxG,IAAiI,CAAC,KAAKvL,KAAL,CAAW0L,aAA7I,IAA8J,CAAC,KAAK1L,KAAL,CAAWqD,wBAA1K,IAAsM,CAAC,KAAKrD,KAAL,CAAW6L,qBAAlN,IAA2O,CAAC,KAAK7L,KAAL,CAAWoR,WAAvP,IAAsQ,CAAC,KAAKpR,KAAL,CAAW2D,YAAlR,IAAkS,CAAC,KAAK3D,KAAL,CAAWmE,SAA9S,IAA2T,CAAC,KAAKnE,KAAL,CAAWoE,aAAvU,IAAwV,CAAC,KAAKpE,KAAL,CAAWqE,SAApW,IAAiX,CAAC,KAAKrE,KAAL,CAAWwE,WAA7X,IAA4Y,CAAC,KAAKxE,KAAL,CAAWkD,gBAAxZ,IAA4a,CAAC,KAAKlD,KAAL,CAAWoD,eAAxb,IAA2c,CAAC,KAAKpD,KAAL,CAAWyM,gBAAvd,IAA2e,CAAC,KAAKzM,KAAL,CAAW4M,iBAAvf,IAA4gB,CAAC,KAAK5M,KAAL,CAAW4E,iBAAxhB,IAA6iB,CAAC,KAAK5E,KAAL,CAAW8E,WAAzjB,IAAwkB,CAAC,KAAK9E,KAAL,CAAW+M,oBAAplB,IAA4mB,CAAC,KAAK/M,KAAL,CAAW+E,cAAxnB,IAA0oB,CAAC,KAAK/E,KAAL,CAAWgG,kBAAtpB,IAA4qB,CAAC,KAAKhG,KAAL,CAAWkG,kBAAxrB,IAA8sB,CAAC,KAAKlG,KAAL,CAAWoG,eAA1tB,IAA6uB,CAAC,KAAKpG,KAAL,CAAWkN,qBAAzvB,IAAkxB,CAAC,KAAKlN,KAAL,CAAWqN,aAA9xB,IAA+yB,CAAC,KAAKrN,KAAL,CAAWwN,eAA3zB,IAA80B,CAAC,KAAKxN,KAAL,CAAW2N,gBAA11B,IAA82B,CAAC,KAAK3N,KAAL,CAAW0G,eAA13B,IAA64B,CAAC,KAAK1G,KAAL,CAAW4G,iBAAz5B,IAA86B,CAAC,KAAK5G,KAAL,CAAWgH,mBAA17B,IAAi9B,CAAC,KAAKhH,KAAL,CAAW+N,mBAA79B,IAAo/B,CAAC,KAAK/N,KAAL,CAAWkO,2BAAhgC,IAA+hC,CAAC,KAAKlO,KAAL,CAAW0H,aAA3iC,IAA4jC,CAAC,KAAK1H,KAAL,CAAW2O,kBAAxkC,IAA8lC,CAAC,KAAK3O,KAAL,CAAW8O,8BAA1mC,IAA4oC,CAAC,KAAK9O,KAAL,CAAWiP,oBAAxpC,IAAgrC,CAAC,KAAKjP,KAAL,CAAWsP,WAA5rC,IAA2sC,CAAC,KAAKtP,KAAL,CAAWqI,mBAAvtC,IAA8uC,CAAC,KAAKrI,KAAL,CAAWyP,cAA1vC,IAA4wC,CAAC,KAAKzP,KAAL,CAAWuI,sBAAxxC,IAAkzC,CAAC,KAAKvI,KAAL,CAAW4P,sBAA9zC,IAAw1C,CAAC,KAAK5P,KAAL,CAAWyI,8BAAp2C,IAAs4C,CAAC,KAAKzI,KAAL,CAAW+P,YAAl5C,IAAk6C,CAAC,KAAK/P,KAAL,CAAW2I,oBAA96C,IAAs8C,CAAC,KAAK3I,KAAL,CAAWsQ;AAAyB;AAA3+C,OAAwjD,KAAKtQ,KAAL,CAAW0J,kBAAvkD,EAA2lD;AACvlD,UAAIpI,IAAI,GAAG;AACP;AACAyI,QAAAA,UAAU,EAAE,KAAK/J,KAAL,CAAW+J,UAFhB;AAGP7I,QAAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWkB,MAHZ;AAIP+Y,QAAAA,cAAc,EAAE5a,YAAY,CAAC6a,cAAb,EAJT;AAKPpX,QAAAA,GAAG,EAAE,KAAK9C,KAAL,CAAW8C,GALT;AAMP;AACA6T,QAAAA,YAAY,EAAE,KAAK3W,KAAL,CAAW2C,YAPlB;AAQP6H,QAAAA,QAAQ,EAAE,KAAKxK,KAAL,CAAWwK,QARd;AASPC,QAAAA,UAAU,EAAE,KAAKzK,KAAL,CAAWyK,UAThB;AAUP0P,QAAAA,UAAU,EAAG,KAAKna,KAAL,CAAW6C,KAAX,IAAoB,IAArB,GAA6B,CAA7B,GAAiC,CAVtC;AAWPuQ,QAAAA,OAAO,EAAE,KAAKpT,KAAL,CAAW+C,OAXb;AAYPqX,QAAAA,UAAU,EAAE,KAAKpa,KAAL,CAAWmL,UAZhB;AAaPkP,QAAAA,OAAO,EAAE,KAAKra,KAAL,CAAWsL,gBAbb;AAcPgP,QAAAA,QAAQ,EAAE,KAAKta,KAAL,CAAWyL,QAdd;AAeP8O,QAAAA,aAAa,EAAG,KAAKva,KAAL,CAAWyD,mBAAX,IAAkC,EAAlC,IAAwC,KAAKzD,KAAL,CAAWyD,mBAAX,IAAkC,IAA3E,GAAmFlE,MAAM,CAAC,KAAKS,KAAL,CAAWyD,mBAAZ,CAAN,CAAuCH,MAAvC,CAA8CjE,YAAY,CAACmb,UAAb,CAAwBC,UAAtE,CAAnF,GAAuK,EAf/K;AAgBPlX,QAAAA,WAAW,EAAEhE,MAAM,CAAC,KAAKS,KAAL,CAAW0D,WAAZ,CAAN,CAA+BJ,MAA/B,CAAsCjE,YAAY,CAACmb,UAAb,CAAwBC,UAA9D,CAhBN;AAiBPvQ,QAAAA,YAAY,EAAE,KAAKlK,KAAL,CAAWkK,YAjBlB;AAkBP;AACAwQ,QAAAA,WAAW,EAAE,KAAK1a,KAAL,CAAWiD,WAnBjB;AAoBPuW,QAAAA,UAAU,EAAE,KAAKxZ,KAAL,CAAWmD,UApBhB;AAqBPwX,QAAAA,UAAU,EAAE,KAAK3a,KAAL,CAAW2E,UArBhB;AAsBPiW,QAAAA,SAAS,EAAE,KAAK5a,KAAL,CAAWwM,WAtBf;AAuBPqO,QAAAA,YAAY,EAAE,KAAK7a,KAAL,CAAW2M,YAvBlB;AAwBPmO,QAAAA,IAAI,EAAE,KAAK9a,KAAL,CAAW6E,YAxBV;AAyBPkW,QAAAA,MAAM,EAAE,KAAK/a,KAAL,CAAW0C,MAzBZ;AA0BPsY,QAAAA,SAAS,EAAE,KAAKhb,KAAL,CAAW6M,eA1Bf;AA2BPoO,QAAAA,cAAc,EAAG,KAAKjb,KAAL,CAAWyG,cAAX,KAA8B,EAA9B,IAAoC,KAAKzG,KAAL,CAAWyG,cAAX,KAA8B,IAAnE,GAA2ElH,MAAM,CAAC,KAAKS,KAAL,CAAWyG,cAAZ,CAAN,CAAkCnD,MAAlC,CAAyC,YAAzC,CAA3E,GAAoI,EA3B7I;AA4BPkD,QAAAA,aAAa,EAAG,KAAKxG,KAAL,CAAWuG,aAAX,KAA6B,EAA7B,IAAmC,KAAKvG,KAAL,CAAWuG,aAAX,KAA6B,IAAjE,GAAyEhH,MAAM,CAAC,KAAKS,KAAL,CAAWuG,aAAZ,CAAN,CAAiCjD,MAAjC,CAAwC,YAAxC,CAAzE,GAAiI,EA5BzI;AA6BP4X,QAAAA,SAAS,EAAE,KAAKlb,KAAL,CAAWqF,SA7Bf;AA8BPK,QAAAA,OAAO,EAAE,IAAIC,IAAJ,GAAWC,WAAX,KAA2B,KAAK5F,KAAL,CAAWqF,SA9BxC;AA+BP8V,QAAAA,aAAa,EAAG,KAAKnb,KAAL,CAAW+F,aAAX,KAA6B,EAA7B,IAAmC,KAAK/F,KAAL,CAAW+F,aAAX,KAA6B,IAAjE,GAAyExG,MAAM,CAAC,KAAKS,KAAL,CAAW+F,aAAZ,CAAN,CAAiCzC,MAAjC,CAAwCjE,YAAY,CAACmb,UAAb,CAAwBY,QAAhE,CAAzE,GAAqJ,EA/B7J;AAgCPC,QAAAA,aAAa,EAAE,KAAKrb,KAAL,CAAWmG,aAhCnB;AAiCPmV,QAAAA,UAAU,EAAE,KAAKtb,KAAL,CAAWqG,UAjChB;AAkCPkV,QAAAA,gBAAgB,EAAE,KAAKvb,KAAL,CAAWiN,gBAlCtB;AAmCP;AACAuO,QAAAA,UAAU,EAAE,KAAKxb,KAAL,CAAW2G,UApChB;AAqCP8U,QAAAA,YAAY,EAAE,KAAKzb,KAAL,CAAW6G,YArClB;AAsCP6U,QAAAA,cAAc,EAAE,KAAK1b,KAAL,CAAWiH,cAtCpB;AAuCP0U,QAAAA,kBAAkB,EAAE,KAAK3b,KAAL,CAAW+G,kBAvCxB;AAwCP6U,QAAAA,eAAe,EAAE,KAAK5b,KAAL,CAAW8N,cAxCrB;AAyCP+N,QAAAA,sBAAsB,EAAE,KAAK7b,KAAL,CAAWgO,sBAzC5B;AA0CP8N,QAAAA,eAAe,EAAE,KAAK9b,KAAL,CAAWmH,eA1CrB;AA2CP4U,QAAAA,iBAAiB,EAAE,KAAK/b,KAAL,CAAWqH,iBA3CvB;AA4CP2U,QAAAA,mBAAmB,EAAE,KAAKhc,KAAL,CAAWyH,mBA5CzB;AA6CPwU,QAAAA,uBAAuB,EAAE,KAAKjc,KAAL,CAAWuH,uBA7C7B;AA8CP2U,QAAAA,oBAAoB,EAAE,KAAKlc,KAAL,CAAWoO,mBA9C1B;AA+CP+N,QAAAA,2BAA2B,EAAE,KAAKnc,KAAL,CAAWsO,2BA/CjC;AAgDP8N,QAAAA,QAAQ,EAAE,KAAKpc,KAAL,CAAW2H,QAhDd;AAiDP0U,QAAAA,aAAa,EAAE,KAAKrc,KAAL,CAAW6H,aAjDnB;AAkDPyU,QAAAA,WAAW,EAAE,KAAKtc,KAAL,CAAWgI,eAlDjB;AAmDP;AACAuU,QAAAA,0BAA0B,EAAE,KAAKvc,KAAL,CAAWoN,QApDhC;AAqDPqJ,QAAAA,cAAc,EAAE,KAAKzW,KAAL,CAAW0N,WArDpB;AAsDP8O,QAAAA,aAAa,EAAE,KAAKxc,KAAL,CAAW0O,aAtDnB;AAuDP+N,QAAAA,uBAAuB,EAAE,KAAKzc,KAAL,CAAWkI,uBAvD7B;AAwDP;AACAwU,QAAAA,+BAA+B,EAAE,KAAK1c,KAAL,CAAW6O,yBAzDrC;AA0DP8N,QAAAA,cAAc,EAAE,KAAK3c,KAAL,CAAWgP,eA1DpB;AA2DP4N,QAAAA,eAAe,EAAE,KAAK5c,KAAL,CAAWmP,eA3DrB;AA4DP0N,QAAAA,oBAAoB,EAAE,KAAK7c,KAAL,CAAWoI,gBA5D1B;AA6DP9H,QAAAA,wBAAwB,EAAE,KAAKN,KAAL,CAAWM,wBA7D9B;AA8DPwc,QAAAA,0BAA0B,EAAE,KAAK9c,KAAL,CAAWM,wBAAX,CAAoCoC,MA9DzD;AA+DPqa,QAAAA,uBAAuB,EAAE,KAAK/c,KAAL,CAAWqP,MAAX,IAAqB,KAArB,GAA6B,CAA7B,GAAiC,CA/DnD;AAgEP2N,QAAAA,gCAAgC,EAAE,KAAKhd,KAAL,CAAWsI,cAhEtC;AAiEP2U,QAAAA,oBAAoB,EAAE,KAAKjd,KAAL,CAAWwP,SAAX,IAAwB,KAAxB,GAAgC,CAAhC,GAAoC,CAjEnD;AAkEP0N,QAAAA,6BAA6B,EAAE,KAAKld,KAAL,CAAWwI,iBAlEnC;AAmEP2U,QAAAA,4BAA4B,EAAE,KAAKnd,KAAL,CAAW2P,iBAAX,IAAgC,KAAhC,GAAwC,CAAxC,GAA4C,CAnEnE;AAoEPyN,QAAAA,qCAAqC,EAAE,KAAKpd,KAAL,CAAW0I,yBApE3C;AAqEP2U,QAAAA,sBAAsB,EAAE,KAAKrd,KAAL,CAAW8P,OAAX,IAAsB,KAAtB,GAA8B,CAA9B,GAAkC,CArEnD;AAsEPwN,QAAAA,+BAA+B,EAAE,KAAKtd,KAAL,CAAW4I,eAtErC;AAuEP;AACA2U,QAAAA,yBAAyB,EAAE,KAAKvd,KAAL,CAAWqQ,mBAxE/B;AAyEPmN,QAAAA,0BAA0B,EAAE,KAAKxd,KAAL,CAAW8I,oBAzEhC;AA0EP2U,QAAAA,wBAAwB,EAAE,KAAKzd,KAAL,CAAWkJ,kBA1E9B;AA2EPwU,QAAAA,wBAAwB,EAAE,KAAK1d,KAAL,CAAWuJ,kBA3E9B;AA4EPoU,QAAAA,eAAe,EAAE,KAAK3d,KAAL,CAAWwQ,eA5ErB;AA6EPoN,QAAAA,aAAa,EAAE,KAAK5d,KAAL,CAAW2Q,aA7EnB;AA8EPkN,QAAAA,oBAAoB,EAAE,KAAK7d,KAAL,CAAWkM,UA9E1B;AA+EP4R,QAAAA,oBAAoB,EAAE,KAAK9d,KAAL,CAAWuE,IA/E1B;AAgFPwZ,QAAAA,YAAY,EAAE,KAAK/d,KAAL,CAAWyE,MAhFlB;AAiFPuZ,QAAAA,kBAAkB,EAAE,KAAKhe,KAAL,CAAWkE,OAjFxB;AAkFP+Z,QAAAA,cAAc,EAAE,KAAKje,KAAL,CAAWgE,IAlFpB;AAmFPka,QAAAA,cAAc,EAAE,KAAKle,KAAL,CAAWiE,QAnFpB;AAoFP;AACAka,QAAAA,UAAU,EAAE,KAAKne,KAAL,CAAW2L,gBArFhB;AAsFPyS,QAAAA,QAAQ,EAAE,KAAKpe,KAAL,CAAW8L,MAtFd;AAuFPyI,QAAAA,QAAQ,EAAE,KAAKvU,KAAL,CAAWmR,MAvFd;AAwFP;AACA/G,QAAAA,gBAAgB,EAAE,KAAKpK,KAAL,CAAWoK,gBAzFtB;AA0FPC,QAAAA,kBAAkB,EAAE,KAAKrK,KAAL,CAAWqK;AA1FxB,OAAX;AA6FArL,MAAAA,GAAG,CAAC6T,IAAJ,CAAS,gBAAT,EAA2BvR,IAA3B,EAAiCwR,IAAjC,CAAsCC,GAAG,IAAI;AAEzC,YAAIA,GAAG,CAACC,OAAR,EAAiB;AAEb;AACAxT,UAAAA,KAAK,CAACwT,OAAN,CAAc,kCAAd;AACA,eAAKlT,KAAL,CAAWue,OAAX,CAAmBld,IAAnB,CAAwB;AACpBmd,YAAAA,QAAQ,EAAE,0BAA0BvL,GAAG,CAACzR,IAAJ,CAASid,QAAnC,GAA8C,MADpC;AAEpBve,YAAAA,KAAK,EAAE;AACH4R,cAAAA,EAAE,EAAEmB,GAAG,CAACzR,IAAJ,CAASid,QADV;AAEHC,cAAAA,GAAG,EAAE;AAFF;AAFa,WAAxB;AAOH,SAXD,MAWO,CAEN;AACJ,OAhBD,EAgBG3K,KAhBH,CAgBSC,GAAG,IAAI,CAEf,CAlBD;AAoBH,KAlHD,MAkHO;AACH,UAAI,KAAK9T,KAAL,CAAWyC,iBAAf,EAAkC;AAC9B,aAAKmU,uBAAL,CAA6B,KAAK5W,KAAL,CAAW2C,YAAxC;AACA;AACH;;AACD,UAAI,KAAK3C,KAAL,CAAWiL,YAAf,EAA6B;AACzBzL,QAAAA,KAAK,CAACgW,KAAN,CAAY,uBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWoL,eAAf,EAAgC;AAC5B5L,QAAAA,KAAK,CAACgW,KAAN,CAAY,2BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWuL,qBAAf,EAAsC;AAClC/L,QAAAA,KAAK,CAACgW,KAAN,CAAY,iCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW0L,aAAf,EAA8B;AAC1BlM,QAAAA,KAAK,CAACgW,KAAN,CAAY,wBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWqD,wBAAf,EAAyC;AACrC7D,QAAAA,KAAK,CAACgW,KAAN,CAAY,qCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW6L,qBAAf,EAAsC;AAClCrM,QAAAA,KAAK,CAACgW,KAAN,CAAY,iCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWoR,WAAf,EAA4B;AACxB5R,QAAAA,KAAK,CAACgW,KAAN,CAAY,sBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW2D,YAAf,EAA6B;AACzBnE,QAAAA,KAAK,CAACgW,KAAN,CAAY,sBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWmE,SAAf,EAA0B;AACtB3E,QAAAA,KAAK,CAACgW,KAAN,CAAY,mBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWoE,aAAf,EAA8B;AAC1B5E,QAAAA,KAAK,CAACgW,KAAN,CAAY,uBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWqE,SAAf,EAA0B;AACtB7E,QAAAA,KAAK,CAACgW,KAAN,CAAY,mBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWwE,WAAf,EAA4B;AACxBhF,QAAAA,KAAK,CAACgW,KAAN,CAAY,qBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWkD,gBAAf,EAAiC;AAC7B1D,QAAAA,KAAK,CAACgW,KAAN,CAAY,4BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWoD,eAAf,EAAgC;AAC5B5D,QAAAA,KAAK,CAACgW,KAAN,CAAY,2BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWyM,gBAAf,EAAiC;AAC7BjN,QAAAA,KAAK,CAACgW,KAAN,CAAY,6BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW4M,iBAAf,EAAkC;AAC9BpN,QAAAA,KAAK,CAACgW,KAAN,CAAY,6BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW4E,iBAAf,EAAkC;AAC9BpF,QAAAA,KAAK,CAACgW,KAAN,CAAY,6BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW8E,WAAf,EAA4B;AACxBtF,QAAAA,KAAK,CAACgW,KAAN,CAAY,qBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW+M,oBAAf,EAAqC;AACjCvN,QAAAA,KAAK,CAACgW,KAAN,CAAY,iCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW+E,cAAf,EAA+B;AAC3BvF,QAAAA,KAAK,CAACgW,KAAN,CAAY,yBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWgG,kBAAf,EAAmC;AAC/BxG,QAAAA,KAAK,CAACgW,KAAN,CAAY,6BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWkG,kBAAf,EAAmC;AAC/B1G,QAAAA,KAAK,CAACgW,KAAN,CAAY,6BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWoG,eAAf,EAAgC;AAC5B5G,QAAAA,KAAK,CAACgW,KAAN,CAAY,0BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWkN,qBAAf,EAAsC;AAClC1N,QAAAA,KAAK,CAACgW,KAAN,CAAY,kCAAZ;AACA;AACH,OApGE,CAqGH;AACA;AACA;AACA;;;AACA,UAAI,KAAKxV,KAAL,CAAWqN,aAAf,EAA8B;AAC1B7N,QAAAA,KAAK,CAACgW,KAAN,CAAY,wCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWwN,eAAf,EAAgC;AAC5BhO,QAAAA,KAAK,CAACgW,KAAN,CAAY,oCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW2N,gBAAf,EAAiC;AAC7BnO,QAAAA,KAAK,CAACgW,KAAN,CAAY,4BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW0G,eAAf,EAAgC;AAC5BlH,QAAAA,KAAK,CAACgW,KAAN,CAAY,0BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW4G,iBAAf,EAAkC;AAC9BpH,QAAAA,KAAK,CAACgW,KAAN,CAAY,6BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWgH,mBAAf,EAAoC;AAChCxH,QAAAA,KAAK,CAACgW,KAAN,CAAY,+BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW+N,mBAAf,EAAoC;AAChCvO,QAAAA,KAAK,CAACgW,KAAN,CAAY,iCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWkO,2BAAf,EAA4C;AACxC1O,QAAAA,KAAK,CAACgW,KAAN,CAAY,wCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW0H,aAAf,EAA8B;AAC1BlI,QAAAA,KAAK,CAACgW,KAAN,CAAY,wBAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW2O,kBAAf,EAAmC;AAC/BnP,QAAAA,KAAK,CAACgW,KAAN,CAAY,8BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW8O,8BAAf,EAA+C;AAC3CtP,QAAAA,KAAK,CAACgW,KAAN,CAAY,2CAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWiP,oBAAf,EAAqC;AACjCzP,QAAAA,KAAK,CAACgW,KAAN,CAAY,8BAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWsP,WAAf,EAA4B;AACxB9P,QAAAA,KAAK,CAACgW,KAAN,CAAY,4CAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWqI,mBAAf,EAAoC;AAChC7I,QAAAA,KAAK,CAACgW,KAAN,CAAY,iCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWyP,cAAf,EAA+B;AAC3BjQ,QAAAA,KAAK,CAACgW,KAAN,CAAY,oCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWuI,sBAAf,EAAuC;AACnC/I,QAAAA,KAAK,CAACgW,KAAN,CAAY,4CAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW4P,sBAAf,EAAuC;AACnCpQ,QAAAA,KAAK,CAACgW,KAAN,CAAY,6CAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWyI,8BAAf,EAA+C;AAC3CjJ,QAAAA,KAAK,CAACgW,KAAN,CAAY,yDAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW+P,YAAf,EAA6B;AACzBvQ,QAAAA,KAAK,CAACgW,KAAN,CAAY,iDAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAW2I,oBAAf,EAAqC;AACjCnJ,QAAAA,KAAK,CAACgW,KAAN,CAAY,oCAAZ;AACA;AACH;;AACD,UAAI,KAAKxV,KAAL,CAAWsQ,wBAAf,EAAyC;AACrC9Q,QAAAA,KAAK,CAACgW,KAAN,CAAY,qCAAZ;AACA;AACH,OA5LE,CA6LH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAI,CAAC,KAAKxV,KAAL,CAAW0J,kBAAhB,EAAoC;AAChClK,QAAAA,KAAK,CAACgW,KAAN,CAAY,qDAAZ;AACA;AACH,OAxME,CAyMH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AACJ;;AAEDiJ,EAAAA,gBAAgB,GAAG;AACf,SAAK3e,KAAL,CAAWue,OAAX,CAAmBld,IAAnB,CAAwB;AACpBmd,MAAAA,QAAQ,EAAE;AADU,KAAxB;AAGH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,CAAF;AAAK3U,MAAAA;AAAL,QAAc,KAAKlK,KAAzB;AACA,UAAM8e,UAAU,GAAGD,CAAC,CAAC,cAAD,CAApB;AACA,UAAME,YAAY,GAAGF,CAAC,CAAC,gBAAD,CAAtB;AACA,UAAMG,UAAU,GAAGH,CAAC,CAAC,sBAAD,CAApB;AACA,UAAMI,SAAS,GAAGJ,CAAC,CAAC,aAAD,CAAnB;AACA,UAAMK,YAAY,GAAGL,CAAC,CAAC,gBAAD,CAAtB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjC,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKlf,KAAL,CAAW+K,kBAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,cAAxB;AAAuC,MAAA,EAAE,EAAC,cAA1C;AAAyD,MAAA,QAAQ,EAAG7I,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1E;AAAgG,MAAA,MAAM,EAAGA,CAAD,IAAO,KAAK0U,uBAAL,CAA6B1U,CAAC,CAACC,MAAF,CAASE,KAAtC,CAA/G;AAA6J,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW2C,YAA/K;AAA6L,MAAA,KAAK,EAAE;AAAEwc,QAAAA,OAAO,EAAE;AAAX,OAApM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,gBAMO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKnf,KAAL,CAAW2C,YAAlB,CAPZ,eASI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKmU,gBAAL,EAApC;AAA6D,MAAA,KAAK,EAAC,sBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,CAFJ,CAFJ,CADJ,eAoBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,eAqBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK9W,KAAL,CAAW0K,aAAf,EAA8B,KAAK1K,KAAL,CAAW8K,WAAzC,eAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArD,CADJ,EAEK,KAAK9K,KAAL,CAAW4K,qBAFhB,eAEsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtC,EAGK,KAAK5K,KAAL,CAAW6K,qBAHhB,eAGsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtC,EAIK,KAAK7K,KAAL,CAAW2K,mBAJhB,CADJ,CADJ,CADJ,CArBJ,CADJ,eAmCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEyU,QAAAA,aAAa,EAAE;AAAjB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,EAAE,EAAC,SAAvC;AAAiD,MAAA,QAAQ,EAAGld,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAlB,EAA0B,SAA1B,CAAlE;AAAwG,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAW+C,OAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK/C,KAAL,CAAWgL,WAAX,CAAuBqU,GAAvB,CAA2B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACrC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,cAAP;AAAsB,MAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ,eAaI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,YAA1B;AAAuC,MAAA,EAAE,EAAC,YAA1C;AAAuD,MAAA,QAAQ,EAAGvD,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAlB,EAA0B,YAA1B,CAAxE;AAAiH,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWmL,UAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKnL,KAAL,CAAWkL,cAAX,CAA0BmU,GAA1B,CAA8B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACxC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAACvY,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCuY,IAAI,CAACtP,aAAxC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,iBAAP;AAAyB,MAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAbJ,eAyBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEM,KAAK7J,KAAL,CAAWoM,aAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,kBAA1B;AAA6C,MAAA,EAAE,EAAC,kBAAhD;AAAmE,MAAA,QAAQ,EAAGlK,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAlB,EAA0B,kBAA1B,CAApF;AAAmI,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWsL,gBAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKtL,KAAL,CAAWqL,oBAAX,CAAgCgU,GAAhC,CAAoC,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AAC9C,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,uBAAP;AAA+B,MAAA,SAAS,EAAC,wBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADH,gBAYO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKzF,KAAL,CAAWsL,gBADhB,CAdZ,CAzBJ,EA6CM,KAAKtL,KAAL,CAAW8J,QAAZ,GAAyB,IAAzB,gBAEO,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAK9J,KAAL,CAAWoM,aAAZ,gBACG,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,YAA1C;AAAuD,MAAA,KAAK,EAAE;AAAEkT,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA9D;AAAgG,MAAA,KAAK,EAAC,SAAtG;AAAgH,MAAA,OAAO,EAAE,MAAM,KAAKvK,WAAL,CAAiB,MAAjB,CAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAIO,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,cAA1C;AAAyD,MAAA,KAAK,EAAE;AAAEsK,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhE;AAAkG,MAAA,KAAK,EAAC,SAAxG;AAAkH,MAAA,OAAO,EAAE,MAAM,KAAKvK,WAAL,CAAiB,MAAjB,CAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ,CA/CZ,eAyDI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEM,KAAKhV,KAAL,CAAWqM,cAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,UAA1B;AAAqC,MAAA,EAAE,EAAC,UAAxC;AAAmD,MAAA,QAAQ,EAAGnK,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAlB,EAA0B,UAA1B,CAApE;AAA2G,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWyL,QAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKzL,KAAL,CAAWwL,YAAX,CAAwB6T,GAAxB,CAA4B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACtC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,eAAP;AAAuB,MAAA,SAAS,EAAC,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADH,gBAYO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKzF,KAAL,CAAWyL,QADhB,CAdZ,CAzDJ,eA4EI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAE+T,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAS,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,EAAE,EAAC,OAAvC;AAA+C,MAAA,KAAK,EAAE,KAAKxf,KAAL,CAAW6C,KAAjE;AAAwE,MAAA,KAAK,EAAE;AAAE4c,QAAAA,UAAU,EAAE;AAAd,OAA/E;AAAsG,MAAA,OAAO,EAAE,KAAKzf,KAAL,CAAW6C,KAAX,IAAoB,IAApB,GAA2B,SAA3B,GAAuC,EAAtJ;AAA0J,MAAA,QAAQ,EAAGX,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA3K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT,eACI;AAAI,MAAA,EAAE,EAAC,YAAP;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CA5EJ,EAiFM,KAAKlC,KAAL,CAAW8J,QAAZ,GAAyB,IAAzB,gBAEO,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAK9J,KAAL,CAAWqM,cAAZ,gBACG,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,YAA1C;AAAuD,MAAA,KAAK,EAAE;AAAEiT,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA9D;AAAgG,MAAA,KAAK,EAAC,SAAtG;AAAgH,MAAA,OAAO,EAAE,MAAM,KAAKrK,YAAL,CAAkB,MAAlB,CAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAIO,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,cAA1C;AAAyD,MAAA,KAAK,EAAE;AAAEoK,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAhE;AAAkG,MAAA,KAAK,EAAC,SAAxG;AAAkH,MAAA,OAAO,EAAE,MAAM,KAAKrK,YAAL,CAAkB,MAAlB,CAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ,CAnFZ,CADJ,CADJ,eAgGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,qBAAxB;AAA8C,MAAA,EAAE,EAAC,qBAAjD;AAAuE,MAAA,WAAW,EAAC,eAAnF;AAAmG,MAAA,MAAM,EAAGhT,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAlH;AACI,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CADrB;AAC2C,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWyD,mBAD7D;AAEI,MAAA,GAAG,EAAElE,MAAM,GAAG+D,MAAT,CAAgB,YAAhB,CAFT,CAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eASI;AAAI,MAAA,EAAE,EAAC,0BAAP;AAAkC,MAAA,SAAS,EAAC,wBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAFJ,CADJ,eAeI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQqb,CAAC,CAAC,qCAAD,CAAT,OADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,kBAA1B;AAA6C,MAAA,QAAQ,EAAE,KAAK3e,KAAL,CAAW0f,iBAAX,IAAgC,IAAhC,GAAuC,IAAvC,GAA8C,KAArG;AAA4G,MAAA,EAAE,EAAC,kBAA/G;AAAkI,MAAA,QAAQ,EAAGxd,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,kBAAhC,CAAnJ;AAAwM,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW2L,gBAA1N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBgT,CAAC,CAAC,4CAAD,CAAnB,CADJ,EAEK,KAAK3e,KAAL,CAAW4L,cAAX,CAA0ByT,GAA1B,CAA8B,CAACM,EAAD,EAAKtL,CAAL,KAAW;AACtC,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAgC,QAAA,GAAG,EAAEyT,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCsL,EAAE,CAAC9V,aAA5C,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,uBAAP;AAA+B,MAAA,SAAS,EAAC,wBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CAfJ,EA4BM,KAAK7J,KAAL,CAAWiM,aAAZ,gBACG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ0S,CAAC,CAAC,iCAAD,CAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,QAAzB;AAAkC,MAAA,OAAO,EAAE,KAAK3e,KAAL,CAAWgM,UAAtD;AAAkE,MAAA,KAAK,EAAE,KAAKhM,KAAL,CAAW8L,MAApF;AAA4F,MAAA,QAAQ,EAAGxK,IAAD,IAAU,KAAKiY,UAAL,CAAgBjY,IAAhB,EAAsB,QAAtB,CAAhH;AAAiJ,MAAA,WAAW,EAAEqd,CAAC,CAAC,wCAAD,CAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADH,GAgBK,IA5CV,eA6CI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAAEa,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAoB,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,KAA5B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAA2C,MAAA,KAAK,EAAE,KAAKxf,KAAL,CAAW8C,GAA7D;AAAkE,MAAA,KAAK,EAAE;AAAE2c,QAAAA,UAAU,EAAE;AAAd,OAAzE;AAAgG,MAAA,OAAO,EAAE,KAAKzf,KAAL,CAAW8C,GAAX,IAAkB,IAAlB,GAAyB,SAAzB,GAAqC,EAA9I;AAAkJ,MAAA,QAAQ,EAAGZ,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,eACI;AAAI,MAAA,EAAE,EAAC,UAAP;AAAkB,MAAA,SAAS,EAAC,wBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CA7CJ,CADJ,CAhGJ,CADJ,CAJJ,CADJ,EA8JM,KAAKlC,KAAL,CAAWmM,mBAAX,IAAkC,CAAnC,gBACM,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADD,eAIC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEiT,QAAAA,aAAa,EAAE;AAAjB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,QAAQ,EAAGld,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1D;AAAgF,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWuE,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,WAAP;AAAmB,MAAA,SAAS,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAMI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,EAAE,EAAC,QAApC;AAA6C,MAAA,QAAQ,EAAGrC,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA9D;AAAoF,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWyE,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CANJ,CADJ,CADJ,CADJ,CAJD,CADN,GAwBM,IAtLX,EAuLM,KAAKzE,KAAL,CAAWmL,UAAX,IAAyB,aAAzB,IAA0C,KAAKnL,KAAL,CAAWmL,UAAX,IAAyB,aAAnE,IAAoF,KAAKnL,KAAL,CAAWmL,UAAX,IAAyB,aAA9G,gBACM,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKnL,KAAL,CAAWmL,UAAX,IAAyB,aAA1B,GAAyC,cAAzC,GAAyD,KAAKnL,KAAL,CAAWmL,UAAX,IAAyB,aAA1B,GAAyC,cAAzC,GAAwD,aADrH,YADJ,CADD,eAMC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEiU,QAAAA,aAAa,EAAE;AAAjB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,EAAE,EAAC,QAAtC;AAA+C,MAAA,QAAQ,EAAGld,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAlB,EAA0B,QAA1B,CAAhE;AAAqG,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWmR,MAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKnR,KAAL,CAAWkR,UAAX,CAAsBmO,GAAtB,CAA0B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACpC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ,eAYI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,EAAE,EAAC,SAArC;AAA+C,MAAA,QAAQ,EAAGvD,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAhE;AAAsF,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWkE,OAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAZJ,eAiBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,QAAQ,EAAGhC,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1D;AAAgF,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWgE,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAjBJ,eAsBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,EAAE,EAAC,UAAtC;AAAiD,MAAA,QAAQ,EAAG9B,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAlE;AAAwF,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWiE,QAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAtBJ,eA2BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,EAAE,EAAC,OAAnC;AAA2C,MAAA,QAAQ,EAAG/B,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA5D;AAAkF,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWqR,KAApG;AAA2G,MAAA,QAAQ,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA3BJ,CADJ,CADJ,CADJ,CAND,CADN,GA8CM,IArOX,CAnCJ,EA0QM,KAAKrR,KAAL,CAAW6Q,iBAAZ,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,aAAb;AAA2B,MAAA,EAAE,EAAC,aAA9B;AAA4C,MAAA,OAAO,EAAE,KAAK7Q,KAAL,CAAWsF,eAAhE;AAAiF,MAAA,KAAK,EAAE,KAAKtF,KAAL,CAAWiD,WAAnG;AAAgH,MAAA,QAAQ,EAAG3B,IAAD,IAAU,KAAKiY,UAAL,CAAgBjY,IAAhB,EAAsB,aAAtB,CAApI;AAA0K,MAAA,WAAW,EAAC,QAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII;AAAI,MAAA,EAAE,EAAC,eAAP;AAAuB,MAAA,SAAS,EAAC,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAiBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,EAAE,EAAC,YAA7B;AAA0C,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWsM,cAA9D;AAA8E,MAAA,KAAK,EAAE,KAAKtM,KAAL,CAAWmD,UAAhG;AAA4G,MAAA,QAAQ,EAAG7B,IAAD,IAAU,KAAKiY,UAAL,CAAgBjY,IAAhB,EAAsB,YAAtB,CAAhI;AAAqK,MAAA,WAAW,EAAC,QAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII;AAAI,MAAA,EAAE,EAAC,iBAAP;AAAyB,MAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAjBJ,eAiCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,EAAE,EAAC,YAAxC;AAAqD,MAAA,QAAQ,EAAGY,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAtE;AAA4F,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW2E,UAA9G;AAA0H,MAAA,WAAW,EAAC,aAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,iBAAP;AAAyB,MAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAjCJ,eAuCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,aAA1B;AAAwC,MAAA,EAAE,EAAC,aAA3C;AAAyD,MAAA,QAAQ,EAAGzC,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,aAAhC,CAA1E;AAA0H,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWwM,WAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKxM,KAAL,CAAWuM,eAAX,CAA2B8S,GAA3B,CAA+B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACzC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9C,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC8C,IAAI,CAACtP,aAAvC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,kBAAP;AAA0B,MAAA,SAAS,EAAC,wBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAvCJ,eAmDI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,cAA1B;AAAyC,MAAA,EAAE,EAAC,cAA5C;AAA2D,MAAA,QAAQ,EAAG3H,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,cAAhC,CAA5E;AAA6H,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW2M,YAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK3M,KAAL,CAAW0M,gBAAX,CAA4B2S,GAA5B,CAAgC,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AAC1C,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAACvY,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCuY,IAAI,CAACtP,aAAxC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,mBAAP;AAA2B,MAAA,SAAS,EAAC,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAnDJ,CADJ,CADJ,eAmEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,cAAxB;AAAuC,MAAA,EAAE,EAAC,cAA1C;AAAyD,MAAA,QAAQ,EAAG3H,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1E;AAAgG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW6E,YAAlH;AAAgI,MAAA,WAAW,EAAC,cAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,mBAAP;AAA2B,MAAA,SAAS,EAAC,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAMI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,EAAE,EAAC,QAApC;AAA6C,MAAA,QAAQ,EAAG3C,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA9D;AAAoF,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW0C,MAAtG;AAA8G,MAAA,WAAW,EAAC,iBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CANJ,eAWI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,iBAA1B;AAA4C,MAAA,EAAE,EAAC,iBAA/C;AACI,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAW6M,eADtB;AACuC,MAAA,QAAQ,EAAG3K,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,iBAAhC,CADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAIK,KAAKrC,KAAL,CAAW8M,kBAAX,CAA8BuS,GAA9B,CAAkC,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AAC5C,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAACtP,aAApB;AAAmC,QAAA,GAAG,EAAEwK,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4C8E,IAAI,CAAC9C,WAAjD,CAAR;AACH,KAFA,CAJL,CAFJ,eAWI;AAAI,MAAA,EAAE,EAAC,sBAAP;AAA8B,MAAA,SAAS,EAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAXJ,eAwBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAoC,MAAA,EAAE,EAAC,WAAvC;AAAmD,MAAA,QAAQ,EAAGnU,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAApE;AAA0F,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWqF,SAA5G;AAAuH,MAAA,WAAW,EAAC,YAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,gBAAP;AAAwB,MAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAxBJ,eA6BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,eAAxB;AAAwC,MAAA,EAAE,EAAC,eAA3C;AAA2D,MAAA,QAAQ,EAAGnD,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA5E;AAAkG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW+F,aAApH;AAAmI,MAAA,WAAW,EAAC,gBAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,oBAAP;AAA4B,MAAA,SAAS,EAAC,wBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CA7BJ,eAkCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,eAAxB;AAAwC,MAAA,EAAE,EAAC,eAA3C;AAA2D,MAAA,QAAQ,EAAG7D,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA5E;AAAkG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWmG,aAApH;AAAmI,MAAA,WAAW,EAAC,gBAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,oBAAP;AAA4B,MAAA,SAAS,EAAC,wBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAlCJ,CADJ,CAnEJ,eA8GI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,EAAE,EAAC,YAAxC;AAAqD,MAAA,QAAQ,EAAGjE,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAtE;AAA4F,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWqG,UAA9G;AAA0H,MAAA,WAAW,EAAC,aAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,iBAAP;AAAyB,MAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAMI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,kBAA1B;AAA6C,MAAA,EAAE,EAAC,kBAAhD;AAAmE,MAAA,QAAQ,EAAGnE,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,kBAAhC,CAApF;AAAyI,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWiN,gBAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjN,KAAL,CAAWgN,oBAAX,CAAgCqS,GAAhC,CAAoC,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AAC9C,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9C,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC8C,IAAI,CAACtP,aAAvC,CAAR;AACH,KAFA,CADL,CAFJ,eAQI;AAAI,MAAA,EAAE,EAAC,uBAAP;AAA+B,MAAA,SAAS,EAAC,wBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CANJ,eAgBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA0B,KAAK7J,KAAL,CAAW6F,sBAAZ,GAAsC,GAAtC,GAA6C,IAAtE,CADJ,eAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,gBAAxB;AAAyC,MAAA,EAAE,EAAC,gBAA5C;AAA6D,MAAA,WAAW,EAAC,eAAzE;AAAyF,MAAA,MAAM,EAAG3D,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAxG;AACI,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CADrB;AAC2C,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWyG,cAD7D;AAEI,MAAA,GAAG,EAAElH,MAAM,GAAG4F,QAAT,CAAkB,CAAlB,EAAqB,OAArB,EAA8B7B,MAA9B,CAAqC,YAArC,CAFT;AAGI,MAAA,GAAG,EAAE/D,MAAM,GAAG+D,MAAT,CAAgB,YAAhB,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAUI;AAAI,MAAA,EAAE,EAAC,qBAAP;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAhBJ,CADJ,CA9GJ,eA8II;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,EAAE,EAAC,UAA3B;AAAsC,MAAA,OAAO,EAAE,KAAKtD,KAAL,CAAWmN,YAA1D;AAAwE,MAAA,KAAK,EAAE,KAAKnN,KAAL,CAAWoN,QAA1F;AAAoG,MAAA,QAAQ,EAAG9L,IAAD,IAAU,KAAKiY,UAAL,CAAgBjY,IAAhB,EAAsB,UAAtB,CAAxH;AAA2J,MAAA,WAAW,EAAC,QAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII;AAAI,MAAA,EAAE,EAAC,eAAP;AAAuB,MAAA,SAAS,EAAC,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,eAOI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,EAAE,EAAC,YAA7B;AAA0C,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWsN,cAA9D;AAA8E,MAAA,KAAK,EAAE,KAAKtN,KAAL,CAAWuN,UAAhG;AAA4G,MAAA,QAAQ,EAAGjM,IAAD,IAAU,KAAKiY,UAAL,CAAgBjY,IAAhB,EAAsB,YAAtB,CAAhI;AAAqK,MAAA,WAAW,EAAC,QAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII;AAAI,MAAA,EAAE,EAAC,iBAAP;AAAyB,MAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAPJ,eAaI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,aAA1B;AAAwC,MAAA,EAAE,EAAC,aAA3C;AAAyD,MAAA,QAAQ,EAAGY,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAlB,EAA0B,aAA1B,CAA1E;AAAoH,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAW0N,WAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK1N,KAAL,CAAWyN,eAAX,CAA2B4R,GAA3B,CAA+B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACzC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,kBAAP;AAA0B,MAAA,SAAS,EAAC,wBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAbJ,CADJ,CA9IJ,CADJ,CAJJ,CADH,CADJ,GAoLM,IA9bX,EAgcM,KAAKzF,KAAL,CAAW8Q,iBAAZ,gBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,EAAE,EAAC,YAAxC;AAAqD,MAAA,WAAW,EAAC,gBAAjE;AAAkF,MAAA,QAAQ,EAAG5O,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAnG;AAAyH,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW2G,UAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,iBAAP;AAAyB,MAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAOI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,cAAxB;AAAuC,MAAA,EAAE,EAAC,cAA1C;AAAyD,MAAA,QAAQ,EAAGzE,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1E;AAAgG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW6G,YAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,mBAAP;AAA2B,MAAA,SAAS,EAAC,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAPJ,eAaI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,gBAAxB;AAAyC,MAAA,EAAE,EAAC,gBAA5C;AAA6D,MAAA,QAAQ,EAAG3E,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA9E;AAAoG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWiH,cAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,qBAAP;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAbJ,eAmBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKjH,KAAL,CAAW4N,uBAAnB,CADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,oBAAxB;AAA6C,MAAA,EAAE,EAAC,oBAAhD;AACI,MAAA,QAAQ,EAAG1L,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CADrB;AAC2C,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW+G,kBAD7D,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAOI;AAAI,MAAA,EAAE,EAAC,uBAAP;AAA+B,MAAA,SAAS,EAAC,wBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDARJ,CADJ,CAnBJ,eAgCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,gBAA1B;AAA2C,MAAA,EAAE,EAAC,gBAA9C;AAA+D,MAAA,QAAQ,EAAG7E,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,gBAAhC,CAAhF;AAAmI,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW8N,cAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK9N,KAAL,CAAW6N,cAAX,CAA0BwR,GAA1B,CAA8B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACxC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9C,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC8C,IAAI,CAACtP,aAAvC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,qBAAP;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAhCJ,eA4CI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,wBAA1B;AAAmD,MAAA,EAAE,EAAC,wBAAtD;AAA+E,MAAA,QAAQ,EAAG3H,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,wBAAhC,CAAhG;AAA2J,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWgO,sBAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKhO,KAAL,CAAWiO,0BAAX,CAAsCoR,GAAtC,CAA0C,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACpD,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9C,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC8C,IAAI,CAACtP,aAAvC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,6BAAP;AAAqC,MAAA,SAAS,EAAC,wBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CA5CJ,CADJ,CADJ,eA6DI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,iBAAxB;AAA0C,MAAA,EAAE,EAAC,iBAA7C;AAA+D,MAAA,WAAW,EAAC,kBAA3E;AAA8F,MAAA,QAAQ,EAAG3H,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA/G;AAAqI,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWmH,eAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,sBAAP;AAA8B,MAAA,SAAS,EAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAOI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,mBAAxB;AAA4C,MAAA,EAAE,EAAC,mBAA/C;AAAmE,MAAA,QAAQ,EAAGjF,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAApF;AAA0G,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWqH,iBAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,wBAAP;AAAgC,MAAA,SAAS,EAAC,wBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAPJ,eAaI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,qBAAxB;AAA8C,MAAA,EAAE,EAAC,qBAAjD;AAAuE,MAAA,QAAQ,EAAGnF,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAxF;AAA8G,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWyH,mBAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,0BAAP;AAAkC,MAAA,SAAS,EAAC,wBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAbJ,eAmBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKzH,KAAL,CAAWmO,4BAAnB,CADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,yBAAxB;AAAkD,MAAA,EAAE,EAAC,yBAArD;AACI,MAAA,QAAQ,EAAGjM,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CADrB;AAC2C,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWuH,uBAD7D,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAOI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAPJ,CADJ,CAnBJ,eA+BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,qBAA1B;AAAgD,MAAA,EAAE,EAAC,qBAAnD;AAAyE,MAAA,QAAQ,EAAGrF,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,qBAAhC,CAA1F;AAAkJ,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWoO,mBAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKpO,KAAL,CAAW6N,cAAX,CAA0BwR,GAA1B,CAA8B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACxC,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,0BAAP;AAAkC,MAAA,SAAS,EAAC,wBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CA/BJ,eA2CI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,6BAA1B;AAAwD,MAAA,EAAE,EAAC,6BAA3D;AAAyF,MAAA,QAAQ,EAAGvD,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,6BAAhC,CAA1G;AAA0K,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWsO,2BAA5L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKtO,KAAL,CAAWiO,0BAAX,CAAsCoR,GAAtC,CAA0C,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACpD,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CAFJ,eASI;AAAI,MAAA,EAAE,EAAC,kCAAP;AAA0C,MAAA,SAAS,EAAC,wBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CA3CJ,CADJ,CA7DJ,eAwHI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,EAAE,EAAC,UAAtC;AAAiD,MAAA,WAAW,EAAC,WAA7D;AAAyE,MAAA,QAAQ,EAAGvD,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1F;AAAgH,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW2H,QAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,eAAP;AAAuB,MAAA,SAAS,EAAC,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAOI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,eAAxB;AAAwC,MAAA,EAAE,EAAC,eAA3C;AAA2D,MAAA,WAAW,EAAC,iBAAvE;AAAyF,MAAA,QAAQ,EAAGzF,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1G;AAAgI,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW6H,aAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,oBAAP;AAA4B,MAAA,SAAS,EAAC,wBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAPJ,eAaI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,iBAAxB;AAA0C,MAAA,EAAE,EAAC,iBAA7C;AAA+D,MAAA,WAAW,EAAC,oBAA3E;AAAgG,MAAA,QAAQ,EAAG3F,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAjH;AAAuI,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWgI,eAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,sBAAP;AAA8B,MAAA,SAAS,EAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAbJ,CADJ,CAxHJ,CADJ,CAJJ,CADH,CAFJ,GA0JM,IA1lBX,EA4lBM,KAAKhI,KAAL,CAAW+Q,qBAAZ,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,eAAb;AAA6B,MAAA,EAAE,EAAC,eAAhC;AAAgD,MAAA,OAAO,EAAE,KAAK/Q,KAAL,CAAWyO,iBAApE;AAAuF,MAAA,KAAK,EAAE,KAAKzO,KAAL,CAAW0O,aAAzG;AAAwH,MAAA,QAAQ,EAAGpN,IAAD,IAAU,KAAKiY,UAAL,CAAgBjY,IAAhB,EAAsB,eAAtB,CAA5I;AAAoL,MAAA,WAAW,EAAC,QAAhM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,oBAAP;AAA4B,MAAA,SAAS,EAAC,wBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ,CADJ,eAoBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAE4d,QAAAA,KAAK,EAAE;AAAT,OAAtB;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAkD,MAAA,UAAU,EAAE,IAA9D;AAAoE,MAAA,IAAI,EAAC,yBAAzE;AAAmG,MAAA,EAAE,EAAC,yBAAtG;AAAgI,MAAA,WAAW,EAAC,2BAA5I;AAAwK,MAAA,QAAQ,EAAGhd,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAzL;AAA+M,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWkI,uBAAjO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,8BAAP;AAAsC,MAAA,SAAS,EAAC,wBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ,CApBJ,CADJ,CAJJ,CADH,CADJ,GAwCM,IApoBX,EAsoBM,KAAKlI,KAAL,CAAWgR,kBAAZ,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAAEsO,QAAAA,KAAK,EAAE,MAAT;AAAiBM,QAAAA,WAAW,EAAE;AAA9B,OAA5B;AAAmE,MAAA,IAAI,EAAC,2BAAxE;AAAoG,MAAA,EAAE,EAAC,2BAAvG;AAAmI,MAAA,QAAQ,EAAG1d,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,2BAAhC,CAApJ;AAAkN,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW6O,yBAApO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK7O,KAAL,CAAW4O,6BAAX,CAAyCyQ,GAAzC,CAA6C,CAACM,EAAD,EAAKtL,CAAL,KAAW;AACrD,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC+e,EAAE,CAAC9V,aAApC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,gCAAP;AAAwC,MAAA,SAAS,EAAC,wBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CADJ,eAcI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAAEyV,QAAAA,KAAK,EAAE,MAAT;AAAiBM,QAAAA,WAAW,EAAE;AAA9B,OAA5B;AAAmE,MAAA,IAAI,EAAC,iBAAxE;AAA0F,MAAA,EAAE,EAAC,iBAA7F;AAA+G,MAAA,QAAQ,EAAG1d,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,iBAAhC,CAAhI;AAAoL,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWgP,eAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKhP,KAAL,CAAW+O,mBAAX,CAA+BsQ,GAA/B,CAAmC,CAACM,EAAD,EAAKtL,CAAL,KAAW;AAC3C,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC+e,EAAE,CAAC9V,aAApC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,sBAAP;AAA8B,MAAA,SAAS,EAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CAdJ,eA2BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ8U,CAAC,CAAC,qCAAD,CAAT,CADJ,eAII,oBAAC,YAAD;AAAc,MAAA,WAAW,EAAC,uBAA1B;AAAkD,MAAA,KAAK,EAAE,KAAK3e,KAAL,CAAWmP,eAApE;AAAqF,MAAA,EAAE,EAAC,iBAAxF;AAA0G,MAAA,QAAQ,EAAGjN,CAAD,IAAO,KAAK/B,QAAL,CAAc;AAAEgP,QAAAA,eAAe,EAAEjN,CAAC,CAACG;AAArB,OAAd,EACvH,KAAKiW,qBAAL,CAA2BpW,CAAC,CAACG,KAA7B,CADuH,CAA3H;AAC0C,MAAA,WAAW,EAAE,KAAKrC,KAAL,CAAWqY,0BADlE;AAC8F,MAAA,cAAc,EAAE,KAAKT,sBAAL,CAA4BiI,IAA5B,CAAiC,IAAjC,CAD9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAMI;AAAI,MAAA,EAAE,EAAC,sBAAP;AAA8B,MAAA,SAAS,EAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CA3BJ,eA+CI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,iBAA/B;AAAiD,MAAA,IAAI,EAAC,kBAAtD;AAAyE,MAAA,EAAE,EAAC,kBAA5E;AAA+F,MAAA,QAAQ,EAAG3d,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAhH;AAAsI,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWoI,gBAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAI,MAAA,EAAE,EAAC,uBAAP;AAA+B,MAAA,SAAS,EAAC,wBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CA/CJ,CADJ,CAFJ,eA4DI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQuW,CAAC,CAAC,2CAAD,CAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,uBAA1B;AAAkD,MAAA,EAAE,EAAC,uBAArD;AAA6E,MAAA,QAAQ,EAAGzc,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,uBAAhC,CAA9F;AAAwJ,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWC,qBAA1K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKD,KAAL,CAAWQ,wBAAX,CAAoC6e,GAApC,CAAwC,CAACM,EAAD,EAAKtL,CAAL,KAAW;AAChD,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC+e,EAAE,CAAC9V,aAApC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,4BAAP;AAAoC,MAAA,SAAS,EAAC,wBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAsC,MAAA,KAAK,EAAE;AAAEoV,QAAAA,SAAS,EAAE;AAAb,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjf,KAAL,CAAWM,wBAAX,CAAoC+e,GAApC,CAAwC,CAACS,GAAD,EAAMzL,CAAN,KAAY;AACjD,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMyL,GAAG,CAAC7e,wBADV,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,QAAV;AAAmB,QAAA,OAAO,EAAC,QAA3B;AAAoC,QAAA,KAAK,EAAC,QAA1C;AAAmD,QAAA,OAAO,EAAE,MAAM,KAAKU,MAAL,CAAYme,GAAZ,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAJJ,CADJ;AAcH,KAfA,CADL,CADJ,CADJ,CATJ,CAFJ,CADJ,eAoCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,KAA9B;AAAoC,MAAA,IAAI,EAAC,YAAzC;AAAsD,MAAA,KAAK,EAAC,SAA5D;AAAsE,MAAA,OAAO,EAAE,MAAM,KAAK/f,kCAAL,EAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CApCJ,CADJ,CA5DJ,eAyGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,EAAE,EAAC,QAAtC;AAA+C,MAAA,QAAQ,EAAGmC,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,QAAhC,CAAhE;AAA2G,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWqP,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKrP,KAAL,CAAW4J,OAAX,CAAmByV,GAAnB,CAAuB,CAACM,EAAD,EAAKtL,CAAL,KAAW;AAC/B,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC+e,EAAE,CAAC9V,aAApC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAqB,MAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,EAYM,KAAK7J,KAAL,CAAWuP,kBAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,GAGO,IAfZ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKvP,KAAL,CAAWuP,kBAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAE2P,QAAAA,KAAK,EAAE;AAAT,OAAtB;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAkD,MAAA,UAAU,EAAE,IAA9D;AAAoE,MAAA,IAAI,EAAC,gBAAzE;AAA0F,MAAA,EAAE,EAAC,gBAA7F;AAA8G,MAAA,QAAQ,EAAGhd,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA/H;AAAqJ,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWsI,cAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,EAAE,EAAC,qBAAP;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,GAMO,IAPZ,CAlBJ,CADJ,eAkCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,WAA1B;AAAsC,MAAA,EAAE,EAAC,WAAzC;AAAqD,MAAA,QAAQ,EAAGpG,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,WAAhC,CAAtE;AAAoH,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWwP,SAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKxP,KAAL,CAAW4J,OAAX,CAAmByV,GAAnB,CAAuB,CAACM,EAAD,EAAKtL,CAAL,KAAW;AAC/B,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC+e,EAAE,CAAC9V,aAApC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,gBAAP;AAAwB,MAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,EAaM,KAAK7J,KAAL,CAAW0P,qBAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,GAGO,IAhBZ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAK1P,KAAL,CAAW0P,qBAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEwP,QAAAA,KAAK,EAAE;AAAT,OAAtB;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAkD,MAAA,IAAI,EAAE,EAAxD;AAA4D,MAAA,UAAU,EAAE,IAAxE;AAA8E,MAAA,IAAI,EAAC,mBAAnF;AAAuG,MAAA,EAAE,EAAC,mBAA1G;AAA8H,MAAA,QAAQ,EAAGhd,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA/I;AAAqK,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWwI,iBAAvL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,EAAE,EAAC,wBAAP;AAAgC,MAAA,SAAS,EAAC,wBAA1C;AAAmE,MAAA,KAAK,EAAE;AAAE2W,QAAAA,OAAO,EAAE;AAAX,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,GAMO,IAPZ,CAlBJ,CAlCJ,CADJ,CAzGJ,eAoLI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,mBAA1B;AAA8C,MAAA,EAAE,EAAC,mBAAjD;AAAqE,MAAA,QAAQ,EAAGjd,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,mBAAhC,CAAtF;AAA4I,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW2P,iBAA9J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK3P,KAAL,CAAW4J,OAAX,CAAmByV,GAAnB,CAAuB,CAACM,EAAD,EAAKtL,CAAL,KAAW;AAC/B,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC+e,EAAE,CAAC9V,aAApC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,wBAAP;AAAgC,MAAA,SAAS,EAAC,wBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,EAYM,KAAK7J,KAAL,CAAW6P,6BAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,GAGO,IAfZ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAK7P,KAAL,CAAW6P,6BAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEqP,QAAAA,KAAK,EAAE;AAAT,OAAtB;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAkD,MAAA,IAAI,EAAE,EAAxD;AAA4D,MAAA,UAAU,EAAE,IAAxE;AAA8E,MAAA,IAAI,EAAC,2BAAnF;AAA+G,MAAA,EAAE,EAAC,2BAAlH;AAA8I,MAAA,QAAQ,EAAGhd,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA/J;AAAqL,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW0I,yBAAvM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,EAAE,EAAC,gCAAP;AAAwC,MAAA,SAAS,EAAC,wBAAlD;AAA2E,MAAA,KAAK,EAAE;AAAEyW,QAAAA,OAAO,EAAE;AAAX,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,GAMO,IAPZ,CAjBJ,CADJ,eAoCI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,EAAE,EAAC,SAAvC;AAAiD,MAAA,QAAQ,EAAGjd,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,SAAhC,CAAlE;AAA8G,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW8P,OAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK9P,KAAL,CAAW4J,OAAX,CAAmByV,GAAnB,CAAuB,CAACM,EAAD,EAAKtL,CAAL,KAAW;AAC/B,0BAAQ;AAAQ,QAAA,KAAK,EAAEsL,EAAE,CAAC/e,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC+e,EAAE,CAAC9V,aAApC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,cAAP;AAAsB,MAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,EAYM,KAAK7J,KAAL,CAAWgQ,mBAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,GAGO,IAfZ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKhQ,KAAL,CAAWgQ,mBAAZ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEkP,QAAAA,KAAK,EAAE;AAAT,OAAtB;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAkD,MAAA,IAAI,EAAE,EAAxD;AAA4D,MAAA,UAAU,EAAE,IAAxE;AAA8E,MAAA,IAAI,EAAC,iBAAnF;AAAqG,MAAA,EAAE,EAAC,iBAAxG;AAA0H,MAAA,QAAQ,EAAGhd,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA3I;AAAiK,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW4I,eAAnL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,EAAE,EAAC,sBAAP;AAA8B,MAAA,SAAS,EAAC,wBAAxC;AAAiE,MAAA,KAAK,EAAE;AAAEuW,QAAAA,OAAO,EAAE;AAAX,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,GAMO,IAPZ,CAjBJ,CApCJ,CADJ,CApLJ,CADJ,CAJJ,CADH,CADJ,GAwQM,IA94BX,EAg5BM,KAAKnf,KAAL,CAAWiR,iBAAZ,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,qBAA1B;AAAgD,MAAA,EAAE,EAAC,qBAAnD;AAAyE,MAAA,QAAQ,EAAG/O,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,qBAAhC,CAA1F;AAAkJ,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWqQ,mBAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKrQ,KAAL,CAAWoQ,uBAAX,CAAmCiP,GAAnC,CAAuC,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACjD,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAACvY,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCuY,IAAI,CAACtP,aAAxC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,0BAAP;AAAkC,MAAA,SAAS,EAAC,wBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CADJ,CADJ,CADJ,EAmBM,KAAK7J,KAAL,CAAWiQ,YAAX,IAA2B,CAA5B,gBAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,eAA5B;AAA4C,MAAA,EAAE,EAAC,eAA/C;AAA+D,MAAA,QAAQ,EAAG/N,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAhF;AAAsG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW6I,aAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAK7I,KAAL,CAAW6I,aAAX,gBACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,sBAAxB;AAA+C,MAAA,EAAE,EAAC,sBAAlD;AAAyE,MAAA,QAAQ,EAAG3G,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1F;AAAgH,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAW8I,oBAAlI;AAAwJ,MAAA,QAAQ,MAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEI,IAJT,eAKI;AAAI,MAAA,EAAE,EAAC,2BAAP;AAAmC,MAAA,SAAS,EAAC,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ,CAJJ,CADJ,CADJ,eAmBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,aAA5B;AAA0C,MAAA,EAAE,EAAC,aAA7C;AAA2D,MAAA,QAAQ,EAAG5G,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA5E;AAAkG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWiJ,WAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKjJ,KAAL,CAAWiJ,WAAX,gBACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,oBAAxB;AAA6C,MAAA,EAAE,EAAC,oBAAhD;AAAqE,MAAA,QAAQ,EAAG/G,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAtF;AAA4G,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWkJ,kBAA9H;AAAkJ,MAAA,QAAQ,MAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEI,IAJT,eAKI;AAAI,MAAA,EAAE,EAAC,yBAAP;AAAiC,MAAA,SAAS,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ,CAJJ,CADJ,CAnBJ,CAFP,GAwCQ,IA3Db,EA4DM,KAAKlJ,KAAL,CAAWkQ,aAAX,IAA4B,CAA7B,gBAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,cAA5B;AAA2C,MAAA,EAAE,EAAC,cAA9C;AAA6D,MAAA,QAAQ,EAAGhO,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA9E;AAAoG,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWqJ,YAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKrJ,KAAL,CAAWqJ,YAAX,gBACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,oBAAxB;AAA6C,MAAA,EAAE,EAAC,oBAAhD;AAAqE,MAAA,QAAQ,EAAGnH,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAtF;AAA4G,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWuJ,kBAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEI,IAJT,eAKI;AAAI,MAAA,EAAE,EAAC,yBAAP;AAAiC,MAAA,SAAS,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ,CAJJ,CADJ,CADJ,CAFP,GAsBQ,IAlFb,eAqFI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKvJ,KAAL,CAAWkQ,aAAX,IAA4B,CAA7B,gBAEO,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,iBAA1B;AAA4C,MAAA,EAAE,EAAC,iBAA/C;AAAiE,MAAA,QAAQ,EAAGhO,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,iBAAhC,CAAlF;AAAsI,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWwQ,eAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKxQ,KAAL,CAAWuQ,mBAAX,CAA+B8O,GAA/B,CAAmC,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AAC7C,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,sBAAP;AAA8B,MAAA,SAAS,EAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CAFP,GAeQ,IAhBb,EAiBM,KAAKzF,KAAL,CAAWmQ,WAAX,IAA0B,CAA3B,gBAEO,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,eAA1B;AAA0C,MAAA,EAAE,EAAC,eAA7C;AAA6D,MAAA,QAAQ,EAAGjO,CAAD,IAAO,KAAKqX,UAAL,CAAgBrX,CAAC,CAACC,MAAF,CAASE,KAAzB,EAAgC,eAAhC,CAA9E;AAAgI,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW2Q,aAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAK3Q,KAAL,CAAW0Q,iBAAX,CAA6B2O,GAA7B,CAAiC,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AAC3C,0BAAQ;AAAQ,QAAA,KAAK,EAAE8E,IAAI,CAAC9W,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B8W,IAAI,CAAC1T,KAAjC,CAAR;AACH,KAFA,CAFL,CADJ,eAQI;AAAI,MAAA,EAAE,EAAC,oBAAP;AAA4B,MAAA,SAAS,EAAC,wBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CAFP,GAeQ,IAhCb,CADJ,CArFJ,CADJ,CAJJ,CADH,CADJ,GAoIM,IAphCX,EAshCM,KAAKzF,KAAL,CAAWmK,aAAX,IAA4B,eAA7B,GAAiD,IAAjD,gBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,oBAA5B;AAAiD,MAAA,EAAE,EAAC,oBAApD;AAAyE,MAAA,QAAQ,EAAGjI,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAA1F;AAAgH,MAAA,OAAO,EAAE,KAAKlC,KAAL,CAAW0J,kBAAX,IAAiC,IAAjC,GAAwC,SAAxC,GAAoD,EAA7K;AAAiL,MAAA,KAAK,EAAE,KAAK1J,KAAL,CAAW0J,kBAAnM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsB,KAAK1J,KAAL,CAAWuK,eAAX,IAA8B,CAA9B,GAAkC,YAAlC,gBAAkD;AAAG,MAAA,OAAO,EAAE,MAAM,KAAK3I,SAAL,CAAe,YAAf,CAAlB;AAAgD,MAAA,KAAK,EAAE;AAAEme,QAAAA,kBAAkB,EAAE,WAAtB;AAAmCC,QAAAA,MAAM,EAAE;AAA3C,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAxE,+BAAoN;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKpe,SAAL,CAAe,mBAAf,CAAlB;AAAuD,MAAA,KAAK,EAAE;AAAEme,QAAAA,kBAAkB,EAAE,WAAtB;AAAmCC,QAAAA,MAAM,EAAE;AAA3C,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApN,CAFJ,EAGM,KAAKhgB,KAAL,CAAW2J,uBAAZ,gBACK;AAAG,MAAA,KAAK,EAAE;AAAEsW,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADL,GAEM,IALX,CADJ,CADH,CAvhCT,eAkiCI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAKzB,gBAAL,EAAvC;AAAgE,MAAA,KAAK,EAAEK,UAAvE;AAAmF,MAAA,IAAI,EAAC,kBAAxF;AAA2G,MAAA,KAAK,EAAE;AAAEc,QAAAA,WAAW,EAAE;AAAf,OAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGM,KAAK5f,KAAL,CAAW6C,KAAZ,gBACM,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAKmX,IAAL,EAAvC;AAAoD,MAAA,KAAK,EAAC,6BAA1D;AAAwF,MAAA,IAAI,EAAC,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,gBAEM,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAKA,IAAL,EAAvC;AAAoD,MAAA,KAAK,EAAC,oBAA1D;AAA+E,MAAA,IAAI,EAAC,aAApF;AAAkG,MAAA,QAAQ,EAAE,CAAC,KAAKha,KAAL,CAAW0J,kBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALX,CADJ,CADJ,CAliCJ,CADJ,CADJ,eAijCI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK1J,KAAL,CAAWyB,WAA1B;AAAuC,MAAA,MAAM,EAAE,MAAM,KAAKI,WAAL,CAAiB,QAAjB,CAArD;AACI,MAAA,SAAS,EAAE,cAAc,KAAK/B,KAAL,CAAWuX,SADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,MAAM,KAAKxV,WAAL,CAAiB,QAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAHJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAKR,0BAAL,CAAgC,KAAKrB,KAAL,CAAW0B,OAA3C,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiB,QAAjB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CANJ,CAjjCJ,eA4jCI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK7B,KAAL,CAAW+B,gBAA1B;AAA4C,MAAA,MAAM,EAAE,MAAM,KAAKF,WAAL,CAAiB,YAAjB,CAA1D;AACI,MAAA,SAAS,EAAE,cAAc,KAAK/B,KAAL,CAAWuX,SADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,MAAM,KAAKxV,WAAL,CAAiB,YAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK7B,KAAL,CAAWsK,aAAX,CAAyB+U,GAAzB,CAA6B,CAAClG,IAAD,EAAO9E,CAAP,KAAa;AACvC,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK8E,IAAI,CAACgH,qBAAV,CAAR;AACH,KAFA,CADL,CADJ,CAHJ,eAUI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,MAAM,KAAKte,WAAL,CAAiB,mBAAjB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAVJ,CA5jCJ,eA0kCI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK7B,KAAL,CAAWgC,uBAA1B;AAAmD,MAAA,MAAM,EAAE,MAAM,KAAKH,WAAL,CAAiB,mBAAjB,CAAjE;AACI,MAAA,SAAS,EAAE,cAAc,KAAK/B,KAAL,CAAWuX,SADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,MAAM,KAAKxV,WAAL,CAAiB,mBAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,uBAAuB,EAAE;AAAEue,QAAAA,MAAM,EAAEzB,CAAC,CAAC,qCAAD;AAAX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,MAAM,KAAK9c,WAAL,CAAiB,mBAAjB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CANJ,CA1kCJ,CADJ;AAulCH;;AAn9H6B;;AAq9HlC,eAAenC,eAAe,GAAGE,SAAH,CAA9B","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Card, CardBody, Col, Row, Input, Modal, ModalBody, ModalFooter, ModalHeader, Button as BTN } from 'reactstrap';\nimport { Button } from 'primereact/button';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Calendar } from 'primereact/calendar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig } from '../../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass NewPolicy extends Component {\n    constructor(props) {\n        super(props);\n\n        let Options = [\n            { StringMapKey: \"Yes\", StringMapName: \"Yes\" },\n            { StringMapKey: \"No\", StringMapName: \"No\" },\n        ];\n\n        this.state = {\n            //Sagar\n            //Common\n            PolicyId: '',\n            isInsert: true,\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\n            Status: 'Active',\n            PolicyStatus: 'Quotation',\n            LoginUserType: '',\n            addOnCoverageArr: [],\n            addOnCoverageCount: '',\n            assumptionArr: [],\n            assumptionCount: '',\n            //User\n            EntityId: '',\n            EntityType: '',\n            Policy_Holder: '',\n            Policy_Holder_Email: '',\n            Policy_Holder_Address: '',\n            Policy_Holder_Conatct: '',\n            ContactCode: '',\n            // Policy\n            policyNumber: '',\n            policyNumberError: false,\n            changePolicyNumber: false,\n\n            refer: false,\n            TPO: false,\n            countryList: [],\n            country: '',\n            countryError: true,\n\n            policyTypeList: [],\n            policyType: '',\n            policyTypeError: true,\n\n            documentLanguageList: [],\n            documentLanguage: '',\n            documentLanguageError: true,\n\n            currencyList: [],\n            currency: '',\n            currencyError: true,\n\n            PolicyDepartment: '',\n            departmentList: [],\n            PolicyDepartmentError: true,\n\n            source: '',\n            sourceError: false,\n            sourceList: [],\n            sourceDisplay: false,\n\n            rate: '',\n            rateError: false,\n\n            ratingType: '',\n\n            excess: '',\n            excessError: false,\n\n            isShowNonRateParams: 0,\n\n            isEditDocLang: false,\n            isEditCurrency: false,\n            // Policy\n            // -----------------------------------------------------------\n            //Vessel\n            VesselClassList: [],\n            vesselClass: '',\n            VesselClassError: true,\n\n            vesselTypeList: [],\n            vesselType: '',\n            vesselTypeError: true,\n\n            vesselName: '',\n            vesselNameError: true,\n\n            UseofVesselList: [],\n            UseofVessel: '',\n            UseofVesselError: true,\n\n            hullMaterialList: [],\n            hullMaterial: '',\n            hullMaterialError: true,\n\n            makeAndModel: '',\n            makeAndModelError: true,\n\n            length: '',\n            lengthError: true,\n\n            vesselBuildType: '',\n            vesselBuildTypearr: [],\n            vesselBuildTypeError: true,\n\n            lastSurveyDateRequired: false,\n            lastSurveyDate: '',\n            lastSurveyDateError: true,\n            surveyDueDate: '',\n\n            yearBuilt: '',\n            yearBuiltError: true,\n            YBuilt: '',\n\n            yearPurchased: '',\n            yearPurchasedError: true,\n\n            purchasePrice: '',\n            purchasePriceError: true,\n\n            sumInsured: '',\n            sumInsuredError: true,\n\n            sumInsuredMethodList: [],\n            sumInsuredMethod: '',\n            sumInsuredMethodError: true,\n\n            whereRegList: [],\n            whereReg: '',\n            whereRegError: true,\n\n            boatMooredList: [],\n            boatMoored: '',\n            boatMooredError: true,\n\n            mooringTypeList: [],\n            mooringType: '',\n            mooringTypeError: true,\n            //Vessel\n            // -----------------------------------------------------------\n            // Engine & Trailer Details\n            mainEngine: '',\n            mainEngineError: true,\n\n            mainEngineHp: '',\n            mainEngineHpError: true,\n\n            mainEngineYear: '',\n            mainEngineYearError: true,\n\n            mainengineSerialNoLabel: \"Main Engine Serial Number\",\n            mainEngineSerialNo: '',\n            mainEngineSerialNoError: true,\n\n            noOfEngineList: [],\n\n            noOfMainEngine: '',\n            noOfMainEngineError: true,\n\n            tarnsmissionMainEngine: '',\n            tarnsmissionMainEngineList: [],\n            tarnsmissionMainEngineError: true,\n\n            auxiliaryEngine: '',\n            auxiliaryEngineError: true,\n\n            auxiliaryEngineHp: '',\n            auxiliaryEngineHpError: true,\n\n            auxiliaryEngineYear: '',\n            auxiliaryEngineYearError: true,\n\n            auxiliaryEngineSerialNoLabel: \"Auxiliary Engine Serial Number\",\n            auxiliaryEngineSerialNo: '',\n            auxiliaryEngineSerialNoError: true,\n\n            noOfAuxiliaryEngine: '',\n            noOfAuxiliaryEngineError: true,\n\n            auxiliaryEngineTransmission: '',\n            auxiliaryEngineTransmissionarr: [],\n            auxiliaryEngineTransmissionError: true,\n\n            maxSpeed: '',\n            maxSpeedError: true,\n\n            makeofTrailer: '',\n            makeofTrailerError: true,\n\n            trailerSerialNo: '',\n            trailerSerialNoError: true,\n            // Engine & Trailer Details\n            // -----------------------------------------------------------\n            // Navigational Limits\n            cruisingRangeList: [],\n            cruisingRange: '',\n            cruisingRangeError: true,\n\n            additionalCruisingRange: '',\n            additionalCruisingRangeError: true,\n            // Navigational Limits\n            // -----------------------------------------------------------\n            // General Questions\n            PreviousBoatingExperienceList: [],\n            PreviousBoatingExperience: '',\n            PreviousBoatingExperienceError: true,\n\n            CurrentNCBYearsList: [],\n            CurrentNCBYears: '',\n            CurrentNCBYearsError: true,\n\n            previousInsurerList: [],\n            previousInsurer: \"\",\n            previousInsurerError: false,\n\n            previousPolicyNo: \"\",\n            previousPolicyNoError: false,\n\n            boatingQualifications: '',\n            boatingQualificationsArr: [],\n            boatingQualificationsError: true,\n            boatingQualificationList: [],\n            boatingQualificationAllList: [],\n\n            Options: Options,\n\n            losses: '',\n            lossesError: true,\n            lossesDescribe: '',\n            lossesDescribeError: true,\n            showLossesDescribe: false,\n\n            convicted: '',\n            convictedError: true,\n            convictedDescribe: '',\n            convictedDescribeError: true,\n            showconvictedDescribe: false,\n\n            insurancecanceled: '',\n            insurancecanceledError: true,\n            insurancecanceledDescribe: '',\n            insurancecanceledDescribeError: true,\n            showinsurancecanceledDescribe: false,\n\n            damaged: '',\n            damagedError: true,\n            damagedDescribe: '',\n            damagedDescribeError: true,\n            showdamagedDescribe: false,\n            // General Questions\n            // -----------------------------------------------------------\n            // Limits / Additional Cover\n            DisplayWater: 0,\n            DisplayRacing: 0,\n            DisplayCrew: 0,\n\n            ThirdPartyLiabilityList: [],\n            thirdPartyLiability: '',\n            thirdPartyLiabilityError: true,\n\n            isWaterSkiing: false,\n            waterSkiingLiability: '',\n            systemWaterSkiingLiability: '',\n\n            isWaterToys: false,\n            waterToysLiability: '',\n            systemWaterToysLiabiility: '',\n\n            isSailRacing: false,\n            sailRacingCoverage: '',\n\n            RacingEventTypeList: [],\n            racingEventType: '',\n            racingEventTypeError: true,\n\n            CrewLiabilityList: [],\n            crewLiability: '',\n            crewLiabilityError: true,\n\n            policyEffectiveDate: '',\n            renewalDate: '',\n            policyEffectiveDateError: true,\n            // Limits / Additional Cover\n            // PolicySumInsured\n            conditionalVessel: 1,\n            conditionalEngine: 1,\n            conditionalNavigation: 1,\n            conditionalGeneral: 1,\n            conditionalLimits: 1,\n\n            binderList: [],\n            binder: '',\n            binderError: true,\n\n            premium: '',\n            premiumError: true,\n\n            levy: '',\n            levyError: true,\n\n            adminFee: '',\n            adminFeeError: true,\n\n            total: '',\n            // PolicySumInsured\n            binder: '',\n            binderError: false,\n\n            premium: '',\n            premiumError: false,\n\n            levy: '',\n            levyError: false,\n\n            adminFee: '',\n            adminFeeError: false,\n            // PolicySumInsured\n            AssumptionAndTerms: false,\n            AssumptionAndTermsError: false,\n            sumInsuredMethodList: [],\n            CrewLiabilityList: [],\n            RacingEventTypeList: [],\n            ThirdPartyLiabilityList: [],\n            //Sagar\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n            this.getPolicyContactDetails(this.props.match.params.Id);\n            if (this.props.match.params.PolicyId && this.props.match.params.PolicyId !== undefined) {\n                //get policy details\n                this.setState({ PolicyId: this.props.match.params.PolicyId, isInsert: false });\n            } else {\n                this.setState({ isEditDocLang: true, isEditCurrency: true, country: '', policyType: \"Vessel\", documentLanguage: \"English\", currency: \"EUR\", policyEffectiveDate: moment().format('YYYY-MM-DD'), renewalDate: moment().add(365, 'days').format('YYYY-MM-DD'), PolicyDepartment: 'Direct', countryError: false, documentLanguageError: false, policyTypeError: false, currencyError: false, policyEffectiveDateError: false, PolicyDepartmentError: false, sumInsuredMethod: 'Market Value', sumInsuredMethodError: false });\n                setTimeout(() => {\n                    let ThirdPartyStringMapType = CommonConfig.ThirdPartyStringMapOnCountry(this.state.country);\n                    this.getDropDownValues(ThirdPartyStringMapType, 'ThirdPartyLiabilityList', 'SortOrder');\n                }, 500);\n            }\n        }\n        let userType = CommonConfig.loggedInUserData().ContactType;\n        this.setState({ LoginUserType: userType });\n        this.setState({ AssumptionAndTerms: (userType == \"InternalStaff\") ? true : false })\n        this.boatingQualificationDropdown();\n        this.getMooringZones();\n        this.getDropdown();\n        this.getWaterSkiiAndWaterToys();\n        this.getCruisingRangeList();\n        this.getBoatRegisterList();\n        this.getNextPolicyNumer();\n\n        this.getDropDownValues('PREVIOUSBOATINGEXPERIENCE', 'PreviousBoatingExperienceList', 'SortOrder');\n        this.getDropDownValues('PREVIOUSINSURER', 'previousInsurerList', 'StringMapName');\n        this.getDropDownValues('CURRENTNCBYEARS', 'CurrentNCBYearsList', 'SortOrder');\n        this.getDropDownValues('SUMINSUREDMETHOD', 'sumInsuredMethodList', 'StringMapName');\n        this.getDropDownValues('BOATINGQUALIFICATIONS', 'boatingQualificationAllList', 'StringMapName');\n        this.getDropDownValues('CREWLIABILITY', 'CrewLiabilityList', 'SortOrder');\n        this.getDropDownValues('RACINGEVENTTYPE', 'RacingEventTypeList', 'StringMapName');\n        this.getDropDownValues('NOOFENGINES', 'noOfEngineList', 'StringMapName');\n        this.getDropDownValues('TRANSMISSIONS', 'tarnsmissionMainEngineList', 'StringMapName');\n        this.getDropDownValues('POLICYCOUNTRY', 'countryList', 'StringMapName');\n        this.getDropDownValues('POLICYTYPE', 'policyTypeList', 'StringMapName');\n        this.getDropDownValues('HULLMATERIAL', 'hullMaterialList', 'StringMapName');\n        this.getDropDownValues('TYPEOFBUILD', 'vesselBuildTypearr', 'StringMapName');\n        this.getDropDownValues('POLICYDEPARTMENT', 'departmentList');\n    }\n\n    getPolicyContactDetails(id) {\n        const data = { id: id };\n        this.setState({ EntityId: id });\n        api.post('api/getContactList', data).then(res => {\n            if (res.success) {\n                console.log(\"getContactList\", res.data);\n                this.setState({\n                    Policy_Holder: res.data[0].fullname,\n                    Policy_Holder_Email: res.data[0].Email,\n                    Policy_Holder_Address: (CommonConfig.isEmpty(res.data[0].addr) ? '' : res.data[0].addr + ', ') + res.data[0].Country + ', ' + res.data[0].PostalCode,\n                    Policy_Holder_Conatct: CommonConfig.formatPhone(res.data[0].CountryCode, res.data[0].AreaCode, res.data[0].PhoneNumber),\n                    EntityType: res.data[0].EntityType, ContactCode: ' (#' + res.data[0].ContactCode + ')'\n                })\n                this.setState({vesselClass:'', VesselClassError: true, vesselType:'', vesselTypeError: true});\n                var resCountry = res.data[0].Country;\n                var newCountry = this.state.countryList.find(x => x.StringMapKey === resCountry);\n                if (newCountry) {\n    \n                    this.getVesselClassByCountry(res.data[0].Country, this.state.TPO);\n\n                    this.setState({ country: newCountry.StringMapKey })\n                    if (newCountry == \"UK\") {\n                        this.setState({ currency: \"GBP\" })\n                    } else {\n                        this.setState({ currency: \"EUR\" })\n                    }\n                } else {\n                    this.setState({ country: \"Ireland\" })\n                    this.getVesselClassByCountry(\"Ireland\", this.state.TPO);\n                }\n            } else {\n\n            }\n        }).catch(err => {\n            console.log(\"error\", err);\n        });\n    }\n\n    getWaterSkiiAndWaterToys() {\n        api.post('api/getWaterSkiiAndWaterToys').then(res => {\n            console.log(res.data);\n\n            if (res.success) {\n                this.setState({ systemWaterSkiingLiability: res.data[0].WaterSkiingLiability, systemWaterToysLiabiility: res.data[0].WaterToysLiabiility })\n            }\n        }).catch(err => {\n            console.log(\"error\", err);\n        });\n    }\n\n    getBinderByPolicyType(stringType) { debugger\n        var data = {\n            stringMapType : stringType,\n        }\n        api.post('api/getBinderByPolicyType', data).then(res => {\n            console.log('getBinderByPolicyType', res.data);\n\n            if (res.success) {\n                var formattedData = [];\n\n                for (var i = 0; i < res.data.length; i++) {\n                    formattedData.push({\n                        label: res.data[i].UMRN,\n                        value: res.data[i].BinderId,\n                    });\n                }\n                this.setState({ binderList: formattedData });\n\n            }\n        }).catch(err => {\n            console.log(\"error\", err);\n        });\n    }\n\n    getDropdown() {\n\n        var formattedLanguage = [];\n\n        // Get Language\n        try {\n            api.get(APIConstant.path.getLanguage).then(res => {\n\n                if (res.success) {\n\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedLanguage.push({\n                            label: res.data[i].Language,\n                            value: res.data[i].Language,\n                        });\n                    }\n                    this.setState({ documentLanguageList: formattedLanguage });\n                } else {\n\n                }\n            }).catch(err => {\n\n            });\n        } catch (err) {\n\n        }\n\n        var formattedCurrency = [];\n\n        // Get Currency\n        try {\n            api.get(APIConstant.path.getCurrency).then(res => {\n\n                if (res.success) {\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedCurrency.push({\n                            label: res.data[i].CurrncyCode,\n                            value: res.data[i].CurrncyCode,\n                        });\n                    }\n                    this.setState({ currencyList: formattedCurrency });\n                } else {\n\n                }\n            }).catch(err => {\n\n            });\n        } catch (err) {\n\n        }\n\n        // var formattedVesselClass = [];\n\n        // // Get Vessel Class\n        // try {\n        //     api.get(APIConstant.path.getVesselClass).then(res => {\n        //         if (res.success) {\n\n        //             for (var i = 0; i < res.data.length; i++) {\n        //                 formattedVesselClass.push({\n        //                     label: res.data[i].VesselClassName,\n        //                     value: res.data[i].VesselClassId,\n        //                 });\n        //             }\n        //             this.setState({ VesselClassList: formattedVesselClass });\n        //         } else {\n\n        //         }\n        //     }).catch(err => {\n\n        //     });\n        // } catch (err) {\n\n        // }\n    }\n\n    editDocLang(task) {\n        if (task == 'View') {\n            this.setState({ isEditDocLang: false })\n        } else {\n            this.setState({ isEditDocLang: true })\n        }\n    }\n\n    editCurrency(task) {\n        if (task == 'View') {\n            this.setState({ isEditCurrency: false })\n        } else {\n            this.setState({ isEditCurrency: true })\n        }\n    }\n\n    getDropDownValues(stringMapType, setStateName, orderBy) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: orderBy\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getVesselClassByCountry(country, TPO) {\n        try {\n            const data = {\n                Country: country,\n                TPO: (TPO)?1:0\n            };\n            console.log('getVesselClassByCountry',data);\n            api.post(APIConstant.path.getVesselClassByCountry, data).then(res => {\n                if (res.success) {\n                    var formattedData = [];\n                    console.log('getVesselClassByCountry', res);\n\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedData.push({\n                            label: res.data[i].VesselClassName,\n                            value: res.data[i].VesselClassId,\n                        });\n                    }\n\n                    this.setState({ VesselClassList: formattedData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getVesselType(id, Country, TPO) {\n        try {\n            const data = {\n                VesselClassId: id,\n                Country: Country,\n                TPO: (TPO)?1:0\n            };\n            console.log('getVesselTypeByCountry',data);\n            api.post(APIConstant.path.getVesselTypeByCountry, data).then(res => {\n                console.log('getVesselTypeByCountry',res);\n                \n                if (res.success) {\n                    var formattedData = [];\n\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedData.push({\n                            label: res.data[i].VesselTypeName,\n                            value: res.data[i].VesselTypeId,\n                        });\n                    }\n\n                    this.setState({ vesselTypeList: formattedData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    // getVesselType(id) {\n    //     try {\n    //         const data = {\n    //             VesselClassId: id\n    //         };\n    //         api.post(APIConstant.path.getVesselType, data).then(res => {\n    //             if (res.success) {\n    //                 var formattedData = [];\n\n    //                 for (var i = 0; i < res.data.length; i++) {\n    //                     formattedData.push({\n    //                         label: res.data[i].VesselTypeName,\n    //                         value: res.data[i].VesselTypeId,\n    //                     });\n    //                 }\n\n    //                 this.setState({ vesselTypeList: formattedData });\n    //             } else {\n    //             }\n    //         }).catch(err => {\n    //         });\n    //     } catch (error) {\n    //     }\n    // }\n\n    getDefaultAddonCoverage(id) {\n        try {\n            const data = {\n                VesselTypeId: id\n            };\n            api.post(APIConstant.path.getDefaultAddonCoverage, data).then(res => {\n                if (res.success) {\n\n                    this.setState({ addOnCoverageCount: res.data.length, addOnCoverageArr: res.data });\n\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getAssumption(id) {\n        try {\n            const data = {\n                VesselTypeId: id\n            };\n            api.post(APIConstant.path.getAssumption, data).then(res => {\n                if (res.success) {\n\n                    this.setState({ assumptionCount: res.data.length, assumptionArr: res.data });\n\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getMooringZones() {\n        const data = {\n            pMode: 'mooringName',\n            zone: 'Irish Website',\n            mooringName: '',\n            mooringType: '',\n            PolicyId: '',\n        };\n        api.post('api/getMooringGuideDetails', data).then(res => {\n            if (res.success) {\n                var formattedData = [];\n                for (let i = 0; i < res.data.length; i++) {\n                    formattedData.push({\n                        label: res.data[i].MooringName,\n                        value: res.data[i].MooringName,\n                        \n                    })\n                }\n                this.setState({ boatMooredList: formattedData });\n            }\n        }).catch(err => {\n\n        });\n\n        // try {\n        //     const data = {\n        //         zone: 'Irish Website',\n        //         isStringMap: 0,\n        //         PolicyId: this.state.PolicyId,\n        //         DDName: 'MooringName'\n        //     };\n        //     api.post(APIConstant.path.getcommondropdown, data).then(res => {\n        //         console.log('-p-o-p-p--o-l--p-l-k-l-l-',res);                    \n\n        //         if (res.success) {\n        //             var formattedData = [];\n        //             for (let i = 0; i < res.data.length; i++) {\n        //                 formattedData.push({\n        //                     label: res.data[i].MooringName,\n        //                     value: res.data[i].MooringName,\n                            \n        //                 })\n        //             }\n        //             this.setState({ boatMooredList: formattedData });\n        //         } else {\n        //         }\n        //     }).catch(err => {\n        //     });\n        // } catch (error) {\n        // }\n    }\n\n    getCruisingRangeList() {\n        try {\n            const data = {\n                stringmaptype: 'CRUISINGRANGE',\n                orderby: 'SortOrder'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var formattedData = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        formattedData.push({\n                            label: res.data[i].Description,\n                            value: res.data[i].StringMapKey\n                        })\n                    }\n                    this.setState({ cruisingRangeList: formattedData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getBoatRegisterList() {\n        try {\n            const data = {\n                stringmaptype: 'COUNTRY',\n                orderby: 'StringMapName'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var formattedData = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        formattedData.push({\n                            label: res.data[i].StringMapName,\n                            value: res.data[i].StringMapKey\n                        })\n                    }\n                    this.setState({ whereRegList: formattedData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getmooringType(value) {\n        let data = {\n            mooring_Type: value\n        }\n        api.post('api/getMooringTypeDataByMoored', data).then(res => {\n            if (res.success) {\n                var mooringType = [];\n\n                for (var i = 0; i < res.data.length; i++) {\n                    mooringType.push({\n                        label: res.data[i].MooringType,\n                        value: res.data[i].MooringGuideId,\n                    })\n                }\n                this.setState({ mooringTypeList: mooringType });\n            }\n        })\n    }\n\n    getNextPolicyNumer() {\n        api.post(APIConstant.path.getNextPolicyNumer).then(res => {\n            if (res.success) {\n                var tempPolicyNumber = '';\n                console.log('getNextPolicyNumer', res.data[0].PolicyNumber);\n                tempPolicyNumber = res.data[0].PolicyNumber + 1;\n                console.log('tempPolicyNumber', tempPolicyNumber);\n\n                this.setState({ policyNumber: tempPolicyNumber });\n            }\n        })\n    }\n\n    async checkPolicyNumberExists(policyNumber) {\n        this.setState({ changePolicyNumber: false });\n        let data = {\n            PolicyNumber: policyNumber\n        }\n        var returnval = await api.post(APIConstant.path.checkPolicyNumberExists, data).then(res => {\n            if (res.success) {\n                if (res.data.length != 0) {\n                    toast.error(\"Policy Number Already Exists\");\n                    this.setState({ policyNumberError: true });\n                    this.show(\"policyNumber\", true, \"policyNumberError\", \"Policy Number Already Exists\");\n                    return true;\n                } else {\n                    return false;\n                }\n\n            } else {\n                return true;\n            }\n        });\n\n        return returnval;\n    }\n\n    editPolicyNumber() {\n        console.log('this.state.changePolicyNumber', this.state.changePolicyNumber);\n\n        this.setState({ changePolicyNumber: !this.state.changePolicyNumber });\n        if (this.state.changePolicyNumber) {\n            this.checkPolicyNumberExists(this.state.policyNumber);\n        }\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control is-invalid\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    boatingQualificationDropdown() {\n        try {\n            const data = {\n                stringmaptype: \"BOATINGQUALIFICATIONS\",\n                orderby: 'StringMapName'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var listData = res.data;\n                    this.state.boatingQualificationsArr.forEach(data => {\n                        let index = listData.findIndex(x => x.StringMapKey === data.BoatingQualification);\n                        res.data.splice(index, 1);\n                    });\n                    this.setState({ boatingQualificationList: listData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    ValidateAndAddBoatingQualification = () => {\n        if (this.state.boatingQualifications === '' || this.state.boatingQualifications === null || this.state.boatingQualificationsError) {\n            this.setState({ boatingQualificationsError: true });\n            this.show('boatingQualifications', true, \"boatingQualificationsError\", \"Please select Boating Qualifications\");\n        } else {\n            let BoatingQualificationsArray = this.state.boatingQualificationsArr;\n            let BoatingQualificationsList = this.state.boatingQualificationList;\n            let index = BoatingQualificationsList.findIndex(x => x.StringMapKey === this.state.boatingQualifications);\n            let bqindex = BoatingQualificationsArray.findIndex(x => x.BoatingQualification === this.state.boatingQualifications);\n            if (bqindex == -1) {\n                var boatingQuaData = {\n                    BoatingQualification: BoatingQualificationsList[index].StringMapId,\n                    BoatingQualificationName: BoatingQualificationsList[index].StringMapKey,\n                    Status: BoatingQualificationsList[index].Status\n                }\n                BoatingQualificationsArray.push(boatingQuaData);\n            } else {\n                BoatingQualificationsArray[bqindex].Status = \"Active\";\n            }\n            BoatingQualificationsList.splice(index, 1);\n            this.setState({ boatingQualificationsArr: BoatingQualificationsArray, boatingQualificationList: BoatingQualificationsList, boatingQualifications: '' });\n        }\n    }\n\n    deleteBoatingQualification = (data) => {\n\n        let BoatingQualificationsArray = this.state.boatingQualificationsArr;\n        let BoatingQualificationsList = this.state.boatingQualificationList;\n        let boatingQualificationAllList = this.state.boatingQualificationAllList;\n\n        if (data.PolicyId) {\n            let index = BoatingQualificationsArray.findIndex(x => x.BoatingQualification === data.BoatingQualification);\n            BoatingQualificationsArray[index].Status = \"Inactive\";\n        } else {\n            let index = BoatingQualificationsArray.findIndex(x => x.BoatingQualification === data.BoatingQualification);\n            BoatingQualificationsArray.splice(index, 1);\n        }\n        let bqindex = boatingQualificationAllList.findIndex(x => x.StringMapId === data.BoatingQualification);\n        BoatingQualificationsList.push(boatingQualificationAllList[bqindex]);\n        this.setState({ boatingQualificationsArr: BoatingQualificationsArray, boatingQualificationList: BoatingQualificationsList, toggleModal: false, temData: '' });\n    }\n\n    openModal(modal) {\n        if (modal == 'Delete') {\n            this.setState({ toggleModal: !this.state.toggleModal });\n        } else if (modal == 'Assumption') {\n            this.setState({ toggleAssumption: !this.state.toggleAssumption });\n        } else if (modal == 'TermsAndCondition') {\n            this.setState({ toggleTermsAndCondition: !this.state.toggleTermsAndCondition });\n        }\n    }\n\n    delete = (data) => {\n        this.setState({ temData: data });\n        this.openModal('Delete');\n    }\n\n    toggleLarge = (modal) => {\n        if (modal == 'Delete') {\n            this.setState({ toggleModal: false, temData: '' });\n        } else if (modal == 'Assumption') {\n            this.setState({ toggleAssumption: false });\n        } else if (modal == 'TermsAndCondition') {\n            this.setState({ toggleTermsAndCondition: false });\n        }\n    }\n\n    getOrganazationData(ContactType) {\n        try {\n            let data = { ContactType: ContactType };\n            api.post('api/getOrganazationData', data).then(res => {\n                if (res.success) {\n                    var formattedData = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        formattedData.push({\n                            label: res.data[i].OrganizationName,\n                            value: res.data[i].OrganizationId,\n                        })\n                    }\n                    this.setState({ sourceList: formattedData });\n                } else {\n                    console.log('getOrganazationData_error');\n                }\n            }).catch(err => {\n                console.log('getOrganazationData', err);\n            });\n        } catch (error) {\n            console.log('getOrganazationData', error);\n        }\n    }\n\n    suggestPreviousInsurer(event) {\n        console.log('this.state.previousInsurerList', this.state.previousInsurerList);\n\n        let results = this.state.previousInsurerList.filter((previousInsurerData) => {\n            var previousInsurerName = previousInsurerData.StringMapName;\n            return previousInsurerName.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n        console.log('this.state.previousInsurerList', results);\n        var previousInsurerResult = [];\n        results.forEach(res => {\n            previousInsurerResult.push(res.StringMapName);\n        });\n        this.setState({ previousInsurerSuggestions: previousInsurerResult });\n    }\n\n    changePreviousInsurer(value) {\n        console.log(\"changePreviousInsurer >\", value);\n        if (CommonConfig.isEmpty(value)) {\n            this.setState({ previousInsurerError: true, previousInsurer: value });\n            this.show('previousInsurer', true, 'previousInsurerError', 'Please select previous insurer');\n        } else {\n            this.setState({ previousInsurerError: false, previousInsurer: value });\n            this.show('previousInsurer', false, 'previousInsurerError', '');\n            let results = this.state.previousInsurerList.filter((previousInsurerData) => {\n                var previousInsurerName = previousInsurerData.StringMapName;\n                return previousInsurerName == value;\n            });\n            // if (results.length > 0) {\n            //     this.setState({ insuranceComapny: results[0].InsuranceCompanyName, gross: results[0].GrossCommission, subBinders: results[0].subBinderData, adminFees: results[0].adminFees, totalgross: totalgross, balance: balance, balanceTotal: balanceTotal })\n            // }\n        }\n    }\n\n    calculateTotal(premium, levy, adminFee) {\n        var totalDue = '';\n        var Premium = CommonConfig.isEmpty(premium) ? 0 : premium;\n        var Levy = CommonConfig.isEmpty(levy) ? 0 : levy;\n        var AdminFee = CommonConfig.isEmpty(adminFee) ? 0 : adminFee;\n        totalDue = Number(Premium) + Number(Levy) + Number(AdminFee);\n        this.setState({ total: totalDue });\n    }\n\n    getVesselClassIdFromName(vesselClassName) {\n        try {\n            const data = {\n                class: vesselClassName\n            };\n            console.log('getVesselClassIdFromName1',data);    \n            api.post(APIConstant.path.getVesselClassIdFromName, data).then(res => {\n                if (res.success) {\n                    console.log('getVesselClassIdFromName2',res);\n                    var vesselClassId = res.data[0].VesselClassId;\n                    var vesselTypeName = CommonConfig.getFixedVesselTypeFromVesselClassName(vesselClassName);\n                    const data = {\n                        classId: vesselClassId,\n                        type: vesselTypeName,\n                    };\n                    console.log('getVesselClassIdFromName3',data);\n                    api.post(APIConstant.path.getVesselTypeIdFromNameandClassId, data).then(result => {\n                        console.log('getVesselClassIdFromName4',result);                   \n                        if (result.success) {\n                            this.setState({ vesselClass: vesselClassId, vesselType: result.data[0].VesselTypeId });\n                        } else {\n\n                        }\n                    }).catch(err => {\n\n                    });\n                } else {\n\n                }\n            }).catch(err => {\n\n            });\n        } catch (error) {\n            console.log(\"err\", error);\n        }\n    }\n\n    conditionalFields(policyType) {\n        console.log('policyType out',policyType);\n        if (policyType == 'MarineTrade' || policyType == 'MultiVessel' || policyType == 'Engineering') {\n            console.log('policyType in',policyType);\n            this.setState({\n                rate: '',\n                rateError: false,\n\n                ratingType: '',\n\n                excess: '',\n                excessError: false,\n\n                vesselClass: '',\n                VesselClassError: false,\n\n                vesselType: '',\n                vesselTypeError: false,\n\n                vesselName: '',\n                vesselNameError: false,\n\n                UseofVessel: '',\n                UseofVesselError: false,\n\n                hullMaterial: '',\n                hullMaterialError: false,\n\n                makeAndModel: '',\n                makeAndModelError: false,\n\n                length: '',\n                lengthError: false,\n\n                vesselBuildType: '',\n\n                vesselBuildTypeError: false,\n\n                lastSurveyDateRequired: false,\n                lastSurveyDate: '',\n                lastSurveyDateError: false,\n                surveyDueDate: '',\n\n                yearBuilt: '',\n                yearBuiltError: false,\n                YBuilt: '',\n\n                yearPurchased: '',\n                yearPurchasedError: false,\n\n                purchasePrice: 0,\n                purchasePriceError: false,\n\n                sumInsured: 0,\n                sumInsuredError: false,\n\n                sumInsuredMethod: '',\n                sumInsuredMethodError: false,\n\n                whereReg: '',\n                whereRegError: false,\n\n                boatMoored: '',\n                boatMooredError: false,\n\n                mooringType: '',\n                mooringTypeError: false,\n                //Vessel\n                // -----------------------------------------------------------\n                // Engine & Trailer Details\n                mainEngine: '',\n                mainEngineError: false,\n\n                mainEngineHp: '',\n                mainEngineHpError: false,\n\n                mainEngineYear: '',\n                mainEngineYearError: false,\n\n                mainEngineSerialNo: '',\n                mainEngineSerialNoError: false,\n\n                noOfMainEngine: '',\n                noOfMainEngineError: false,\n\n                tarnsmissionMainEngine: '',\n\n                tarnsmissionMainEngineError: false,\n\n                auxiliaryEngine: '',\n                auxiliaryEngineError: false,\n\n                auxiliaryEngineHp: '',\n                auxiliaryEngineHpError: false,\n\n                auxiliaryEngineYear: '',\n                auxiliaryEngineYearError: false,\n\n                auxiliaryEngineSerialNo: '',\n                auxiliaryEngineSerialNoError: false,\n\n                noOfAuxiliaryEngine: '',\n                noOfAuxiliaryEngineError: false,\n\n                auxiliaryEngineTransmission: '',\n\n                auxiliaryEngineTransmissionError: false,\n\n                maxSpeed: 0,\n                maxSpeedError: false,\n\n                makeofTrailer: '',\n                makeofTrailerError: false,\n\n                trailerSerialNo: '',\n                trailerSerialNoError: false,\n                // Engine & Trailer Details\n                // -----------------------------------------------------------\n                // Navigational Limits\n\n                cruisingRange: '',\n                cruisingRangeError: false,\n\n                additionalCruisingRange: '',\n                additionalCruisingRangeError: false,\n                // Navigational Limits\n                // -----------------------------------------------------------\n                // General Questions\n                PreviousBoatingExperience: '',\n                PreviousBoatingExperienceError: false,\n\n                CurrentNCBYears: 0,\n                CurrentNCBYearsError: false,\n\n                previousInsurer: \"\",\n                previousInsurerError: false,\n\n                previousPolicyNo: \"\",\n                previousPolicyNoError: false,\n\n                boatingQualifications: '',\n\n                boatingQualificationsError: false,\n\n                losses: '',\n                lossesError: false,\n                lossesDescribe: '',\n                lossesDescribeError: false,\n                showLossesDescribe: false,\n\n                convicted: '',\n                convictedError: false,\n                convictedDescribe: '',\n                convictedDescribeError: false,\n                showconvictedDescribe: false,\n\n                insurancecanceled: '',\n                insurancecanceledError: false,\n                insurancecanceledDescribe: '',\n                insurancecanceledDescribeError: false,\n                showinsurancecanceledDescribe: false,\n\n                damaged: '',\n                damagedError: false,\n                damagedDescribe: '',\n                damagedDescribeError: false,\n                showdamagedDescribe: false,\n                // General Questions\n                // -----------------------------------------------------------\n                // Limits / Additional Cover            \n                thirdPartyLiability: '',\n                thirdPartyLiabilityError: false,\n\n                isWaterSkiing: false,\n                waterSkiingLiability: '',\n                systemWaterSkiingLiability: '',\n\n                isWaterToys: false,\n                waterToysLiability: '',\n                systemWaterToysLiabiility: '',\n\n                isSailRacing: false,\n                sailRacingCoverage: '',\n\n                racingEventType: '',\n                racingEventTypeError: false,\n\n                crewLiability: '',\n                crewLiabilityError: false,\n                // PolicySumInsured\n                binder: '',\n                binderError: true,\n\n                premium: '',\n                premiumError: true,\n\n                levy: '',\n                levyError: true,\n\n                adminFee: '',\n                adminFeeError: true,\n                // PolicySumInsured\n                conditionalVessel: 0,\n                conditionalEngine: 0,\n                conditionalNavigation: 0,\n                conditionalGeneral: 0,\n                conditionalLimits: 0,\n                isShowNonRateParams: 0,\n            });\n            if (policyType == 'MarineTrade'){\n                this.getVesselClassIdFromName('MarineTradeVessel');\n            }\n            if (policyType == 'MultiVessel') {\n                this.getVesselClassIdFromName('MultiVessel');\n            }\n            if (policyType == 'Engineering') {\n                this.getVesselClassIdFromName('Engineering Vessel');\n            }\n        } else if (policyType == 'VesselNonrated') {\n            this.setState({\n                excessError: true,\n                rateError: true,\n                ratingType: 'Rating',\n                conditionalVessel: 1,\n                conditionalEngine: 1,\n                conditionalNavigation: 1,\n                conditionalGeneral: 1,\n                conditionalLimits: 1,\n                isShowNonRateParams: 1,\n            })\n        } else {\n            this.setState({\n                rate: '',\n                rateError: false,\n\n                ratingType: '',\n\n                excess: '',\n                excessError: false,\n\n                vesselClass: '',\n                VesselClassError: true,\n\n                vesselType: '',\n                vesselTypeError: true,\n\n                vesselName: '',\n                vesselNameError: true,\n\n                UseofVessel: '',\n                UseofVesselError: true,\n\n                hullMaterial: '',\n                hullMaterialError: true,\n\n                makeAndModel: '',\n                makeAndModelError: true,\n\n                length: '',\n                lengthError: true,\n\n                vesselBuildType: '',\n\n                vesselBuildTypeError: true,\n\n                lastSurveyDateRequired: false,\n                lastSurveyDate: '',\n                lastSurveyDateError: true,\n                surveyDueDate: '',\n\n                yearBuilt: '',\n                yearBuiltError: true,\n                YBuilt: '',\n\n                yearPurchased: '',\n                yearPurchasedError: true,\n\n                purchasePrice: '',\n                purchasePriceError: true,\n\n                sumInsured: '',\n                sumInsuredError: true,\n\n\n                sumInsuredMethod: 'Market Value',\n                // sumInsuredMethodError: true,\n\n                whereReg: '',\n                whereRegError: true,\n\n                boatMoored: '',\n                boatMooredError: true,\n\n                mooringType: '',\n                mooringTypeError: true,\n                //Vessel\n                // -----------------------------------------------------------\n                // Engine & Trailer Details\n                mainEngine: '',\n                mainEngineError: true,\n\n                mainEngineHp: '',\n                mainEngineHpError: true,\n\n                mainEngineYear: '',\n                mainEngineYearError: true,\n\n                mainEngineSerialNo: '',\n                mainEngineSerialNoError: true,\n\n                noOfMainEngine: '',\n                noOfMainEngineError: true,\n\n                tarnsmissionMainEngine: '',\n\n                tarnsmissionMainEngineError: true,\n\n                auxiliaryEngine: '',\n                auxiliaryEngineError: true,\n\n                auxiliaryEngineHp: '',\n                auxiliaryEngineHpError: true,\n\n                auxiliaryEngineYear: '',\n                auxiliaryEngineYearError: true,\n\n                auxiliaryEngineSerialNo: '',\n                auxiliaryEngineSerialNoError: true,\n\n                noOfAuxiliaryEngine: '',\n                noOfAuxiliaryEngineError: true,\n\n                auxiliaryEngineTransmission: '',\n\n                auxiliaryEngineTransmissionError: true,\n\n                maxSpeed: '',\n                maxSpeedError: true,\n\n                makeofTrailer: '',\n                makeofTrailerError: true,\n\n                trailerSerialNo: '',\n                trailerSerialNoError: true,\n                // Engine & Trailer Details\n                // -----------------------------------------------------------\n                // Navigational Limits\n\n                cruisingRange: '',\n                cruisingRangeError: true,\n\n                additionalCruisingRange: '',\n                additionalCruisingRangeError: true,\n                // Navigational Limits\n                // -----------------------------------------------------------\n                // General Questions\n\n                PreviousBoatingExperience: '',\n                PreviousBoatingExperienceError: true,\n\n\n                CurrentNCBYears: '',\n                CurrentNCBYearsError: true,\n\n\n                previousInsurer: \"\",\n                previousInsurerError: false,\n\n                previousPolicyNo: \"\",\n                previousPolicyNoError: false,\n\n                boatingQualifications: '',\n\n                boatingQualificationsError: true,\n\n                losses: '',\n                lossesError: true,\n                lossesDescribe: '',\n                lossesDescribeError: true,\n                showLossesDescribe: false,\n\n                convicted: '',\n                convictedError: true,\n                convictedDescribe: '',\n                convictedDescribeError: true,\n                showconvictedDescribe: false,\n\n                insurancecanceled: '',\n                insurancecanceledError: true,\n                insurancecanceledDescribe: '',\n                insurancecanceledDescribeError: true,\n                showinsurancecanceledDescribe: false,\n\n                damaged: '',\n                damagedError: true,\n                damagedDescribe: '',\n                damagedDescribeError: true,\n                showdamagedDescribe: false,\n                // General Questions\n                // -----------------------------------------------------------\n                // Limits / Additional Cover            \n                thirdPartyLiability: '',\n                thirdPartyLiabilityError: true,\n\n                isWaterSkiing: false,\n                waterSkiingLiability: '',\n                systemWaterSkiingLiability: '',\n\n                isWaterToys: false,\n                waterToysLiability: '',\n                systemWaterToysLiabiility: '',\n\n                isSailRacing: false,\n                sailRacingCoverage: '',\n\n\n                racingEventType: '',\n                racingEventTypeError: true,\n\n\n                crewLiability: '',\n                crewLiabilityError: true,\n                // PolicySumInsured\n                binder: '',\n                binderError: false,\n\n                premium: '',\n                premiumError: false,\n\n                levy: '',\n                levyError: false,\n\n                adminFee: '',\n                adminFeeError: false,\n                // PolicySumInsured\n                conditionalVessel: 1,\n                conditionalEngine: 1,\n                conditionalNavigation: 1,\n                conditionalGeneral: 1,\n                conditionalLimits: 1,\n                isShowNonRateParams: 0,\n            })\n        }\n    }\n\n    selectType(value, type) {\n        console.log(this.state);\n\n        if (type === 'country') {\n\n            if (CommonConfig.isEmpty(value.value)) {\n                this.setState({ countryError: true, country: value.value });\n                this.show(\"country\", true, \"countryError\", \"Please select Country\");\n            } else {\n                this.setState({ countryError: false, country: value.value });\n                this.show(\"country\", false, \"countryError\", \"\");\n                let ThirdPartyStringMapType = CommonConfig.ThirdPartyStringMapOnCountry(value.value)\n                this.getDropDownValues(ThirdPartyStringMapType, 'ThirdPartyLiabilityList', 'SortOrder');\n                if (value.value == \"UK\") {\n                    this.setState({ currency: \"GBP\" })\n                } else {\n                    this.setState({ currency: \"EUR\" })\n                }\n                this.getVesselClassByCountry(value.value, this.state.TPO);\n                this.setState({vesselClass:'', VesselClassError: true, vesselType:'', vesselTypeError: true});\n            }\n        }\n\n        if (type === 'policyType') {\n            console.log(value.value);\n            if (CommonConfig.isEmpty(value.value)) {\n                this.setState({ policyTypeError: true, policyType: value.value });\n                this.show(\"policyType\", true, \"policyTypeError\", \"Please select policy type\");\n            } else {\n                // if (value.value == 'VesselNonrated') {\n                //     this.setState({ excessError: true, rateError: true, ratingType: 'Rating', isShowNonRateParams: 1 })\n                // } else {\n                //     this.setState({ rate: '', excess: '', ratingType: '', excessError: false, rateError: false, isShowNonRateParams: 0 })\n                // }\n                // console.log('conditionalFields',value.value);\n                \n                this.conditionalFields(value.value);\n                this.setState({ policyTypeError: false, policyType: value.value });\n                this.show(\"policyType\", false, \"policyTypeError\", \"\");\n\n                if ( value.value == 'MarineTrade' || value.value == 'MultiVessel' ) {\n                    this.getBinderByPolicyType('MARINBINDER');\n                }else if (value.value == 'Engineering') {\n                    this.getBinderByPolicyType('ENGINEERINGBINDER');\n                }\n            }\n        }\n\n        if (type === 'documentLanguage') {\n\n            if (CommonConfig.isEmpty(value.value)) {\n                this.setState({ documentLanguageError: true, documentLanguage: value.value });\n                this.show(\"documentLanguage\", true, \"documentLanguageError\", \"Please select document language\");\n            } else {\n                this.setState({ documentLanguageError: false, documentLanguage: value.value });\n                this.show(\"documentLanguage\", false, \"documentLanguageError\", \"\");\n            }\n        }\n\n        if (type === 'currency') {\n\n            if (CommonConfig.isEmpty(value.value)) {\n                this.setState({ currencyError: true, currency: value.value });\n                this.show(\"currency\", true, \"currencyError\", \"Please select currency\");\n            } else {\n                this.setState({ currencyError: false, currency: value.value });\n                this.show(\"currency\", false, \"currencyError\", \"\");\n            }\n        }\n\n        if (type === 'PolicyDepartment') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ PolicyDepartmentError: true, PolicyDepartment: value });\n                this.show(\"PolicyDepartment\", true, \"PolicyDepartmentError\", \"Please select policy department\");\n            } else {\n                this.setState({ PolicyDepartmentError: false, PolicyDepartment: value });\n                this.show(\"PolicyDepartment\", false, \"PolicyDepartmentError\", \"\");\n                if (value == 'ServiceCenter' || value == 'SubAgent') {\n                    this.setState({ sourceDisplay: true })\n                    this.getOrganazationData(value)\n                }\n                else {\n                    this.setState({ sourceDisplay: false })\n                }\n            }\n        }\n\n        if (type === 'source') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ sourceError: true, source: value });\n                this.show(\"\", true, \"sourceError\", \"\");\n            } else {\n                this.setState({ sourceError: false, source: value.value });\n                this.show(\"source\", false, \"sourceError\", \"\");\n            }\n        }\n\n        if (type === 'binder') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ binderError: true, binder: value });\n                this.show(\"\", true, \"binderError\", \"\");\n            } else {\n                this.setState({ binderError: false, binder: value.value });\n                this.show(\"binder\", false, \"binderError\", \"\");\n            }\n        }\n\n        if (type === 'vesselClass') {\n\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ VesselClassError: true, vesselClass: value, vesselTypeList: [] });\n                this.show(\"\", true, \"vesselClassError\", \"Please select vessel class\");\n            } else {\n\n                this.setState({ VesselClassError: false, vesselClass: value.value, VesselType: '', vesselTypeError: true });\n                this.show(\"vesselClass\", false, \"vesselClassError\", \"\");\n                this.getVesselType(value.value, this.state.country, this.state.TPO);\n\n                var SelectedId = value.label;\n                let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(SelectedId);\n\n                if (!CommonConfig.isEmpty(this.state.yearBuilt)) {\n                    let BoatAge = new Date().getFullYear() - this.state.yearBuilt;\n                    if (SelectedId != 'Dinghy' && SelectedId != 'Lake Boat' && SelectedId != 'Personal Watercraft') {\n                        this.setState({ lastSurveyDateRequired: (BoatAge >= 20) ? true : false });\n                    } else {\n                        this.setState({ lastSurveyDateRequired: false, vesselType: '' });\n                    }\n                    this.show(\"lastSurveyDate\", (BoatAge >= 30) ? '' : false, \"lastSurveyDateError\", (BoatAge >= 30) ? \"\" : \"\");\n                }\n\n                this.setState({\n                    DisplayWater: DisplayCondition.displayWater,\n                    DisplayRacing: DisplayCondition.displayRacing,\n                    DisplayCrew: DisplayCondition.displayCrew\n                });\n\n                if (SelectedId == \"Dinghy\" || SelectedId == \"Rowing Sculls\") {\n                    this.setState({\n                        conditionalEngine: 0, mainEngine: '', mainEngineHp: '', mainEngineYear: '', noOfMainEngine: '', tarnsmissionMainEngine: '',\n                        auxiliaryEngine: '', auxiliaryEngineHp: '', auxiliaryEngineYear: '', auxiliaryEngineNoEngine: '', auxiliaryEngineTransmission: '', maxSpeed: 0,\n                        makeofTrailer: '', trailerSerialNo: '',\n                        mainEngineError: false, mainEngineHpError: false, mainEngineYearError: false, noOfMainEngineError: false, tarnsmissionMainEngineError: false, maxSpeedError: false\n                    })\n                } else {\n                    this.setState({\n                        conditionalEngine: 1, mainEngine: '', mainEngineHp: '', mainEngineYear: '', noOfMainEngine: '', tarnsmissionMainEngine: '',\n                        auxiliaryEngine: '', auxiliaryEngineHp: '', auxiliaryEngineYear: '', auxiliaryEngineNoEngine: '', auxiliaryEngineTransmission: '', maxSpeed: '',\n                        makeofTrailer: '', trailerSerialNo: '',\n                        mainEngineError: true, mainEngineHpError: true, mainEngineYearError: true, noOfMainEngineError: true, tarnsmissionMainEngineError: true, maxSpeedError: true\n                    })\n                }\n\n                if (SelectedId === \"Commercial Vessels\") {\n                    this.getDropDownValues('COMMERCIALUSEOFVESSEL', 'UseofVesselList', 'StringMapName');\n                } else {\n                    this.getDropDownValues('USEOFVESSEL', 'UseofVesselList', 'StringMapName');\n                }\n            }\n            // this.setState({ VesselType:'' })\n        }\n\n        if (type === 'vesselType') {\n\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ vesselTypeError: true, vesselType: value.value });\n                this.show(\"\", true, \"vesselTypeError\", \"Please select vessel type\");\n            } else {\n                this.setState({ vesselTypeError: false, vesselType: value.value });\n                this.show(\"vesselType\", false, \"vesselTypeError\", \"\");\n                this.getDefaultAddonCoverage(value.value);\n                this.getAssumption(value.value);\n\n                var vesselClass = this.state.VesselClassList.filter(e => e.value === this.state.vesselClass);\n                if (vesselClass.length) {\n                    var SelectedClass = vesselClass[0].label;\n\n                    if (SelectedClass == 'Yacht' || SelectedClass == 'Vela') {\n                        var SelectedId = value.label;\n                        let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(SelectedId);\n                        this.setState({\n                            DisplayWater: DisplayCondition.displayWater,\n                            DisplayRacing: DisplayCondition.displayRacing,\n                            DisplayCrew: DisplayCondition.displayCrew\n                        })\n                    }\n                }\n            }\n        }\n\n        if (type === 'UseofVessel') {\n\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ UseofVesselError: true, UseofVessel: value });\n                this.show(\"UseofVessel\", true, \"UseofVesselError\", \"Please select use of vessel\");\n            } else {\n                this.setState({ UseofVesselError: false, UseofVessel: value });\n                this.show(\"UseofVessel\", false, \"UseofVesselError\", \"\");\n            }\n        }\n\n        if (type === 'hullMaterial') {\n\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ hullMaterialError: true, hullMaterial: value });\n                this.show(\"hullMaterial\", true, \"hullMaterialError\", \"Please select hull material\");\n            } else {\n                this.setState({ hullMaterialError: false, hullMaterial: value });\n                this.show(\"hullMaterial\", false, \"hullMaterialError\", \"\");\n            }\n        }\n\n        if (type === 'vesselBuildType') {\n\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ vesselBuildTypeError: true, vesselBuildType: value });\n                this.show(\"vesselBuildType\", true, \"vesselBuildTypeError\", \"Please select type of build\");\n            } else {\n                this.setState({ vesselBuildTypeError: false, vesselBuildType: value });\n                this.show(\"vesselBuildType\", false, \"vesselBuildTypeError\", \"\");\n            }\n        }\n\n        if (type === 'sumInsuredMethod') {\n\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ sumInsuredMethodError: true, sumInsuredMethod: value });\n                this.show(\"sumInsuredMethod\", true, \"sumInsuredMethodError\", \"Please select sum insured method\");\n            } else {\n                this.setState({ sumInsuredMethodError: false, sumInsuredMethod: value });\n                this.show(\"sumInsuredMethod\", false, \"sumInsuredMethodError\", \"\");\n            }\n        }\n\n        if (type === 'whereReg') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ whereRegError: true, whereReg: value });\n                this.show(\"\", true, \"whereRegError\", \"Please select Where is boat registered\");\n            } else {\n                this.setState({ whereRegError: false, whereReg: value.value });\n                this.show(\"whereReg\", false, \"whereRegError\", \"\");\n            }\n        }\n\n        if (type === 'boatMoored') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ boatMooredError: true, boatMoored: value, mooringTypeList: [] });\n                this.show(\"\", true, \"boatMooredError\", \"Please select Where is boat moored\");\n            } else {\n                this.getmooringType(value.value);\n                this.setState({ boatMooredError: false, boatMoored: value.value });\n                this.show(\"boatMoored\", false, \"boatMooredError\", \"\");\n\n            }\n        }\n\n        if (type === 'mooringType') {\n            if (CommonConfig.isEmpty(value.value)) {\n                this.setState({ mooringTypeError: true, mooringType: value.value });\n                this.show(\"mooringType\", true, \"mooringTypeError\", \"Please select moored type\");\n            } else {\n                this.setState({ mooringTypeError: false, mooringType: value.value });\n                this.show(\"mooringType\", false, \"mooringTypeError\", \"\");\n            }\n        }\n\n        if (type === 'cruisingRange') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ cruisingRangeError: true, cruisingRange: value });\n                this.show(\"\", true, \"cruisingRangeError\", \"Please select cruising range\");\n            } else {\n                this.setState({ cruisingRangeError: false, cruisingRange: value.value });\n                this.show(\"cruisingRange\", false, \"cruisingRangeError\", \"\");\n            }\n        }\n\n        if (type === 'noOfMainEngine') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ noOfMainEngineError: true, noOfMainEngine: value });\n                this.show(\"noOfMainEngine\", true, \"noOfMainEngineError\", \"Please select no of engine\");\n            } else {\n                this.setState({ noOfMainEngineError: false, noOfMainEngine: value });\n                this.show(\"noOfMainEngine\", false, \"noOfMainEngineError\", \"\");\n            }\n        }\n\n        if (type === 'tarnsmissionMainEngine') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ tarnsmissionMainEngineError: true, tarnsmissionMainEngine: value });\n                this.show(\"tarnsmissionMainEngine\", true, \"tarnsmissionMainEngineError\", \"Please select tarnsmission\");\n            } else {\n                this.setState({ tarnsmissionMainEngineError: false, tarnsmissionMainEngine: value });\n                this.show(\"tarnsmissionMainEngine\", false, \"tarnsmissionMainEngineError\", \"\");\n            }\n        }\n\n        if (type === 'noOfAuxiliaryEngine') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ noOfAuxiliaryEngineError: true, noOfAuxiliaryEngine: value });\n                this.show(\"noOfAuxiliaryEngine\", true, \"noOfAuxiliaryEngineError\", \"Please select no of engine\");\n            } else {\n                this.setState({ noOfAuxiliaryEngineError: false, noOfAuxiliaryEngine: value });\n                this.show(\"noOfAuxiliaryEngine\", false, \"noOfAuxiliaryEngineError\", \"\");\n            }\n        }\n\n        if (type === 'auxiliaryEngineTransmission') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ auxiliaryEngineTransmissionError: true, auxiliaryEngineTransmission: value });\n                this.show(\"auxiliaryEngineTransmission\", true, \"auxiliaryEngineTransmissionError\", \"Please select Transmission\");\n            } else {\n                this.setState({ auxiliaryEngineTransmissionError: false, auxiliaryEngineTransmission: value });\n                this.show(\"auxiliaryEngineTransmission\", false, \"auxiliaryEngineTransmissionError\", \"\");\n            }\n        }\n\n\n\n        if (type === 'boatingQualifications') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ boatingQualificationsError: true, boatingQualifications: value });\n                this.show(\"boatingQualifications\", true, \"boatingQualificationsError\", \"Please select boating qualifications\");\n            } else {\n                this.setState({ boatingQualificationsError: false, boatingQualifications: value });\n                this.show(\"boatingQualifications\", false, \"boatingQualificationsError\", \"\");\n            }\n        }\n\n        if (type === 'losses') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ lossesDescribeError: true, losses: value, showLossesDescribe: false, lossesError: true });\n                this.show(\"losses\", true, \"lossesError\", \"Please select losses\");\n            } else {\n                if (value == \"Yes\") {\n                    this.setState({ showLossesDescribe: true, lossesDescribeError: true });\n                } else {\n                    this.setState({ showLossesDescribe: false, lossesDescribeError: false, lossesDescribe: '' });\n                }\n                this.setState({ losses: value, lossesError: false });\n                this.show(\"losses\", false, \"lossesError\", \"\");\n            }\n        }\n\n        if (type === 'convicted') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ convictedDescribeError: true, convicted: value, showconvictedDescribe: false, convictedError: true });\n                this.show(\"convicted\", true, \"convictedError\", \"Please select convicted\");\n            } else {\n                if (value == \"Yes\") {\n                    this.setState({ showconvictedDescribe: true, convictedDescribeError: true });\n                } else {\n                    this.setState({ showconvictedDescribe: false, convictedDescribeError: false, convictedDescribe: '' });\n                }\n                this.setState({ convicted: value, convictedError: false });\n                this.show(\"convicted\", false, \"convictedError\", \"\");\n            }\n        }\n\n        if (type === 'insurancecanceled') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ insurancecanceledDescribeError: true, insurancecanceled: value, showinsurancecanceledDescribe: false, insurancecanceledError: true });\n                this.show(\"insurancecanceled\", true, \"insurancecanceledError\", \"Please select is insurance canceled-refused or not\");\n            } else {\n                if (value == \"Yes\") {\n                    this.setState({ showinsurancecanceledDescribe: true, insurancecanceledDescribeError: true });\n                } else {\n                    this.setState({ showinsurancecanceledDescribe: false, insurancecanceledDescribeError: false, insurancecanceledDescribe: '' });\n                }\n                this.setState({ insurancecanceled: value, insurancecanceledError: false });\n                this.show(\"insurancecanceled\", false, \"insurancecanceledError\", \"\");\n            }\n        }\n\n        if (type === 'damaged') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ damagedDescribeError: true, damaged: value, showdamagedDescribe: false, damagedError: true });\n                this.show(\"damaged\", true, \"damagedError\", \"Please select is vessel ever been damaged or not\");\n            } else {\n                if (value == \"Yes\") {\n                    this.setState({ showdamagedDescribe: true, damagedDescribeError: true });\n                } else {\n                    this.setState({ showdamagedDescribe: false, damagedDescribeError: false, damagedDescribe: '' });\n                }\n                this.setState({ damaged: value, damagedError: false });\n                this.show(\"damaged\", false, \"damagedError\", \"\");\n            }\n        }\n\n        if (type === 'PreviousBoatingExperience') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ PreviousBoatingExperienceError: true, PreviousBoatingExperience: value });\n                this.show(\"PreviousBoatingExperience\", true, \"PreviousBoatingExperienceError\", \"Please select previous boating experience\");\n            } else {\n                this.setState({ PreviousBoatingExperienceError: false, PreviousBoatingExperience: value });\n                this.show(\"PreviousBoatingExperience\", false, \"PreviousBoatingExperienceError\", \"\");\n            }\n        }\n\n        if (type === 'CurrentNCBYears') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ CurrentNCBYearsError: true, CurrentNCBYears: value });\n                this.show(\"CurrentNCBYears\", true, \"CurrentNCBYearsError\", \"Please select current NCB years\");\n            } else {\n                this.setState({ CurrentNCBYearsError: false, CurrentNCBYears: value });\n                this.show('CurrentNCBYears', false, \"CurrentNCBYearsError\", \"\");\n            }\n        }\n\n        if (type === 'thirdPartyLiability') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ thirdPartyLiabilityError: true, thirdPartyLiability: value });\n                this.show(\"thirdPartyLiability\", true, \"thirdPartyLiabilityError\", \"Please select third party liability\");\n            } else {\n                this.setState({ thirdPartyLiabilityError: false, thirdPartyLiability: value });\n                this.show('thirdPartyLiability', false, \"thirdPartyLiabilityError\", \"\");\n            }\n        }\n\n        if (type === 'racingEventType') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ racingEventTypeError: true, racingEventType: value });\n                this.show(\"racingEventType\", true, \"racingEventTypeError\", \"Please select racing event type\");\n            } else {\n                this.setState({ racingEventTypeError: false, racingEventType: value });\n                this.show('racingEventType', false, \"racingEventTypeError\", \"\");\n            }\n        }\n\n        if (type === 'crewLiability') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ crewLiabilityError: true, crewLiability: value });\n                this.show(\"crewLiability\", true, \"crewLiabilityError\", \"Please select crew liability\");\n            } else {\n                this.setState({ crewLiabilityError: false, crewLiability: value });\n                this.show('crewLiability', false, \"crewLiabilityError\", \"\");\n            }\n        }\n    }\n\n    handleChange = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        // SAGAR\n        let alphaNumeric = CommonConfig.RegExp.alphaNumeric;\n        if (e.target.name === 'policyNumber') {\n            debugger\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ policyNumberError: true });\n                this.show(\"policyNumber\", true, \"policyNumberError\", \"Please enter Policy Number\");\n            } else if (e.target.value.length > 10) {\n                this.setState({ policyNumberError: true, policyNumber: this.state.policyNumber });\n                this.show(\"policyNumber\", true, \"policyNumberError\", \"Please enter less than 10\");\n            } else {\n                this.setState({ policyNumber: e.target.value, policyNumberError: false });\n                this.show(\"policyNumber\", false, \"policyNumberError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'refer') {\n            if (e.target.checked) {\n                this.setState({ refer: e.target.checked });\n            } else {\n                this.setState({ refer: e.target.checked });\n            }\n        }\n\n        if (e.target.name === 'TPO') {\n            this.setState({ TPO: e.target.checked });\n            if (!CommonConfig.isEmpty(this.state.country)) {\n                this.getVesselClassByCountry(this.state.country, e.target.checked);\n                this.setState({vesselClass:'', VesselClassError: true, vesselType:'', vesselTypeError: true});\n            }\n        }\n\n        if (e.target.name === 'policyEffectiveDate') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ policyEffectiveDateError: true });\n                this.show(\"policyEffectiveDate\", true, \"policyEffectiveDateError\", \"Please enter policy effective date\");\n            } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\n                this.setState({ policyEffectiveDateError: true });\n                this.show(\"policyEffectiveDate\", true, \"policyEffectiveDateError\", \"Please enter valid policy effective date\");\n            } else {\n                let RenewalDate = moment(e.target.value).add(365, 'days').format('YYYY-MM-DD');\n                this.setState({ policyEffectiveDateError: false, policyEffectiveDate: e.target.value, renewalDate: RenewalDate });\n                this.show(\"policyEffectiveDate\", false, \"policyEffectiveDateError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'premium') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ premiumError: true });\n                this.show(\"premium\", true, \"premiumError\", \"Please enter Premium Amount\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ premiumError: true });\n                    this.show(\"premium\", true, \"premiumError\", \"Please enter valid Premium Amount\");\n                } else {\n                    this.calculateTotal(e.target.value, this.state.levy, this.state.adminFee);\n                    this.setState({ premiumError: false, premium: e.target.value });\n                    this.show(\"premium\", false, \"premiumError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'levy') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ levyError: true });\n                this.show(\"levy\", true, \"levyError\", \"Please enter Premium Amount\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ levyError: true });\n                    this.show(\"levy\", true, \"levyError\", \"Please enter valid Premium Amount\");\n                } else {\n                    this.calculateTotal(this.state.premium, e.target.value, this.state.adminFee);\n                    this.setState({ levyError: false, levy: e.target.value });\n                    this.show(\"levy\", false, \"levyError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'adminFee') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ adminFeeError: true });\n                this.show(\"adminFee\", true, \"adminFeeError\", \"Please enter Premium Amount\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ adminFeeError: true });\n                    this.show(\"adminFee\", true, \"adminFeeError\", \"Please enter valid Premium Amount\");\n                } else {\n                    this.calculateTotal(this.state.premium, this.state.levy, e.target.value);\n                    this.setState({ adminFeeError: false, adminFee: e.target.value });\n                    this.show(\"adminFee\", false, \"adminFeeError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'rate') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ rateError: true });\n                this.show(\"rate\", true, \"rateError\", \"Please enter Rate\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.percentage;\n                let percentage = e.target.value;\n                if (!decimalRegEx.test(percentage)) {\n                    this.setState({ rateError: true });\n                    this.show(\"rate\", true, \"rateError\", \"Please enter valid Rate\");\n                } else {\n                    this.setState({ rateError: false, rate: e.target.value });\n                    this.show(\"rate\", false, \"rateError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'excess') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ excessError: true });\n                this.show(\"excess\", true, \"excessError\", \"Please enter Excess Amount\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ excessError: true });\n                    this.show(\"excess\", true, \"excessError\", \"Please enter valid Excess Amount\");\n                } else {\n                    this.setState({ excessError: false, excess: e.target.value });\n                    this.show(\"excess\", false, \"excessError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'vesselName') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ vesselNameError: true });\n                this.show(\"vesselName\", true, \"vesselNameError\", \"Please enter Make & Model \");\n            } else if (e.target.value.length > 50) {\n                this.setState({ vesselNameError: true, vesselName: this.state.vesselName });\n                this.show(\"vesselName\", true, \"vesselNameError\", \"Please enter less than 50\");\n            } else {\n                this.setState({ vesselName: e.target.value, vesselNameError: false });\n                this.show(\"vesselName\", false, \"vesselNameError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'makeAndModel') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ makeAndModelError: true });\n                this.show(\"makeAndModel\", true, \"makeAndModelError\", \"Please enter Make & Model \");\n            } else if (e.target.value.length > 38) {\n                this.setState({ makeAndModelError: true, makeAndModel: this.state.makeAndModel });\n                this.show(\"makeAndModel\", true, \"makeAndModelError\", \"Please enter less than 38\");\n            } else {\n                this.setState({ makeAndModel: e.target.value, makeAndModelError: false });\n                this.show(\"makeAndModel\", false, \"makeAndModelError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'length') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ lengthError: true });\n                this.show(\"length\", true, \"lengthError\", \"Please enter length\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ lengthError: true });\n                    this.show(\"length\", true, \"lengthError\", \"Please enter valid length\");\n                } else {\n                    this.setState({ lengthError: false, length: e.target.value });\n                    this.show(\"length\", false, \"lengthError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'yearBuilt') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ yearBuiltError: true });\n                this.show(\"yearBuilt\", true, \"yearBuiltError\", \"Please enter year built\");\n            } else {\n                let yearRegEx = CommonConfig.RegExp.year;\n                let year = e.target.value;\n                var minYear = moment().subtract(100, 'year').format('YYYY');\n                var maxYear = moment().year();\n                if (!yearRegEx.test(year) || (year < minYear || year > maxYear)) {\n                    this.setState({ yearBuiltError: true });\n                    this.show(\"yearBuilt\", true, \"yearBuiltError\", \"Please enter valid year built\");\n                } else {\n                    this.setState({ yearBuiltError: false, yearBuilt: e.target.value });\n                    this.show(\"yearBuilt\", false, \"yearBuiltError\", \"\");\n\n                    // var el = document.getElementById('vesselClass');\n                    // var vesselClass = el.options[el.selectedIndex].innerHTML;\n\n                    var vesselClass = this.state.VesselClassList.filter(e => e.value === this.state.vesselClass);\n                    if (vesselClass.length) {\n                        var SelectedClass = vesselClass[0].label;\n\n                        let BoatAge = new Date().getFullYear() - e.target.value;\n                        if (SelectedClass != 'Dinghy' && SelectedClass != 'Lake Boat' && SelectedClass != 'Personal Watercraft') {\n                            this.setState({ lastSurveyDateRequired: (BoatAge >= 20) ? true : false });\n                        } else {\n                            this.setState({ lastSurveyDateRequired: false });\n                        }\n                        this.show(\"lastSurveyDate\", (BoatAge >= 30) ? '' : false, \"lastSurveyDateError\", (BoatAge >= 30) ? \"\" : \"\");\n                    }\n                }\n            }\n            var YBuilt = moment(e.target.value).format('YYYY');\n            this.setState({ YBuilt: YBuilt, yearPurchased: '' })\n        }\n\n        if (e.target.name === 'yearPurchased') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ yearPurchasedError: true });\n                this.show(\"yearPurchased\", true, \"yearPurchasedError\", \"Please enter year purchased\");\n            } else {\n                let yearRegEx = CommonConfig.RegExp.year;\n                let year = e.target.value;\n                var Ybuilt = this.state.YBuilt;\n                var maxYear = moment().year();\n                if (!yearRegEx.test(year) || (year < Ybuilt || year > maxYear)) {\n                    this.setState({ yearPurchasedError: true });\n                    this.show(\"yearPurchased\", true, \"yearPurchasedError\", \"Please enter valid year purchased\");\n                } else {\n                    this.setState({ yearPurchasedError: false, yearPurchased: e.target.value });\n                    this.show(\"yearPurchased\", false, \"yearPurchasedError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'purchasePrice') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ purchasePriceError: true });\n                this.show(\"purchasePrice\", true, \"purchasePriceError\", \"Please enter purchase price\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ purchasePriceError: true });\n                    this.show(\"purchasePrice\", true, \"purchasePriceError\", \"Please enter valid purchase price\");\n                } else {\n                    this.setState({ purchasePriceError: false, purchasePrice: e.target.value });\n                    this.show(\"purchasePrice\", false, \"purchasePriceError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'sumInsured') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ sumInsuredError: true });\n                this.show(\"sumInsured\", true, \"sumInsuredError\", \"Please enter sum insured\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ sumInsuredError: true });\n                    this.show(\"sumInsured\", true, \"sumInsuredError\", \"Please enter valid sum insured\");\n                } else {\n                    this.setState({ sumInsuredError: false, sumInsured: e.target.value });\n                    this.show(\"sumInsured\", false, \"sumInsuredError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'lastSurveyDate') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ lastSurveyDateError: true, surveyDueDate: '' });\n                // this.show(\"lastSurveyDate\", true, \"lastSurveyDateError\", \"Please enter Last Survey Date\");\n            } else if (moment(e.target.value).format('YYYY-MM-DD') > moment().format('YYYY-MM-DD')) {\n                this.setState({ lastSurveyDateError: true });\n                this.show(\"lastSurveyDate\", true, \"lastSurveyDateError\", \"Please enter valid last survey date\");\n            } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().subtract(5, 'years').format('YYYY-MM-DD')) {\n                this.setState({ lastSurveyDateError: true });\n                this.show(\"lastSurveyDate\", true, \"lastSurveyDateError\", \"Please enter valid last survey date\");\n            } else {\n                let SurveyDueDate = moment(e.target.value).add(5, 'years').format('YYYY-MM-DD');\n                this.setState({ lastSurveyDateError: false, lastSurveyDate: e.target.value, surveyDueDate: SurveyDueDate });\n                this.show(\"lastSurveyDate\", false, \"lastSurveyDateError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'mainEngine') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ mainEngineError: true });\n                this.show(\"mainEngine\", true, \"mainEngineError\", \"Please enter main engine \");\n            } else if (e.target.value.length > 200) {\n                this.setState({ mainEngineError: true, mainEngine: this.state.mainEngine });\n                this.show(\"mainEngine\", true, \"mainEngineError\", \"Please enter less than 200\");\n            } else {\n                this.setState({ mainEngine: e.target.value, mainEngineError: false });\n                this.show(\"mainEngine\", false, \"mainEngineError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'mainEngineHp') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ mainEngineHpError: true });\n                this.show(\"mainEngineHp\", true, \"mainEngineHpError\", \"Please enter main engine HP\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ mainEngineHpError: true });\n                    this.show(\"mainEngineHp\", true, \"mainEngineHpError\", \"Please enter valid main engine HP\");\n                } else {\n                    this.setState({ mainEngineHpError: false, mainEngineHp: e.target.value });\n                    this.show(\"mainEngineHp\", false, \"mainEngineHpError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'mainEngineSerialNo') {\n            if (CommonConfig.isEmpty(e.target.value) || !alphaNumeric.test(e.target.value)) {\n                this.setState({ mainEngineSerialNoError: true });\n                this.show(\"mainEngineSerialNo\", true);\n            } else {\n                this.setState({ mainEngineSerialNoError: false, mainEngineSerialNo: e.target.value });\n                this.show(\"mainEngineSerialNo\", false);\n            }\n        }\n\n        if (e.target.name === 'mainEngineYear') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ mainEngineYearError: true });\n                this.show(\"mainEngineYear\", true, \"mainEngineYearError\", \"Please enter main engine year\");\n            } else {\n                let yearRegEx = CommonConfig.RegExp.year;\n                let year = e.target.value;\n                var minYear = moment().subtract(100, 'year').format('YYYY');\n                var maxYear = moment().year();\n                if (!yearRegEx.test(year) || (year < minYear || year > maxYear)) {\n                    this.setState({ mainEngineYearError: true });\n                    this.show(\"mainEngineYear\", true, \"mainEngineYearError\", \"Please enter valid main engine year\");\n                } else {\n                    this.setState({ mainEngineYearError: false, mainEngineYear: e.target.value });\n                    this.show(\"mainEngineYear\", false, \"mainEngineYearError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'auxiliaryEngine') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ auxiliaryEngineError: true });\n                this.show(\"auxiliaryEngine\", true, \"auxiliaryEngineError\", \"Please enter auxiliary engine \");\n            } else if (e.target.value.length > 200) {\n                this.setState({ auxiliaryEngineError: true, auxiliaryEngine: this.state.auxiliaryEngine });\n                this.show(\"auxiliaryEngine\", true, \"auxiliaryEngineError\", \"Please enter less than 200\");\n            } else {\n                this.setState({ auxiliaryEngine: e.target.value, auxiliaryEngineError: false });\n                this.show(\"auxiliaryEngine\", false, \"auxiliaryEngineError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'auxiliaryEngineHp') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ auxiliaryEngineHpError: true });\n                this.show(\"auxiliaryEngineHp\", true, \"auxiliaryEngineHpError\", \"Please enter auxiliary engine HP\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ auxiliaryEngineHpError: true });\n                    this.show(\"auxiliaryEngineHp\", true, \"auxiliaryEngineHpError\", \"Please enter valid auxiliary engine HP\");\n                } else {\n                    this.setState({ auxiliaryEngineHpError: false, auxiliaryEngineHp: e.target.value });\n                    this.show(\"auxiliaryEngineHp\", false, \"auxiliaryEngineHpError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'auxiliaryEngineSerialNo') {\n            if (CommonConfig.isEmpty(e.target.value) || !alphaNumeric.test(e.target.value)) {\n                this.setState({ auxiliaryEngineSerialNoError: true });\n                this.show(\"auxiliaryEngineSerialNo\", true);\n            } else {\n                this.setState({ auxiliaryEngineSerialNoError: false, auxiliaryEngineSerialNo: e.target.value });\n                this.show(\"auxiliaryEngineSerialNo\", false);\n            }\n        }\n\n        if (e.target.name === 'auxiliaryEngineYear') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ auxiliaryEngineYearError: true });\n                this.show(\"auxiliaryEngineYear\", true, \"auxiliaryEngineYearError\", \"Please enter auxiliary engine year\");\n            } else {\n                let yearRegEx = CommonConfig.RegExp.year;\n                let year = e.target.value;\n                if (!yearRegEx.test(year)) {\n                    this.setState({ auxiliaryEngineYearError: true });\n                    this.show(\"auxiliaryEngineYear\", true, \"auxiliaryEngineYearError\", \"Please enter valid auxiliary engine year\");\n                } else {\n                    this.setState({ auxiliaryEngineYearError: false, auxiliaryEngineYear: e.target.value });\n                    this.show(\"auxiliaryEngineYear\", false, \"auxiliaryEngineYearError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'maxSpeed') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ maxSpeedError: true });\n                this.show(\"maxSpeed\", true, \"maxSpeedError\", \"Please enter max speed\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ maxSpeedError: true });\n                    this.show(\"maxSpeed\", true, \"maxSpeedError\", \"Please enter valid max speed\");\n                } else {\n                    this.setState({ maxSpeedError: false, maxSpeed: e.target.value });\n                    this.show(\"maxSpeed\", false, \"maxSpeedError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'makeofTrailer') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ makeofTrailerError: true });\n                this.show(\"makeofTrailer\", true, \"makeofTrailerError\", \"Please enter make of trailer \");\n            } else if (e.target.value.length > 50) {\n                this.setState({ makeofTrailerError: true, makeofTrailer: this.state.makeofTrailer });\n                this.show(\"makeofTrailer\", true, \"makeofTrailerError\", \"Please enter less than 50\");\n            } else {\n                this.setState({ makeofTrailer: e.target.value, makeofTrailerError: false });\n                this.show(\"makeofTrailer\", false, \"makeofTrailerError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'trailerSerialNo') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ trailerSerialNoError: true });\n                this.show(\"trailerSerialNo\", true, \"trailerSerialNoError\", \"Please enter trailer serial no\");\n            } else {\n                let alphaNumericRegEx = CommonConfig.RegExp.alphaNumeric;\n                let alphaNumeric = e.target.value;\n                if (!alphaNumericRegEx.test(alphaNumeric)) {\n                    this.setState({ trailerSerialNoError: true });\n                    this.show(\"trailerSerialNo\", true, \"trailerSerialNoError\", \"Please enter valid trailer serial no\");\n                } else if (e.target.value.length > 50) {\n                    this.setState({ trailerSerialNoError: true, trailerSerialNo: this.state.trailerSerialNo });\n                    this.show(\"trailerSerialNo\", true, \"trailerSerialNoError\", \"Please enter less than 50\");\n                } else {\n                    this.setState({ trailerSerialNoError: false, trailerSerialNo: e.target.value });\n                    this.show(\"trailerSerialNo\", false, \"trailerSerialNoError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'additionalCruisingRange') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ additionalCruisingRangeError: true });\n                this.show(\"additionalCruisingRange\", true, \"additionalCruisingRangeError\", \"Please enter additional cruising range\");\n            } else if (e.target.value.length > 500) {\n                this.setState({ additionalCruisingRangeError: true, additionalCruisingRange: this.state.additionalCruisingRange });\n                this.show(\"additionalCruisingRange\", true, \"additionalCruisingRangeError\", \"Please enter less than 500\");\n            } else {\n                this.setState({ additionalCruisingRange: e.target.value, additionalCruisingRangeError: false });\n                this.show(\"additionalCruisingRange\", false, \"additionalCruisingRangeError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'previousPolicyNo') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ previousPolicyNoError: true });\n                this.show(\"previousPolicyNo\", true, \"previousPolicyNoError\", \"Please enter previous policy no\");\n            } else {\n                let alphaNumericRegEx = CommonConfig.RegExp.alphaNumeric;\n                let alphaNumeric = e.target.value;\n                if (!alphaNumericRegEx.test(alphaNumeric)) {\n                    this.setState({ previousPolicyNoError: true });\n                    this.show(\"previousPolicyNo\", true, \"previousPolicyNoError\", \"Please enter valid policy no\");\n                } else {\n                    this.setState({ previousPolicyNoError: false, previousPolicyNo: e.target.value });\n                    this.show(\"previousPolicyNo\", false, \"previousPolicyNoError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'lossesDescribe') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ lossesDescribeError: true });\n                this.show(\"lossesDescribe\", true, \"lossesDescribeError\", \"Please enter losses describe\");\n            } else if (e.target.value.length > 500) {\n                this.setState({ lossesDescribeError: true, lossesDescribe: this.state.lossesDescribe });\n                this.show(\"lossesDescribe\", true, \"lossesDescribeError\", \"Please enter less than 500\");\n            } else {\n                this.setState({ lossesDescribe: e.target.value, lossesDescribeError: false });\n                this.show(\"lossesDescribe\", false, \"lossesDescribeError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'convictedDescribe') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ convictedDescribeError: true });\n                this.show(\"convictedDescribe\", true, \"convictedDescribeError\", \"Please enter convicted describe\");\n            } else if (e.target.value.length > 500) {\n                this.setState({ convictedDescribeError: true, convictedDescribe: this.state.convictedDescribe });\n                this.show(\"convictedDescribe\", true, \"convictedDescribeError\", \"Please enter less than 500\");\n            } else {\n                this.setState({ convictedDescribe: e.target.value, convictedDescribeError: false });\n                this.show(\"convictedDescribe\", false, \"convictedDescribeError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'insurancecanceledDescribe') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ insurancecanceledDescribeError: true });\n                this.show(\"insurancecanceledDescribe\", true, \"insurancecanceledDescribeError\", \"Please enter insurance canceled Describe\");\n            } else if (e.target.value.length > 500) {\n                this.setState({ insurancecanceledDescribeError: true, insurancecanceledDescribe: this.state.insurancecanceledDescribe });\n                this.show(\"insurancecanceledDescribe\", true, \"insurancecanceledDescribeError\", \"Please enter less than 500\");\n            } else {\n                this.setState({ insurancecanceledDescribe: e.target.value, insurancecanceledDescribeError: false });\n                this.show(\"insurancecanceledDescribe\", false, \"insurancecanceledDescribeError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'damagedDescribe') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ damagedDescribeError: true });\n                this.show(\"damagedDescribe\", true, \"damagedDescribeError\", \"Please enter damaged describe\");\n            } else if (e.target.value.length > 500) {\n                this.setState({ damagedDescribeError: true, damagedDescribe: this.state.damagedDescribe });\n                this.show(\"damagedDescribe\", true, \"damagedDescribeError\", \"Please enter less than 500\");\n            } else {\n                this.setState({ damagedDescribe: e.target.value, damagedDescribeError: false });\n                this.show(\"damagedDescribe\", false, \"damagedDescribeError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'isWaterSkiing') {\n            if (e.target.checked) {\n                this.setState({ isWaterSkiing: e.target.checked, waterSkiingLiability: this.state.systemWaterSkiingLiability });\n            } else {\n                this.setState({ isWaterSkiing: e.target.checked, waterSkiingLiability: '' });\n            }\n        }\n\n        if (e.target.name === 'waterSkiingLiability') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ waterSkiingLiabilityError: true });\n                this.show(\"waterSkiingLiability\", true, \"waterSkiingLiabilityError\", \"Please enter water skiing liability\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ waterSkiingLiabilityError: true });\n                    this.show(\"waterSkiingLiability\", true, \"waterSkiingLiabilityError\", \"Please enter valid water skiing liability\");\n                } else {\n                    this.setState({ waterSkiingLiabilityError: false, waterSkiingLiability: e.target.value });\n                    this.show(\"waterSkiingLiability\", false, \"waterSkiingLiabilityError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'isWaterToys') {\n            if (e.target.checked) {\n                this.setState({ isWaterToys: e.target.checked, waterToysLiability: this.state.systemWaterToysLiabiility });\n            } else {\n                this.setState({ isWaterToys: e.target.checked, waterToysLiability: '' });\n            }\n        }\n\n        if (e.target.name === 'waterToysLiability') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ waterToysLiabilityError: true });\n                this.show(\"waterToysLiability\", true, \"waterToysLiabilityError\", \"Please enter water toys liability\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ waterToysLiabilityError: true });\n                    this.show(\"waterToysLiability\", true, \"waterToysLiabilityError\", \"Please enter valid water toys liability\");\n                } else {\n                    this.setState({ waterToysLiabilityError: false, waterToysLiability: e.target.value });\n                    this.show(\"waterToysLiability\", false, \"waterToysLiabilityError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'isSailRacing') {\n            if (e.target.checked) {\n                this.setState({ isSailRacing: e.target.checked });\n            } else {\n                this.setState({ isSailRacing: e.target.checked });\n            }\n        }\n\n        if (e.target.name === 'sailRacingCoverage') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ sailRacingCoverageError: true });\n                this.show(\"sailRacingCoverage\", true, \"sailRacingCoverageError\", \"Please enter sail racing coverage\");\n            } else {\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n                let decimalWithOne = e.target.value;\n                if (!decimalRegEx.test(decimalWithOne)) {\n                    this.setState({ sailRacingCoverageError: true });\n                    this.show(\"sailRacingCoverage\", true, \"sailRacingCoverageError\", \"Please enter valid sail racing coverage\");\n                } else {\n                    this.setState({ sailRacingCoverageError: false, sailRacingCoverage: e.target.value });\n                    this.show(\"sailRacingCoverage\", false, \"sailRacingCoverageError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'AssumptionAndTerms') {\n            console.log(e.target.checked);\n\n            if (e.target.checked) {\n                this.setState({ AssumptionAndTerms: e.target.checked, AssumptionAndTermsError: false });\n            } else {\n                this.setState({ AssumptionAndTerms: e.target.checked, AssumptionAndTermsError: true });\n            }\n        }\n        // SAGAR\n\n    }\n\n    async Save() {\n\n        // <---------------------------- Check Policy Number on the Go and Show Error ----------------------------> \n\n        // var checkPolicyNumberExists = await this.checkPolicyNumberExists(this.state.policyNumber);\n        // if (checkPolicyNumberExists) {\n        //     return false;\n        // }\n\n        // <---------------------------- Check Policy Number on the Go and Show Error ----------------------------> \n\n        if (this.state.lastSurveyDateRequired && CommonConfig.isEmpty(this.state.lastSurveyDate)) {\n            toast.error(\"Please select Last Survey Date\")\n            return;\n        } \n        if(this.state.policyType == 'MarineTrade' || this.state.policyType =='MultiVessel' || this.state.policyType == 'Engineering'){\n            this.setState({\n                vesselTypeError:false,\n                VesselClassError:false\n            });\n            this.state.vesselTypeError=false;\n            this.state.VesselClassError=false;\n        }\n        if (!this.state.policyNumberError && !this.state.countryError && !this.state.policyTypeError && !this.state.documentLanguageError && !this.state.currencyError && !this.state.policyEffectiveDateError && !this.state.PolicyDepartmentError && !this.state.binderError && !this.state.premiumError && !this.state.levyError && !this.state.adminFeeError && !this.state.rateError && !this.state.excessError && !this.state.VesselClassError && !this.state.vesselTypeError && !this.state.UseofVesselError && !this.state.hullMaterialError && !this.state.makeAndModelError && !this.state.lengthError && !this.state.vesselBuildTypeError && !this.state.yearBuiltError && !this.state.yearPurchasedError && !this.state.purchasePriceError && !this.state.sumInsuredError && !this.state.sumInsuredMethodError && !this.state.whereRegError && !this.state.boatMooredError && !this.state.mooringTypeError && !this.state.mainEngineError && !this.state.mainEngineHpError && !this.state.mainEngineYearError && !this.state.noOfMainEngineError && !this.state.tarnsmissionMainEngineError && !this.state.maxSpeedError && !this.state.cruisingRangeError && !this.state.PreviousBoatingExperienceError && !this.state.CurrentNCBYearsError && !this.state.lossesError && !this.state.lossesDescribeError && !this.state.convictedError && !this.state.convictedDescribeError && !this.state.insurancecanceledError && !this.state.insurancecanceledDescribeError && !this.state.damagedError && !this.state.damagedDescribeError && !this.state.thirdPartyLiabilityError /*&& !this.state.racingEventTypeError && !this.state.crewLiabilityError*/ && this.state.AssumptionAndTerms) {\n            let data = {\n                // Common\n                LanguageId: this.state.LanguageId,\n                Status: this.state.Status,\n                LoggedInUserId: CommonConfig.loggedInUserId(),\n                TPO: this.state.TPO,\n                // Policy\n                PolicyNumber: this.state.policyNumber,\n                EntityId: this.state.EntityId,\n                EntityType: this.state.EntityType,\n                IsReferred: (this.state.refer == true) ? 1 : 0,\n                Country: this.state.country,\n                PolicyType: this.state.policyType,\n                DocLang: this.state.documentLanguage,\n                Currency: this.state.currency,\n                InceptionDate: (this.state.policyEffectiveDate != '' && this.state.policyEffectiveDate != null) ? moment(this.state.policyEffectiveDate).format(CommonConfig.dateFormat.dbDateTime) : '',\n                RenewalDate: moment(this.state.renewalDate).format(CommonConfig.dateFormat.dbDateTime),\n                PolicyStatus: this.state.PolicyStatus,\n                // Vessel\n                VesselClass: this.state.vesselClass,\n                VesselType: this.state.vesselType,\n                VesselName: this.state.vesselName,\n                VesselUse: this.state.UseofVessel,\n                HullMaterial: this.state.hullMaterial,\n                Make: this.state.makeAndModel,\n                Length: this.state.length,\n                BuildType: this.state.vesselBuildType,\n                LastSurveyDate: (this.state.lastSurveyDate !== '' && this.state.lastSurveyDate !== null) ? moment(this.state.lastSurveyDate).format('YYYY/MM/DD') : '',\n                SurveyDueDate: (this.state.surveyDueDate !== '' && this.state.surveyDueDate !== null) ? moment(this.state.surveyDueDate).format('YYYY/MM/DD') : '',\n                YearBuilt: this.state.yearBuilt,\n                BoatAge: new Date().getFullYear() - this.state.yearBuilt,\n                YearPurchased: (this.state.yearPurchased !== '' && this.state.yearPurchased !== null) ? moment(this.state.yearPurchased).format(CommonConfig.dateFormat.yearOnly) : '',\n                PurchasePrice: this.state.purchasePrice,\n                SumInsured: this.state.sumInsured,\n                SumInsuredMethod: this.state.sumInsuredMethod,\n                // EngineTrailer \n                MainEngine: this.state.mainEngine,\n                MainEngineHp: this.state.mainEngineHp,\n                MainEngineYear: this.state.mainEngineYear,\n                MainEngineSerialNo: this.state.mainEngineSerialNo,\n                MainEngineCount: this.state.noOfMainEngine,\n                MainEngineTransmission: this.state.tarnsmissionMainEngine,\n                AuxiliaryEngine: this.state.auxiliaryEngine,\n                AuxiliaryEngineHp: this.state.auxiliaryEngineHp,\n                AuxiliaryEngineYear: this.state.auxiliaryEngineYear,\n                AuxiliaryEngineSerialNo: this.state.auxiliaryEngineSerialNo,\n                AuxiliaryEngineCount: this.state.noOfAuxiliaryEngine,\n                AuxiliaryEngineTransmission: this.state.auxiliaryEngineTransmission,\n                MaxSpeed: this.state.maxSpeed,\n                MakeOfTrailer: this.state.makeofTrailer,\n                TrailerSrNo: this.state.trailerSerialNo,\n                // MooringNavigation\n                VesselRegistrationLocation: this.state.whereReg,\n                MooringGuideId: this.state.mooringType,\n                CruisingRange: this.state.cruisingRange,\n                AdditionalCruisingRange: this.state.additionalCruisingRange,\n                // General \n                PreviousBoatingExperinceInYears: this.state.PreviousBoatingExperience,\n                CurrentNCBYear: this.state.CurrentNCBYears,\n                PreviousInsurer: this.state.previousInsurer,\n                PreviousPolicyNumber: this.state.previousPolicyNo,\n                boatingQualificationsArr: this.state.boatingQualificationsArr,\n                BoatingQualificationsCount: this.state.boatingQualificationsArr.length,\n                IsLossesInLastFiveYears: this.state.losses == \"Yes\" ? 1 : 0,\n                LossesInLastFiveYearsDescription: this.state.lossesDescribe,\n                IsConvictedOrCharged: this.state.convicted == \"Yes\" ? 1 : 0,\n                ConvictedOrChargedDescription: this.state.convictedDescribe,\n                IsInsuranceCanceledOrRefused: this.state.insurancecanceled == \"Yes\" ? 1 : 0,\n                InsuranceCanceledOrRefusedDescription: this.state.insurancecanceledDescribe,\n                IsVesselHasBeenDamaged: this.state.damaged == \"Yes\" ? 1 : 0,\n                VesselHasBeenDamagedDescription: this.state.damagedDescribe,\n                // PolicyInsured\n                ThirdPartyLiabilityAmount: this.state.thirdPartyLiability,\n                WaterSkiingLiabilityAmount: this.state.waterSkiingLiability,\n                WaterToysLiabilityAmount: this.state.waterToysLiability,\n                SailRacingCoverageAmount: this.state.sailRacingCoverage,\n                RacingEventType: this.state.racingEventType,\n                CrewLiability: this.state.crewLiability,\n                NonRatableRatingType: this.state.ratingType,\n                NonRatableRateAmount: this.state.rate,\n                ExcessAmount: this.state.excess,\n                MarineTradePremium: this.state.premium,\n                GovtLevyAmount: this.state.levy,\n                AdminFeeAmount: this.state.adminFee,\n                // policyUnderwriting\n                Department: this.state.PolicyDepartment,\n                SourceId: this.state.source,\n                BinderId: this.state.binder,\n                // policyAddOnCoverage\n                addOnCoverageArr: this.state.addOnCoverageArr,\n                addOnCoverageCount: this.state.addOnCoverageCount,\n            }\n            \n            api.post('api/savePolicy', data).then(res => {\n\n                if (res.success) {\n\n                    // toast.error(res.data.returnValue);\n                    toast.success('Quotation Generated successfully');\n                    this.props.history.push({\n                        pathname: '/PolicyDetailsMerged/' + res.data.policyid + '/1/1',\n                        state: {\n                            Id: res.data.policyid,\n                            tab: 1\n                        }\n                    });\n                } else {\n\n                }\n            }).catch(err => {\n\n            })\n\n        } else {\n            if (this.state.policyNumberError) {\n                this.checkPolicyNumberExists(this.state.policyNumber);\n                return;\n            }\n            if (this.state.countryError) {\n                toast.error(\"Please select country\")\n                return;\n            }\n            if (this.state.policyTypeError) {\n                toast.error(\"Please select policy type\")\n                return;\n            }\n            if (this.state.documentLanguageError) {\n                toast.error(\"Please select document language\")\n                return;\n            }\n            if (this.state.currencyError) {\n                toast.error(\"Please select currency\")\n                return;\n            }\n            if (this.state.policyEffectiveDateError) {\n                toast.error(\"Please select policy effective date\")\n                return;\n            }\n            if (this.state.PolicyDepartmentError) {\n                toast.error(\"Please select policy department\")\n                return;\n            }\n            if (this.state.binderError) {\n                toast.error(\"Please select Binder\")\n                return;\n            }\n            if (this.state.premiumError) {\n                toast.error(\"Please enter Premium\")\n                return;\n            }\n            if (this.state.levyError) {\n                toast.error(\"Please enter Levy\")\n                return;\n            }\n            if (this.state.adminFeeError) {\n                toast.error(\"Please enter AdminFee\")\n                return;\n            }\n            if (this.state.rateError) {\n                toast.error(\"Please enter Rate\")\n                return;\n            }\n            if (this.state.excessError) {\n                toast.error(\"Please enter Excess\")\n                return;\n            }\n            if (this.state.VesselClassError) {\n                toast.error(\"Please select vessel class\")\n                return;\n            }\n            if (this.state.vesselTypeError) {\n                toast.error(\"Please select vessel type\")\n                return;\n            }\n            if (this.state.UseofVesselError) {\n                toast.error(\"Please select Use of vessel\")\n                return;\n            }\n            if (this.state.hullMaterialError) {\n                toast.error(\"Please select hull material\")\n                return;\n            }\n            if (this.state.makeAndModelError) {\n                toast.error(\"Please enter make and model\")\n                return;\n            }\n            if (this.state.lengthError) {\n                toast.error(\"Please enter length\")\n                return;\n            }\n            if (this.state.vesselBuildTypeError) {\n                toast.error(\"Please select vessel built type\")\n                return;\n            }\n            if (this.state.yearBuiltError) {\n                toast.error(\"Please enter year built\")\n                return;\n            }\n            if (this.state.yearPurchasedError) {\n                toast.error(\"Please enter year purchased\")\n                return;\n            }\n            if (this.state.purchasePriceError) {\n                toast.error(\"Please enter purchase price\")\n                return;\n            }\n            if (this.state.sumInsuredError) {\n                toast.error(\"Please enter sum insured\")\n                return;\n            }\n            if (this.state.sumInsuredMethodError) {\n                toast.error(\"Please select sum insured method\")\n                return;\n            }\n            // if (this.state.lastSurveyDateRequired && CommonConfig.isEmpty(this.state.lastSurveyDate)) {\n            //     toast.error(\"Please select Last Survey Date\")\n            //     return;\n            // }\n            if (this.state.whereRegError) {\n                toast.error(\"Please select Where is boat registered\")\n                return;\n            }\n            if (this.state.boatMooredError) {\n                toast.error(\"Please select Where is boat moored\")\n                return;\n            }\n            if (this.state.mooringTypeError) {\n                toast.error(\"Please select mooring type\")\n                return;\n            }\n            if (this.state.mainEngineError) {\n                toast.error(\"Please enter main engine\")\n                return;\n            }\n            if (this.state.mainEngineHpError) {\n                toast.error(\"Please enter main engine HP\")\n                return;\n            }\n            if (this.state.mainEngineYearError) {\n                toast.error(\"Please enter main engine year\")\n                return;\n            }\n            if (this.state.noOfMainEngineError) {\n                toast.error(\"Please select No of main engine\")\n                return;\n            }\n            if (this.state.tarnsmissionMainEngineError) {\n                toast.error(\"Please select Tarnsmission main engine\")\n                return;\n            }\n            if (this.state.maxSpeedError) {\n                toast.error(\"Please enter max speed\")\n                return;\n            }\n            if (this.state.cruisingRangeError) {\n                toast.error(\"Please select cruising range\")\n                return;\n            }\n            if (this.state.PreviousBoatingExperienceError) {\n                toast.error(\"Please select Previous boating experience\")\n                return;\n            }\n            if (this.state.CurrentNCBYearsError) {\n                toast.error(\"Please select your NCB years\")\n                return;\n            }\n            if (this.state.lossesError) {\n                toast.error(\"Please select Any losses in last 5 years ?\")\n                return;\n            }\n            if (this.state.lossesDescribeError) {\n                toast.error(\"Please enter losses description\")\n                return;\n            }\n            if (this.state.convictedError) {\n                toast.error(\"Please select convicted or charged\")\n                return;\n            }\n            if (this.state.convictedDescribeError) {\n                toast.error(\"Please enter convict or charge description\")\n                return;\n            }\n            if (this.state.insurancecanceledError) {\n                toast.error(\"Please select insurance canceled or refused\")\n                return;\n            }\n            if (this.state.insurancecanceledDescribeError) {\n                toast.error(\"Please enter insurance cancelled or refused description\")\n                return;\n            }\n            if (this.state.damagedError) {\n                toast.error(\"Please select Has the vessel ever been damaged?\")\n                return;\n            }\n            if (this.state.damagedDescribeError) {\n                toast.error(\"Please enter description of damage\")\n                return;\n            }\n            if (this.state.thirdPartyLiabilityError) {\n                toast.error(\"Please select third party liability\")\n                return;\n            }\n            // if (this.state.racingEventTypeError) {\n            //     toast.error(\"Please select Racing Event Type\")\n            //     return;\n            // }\n            // if (this.state.crewLiabilityError) {\n            //     toast.error(\"Please select Crew Liability\")\n            //     return;\n            // }\n            if (!this.state.AssumptionAndTerms) {\n                toast.error(\"You must agree to assumption and terms & conditions\")\n                return;\n            }\n            // this.show('country', this.state.countryError);\n            // this.show('policyType', this.state.policyTypeError);\n            // this.show('documentLanguage', this.state.documentLanguageError);\n            // this.show('currency', this.state.currencyError);\n            // this.show('vesselClass', this.state.VesselClassError);\n            // this.show('vesselType', this.state.vesselTypeError);\n            // this.show('UseofVessel', this.state.UseofVesselError);\n            // this.show('hullMaterial', this.state.hullMaterialError);\n            // this.show('makeAndModel', this.state.makeAndModelError);\n            // this.show('length', this.state.lengthError);\n            // this.show('yearBuilt', this.state.yearBuiltError);\n            // this.show('yearPurchased', this.state.yearPurchasedError);\n            // this.show('purchasePrice', this.state.purchasePriceError);\n            // this.show('sumInsured', this.state.sumInsuredError);\n            // this.show('sumInsuredMethod', this.state.sumInsuredMethodError);\n            // this.show('whereReg', this.state.whereRegError);\n            // this.show('boatMoored', this.state.boatMooredError);\n            // this.show('mooringType', this.state.mooringTypeError);\n            // this.show('mainEngine', this.state.mainEngineError);\n            // this.show('mainEngineHp', this.state.mainEngineHpError);\n            // this.show('noOfMainEngine', this.state.noOfMainEngineError);\n            // this.show('mainEngineYear', this.state.mainEngineYearError);\n            // this.show('tarnsmissionMainEngine', this.state.tarnsmissionMainEngineError);\n            // this.show('maxSpeed', this.state.maxSpeedError);\n            // this.show('cruisingRange', this.state.cruisingRangeError);\n            // this.show('PreviousBoatingExperience', this.state.PreviousBoatingExperienceError);\n            // this.show('losses', this.state.lossesError);\n            // this.show('convicted', this.state.convictedError);\n            // this.show('insurancecanceled', this.state.insurancecanceledError);\n            // this.show('damaged', this.state.damagedError);\n            // this.show('racingEventType', this.state.racingEventTypeError);\n            // this.show('crewLiability', this.state.crewLiabilityError);\n            // this.setState({ AssumptionAndTermsError: !this.state.AssumptionAndTerms});\n        }\n    }\n\n    BackToPolicyList() {\n        this.props.history.push({\n            pathname: '/PolicyList',\n        });\n    }\n\n    render() {\n        const { t, i18n } = this.props;\n        const SaveButton = t(\"buttons.Save\");\n        const CancelButton = t(\"buttons.Cancel\");\n        const BackButton = t(\"buttons.BackToPolicy\");\n        const AddButton = t(\"buttons.Add\");\n        const DeleteButton = t(\"buttons.Delete\");\n\n        return (\n            <div>\n                <Col style={{ marginTop: \"20px\" }}>\n                    <div className=\"input-box\">\n                        <Row>\n                            <Col md=\"3\">\n                                <h2>New Policy Quotation</h2><br />\n                                <div className=\"policy-box\">\n                                    <p style={{ width: \"70%\" }}>Policy Number</p>\n                                    <div className=\"pl-inner\">\n                                        {(this.state.changePolicyNumber) ? (\n                                            <span>\n                                                <Input type=\"text\" name=\"policyNumber\" id=\"policyNumber\" onChange={(e) => this.handleChange(e)} onBlur={(e) => this.checkPolicyNumberExists(e.target.value)} value={this.state.policyNumber} style={{ display: \"inline-block\" }} />\n                                                {/* <em id=\"policyNumberError\" className=\"error invalid-feedback\"></em> */}\n                                            </span>\n                                        ) : (\n                                                <span>{this.state.policyNumber}</span>\n                                            )}\n                                        <BTN color=\"primary\" onClick={() => this.editPolicyNumber()} title=\"Change Policy Number\">\n                                            <i className=\"fa fa-pencil\"></i>\n                                        </BTN>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md=\"6\"></Col>\n                            <Col md=\"3\">\n                                <div className=\"input-box\">\n                                    <Row>\n                                        <Col>\n                                            <b>{this.state.Policy_Holder}{this.state.ContactCode}<br /></b>\n                                            {this.state.Policy_Holder_Address}<br />\n                                            {this.state.Policy_Holder_Conatct}<br />\n                                            {this.state.Policy_Holder_Email}\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"9\">\n                                <div className=\"form-heading\">\n                                    <h3>General</h3>\n                                </div>\n                                <Card>\n                                    <CardBody>\n                                        <div className=\"input-box\">\n                                            <Row style={{ verticalAlign: \"center\" }}>\n                                                <Col md=\"2\">\n                                                    <label>Binder Country *</label>\n                                                    <Input type=\"select\" name=\"country\" id=\"country\" onChange={(e) => this.selectType(e.target, 'country')} value={this.state.country}>\n                                                        <option value=''>Select</option>\n                                                        {this.state.countryList.map((type, i) => {\n                                                            return (<option value={type.value}>{type.label}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"countryError\" className=\"error invalid-feedback\"></em>\n                                                </Col>\n\n                                                <Col md=\"3\">\n                                                    <label>Policy Type *</label>\n                                                    <Input type=\"select\" name=\"policyType\" id=\"policyType\" onChange={(e) => this.selectType(e.target, 'policyType')} value={this.state.policyType}>\n                                                        <option value=''>Select</option>\n                                                        {this.state.policyTypeList.map((type, i) => {\n                                                            return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"policyTypeError\" className=\"error invalid-feedback\"></em>\n                                                </Col>\n\n                                                <Col md=\"3\">\n                                                    <label>Document Language *</label>\n                                                    {(this.state.isEditDocLang) ? (\n                                                        <div>\n                                                            <Input type=\"select\" name=\"documentLanguage\" id=\"documentLanguage\" onChange={(e) => this.selectType(e.target, 'documentLanguage')} value={this.state.documentLanguage}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.documentLanguageList.map((type, i) => {\n                                                                    return (<option value={type.value}>{type.label}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"documentLanguageError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                    ) : (\n                                                            <div>\n                                                                {this.state.documentLanguage}\n                                                            </div>\n                                                        )}\n                                                </Col>\n\n                                                {(this.state.isInsert) ? (null) :\n                                                    (\n                                                        <Col md=\"1\" >\n                                                            {(this.state.isEditDocLang) ? (\n                                                                <Button type='button' tooltip=\"Save\" icon=\"fa fa-save\" style={{ float: \"left\", margin: \"3px\" }} color=\"primary\" onClick={() => this.editDocLang('View')} />\n\n                                                            ) : (\n                                                                    <Button type='button' tooltip=\"Edit\" icon=\"fa fa-pencil\" style={{ float: \"left\", margin: \"3px\" }} color=\"primary\" onClick={() => this.editDocLang('Edit')} />\n                                                                )}\n                                                        </Col>\n                                                    )}\n\n                                                <Col md=\"2\">\n                                                    <label>Currency *</label>\n                                                    {(this.state.isEditCurrency) ? (\n                                                        <div>\n                                                            <Input type=\"select\" name=\"currency\" id=\"currency\" onChange={(e) => this.selectType(e.target, 'currency')} value={this.state.currency}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.currencyList.map((type, i) => {\n                                                                    return (<option value={type.value}>{type.label}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"currencyError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                    ) : (\n                                                            <div>\n                                                                {this.state.currency}\n                                                            </div>\n                                                        )}\n                                                </Col>\n                                                <Col md=\"2\" style={{ alignSelf: \"center\" }}>\n                                                    <h5>Refer<Input type=\"checkbox\" name=\"refer\" id=\"refer\" value={this.state.refer} style={{ marginLeft: \"3px\" }} checked={this.state.refer == true ? \"checked\" : \"\"} onChange={(e) => this.handleChange(e)} />\n                                                        <em id=\"referError\" className=\"error invalid-feedback\"></em>\n                                                    </h5>\n                                                </Col>\n                                                {(this.state.isInsert) ? (null) :\n                                                    (\n                                                        <Col md=\"1\">\n                                                            {(this.state.isEditCurrency) ? (\n                                                                <Button type='button' tooltip=\"Save\" icon=\"fa fa-save\" style={{ float: \"left\", margin: \"3px\" }} color=\"primary\" onClick={() => this.editCurrency('View')} />\n\n                                                            ) : (\n                                                                    <Button type='button' tooltip=\"Edit\" icon=\"fa fa-pencil\" style={{ float: \"left\", margin: \"3px\" }} color=\"primary\" onClick={() => this.editCurrency('Edit')} />\n                                                                )}\n                                                        </Col>\n                                                    )}\n                                            </Row>\n                                        </div>\n                                        <div className=\"input-box\">\n                                            <Row>\n                                                <Col md=\"3\">\n                                                    <label>Policy Effective Date</label>\n                                                    <div>\n                                                        {/* <DatePicker name=\"policyEffectiveDate\" onChange={e => this.setState({ policyEffectiveDate: e })}\n                                                            value={this.state.policyEffectiveDate} className=\"policyEffectiveDate\" calendarClassName=\"\" minDate={moment().toDate()}\n                                                        /> */}\n                                                        <Input type=\"date\" name=\"policyEffectiveDate\" id=\"policyEffectiveDate\" placeholder=\"Date of Birth\" onBlur={(e) => this.handleChange(e)}\n                                                            onChange={(e) => this.handleChange(e)} value={this.state.policyEffectiveDate}\n                                                            min={moment().format('YYYY-MM-DD')}\n                                                        // max={moment().subtract(12, 'years').format('YYYY-MM-DD')}\n                                                        />\n                                                        <em id=\"policyEffectiveDateError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n                                                <Col md=\"3\">\n                                                    <label>{t(\"policyUnderwriting:Department.label\")} *</label>\n                                                    <div>\n                                                        <Input type=\"select\" name=\"PolicyDepartment\" disabled={this.state.departmentDisable == true ? true : false} id=\"PolicyDepartment\" onChange={(e) => this.selectType(e.target.value, 'PolicyDepartment')} value={this.state.PolicyDepartment}>\n                                                            <option value=''>{t(\"policyUnderwriting:Department.defaultValue\")}</option>\n                                                            {this.state.departmentList.map((ct, i) => {\n                                                                return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"PolicyDepartmentError\" className=\"error invalid-feedback\" ></em>\n                                                    </div>\n                                                </Col>\n                                                {(this.state.sourceDisplay) ?\n                                                    <Col md=\"3\">\n                                                        <label>{t(\"policyUnderwriting:Source.label\")}</label>\n                                                        <div>\n                                                            <Select name=\"source\" id=\"source\" options={this.state.sourceList} value={this.state.source} onChange={(data) => this.selectType(data, 'source')} placeholder={t(\"policyUnderwriting:Source.defaultValue\")} />\n                                                            <em id=\"sourceError\" className=\"error invalid-feedback\"></em>\n                                                            {/* <Input type=\"select\" name=\"source\" disabled={this.state.sourceDisable == true ? true : false} id=\"source\" onChange={(e) => this.selectType(e.target.value, 'source')} value={this.state.source}>\n                                                                <option value=''>{t(\"policyUnderwriting:Source.defaultValue\")}</option>\n                                                                {this.state.sourceList.map((ct, i) => {\n                                                                    return (<option value={ct.OrganizationId} key={i}>{ct.OrganizationName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"sourceError\" className=\"error invalid-feedback\" ></em> */}\n                                                        </div>\n                                                    </Col>\n                                                    : null}\n                                                <Col md=\"2\" style={{ alignSelf: \"center\" }}>\n                                                    <h6>Third Party Only<Input type=\"checkbox\" name=\"TPO\" id=\"TPO\" value={this.state.TPO} style={{ marginLeft: \"3px\" }} checked={this.state.TPO == true ? \"checked\" : \"\"} onChange={(e) => this.handleChange(e)} />\n                                                        <em id=\"TPOError\" className=\"error invalid-feedback\"></em>\n                                                    </h6>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                            {(this.state.isShowNonRateParams == 1)\n                                ? (<Col md=\"3\">\n                                    <div className=\"form-heading\">\n                                        <h3>Non Rated Policy Params</h3>\n                                    </div>\n                                    <Card>\n                                        <CardBody>\n                                            <div className=\"input-box\">\n                                                <Row style={{ verticalAlign: \"center\" }}>\n                                                    <Col md=\"12\">\n                                                        <label>Rate *</label>\n                                                        <Input type=\"text\" name=\"rate\" id=\"rate\" onChange={(e) => this.handleChange(e)} value={this.state.rate} />\n                                                        <em id=\"rateError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"12\">\n                                                        <label>Excess *</label>\n                                                        <Input type=\"text\" name=\"excess\" id=\"excess\" onChange={(e) => this.handleChange(e)} value={this.state.excess} />\n                                                        <em id=\"excessError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>)\n                                : (null)}\n                            {(this.state.policyType == 'MarineTrade' || this.state.policyType == 'MultiVessel' || this.state.policyType == 'Engineering')\n                                ? (<Col md=\"3\">\n                                    <div className=\"form-heading\">\n                                        <h3>\n                                            {(this.state.policyType == 'MarineTrade')?'Marine Trade':(this.state.policyType == 'MultiVessel')?'Multi Vessel':'Engineering'} Params\n                                        </h3>\n                                    </div>\n                                    <Card>\n                                        <CardBody>\n                                            <div className=\"input-box\">\n                                                <Row style={{ verticalAlign: \"center\" }}>\n                                                    <Col md=\"12\">\n                                                        <label>Binder *</label>\n                                                        <Input type=\"select\" name=\"binder\" id=\"binder\" onChange={(e) => this.selectType(e.target, 'binder')} value={this.state.binder}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.binderList.map((type, i) => {\n                                                                return (<option value={type.value}>{type.label}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"binderError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"12\">\n                                                        <label>Premium *</label>\n                                                        <Input type=\"text\" name=\"premium\" id=\"premium\" onChange={(e) => this.handleChange(e)} value={this.state.premium} />\n                                                        <em id=\"excessError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"12\">\n                                                        <label>Levy *</label>\n                                                        <Input type=\"text\" name=\"levy\" id=\"levy\" onChange={(e) => this.handleChange(e)} value={this.state.levy} />\n                                                        <em id=\"excessError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"12\">\n                                                        <label>Admin Fee *</label>\n                                                        <Input type=\"text\" name=\"adminFee\" id=\"adminFee\" onChange={(e) => this.handleChange(e)} value={this.state.adminFee} />\n                                                        <em id=\"excessError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"12\">\n                                                        <label>Total</label>\n                                                        <Input type=\"text\" name=\"total\" id=\"total\" onChange={(e) => this.handleChange(e)} value={this.state.total} readOnly />\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>)\n                                : (null)}\n                        </Row>\n                        {(this.state.conditionalVessel) ?\n                            (<Row>\n                                <Col md=\"12\">\n                                    <div className=\"form-heading\">\n                                        <h3>Vessel</h3>\n                                    </div>\n                                    <Card>\n                                        <CardBody>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"3\">\n                                                        <label>Class *</label>\n                                                        <Select name=\"vesselClass\" id=\"vesselClass\" options={this.state.VesselClassList} value={this.state.vesselClass} onChange={(data) => this.selectType(data, 'vesselClass')} placeholder=\"Select\"\n                                                        />\n                                                        <em id=\"whereRegError\" className=\"error invalid-feedback\"></em>\n\n                                                        {/* <Input type=\"select\" name=\"vesselClass\" id=\"vesselClass\" onChange={(e) => this.selectType(e.target, 'vesselClass')} value={this.state.vesselClass}>\n                                                        <option value=''>Select</option>\n                                                        {this.state.VesselClassList.map((type, i) => {\n                                                            return (<option value={type.value}>{type.label}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"vesselClassError\" className=\"error invalid-feedback\"></em> */}\n                                                    </Col>\n\n                                                    <Col md=\"3\">\n                                                        <label>Type *</label>\n                                                        <Select name=\"vesselType\" id=\"vesselType\" options={this.state.vesselTypeList} value={this.state.vesselType} onChange={(data) => this.selectType(data, 'vesselType')} placeholder=\"Select\"\n                                                        />\n                                                        <em id=\"vesselTypeError\" className=\"error invalid-feedback\"></em>\n\n                                                        {/* <Input type=\"select\" name=\"vesselType\" id=\"vesselType\" onChange={(e) => this.selectType(e.target, 'vesselType')} value={this.state.vesselType}>\n                                                        <option value=''>Select</option>\n                                                        {this.state.vesselTypeList.map((type, i) => {\n                                                            return (<option value={type.value}>{type.label}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"vesselTypeError\" className=\"error invalid-feedback\"></em> */}\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Vessel Name</label>\n                                                        <Input type=\"text\" name=\"vesselName\" id=\"vesselName\" onChange={(e) => this.handleChange(e)} value={this.state.vesselName} placeholder=\"Vessel Name\" />\n                                                        <em id=\"vesselNameError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Use of Vessel *</label>\n                                                        <Input type=\"select\" name=\"UseofVessel\" id=\"UseofVessel\" onChange={(e) => this.selectType(e.target.value, 'UseofVessel')} value={this.state.UseofVessel}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.UseofVesselList.map((type, i) => {\n                                                                return (<option value={type.Description}>{type.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"UseofVesselError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Hull Material *</label>\n                                                        <Input type=\"select\" name=\"hullMaterial\" id=\"hullMaterial\" onChange={(e) => this.selectType(e.target.value, 'hullMaterial')} value={this.state.hullMaterial}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.hullMaterialList.map((type, i) => {\n                                                                return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"hullMaterialError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>Make & Model *</label>\n                                                        <Input type=\"text\" name=\"makeAndModel\" id=\"makeAndModel\" onChange={(e) => this.handleChange(e)} value={this.state.makeAndModel} placeholder=\"Make & Model\" />\n                                                        <em id=\"makeAndModelError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <label>Length (meters) *</label>\n                                                        <Input type=\"text\" name=\"length\" id=\"length\" onChange={(e) => this.handleChange(e)} value={this.state.length} placeholder=\"Length (meters)\" />\n                                                        <em id=\"lengthError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <label>Type of Build *</label>\n                                                        <Input type=\"select\" name=\"vesselBuildType\" id=\"vesselBuildType\"\n                                                            value={this.state.vesselBuildType} onChange={(e) => this.selectType(e.target.value, 'vesselBuildType')}\n                                                        >\n                                                            <option value=''>Select</option>\n                                                            {this.state.vesselBuildTypearr.map((type, i) => {\n                                                                return (<option value={type.StringMapName} key={i}>{type.Description}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"vesselBuildTypeError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <label>Year Built *</label>\n                                                        <Input type=\"text\" name=\"yearBuilt\" id=\"yearBuilt\" onChange={(e) => this.handleChange(e)} value={this.state.yearBuilt} placeholder=\"Year Built\" />\n                                                        <em id=\"yearBuiltError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <label>Year Purchased *</label>\n                                                        <Input type=\"text\" name=\"yearPurchased\" id=\"yearPurchased\" onChange={(e) => this.handleChange(e)} value={this.state.yearPurchased} placeholder=\"Year Purchased\" />\n                                                        <em id=\"yearPurchasedError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <label>Purchase Price *</label>\n                                                        <Input type=\"text\" name=\"purchasePrice\" id=\"purchasePrice\" onChange={(e) => this.handleChange(e)} value={this.state.purchasePrice} placeholder=\"Purchase Price\" />\n                                                        <em id=\"purchasePriceError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>Sum Insured *</label>\n                                                        <Input type=\"text\" name=\"sumInsured\" id=\"sumInsured\" onChange={(e) => this.handleChange(e)} value={this.state.sumInsured} placeholder=\"Sum Insured\" />\n                                                        <em id=\"sumInsuredError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <label>Sum Insured Method *</label>\n                                                        <Input type=\"select\" name=\"sumInsuredMethod\" id=\"sumInsuredMethod\" onChange={(e) => this.selectType(e.target.value, 'sumInsuredMethod')} value={this.state.sumInsuredMethod}>\n                                                            {this.state.sumInsuredMethodList.map((type, i) => {\n                                                                return (<option value={type.Description}>{type.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"sumInsuredMethodError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"3\">\n                                                        <label>Last Survey Date {(this.state.lastSurveyDateRequired) ? '*' : (null)}</label>\n                                                        {/* <DatePicker name=\"lastSurveyDate\" onChange={e => this.setState({ lastSurveyDate: e })}\n                                                        value={this.state.lastSurveyDate} className=\"\" id=\"lastSurveyDate\" calendarClassName=\"\" maxDate={moment().toDate()}\n                                                    /> */}\n                                                        <Input type=\"date\" name=\"lastSurveyDate\" id=\"lastSurveyDate\" placeholder=\"Date of Birth\" onBlur={(e) => this.handleChange(e)}\n                                                            onChange={(e) => this.handleChange(e)} value={this.state.lastSurveyDate}\n                                                            min={moment().subtract(5, 'years').format('YYYY-MM-DD')}\n                                                            max={moment().format('YYYY-MM-DD')}\n                                                        />\n                                                        <em id=\"lastSurveyDateError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"3\">\n                                                        <label>Where is boat registered? *</label>\n                                                        <Select name=\"whereReg\" id=\"whereReg\" options={this.state.whereRegList} value={this.state.whereReg} onChange={(data) => this.selectType(data, 'whereReg')} placeholder=\"Select\"\n                                                        />\n                                                        <em id=\"whereRegError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"4\">\n                                                        <label>Where is the boat Moored? *</label>\n                                                        <Select name=\"boatMoored\" id=\"boatMoored\" options={this.state.boatMooredList} value={this.state.boatMoored} onChange={(data) => this.selectType(data, 'boatMoored')} placeholder=\"Select\"\n                                                        />\n                                                        <em id=\"boatMooredError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <label>Mooring Type *</label>\n                                                        <Input type=\"select\" name=\"mooringType\" id=\"mooringType\" onChange={(e) => this.selectType(e.target, 'mooringType')} value={this.state.mooringType}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.mooringTypeList.map((type, i) => {\n                                                                return (<option value={type.value}>{type.label}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"mooringTypeError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>)\n                            : (null)}\n\n                        {(this.state.conditionalEngine)\n                            ?\n                            (<Row>\n                                <Col md=\"12\">\n                                    <div className=\"form-heading\">\n                                        <h3>Engine & Trailer Details</h3>\n                                    </div>\n                                    <Card>\n                                        <CardBody>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>Main Engine(s) *</label>\n                                                        <Input type=\"text\" name=\"mainEngine\" id=\"mainEngine\" placeholder=\"Main Engine(s)\" onChange={(e) => this.handleChange(e)} value={this.state.mainEngine} />\n                                                        <em id=\"mainEngineError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"1\">\n                                                        <label>HP *</label>\n                                                        <Input type=\"text\" name=\"mainEngineHp\" id=\"mainEngineHp\" onChange={(e) => this.handleChange(e)} value={this.state.mainEngineHp} />\n                                                        <em id=\"mainEngineHpError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Year *</label>\n                                                        <Input type=\"text\" name=\"mainEngineYear\" id=\"mainEngineYear\" onChange={(e) => this.handleChange(e)} value={this.state.mainEngineYear} />\n                                                        <em id=\"mainEngineYearError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"3\">\n                                                        <div className=\"input-box\">\n                                                            <label>{this.state.mainengineSerialNoLabel}</label>\n                                                            <Input type=\"text\" name=\"mainEngineSerialNo\" id=\"mainEngineSerialNo\"\n                                                                onChange={(e) => this.handleChange(e)} value={this.state.mainEngineSerialNo}\n                                                            // onBlur={(e) => this.handleChange(e)}\n                                                            >\n                                                            </Input>\n                                                            <em id=\"documentLanguageError\" className=\"error invalid-feedback\"></em>\n                                                            <em className=\"error invalid-feedback\" >Please enter serial number of Main Engine</em>\n                                                        </div>\n                                                    </Col>\n\n                                                    <Col md=\"2\" >\n                                                        <label>No of Engines *</label>\n                                                        <Input type=\"select\" name=\"noOfMainEngine\" id=\"noOfMainEngine\" onChange={(e) => this.selectType(e.target.value, 'noOfMainEngine')} value={this.state.noOfMainEngine}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.noOfEngineList.map((type, i) => {\n                                                                return (<option value={type.Description}>{type.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"noOfMainEngineError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Transmission *</label>\n                                                        <Input type=\"select\" name=\"tarnsmissionMainEngine\" id=\"tarnsmissionMainEngine\" onChange={(e) => this.selectType(e.target.value, 'tarnsmissionMainEngine')} value={this.state.tarnsmissionMainEngine}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.tarnsmissionMainEngineList.map((type, i) => {\n                                                                return (<option value={type.Description}>{type.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"tarnsmissionMainEngineError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>Auxiliary Engine</label>\n                                                        <Input type=\"text\" name=\"auxiliaryEngine\" id=\"auxiliaryEngine\" placeholder=\"Auxiliary Engine\" onChange={(e) => this.handleChange(e)} value={this.state.auxiliaryEngine} />\n                                                        <em id=\"auxiliaryEngineError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"1\">\n                                                        <label>HP</label>\n                                                        <Input type=\"text\" name=\"auxiliaryEngineHp\" id=\"auxiliaryEngineHp\" onChange={(e) => this.handleChange(e)} value={this.state.auxiliaryEngineHp} />\n                                                        <em id=\"auxiliaryEngineHpError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Year</label>\n                                                        <Input type=\"text\" name=\"auxiliaryEngineYear\" id=\"auxiliaryEngineYear\" onChange={(e) => this.handleChange(e)} value={this.state.auxiliaryEngineYear} />\n                                                        <em id=\"auxiliaryEngineYearError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"3\">\n                                                        <div className=\"input-box\">\n                                                            <label>{this.state.auxiliaryEngineSerialNoLabel}</label>\n                                                            <Input type=\"text\" name=\"auxiliaryEngineSerialNo\" id=\"auxiliaryEngineSerialNo\"\n                                                                onChange={(e) => this.handleChange(e)} value={this.state.auxiliaryEngineSerialNo}\n                                                            // onBlur={(e) => this.handleChange(e)}\n                                                            >\n                                                            </Input>\n                                                            <em className=\"error invalid-feedback\" >Please enter serial number of auxiliary engine</em>\n                                                        </div>\n                                                    </Col>\n\n                                                    <Col md=\"2\" >\n                                                        <label>No of Engines</label>\n                                                        <Input type=\"select\" name=\"noOfAuxiliaryEngine\" id=\"noOfAuxiliaryEngine\" onChange={(e) => this.selectType(e.target.value, 'noOfAuxiliaryEngine')} value={this.state.noOfAuxiliaryEngine}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.noOfEngineList.map((type, i) => {\n                                                                return (<option value={type.value}>{type.label}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"noOfAuxiliaryEngineError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\" >\n                                                        <label>Transmission</label>\n                                                        <Input type=\"select\" name=\"auxiliaryEngineTransmission\" id=\"auxiliaryEngineTransmission\" onChange={(e) => this.selectType(e.target.value, 'auxiliaryEngineTransmission')} value={this.state.auxiliaryEngineTransmission}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.tarnsmissionMainEngineList.map((type, i) => {\n                                                                return (<option value={type.value}>{type.label}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"auxiliaryEngineTransmissionError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>Max Speed (Knots)*</label>\n                                                        <Input type=\"text\" name=\"maxSpeed\" id=\"maxSpeed\" placeholder=\"Max Speed\" onChange={(e) => this.handleChange(e)} value={this.state.maxSpeed} />\n                                                        <em id=\"maxSpeedError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Make of Trailer</label>\n                                                        <Input type=\"text\" name=\"makeofTrailer\" id=\"makeofTrailer\" placeholder=\"Make of Trailer\" onChange={(e) => this.handleChange(e)} value={this.state.makeofTrailer} />\n                                                        <em id=\"makeofTrailerError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <label>Trailer Serial No.</label>\n                                                        <Input type=\"text\" name=\"trailerSerialNo\" id=\"trailerSerialNo\" placeholder=\"Trailer Serial No.\" onChange={(e) => this.handleChange(e)} value={this.state.trailerSerialNo} />\n                                                        <em id=\"trailerSerialNoError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>)\n                            : (null)}\n\n                        {(this.state.conditionalNavigation) ?\n                            (<Row>\n                                <Col md=\"12\">\n                                    <div className=\"form-heading\">\n                                        <h3>Navigational Limits</h3>\n                                    </div>\n                                    <Card>\n                                        <CardBody>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"11\">\n                                                        <label>Cruising Range *</label>\n                                                        <Select name=\"cruisingRange\" id=\"cruisingRange\" options={this.state.cruisingRangeList} value={this.state.cruisingRange} onChange={(data) => this.selectType(data, 'cruisingRange')} placeholder=\"Select\" />\n                                                        <em id=\"cruisingRangeError\" className=\"error invalid-feedback\"></em>\n\n                                                        {/* <Input type=\"select\" name=\"cruisingRange\" id=\"cruisingRange\" placeholder=\"Cruising Range\" onChange={(e) => this.selectType(e.target, 'cruisingRange')} value={this.state.cruisingRange}>\n                                                        <option value=''>Select</option>\n                                                        {this.state.cruisingRangeList.map((ct, i) => {\n                                                            return (<option value={ct.StringMapKey}>{ct.Description}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"cruisingRangeError\" className=\"error invalid-feedback\"></em> */}\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"9\">\n                                                        <label>Additional Cruising Range</label>\n                                                        <InputTextarea style={{ width: \"100%\" }} rows={1} autoResize={true} name=\"additionalCruisingRange\" id=\"additionalCruisingRange\" placeholder=\"Additional Cruising Range\" onChange={(e) => this.handleChange(e)} value={this.state.additionalCruisingRange} />\n                                                        <em id=\"additionalCruisingRangeError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>)\n                            : (null)}\n\n                        {(this.state.conditionalGeneral) ?\n                            (<Row>\n                                <Col md=\"12\">\n                                    <div className=\"form-heading\">\n                                        <h3>General Questions</h3>\n                                    </div>\n                                    <Card>\n                                        <CardBody>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"4\">\n                                                        <label>Previous Boating Experience (Years)*</label>\n                                                        <div>\n                                                            <Input type=\"select\" style={{ float: \"left\", marginRight: \"8px\" }} name=\"PreviousBoatingExperience\" id=\"PreviousBoatingExperience\" onChange={(e) => this.selectType(e.target.value, 'PreviousBoatingExperience')} value={this.state.PreviousBoatingExperience}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.PreviousBoatingExperienceList.map((ct, i) => {\n                                                                    return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"PreviousBoatingExperienceError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                    </Col>\n                                                    <Col md=\"3\">\n                                                        <label>Select your NCB (Years)*</label>\n                                                        <div>\n                                                            <Input type=\"select\" style={{ float: \"left\", marginRight: \"8px\" }} name=\"CurrentNCBYears\" id=\"CurrentNCBYears\" onChange={(e) => this.selectType(e.target.value, 'CurrentNCBYears')} value={this.state.CurrentNCBYears}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.CurrentNCBYearsList.map((ct, i) => {\n                                                                    return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"CurrentNCBYearsError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                    </Col>\n                                                    <Col md=\"3\">\n                                                        <div className=\"input-box\">\n                                                            <label>{t(\"policyGeneral:previousInsurer.label\")}</label>\n\n\n                                                            <AutoComplete placeholder=\"Previous Insurer Name\" value={this.state.previousInsurer} id='previousInsurer' onChange={(e) => this.setState({ previousInsurer: e.value },\n                                                                this.changePreviousInsurer(e.value))} suggestions={this.state.previousInsurerSuggestions} completeMethod={this.suggestPreviousInsurer.bind(this)} />\n                                                            <em id=\"previousInsurerError\" className=\"error invalid-feedback\" ></em>\n\n\n                                                            {/* <Input type=\"select\" name=\"previousInsurer\" id=\"previousInsurer\" onChange={(e) => this.selectType(e.target.value, 'previousInsurer')} value={this.state.previousInsurer}>\n                                                            <option value=''>{t(\"policyGeneral:previousInsurer.defaultValue\")}</option>\n                                                            {this.state.previousInsurerList.map((ct, i) => {\n                                                                return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\n                                                            })}\n                                                        </Input>\n                                                        <em id =\"previousInsurerError\" className=\"error invalid-feedback\" ></em> */}\n                                                        </div>\n                                                    </Col>\n\n                                                    <Col md=\"2\">\n                                                        <div className=\"input-box\">\n                                                            <label>Previous Policy No.</label>\n                                                            <Input type=\"text\" placeholder=\"Previous Policy\" name=\"previousPolicyNo\" id=\"previousPolicyNo\" onChange={(e) => this.handleChange(e)} value={this.state.previousPolicyNo}></Input>\n                                                            <em id=\"previousPolicyNoError\" className=\"error invalid-feedback\" ></em>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"4\">\n                                                        <label>{t(\"policyGeneral:boatingQualifications.label\")}</label>\n                                                        <div>\n                                                            <Input type=\"select\" name=\"boatingQualifications\" id=\"boatingQualifications\" onChange={(e) => this.selectType(e.target.value, 'boatingQualifications')} value={this.state.boatingQualifications}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.boatingQualificationList.map((ct, i) => {\n                                                                    return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"boatingQualificationsError\" className=\"error invalid-feedback\"></em>\n                                                            <div>\n                                                                <table className=\"added-detail-table\" style={{ marginTop: \"10px\" }}>\n                                                                    <tbody>\n                                                                        {this.state.boatingQualificationsArr.map((bqa, i) => {\n                                                                            return (\n                                                                                <tr>\n                                                                                    <td>\n                                                                                        {(bqa.BoatingQualificationName)}\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <span>\n                                                                                            <BTN type='button' tooltip=\"Delete\" color=\"danger\" onClick={() => this.delete(bqa)}>\n                                                                                                <i className=\"fa fa-trash\"></i>\n                                                                                            </BTN>\n                                                                                        </span>\n                                                                                    </td>\n                                                                                </tr>\n                                                                            )\n                                                                        })}\n                                                                    </tbody>\n                                                                </table>\n                                                            </div>\n                                                        </div>\n                                                    </Col>\n                                                    <Col md=\"1\">\n                                                        <div className=\"add-btn\">\n                                                            <Button type='button' tooltip=\"Add\" icon=\"fa fa-plus\" color=\"primary\" onClick={() => this.ValidateAndAddBoatingQualification()} />\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"6\">\n                                                        <label>Any Losses in last 5 years? *</label>\n                                                        <div>\n                                                            <Input type=\"select\" name=\"losses\" id=\"losses\" onChange={(e) => this.selectType(e.target.value, 'losses')} value={this.state.losses}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.Options.map((ct, i) => {\n                                                                    return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"lossesError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                        {(this.state.showLossesDescribe) ? (\n                                                            <label>Describe</label>\n                                                        ) : (\n                                                                null\n                                                            )}\n\n                                                        <div>\n                                                            {(this.state.showLossesDescribe) ? (\n                                                                <div>\n                                                                    <InputTextarea style={{ width: \"100%\" }} rows={1} autoResize={true} name=\"lossesDescribe\" id=\"lossesDescribe\" onChange={(e) => this.handleChange(e)} value={this.state.lossesDescribe} />\n                                                                    <em id=\"lossesDescribeError\" className=\"error invalid-feedback\"></em>\n                                                                </div>\n                                                            ) : (\n                                                                    null\n                                                                )}\n                                                            {/* {(this.state.lossesDescribeError) ? (\n                                                        ) : (\n                                                                null\n                                                            )} */}\n                                                        </div>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <label>Has been Convicted or Charged? *</label>\n                                                        <div>\n                                                            <Input type=\"select\" name=\"convicted\" id=\"convicted\" onChange={(e) => this.selectType(e.target.value, 'convicted')} value={this.state.convicted}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.Options.map((ct, i) => {\n                                                                    return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"convictedError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n\n                                                        {(this.state.showconvictedDescribe) ? (\n                                                            <label>Describe</label>\n                                                        ) : (\n                                                                null\n                                                            )}\n                                                        <div>\n                                                            {(this.state.showconvictedDescribe) ? (\n                                                                <div>\n                                                                    <InputTextarea style={{ width: \"100%\" }} rows={1} cols={30} autoResize={true} name=\"convictedDescribe\" id=\"convictedDescribe\" onChange={(e) => this.handleChange(e)} value={this.state.convictedDescribe} />\n                                                                    <em id=\"convictedDescribeError\" className=\"error invalid-feedback\" style={{ display: \"block\" }}></em>\n                                                                </div>\n                                                            ) : (\n                                                                    null\n                                                                )}\n                                                            {/* {(this.state.convictedDescribeError) ? (\n                                                            \n                                                            // <em className=\"error invalid-feedback\" style={{ display: \"block\" }}>Please enter convicted or charged describe</em>\n                                                        ) : (\n                                                                null\n                                                            )} */}\n\n                                                        </div>\n\n                                                    </Col>\n                                                </Row>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"6\">\n                                                        <label>Has the Insurance been canceled or refused? *</label>\n                                                        <div>\n                                                            <Input type=\"select\" name=\"insurancecanceled\" id=\"insurancecanceled\" onChange={(e) => this.selectType(e.target.value, 'insurancecanceled')} value={this.state.insurancecanceled}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.Options.map((ct, i) => {\n                                                                    return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"insurancecanceledError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                        {(this.state.showinsurancecanceledDescribe) ? (\n                                                            <label>Describe</label>\n                                                        ) : (\n                                                                null\n                                                            )}\n                                                        <div>\n                                                            {(this.state.showinsurancecanceledDescribe) ? (\n                                                                <div>\n                                                                    <InputTextarea style={{ width: \"100%\" }} rows={1} cols={30} autoResize={true} name=\"insurancecanceledDescribe\" id=\"insurancecanceledDescribe\" onChange={(e) => this.handleChange(e)} value={this.state.insurancecanceledDescribe} />\n                                                                    <em id=\"insurancecanceledDescribeError\" className=\"error invalid-feedback\" style={{ display: \"block\" }}></em>\n                                                                </div>\n                                                            ) : (\n                                                                    null\n                                                                )}\n                                                            {/* {(this.state.insurancecanceledDescribeError) ? (\n                                                            \n                                                            // <em className=\"error invalid-feedback\" style={{ display: \"block\" }}>Please enter insurance canceled or refused describe</em>\n                                                        ) : (\n                                                                null\n                                                            )} */}\n\n                                                        </div>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <label>Has the vessel ever been damaged? *</label>\n                                                        <div>\n                                                            <Input type=\"select\" name=\"damaged\" id=\"damaged\" onChange={(e) => this.selectType(e.target.value, 'damaged')} value={this.state.damaged}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.Options.map((ct, i) => {\n                                                                    return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"damagedError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                        {(this.state.showdamagedDescribe) ? (\n                                                            <label>Describe</label>\n                                                        ) : (\n                                                                null\n                                                            )}\n                                                        <div>\n                                                            {(this.state.showdamagedDescribe) ? (\n                                                                <div>\n                                                                    <InputTextarea style={{ width: \"100%\" }} rows={1} cols={30} autoResize={true} name=\"damagedDescribe\" id=\"damagedDescribe\" onChange={(e) => this.handleChange(e)} value={this.state.damagedDescribe} />\n                                                                    <em id=\"damagedDescribeError\" className=\"error invalid-feedback\" style={{ display: \"block\" }}></em>\n                                                                </div>\n                                                            ) : (\n                                                                    null\n                                                                )}\n                                                            {/* {(this.state.damagedDescribeError) ? (\n                                                            \n                                                            // <em className=\"error invalid-feedback\" style={{ display: \"block\" }}>Please enter damaged describe</em>\n                                                        ) : (\n                                                                null\n                                                            )} */}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>)\n                            : (null)}\n\n                        {(this.state.conditionalLimits) ?\n                            (<Row>\n                                <Col md=\"12\">\n                                    <div className=\"form-heading\">\n                                        <h3>Limits / Additional Cover</h3>\n                                    </div>\n                                    <Card>\n                                        <CardBody>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"3\">\n                                                        <label>Third Party Liability *</label>\n                                                        <div>\n                                                            <Input type=\"select\" name=\"thirdPartyLiability\" id=\"thirdPartyLiability\" onChange={(e) => this.selectType(e.target.value, 'thirdPartyLiability')} value={this.state.thirdPartyLiability}>\n                                                                <option value=''>Select</option>\n                                                                {this.state.ThirdPartyLiabilityList.map((type, i) => {\n                                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"thirdPartyLiabilityError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            {(this.state.DisplayWater == 1) ?\n                                                (\n                                                    <div>\n                                                        <div className=\"input-box\">\n                                                            <Row>\n                                                                <Col md=\"2\">\n                                                                    <label>Water Skiing Liability</label>\n                                                                </Col>\n                                                                <Col md=\"2\">\n\n                                                                    <div>\n                                                                        <Input type=\"checkbox\" name=\"isWaterSkiing\" id=\"isWaterSkiing\" onChange={(e) => this.handleChange(e)} value={this.state.isWaterSkiing} />\n                                                                        {this.state.isWaterSkiing ? (\n                                                                            <Input type=\"text\" name=\"waterSkiingLiability\" id=\"waterSkiingLiability\" onChange={(e) => this.handleChange(e)} value={this.state.waterSkiingLiability} readOnly />\n                                                                        ) : (null)}\n                                                                        <em id=\"waterSkiingLiabilityError\" className=\"error invalid-feedback\"></em>\n                                                                    </div>\n\n                                                                </Col>\n                                                            </Row>\n                                                        </div>\n                                                        <div className=\"input-box\">\n                                                            <Row>\n                                                                <Col md=\"2\">\n                                                                    <label>Water Toys Liabiility</label>\n                                                                </Col>\n                                                                <Col md=\"2\">\n\n                                                                    <div>\n                                                                        <Input type=\"checkbox\" name=\"isWaterToys\" id=\"isWaterToys\" onChange={(e) => this.handleChange(e)} value={this.state.isWaterToys} />\n                                                                        {this.state.isWaterToys ? (\n                                                                            <Input type=\"text\" name=\"waterToysLiability\" id=\"waterToysLiability\" onChange={(e) => this.handleChange(e)} value={this.state.waterToysLiability} readOnly />\n                                                                        ) : (null)}\n                                                                        <em id=\"waterToysLiabilityError\" className=\"error invalid-feedback\"></em>\n                                                                    </div>\n\n                                                                </Col>\n                                                            </Row>\n                                                        </div>\n                                                    </div>\n                                                ) : (null)}\n                                            {(this.state.DisplayRacing == 1) ?\n                                                (\n                                                    <div>\n                                                        <div className=\"input-box\">\n                                                            <Row>\n                                                                <Col md=\"3\">\n                                                                    <label>Sail Racing Coverage Required?</label>\n                                                                </Col>\n                                                                <Col md=\"2\">\n\n                                                                    <div>\n                                                                        <Input type=\"checkbox\" name=\"isSailRacing\" id=\"isSailRacing\" onChange={(e) => this.handleChange(e)} value={this.state.isSailRacing} />\n                                                                        {this.state.isSailRacing ? (\n                                                                            <Input type=\"text\" name=\"sailRacingCoverage\" id=\"sailRacingCoverage\" onChange={(e) => this.handleChange(e)} value={this.state.sailRacingCoverage} />\n                                                                        ) : (null)}\n                                                                        <em id=\"sailRacingCoverageError\" className=\"error invalid-feedback\"></em>\n                                                                    </div>\n\n                                                                </Col>\n                                                            </Row>\n                                                        </div>\n                                                    </div>\n                                                ) : (null)}\n\n\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    {(this.state.DisplayRacing == 1) ?\n                                                        (\n                                                            <Col md=\"4\">\n                                                                <label>Racing Event Type *</label>\n                                                                <div>\n                                                                    <Input type=\"select\" name=\"racingEventType\" id=\"racingEventType\" onChange={(e) => this.selectType(e.target.value, 'racingEventType')} value={this.state.racingEventType}>\n                                                                        <option value=''>Select</option>\n                                                                        {this.state.RacingEventTypeList.map((type, i) => {\n                                                                            return (<option value={type.value}>{type.label}</option>)\n                                                                        })\n                                                                        }\n                                                                    </Input>\n                                                                    <em id=\"racingEventTypeError\" className=\"error invalid-feedback\"></em>\n                                                                </div>\n                                                            </Col>\n                                                        ) : (null)}\n                                                    {(this.state.DisplayCrew == 1) ?\n                                                        (\n                                                            <Col md=\"2\">\n                                                                <label>Crew Liability? *</label>\n                                                                <div>\n                                                                    <Input type=\"select\" name=\"crewLiability\" id=\"crewLiability\" onChange={(e) => this.selectType(e.target.value, 'crewLiability')} value={this.state.crewLiability}>\n                                                                        <option value=''>Select</option>\n                                                                        {this.state.CrewLiabilityList.map((type, i) => {\n                                                                            return (<option value={type.value}>{type.label}</option>)\n                                                                        })\n                                                                        }\n                                                                    </Input>\n                                                                    <em id=\"crewLiabilityError\" className=\"error invalid-feedback\"></em>\n                                                                </div>\n                                                            </Col>\n                                                        ) : (null)}\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>)\n                            : (null)}\n\n                        {(this.state.LoginUserType == \"InternalStaff\") ? (null) :\n                            (<div className=\"input-box\">\n                                <Row>\n                                    <Col md=\"12\">\n                                        <Input type=\"checkbox\" name=\"AssumptionAndTerms\" id=\"AssumptionAndTerms\" onChange={(e) => this.handleChange(e)} checked={this.state.AssumptionAndTerms == true ? \"checked\" : \"\"} value={this.state.AssumptionAndTerms} />\n                                        <span>I agree to the {this.state.assumptionCount == 0 ? 'Assumption' : (<a onClick={() => this.openModal('Assumption')} style={{ textDecorationLine: 'underline', cursor: 'pointer' }}>Assumptions</a>)} as well as <a onClick={() => this.openModal('TermsAndCondition')} style={{ textDecorationLine: 'underline', cursor: 'pointer' }}>Terms & Conditions</a></span>\n                                        {(this.state.AssumptionAndTermsError)\n                                            ? <p style={{ color: 'red' }}>You must agree to Assumption And Terms & Conditions</p>\n                                            : (null)}\n                                    </Col>\n                                </Row>\n                            </div>)}\n                        <div className=\"input-box\">\n                            <Row>\n                                <Col md=\"12\" style={{ textAlign: \"center\" }}>\n                                    <Button color=\"success\" onClick={() => this.BackToPolicyList()} label={BackButton} icon=\"fa fa-angle-left\" style={{ marginRight: 10 }} />\n\n                                    {(this.state.refer)\n                                        ? (<Button color=\"success\" onClick={() => this.Save()} label=\"Generate Quotation Referred\" icon=\"fa fa-check\" />)\n                                        : (<Button color=\"success\" onClick={() => this.Save()} label=\"Generate Quotation\" icon=\"fa fa-check\" disabled={!this.state.AssumptionAndTerms} />)}\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </Col>\n                <Modal isOpen={this.state.toggleModal} toggle={() => this.toggleLarge('Delete')}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={() => this.toggleLarge('Delete')}>Delete Boating Qualification</ModalHeader>\n                    <ModalBody>\n                        Are you sure you want to Delete Boating Qualification?\n                    </ModalBody>\n                    <ModalFooter>\n                        <button color=\"primary\" onClick={() => this.deleteBoatingQualification(this.state.temData)}>Yes</button>\n                        <button color=\"secondary\" onClick={() => this.toggleLarge('Delete')}>Cancel</button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={this.state.toggleAssumption} toggle={() => this.toggleLarge('Assumption')}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={() => this.toggleLarge('Assumption')}>Assumption</ModalHeader>\n                    <ModalBody>\n                        <ul>\n                            {this.state.assumptionArr.map((type, i) => {\n                                return (<li>{type.AssumptionDescription}</li>)\n                            })}\n                        </ul>\n                    </ModalBody>\n                    <ModalFooter>\n                        <button color=\"secondary\" onClick={() => this.toggleLarge('TermsAndCondition')}>Close</button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={this.state.toggleTermsAndCondition} toggle={() => this.toggleLarge('TermsAndCondition')}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={() => this.toggleLarge('TermsAndCondition')}>Terms And Condition</ModalHeader>\n                    <ModalBody>\n                        <div dangerouslySetInnerHTML={{ __html: t(\"translation:termsAndCondition.terms\") }}></div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <button color=\"secondary\" onClick={() => this.toggleLarge('TermsAndCondition')}>Close</button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\nexport default withTranslation()(NewPolicy);"]},"metadata":{},"sourceType":"module"}