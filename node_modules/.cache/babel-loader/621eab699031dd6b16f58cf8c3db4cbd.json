{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/SearchPolicy.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Button as BTN, Card, CardHeader, CardBody, Col, Row, Input, Form, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledTooltip } from 'reactstrap';\nimport { Button } from 'primereact/button';\nimport api from '../../utils/apiClient';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig } from '../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport APIConstant from '../../utils/constants';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport { toast } from 'react-toastify';\nimport ShowMoreText from 'react-show-more-text';\nimport Vessel from '../../assets/Vessel.png';\nimport MultiVessel from '../../assets/MultiVessel.png';\nimport NewBusiness from '../../assets/NewBusiness.png';\nimport Renewal from '../../assets/Renewal.png';\nimport SubAgent from '../../assets/SubAgent.png';\nimport Organization from '../../assets/Organization.png';\nimport Direct from '../../assets/Direct.png';\nimport MarineTrade from '../../assets/MarineTrade.png';\nimport VesselNonrated from '../../assets/VesselNonrated.png';\nimport Miscellaneous from '../../assets/Miscellaneous.png';\nimport Online from '../../assets/Online.png';\nimport ServiceCenter from '../../assets/ServiceCenter.png';\n\nclass SearchPolicy extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleStageChange = () => {\n      if (this.state.toggleStageChangeModal == true) {\n        this.setState({\n          stage: '',\n          referredTo: '',\n          changeNote: '',\n          selectedPolicy: []\n        });\n      }\n\n      this.setState({\n        toggleStageChangeModal: !this.state.toggleStageChangeModal\n      });\n    };\n\n    this.setSelectedPolicy = e => {\n      this.setState({\n        selectedPolicy: e\n      });\n    };\n\n    this.handleChangePolicyDetail = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'changeNote') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            changeNoteError: true\n          });\n        } else {\n          if (!CommonConfig.RegExp.allowAllWithSpace.test(e.target.value)) {\n            this.setState({\n              changeNoteError: true\n            });\n          } else {\n            this.setState({\n              changeNoteError: false,\n              changeNote: e.target.value\n            });\n          }\n        }\n      }\n    };\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.toggleLargeAdd = () => {\n      this.setState({\n        toggleModalAdd: false\n      });\n    };\n\n    this.toggleCustom = tab => {\n      const prevState = this.state.custom;\n      const state = prevState.map((x, index) => tab === index ? !x : false);\n      this.setState({\n        custom: state\n      });\n    };\n\n    this.redirectToNewPolicy = () => {\n      var splitData = this.props.location.pathname.split(\"/\");\n\n      if (splitData[2] !== undefined && splitData[3] !== undefined) {\n        this.props.history.push({\n          pathname: '/CreatePolicy/' + splitData[2],\n          state: {\n            id: splitData[2]\n          }\n        });\n      } else {\n        this.props.history.push({\n          pathname: '/NewPolicy/',\n          state: {}\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        t\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'policyNumber') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyNumberErro: true,\n            policyNumber: ''\n          });\n        } else {\n          this.setState({\n            policyNumberErro: false,\n            policyNumber: e.target.value\n          });\n        }\n      }\n\n      if (e.target.name === 'clientNamePhoneEmail') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            clientNamePhoneEmailError: true,\n            clientNamePhoneEmail: ''\n          });\n        } else {\n          this.setState({\n            clientNamePhoneEmailError: false,\n            clientNamePhoneEmail: e.target.value\n          });\n        }\n      }\n\n      if (e.target.name === 'clientName') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            clientNameError: true,\n            clientName: ''\n          });\n        } else {\n          this.setState({\n            clientNameError: false,\n            clientName: e.target.value\n          });\n        }\n      }\n\n      if (e.target.name === 'policyPhoneEmail') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyPhoneEmail: ''\n          });\n        } else {\n          this.setState({\n            policyPhoneEmail: e.target.value\n          });\n        }\n      }\n\n      if (e.target.name === 'policyFrom') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyFrom: ''\n          });\n        } else {\n          this.setState({\n            policyFrom: e.target.value,\n            policyTo: ''\n          });\n          this.show('policyTo', false, 'policyToError', '');\n        }\n      }\n\n      if (e.target.name === 'policyTo') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyTo: ''\n          });\n        } else {\n          if (!CommonConfig.isEmpty(this.state.policyFrom)) {\n            var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.policyFrom);\n\n            if (!isToDateGreater) {\n              this.show('policyTo', true, 'policyToError', 'To date must be greater then From date.');\n            } else {\n              this.show('policyTo', false, 'policyToError', '');\n            }\n          } else {\n            this.show('policyTo', false, 'policyToError', '');\n          }\n\n          this.setState({\n            policyTo: e.target.value\n          });\n        }\n      }\n    };\n\n    this.saveNotes = () => {\n      if (this.state.NotesTypeError === false && this.state.notesdescriptionError === false) {\n        const NotesForm = new FormData();\n        NotesForm.append('notesType', this.state.notesType);\n        NotesForm.append('notesdescription', this.state.notesdescription.trim());\n        NotesForm.append('entityid', this.state.NavID);\n        NotesForm.append('entitytype', 'Policy');\n        NotesForm.append('isflag', this.state.isImportant);\n        NotesForm.append('loggedInUserId', CommonConfig.loggedInUserId());\n        NotesForm.append('languageId', this.state.LanguageId);\n        api.post('api/addNotes', NotesForm).then(res => {\n          if (res.success) {\n            this.reset();\n            toast.success('Notes added successfully');\n            this.getNoteList({\n              PolicyId: this.state.NavID\n            });\n          } else {}\n        }).catch(err => {});\n      } else {\n        this.show(\"notesType\", this.state.NotesTypeError);\n        this.show(\"notesdescription\", this.state.notesdescriptionError);\n      }\n    };\n\n    this.handleChangeNote = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'notesdescription') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            notesdescriptionError: true\n          });\n          this.show(\"notesdescription\", true);\n        } else {\n          this.setState({\n            notesdescriptionError: false,\n            notesdescription: e.target.value\n          });\n          this.show(\"notesdescription\", false);\n        }\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        notesdescription: '',\n        notesdescriptionError: true,\n        notesType: '',\n        NotesTypeError: true,\n        isImportant: 0\n      });\n      this.show(\"notesdescription\", false);\n      this.show('notesType', false);\n      this.setState({\n        addNoteCollapse: false\n      });\n    };\n\n    let columns = [// { field: \"SrNo\", header: \"Sr No.\", sortable: true, filter: true, id: 0 },\n    // { field: \"Type\", header: \"Type.\", sortable: true, filter: true, id: 1 },\n    // { field: \"PolicyNo\", header: \"Policy No.\", sortable: true, filter: true, id: 2 },\n    // { field: \"BoatType\", header: \"Outstanding Amount\", sortable: true, filter: true, id: 3 },\n    // { field: \"Status\", header: \"Status\", sortable: true, filter: true, id: 4 },\n    // { field: \"Department\", header: \"Department\", sortable: true, filter: true, id: 4 },\n    // { field: \"Vessel\", header: \"Vessel\", sortable: true, filter: true, id: 5 },\n    // { field: \"Value\", header: \"Value.\", sortable: true, filter: true, id: 6 },\n    // { field: \"Premiun\", header: \"Premiun\", sortable: true, filter: true, id: 7 },\n    // { field: \"Created\", header: \"Created\", sortable: true, filter: true, id: 8 },\n    // { field: \"Renewal\", header: \"Renewal\", sortable: true, filter: true, id: 9 },\n    // { field: \"Updated\", header: \"Updated\", sortable: true, filter: true, id: 10 },\n    // { field: \"LastUpdatedBy\", header: \"Last Updated By\", sortable: true, filter: true, id: 11 },\n    // { field: \"CreatedBy\", header: \"Created by\", sortable: true, filter: true, id: 12 },\n    // { field: \"Currency\", header: \"Currency\", sortable: true, filter: true, id: 13 },\n    // { field: \"Client\", header: \"Client\", sortable: true, filter: true, id: 14 },\n    // { field: \"Country\", header: \"Country\", sortable: true, filter: true, id: 15 },\n    {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      id: 0\n    }, {\n      body: this.formatPolicyDetail.bind(this),\n      field: \"PolicyData\",\n      header: \"Policy No/Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      body: this.formatContactDetail.bind(this),\n      field: \"ClientDetails\",\n      header: \"Client/Contacts\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      body: this.formatVesselData.bind(this),\n      field: \"VesselDetails\",\n      header: \"Vessel\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"InsuranceCompanyName\",\n      header: \"Insurer\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      body: this.formatPremiun.bind(this),\n      field: \"PremiumDetails\",\n      header: \"SI/Premium\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      body: this.formatDate.bind(this),\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      body: this.formatDepartment.bind(this),\n      field: \"DepartmentDetails\",\n      header: \"Department\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      body: this.formatStage.bind(this),\n      field: \"Stage\",\n      header: \"Stage\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 8\n    }, {\n      field: \"HandlerPerson\",\n      header: \"Handler\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 9\n    }, {\n      field: \"Status\",\n      header: \"Status\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 10\n    }];\n    this.state = {\n      toggleModalAdd: false,\n      contactShown: '',\n      cols: columns,\n      clientArray: [],\n      client: '',\n      phoneArray: [],\n      phone: '',\n      str: '',\n      emailArray: [],\n      email: '',\n      policyNumberArray: [],\n      policyNumber: '',\n      binderArray: [],\n      binder: '',\n      subBinderArray: [],\n      subBinder: '',\n      policyStartFromDate: '',\n      policyStartToDate: '',\n      policyRenewalFromDate: '',\n      policyRenewalToDate: '',\n      agentserviceCenter: '',\n      sumInsuredfrom: '',\n      sumInsuredTo: '',\n      arr: [],\n      selectedPage: 0,\n      filteredcontactsSingle: null,\n      contactArray: [],\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      custom: true,\n      isExpand: false,\n      countryList: [],\n      country: '',\n      languageArray: [],\n      currencyArray: [],\n      policyStatusList: [],\n      policyStatus: '',\n      policyTypeArray: [],\n      policyType: '',\n      vesselClassArray: [],\n      vesselClassCopy: [],\n      vesselClass: '',\n      vesselType: '',\n      vesselTypeArray: [],\n      isMonthYear: true,\n      searchType: 'QUICK',\n      clientNamePhoneEmail: '',\n      clientNamePhoneEmailError: false,\n      monthArray: [],\n      policyMonth: moment().format('M'),\n      policyMonthError: false,\n      yearArray: [],\n      policyYear: moment().format('YYYY'),\n      policyYearError: false,\n      policyPhoneEmail: '',\n      policyPhoneEmailError: false,\n      documentLanguageList: [],\n      policyLanguage: '',\n      policyLanguageError: false,\n      currencyList: [],\n      policyCurrency: '',\n      policyCurrencyError: false,\n      policyFrom: '',\n      policyFromError: false,\n      policyTo: '',\n      policyToError: false,\n      offset: 0,\n      recordStr: '',\n      isPreviousVisible: false,\n      isNextVisible: false,\n      toggleStageChangeModal: false,\n      changeNote: '',\n      referredTo: '',\n      changeNoteError: '',\n      changeStage: false,\n      stage: '',\n      stageList: [],\n      stageFilterList: [],\n      stageFilter: '',\n      referrList: [],\n      selectedPolicy: [],\n      openNotePopup: false,\n      addNoteCollapse: false,\n      policyNoteList: [],\n      noteType: [],\n      NavID: null,\n      isImportant: 0,\n      notesType: '',\n      notesdescription: '',\n      NotesTypeError: true,\n      notesdescriptionError: true,\n      addNoteCollapse: false,\n      SavedData: {},\n      loggedInUserData: CommonConfig.loggedInUserData()\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  getAllStageList() {\n    const data = {};\n    api.post('api/getAllStageList', data).then(res => {\n      console.log('getAllStageList', res);\n\n      if (res.success) {\n        this.setState({\n          stageList: res.data,\n          stageFilterList: res.data\n        });\n        this.onRadioBtnClick(this.state.searchType);\n      }\n    });\n  }\n\n  getPolicyStage() {\n    const data = {\n      PolicyId: \"\",\n      Stage: this.state.stageFilter,\n      loggedInUserId: CommonConfig.loggedInUserId()\n    };\n    api.post('api/getPolicyStage', data).then(res => {\n      console.log('getPolicyStage', res);\n\n      if (res.success) {\n        this.setState({\n          stageList: res.data\n        });\n      }\n    });\n  }\n\n  getSpGetUsersByTeam() {\n    const data = {\n      TeamName: 'Underwriting'\n    };\n    api.post('api/getSpGetUsersByTeam', data).then(res => {\n      console.log('getSpGetUsersByTeam', res);\n\n      if (res.success) {\n        this.setState({\n          referrList: res.data\n        });\n      }\n    });\n  }\n\n  savePolicyStage(stage) {\n    if (stage) {\n      this.setState({\n        stage: stage\n      });\n      this.toggleStageChange();\n    } else {\n      if (this.state.stage == 'Referred') {\n        if (this.state.referredTo == \"\") {\n          toast.error('Please Select Referred To');\n          return;\n        }\n\n        if (this.state.changeNote == \"\") {\n          toast.error('Please Enter Note');\n          return;\n        }\n      }\n\n      var SendString = '';\n      this.state.selectedPolicy.forEach(data => {\n        if (data) {\n          SendString += data.PolicyId + '#^#' + data.PolicyNumber + ',';\n        }\n      });\n      console.log(SendString);\n      const data = {\n        PolicyId: '',\n        Stage: this.state.stage,\n        CurrentUser: CommonConfig.loggedInUserId(),\n        ChangeNote: this.state.changeNote,\n        ReferredTo: this.state.referredTo,\n        PolicyData: SendString\n      };\n      api.post('api/savePolicyStage', data).then(res => {\n        console.log('savePolicyStage', res.data);\n\n        if (res.success) {\n          console.log('savePolicyStage', res.data[0].returnValue);\n\n          if (CommonConfig.isEmpty(res.data[0].returnValue)) {\n            toast.success('Policy Stage Changed Successfully to ' + this.state.stage);\n            this.toggleStageChange();\n            this.setState({\n              stage: this.state.stage,\n              changeNote: '',\n              referredTo: '',\n              selectedPolicy: [],\n              changeStage: false\n            });\n            this.getSearchPolicy();\n          } else {\n            toast.success(res.data[0].returnValue);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getDropDownValues('POLICYCOUNTRY', 'countryList');\n    this.getDropDownValues('POLICYSTATUS', 'policyStatusList');\n    this.getDropDownValues('POLICYTYPE', 'policyTypeArray');\n    this.getLanguage();\n    this.getCurrency();\n    this.getVesselClass(); // this.getPolicyList(0);\n\n    this.getPolicyClientName();\n    this.getAllEmailList();\n    this.getAllcontactList();\n    this.getAllpolicyNumber();\n    this.getAllBinder();\n    this.getDropdown();\n    this.getAgentServiceCenterList();\n    this.getAllStageList();\n    this.getSpGetUsersByTeam();\n    this.getNotesType();\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.match.isExact !== this.props.match.isExact) {\n      setTimeout(() => {\n        this.getPolicyList(0);\n      }, 100);\n    }\n  }\n\n  getDropdown() {\n    // Get Month\n    let monthArray = [{\n      label: 'January',\n      value: 1\n    }, {\n      label: 'February',\n      value: 2\n    }, {\n      label: 'March',\n      value: 3\n    }, {\n      label: 'April',\n      value: 4\n    }, {\n      label: 'May',\n      value: 5\n    }, {\n      label: 'June',\n      value: 6\n    }, {\n      label: 'July',\n      value: 7\n    }, {\n      label: 'August',\n      value: 8\n    }, {\n      label: 'September',\n      value: 9\n    }, {\n      label: 'October',\n      value: 10\n    }, {\n      label: 'November',\n      value: 11\n    }, {\n      label: 'December',\n      value: 12\n    }];\n    this.setState({\n      monthArray: monthArray\n    }); // Get Year - Get last 10 year from current year\n\n    let startYear = moment().format('YYYY');\n    let yearArray = [];\n\n    for (let index = startYear; index >= parseInt(startYear) - 10; index--) {\n      yearArray.push({\n        label: index,\n        value: index\n      });\n    }\n\n    this.setState({\n      yearArray: yearArray\n    }); // Get Language\n\n    var formattedLanguage = [];\n\n    try {\n      api.get(APIConstant.path.getLanguage).then(res => {\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            formattedLanguage.push({\n              label: res.data[i].Language,\n              value: res.data[i].Language\n            });\n          }\n\n          this.setState({\n            documentLanguageList: formattedLanguage\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (err) {} // Get Currency\n\n\n    var formattedCurrency = [];\n\n    try {\n      api.get(APIConstant.path.getCurrency).then(res => {\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            formattedCurrency.push({\n              label: res.data[i].CurrncyCode,\n              value: res.data[i].CurrncyCode\n            });\n          }\n\n          this.setState({\n            currencyList: formattedCurrency\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (err) {}\n  }\n\n  getAgentServiceCenterList() {\n    try {\n      let data = {\n        ContactType: 'Both'\n      };\n      api.post('api/getAgentServiceCenterList', data).then(res => {\n        console.log(\"getAgentServiceCenterList---\", res);\n\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data[0].length; i++) {\n            formattedData.push({\n              label: res.data[0][i].OrganizationName,\n              value: res.data[0][i].OrganizationId\n            });\n          }\n\n          this.setState({\n            policyAgentServiceCenterList: formattedData\n          });\n        } else {\n          console.log('getAgentServiceCenterList');\n        }\n      }).catch(err => {\n        console.log('getAgentServiceCenterList', err);\n      });\n    } catch (error) {\n      console.log('getAgentServiceCenterList', error);\n    }\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  edit(rowData) {\n    window.open(window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1', '_blank'); // this.props.history.push({\n    //     pathname: '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1',\n    //     state: {\n    //         PolicyId: rowData.PolicyId,\n    //         tab: 1\n    //     }\n    // });\n  }\n\n  getImageIcon(rowData) {\n    var linkType = '';\n\n    if (rowData.LockedByPerson == '') {\n      linkType = 'NoLock';\n    } else {\n      if (Number(rowData.IsCurrentUserUW) == 0 && rowData.IsSelfLocked == 1) {\n        linkType = 'NormalSelfLock';\n      } else if (Number(rowData.IsCurrentUserUW) == 1 && rowData.IsSelfLocked == 1) {\n        linkType = 'UWSelfLock';\n      } else if (Number(rowData.IsCurrentUserUW) == 0 && rowData.IsSelfLocked == 0) {\n        linkType = 'NormalOtherLock';\n      } else if (Number(rowData.IsCurrentUserUW) == 1 && rowData.IsSelfLocked == 0) {\n        linkType = 'UWOtherLock';\n      }\n    }\n\n    switch (linkType) {\n      case 'NormalSelfLock':\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-user-circle-o\",\n          \"aria-hidden\": \"true\",\n          style: {\n            fontSize: '25px'\n          },\n          id: \"NSL\" + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"right\",\n          target: \"NSL\" + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 21\n          }\n        }, \"locked By Me\"));\n\n      case 'UWSelfLock':\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-user-circle-o\",\n          style: {\n            fontSize: '25px'\n          },\n          \"aria-hidden\": \"true\",\n          id: 'USL' + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"right\",\n          target: \"USL\" + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 21\n          }\n        }, \"locked By Me\"));\n\n      case 'NormalOtherLock':\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-lock\",\n          \"aria-hidden\": \"true\",\n          style: {\n            fontSize: '25px'\n          },\n          id: \"NOL\" + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"right\",\n          target: \"NOL\" + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 18\n          }\n        }, \"locked By\" + rowData.LockedByPerson));\n\n      case 'UWOtherLock':\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-lock\",\n          onClick: () => this.releaseLock(rowData),\n          style: {\n            fontSize: '25px',\n            cursor: 'pointer'\n          },\n          \"aria-hidden\": \"true\",\n          id: \"UWO\" + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }\n        }, \" \"), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n          placement: \"right\",\n          target: \"UWO\" + rowData.policyNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 21\n          }\n        }, \"locked By\" + rowData.LockedByPerson));\n\n      case 'Nolock':\n        return null;\n    }\n  }\n\n  releaseLock(rowData) {\n    let data = {\n      'PolicyId': rowData.PolicyId,\n      'ReleaseAll': 0\n    };\n    api.post('api/releaseLock', data).then(res => {\n      if (res.success) {\n        if (res.data[0][0].returnValue == '') {\n          this.reloadSavedData(this.state.SavedData, rowData);\n        } else {\n          toast.error(res.data[0][0].returnValue);\n        }\n      } else {\n        toast.error(\"SomeThing went wrong.\");\n      }\n    }).catch(err => {\n      console.log(\"setLock err\", err);\n    });\n  }\n\n  async reloadSavedData(data, rowData) {\n    // console.log('data in reloadsaveddata......',data)\n    await api.post('api/searchPolicy', data).then(res => {\n      console.log(\"searchPolicy--------\", res);\n\n      if (res.success) {\n        var formattedData = [];\n        var totalRecords = 0;\n        var PolicyTypeImage = '';\n        var PolicyTypeAltmsg = '';\n        console.log(\"res.data.....\", res.data);\n\n        for (var i = 0; i < res.data.length; i++) {\n          if (res.data[i].PolicyType === \"MultiVessel\") {\n            PolicyTypeImage = MultiVessel;\n            PolicyTypeAltmsg = 'MV';\n          } else if (res.data[i].PolicyType === \"Vessel\") {\n            PolicyTypeImage = Vessel;\n            PolicyTypeAltmsg = 'V';\n          } else if (res.data[i].PolicyType === \"MarineTrade\") {\n            PolicyTypeImage = MarineTrade;\n            PolicyTypeAltmsg = \"MT\";\n          } else if (res.data[i].PolicyType === \"Miscellaneous\") {\n            PolicyTypeImage = Miscellaneous;\n            PolicyTypeAltmsg = 'MIS';\n          } else if (res.data[i].PolicyType === \"VesselNonrated\") {\n            PolicyTypeImage = VesselNonrated;\n            PolicyTypeAltmsg = 'VN';\n          }\n\n          formattedData.push({\n            SrNo: i + 1,\n            Name: res.data[i].Name,\n            CountryCode: res.data[i].CountryCode,\n            PhoneNumber: res.data[i].PhoneNumber,\n            Email: res.data[i].Email,\n            PolicyId: res.data[i].PolicyId,\n            DocLang: res.data[i].DocLang,\n            InsuranceCompanyName: res.data[i].InsuranceCompanyName,\n            Vessel: res.data[i].VesselName,\n            VesselTypeName: res.data[i].VesselTypeName,\n            SumInsured: res.data[i].SumInsured,\n            CurrentPremium: res.data[i].CurrentPremium,\n            InceptionDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),\n            RenewalDate: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),\n            PolicyType: res.data[i].PolicyType,\n            PolicyTypeImage: PolicyTypeImage,\n            PolicyTypeAltmsg: PolicyTypeAltmsg,\n            PolicyNumber: res.data[i].PolicyNumber,\n            Outstanding: CommonConfig.isEmpty(res.data[i].Outstanding) ? '' : CommonConfig.formatMoney(res.data[i].Outstanding, 2),\n            Status: res.data[i].Status,\n            Stage: res.data[i].Stage,\n            NBOrRN: res.data[i].NBOrRN,\n            IsOrganization: res.data[i].IsOrganization,\n            Department: res.data[i].Department,\n            VesselClassName: res.data[i].VesselClassName,\n            Value: CommonConfig.formatMoney(res.data[i].SumInsured, 2),\n            Premium: CommonConfig.isEmpty(res.data[i].Premium) ? '' : res.data[i].Premium,\n            Created: CommonConfig.isEmpty(res.data[i].InceptionDate) ? '' : moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n            Renewal: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n            Updated: CommonConfig.isEmpty(res.data[i].UpdatedOn) ? '' : moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),\n            UpdatedByName: CommonConfig.isEmpty(res.data[0].UpdatedByName) ? '' : res.data[0].UpdatedByName,\n            CreatedByName: CommonConfig.isEmpty(res.data[0].CreatedByName) ? '' : res.data[0].CreatedByName,\n            Currency: res.data[i].Currency,\n            InceptionRenewalDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker) + \" \" + moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n            Client: res.data[i].EntityType === 'person' ? res.data[i].Forename + '' + res.data[i].SurName : \"\",\n            Country: res.data[i].Country,\n            ClientDetails: res.data[i].Name + \" \" + CommonConfig.formatPhoneNumber(res.data[i].CountryCode + res.data[i].PhoneNumber) + \" \" + res.data[i].Email,\n            PolicyData: res.data[i].PolicyType + \" \" + res.data[i].PolicyNumber + \" \" + res.data[i].DocLang,\n            DepartmentDetails: res.data[i].Department + \" \" + res.data[i].SubAgentName + \" \" + res.data[i].SubAgentPhone + \" \" + res.data[i].SubAgentEmail,\n            VesselDetails: res.data[i].VesselClassName + \" \" + res.data[i].VesselTypeName,\n            Note: res.data[i].Note,\n            PreiumDifferencePercentage: res.data[i].PreiumDifferencePercentage,\n            RenewalPremium: res.data[i].RenewalPremium,\n            SubAgentName: res.data[i].SubAgentName,\n            SubAgentEmail: res.data[i].SubAgentEmail,\n            SubAgentPhone: res.data[i].SubAgentPhone,\n            HandlerPerson: res.data[i].HandlerPerson,\n            LockedByPerson: res.data[i].LockedByPerson,\n            LockedByPersonId: res.data[i].LockedByPersonId,\n            IsCurrentUserUW: res.data[i].IsCurrentUserUW,\n            IsSelfLocked: res.data[0].IsSelfLocked,\n            ReferredToPerson: res.data[i].ReferredToPerson\n          });\n        }\n\n        console.log(\"formatted data...\", formattedData);\n        totalRecords = formattedData.length; // TODO: get from response\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let recordStr = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        let str = recordStr; //(this.state.searchType == 'ALL') ? recordStr : '';\n\n        this.setState({\n          arr: formattedData,\n          str: str,\n          recordStr: recordStr,\n          totalRecords: totalRecords\n        });\n        this.checkPrevNextHandle();\n        toast.success(\"Policy \" + rowData.PolicyNumber + \" unlocked Successfully\"); // if (CommonConfig.isEmpty(this.state.stageFilter)) {\n        //     this.setState({ stageList: this.state.stageFilterList });\n        // } else {\n        //     this.getPolicyStage();\n        // }\n      } else {}\n    }).catch(err => {\n      console.log(\"searchPolicy-API-Error\", err);\n    });\n  }\n\n  formatPolicyDetail(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 17\n      }\n    }, rowData.PolicyType), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 17\n      }\n    }, rowData.PolicyNumber), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }\n    }, rowData.DocLang));\n  }\n\n  formatContactDetail(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 17\n      }\n    }, rowData.Name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 17\n      }\n    }, CommonConfig.formatPhoneNumber(rowData.CountryCode + rowData.PhoneNumber)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 17\n      }\n    }, rowData.Email));\n  }\n\n  formatVesselData(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }\n    }, rowData.VesselClassName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 17\n      }\n    }, rowData.VesselTypeName));\n  }\n\n  formatPremiun(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 17\n      }\n    }, rowData.PremiumDetails));\n  }\n\n  formatDate(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 17\n      }\n    }, rowData.RenewalDate));\n  }\n\n  formatDepartment(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 17\n      }\n    }, rowData.Department), rowData.Department == \"SubAgent\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }\n    }, rowData.SubAgentName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 21\n      }\n    }, rowData.SubAgentPhone), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 21\n      }\n    }, rowData.SubAgentEmail)) : null);\n  }\n\n  formatStage(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 17\n      }\n    }, rowData.Stage), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }\n    }, rowData.ReferredToPerson));\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-warning\",\n      onClick: () => this.edit(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: () => this.getNoteList(rowData),\n      style: {\n        fontSize: '25px',\n        cursor: 'pointer'\n      },\n      className: \"pi pi-comment\",\n      href: \"#\",\n      id: \"CommentTooltip\" + rowData.PolicyId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n      placement: \"right\",\n      target: \"CommentTooltip\" + rowData.PolicyId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 17\n      }\n    }, CommonConfig.isEmpty(rowData.Note) ? rowData.Stage : rowData.Note)), this.getImageIcon(rowData));\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  getPolicyClientName() {\n    try {\n      api.post(APIConstant.path.getPolicyClientName).then(res => {\n        if (res.success) {\n          let formattedData = [];\n          let i;\n\n          for (i = 0; i < res.data.data.length; i++) {\n            formattedData.push({\n              value: res.data.data[i].EntityId,\n              label: res.data.data[i].FullName\n            });\n          }\n\n          this.setState({\n            clientArray: formattedData\n          });\n        } else {}\n      }).catch(err => {\n        console.log('error', err);\n      });\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  getAllEmailList() {\n    try {\n      api.post(APIConstant.path.getAllEmailList).then(res => {\n        if (res.success) {\n          let formattedData = [];\n          let i;\n\n          for (i = 0; i < res.data.data.length; i++) {\n            formattedData.push({\n              value: res.data.data[i].Email,\n              label: res.data.data[i].Email\n            });\n          }\n\n          console.log('formattedData', formattedData);\n          this.setState({\n            emailArray: formattedData\n          });\n        } else {}\n      }).catch(err => {\n        console.log('error', err);\n      });\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  getAllcontactList() {\n    try {\n      api.post(APIConstant.path.getAllcontactList).then(res => {\n        if (res.success) {\n          let formattedData = [];\n          let i;\n\n          for (i = 0; i < res.data.data.length; i++) {\n            formattedData.push({\n              value: res.data.data[i].PhoneNumber,\n              label: res.data.data[i].PhoneNumber\n            });\n          }\n\n          console.log('formattedData', formattedData);\n          this.setState({\n            phoneArray: formattedData\n          });\n        } else {}\n      }).catch(err => {\n        console.log('error', err);\n      });\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  getAllpolicyNumber() {\n    try {\n      api.post(APIConstant.path.getAllpolicyNumber).then(res => {\n        if (res.success) {\n          let formattedData = [];\n          let i;\n\n          for (i = 0; i < res.data.data.length; i++) {\n            formattedData.push({\n              value: res.data.data[i].PolicyNumber,\n              label: res.data.data[i].PolicyNumber\n            });\n          }\n\n          console.log('formattedData', formattedData);\n          this.setState({\n            policyNumberArray: formattedData\n          });\n        } else {}\n      }).catch(err => {\n        console.log('error', err);\n      });\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  getAllBinder() {\n    try {\n      let data = {};\n      api.post(APIConstant.path.getAllBinder, data).then(res => {\n        if (res.success) {\n          console.log('res.datares.data', res.data.res);\n          let formattedData = [];\n          let i;\n\n          for (i = 0; i < res.data.res.length; i++) {\n            formattedData.push({\n              value: res.data.res[i].BinderId,\n              label: res.data.res[i].UMRN\n            });\n          }\n\n          this.setState({\n            binderArray: formattedData\n          });\n        } else {\n          console.log('getBinderData_error');\n        }\n      }).catch(err => {\n        console.log('getBinderData_error', err);\n      });\n    } catch (error) {\n      console.log('getBinderData_error', error);\n    }\n  }\n\n  getSubBinderByBinderId(id) {\n    try {\n      let data = {\n        BinderId: id\n      };\n      api.post(APIConstant.path.getSubBinderByBinderId, data).then(res => {\n        if (res.success) {\n          console.log('res.datares.data', res.data.res);\n          let formattedData = [];\n          let i;\n\n          for (i = 0; i < res.data.res.length; i++) {\n            formattedData.push({\n              value: res.data.res[i].SubBinderId,\n              label: res.data.res[i].Title\n            });\n          }\n\n          this.setState({\n            subBinderArray: formattedData\n          });\n        } else {\n          console.log('getBinderData_error');\n        }\n      }).catch(err => {\n        console.log('getBinderData_error', err);\n      });\n    } catch (error) {\n      console.log('getBinderData_error', error);\n    }\n  }\n\n  getLanguage() {\n    try {\n      api.get(APIConstant.path.getLanguage).then(res => {\n        if (res.success) {\n          this.setState({\n            languageArray: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  getCurrency() {\n    try {\n      api.get(APIConstant.path.getCurrency).then(res => {\n        if (res.success) {\n          this.setState({\n            currencyArray: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  getVesselClass() {\n    try {\n      api.get(APIConstant.path.getVesselClass).then(res => {\n        if (res.success) {\n          let formattedArray = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedArray.push({\n              label: res.data[i].VesselClassName,\n              value: res.data[i].VesselClassId\n            });\n          }\n\n          this.setState({\n            vesselClassArray: formattedArray,\n            vesselClassCopy: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  getVesselType(id) {\n    try {\n      const data = {\n        VesselClassId: id\n      };\n      api.post(APIConstant.path.getVesselType, data).then(res => {\n        if (res.success) {\n          console.log('-o-p-o-o-p-o-p-p-o', res.data);\n          var formattedData = [];\n\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].VesselTypeName,\n              value: res.data[i].VesselTypeId\n            });\n          }\n\n          this.setState({\n            vesselTypeArray: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getPolicyList(IsAdvance) {\n    try {\n      let data = {};\n      var splitData = this.props.location.pathname.split(\"/\");\n\n      if (splitData[2] !== undefined && splitData[3] !== undefined) {\n        data = {\n          entityId: splitData[2] || '',\n          entityType: splitData[3] || '',\n          isAdvance: 0\n        };\n      } else {\n        data = {\n          isAdvance: IsAdvance\n        };\n      }\n\n      console.log('0o-0o-o-kl0k-0k-0k-0k-0k-0k-0kj', data);\n      api.post('api/getPolicyList', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (var i = 0; i < res.data.length; i++) {\n            // console.log(\"getPolicyList > \", res.data[i]);\n            formattedData.push({\n              SrNo: i + 1,\n              Name: res.data[i].Name,\n              CountryCode: res.data[i].CountryCode,\n              PhoneNumber: res.data[i].PhoneNumber,\n              Email: res.data[i].Email,\n              PolicyId: res.data[i].PolicyId,\n              PolicyType: res.data[i].PolicyType,\n              PolicyNumber: res.data[i].PolicyNumber,\n              Status: res.data[i].Status,\n              Department: res.data[i].Department,\n              InsuranceCompanyName: res.data[i].InsuranceCompanyName,\n              Vessel: res.data[i].VesselName,\n              Value: res.data[i].SumInsured,\n              VesselClassName: res.data[i].VesselClassName,\n              VesselTypeName: res.data[i].VesselTypeName,\n              SumInsured: res.data[i].SumInsured,\n              CurrentPremium: res.data[i].CurrentPremium,\n              InceptionDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),\n              RenewalDate: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),\n              Premium: \"\",\n              Created: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n              Renewal: moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n              Updated: moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),\n              LastUpdatedBy: \"\",\n              InceptionRenewalDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker) + \" \" + moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n              CreatedBy: res.data[i].CreatedBy,\n              LastUpdated: \"\",\n              Currency: res.data[i].Currency,\n              Client: res.data[i].EntityType === 'person' ? res.data[i].Forename + '' + res.data[i].SurName : \"\",\n              Country: res.data[i].Country\n            });\n          }\n\n          console.log(\"formateted Fate...\", formattedData);\n          let firstPage = formattedData.length ? '1' : '0';\n          let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n          let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n          this.setState({\n            arr: formattedData,\n            str: str\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (err) {}\n  }\n\n  filterSingle(e) {\n    let results = this.state.contactArray.filter(contact => {\n      return contact.label.toLowerCase().startsWith(e.query.toLowerCase());\n    });\n    this.setState({\n      filteredcontactsSingle: results\n    });\n  }\n\n  getDropDownValues(stringMapType, setStateName) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  gotoNextPage() {\n    this.props.history.push('/newPolicy1');\n  }\n\n  selectType(value, type) {\n    if (value === '' || value === undefined || value === null) {\n      this.setState({\n        [type]: ''\n      });\n    } else {\n      this.setState({\n        [type]: value.value\n      });\n    }\n\n    if (type === 'client') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          client: ''\n        });\n      } else {\n        this.setState({\n          client: value.value\n        });\n      }\n    }\n\n    if (type === 'binder') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          binder: ''\n        });\n      } else {\n        this.getSubBinderByBinderId(value);\n        this.setState({\n          binder: value.value\n        });\n      }\n    }\n\n    if (type === 'policyMonth') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyMonth: ''\n        });\n      } else {\n        this.setState({\n          policyMonth: value.value\n        });\n      }\n    }\n\n    if (type === 'policyYear') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyYear: ''\n        });\n      } else {\n        this.setState({\n          policyYear: value.value\n        });\n      }\n    }\n\n    if (type === 'policyType') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyType: ''\n        });\n      } else {\n        this.setState({\n          policyType: value.value\n        });\n      }\n    }\n\n    if (type === 'policyCountry') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyCountry: ''\n        });\n      } else {\n        this.setState({\n          policyCountry: value.value\n        });\n      }\n    }\n\n    if (type === 'policyAgentServiceCenter') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyAgentServiceCenter: ''\n        });\n      } else {\n        this.setState({\n          policyAgentServiceCenter: value.value\n        });\n      }\n    }\n\n    if (type === 'policyCurrency') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyCurrency: ''\n        });\n      } else {\n        this.setState({\n          policyCurrency: value.value\n        });\n      }\n    }\n\n    if (type === 'policyLanguage') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyLanguage: ''\n        });\n      } else {\n        this.setState({\n          policyLanguage: value.value\n        });\n      }\n    }\n\n    if (type === 'stageFilter') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          stageFilter: '',\n          selectedPolicy: [],\n          stage: ''\n        });\n      } else {\n        this.setState({\n          stageFilter: value,\n          selectedPolicy: [],\n          stage: ''\n        });\n      }\n    }\n\n    if (type === 'referredTo') {\n      this.setState({\n        referredTo: value\n      });\n    }\n  }\n\n  filterData() {\n    let date = {};\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.state.stageFilterList = [];\n\n    if ('QUOTE' == radioSelected || 'NEWBUSINESS' == radioSelected) {\n      this.state.stageFilterList = this.state.stageList.filter(function (data) {\n        return data.StringMapType == 'NEWBUSINESSSTAGE';\n      });\n    } else if ('RENEWAL' == radioSelected) {\n      this.state.stageFilterList = this.state.stageList.filter(function (data) {\n        return data.StringMapType == 'RENEWALSTAGE';\n      });\n    } else {\n      this.state.stageFilterList = this.state.stageList;\n    }\n\n    this.setState({\n      stageFilter: '',\n      searchType: radioSelected,\n      stageFilterList: this.state.stageFilterList\n    });\n\n    if (radioSelected === \"ALL\") {\n      setTimeout(() => {\n        this.getSearchPolicy();\n      }, 100);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  changePolicyDateView() {\n    this.setState({\n      isMonthYear: !this.state.isMonthYear\n    });\n  }\n\n  getSearchPolicy() {\n    try {\n      this.state.selectedPolicy = [];\n      this.state.stage = '';\n      const data = {\n        searchType: this.state.searchType,\n        offSet: this.state.offset\n      };\n\n      if (this.state.searchType != 'ALL') {\n        if (this.state.searchType == 'QUICK') {\n          if (CommonConfig.isEmpty(this.state.policyNumber) && CommonConfig.isEmpty(this.state.clientNamePhoneEmail)) {\n            toast.error('Please fill at least one value to search');\n            return false;\n          }\n\n          data.PolicyNumber = CommonConfig.isEmpty(this.state.policyNumber) ? '' : this.state.policyNumber;\n          data.ClientNamePhoneEmail = CommonConfig.isEmpty(this.state.clientNamePhoneEmail) ? '' : this.state.clientNamePhoneEmail;\n          data.ClientNamePhoneEmail = data.ClientNamePhoneEmail.replace(\"'\", \"\\'\");\n        } else {\n          if (CommonConfig.isEmpty(this.state.clientName) && CommonConfig.isEmpty(this.state.policyPhoneEmail) && CommonConfig.isEmpty(this.state.policyType) && CommonConfig.isEmpty(this.state.policyCountry) && CommonConfig.isEmpty(this.state.policyLanguage) && CommonConfig.isEmpty(this.state.policyCurrency) && CommonConfig.isEmpty(this.state.policyAgentServiceCenter)) {\n            if (this.state.isMonthYear) {\n              if (CommonConfig.isEmpty(this.state.policyMonth) && CommonConfig.isEmpty(this.state.policyYear)) {\n                toast.error('Please fill at least one value to search.');\n                return false;\n              }\n            } else {\n              if (CommonConfig.isEmpty(this.state.policyFrom) && CommonConfig.isEmpty(this.state.policyTo)) {\n                toast.error('Please fill at least one value to search.');\n                return false;\n              }\n            }\n          }\n\n          data.ClientName = CommonConfig.isEmpty(this.state.clientName) ? '' : this.state.clientName;\n          data.ClientName = data.ClientName.replace(\"'\", \"\\'\");\n          data.PhoneEmail = CommonConfig.isEmpty(this.state.policyPhoneEmail) ? '' : this.state.policyPhoneEmail;\n          data.PolicyType = CommonConfig.isEmpty(this.state.policyType) ? '' : this.state.policyType;\n          data.PolicyMonth = CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth;\n          data.IsDateRange = this.state.isMonthYear ? false : true;\n          data.PolicyYear = CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear;\n          data.PolicyFrom = CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom;\n          data.PolicyTo = CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo;\n          data.PolicyCountry = CommonConfig.isEmpty(this.state.policyCountry) ? '' : this.state.policyCountry;\n          data.PolicyLanguage = CommonConfig.isEmpty(this.state.policyLanguage) ? '' : this.state.policyLanguage;\n          data.PolicyCurrency = CommonConfig.isEmpty(this.state.policyCurrency) ? '' : this.state.policyCurrency;\n          data.Stage = CommonConfig.isEmpty(this.state.stageFilter) ? '' : this.state.stageFilter;\n          data.PolicyAgentServiceCenter = CommonConfig.isEmpty(this.state.policyAgentServiceCenter) ? '' : this.state.policyAgentServiceCenter;\n        }\n      }\n\n      console.log(\"searchPolicy--------\", data);\n      this.setState({\n        SavedData: data\n      });\n      api.post('api/searchPolicy', data).then(res => {\n        console.log(\"searchPolicy--------\", res);\n\n        if (res.success) {\n          var formattedData = [];\n          var totalRecords = 0;\n          var PolicyTypeImage = '';\n          var PolicyTypeAltmsg = '';\n          console.log(\"res.data.....\", res.data);\n\n          for (var i = 0; i < res.data.length; i++) {\n            if (res.data[i].PolicyType === \"MultiVessel\") {\n              PolicyTypeImage = MultiVessel;\n              PolicyTypeAltmsg = 'MV';\n            } else if (res.data[i].PolicyType === \"Vessel\") {\n              PolicyTypeImage = Vessel;\n              PolicyTypeAltmsg = 'V';\n            } else if (res.data[i].PolicyType === \"MarineTrade\") {\n              PolicyTypeImage = MarineTrade;\n              PolicyTypeAltmsg = \"MT\";\n            } else if (res.data[i].PolicyType === \"Miscellaneous\") {\n              PolicyTypeImage = Miscellaneous;\n              PolicyTypeAltmsg = 'MIS';\n            } else if (res.data[i].PolicyType === \"VesselNonrated\") {\n              PolicyTypeImage = VesselNonrated;\n              PolicyTypeAltmsg = 'VN';\n            }\n\n            formattedData.push({\n              SrNo: i + 1,\n              Name: res.data[i].Name,\n              CountryCode: res.data[i].CountryCode,\n              PhoneNumber: res.data[i].PhoneNumber,\n              Email: res.data[i].Email,\n              PolicyId: res.data[i].PolicyId,\n              DocLang: res.data[i].DocLang,\n              InsuranceCompanyName: res.data[i].InsuranceCompanyName,\n              Vessel: res.data[i].VesselName,\n              VesselTypeName: res.data[i].VesselTypeName,\n              SumInsured: res.data[i].SumInsured,\n              CurrentPremium: res.data[i].CurrentPremium,\n              InceptionDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),\n              RenewalDate: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),\n              PolicyType: res.data[i].PolicyType,\n              PolicyTypeImage: PolicyTypeImage,\n              PolicyTypeAltmsg: PolicyTypeAltmsg,\n              PolicyNumber: res.data[i].PolicyNumber,\n              Outstanding: CommonConfig.isEmpty(res.data[i].Outstanding) ? '' : CommonConfig.formatMoney(res.data[i].Outstanding, 2),\n              Status: res.data[i].Status,\n              Stage: res.data[i].Stage,\n              NBOrRN: res.data[i].NBOrRN,\n              IsOrganization: res.data[i].IsOrganization,\n              Department: res.data[i].Department,\n              VesselClassName: res.data[i].VesselClassName,\n              Value: CommonConfig.formatMoney(res.data[i].SumInsured, 2),\n              Premium: CommonConfig.isEmpty(res.data[i].Premium) ? '' : res.data[i].Premium,\n              Created: CommonConfig.isEmpty(res.data[i].InceptionDate) ? '' : moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n              Renewal: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n              Updated: CommonConfig.isEmpty(res.data[i].UpdatedOn) ? '' : moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),\n              UpdatedByName: CommonConfig.isEmpty(res.data[0].UpdatedByName) ? '' : res.data[0].UpdatedByName,\n              CreatedByName: CommonConfig.isEmpty(res.data[0].CreatedByName) ? '' : res.data[0].CreatedByName,\n              Currency: res.data[i].Currency,\n              InceptionRenewalDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker) + \" \" + moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n              Client: res.data[i].EntityType === 'person' ? res.data[i].Forename + '' + res.data[i].SurName : \"\",\n              Country: res.data[i].Country,\n              ClientDetails: res.data[i].Name + \" \" + CommonConfig.formatPhoneNumber(res.data[i].CountryCode + res.data[i].PhoneNumber) + \" \" + res.data[i].Email,\n              PolicyData: res.data[i].PolicyType + \" \" + res.data[i].PolicyNumber + \" \" + res.data[i].DocLang,\n              DepartmentDetails: res.data[i].Department + \" \" + res.data[i].SubAgentName + \" \" + res.data[i].SubAgentPhone + \" \" + res.data[i].SubAgentEmail,\n              VesselDetails: res.data[i].VesselClassName + \" \" + res.data[i].VesselTypeName,\n              Note: res.data[i].Note,\n              PremiumDetails: res.data[i].PremiumDetails,\n              PreiumDifferencePercentage: res.data[i].PreiumDifferencePercentage,\n              RenewalPremium: res.data[i].RenewalPremium,\n              SubAgentName: res.data[i].SubAgentName,\n              SubAgentEmail: res.data[i].SubAgentEmail,\n              SubAgentPhone: res.data[i].SubAgentPhone,\n              HandlerPerson: res.data[i].HandlerPerson,\n              LockedByPerson: res.data[i].LockedByPerson,\n              LockedByPersonId: res.data[i].LockedByPersonId,\n              IsCurrentUserUW: res.data[i].IsCurrentUserUW,\n              IsSelfLocked: res.data[0].IsSelfLocked,\n              ReferredToPerson: res.data[i].ReferredToPerson\n            });\n          }\n\n          console.log(\"formatted data...\", formattedData);\n          totalRecords = formattedData.length; // TODO: get from response\n\n          let firstPage = formattedData.length ? '1' : '0';\n          let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n          let recordStr = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n          let str = recordStr; //(this.state.searchType == 'ALL') ? recordStr : '';\n\n          this.setState({\n            arr: formattedData,\n            str: str,\n            recordStr: recordStr,\n            totalRecords: totalRecords\n          });\n          this.checkPrevNextHandle(); // if (CommonConfig.isEmpty(this.state.stageFilter)) {\n          //     this.setState({ stageList: this.state.stageFilterList });\n          // } else {\n          //     this.getPolicyStage();\n          // }\n        } else {}\n      }).catch(err => {\n        console.log(\"searchPolicy-API-Error\", err);\n      });\n    } catch (error) {\n      console.log(\"searchPolicy-Error\", error);\n    }\n  }\n\n  getPreviousRecords() {\n    let offset = this.state.offset > 0 ? parseInt(this.state.offset) - 1 : 0;\n    this.setState({\n      offset: offset\n    });\n    setTimeout(() => {\n      this.getSearchPolicy();\n    }, 100);\n  }\n\n  getNextRecords() {\n    let offset = this.state.offset >= 0 ? parseInt(this.state.offset) + 1 : 0;\n    this.setState({\n      offset: offset\n    });\n    setTimeout(() => {\n      this.getSearchPolicy();\n    }, 100);\n  }\n\n  checkPrevNextHandle() {\n    if (this.state.offset > 0) {\n      this.setState({\n        isPreviousVisible: false\n      });\n    } else {\n      this.setState({\n        isPreviousVisible: true\n      });\n    }\n  }\n\n  getNoteList(rowData) {\n    this.setState({\n      NavID: null\n    });\n    const data = {\n      'entityId': rowData.PolicyId,\n      'entityType': 'Policy',\n      'CurrentUser': CommonConfig.loggedInUserData().EntityId\n    }; // api.post('api/getNotes', data).then(res => {\n\n    api.post('api/getNewBusineesNotes', data).then(res => {\n      if (res.success) {\n        this.setState({\n          policyNoteList: res.data,\n          openNotePopup: true,\n          NavID: rowData.PolicyId\n        });\n      } else {\n        toast.warn(\"No notes found for Policy.\");\n      }\n    }).catch(err => {\n      console.log(\"getNoteList err\", err);\n    });\n  }\n\n  getNotesType() {\n    try {\n      const data = {\n        stringmaptype: 'NOTETYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            noteType: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  selectNoteType(value, type) {\n    if (value === '' || value === null) {\n      this.setState({\n        NotesTypeError: true,\n        notesType: value\n      });\n      this.show('notesType', true);\n    } else {\n      this.setState({\n        NotesTypeError: false,\n        notesType: value\n      });\n      this.show('notesType', false);\n    }\n  }\n\n  Important() {\n    this.state.isImportant === 0 ? this.setState({\n      isImportant: 1\n    }) : this.setState({\n      isImportant: 0\n    });\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1615,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1616,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1618,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1622,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1623,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1624,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      size: \"30\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1625,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      iconPos: \"left\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'left'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 25\n      }\n    })))));\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1634,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1639,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1640,\n        columnNumber: 21\n      }\n    }, t(\"policyList:PolicyList\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltip: \"New Policy Setup\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.redirectToNewPolicy(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1648,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1649,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1653,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1656,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1657,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1658,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 33\n      }\n    }, t(\"policyList:SearchPolicy\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1661,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1665,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gt-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1668,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gtradio-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1671,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"searchType\",\n      id: \"searchType\",\n      checked: this.state.searchType === 'QUICK' ? true : false,\n      value: this.state.searchType,\n      onChange: e => this.onRadioBtnClick('QUICK'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1672,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"front-end box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1675,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1676,\n        columnNumber: 57\n      }\n    }, \"Quick\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gtradio-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1680,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1681,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"searchType\",\n      id: \"searchType\",\n      checked: this.state.searchType === 'QUOTE' ? true : false,\n      value: this.state.searchType,\n      onChange: () => this.onRadioBtnClick('QUOTE'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1682,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"front-end box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1685,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 57\n      }\n    }, \"Quote\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gtradio-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1690,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"searchType\",\n      id: \"searchType\",\n      checked: this.state.searchType === 'NEWBUSINESS' ? true : false,\n      value: this.state.searchType,\n      onChange: () => this.onRadioBtnClick('NEWBUSINESS'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"front-end box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1695,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1696,\n        columnNumber: 57\n      }\n    }, \"New Business\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gtradio-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1700,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1701,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"searchType\",\n      id: \"searchType\",\n      checked: this.state.searchType === 'RENEWAL' ? true : false,\n      value: this.state.searchType,\n      onChange: () => this.onRadioBtnClick('RENEWAL'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1702,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"front-end box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1705,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1706,\n        columnNumber: 57\n      }\n    }, \"Renewal\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gtradio-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1710,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1711,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"searchType\",\n      id: \"searchType\",\n      checked: this.state.searchType === 'CUSTOM' ? true : false,\n      value: this.state.searchType,\n      onChange: () => this.onRadioBtnClick('CUSTOM'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1712,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"front-end box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1715,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 57\n      }\n    }, \"Custom\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gtradio-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1720,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1721,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"searchType\",\n      id: \"searchType\",\n      checked: this.state.searchType === 'ALL' ? true : false,\n      value: this.state.searchType,\n      onChange: e => this.onRadioBtnClick('ALL'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1722,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"front-end box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1726,\n        columnNumber: 57\n      }\n    }, \"All\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1733,\n        columnNumber: 37\n      }\n    }, this.state.searchType == 'QUICK' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1735,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1736,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1737,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1738,\n        columnNumber: 57\n      }\n    }, \"Policy Number\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"policyNumber\",\n      id: \"policyNumber\",\n      value: this.state.policyNumber,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Enter Policy Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1739,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyNumberError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1740,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1744,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1745,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1746,\n        columnNumber: 57\n      }\n    }, \"Client/Phone/Email\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"clientNamePhoneEmail\",\n      id: \"clientNamePhoneEmail\",\n      value: this.state.clientNamePhoneEmail,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Enter Client/Phone/Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1747,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyNumberError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1748,\n        columnNumber: 57\n      }\n    })))) : null, this.state.searchType != 'QUICK' && this.state.searchType != 'ALL' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1756,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1757,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 57\n      }\n    }, \"Client\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"clientName\",\n      id: \"clientName\",\n      value: this.state.clientName,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Enter Client Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1759,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"clientNameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1765,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1766,\n        columnNumber: 57\n      }\n    }, \"Phone/Email\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"policyPhoneEmail\",\n      id: \"policyPhoneEmail\",\n      value: this.state.policyPhoneEmail,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Enter Client/Phone/Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1767,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyPhoneEmailError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1768,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1772,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1773,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 57\n      }\n    }, \"Policy Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyType\",\n      id: \"policyType\",\n      value: this.state.policyType,\n      onChange: e => this.selectType(e.target, 'policyType'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1775,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1776,\n        columnNumber: 61\n      }\n    }, \"Select Policy Type\"), this.state.policyTypeArray.map((policyType, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: policyType.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1778,\n          columnNumber: 73\n        }\n      }, policyType.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1782,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1787,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        alignSelf: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1788,\n        columnNumber: 57\n      }\n    }, this.state.searchType == 'RENEWAL' ? /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790,\n        columnNumber: 65\n      }\n    }, \"Policy Renewal\") : /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1792,\n        columnNumber: 69\n      }\n    }, \"Policy Inception\")), this.state.isMonthYear ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1796,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1797,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1798,\n        columnNumber: 69\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyMonth\",\n      id: \"policyMonth\",\n      value: this.state.policyMonth,\n      onChange: e => this.selectType(e.target, 'policyMonth'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1799,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1800,\n        columnNumber: 73\n      }\n    }, \"Select Month\"), this.state.monthArray.map((month, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month.value,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1802,\n          columnNumber: 85\n        }\n      }, month.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyMonthError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1806,\n        columnNumber: 69\n      }\n    }))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1811,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1812,\n        columnNumber: 73\n      }\n    }, \"From\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"policyFrom\",\n      id: \"policyFrom\",\n      value: this.state.policyFrom,\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1813,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyFromError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1817,\n        columnNumber: 73\n      }\n    }))), this.state.isMonthYear ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1822,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1823,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1824,\n        columnNumber: 69\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyYear\",\n      id: \"policyYear\",\n      value: this.state.policyYear,\n      onChange: e => this.selectType(e.target, 'policyYear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1825,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1826,\n        columnNumber: 73\n      }\n    }, \"Select Year\"), this.state.yearArray.map((year, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: year.value,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1828,\n          columnNumber: 85\n        }\n      }, year.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyYearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1832,\n        columnNumber: 69\n      }\n    }))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1838,\n        columnNumber: 73\n      }\n    }, \"To\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"policyTo\",\n      id: \"policyTo\",\n      value: this.state.policyTo,\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1839,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyToError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1843,\n        columnNumber: 73\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        alignSelf: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 57\n      }\n    }, this.state.isMonthYear ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        textDecoration: 'underline'\n      },\n      onClick: () => this.changePolicyDateView(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1850,\n        columnNumber: 65\n      }\n    }, \"Change to Date Range\") : /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        textDecoration: 'underline'\n      },\n      onClick: () => this.changePolicyDateView(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1852,\n        columnNumber: 69\n      }\n    }, \"Change to Month/Year\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1859,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1860,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1861,\n        columnNumber: 57\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyCountry\",\n      id: \"policyCountry\",\n      onChange: e => this.selectType(e.target, 'policyCountry'),\n      value: this.state.policyCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1862,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1863,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.countryList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 73\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyCountryError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1869,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1873,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1874,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1875,\n        columnNumber: 57\n      }\n    }, \"Language\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyLanguage\",\n      id: \"policyLanguage\",\n      onChange: e => this.selectType(e.target, 'policyLanguage'),\n      value: this.state.policyLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1876,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1877,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.documentLanguageList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1879,\n          columnNumber: 73\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyLanguageError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1887,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1888,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1889,\n        columnNumber: 57\n      }\n    }, \"Currency\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyCurrency\",\n      id: \"policyCurrency\",\n      onChange: e => this.selectType(e.target, 'policyCurrency'),\n      value: this.state.policyCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1890,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1891,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.currencyList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1893,\n          columnNumber: 73\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyCurrencyError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1897,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1901,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1902,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1903,\n        columnNumber: 57\n      }\n    }, \"Stage\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"stageFilter\",\n      id: \"stageFilter\",\n      value: this.state.stageFilter,\n      onChange: e => this.selectType(e.target.value, 'stageFilter'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1904,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1905,\n        columnNumber: 61\n      }\n    }, \"Select\"), this.state.stageFilterList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1907,\n          columnNumber: 73\n        }\n      }, ct.StringMapKey);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"stageFilterError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1910,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1914,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1915,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1916,\n        columnNumber: 57\n      }\n    }, \"Agent / Service Center\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"policyAgentServiceCenter\",\n      id: \"policyAgentServiceCenter\",\n      options: this.state.policyAgentServiceCenterList,\n      value: this.state.policyAgentServiceCenter,\n      onChange: data => this.selectType(data, 'policyAgentServiceCenter'),\n      placeholder: \"Select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1917,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyAgentServiceCenterError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1918,\n        columnNumber: 57\n      }\n    })))) : null), this.state.searchType != 'ALL' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1927,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1928,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      type: \"submit\",\n      color: \"success\",\n      title: \"Go\",\n      onClick: () => this.getSearchPolicy(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1929,\n        columnNumber: 49\n      }\n    }, \" Go \"))) : null))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1954,\n        columnNumber: 17\n      }\n    }, this.state.selectedPolicy.length > 0 ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1955,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      style: {\n        minHeight: '57px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1956,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1957,\n        columnNumber: 29\n      }\n    }, \" Stage \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1958,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        display: \"inline-block\",\n        width: \"auto\",\n        marginLeft: 10\n      },\n      type: \"select\",\n      name: \"stage\",\n      id: \"stage\",\n      value: this.state.stage,\n      onChange: e => this.savePolicyStage(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1959,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1960,\n        columnNumber: 37\n      }\n    }, \"Select\"), this.state.stageFilterList.map((ct, i) => {\n      if (this.state.stageFilter == ct.StringMapKey) {\n        return null;\n      } else {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: ct.StringMapKey,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1966,\n            columnNumber: 57\n          }\n        }, ct.StringMapKey);\n      }\n    }))))) : null, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      selection: this.state.selectedPolicy,\n      onSelectionChange: e => this.setSelectedPolicy(e.value),\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Policy List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1975,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      selectionMode: \"multiple\",\n      style: {\n        width: '3em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1997,\n        columnNumber: 25\n      }\n    }), columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleStageChangeModal,\n      toggle: () => this.toggleStageChange('stageChange'),\n      className: 'modal-mg modal-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2003,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleStageChange('stageChange'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2005,\n        columnNumber: 21\n      }\n    }, \"Change Stage Confirmation\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2006,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2007,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2008,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2009,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2010,\n        columnNumber: 37\n      }\n    }, \"Changing Stage To \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2010,\n        columnNumber: 62\n      }\n    }, this.state.stage)))), this.state.stage == 'Referred' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2014,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2015,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2016,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2017,\n        columnNumber: 45\n      }\n    }, \" Referred To *\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2018,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"referredTo\",\n      id: \"referredTo\",\n      onChange: e => this.selectType(e.target.value, 'referredTo'),\n      value: this.state.referredTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2019,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2020,\n        columnNumber: 53\n      }\n    }, \"Select\"), this.state.referrList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.EntityId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2023,\n          columnNumber: 69\n        }\n      }, ct.Forename);\n    })))))) : null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2031,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2032,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2033,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2034,\n        columnNumber: 41\n      }\n    }, \"Note\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"changeNote\",\n      id: \"changeNote\",\n      onChange: e => this.handleChangePolicyDetail(e),\n      value: this.state.changeNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2035,\n        columnNumber: 41\n      }\n    })))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2042,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.savePolicyStage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2043,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2044,\n        columnNumber: 29\n      }\n    }), \"Proceed\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"danger\",\n      onClick: () => this.toggleStageChange('stageChange'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2047,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2048,\n        columnNumber: 29\n      }\n    }), \"Close\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.openNotePopup,\n      className: 'modal-lg',\n      style: {\n        maxWidth: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2055,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.setState({\n        openNotePopup: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2056,\n        columnNumber: 21\n      }\n    }, \" Notes \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2058,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2059,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2060,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        addNoteCollapse: !this.state.addNoteCollapse\n      }),\n      \"aria-expanded\": this.state.addNoteCollapse,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2061,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2062,\n        columnNumber: 37\n      }\n    }, \" AddNotes \", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: \"right\"\n      },\n      className: this.state.addNoteCollapse ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2062,\n        columnNumber: 71\n      }\n    }), \" \"))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.addNoteCollapse,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2066,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2067,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2068,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2069,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box with-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2070,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2071,\n        columnNumber: 49\n      }\n    }, t(\"contactNotes:NotesType.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"notesType\",\n      id: \"notesType\",\n      onChange: e => this.selectNoteType(e.target.value, 'notesType'),\n      value: this.state.notesType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2072,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2073,\n        columnNumber: 53\n      }\n    }, t(\"contactNotes:NotesType.placeholder\")), this.state.noteType.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2075,\n          columnNumber: 65\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2079,\n        columnNumber: 49\n      }\n    }, t(\"contactNotes:NotesType.error_blank\")), /*#__PURE__*/React.createElement(\"a\", {\n      title: t(\"contactNotes:ImportantNotes\"),\n      href: \"javascript:void(0)\",\n      onClick: () => this.Important(),\n      style: {\n        color: this.state.isImportant === 0 ? '#aaaaaa' : '#ff0000',\n        fontSize: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2080,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-exclamation-circle\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2080,\n        columnNumber: 238\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2084,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2085,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2086,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2087,\n        columnNumber: 49\n      }\n    }, t(\"contactNotes:Notes.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"notesdescription\",\n      id: \"notesdescription\",\n      placeholder: t(\"contactNotes:Notes.placeholder\"),\n      value: this.state.notesdescription,\n      onChange: e => this.handleChangeNote(e),\n      autoResize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2088,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2089,\n        columnNumber: 49\n      }\n    }, t(\"contactNotes:Notes.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2093,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2094,\n        columnNumber: 41\n      }\n    }, this.state.isNoteEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2097,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveNotes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2098,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2098,\n        columnNumber: 111\n      }\n    }), \" Update\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099,\n        columnNumber: 107\n      }\n    }), \" Cancel\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveNotes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2103,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2103,\n        columnNumber: 111\n      }\n    }), \" Save\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104,\n        columnNumber: 107\n      }\n    }), \" Cancel\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"added-note-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2115,\n        columnNumber: 29\n      }\n    }, this.state.policyNoteList.length, \" notes\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2116,\n        columnNumber: 29\n      }\n    }, this.state.policyNoteList.map((notes, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2120,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"addednote-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2121,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: notes.IsFlag.data[0] === 0 ? '#aaaaaa' : '#ff0000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2122,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-exclamation-circle\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2122,\n          columnNumber: 129\n        }\n      })), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2123,\n          columnNumber: 53\n        }\n      }, notes.NoteType), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2124,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(ShowMoreText, {\n        lines: 2,\n        more: \"Show more\",\n        less: \"Show less\",\n        anchorClass: \"\",\n        onClick: this.executeOnClick,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2125,\n          columnNumber: 57\n        }\n      }, notes.NoteText)), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2135,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2136,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2137,\n          columnNumber: 61\n        }\n      }, \"Added By\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2138,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-user\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2138,\n          columnNumber: 112\n        }\n      }), \" \", notes.CreatedByName), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2139,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-calendar\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2139,\n          columnNumber: 84\n        }\n      }), \" \", moment(notes.CreatedOn).format(CommonConfig.dateFormat.dateTime))), notes.UpdatedByName != null ? /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2142,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2143,\n          columnNumber: 65\n        }\n      }, \"Updated By\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2144,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-user\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2144,\n          columnNumber: 116\n        }\n      }), \" \", notes.UpdatedByName), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2145,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-calendar\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2145,\n          columnNumber: 88\n        }\n      }), \" \", moment(notes.UpdatedOn).format(CommonConfig.dateFormat.dateTime))) : null)));\n    }))))));\n  }\n\n}\n\nexport default withTranslation()(SearchPolicy);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/SearchPolicy.js"],"names":["React","Component","Collapse","Button","BTN","Card","CardHeader","CardBody","Col","Row","Input","Form","Modal","ModalHeader","ModalBody","ModalFooter","UncontrolledTooltip","api","withTranslation","DataTable","Column","MultiSelect","InputText","CommonConfig","DatePicker","moment","APIConstant","Select","toast","ShowMoreText","Vessel","MultiVessel","NewBusiness","Renewal","SubAgent","Organization","Direct","MarineTrade","VesselNonrated","Miscellaneous","Online","ServiceCenter","SearchPolicy","constructor","props","toggleStageChange","state","toggleStageChangeModal","setState","stage","referredTo","changeNote","selectedPolicy","setSelectedPolicy","e","handleChangePolicyDetail","target","name","value","changeNoteError","RegExp","allowAllWithSpace","test","getPageString","firstPage","first","l","rows","page","lastPage","arr","length","str","selectedPage","rowsPerPage","toggleLargeAdd","toggleModalAdd","toggleCustom","tab","prevState","custom","map","x","index","redirectToNewPolicy","splitData","location","pathname","split","undefined","history","push","id","handleChange","t","policyNumberErro","policyNumber","clientNamePhoneEmailError","clientNamePhoneEmail","clientNameError","clientName","policyPhoneEmail","policyFrom","policyTo","show","isEmpty","isToDateGreater","isSameOrAfter","saveNotes","NotesTypeError","notesdescriptionError","NotesForm","FormData","append","notesType","notesdescription","trim","NavID","isImportant","loggedInUserId","LanguageId","post","then","res","success","reset","getNoteList","PolicyId","catch","err","handleChangeNote","addNoteCollapse","columns","body","actionTemplate","bind","header","sortable","filter","formatPolicyDetail","field","filterMatchMode","formatContactDetail","formatVesselData","formatPremiun","formatDate","formatDepartment","formatStage","contactShown","cols","clientArray","client","phoneArray","phone","emailArray","email","policyNumberArray","binderArray","binder","subBinderArray","subBinder","policyStartFromDate","policyStartToDate","policyRenewalFromDate","policyRenewalToDate","agentserviceCenter","sumInsuredfrom","sumInsuredTo","filteredcontactsSingle","contactArray","rowsPerPageOptions","dataTableConfig","isExpand","countryList","country","languageArray","currencyArray","policyStatusList","policyStatus","policyTypeArray","policyType","vesselClassArray","vesselClassCopy","vesselClass","vesselType","vesselTypeArray","isMonthYear","searchType","monthArray","policyMonth","format","policyMonthError","yearArray","policyYear","policyYearError","policyPhoneEmailError","documentLanguageList","policyLanguage","policyLanguageError","currencyList","policyCurrency","policyCurrencyError","policyFromError","policyToError","offset","recordStr","isPreviousVisible","isNextVisible","changeStage","stageList","stageFilterList","stageFilter","referrList","openNotePopup","policyNoteList","noteType","SavedData","loggedInUserData","colOptions","col","label","onColumnToggle","export","getAllStageList","data","console","log","onRadioBtnClick","getPolicyStage","Stage","getSpGetUsersByTeam","TeamName","savePolicyStage","error","SendString","forEach","PolicyNumber","CurrentUser","ChangeNote","ReferredTo","PolicyData","returnValue","getSearchPolicy","componentDidMount","getDropDownValues","getLanguage","getCurrency","getVesselClass","getPolicyClientName","getAllEmailList","getAllcontactList","getAllpolicyNumber","getAllBinder","getDropdown","getAgentServiceCenterList","getNotesType","componentWillUpdate","nextProps","match","isExact","setTimeout","getPolicyList","startYear","parseInt","formattedLanguage","get","path","i","Language","formattedCurrency","CurrncyCode","ContactType","formattedData","OrganizationName","OrganizationId","policyAgentServiceCenterList","event","valueInOrder","sort","y","edit","rowData","window","open","origin","getImageIcon","linkType","LockedByPerson","Number","IsCurrentUserUW","IsSelfLocked","fontSize","releaseLock","cursor","reloadSavedData","totalRecords","PolicyTypeImage","PolicyTypeAltmsg","PolicyType","SrNo","Name","CountryCode","PhoneNumber","Email","DocLang","InsuranceCompanyName","VesselName","VesselTypeName","SumInsured","CurrentPremium","InceptionDate","dateFormat","forDatePicker","RenewalDate","Outstanding","formatMoney","Status","NBOrRN","IsOrganization","Department","VesselClassName","Value","Premium","Created","dateOnly","Updated","UpdatedOn","UpdatedByName","CreatedByName","Currency","InceptionRenewalDate","Client","EntityType","Forename","SurName","Country","ClientDetails","formatPhoneNumber","DepartmentDetails","SubAgentName","SubAgentPhone","SubAgentEmail","VesselDetails","Note","PreiumDifferencePercentage","RenewalPremium","HandlerPerson","LockedByPersonId","ReferredToPerson","checkPrevNextHandle","PremiumDetails","column","marginRight","position","dt","exportCSV","EntityId","FullName","BinderId","UMRN","getSubBinderByBinderId","SubBinderId","Title","formattedArray","VesselClassId","getVesselType","VesselTypeId","IsAdvance","entityId","entityType","isAdvance","LastUpdatedBy","CreatedBy","LastUpdated","filterSingle","results","contact","toLowerCase","startsWith","query","stringMapType","setStateName","stringmaptype","orderby","dropdownbycode","gotoNextPage","selectType","type","policyCountry","policyAgentServiceCenter","filterData","date","radioSelected","StringMapType","condition","errorField","message","document","getElementById","className","innerHTML","changePolicyDateView","offSet","ClientNamePhoneEmail","replace","ClientName","PhoneEmail","PolicyMonth","IsDateRange","PolicyYear","PolicyFrom","PolicyTo","PolicyCountry","PolicyLanguage","PolicyCurrency","PolicyAgentServiceCenter","getPreviousRecords","getNextRecords","warn","selectNoteType","Important","render","columnToggleIcon","width","textAlign","margin","globalFilter","float","preventDefault","StringMapKey","StringMapName","alignSelf","month","year","textDecoration","ct","minHeight","display","marginLeft","el","maxWidth","handleSubmit","padding","color","isNoteEdit","notes","IsFlag","NoteType","executeOnClick","NoteText","CreatedOn","dateTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Button as BTN, Card, CardHeader, CardBody, Col, Row, Input, Form, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledTooltip } from 'reactstrap';\nimport { Button } from 'primereact/button';\nimport api from '../../utils/apiClient';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig } from '../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport APIConstant from '../../utils/constants';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport { toast } from 'react-toastify';\nimport ShowMoreText from 'react-show-more-text';\n\nimport Vessel from '../../assets/Vessel.png';\nimport MultiVessel from '../../assets/MultiVessel.png';\nimport NewBusiness from '../../assets/NewBusiness.png';\nimport Renewal from '../../assets/Renewal.png';\nimport SubAgent from '../../assets/SubAgent.png';\nimport Organization from '../../assets/Organization.png';\nimport Direct from '../../assets/Direct.png';\nimport MarineTrade from '../../assets/MarineTrade.png';\nimport VesselNonrated from '../../assets/VesselNonrated.png';\nimport Miscellaneous from '../../assets/Miscellaneous.png';\nimport Online from '../../assets/Online.png';\nimport ServiceCenter from '../../assets/ServiceCenter.png';\n\nclass SearchPolicy extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let columns = [\n            // { field: \"SrNo\", header: \"Sr No.\", sortable: true, filter: true, id: 0 },\n            // { field: \"Type\", header: \"Type.\", sortable: true, filter: true, id: 1 },\n            // { field: \"PolicyNo\", header: \"Policy No.\", sortable: true, filter: true, id: 2 },\n            // { field: \"BoatType\", header: \"Outstanding Amount\", sortable: true, filter: true, id: 3 },\n            // { field: \"Status\", header: \"Status\", sortable: true, filter: true, id: 4 },\n            // { field: \"Department\", header: \"Department\", sortable: true, filter: true, id: 4 },\n            // { field: \"Vessel\", header: \"Vessel\", sortable: true, filter: true, id: 5 },\n            // { field: \"Value\", header: \"Value.\", sortable: true, filter: true, id: 6 },\n            // { field: \"Premiun\", header: \"Premiun\", sortable: true, filter: true, id: 7 },\n            // { field: \"Created\", header: \"Created\", sortable: true, filter: true, id: 8 },\n            // { field: \"Renewal\", header: \"Renewal\", sortable: true, filter: true, id: 9 },\n            // { field: \"Updated\", header: \"Updated\", sortable: true, filter: true, id: 10 },\n            // { field: \"LastUpdatedBy\", header: \"Last Updated By\", sortable: true, filter: true, id: 11 },\n            // { field: \"CreatedBy\", header: \"Created by\", sortable: true, filter: true, id: 12 },\n            // { field: \"Currency\", header: \"Currency\", sortable: true, filter: true, id: 13 },\n            // { field: \"Client\", header: \"Client\", sortable: true, filter: true, id: 14 },\n            // { field: \"Country\", header: \"Country\", sortable: true, filter: true, id: 15 },\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, id: 0 },\n            { body: this.formatPolicyDetail.bind(this), field: \"PolicyData\", header: \"Policy No/Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\n            { body: this.formatContactDetail.bind(this), field: \"ClientDetails\", header: \"Client/Contacts\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\n            { body: this.formatVesselData.bind(this), field: \"VesselDetails\", header: \"Vessel\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\n            { field: \"InsuranceCompanyName\", header: \"Insurer\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\n            { body: this.formatPremiun.bind(this),field: \"PremiumDetails\", header: \"SI/Premium\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\n            { body: this.formatDate.bind(this), field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\n            { body: this.formatDepartment.bind(this) ,field: \"DepartmentDetails\", header: \"Department\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\n            { body: this.formatStage.bind(this), field: \"Stage\", header: \"Stage\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\n            { field: \"HandlerPerson\", header: \"Handler\", sortable: true, filter: true, filterMatchMode: 'contains', id: 9 },\n            { field: \"Status\", header: \"Status\", sortable: true, filter: true, filterMatchMode: 'contains', id: 10 },\n        ];\n\n        this.state = {\n            toggleModalAdd: false,\n            contactShown: '',\n            cols: columns,\n            clientArray: [],\n            client: '',\n            phoneArray: [],\n            phone: '',\n            str: '',\n            emailArray: [],\n            email: '',\n            policyNumberArray: [],\n            policyNumber: '',\n            binderArray: [],\n            binder: '',\n            subBinderArray: [],\n            subBinder: '',\n            policyStartFromDate: '',\n            policyStartToDate: '',\n            policyRenewalFromDate: '',\n            policyRenewalToDate: '',\n            agentserviceCenter: '',\n            sumInsuredfrom: '',\n            sumInsuredTo: '',\n            arr: [],\n            selectedPage: 0,\n            filteredcontactsSingle: null,\n            contactArray: [],\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            custom: true,\n            isExpand: false,\n            countryList: [],\n            country: '',\n            languageArray: [],\n            currencyArray: [],\n            policyStatusList: [],\n            policyStatus: '',\n            policyTypeArray: [],\n            policyType: '',\n            vesselClassArray: [],\n            vesselClassCopy: [],\n            vesselClass: '',\n            vesselType: '',\n            vesselTypeArray: [],\n\n            isMonthYear: true,\n            searchType: 'QUICK',\n            clientNamePhoneEmail: '',\n            clientNamePhoneEmailError: false,\n            monthArray: [],\n            policyMonth: moment().format('M'),\n            policyMonthError: false,\n            yearArray: [],\n            policyYear: moment().format('YYYY'),\n            policyYearError: false,\n            policyPhoneEmail: '',\n            policyPhoneEmailError: false,\n            documentLanguageList: [],\n            policyLanguage: '',\n            policyLanguageError: false,\n            currencyList: [],\n            policyCurrency: '',\n            policyCurrencyError: false,\n            policyFrom: '',\n            policyFromError: false,\n            policyTo: '',\n            policyToError: false,\n\n            offset: 0,\n            recordStr: '',\n            isPreviousVisible: false,\n            isNextVisible: false,\n            toggleStageChangeModal: false,\n            changeNote: '',\n            referredTo: '',\n            changeNoteError: '',\n            changeStage: false,\n            stage: '',\n            stageList: [],\n            stageFilterList: [],\n            stageFilter: '',\n            referrList: [],\n            selectedPolicy: [],\n\n            openNotePopup: false,\n            addNoteCollapse: false,\n            policyNoteList: [],\n            noteType: [],\n            NavID: null,\n            isImportant: 0,\n            notesType: '',\n            notesdescription: '',\n            NotesTypeError: true,\n            notesdescriptionError: true,\n            addNoteCollapse: false,\n            SavedData:{},\n            loggedInUserData: CommonConfig.loggedInUserData(),\n\n        };\n\n        this.colOptions = [];\n        for (let col of columns) {\n            this.colOptions.push({ label: col.header, value: col });\n        }\n        this.onColumnToggle = this.onColumnToggle.bind(this);\n        this.actionTemplate = this.actionTemplate.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    toggleStageChange = () => {\n        if (this.state.toggleStageChangeModal == true) {\n            this.setState({ stage: '', referredTo: '', changeNote: '', selectedPolicy: [] });\n        }\n        this.setState({ toggleStageChangeModal: !this.state.toggleStageChangeModal });\n    }\n\n    setSelectedPolicy = (e) => {\n        this.setState({ selectedPolicy: e })\n    }\n\n    getAllStageList() {\n        const data = {};\n        api.post('api/getAllStageList', data).then(res => {\n            console.log('getAllStageList', res);\n            if (res.success) {\n                this.setState({ stageList: res.data, stageFilterList: res.data });\n                this.onRadioBtnClick(this.state.searchType)\n            }\n        });\n    }\n\n    getPolicyStage() {\n        const data = {\n            PolicyId: \"\",\n            Stage: this.state.stageFilter,\n            loggedInUserId: CommonConfig.loggedInUserId()\n        };\n        api.post('api/getPolicyStage', data).then(res => {\n            console.log('getPolicyStage', res);\n            if (res.success) {\n                this.setState({ stageList: res.data });\n            }\n        });\n    }\n\n    handleChangePolicyDetail = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.name === 'changeNote') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ changeNoteError: true });\n            } else {\n                if (!CommonConfig.RegExp.allowAllWithSpace.test(e.target.value)) {\n                    this.setState({ changeNoteError: true });\n                } else {\n                    this.setState({ changeNoteError: false, changeNote: e.target.value });\n                }\n            }\n        }\n    }\n\n    getSpGetUsersByTeam() {\n        const data = {\n            TeamName: 'Underwriting',\n        };\n        api.post('api/getSpGetUsersByTeam', data).then(res => {\n            console.log('getSpGetUsersByTeam', res);\n            if (res.success) {\n                this.setState({ referrList: res.data });\n            }\n        });\n    }\n\n    savePolicyStage(stage) {\n        if (stage) {\n            this.setState({ stage: stage });\n            this.toggleStageChange()\n        } else {\n            if (this.state.stage == 'Referred') {\n                if (this.state.referredTo == \"\") {\n                    toast.error('Please Select Referred To');\n                    return\n                }\n\n                if (this.state.changeNote == \"\") {\n                    toast.error('Please Enter Note');\n                    return\n                }\n            }\n            var SendString = '';\n            this.state.selectedPolicy.forEach(data => {\n                if (data) {\n                    SendString += data.PolicyId + '#^#' + data.PolicyNumber + ',';\n                }\n            });\n            console.log(SendString);\n            const data = {\n                PolicyId: '',\n                Stage: this.state.stage,\n                CurrentUser: CommonConfig.loggedInUserId(),\n                ChangeNote: this.state.changeNote,\n                ReferredTo: this.state.referredTo,\n                PolicyData: SendString\n            };\n            api.post('api/savePolicyStage', data).then(res => {\n                console.log('savePolicyStage', res.data);\n                if (res.success) {\n                    console.log('savePolicyStage', res.data[0].returnValue);\n\n                    if (CommonConfig.isEmpty(res.data[0].returnValue)) {\n                        toast.success('Policy Stage Changed Successfully to ' + this.state.stage);\n                        this.toggleStageChange()\n                        this.setState({ stage: this.state.stage, changeNote: '', referredTo: '', selectedPolicy: [], changeStage: false });\n                        this.getSearchPolicy()\n                    } else {\n                        toast.success(res.data[0].returnValue);\n                    }\n                }\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.getDropDownValues('POLICYCOUNTRY', 'countryList');\n        this.getDropDownValues('POLICYSTATUS', 'policyStatusList');\n        this.getDropDownValues('POLICYTYPE', 'policyTypeArray');\n        this.getLanguage();\n        this.getCurrency();\n        this.getVesselClass();\n        // this.getPolicyList(0);\n        this.getPolicyClientName();\n        this.getAllEmailList();\n        this.getAllcontactList();\n        this.getAllpolicyNumber();\n        this.getAllBinder();\n        this.getDropdown();\n        this.getAgentServiceCenterList();\n        this.getAllStageList();\n        this.getSpGetUsersByTeam();\n        this.getNotesType();\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.match.isExact !== this.props.match.isExact) {\n            setTimeout(() => {\n                this.getPolicyList(0);\n            }, 100);\n        }\n    }\n\n    getDropdown() {\n\n        // Get Month\n        let monthArray = [\n            { label: 'January', value: 1 },\n            { label: 'February', value: 2 },\n            { label: 'March', value: 3 },\n            { label: 'April', value: 4 },\n            { label: 'May', value: 5 },\n            { label: 'June', value: 6 },\n            { label: 'July', value: 7 },\n            { label: 'August', value: 8 },\n            { label: 'September', value: 9 },\n            { label: 'October', value: 10 },\n            { label: 'November', value: 11 },\n            { label: 'December', value: 12 },\n        ];\n        this.setState({ monthArray: monthArray });\n\n        // Get Year - Get last 10 year from current year\n        let startYear = moment().format('YYYY');\n        let yearArray = [];\n        for (let index = startYear; index >= (parseInt(startYear) - 10); index--) {\n            yearArray.push({ label: index, value: index });\n        }\n        this.setState({ yearArray: yearArray });\n\n        // Get Language\n        var formattedLanguage = [];\n        try {\n            api.get(APIConstant.path.getLanguage).then(res => {\n\n                if (res.success) {\n\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedLanguage.push({\n                            label: res.data[i].Language,\n                            value: res.data[i].Language,\n                        });\n                    }\n                    this.setState({ documentLanguageList: formattedLanguage });\n                } else {\n\n                }\n            }).catch(err => {\n\n            });\n        } catch (err) {\n\n        }\n\n        // Get Currency\n        var formattedCurrency = [];\n        try {\n            api.get(APIConstant.path.getCurrency).then(res => {\n\n                if (res.success) {\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedCurrency.push({\n                            label: res.data[i].CurrncyCode,\n                            value: res.data[i].CurrncyCode,\n                        });\n                    }\n                    this.setState({ currencyList: formattedCurrency });\n                } else {\n\n                }\n            }).catch(err => {\n\n            });\n        } catch (err) {\n        }\n\n    }\n\n    getAgentServiceCenterList() {\n        try {\n            let data = { ContactType: 'Both' };\n            api.post('api/getAgentServiceCenterList', data).then(res => {\n                console.log(\"getAgentServiceCenterList---\", res);\n                if (res.success) {\n                    var formattedData = [];\n                    for (let i = 0; i < res.data[0].length; i++) {\n                        formattedData.push({\n                            label: res.data[0][i].OrganizationName,\n                            value: res.data[0][i].OrganizationId,\n                        })\n                    }\n                    this.setState({ policyAgentServiceCenterList: formattedData });\n                } else {\n                    console.log('getAgentServiceCenterList');\n                }\n            }).catch(err => {\n                console.log('getAgentServiceCenterList', err);\n            });\n        } catch (error) {\n            console.log('getAgentServiceCenterList', error);\n        }\n    }\n\n    onColumnToggle(event) {\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\n        this.setState({ cols: valueInOrder });\n    }\n\n    edit(rowData) {\n            window.open(window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1', '_blank');\n        // this.props.history.push({\n        //     pathname: '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1',\n        //     state: {\n        //         PolicyId: rowData.PolicyId,\n        //         tab: 1\n        //     }\n        // });\n    }\n\n    getImageIcon(rowData){\n        var linkType= '';\n        if(rowData.LockedByPerson ==''){\n            linkType= 'NoLock';\n        }else{\n            if(Number(rowData.IsCurrentUserUW) == 0 && rowData.IsSelfLocked ==1){\n                linkType= 'NormalSelfLock';\n            }else if(Number(rowData.IsCurrentUserUW) == 1 && rowData.IsSelfLocked ==1){\n                linkType= 'UWSelfLock';\n            }else if(Number(rowData.IsCurrentUserUW) == 0 && rowData.IsSelfLocked ==0){\n                linkType= 'NormalOtherLock';\n            }else if(Number(rowData.IsCurrentUserUW) ==1 && rowData.IsSelfLocked ==0){\n                linkType= 'UWOtherLock';\n            }\n        }\n        \n        switch (linkType){\n            \n        case 'NormalSelfLock' : \n            return <span> \n                <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\" style={{ fontSize: '25px'}} id={\"NSL\"+rowData.policyNumber}></i>\n                    <UncontrolledTooltip placement=\"right\" target={\"NSL\"+rowData.policyNumber}>\n                        {\"locked By Me\"}\n                    </UncontrolledTooltip>\n                 </span>\n        case 'UWSelfLock':\n            return <span>\n                    <i class=\"fa fa-user-circle-o\" style={{ fontSize: '25px'}} aria-hidden=\"true\" id={'USL'+ rowData.policyNumber}></i>\n                    <UncontrolledTooltip placement=\"right\" target={\"USL\"+ rowData.policyNumber}>\n                        {\"locked By Me\"}\n                    </UncontrolledTooltip>\n                    </span>\n        case 'NormalOtherLock':\n            return <span>\n                <i class=\"fa fa-lock\" aria-hidden=\"true\" style={{ fontSize: '25px'}} id={\"NOL\"+ rowData.policyNumber}></i> \n                 <UncontrolledTooltip placement=\"right\" target={\"NOL\"+ rowData.policyNumber} >\n                        {\"locked By\" + rowData.LockedByPerson}\n                    </UncontrolledTooltip>\n                </span>\n        case 'UWOtherLock' :\n            return <span>\n                <i class=\"fa fa-lock\" onClick={()=>this.releaseLock(rowData)} style={{ fontSize: '25px' , cursor: 'pointer'}} aria-hidden=\"true\" id={\"UWO\"+ rowData.policyNumber}> </i>\n                {/* <img src= 'img' onClick={()=>this.releaseLock(rowData)} alt=\"UWO\" /> */}\n                    <UncontrolledTooltip placement=\"right\" target={\"UWO\"+ rowData.policyNumber} >\n                        {\"locked By\" + rowData.LockedByPerson}\n                    </UncontrolledTooltip>\n                    </span>\n        case 'Nolock':\n            return null;\n        }\n    }\n\n    releaseLock(rowData){\n        let data = {\n            'PolicyId' : rowData.PolicyId,\n             'ReleaseAll': 0\n        };\n        api.post('api/releaseLock', data).then(res => {\n            if (res.success) {\n                if(res.data[0][0].returnValue==''){\n                    this.reloadSavedData(this.state.SavedData , rowData);\n                }else{\n                    toast.error(res.data[0][0].returnValue);\n                }\n                \n            } else {\n                toast.error(\"SomeThing went wrong.\");\n            }\n        }).catch(err => {\n            console.log(\"setLock err\", err);\n        });\n\n    }\n\n    async reloadSavedData(data, rowData){\n        // console.log('data in reloadsaveddata......',data)\n      await  api.post('api/searchPolicy', data).then(res => {\n            console.log(\"searchPolicy--------\", res);\n            if (res.success) {\n                var formattedData = [];\n                var totalRecords = 0;\n                var PolicyTypeImage = '';\n                var PolicyTypeAltmsg = '';\n                console.log(\"res.data.....\",res.data)\n\n                for (var i = 0; i < res.data.length; i++) {\n                    if(res.data[i].PolicyType === \"MultiVessel\"){\n                        PolicyTypeImage = MultiVessel;\n                        PolicyTypeAltmsg = 'MV';\n                    }else if(res.data[i].PolicyType === \"Vessel\"){\n                        PolicyTypeImage = Vessel;\n                        PolicyTypeAltmsg ='V';\n                    }else if(res.data[i].PolicyType === \"MarineTrade\"){\n                        PolicyTypeImage = MarineTrade;\n                        PolicyTypeAltmsg = \"MT\";\n                    }else if(res.data[i].PolicyType === \"Miscellaneous\"){\n                        PolicyTypeImage = Miscellaneous;\n                        PolicyTypeAltmsg = 'MIS';\n                    }else if(res.data[i].PolicyType === \"VesselNonrated\"){\n                        PolicyTypeImage = VesselNonrated;\n                        PolicyTypeAltmsg = 'VN';\n                    }\n                    formattedData.push({\n                        SrNo: i + 1,\n                        Name: res.data[i].Name,\n                        CountryCode: res.data[i].CountryCode,\n                        PhoneNumber: res.data[i].PhoneNumber,\n                        Email: res.data[i].Email,\n                        \n                        PolicyId: res.data[i].PolicyId,\n                        DocLang: res.data[i].DocLang,\n                        InsuranceCompanyName: res.data[i].InsuranceCompanyName,\n                        Vessel: res.data[i].VesselName,\n                        VesselTypeName: res.data[i].VesselTypeName,\n                        SumInsured: res.data[i].SumInsured,\n                        CurrentPremium: res.data[i].CurrentPremium,\n                        InceptionDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),\n                        RenewalDate: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),\n                        PolicyType: res.data[i].PolicyType,\n                        PolicyTypeImage: PolicyTypeImage,\n                        PolicyTypeAltmsg: PolicyTypeAltmsg,\n                        PolicyNumber: res.data[i].PolicyNumber,\n                        Outstanding: CommonConfig.isEmpty(res.data[i].Outstanding) ? '' : CommonConfig.formatMoney(res.data[i].Outstanding, 2),\n                        Status: res.data[i].Status,\n                        Stage: res.data[i].Stage,\n                        NBOrRN: res.data[i].NBOrRN,\n                        IsOrganization: res.data[i].IsOrganization,\n                        Department: res.data[i].Department,\n                        VesselClassName: res.data[i].VesselClassName,\n                        Value: CommonConfig.formatMoney(res.data[i].SumInsured, 2),\n                        Premium: CommonConfig.isEmpty(res.data[i].Premium) ? '' : res.data[i].Premium,\n                        Created: CommonConfig.isEmpty(res.data[i].InceptionDate) ? '' : moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n                        Renewal: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n                        Updated: CommonConfig.isEmpty(res.data[i].UpdatedOn) ? '' : moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),\n                        UpdatedByName: CommonConfig.isEmpty(res.data[0].UpdatedByName) ? '' : res.data[0].UpdatedByName,\n                        CreatedByName: CommonConfig.isEmpty(res.data[0].CreatedByName) ? '' : res.data[0].CreatedByName,\n                        Currency: res.data[i].Currency,\n                        InceptionRenewalDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker) + \" \" + moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n                        Client: res.data[i].EntityType === 'person' ? res.data[i].Forename + '' + res.data[i].SurName : \"\",\n                        Country: res.data[i].Country,\n                        ClientDetails: res.data[i].Name + \" \" + CommonConfig.formatPhoneNumber(res.data[i].CountryCode + res.data[i].PhoneNumber) + \" \" + res.data[i].Email,\n                        PolicyData: res.data[i].PolicyType + \" \" + res.data[i].PolicyNumber + \" \"+ res.data[i].DocLang,\n                        DepartmentDetails: res.data[i].Department+ \" \" + res.data[i].SubAgentName + \" \" + res.data[i].SubAgentPhone + \" \" + res.data[i].SubAgentEmail,\n                        VesselDetails: res.data[i].VesselClassName + \" \" + res.data[i].VesselTypeName,\n                        Note: res.data[i].Note,\n                        PreiumDifferencePercentage: res.data[i].PreiumDifferencePercentage,\n                        RenewalPremium: res.data[i].RenewalPremium,\n                        SubAgentName: res.data[i].SubAgentName,\n                        SubAgentEmail: res.data[i].SubAgentEmail,\n                        SubAgentPhone: res.data[i].SubAgentPhone,                        \n                        HandlerPerson: res.data[i].HandlerPerson,\n                        LockedByPerson: res.data[i].LockedByPerson,\n                        LockedByPersonId: res.data[i].LockedByPersonId,\n                        IsCurrentUserUW: res.data[i].IsCurrentUserUW,\n                        IsSelfLocked: res.data[0].IsSelfLocked,\n                        ReferredToPerson: res.data[i].ReferredToPerson\n                    });\n                }\n\n                    console.log(\"formatted data...\", formattedData);\n                totalRecords = formattedData.length; // TODO: get from response\n                let firstPage = (formattedData.length) ? '1' : '0';\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\n                let recordStr = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n                let str = recordStr; //(this.state.searchType == 'ALL') ? recordStr : '';\n                this.setState({ arr: formattedData, str: str, recordStr: recordStr, totalRecords: totalRecords });\n\n                this.checkPrevNextHandle();\n                toast.success(\"Policy \"+rowData.PolicyNumber+ \" unlocked Successfully\");  \n\n                // if (CommonConfig.isEmpty(this.state.stageFilter)) {\n                //     this.setState({ stageList: this.state.stageFilterList });\n                // } else {\n                //     this.getPolicyStage();\n                // }\n            } else {\n\n            }\n        }).catch(err => {\n            console.log(\"searchPolicy-API-Error\", err);\n        });\n    }\n\n    formatPolicyDetail(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.PolicyType}</p>\n                <p>{rowData.PolicyNumber}</p>\n                <p>{rowData.DocLang}</p>\n            </div>\n        )\n    }\n\n    formatContactDetail(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.Name}</p>\n                <p>{CommonConfig.formatPhoneNumber(rowData.CountryCode + rowData.PhoneNumber)}</p>\n                <p>{rowData.Email}</p>\n            </div>\n        )\n    }\n\n    formatVesselData(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.VesselClassName}</p>\n                <p>{rowData.VesselTypeName}</p>\n            </div>\n        )\n    }\n\n    formatPremiun(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.PremiumDetails}</p>\n                {/* <p>{rowData.CurrentPremium} - {rowData.RenewalPremium} ( {rowData.PreiumDifferencePercentage}% )</p> */}\n            </div>\n        )\n    }\n\n    formatDate(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                {/* <p>{rowData.InceptionDate}</p> */}\n                <p>{rowData.RenewalDate}</p>\n            </div>\n        )\n    }\n\n    formatDepartment(rowData){\n        return(\n            <div className=\"policy-list-data\">\n                <p>{rowData.Department}</p>\n                {rowData.Department == \"SubAgent\"\n                ?<> \n                <p>{rowData.SubAgentName}</p>\n                    <p>{rowData.SubAgentPhone}</p>\n                    <p>{rowData.SubAgentEmail}</p>\n                </>\n                : null}\n            </div>\n        )\n    }\n\n    formatStage(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.Stage}</p>\n                <p>{rowData.ReferredToPerson}</p>\n            </div>\n        )\n    }\n\n    actionTemplate(rowData, column) {\n        \n        return <div className=\"policy-list-data\">\n            <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.edit(rowData)}\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\n            </Button>\n\n            <span>\n                <i onClick={() => this.getNoteList(rowData)} style={{ fontSize: '25px', cursor: 'pointer' }} className=\"pi pi-comment\" href=\"#\" id={\"CommentTooltip\" + rowData.PolicyId}></i>\n                <UncontrolledTooltip placement=\"right\" target={\"CommentTooltip\" + rowData.PolicyId}>\n                    {CommonConfig.isEmpty(rowData.Note) ? rowData.Stage : rowData.Note}\n                </UncontrolledTooltip>\n            </span>\n            \n            {\n                this.getImageIcon(rowData)\n            }\n          {/*<span>\n                {rowData.PolicyType !== \"\" ? <img src={rowData.PolicyTypeImage} alt={rowData.PolicyTypeAltmsg}/> : null }\n\n                {rowData.NBOrRN == 'RN' ? <img src={Renewal} alt= 'RN' /> : <img src={NewBusiness} alt= 'NB' /> }\n            \n                {rowData.Department == 'SubAgent' ? < img src={SubAgent} alt= 'SA' /> : (rowData.Department == 'Direct' ? < img src={Direct} alt=\"D\" /> : (rowData.Department == 'Online' ? <img src={Online} alt='ON' /> : (rowData.Department == 'ServiceCenter' ? <img src={ServiceCenter} alt='SC' /> : null ) ) ) }\n\n                {(rowData.IsOrganization !=null  || rowData.IsOrganization != '' || rowData.IsOrganization != undefined ) ? <img src={Organization} alt= \"ORG\" />: null}\n            </span>*/}\n\n        </div>;\n    }\n\n    export() {\n        this.dt.exportCSV();\n    }\n\n    getPolicyClientName() {\n        try {\n            api.post(APIConstant.path.getPolicyClientName).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].EntityId,\n                            label: res.data.data[i].FullName,\n                        });\n                    }\n                    this.setState({ clientArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllEmailList() {\n        try {\n            api.post(APIConstant.path.getAllEmailList).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].Email,\n                            label: res.data.data[i].Email,\n                        });\n                    }\n                    console.log('formattedData', formattedData);\n                    this.setState({ emailArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllcontactList() {\n        try {\n            api.post(APIConstant.path.getAllcontactList).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].PhoneNumber,\n                            label: res.data.data[i].PhoneNumber,\n                        });\n                    }\n                    console.log('formattedData', formattedData);\n                    this.setState({ phoneArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllpolicyNumber() {\n        try {\n            api.post(APIConstant.path.getAllpolicyNumber).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].PolicyNumber,\n                            label: res.data.data[i].PolicyNumber,\n                        });\n                    }\n                    console.log('formattedData', formattedData);\n                    this.setState({ policyNumberArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllBinder() {\n        try {\n            let data = {};\n            api.post(APIConstant.path.getAllBinder, data).then(res => {\n                if (res.success) {\n                    console.log('res.datares.data', res.data.res);\n\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.res.length; i++) {\n                        formattedData.push({\n                            value: res.data.res[i].BinderId,\n                            label: res.data.res[i].UMRN,\n                        });\n                    }\n\n                    this.setState({ binderArray: formattedData });\n                } else {\n                    console.log('getBinderData_error');\n                }\n            }).catch(err => {\n                console.log('getBinderData_error', err);\n            });\n        } catch (error) {\n            console.log('getBinderData_error', error);\n        }\n    }\n\n    getSubBinderByBinderId(id) {\n        try {\n            let data = {\n                BinderId: id\n            };\n            api.post(APIConstant.path.getSubBinderByBinderId, data).then(res => {\n                if (res.success) {\n                    console.log('res.datares.data', res.data.res);\n\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.res.length; i++) {\n                        formattedData.push({\n                            value: res.data.res[i].SubBinderId,\n                            label: res.data.res[i].Title,\n                        });\n                    }\n\n                    this.setState({ subBinderArray: formattedData });\n                } else {\n                    console.log('getBinderData_error');\n                }\n            }).catch(err => {\n                console.log('getBinderData_error', err);\n            });\n        } catch (error) {\n            console.log('getBinderData_error', error);\n        }\n    }\n\n    getLanguage() {\n        try {\n            api.get(APIConstant.path.getLanguage).then(res => {\n                if (res.success) {\n                    this.setState({ languageArray: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    getCurrency() {\n        try {\n            api.get(APIConstant.path.getCurrency).then(res => {\n                if (res.success) {\n                    this.setState({ currencyArray: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    getVesselClass() {\n        try {\n            api.get(APIConstant.path.getVesselClass).then(res => {\n                if (res.success) {\n                    let formattedArray = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        formattedArray.push({\n                            label: res.data[i].VesselClassName,\n                            value: res.data[i].VesselClassId\n                        });\n                    }\n                    this.setState({ vesselClassArray: formattedArray, vesselClassCopy: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n\n    }\n\n    getVesselType(id) {\n        try {\n            const data = {\n                VesselClassId: id\n            };\n            api.post(APIConstant.path.getVesselType, data).then(res => {\n                if (res.success) {\n                    console.log('-o-p-o-o-p-o-p-p-o', res.data);\n\n                    var formattedData = [];\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedData.push({\n                            label: res.data[i].VesselTypeName,\n                            value: res.data[i].VesselTypeId,\n                        });\n                    }\n                    this.setState({ vesselTypeArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n\n    }\n\n    getPolicyList(IsAdvance) {\n        try {\n            let data = {};\n            var splitData = this.props.location.pathname.split(\"/\");\n            if (splitData[2] !== undefined && splitData[3] !== undefined) {\n                data = {\n                    entityId: splitData[2] || '',\n                    entityType: splitData[3] || '',\n                    isAdvance: 0,\n                };\n            } else {\n                data = {\n                    isAdvance: IsAdvance\n                }\n            }\n            console.log('0o-0o-o-kl0k-0k-0k-0k-0k-0k-0kj', data);\n\n            api.post('api/getPolicyList', data).then(res => {\n                if (res.success) {\n                    var formattedData = [];\n                    for (var i = 0; i < res.data.length; i++) {\n        \n                        // console.log(\"getPolicyList > \", res.data[i]);\n                        \n                        formattedData.push({\n                            SrNo: i + 1,\n                            Name: res.data[i].Name,\n                            CountryCode: res.data[i].CountryCode,\n                            PhoneNumber: res.data[i].PhoneNumber,\n                            Email: res.data[i].Email,\n                            PolicyId: res.data[i].PolicyId,\n                            PolicyType: res.data[i].PolicyType,\n                            PolicyNumber: res.data[i].PolicyNumber,\n                            Status: res.data[i].Status,\n                            Department: res.data[i].Department,\n                            InsuranceCompanyName: res.data[i].InsuranceCompanyName,\n                            Vessel: res.data[i].VesselName,\n                            Value: res.data[i].SumInsured,\n                            VesselClassName: res.data[i].VesselClassName,\n                            VesselTypeName: res.data[i].VesselTypeName,\n                            SumInsured: res.data[i].SumInsured,\n                            CurrentPremium: res.data[i].CurrentPremium,\n                            InceptionDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),\n                            RenewalDate: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),\n                            Premium: \"\",\n                            Created: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n                            Renewal: moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n                            Updated: moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),\n                            LastUpdatedBy: \"\",\n                            InceptionRenewalDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker) + \" \" + moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n                            CreatedBy: res.data[i].CreatedBy,\n                            LastUpdated: \"\",\n                            Currency: res.data[i].Currency,\n                            Client: res.data[i].EntityType === 'person' ? res.data[i].Forename + '' + res.data[i].SurName : \"\",\n                            Country: res.data[i].Country,\n                        });\n                    }\n                    console.log(\"formateted Fate...\",formattedData);\n                    let firstPage = (formattedData.length) ? '1' : '0';\n                    let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\n                    let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n                    this.setState({ arr: formattedData, str: str });\n                } else {\n                }\n            }).catch(err => {\n\n            });\n        } catch (err) {\n\n        }\n    }\n\n    filterSingle(e) {\n        let results = this.state.contactArray.filter((contact) => {\n            return contact.label.toLowerCase().startsWith(e.query.toLowerCase());\n        });\n        this.setState({ filteredcontactsSingle: results });\n\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    getDropDownValues(stringMapType, setStateName) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: 'sortorder'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    toggleLargeAdd = () => {\n        this.setState({ toggleModalAdd: false });\n    }\n\n    gotoNextPage() {\n        this.props.history.push('/newPolicy1');\n    }\n\n    toggleCustom = (tab) => {\n        const prevState = this.state.custom;\n        const state = prevState.map((x, index) => tab === index ? !x : false);\n        this.setState({ custom: state });\n    }\n\n    selectType(value, type) {\n\n        if (value === '' || value === undefined || value === null) {\n            this.setState({\n                [type]: ''\n            });\n        }\n        else {\n            this.setState({\n                [type]: value.value\n            });\n        }\n\n        if (type === 'client') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ client: '' });\n            } else {\n                this.setState({ client: value.value });\n            }\n        }\n\n        if (type === 'binder') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ binder: '' });\n            } else {\n                this.getSubBinderByBinderId(value);\n                this.setState({ binder: value.value });\n            }\n        }\n\n        if (type === 'policyMonth') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyMonth: '' });\n            } else {\n                this.setState({ policyMonth: value.value });\n            }\n        }\n\n        if (type === 'policyYear') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyYear: '' });\n            } else {\n                this.setState({ policyYear: value.value });\n            }\n        }\n\n        if (type === 'policyType') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyType: '' });\n            } else {\n                this.setState({ policyType: value.value });\n            }\n        }\n\n        if (type === 'policyCountry') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyCountry: '' });\n            } else {\n                this.setState({ policyCountry: value.value });\n            }\n        }\n\n        if (type === 'policyAgentServiceCenter') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyAgentServiceCenter: '' });\n            } else {\n                this.setState({ policyAgentServiceCenter: value.value });\n            }\n        }\n\n        if (type === 'policyCurrency') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyCurrency: '' });\n            } else {\n                this.setState({ policyCurrency: value.value });\n            }\n        }\n\n        if (type === 'policyLanguage') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyLanguage: '' });\n            } else {\n                this.setState({ policyLanguage: value.value });\n            }\n        }\n\n        if (type === 'stageFilter') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ stageFilter: '', selectedPolicy: [], stage: '' });\n            } else {\n                this.setState({ stageFilter: value, selectedPolicy: [], stage: '' });\n            }\n        }\n\n        if (type === 'referredTo') {\n            this.setState({ referredTo: value });\n        }\n\n    }\n\n    filterData() {\n        let date = {\n\n        }\n    }\n\n    redirectToNewPolicy = () => {\n        var splitData = this.props.location.pathname.split(\"/\");\n        if (splitData[2] !== undefined && splitData[3] !== undefined) {\n            this.props.history.push({\n                pathname: '/CreatePolicy/' + splitData[2],\n                state: {\n                    id: splitData[2]\n                }\n            });\n        } else {\n            this.props.history.push({\n                pathname: '/NewPolicy/',\n                state: {}\n            });\n        }\n    }\n\n    onRadioBtnClick(radioSelected) {\n\n        this.state.stageFilterList = [];\n\n        if ('QUOTE' == radioSelected || 'NEWBUSINESS' == radioSelected) {\n            this.state.stageFilterList = this.state.stageList.filter(function (data) {\n                return data.StringMapType == 'NEWBUSINESSSTAGE';\n            })\n        } else if ('RENEWAL' == radioSelected) {\n            this.state.stageFilterList = this.state.stageList.filter(function (data) {\n                return data.StringMapType == 'RENEWALSTAGE';\n            })\n        } else {\n            this.state.stageFilterList = this.state.stageList;\n        }\n\n        this.setState({ stageFilter: '', searchType: radioSelected, stageFilterList: this.state.stageFilterList });\n\n        if (radioSelected === \"ALL\") {\n            setTimeout(() => {\n                this.getSearchPolicy();\n            }, 100);\n        }\n    }\n\n    handleChange = e => {\n        const { t } = this.props;\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.name === 'policyNumber') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ policyNumberErro: true, policyNumber: '' });\n            } else {\n                this.setState({ policyNumberErro: false, policyNumber: e.target.value });\n            }\n        }\n\n        if (e.target.name === 'clientNamePhoneEmail') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ clientNamePhoneEmailError: true, clientNamePhoneEmail: '' });\n            } else {\n                this.setState({ clientNamePhoneEmailError: false, clientNamePhoneEmail: e.target.value });\n            }\n        }\n\n        if (e.target.name === 'clientName') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ clientNameError: true, clientName: '' });\n            } else {\n                this.setState({ clientNameError: false, clientName: e.target.value });\n            }\n        }\n\n        if (e.target.name === 'policyPhoneEmail') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ policyPhoneEmail: '' });\n            } else {\n                this.setState({ policyPhoneEmail: e.target.value });\n            }\n        }\n\n        if (e.target.name === 'policyFrom') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ policyFrom: '' });\n            } else {\n                this.setState({ policyFrom: e.target.value, policyTo: '' });\n                this.show('policyTo', false, 'policyToError', '');\n            }\n        }\n\n        if (e.target.name === 'policyTo') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ policyTo: '' });\n            } else {\n                if (!CommonConfig.isEmpty(this.state.policyFrom)) {\n                    var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.policyFrom);\n                    if (!isToDateGreater) {\n                        this.show('policyTo', true, 'policyToError', 'To date must be greater then From date.');\n                    } else {\n                        this.show('policyTo', false, 'policyToError', '');\n                    }\n                } else {\n                    this.show('policyTo', false, 'policyToError', '');\n                }\n                this.setState({ policyTo: e.target.value });\n            }\n        }\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control is-invalid\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    changePolicyDateView() {\n        this.setState({ isMonthYear: !this.state.isMonthYear });\n    }\n\n    getSearchPolicy() {\n        try {\n\n            this.state.selectedPolicy = []\n            this.state.stage = ''\n\n            const data = {\n                searchType: this.state.searchType,\n                offSet: this.state.offset\n            };\n\n            if (this.state.searchType != 'ALL') {\n\n                if (this.state.searchType == 'QUICK') {\n                    if (CommonConfig.isEmpty(this.state.policyNumber) && CommonConfig.isEmpty(this.state.clientNamePhoneEmail)) {\n                        toast.error('Please fill at least one value to search');\n                        return false;\n                    }\n                    data.PolicyNumber = CommonConfig.isEmpty(this.state.policyNumber) ? '' : this.state.policyNumber;\n                    data.ClientNamePhoneEmail = CommonConfig.isEmpty(this.state.clientNamePhoneEmail) ? '' : this.state.clientNamePhoneEmail;\n                    data.ClientNamePhoneEmail = data.ClientNamePhoneEmail.replace(\"'\", \"\\'\");\n\n                } else {\n                    if (CommonConfig.isEmpty(this.state.clientName) && CommonConfig.isEmpty(this.state.policyPhoneEmail)\n                        && CommonConfig.isEmpty(this.state.policyType) && CommonConfig.isEmpty(this.state.policyCountry)\n                        && CommonConfig.isEmpty(this.state.policyLanguage) && CommonConfig.isEmpty(this.state.policyCurrency)\n                        && CommonConfig.isEmpty(this.state.policyAgentServiceCenter)) {\n\n                        if (this.state.isMonthYear) {\n                            if (CommonConfig.isEmpty(this.state.policyMonth) && CommonConfig.isEmpty(this.state.policyYear)) {\n                                toast.error('Please fill at least one value to search.');\n                                return false;\n                            }\n                        } else {\n                            if (CommonConfig.isEmpty(this.state.policyFrom) && CommonConfig.isEmpty(this.state.policyTo)) {\n                                toast.error('Please fill at least one value to search.');\n                                return false;\n                            }\n                        }\n                    }\n\n                    data.ClientName = CommonConfig.isEmpty(this.state.clientName) ? '' : this.state.clientName;\n                    data.ClientName = data.ClientName.replace(\"'\", \"\\'\");\n                    data.PhoneEmail = CommonConfig.isEmpty(this.state.policyPhoneEmail) ? '' : this.state.policyPhoneEmail;\n                    data.PolicyType = CommonConfig.isEmpty(this.state.policyType) ? '' : this.state.policyType;\n                    data.PolicyMonth = CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth;\n                    data.IsDateRange = (this.state.isMonthYear) ? false : true;\n                    data.PolicyYear = CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear;\n                    data.PolicyFrom = CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom;\n                    data.PolicyTo = CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo;\n                    data.PolicyCountry = CommonConfig.isEmpty(this.state.policyCountry) ? '' : this.state.policyCountry;\n                    data.PolicyLanguage = CommonConfig.isEmpty(this.state.policyLanguage) ? '' : this.state.policyLanguage;\n                    data.PolicyCurrency = CommonConfig.isEmpty(this.state.policyCurrency) ? '' : this.state.policyCurrency;\n                    data.Stage = CommonConfig.isEmpty(this.state.stageFilter) ? '' : this.state.stageFilter;\n                    data.PolicyAgentServiceCenter = CommonConfig.isEmpty(this.state.policyAgentServiceCenter) ? '' : this.state.policyAgentServiceCenter;\n                }\n            }\n\n            console.log(\"searchPolicy--------\", data);\n            this.setState({SavedData: data});\n            api.post('api/searchPolicy', data).then(res => {\n                console.log(\"searchPolicy--------\", res);\n                if (res.success) {\n                    var formattedData = [];\n                    var totalRecords = 0;\n                    var PolicyTypeImage = '';\n                    var PolicyTypeAltmsg = '';\n                    console.log(\"res.data.....\",res.data)\n\n                    for (var i = 0; i < res.data.length; i++) {\n                        if(res.data[i].PolicyType === \"MultiVessel\"){\n                            PolicyTypeImage = MultiVessel;\n                            PolicyTypeAltmsg = 'MV';\n                        }else if(res.data[i].PolicyType === \"Vessel\"){\n                            PolicyTypeImage = Vessel;\n                            PolicyTypeAltmsg ='V';\n                        }else if(res.data[i].PolicyType === \"MarineTrade\"){\n                            PolicyTypeImage = MarineTrade;\n                            PolicyTypeAltmsg = \"MT\";\n                        }else if(res.data[i].PolicyType === \"Miscellaneous\"){\n                            PolicyTypeImage = Miscellaneous;\n                            PolicyTypeAltmsg = 'MIS';\n                        }else if(res.data[i].PolicyType === \"VesselNonrated\"){\n                            PolicyTypeImage = VesselNonrated;\n                            PolicyTypeAltmsg = 'VN';\n                        }\n                        formattedData.push({\n                            SrNo: i + 1,\n                            Name: res.data[i].Name,\n                            CountryCode: res.data[i].CountryCode,\n                            PhoneNumber: res.data[i].PhoneNumber,\n                            Email: res.data[i].Email,\n                            PolicyId: res.data[i].PolicyId,\n                            DocLang: res.data[i].DocLang,\n                            InsuranceCompanyName: res.data[i].InsuranceCompanyName,\n                            Vessel: res.data[i].VesselName,\n                            VesselTypeName: res.data[i].VesselTypeName,\n                            SumInsured: res.data[i].SumInsured,\n                            CurrentPremium: res.data[i].CurrentPremium,\n                            InceptionDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),\n                            RenewalDate: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),\n                            PolicyType: res.data[i].PolicyType,\n                            PolicyTypeImage: PolicyTypeImage,\n                            PolicyTypeAltmsg: PolicyTypeAltmsg,\n                            PolicyNumber: res.data[i].PolicyNumber,\n                            Outstanding: CommonConfig.isEmpty(res.data[i].Outstanding) ? '' : CommonConfig.formatMoney(res.data[i].Outstanding, 2),\n                            Status: res.data[i].Status,\n                            Stage: res.data[i].Stage,\n                            NBOrRN: res.data[i].NBOrRN,\n                            IsOrganization: res.data[i].IsOrganization,\n                            Department: res.data[i].Department,\n                            VesselClassName: res.data[i].VesselClassName,\n                            Value: CommonConfig.formatMoney(res.data[i].SumInsured, 2),\n                            Premium: CommonConfig.isEmpty(res.data[i].Premium) ? '' : res.data[i].Premium,\n                            Created: CommonConfig.isEmpty(res.data[i].InceptionDate) ? '' : moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n                            Renewal: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n                            Updated: CommonConfig.isEmpty(res.data[i].UpdatedOn) ? '' : moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),\n                            UpdatedByName: CommonConfig.isEmpty(res.data[0].UpdatedByName) ? '' : res.data[0].UpdatedByName,\n                            CreatedByName: CommonConfig.isEmpty(res.data[0].CreatedByName) ? '' : res.data[0].CreatedByName,\n                            Currency: res.data[i].Currency,\n                            InceptionRenewalDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker) + \" \" + moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n                            Client: res.data[i].EntityType === 'person' ? res.data[i].Forename + '' + res.data[i].SurName : \"\",\n                            Country: res.data[i].Country,\n                            ClientDetails: res.data[i].Name + \" \" + CommonConfig.formatPhoneNumber(res.data[i].CountryCode + res.data[i].PhoneNumber) + \" \" + res.data[i].Email,\n                            PolicyData: res.data[i].PolicyType + \" \" + res.data[i].PolicyNumber + \" \"+ res.data[i].DocLang,\n                            DepartmentDetails: res.data[i].Department+ \" \" + res.data[i].SubAgentName + \" \" + res.data[i].SubAgentPhone + \" \" + res.data[i].SubAgentEmail,\n                            VesselDetails: res.data[i].VesselClassName + \" \" + res.data[i].VesselTypeName,\n                            Note: res.data[i].Note,\n                            PremiumDetails: res.data[i].PremiumDetails,\n                            PreiumDifferencePercentage: res.data[i].PreiumDifferencePercentage,\n                            RenewalPremium: res.data[i].RenewalPremium,\n                            SubAgentName: res.data[i].SubAgentName,\n                            SubAgentEmail: res.data[i].SubAgentEmail,\n                            SubAgentPhone: res.data[i].SubAgentPhone,\n                            HandlerPerson: res.data[i].HandlerPerson,\n                            LockedByPerson: res.data[i].LockedByPerson,\n                            LockedByPersonId: res.data[i].LockedByPersonId,\n                            IsCurrentUserUW: res.data[i].IsCurrentUserUW,\n                            IsSelfLocked: res.data[0].IsSelfLocked,\n                            ReferredToPerson: res.data[i].ReferredToPerson\n                        });\n                    }\n\n                        console.log(\"formatted data...\", formattedData);\n                    totalRecords = formattedData.length; // TODO: get from response\n                    let firstPage = (formattedData.length) ? '1' : '0';\n                    let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\n                    let recordStr = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n                    let str = recordStr; //(this.state.searchType == 'ALL') ? recordStr : '';\n                    this.setState({ arr: formattedData, str: str, recordStr: recordStr, totalRecords: totalRecords });\n\n                    this.checkPrevNextHandle();\n                    // if (CommonConfig.isEmpty(this.state.stageFilter)) {\n                    //     this.setState({ stageList: this.state.stageFilterList });\n                    // } else {\n                    //     this.getPolicyStage();\n                    // }\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"searchPolicy-API-Error\", err);\n            });\n        } catch (error) {\n            console.log(\"searchPolicy-Error\", error);\n        }\n    }\n\n    getPreviousRecords() {\n        let offset = (this.state.offset > 0) ? parseInt(this.state.offset) - 1 : 0;\n        this.setState({ offset: offset });\n\n        setTimeout(() => {\n            this.getSearchPolicy();\n        }, 100);\n    }\n\n    getNextRecords() {\n        let offset = (this.state.offset >= 0) ? parseInt(this.state.offset) + 1 : 0;\n        this.setState({ offset: offset });\n\n        setTimeout(() => {\n            this.getSearchPolicy();\n        }, 100);\n    }\n\n    checkPrevNextHandle() {\n        if (this.state.offset > 0) {\n            this.setState({ isPreviousVisible: false });\n        } else {\n            this.setState({ isPreviousVisible: true });\n        }\n    }\n\n    getNoteList(rowData) {\n        this.setState({ NavID: null });\n\n        const data = {\n            'entityId': rowData.PolicyId,\n            'entityType': 'Policy',\n            'CurrentUser': CommonConfig.loggedInUserData().EntityId\n        };\n        // api.post('api/getNotes', data).then(res => {\n            api.post('api/getNewBusineesNotes', data).then(res => {\n            if (res.success) {\n                this.setState({ policyNoteList: res.data, openNotePopup: true, NavID: rowData.PolicyId });\n            } else {\n                toast.warn(\"No notes found for Policy.\");\n            }\n        }).catch(err => {\n            console.log(\"getNoteList err\", err);\n        });\n    }\n\n    getNotesType() {\n        try {\n            const data = {\n                stringmaptype: 'NOTETYPE'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ noteType: res.data });\n                } else {\n\n                }\n            }).catch(err => {\n\n            });\n        } catch (error) {\n\n        }\n    }\n\n    selectNoteType(value, type) {\n        if (value === '' || value === null) {\n            this.setState({ NotesTypeError: true, notesType: value });\n            this.show('notesType', true);\n        } else {\n            this.setState({ NotesTypeError: false, notesType: value });\n            this.show('notesType', false);\n        }\n    }\n\n    Important() {\n        (this.state.isImportant === 0 ? this.setState({ isImportant: 1 }) : this.setState({ isImportant: 0 }))\n    }\n\n    saveNotes = () => {\n        if (\n            this.state.NotesTypeError === false &&\n            this.state.notesdescriptionError === false) {\n\n            const NotesForm = new FormData();\n            NotesForm.append('notesType', this.state.notesType);\n            NotesForm.append('notesdescription', this.state.notesdescription.trim());\n            NotesForm.append('entityid', this.state.NavID);\n            NotesForm.append('entitytype', 'Policy');\n            NotesForm.append('isflag', this.state.isImportant);\n            NotesForm.append('loggedInUserId', CommonConfig.loggedInUserId());\n            NotesForm.append('languageId', this.state.LanguageId);\n\n            api.post('api/addNotes', NotesForm).then(res => {\n                if (res.success) {\n                    this.reset();\n                    toast.success('Notes added successfully');\n                    this.getNoteList({ PolicyId: this.state.NavID });\n                } else {\n\n                }\n            }).catch(err => {\n            });\n        } else {\n            this.show(\"notesType\", this.state.NotesTypeError);\n            this.show(\"notesdescription\", this.state.notesdescriptionError);\n        }\n    }\n\n    handleChangeNote = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.name === 'notesdescription') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ notesdescriptionError: true });\n                this.show(\"notesdescription\", true);\n            } else {\n                this.setState({ notesdescriptionError: false, notesdescription: e.target.value });\n                this.show(\"notesdescription\", false);\n            }\n        }\n    }\n\n    reset = () => {\n        this.setState({\n            notesdescription: '', notesdescriptionError: true,\n            notesType: '', NotesTypeError: true,\n            isImportant: 0,\n        });\n        this.show(\"notesdescription\", false);\n        this.show('notesType', false);\n\n        this.setState({ addNoteCollapse: false });\n    }\n\n    render() {\n        const { t } = this.props;\n\n        var header = <div>\n            <Row>\n                <Col md=\"1\">\n                    <MultiSelect value={this.state.cols} options={this.colOptions}\n                        fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\n                        onChange={this.onColumnToggle} style={{ width: '50px' }} />\n                </Col>\n                <Col md=\"11\">\n                    <div style={{ textAlign: 'right' }}>\n                        <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\n                        <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" size=\"30\" style={{ marginRight: 10 }} />\n\n                        <Button type=\"button\" icon=\"pi pi-external-link\" iconPos=\"left\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'left' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\n                    </div>\n                </Col>\n            </Row>\n        </div>;\n\n        let columns = this.state.cols.map((col, i) => {\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\n        });\n\n        return (\n            <div>\n                <div className=\"basic-header\">\n                    <h1>{t(\"policyList:PolicyList\")}</h1>\n\n                    <div className=\"header-right-option\">\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\n                        />\n\n                        <Button type=\"button\" icon=\"pi pi-plus\" tooltip=\"New Policy Setup\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.redirectToNewPolicy()}></Button>\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\n                    </div>\n                </div>\n\n                <div className=\"input-box\" id=\"accordion\">\n\n                    {/* <h5>Search Policy</h5> */}\n                    <Card className=\"mb-0\">\n                        <CardHeader id=\"headingOne\">\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\n                                <h5 className=\"m-0 p-0\">\n                                    {t(\"policyList:SearchPolicy\")}\n                                    <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\n                                </h5>\n                            </BTN>\n                        </CardHeader>\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                            <CardBody>\n                                <Form onSubmit={e => e.preventDefault()}>\n                                    <div className=\"gt-radio\">\n                                        <div className=\"middle\">\n                                            <div className=\"gtradio-box\">\n                                                <label>\n                                                    <input type=\"radio\" name=\"searchType\" id=\"searchType\"\n                                                        checked={(this.state.searchType === 'QUICK') ? true : false}\n                                                        value={this.state.searchType} onChange={(e) => this.onRadioBtnClick('QUICK')} />\n                                                    <div className=\"front-end box\">\n                                                        <span>Quick</span>\n                                                    </div>\n                                                </label>\n                                            </div>\n                                            <div className=\"gtradio-box\">\n                                                <label>\n                                                    <input type=\"radio\" name=\"searchType\" id=\"searchType\"\n                                                        checked={(this.state.searchType === 'QUOTE') ? true : false}\n                                                        value={this.state.searchType} onChange={() => this.onRadioBtnClick('QUOTE')} />\n                                                    <div className=\"front-end box\">\n                                                        <span>Quote</span>\n                                                    </div>\n                                                </label>\n                                            </div>\n                                            <div className=\"gtradio-box\">\n                                                <label>\n                                                    <input type=\"radio\" name=\"searchType\" id=\"searchType\"\n                                                        checked={(this.state.searchType === 'NEWBUSINESS') ? true : false}\n                                                        value={this.state.searchType} onChange={() => this.onRadioBtnClick('NEWBUSINESS')} />\n                                                    <div className=\"front-end box\">\n                                                        <span>New Business</span>\n                                                    </div>\n                                                </label>\n                                            </div>\n                                            <div className=\"gtradio-box\">\n                                                <label>\n                                                    <input type=\"radio\" name=\"searchType\" id=\"searchType\"\n                                                        checked={(this.state.searchType === 'RENEWAL') ? true : false}\n                                                        value={this.state.searchType} onChange={() => this.onRadioBtnClick('RENEWAL')} />\n                                                    <div className=\"front-end box\">\n                                                        <span>Renewal</span>\n                                                    </div>\n                                                </label>\n                                            </div>\n                                            <div className=\"gtradio-box\">\n                                                <label>\n                                                    <input type=\"radio\" name=\"searchType\" id=\"searchType\"\n                                                        checked={(this.state.searchType === 'CUSTOM') ? true : false}\n                                                        value={this.state.searchType} onChange={() => this.onRadioBtnClick('CUSTOM')} />\n                                                    <div className=\"front-end box\">\n                                                        <span>Custom</span>\n                                                    </div>\n                                                </label>\n                                            </div>\n                                            <div className=\"gtradio-box\">\n                                                <label>\n                                                    <input type=\"radio\" name=\"searchType\" id=\"searchType\"\n                                                        checked={(this.state.searchType === 'ALL') ? true : false}\n                                                        value={this.state.searchType} onChange={(e) => this.onRadioBtnClick('ALL')} />\n                                                    <div className=\"front-end box\">\n                                                        <span>All</span>\n                                                    </div>\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        {(this.state.searchType == 'QUICK') ? (\n                                            <Row>\n                                                <Col md=\"3\">\n                                                    <div className=\"input-box\">\n                                                        <label>Policy Number</label>\n                                                        <Input name=\"policyNumber\" id=\"policyNumber\" value={this.state.policyNumber} onChange={(e) => this.handleChange(e)} placeholder=\"Enter Policy Number\" />\n                                                        <em id=\"policyNumberError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"3\">\n                                                    <div className=\"input-box\">\n                                                        <label>Client/Phone/Email</label>\n                                                        <Input name=\"clientNamePhoneEmail\" id=\"clientNamePhoneEmail\" value={this.state.clientNamePhoneEmail} onChange={(e) => this.handleChange(e)} placeholder=\"Enter Client/Phone/Email\" />\n                                                        <em id=\"policyNumberError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n                                            </Row>\n                                        ) : (null)}\n\n                                        {(this.state.searchType != 'QUICK' && this.state.searchType != 'ALL') ? (\n                                            <Row>\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Client</label>\n                                                        <Input name=\"clientName\" id=\"clientName\" value={this.state.clientName} onChange={(e) => this.handleChange(e)} placeholder=\"Enter Client Name\" />\n                                                        <em id=\"clientNameError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Phone/Email</label>\n                                                        <Input name=\"policyPhoneEmail\" id=\"policyPhoneEmail\" value={this.state.policyPhoneEmail} onChange={(e) => this.handleChange(e)} placeholder=\"Enter Client/Phone/Email\" />\n                                                        <em id=\"policyPhoneEmailError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Policy Type</label>\n                                                        <Input type=\"select\" name=\"policyType\" id=\"policyType\" value={this.state.policyType} onChange={(e) => this.selectType(e.target, 'policyType')}>\n                                                            <option value=\"\">Select Policy Type</option>\n                                                            {this.state.policyTypeArray.map((policyType, i) => {\n                                                                return (<option value={policyType.StringMapKey} key={i}>{policyType.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"policyTypeError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"12\">\n                                                    <Row>\n                                                        <Col md=\"2\" style={{ alignSelf: 'center' }}>\n                                                            {(this.state.searchType == 'RENEWAL') ? (\n                                                                <h5>Policy Renewal</h5>\n                                                            ) : (\n                                                                    <h5>Policy Inception</h5>\n                                                                )}\n                                                        </Col>\n                                                        {(this.state.isMonthYear) ? (\n                                                            <Col md=\"2\">\n                                                                <div className=\"input-box\">\n                                                                    <label>Month</label>\n                                                                    <Input type=\"select\" name=\"policyMonth\" id=\"policyMonth\" value={this.state.policyMonth} onChange={(e) => this.selectType(e.target, 'policyMonth')}>\n                                                                        <option value=\"\">Select Month</option>\n                                                                        {this.state.monthArray.map((month, i) => {\n                                                                            return (<option value={month.value} key={i}>{month.label}</option>)\n                                                                        })\n                                                                        }\n                                                                    </Input>\n                                                                    <em id=\"policyMonthError\" className=\"error invalid-feedback\"></em>\n                                                                </div>\n                                                            </Col>\n                                                        ) : (\n                                                                <Col md=\"2\">\n                                                                    <div className=\"input-box\">\n                                                                        <label>From</label>\n                                                                        <Input type=\"date\" name=\"policyFrom\" id=\"policyFrom\"\n                                                                            value={this.state.policyFrom}\n                                                                            onBlur={(e) => this.handleChange(e)}\n                                                                            onChange={(e) => this.handleChange(e)} />\n                                                                        <em id=\"policyFromError\" className=\"error invalid-feedback\"></em>\n                                                                    </div>\n                                                                </Col>\n                                                            )}\n                                                        {(this.state.isMonthYear) ? (\n                                                            <Col md=\"2\">\n                                                                <div className=\"input-box\">\n                                                                    <label>Year</label>\n                                                                    <Input type=\"select\" name=\"policyYear\" id=\"policyYear\" value={this.state.policyYear} onChange={(e) => this.selectType(e.target, 'policyYear')}>\n                                                                        <option value=\"\">Select Year</option>\n                                                                        {this.state.yearArray.map((year, i) => {\n                                                                            return (<option value={year.value} key={i}>{year.label}</option>)\n                                                                        })\n                                                                        }\n                                                                    </Input>\n                                                                    <em id=\"policyYearError\" className=\"error invalid-feedback\"></em>\n                                                                </div>\n                                                            </Col>\n                                                        ) : (\n                                                                <Col md=\"2\">\n                                                                    <div className=\"input-box\">\n                                                                        <label>To</label>\n                                                                        <Input type=\"date\" name=\"policyTo\" id=\"policyTo\"\n                                                                            value={this.state.policyTo}\n                                                                            onBlur={(e) => this.handleChange(e)}\n                                                                            onChange={(e) => this.handleChange(e)} />\n                                                                        <em id=\"policyToError\" className=\"error invalid-feedback\"></em>\n                                                                    </div>\n                                                                </Col>\n                                                            )}\n\n                                                        <Col md=\"2\" style={{ alignSelf: 'center' }}>\n                                                            {(this.state.isMonthYear) ? (\n                                                                <label style={{ textDecoration: 'underline' }} onClick={() => this.changePolicyDateView()}>Change to Date Range</label>\n                                                            ) : (\n                                                                    <label style={{ textDecoration: 'underline' }} onClick={() => this.changePolicyDateView()}>Change to Month/Year</label>\n                                                                )}\n                                                        </Col>\n\n                                                    </Row>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Country</label>\n                                                        <Input type=\"select\" name=\"policyCountry\" id=\"policyCountry\" onChange={(e) => this.selectType(e.target, 'policyCountry')} value={this.state.policyCountry}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.countryList.map((type, i) => {\n                                                                return (<option value={type.StringMapKey} key={i}>{type.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"policyCountryError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Language</label>\n                                                        <Input type=\"select\" name=\"policyLanguage\" id=\"policyLanguage\" onChange={(e) => this.selectType(e.target, 'policyLanguage')} value={this.state.policyLanguage}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.documentLanguageList.map((type, i) => {\n                                                                return (<option value={type.value}>{type.label}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"policyLanguageError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Currency</label>\n                                                        <Input type=\"select\" name=\"policyCurrency\" id=\"policyCurrency\" onChange={(e) => this.selectType(e.target, 'policyCurrency')} value={this.state.policyCurrency}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.currencyList.map((type, i) => {\n                                                                return (<option value={type.value}>{type.label}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"policyCurrencyError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Stage</label>\n                                                        <Input type=\"select\" name=\"stageFilter\" id=\"stageFilter\" value={this.state.stageFilter} onChange={(e) => this.selectType(e.target.value, 'stageFilter')}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.stageFilterList.map((ct, i) => {\n                                                                return (<option value={ct.StringMapKey}>{ct.StringMapKey}</option>)\n                                                            })}\n                                                        </Input>\n                                                        <em id=\"stageFilterError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                                <Col md=\"4\">\n                                                    <div className=\"input-box\">\n                                                        <label>Agent / Service Center</label>\n                                                        <Select name=\"policyAgentServiceCenter\" id=\"policyAgentServiceCenter\" options={this.state.policyAgentServiceCenterList} value={this.state.policyAgentServiceCenter} onChange={(data) => this.selectType(data, 'policyAgentServiceCenter')} placeholder=\"Select\" />\n                                                        <em id=\"policyAgentServiceCenterError\" className=\"error invalid-feedback\"></em>\n                                                    </div>\n                                                </Col>\n\n                                            </Row>\n                                        ) : (null)}\n                                    </div>\n\n                                    {(this.state.searchType != 'ALL') ? (\n                                        <Row>\n                                            <Col md=\"12\" className=\"text-left\">\n                                                <BTN type=\"submit\" color=\"success\" title=\"Go\" onClick={() => this.getSearchPolicy()}> Go </BTN>\n                                            </Col>\n                                        </Row>\n                                    ) : (null)}\n                                </Form>\n                            </CardBody>\n                        </Collapse>\n                    </Card>\n                </div>\n\n                {/* (this.state.searchType != 'ALL' && this.state.arr.length) ? (\n                    <Row style={{ marginBottom: '10px' }}>\n                        <Col md='4' className='text-right'>\n                            <BTN disabled={this.state.isPreviousVisible} color=\"link\" title=\"Previous\" onClick={() => this.getPreviousRecords()}> Prev </BTN>\n                        </Col>\n                        <Col md='4' className='text-center' style={{ alignSelf: 'center' }}>\n                            <span> {this.state.recordStr} </span>\n                        </Col>\n                        <Col md='4' className='text-left'>\n                            <BTN disabled={this.state.isNextVisible} color=\"link\" title=\"Next\" onClick={() => this.getNextRecords()}> Next  </BTN>\n                        </Col>\n                    </Row>\n                ) : (null) */}\n\n\n                <div className=\"table-custom\">\n                    {(this.state.selectedPolicy.length > 0 ? (<Col md=\"3\">\n                        <div className=\"policy-box\" style={{ minHeight: '57px' }}>\n                            <p> Stage </p>\n                            <div className=\"pl-inner\">\n                                <Input style={{ display: \"inline-block\", width: \"auto\", marginLeft: 10 }} type=\"select\" name=\"stage\" id=\"stage\" value={this.state.stage} onChange={(e) => this.savePolicyStage(e.target.value)}>\n                                    <option value=''>Select</option>\n                                    {\n                                        this.state.stageFilterList.map((ct, i) => {\n                                            if (this.state.stageFilter == ct.StringMapKey) {\n                                                return null\n                                            } else {\n                                                return (<option value={ct.StringMapKey}>{ct.StringMapKey}</option>)\n                                            }\n\n                                        })\n                                    }\n                                </Input>\n                            </div>\n                        </div>\n                    </Col>) : (null))}\n                    <DataTable\n                        ref={(el) => this.dt = el}\n                        value={this.state.arr}\n                        first={this.state.selectedPage}\n                        onPage={(e) => this.getPageString(e)}\n                        paginator={true}\n                        selection={this.state.selectedPolicy}\n                        onSelectionChange={e => this.setSelectedPolicy(e.value)}\n                        rows={this.state.rowsPerPage}\n                        totalRecords={this.state.arr.length}\n                        exportFilename=\"Policy List\"\n                        currentPageReportTemplate={this.state.str}\n                        scrollable={true}\n                        scrollHeight=\"340px\"\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\n                        globalFilter={this.state.globalFilter}\n                        emptyMessage=\"No records found\"\n                        responsive={true}\n                        resizableColumns={true}\n                        columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n                    >\n                        <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\n                        {columns}\n                    </DataTable>\n                </div>\n\n                {/* Confirmation Popup On Stage Change */}\n                <Modal isOpen={this.state.toggleStageChangeModal} toggle={() => this.toggleStageChange('stageChange')}\n                    className={'modal-mg modal-primary'}>\n                    <ModalHeader toggle={() => this.toggleStageChange('stageChange')}>Change Stage Confirmation</ModalHeader>\n                    <ModalBody>\n                        <Col>\n                            <Row>\n                                <Col md=\"8\">\n                                    <label>Changing Stage To <span>{this.state.stage}</span></label>\n                                </Col>\n                            </Row>\n                            {(this.state.stage == 'Referred') ?\n                                (<Row>\n                                    <Col md=\"8\">\n                                        <div className=\"input-box\">\n                                            <label> Referred To *</label>\n                                            <div className=\"pl-inner\">\n                                                <Input type=\"select\" name=\"referredTo\" id=\"referredTo\" onChange={(e) => this.selectType(e.target.value, 'referredTo')} value={this.state.referredTo}>\n                                                    <option value=''>Select</option>\n                                                    {\n                                                        this.state.referrList.map((ct, i) => {\n                                                            return (<option value={ct.EntityId}>{ct.Forename}</option>)\n                                                        })\n                                                    }\n                                                </Input>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>) : (null)}\n                            <Row>\n                                <Col md=\"8\">\n                                    <div className=\"input-box\">\n                                        <label>Note</label>\n                                        <Input type=\"textarea\" name=\"changeNote\" id=\"changeNote\" onChange={(e) => this.handleChangePolicyDetail(e)} value={this.state.changeNote}>\n                                        </Input>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </ModalBody>\n                    <ModalFooter>\n                        <BTN color=\"success\" onClick={() => this.savePolicyStage()}>\n                            <i className=\"fa fa-check\"></i>\n\t\t\t\t\t\t\tProceed\n\t\t\t\t\t\t</BTN>\n                        <BTN color=\"danger\" onClick={() => this.toggleStageChange('stageChange')}>\n                            <i className=\"fa fa-close\"></i>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</BTN>\n                    </ModalFooter>\n                </Modal>\n                {/* Confirmation Popup On Stage Change */}\n\n                <Modal isOpen={this.state.openNotePopup} className={'modal-lg'} style={{ maxWidth: '70%' }}>\n                    <ModalHeader toggle={() => this.setState({ openNotePopup: false })}> Notes </ModalHeader>\n\n                    <ModalBody>\n                        <Card className=\"mb-0\">\n                            <CardHeader id=\"headingOne\">\n                                <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ addNoteCollapse: !this.state.addNoteCollapse })} aria-expanded={this.state.addNoteCollapse} aria-controls=\"collapseOne\">\n                                    <h5 className=\"m-0 p-0\"> AddNotes <i style={{ float: \"right\" }} className={this.state.addNoteCollapse ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\"}></i> </h5>\n                                </BTN>\n                            </CardHeader>\n\n                            <Collapse isOpen={this.state.addNoteCollapse} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                                <form onSubmit={this.handleSubmit} style={{ padding: 10 }}>\n                                    <Row>\n                                        <Col md=\"6\">\n                                            <div className=\"input-box with-icon\">\n                                                <label>{t(\"contactNotes:NotesType.label\")}*</label>\n                                                <Input type=\"select\" name=\"notesType\" id=\"notesType\" onChange={(e) => this.selectNoteType(e.target.value, 'notesType')} value={this.state.notesType}>\n                                                    <option value=''>{t(\"contactNotes:NotesType.placeholder\")}</option>\n                                                    {this.state.noteType.map((ct, i) => {\n                                                        return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                    })\n                                                    }\n                                                </Input>\n                                                <em className=\"error invalid-feedback\">{t(\"contactNotes:NotesType.error_blank\")}</em>\n                                                <a title={t(\"contactNotes:ImportantNotes\")} href=\"javascript:void(0)\" onClick={() => this.Important()} style={{ color: this.state.isImportant === 0 ? '#aaaaaa' : '#ff0000', fontSize: 25 }}><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i></a>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md=\"12\">\n                                            <div className=\"input-box\">\n                                                <label>{t(\"contactNotes:Notes.label\")}*</label>\n                                                <Input type=\"textarea\" name=\"notesdescription\" id=\"notesdescription\" placeholder={t(\"contactNotes:Notes.placeholder\")} value={this.state.notesdescription} onChange={e => this.handleChangeNote(e)} autoResize={true} />\n                                                <em className=\"error invalid-feedback\">{t(\"contactNotes:Notes.error_blank\")}</em>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"text-center\">\n                                        <Col>\n                                            {(this.state.isNoteEdit) ?\n                                                (\n                                                    <div className=\"pull-right\">\n                                                        <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Update</BTN>{' '}\n                                                        <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                                                    </div>\n                                                ) : (\n                                                    <div className=\"pull-right\">\n                                                        <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Save</BTN>{' '}\n                                                        <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                                                    </div>\n                                                )\n                                            }\n                                        </Col>\n                                    </Row>\n                                </form>\n                            </Collapse>\n                        </Card>\n\n                        <div className=\"added-note-outer\">\n                            <h4>{this.state.policyNoteList.length} notes</h4>\n                            <ul>\n                                {\n                                    this.state.policyNoteList.map((notes, i) => {\n                                        return (\n                                            <li>\n                                                <div className=\"addednote-left\">\n                                                    <span style={{ color: notes.IsFlag.data[0] === 0 ? '#aaaaaa' : '#ff0000' }}><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i></span>\n                                                    <h3>{notes.NoteType}</h3>\n                                                    <p>\n                                                        <ShowMoreText\n                                                            lines={2}\n                                                            more='Show more'\n                                                            less='Show less'\n                                                            anchorClass=''\n                                                            onClick={this.executeOnClick}\n                                                            expanded={false}>\n                                                            {notes.NoteText}\n                                                        </ShowMoreText>\n                                                    </p>\n                                                    <Row>\n                                                        <Col md='6'>\n                                                            <p>Added By</p>\n                                                            <span className=\"date\" style={{ marginRight: 10 }}><i class=\"fa fa-user\" aria-hidden=\"true\"></i> {notes.CreatedByName}</span>\n                                                            <span className=\"date\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> {moment(notes.CreatedOn).format(CommonConfig.dateFormat.dateTime)}</span>\n                                                        </Col>\n                                                        {(notes.UpdatedByName != null) ? (\n                                                            <Col md='6'>\n                                                                <p>Updated By</p>\n                                                                <span className=\"date\" style={{ marginRight: 10 }}><i class=\"fa fa-user\" aria-hidden=\"true\"></i> {notes.UpdatedByName}</span>\n                                                                <span className=\"date\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> {moment(notes.UpdatedOn).format(CommonConfig.dateFormat.dateTime)}</span>\n                                                            </Col>\n                                                        ) : (null)}\n                                                    </Row>\n                                                </div>\n\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n\n}\n\nexport default withTranslation()(SearchPolicy);\n"]},"metadata":{},"sourceType":"module"}