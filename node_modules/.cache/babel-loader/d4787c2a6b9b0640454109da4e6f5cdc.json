{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Contact_Missing_Report.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass Contact_Missing_Report extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'monthtillDate') {\n        this.setState({\n          monthtillDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'fromDate') {\n        this.setState({\n          fromDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'toDate') {\n        this.setState({\n          toDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'Year') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            Year: e.target.value,\n            YearError: true\n          });\n          this.show('Year', true, 'YearError', 'Please Enter Year');\n        } else {\n          this.setState({\n            Year: e.target.value,\n            YearError: false\n          });\n          this.show('Year', false, 'YearError', '');\n        }\n      }\n    };\n\n    let columns = [\n    /*{ body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n    { field: \"Action\", header: \"Action\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },*/\n    {\n      field: \"ContactCode\",\n      header: \"Contact Code\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '45px'\n      }\n    }, {\n      field: \"ContactName\",\n      header: \"Contact Name\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ContactCategory\",\n      header: \"Contact Category\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '85px'\n      }\n    }, {\n      field: \"ContactType\",\n      header: \"Contact Type\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '125px'\n      }\n    }, {\n      field: \"Email\",\n      header: \"Email\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '125px'\n      }\n    }, {\n      field: \"Phone\",\n      header: \"Phone\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'textAlign': 'right',\n        'width': '85px'\n      }\n    }, {\n      field: \"CreatedBy\",\n      header: \"Created By\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'textAlign': 'right',\n        'width': '85px'\n      }\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      DebtorType: 'SubAgent',\n      Period: 0,\n      selected: {},\n      selectedPolicy: 0,\n      selectedAgent: '',\n      selectAll: 0,\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      monthtillDate: moment().format(\"YYYY-MM\"),\n      fromDate: moment().format(\"YYYY-MM-DD\"),\n      toDate: moment().format(\"YYYY-MM-DD\"),\n      CONTACTTYPEList: [],\n      MONTH: ('0' + (new Date().getMonth() + 2).toString()).slice(-2),\n      MONTHError: false,\n      CONTACTTYPE: 'All',\n      Year: '',\n      YearError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.Contact_Missing_Report(this.state.CONTACTTYPE);\n    this.getDropDownValues('CONTACTTYPE', 'CONTACTTYPEList');\n  }\n\n  ClientDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, rowData.ClientName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, rowData.ClientCode));\n  }\n\n  AgentDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, rowData.AgentName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, rowData.AgentCode));\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.arr.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  SourceName(rowData) {\n    return rowData.Source === \"Direct\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, rowData.Source)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, rowData.Source), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"(\", rowData.SourceName, \")\"));\n  }\n\n  ColumnclassName(rowData, Column) {\n    return rowData.DaysOutstanding <= 7 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#008c9a',\n        color: '#fff'\n      },\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, rowData.ProjectedPremium)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 18\n      }\n    }, rowData.ProjectedPremium));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  Contact_Missing_Report() {\n    var ShowMonth = this.state.MONTH;\n    console.log(ShowMonth);\n    if (ShowMonth === \"\") this.state.MONTH = new Date().getMonth() + 2;else if (ShowMonth === \"All\") this.state.MONTH = 1;\n    if (this.state.Year === \"\") this.state.Year = new Date().getFullYear();\n    var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\n    if (ShowMonth === '' || ShowMonth === 'All') var endDate = moment(startDate).endOf('year').format('YYYY-MM-DD');else var endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n    var data = {\n      CONTACTTYPE: this.state.CONTACTTYPE\n    };\n    api.post('api/Contact_Missing_Report', data).then(res => {\n      debugger;\n\n      if (res.success) {\n        console.log(\"resdata......\", res);\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              id: i,\n              ContactId: tempData.ContactId,\n              ContactCategory: tempData.EntityType,\n              ContactName: tempData.ContactName,\n              ContactType: tempData.ContactType,\n              ContactCode: tempData.ContactCode,\n              Email: tempData.Email,\n              Phone: tempData.Phone,\n              CreatedBy: tempData.CreatedBy\n            });\n          }\n        }\n\n        console.log(\"formattedData...\", formattedData);\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.Contact_Missing_Report(this.state.CONTACTTYPE);\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        agentinfoError: false\n      });\n      this.show('agentinfo', false, 'agentinfoError', '');\n    }\n\n    if (type === 'Period') {\n      this.setState({\n        Period: value\n      });\n    }\n\n    if (type === 'CONTACTTYPE') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          CONTACTTYPEError: true,\n          CONTACTTYPE: value\n        });\n        this.show('CONTACTTYPE', true, \"CONTACTTYPEError\", \"Please select policy type\");\n      } else {\n        this.setState({\n          CONTACTTYPEError: false,\n          CONTACTTYPE: value\n        });\n        this.show('CONTACTTYPE', false, \"CONTACTTYPEError\", \"\");\n      }\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  ReferrData() {\n    var data = {};\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, \"Contact with missing Phone and Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 33\n      }\n    }, \"Filter\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 45\n      }\n    }, \"Contact Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"CONTACTTYPE\",\n      id: \"CONTACTTYPE\",\n      onChange: e => this.selectType(e.target.value, 'CONTACTTYPE'),\n      value: this.state.CONTACTTYPE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 45\n      }\n    }, \"All\"), this.state.CONTACTTYPEList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 61\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"MONTHError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 45\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 45\n      }\n    }, \" Search \"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Contact Missing Report\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(Contact_Missing_Report);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Contact_Missing_Report.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","Contact_Missing_Report","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","monthtillDate","fromDate","toDate","undefined","Year","YearError","show","columns","field","header","sortable","filter","id","style","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","DebtorType","Period","selected","selectedPolicy","selectedAgent","selectAll","DebtorTypeError","agentinfo","agentinfoError","format","CONTACTTYPEList","MONTH","Date","getMonth","toString","slice","MONTHError","CONTACTTYPE","colOptions","col","push","label","export","bind","componentDidMount","getDropDownValues","ClientDetails","rowData","ClientName","ClientCode","AgentDetails","AgentName","AgentCode","toggleRow","newSelected","Object","assign","toggleSelectAll","forEach","x","actionTemplate","column","SourceName","Source","ColumnclassName","DaysOutstanding","backgroundColor","color","ProjectedPremium","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","ShowMonth","console","log","getFullYear","startDate","parseInt","endDate","endOf","formattedData","dataLength","i","tempData","ContactId","ContactCategory","EntityType","ContactName","ContactType","ContactCode","Email","Phone","CreatedBy","dt","exportCSV","filterData","selectType","type","getOrganazationData","isEmpty","CONTACTTYPEError","OrganizationName","OrganizationId","sourceList","condition","errorField","message","document","getElementById","className","innerHTML","ReferrData","render","t","map","body","filterMatchMode","columnToggleIcon","position","onColumnToggle","width","marginRight","custom","float","StringMapKey","StringMapName","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n\r\nclass Contact_Missing_Report extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n             /*{ body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n           { field: \"Action\", header: \"Action\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },*/\r\n            { field: \"ContactCode\", header: \"Contact Code\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },\r\n            { field: \"ContactName\", header: \"Contact Name\", sortable: true, filter: true, id: 2, style: { 'width': '100px' } },\r\n            { field: \"ContactCategory\", header: \"Contact Category\", sortable: true, filter: true, id: 3, style: { 'width': '85px' } },\r\n            { field: \"ContactType\", header: \"Contact Type\", sortable: true, filter: true, id: 4, style: { 'width': '125px' } },\r\n            { field: \"Email\", header: \"Email\", sortable: true, filter: true, id: 5, style: { 'width': '125px' } },\r\n            { field: \"Phone\", header: \"Phone\", sortable: true, filter: true, id: 6, style: { 'textAlign': 'right','width': '85px'  } },\r\n            { field: \"CreatedBy\", header: \"Created By\", sortable: true, filter: true, id: 7, style: { 'textAlign': 'right','width': '85px'  } },\r\n         ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n\r\n            DebtorType: 'SubAgent',\r\n            Period: 0,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            monthtillDate: moment().format(\"YYYY-MM\"),\r\n            fromDate: moment().format(\"YYYY-MM-DD\"),\r\n            toDate: moment().format(\"YYYY-MM-DD\"),\r\n            CONTACTTYPEList: [],\r\n            MONTH: ('0'+(new Date().getMonth() + 2).toString()).slice(-2),\r\n            MONTHError: false,\r\n            CONTACTTYPE:'All',\r\n            Year: '',\r\n            YearError: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Contact_Missing_Report(this.state.CONTACTTYPE);\r\n        this.getDropDownValues('CONTACTTYPE', 'CONTACTTYPEList');\r\n    }\r\n\r\n    ClientDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ClientName}</p>\r\n                <p>{rowData.ClientCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    AgentDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.AgentName}</p>\r\n                <p>{rowData.AgentCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n    SourceName(rowData) {\r\n        return (rowData.Source === \"Direct\")?\r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n               \r\n            </div> :\r\n            \r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n                <p>({rowData.SourceName})</p>\r\n            </div>\r\n        ;\r\n    }\r\n    ColumnclassName(rowData,Column) {\r\n \r\n  \r\n        return (rowData.DaysOutstanding <=7)? <div style={{backgroundColor:'#008c9a',color:'#fff'}} className = \"policy-list-data\">\r\n        <p>{rowData.ProjectedPremium}</p>     \r\n    </div> :<div className = \"policy-list-data\" >\r\n                 <p>{rowData.ProjectedPremium}</p>     \r\n             </div>;\r\n        \r\n            \r\n     }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n\r\n    Contact_Missing_Report() {\r\n        var ShowMonth = this.state.MONTH; console.log(ShowMonth);\r\n        if (ShowMonth ===\"\")\r\n        this.state.MONTH = new Date().getMonth() + 2;\r\n        else\r\n            if (ShowMonth ===\"All\")\r\n            this.state.MONTH = 1;\r\n        if (this.state.Year ===\"\")\r\n        this.state.Year = new Date().getFullYear();\r\n        \r\n        var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\r\n\r\n        if(ShowMonth ==='' || ShowMonth ==='All')\r\n        var endDate =  moment(startDate).endOf('year').format('YYYY-MM-DD');\r\n        else \r\n        var endDate =  moment(startDate).endOf('month').format('YYYY-MM-DD');\r\n        var data = {\r\n           CONTACTTYPE : this.state.CONTACTTYPE,\r\n        };\r\n       \r\n        api.post('api/Contact_Missing_Report', data).then(res => {\r\n            debugger\r\n            if (res.success) {\r\n                console.log(\"resdata......\",res);\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            id:i,\r\n                            ContactId: tempData.ContactId,\r\n                            ContactCategory: tempData.EntityType,\r\n                            ContactName: tempData.ContactName,\r\n                            ContactType: tempData.ContactType,\r\n                            ContactCode: tempData.ContactCode,\r\n                            Email: tempData.Email,\r\n                            Phone: tempData.Phone,\r\n                            CreatedBy: tempData.CreatedBy\r\n                            });\r\n                    }\r\n\r\n                }\r\n                console.log(\"formattedData...\", formattedData);\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.Contact_Missing_Report(this.state.CONTACTTYPE);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'monthtillDate') {\r\n            this.setState({ monthtillDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'Year') {\r\n\r\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\r\n                this.setState({ Year: e.target.value, YearError: true });\r\n                this.show('Year', true, 'YearError', 'Please Enter Year');\r\n            } else {\r\n                this.setState({ Year: e.target.value, YearError: false });\r\n                this.show('Year', false, 'YearError', '');\r\n            }\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, agentinfoError: false });\r\n            this.show('agentinfo', false, 'agentinfoError', '');\r\n\r\n        }\r\n\r\n        if (type === 'Period') {\r\n            this.setState({ Period: value });\r\n        }\r\n\r\n        if (type === 'CONTACTTYPE') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ CONTACTTYPEError: true, CONTACTTYPE: value });\r\n                this.show('CONTACTTYPE', true, \"CONTACTTYPEError\", \"Please select policy type\");\r\n            } else {\r\n                this.setState({ CONTACTTYPEError: false, CONTACTTYPE: value });\r\n                this.show('CONTACTTYPE', false, \"CONTACTTYPEError\", \"\");\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    ReferrData(){\r\n        var data = {\r\n                   };\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Contact with missing Phone and Email</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Filter\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md='3'>\r\n                                            <label>Contact Type</label>\r\n                                            <Input type=\"select\" name=\"CONTACTTYPE\" id=\"CONTACTTYPE\" onChange={(e) => this.selectType(e.target.value, 'CONTACTTYPE')} value={this.state.CONTACTTYPE}>\r\n                                            <option value='All'>All</option>\r\n                                                {this.state.CONTACTTYPEList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                       \r\n                                        <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        {/* <Col md='3'>\r\n                                            <label>Month</label>\r\n                                            <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\r\n                                                {this.state.MONTHList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col> */}\r\n\r\n                                       {/*} <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.ReferrData()}> Refer </BTN>\r\n                                    </Col>*/}\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Contact Missing Report\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(Contact_Missing_Report);\r\n"]},"metadata":{},"sourceType":"module"}