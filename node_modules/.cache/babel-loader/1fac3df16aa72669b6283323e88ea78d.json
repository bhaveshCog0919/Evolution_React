{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/Notes.js\";\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { Sidebar } from 'primereact/sidebar';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Col, Row, Input, Button as BTN } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport APIConstant from '../../utils/constants';\nimport moment from 'moment';\nimport { CommonConfig } from '../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport ShowMoreText from 'react-show-more-text';\n\nclass x_PersonNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn pt-1 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \"Loading...\");\n\n    this.saveNotes = () => {\n      if (this.state.NotesTypeError === false && this.state.notesdescriptionError === false) {\n        const NotesForm = new FormData();\n        NotesForm.append('noteId', this.state.noteID);\n        NotesForm.append('notesType', this.state.notesType);\n        NotesForm.append('notesdescription', this.state.notesdescription.trim());\n        NotesForm.append('entityid', this.state.EntityId);\n        NotesForm.append('entitytype', this.state.EntityType);\n        NotesForm.append('isflag', this.state.isImportant);\n        api.post('api/addNotes', NotesForm).then(res => {\n          if (res.success) {\n            this.reset();\n            toast.success('Notes added successfully');\n            toast.success(res.message);\n            this.getNoteList();\n          } else {}\n        }).catch(err => {});\n      } else {\n        this.show(\"notesType\", this.state.NotesTypeError);\n        this.show(\"notesdescription\", this.state.notesdescriptionError);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'notesdescription') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            notesdescriptionError: true\n          });\n          this.show(\"notesdescription\", true);\n        } else {\n          this.setState({\n            notesdescriptionError: false,\n            notesdescription: e.target.value\n          });\n          this.show(\"notesdescription\", false);\n        }\n      }\n    };\n\n    this.updateNotes = data => {\n      this.setState({\n        isNoteEdit: true,\n        notesdescription: data.NoteText,\n        notesdescriptionError: false,\n        notesType: data.NoteType,\n        NotesTypeError: false,\n        isImportant: data.IsFlag.data[0],\n        noteID: data.NoteId\n      });\n      this.show(\"notesdescription\", false);\n      this.show('notesType', false);\n    };\n\n    this.reset = () => {\n      this.setState({\n        isNoteEdit: false,\n        notesdescription: '',\n        notesdescriptionError: true,\n        notesType: '',\n        NotesTypeError: true,\n        noteID: '',\n        isImportant: 0\n      });\n      this.show(\"notesdescription\", false);\n      this.show('notesType', false);\n    };\n\n    this.state = {\n      Type: [],\n      noteList: [],\n      isImportant: 0,\n      notesType: '',\n      notesdescription: '',\n      NotesTypeError: true,\n      notesdescriptionError: true,\n      noteID: '',\n      isNoteEdit: false,\n      EntityId: '20ee69f7-4895-4d9d-87d1-d440e4f8810b',\n      EntityType: 'User'\n    };\n  }\n\n  componentDidMount() {\n    this.getNoteList();\n    this.getNotesType();\n  }\n\n  getNoteList() {\n    const data = {\n      'entityid': this.state.EntityId,\n      'entitytype': this.state.EntityType,\n      'CurrentUser': CommonConfig.loggedInUserData().EntityId\n    }; // api.post('api/getNotes', data).then(res => {\n\n    api.post('api/getNewBusineesNotes', data).then(res => {\n      if (res.success) {\n        this.setState({\n          noteList: res.data\n        });\n      } else {}\n    }).catch(err => {});\n  }\n\n  getNotesType() {\n    try {\n      const data = {\n        stringmaptype: 'NOTETYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            Type: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  Important() {\n    this.state.isImportant === 0 ? this.setState({\n      isImportant: 1\n    }) : this.setState({\n      isImportant: 0\n    });\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  selectType(value, type) {\n    if (value === '' || value === null) {\n      this.setState({\n        NotesTypeError: true,\n        notesType: value\n      });\n      this.show('notesType', true);\n    } else {\n      this.setState({\n        NotesTypeError: false,\n        notesType: value\n      });\n      this.show('notesType', false);\n    }\n  }\n\n  executeOnClick(isExpanded) {}\n\n  HideSideBar() {\n    this.setState({\n      visible: false\n    });\n    this.reset();\n  }\n\n  render() {\n    const {\n      t,\n      i18n\n    } = this.props;\n    const SaveButton = t(\"buttons.Save\");\n    const AddButton = t(\"buttons.Add\");\n    const EditButton = t(\"buttons.Edit\");\n    const DeleteButton = t(\"buttons.Delete\");\n    const CloseButton = t(\"buttons.Close\");\n    const BackButton = t(\"buttons.Back\");\n    const UpdateButton = t(\"buttons.Update\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: e => this.setState({\n        visible: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, \"Notes\"), /*#__PURE__*/React.createElement(Sidebar, {\n      showCloseIcon: false,\n      blockScroll: true,\n      visible: this.state.visible,\n      position: \"right\",\n      onHide: e => this.HideSideBar(),\n      style: {\n        width: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, this.state.isNoteEdit ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 44\n      }\n    }, t(\"contactNotes:editNotes\")) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 83\n      }\n    }, t(\"contactNotes:addNotes\"))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: {\n        borderBottomStyle: 'solid',\n        borderBottomWidth: 1,\n        borderBottomColor: \"#d8d6d6\",\n        paddingBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, t(\"contactNotes:NotesType.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"notesType\",\n      id: \"notesType\",\n      onChange: e => this.selectType(e.target.value, 'notesType'),\n      value: this.state.notesType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 27\n      }\n    }, t(\"contactNotes:NotesType.placeholder\")), this.state.Type.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 37\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, t(\"contactNotes:NotesType.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      title: t(\"contactNotes:ImportantNotes\"),\n      href: \"javascript:void(0)\",\n      onClick: () => this.Important(),\n      style: {\n        color: this.state.isImportant === 0 ? '#aaaaaa' : '#ff0000',\n        fontSize: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }, \"!\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }, t(\"contactNotes:Notes.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"notesdescription\",\n      id: \"notesdescription\",\n      placeholder: t(\"contactNotes:Notes.placeholder\"),\n      value: this.state.notesdescription,\n      onChange: e => this.handleChange(e),\n      autoResize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, t(\"contactNotes:Notes.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, this.state.isNoteEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveNotes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 83\n      }\n    }), \" Update\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 79\n      }\n    }), \" Cancel\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveNotes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 83\n      }\n    }), \" Save\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 79\n      }\n    }), \" Cancel\"))))))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"left\",\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, this.state.noteList.length, \" notes\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"remove-margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      md: \"12\",\n      style: {\n        textAlign: 'center',\n        borderStyle: \"solid\",\n        borderWidth: 1,\n        borderRadius: 5,\n        padding: 10,\n        backgroundColor: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ScrollPanel, {\n      style: {\n        width: '100%',\n        height: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-section introduction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, this.state.noteList.map((notes, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notes-listing\",\n        style: {\n          borderBottom: \"1px solid #000\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginTop: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"1\",\n        md: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        title: notes.IsFlag.data[0] === 0 ? \"Normal\" : \"Important\",\n        href: \"javascript:void(0)\",\n        style: {\n          color: notes.IsFlag.data[0] === 0 ? '#aaaaaa' : '#ff0000',\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, \"!\")), /*#__PURE__*/React.createElement(Col, {\n        xs: \"10\",\n        md: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notes-detail\",\n        style: {\n          textAlign: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 35\n        }\n      }, notes.NoteType)), /*#__PURE__*/React.createElement(ShowMoreText // style = {{ color:\"#4688F4\" }}\n      , {\n        lines: 2,\n        more: \"Show more\",\n        less: \"Show less\",\n        anchorClass: \"\",\n        onClick: this.executeOnClick,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 31\n        }\n      }, notes.NoteText)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notes-sender-details\",\n        style: {\n          textAlign: \"right\",\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 34\n        }\n      }, notes.EntityName), \"  \", moment(notes.StartDate).format(CommonConfig.dateFormat.dateTime)))), /*#__PURE__*/React.createElement(Col, {\n        xs: \"1\",\n        md: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        icon: \"pi pi-pencil\",\n        tooltip: \"Edit\",\n        tooltipOptions: {\n          position: 'bottom'\n        },\n        onClick: () => this.updateNotes(notes),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }\n      }))));\n    }))))))));\n  }\n\n}\n\nexport default withTranslation()(x_PersonNotes);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/Notes.js"],"names":["React","Component","toast","Sidebar","ScrollPanel","Button","Col","Row","Input","BTN","api","APIConstant","moment","CommonConfig","withTranslation","ShowMoreText","x_PersonNotes","constructor","props","loading","saveNotes","state","NotesTypeError","notesdescriptionError","NotesForm","FormData","append","noteID","notesType","notesdescription","trim","EntityId","EntityType","isImportant","post","then","res","success","reset","message","getNoteList","catch","err","show","handleChange","e","setState","target","name","value","isEmpty","updateNotes","data","isNoteEdit","NoteText","NoteType","IsFlag","NoteId","Type","noteList","componentDidMount","getNotesType","loggedInUserData","stringmaptype","path","dropdownbycode","error","Important","field","condition","document","getElementById","className","selectType","type","executeOnClick","isExpanded","HideSideBar","visible","render","t","i18n","SaveButton","AddButton","EditButton","DeleteButton","CloseButton","BackButton","UpdateButton","width","padding","handleSubmit","borderBottomStyle","borderBottomWidth","borderBottomColor","paddingBottom","map","ct","i","StringMapKey","StringMapName","color","fontSize","textAlign","marginTop","marginBottom","fontWeight","length","borderStyle","borderWidth","borderRadius","backgroundColor","height","notes","borderBottom","EntityName","StartDate","format","dateFormat","dateTime","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { Sidebar } from 'primereact/sidebar';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Col, Row, Input, Button as BTN } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport APIConstant from '../../utils/constants';\nimport moment from 'moment';\nimport { CommonConfig } from '../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport ShowMoreText from 'react-show-more-text';\n\nclass x_PersonNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Type: [],\n      noteList: [],\n      isImportant: 0,\n      notesType: '',\n      notesdescription: '',\n      NotesTypeError: true,\n      notesdescriptionError: true,\n      noteID: '',\n      isNoteEdit: false,\n      EntityId: '20ee69f7-4895-4d9d-87d1-d440e4f8810b',\n      EntityType: 'User'\n    };\n  }\n\n  componentDidMount() {\n    this.getNoteList();\n    this.getNotesType();\n  }\n\n  getNoteList() {\n    const data = {\n      'entityid': this.state.EntityId,\n      'entitytype': this.state.EntityType,\n      'CurrentUser': CommonConfig.loggedInUserData().EntityId\n\n    };\n    // api.post('api/getNotes', data).then(res => {\n      api.post('api/getNewBusineesNotes', data).then(res => {\n      if (res.success) {\n        this.setState({ noteList: res.data });\n      } else {\n\n      }\n    }).catch(err => {\n\n    });\n  }\n\n  getNotesType() {\n    try {\n      const data = {\n        stringmaptype: 'NOTETYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({ Type: res.data });\n        } else {\n\n        }\n      }).catch(err => {\n\n      });\n    } catch (error) {\n\n    }\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  Important() {\n    (this.state.isImportant === 0 ? this.setState({ isImportant: 1 }) : this.setState({ isImportant: 0 }))\n  }\n\n  saveNotes = () => {\n    if (\n      this.state.NotesTypeError === false &&\n      this.state.notesdescriptionError === false) {\n      const NotesForm = new FormData();\n      NotesForm.append('noteId', this.state.noteID);\n      NotesForm.append('notesType', this.state.notesType);\n      NotesForm.append('notesdescription', this.state.notesdescription.trim());\n      NotesForm.append('entityid', this.state.EntityId);\n      NotesForm.append('entitytype', this.state.EntityType);\n      NotesForm.append('isflag', this.state.isImportant);\n      api.post('api/addNotes', NotesForm).then(res => {\n        if (res.success) {\n          this.reset();\n          toast.success('Notes added successfully');\n          toast.success(res.message);\n          this.getNoteList();\n        } else {\n\n        }\n      }).catch(err => {\n      });\n    } else {\n      this.show(\"notesType\", this.state.NotesTypeError);\n      this.show(\"notesdescription\", this.state.notesdescriptionError);\n    }\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  selectType(value, type) {\n    if (value === '' || value === null) {\n      this.setState({ NotesTypeError: true, notesType: value });\n      this.show('notesType', true);\n    } else {\n      this.setState({ NotesTypeError: false, notesType: value });\n      this.show('notesType', false);\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    if (e.target.name === 'notesdescription') {\n      if (CommonConfig.isEmpty(e.target.value)) {\n        this.setState({ notesdescriptionError: true });\n        this.show(\"notesdescription\", true);\n      } else {\n        this.setState({ notesdescriptionError: false, notesdescription: e.target.value });\n        this.show(\"notesdescription\", false);\n      }\n    }\n  }\n\n  updateNotes = (data) => {\n    this.setState({\n      isNoteEdit: true, notesdescription: data.NoteText, notesdescriptionError: false,\n      notesType: data.NoteType, NotesTypeError: false, isImportant: data.IsFlag.data[0],\n      noteID: data.NoteId\n    });\n    this.show(\"notesdescription\", false);\n    this.show('notesType', false);\n  }\n\n  reset = () => {\n    this.setState({\n      isNoteEdit: false, notesdescription: '', notesdescriptionError: true,\n      notesType: '', NotesTypeError: true,\n      noteID: '', isImportant: 0,\n    });\n    this.show(\"notesdescription\", false);\n    this.show('notesType', false);\n  }\n\n  executeOnClick(isExpanded) {\n  }\n\n  HideSideBar() {\n    this.setState({ visible: false });\n    this.reset();\n  }\n\n  render() {\n    const { t, i18n } = this.props;\n    const SaveButton = t(\"buttons.Save\");\n    const AddButton = t(\"buttons.Add\");\n    const EditButton = t(\"buttons.Edit\");\n    const DeleteButton = t(\"buttons.Delete\");\n    const CloseButton = t(\"buttons.Close\");\n    const BackButton = t(\"buttons.Back\");\n    const UpdateButton = t(\"buttons.Update\");\n\n    return (\n      <div>\n        <a onClick={(e) => this.setState({ visible: true })}>Notes</a>\n        <Sidebar showCloseIcon={false} blockScroll={true} visible={this.state.visible} position=\"right\" onHide={(e) => this.HideSideBar()} style={{ width: 450 }}>\n          <div style={{ padding: \"20px\" }}>\n            <Row>\n              <Col xs=\"12\" md=\"12\">\n                <Row>\n                  {(this.state.isNoteEdit)?<h4>{t(\"contactNotes:editNotes\")}</h4>:<h4>{t(\"contactNotes:addNotes\")}</h4>}\n                </Row>\n                <form onSubmit={this.handleSubmit} style={{ borderBottomStyle: 'solid', borderBottomWidth: 1, borderBottomColor: \"#d8d6d6\", paddingBottom: 10 }}>\n                  <Row>\n                    <Col md=\"3\" style={{ padding: 0 }}>\n                      <label>{t(\"contactNotes:NotesType.label\")}*</label>\n                    </Col>\n                    <Col md=\"8\">\n                      <div className=\"input-box\">\n                        <Input type=\"select\" name=\"notesType\" id=\"notesType\" onChange={(e) => this.selectType(e.target.value, 'notesType')} value={this.state.notesType}>\n                          <option value=''>{t(\"contactNotes:NotesType.placeholder\")}</option>\n                          {this.state.Type.map((ct, i) => {\n                            return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                          })\n                          }\n                        </Input>\n                        <em className=\"error invalid-feedback\">{t(\"contactNotes:NotesType.error_blank\")}</em>\n                      </div>\n                    </Col>\n                    <Col md=\"1\">\n                      <a title={t(\"contactNotes:ImportantNotes\")} href=\"javascript:void(0)\" onClick={() => this.Important()} style={{ color: this.state.isImportant === 0 ? '#aaaaaa' : '#ff0000', fontSize: 25 }}>!</a>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"3\" style={{ padding: 0 }}>\n                      <label>{t(\"contactNotes:Notes.label\")}*</label>\n                    </Col>\n                    <Col md=\"9\">\n                      <div className=\"input-box\">\n                        <Input type=\"textarea\" name=\"notesdescription\" id=\"notesdescription\" placeholder={t(\"contactNotes:Notes.placeholder\")} value={this.state.notesdescription} onChange={e => this.handleChange(e)} autoResize={true} />\n                        <em className=\"error invalid-feedback\">{t(\"contactNotes:Notes.error_blank\")}</em>\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row className=\"text-center\">\n                    <Col>\n                      {(this.state.isNoteEdit) ?\n                        (\n                          <div className=\"pull-right\">\n                            <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Update</BTN>{' '}\n                            <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                          </div>\n                        ) : (\n                          <div className=\"pull-right\">\n                            <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Save</BTN>{' '}\n                            <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                          </div>\n                        )\n                      }\n                    </Col>\n                  </Row>\n                </form>\n              </Col>\n            </Row>\n            <p style={{ textAlign: \"left\", marginTop: \"5px\", marginBottom: \"5px\", fontWeight: \"bold\" }}>{this.state.noteList.length} notes</p>\n\n            <Row className=\"remove-margin\">\n              <Col xs=\"12\" md=\"12\" style={{ textAlign: 'center', borderStyle: \"solid\", borderWidth: 1, borderRadius: 5, padding: 10, backgroundColor: \"#ffffff\" }}>\n                <ScrollPanel style={{ width: '100%', height: '300px' }}>\n                  <div className=\"content-section introduction\">\n                    {this.state.noteList.map((notes, i) => {\n\n                      return (<div className=\"notes-listing\" style={{ borderBottom: \"1px solid #000\" }}>\n                        <Row style={{ marginTop: \"10px\" }}>\n                          <Col xs=\"1\" md=\"1\">\n                            <a title={notes.IsFlag.data[0] === 0 ? \"Normal\" : \"Important\"} href=\"javascript:void(0)\" style={{ color: notes.IsFlag.data[0] === 0 ? '#aaaaaa' : '#ff0000', fontSize: 25 }}>!</a>\n                          </Col>\n                          <Col xs=\"10\" md=\"9\">\n                            <div className=\"notes-detail\" style={{ textAlign: \"left\" }}>\n                              <h5><b>{notes.NoteType}</b></h5>\n                              <ShowMoreText\n                                // style = {{ color:\"#4688F4\" }}\n                                lines={2}\n                                more='Show more'\n                                less='Show less'\n                                anchorClass=''\n                                onClick={this.executeOnClick}\n                                expanded={false}>\n                                {notes.NoteText}\n                              </ShowMoreText>\n                              {/* <p style={{ textAlign: \"justify\" }}>{notes.notetext}</p> */}\n                            </div>\n                            <div className=\"notes-sender-details\" style={{ textAlign: \"right\", marginTop: 10 }}>\n                              <p><b>{notes.EntityName}</b>  {moment(notes.StartDate).format(CommonConfig.dateFormat.dateTime)}</p>\n                            </div>\n                          </Col>\n                          <Col xs=\"1\" md=\"2\">\n                            <Button type=\"button\" icon=\"pi pi-pencil\" tooltip=\"Edit\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.updateNotes(notes)}></Button>\n                          </Col>\n                        </Row>\n                      </div>)\n                    })\n                    }\n                  </div>\n                </ScrollPanel>\n              </Col>\n            </Row>\n          </div>\n        </Sidebar>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(x_PersonNotes);\n"]},"metadata":{},"sourceType":"module"}