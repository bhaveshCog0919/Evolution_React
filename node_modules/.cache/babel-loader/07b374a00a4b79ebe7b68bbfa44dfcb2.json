{"ast":null,"code":"import _objectSpread from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'primereact/datatable';import{Column}from'primereact/column';import{MultiSelect}from'primereact/multiselect';import{InputText}from'primereact/inputtext';import{toast}from'react-toastify';import'primereact/resources/themes/nova-light/theme.css';import'primereact/resources/primereact.min.css';import'primeicons/primeicons.css';import{Button}from'primereact/button';import{Modal,ModalBody,ModalFooter,ModalHeader,Col,Row,Input,Button as BTN}from'reactstrap';import api from'../../../utils/apiClient';import APIConstant from'../../../utils/constants';import{CommonConfig}from'../../../utils/constants';import moment from'moment';var RiskQuestionList=/*#__PURE__*/function(_Component){_inherits(RiskQuestionList,_Component);var _super=_createSuper(RiskQuestionList);function RiskQuestionList(){var _this;_classCallCheck(this,RiskQuestionList);_this=_super.call(this);_this.OpenModal=function(data){console.log(\"OpenModal\",data);_this.setState({toogleEditModal:!_this.state.toogleEditModal,tempData:data,IsRateable:data.IsRateable==='Yes'?true:false,ResponseWeightTypeName:data.ResponseWeightTypeName,textOperations:[],NumberOperations:[],DateOperations:[],RiskQuestionId:data.RiskQuestionId,effectiveDate:data.effectiveDate});_this.getListValue(data);};_this.InputValidate=function(name,PIndex){return function(evt){console.log(\"InputValidate\",name,PIndex,_this.state.ResponseWeightTypeName);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.textOperations.map(function(Package,index){if(PIndex===index){if(name===\"TextRating\"){var invSpace,TextRatingErr;if(_this.state.ResponseWeightTypeName===\"Rating\"){invSpace=/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/;}else if(_this.state.ResponseWeightTypeName===\"Absolute\"){invSpace=/^[0-9]+(\\.[0-9][0-9])?$/;}if(invSpace.test(evt.target.value)){TextRatingErr=false;}else{TextRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{TextRating:evt.target.value,TextRatingError:TextRatingErr});}else if(name===\"TextOperator\"){// let IsAllOtherOperatorValue;\n// if (evt.target.value === \"All Others\") {\n//     IsAllOtherOperatorValue = false;\n// } else {\n//     IsAllOtherOperatorValue = true;\n// }\nreturn _objectSpread(_objectSpread({},Package),{},{TextOperator:evt.target.value});}else if(name===\"TextToCompare\"){var _invSpace=CommonConfig.RegExp.nameWithoutSpace,_TextRatingErr;// if (this.state.ResponseWeightTypeName === \"Rating\") {\n//     invSpace = CommonConfig.RegExp.allowAllWithSpace\n// }\nif(!_invSpace.test(evt.target.value)){_TextRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{TextToCompare:evt.target.value,TextToCompareError:_TextRatingErr});}}else{return _objectSpread({},Package);}});_this.setState({textOperations:NewTextDetails},function(){});};};_this.NumberInputValidate=function(name,PIndex){return function(evt){console.log(name,PIndex);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.NumberOperations.map(function(Package,index){if(PIndex===index){if(name===\"NumberRating\"){var invSpace,NumberRatingErr;if(_this.state.ResponseWeightTypeName===\"Rating\"){invSpace=/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/;}else if(_this.state.ResponseWeightTypeName===\"Absolute\"){invSpace=/^[0-9]+(\\.[0-9][0-9])?$/;}if(invSpace.test(evt.target.value)){NumberRatingErr=false;}else{NumberRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{NumberRating:evt.target.value,NumberRatingError:NumberRatingErr});}else if(name===\"NumberOperator1\"){var IsAllOtherOperatorValue;if(evt.target.value===\"All Others\"){IsAllOtherOperatorValue=false;}else{IsAllOtherOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{NumberOperator1:evt.target.value,IsAllOtherOperator:IsAllOtherOperatorValue});}else if(name===\"NumberBound1\"){var _invSpace2,DateRatingErr;_invSpace2=CommonConfig.RegExp.number;if(_invSpace2.test(evt.target.value)){DateRatingErr=false;}else{DateRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{NumberBound1:evt.target.value,NumberRatingError:DateRatingErr});}else if(name===\"NumberOperator2\"){console.log(\"evt.target.value\",evt.target.value);var IsOnlyOneOperatorValue;if(evt.target.value===\"One Operator Only\"){IsOnlyOneOperatorValue=false;}else{IsOnlyOneOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{NumberOperator2:evt.target.value,IsOnlyOneOperator:IsOnlyOneOperatorValue});}else if(name===\"NumberBound2\"){var _invSpace3,_DateRatingErr;_invSpace3=CommonConfig.RegExp.number;if(_invSpace3.test(evt.target.value)){_DateRatingErr=false;}else{_DateRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{NumberBound2:evt.target.value,NumberRatingError:_DateRatingErr});}}else{return _objectSpread({},Package);}});_this.setState({NumberOperations:NewTextDetails},function(){});};};_this.ListValueValidate=function(name,PIndex){return function(evt){console.log(name,PIndex);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.ListValue.map(function(Package,index){console.log(\"ListValueindex\",index,PIndex===index);if(PIndex===index){if(name===\"Rating\"){var invSpace,NumberRatingErr;if(_this.state.ResponseWeightTypeName===\"Rating\"){invSpace=/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/;}else if(_this.state.ResponseWeightTypeName===\"Absolute\"){invSpace=/^[0-9]+(\\.[0-9][0-9])?$/;}if(invSpace.test(evt.target.value)){NumberRatingErr=false;}else{NumberRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{Rating:evt.target.value,RatingError:NumberRatingErr});}}else{return _objectSpread({},Package);}});_this.setState({ListValue:NewTextDetails},function(){});};};_this.DateInputValidate=function(name,PIndex){return function(evt){console.log(name,PIndex);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.DateOperations.map(function(Package,index){if(PIndex===index){if(name===\"DateRating\"){var invSpace,DateRatingErr;if(_this.state.ResponseWeightTypeName===\"Rating\"){invSpace=/(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/;}else if(_this.state.ResponseWeightTypeName===\"Absolute\"){invSpace=/^[0-9]+(\\.[0-9][0-9])?$/;}if(invSpace.test(evt.target.value)){DateRatingErr=false;}else{DateRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{DateRating:evt.target.value,DateRatingError:DateRatingErr});}else if(name===\"DateOperator1\"){var IsAllOtherOperatorValue;if(evt.target.value===\"All Others\"){IsAllOtherOperatorValue=false;}else{IsAllOtherOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{DateOperator1:evt.target.value,IsAllOtherOperator:IsAllOtherOperatorValue});}else if(name===\"DateBound1\"){var _invSpace4,_DateRatingErr2;_invSpace4=CommonConfig.RegExp.number;if(_invSpace4.test(evt.target.value)){_DateRatingErr2=false;}else{_DateRatingErr2=true;}return _objectSpread(_objectSpread({},Package),{},{DateBound1:evt.target.value,DateRatingError:_DateRatingErr2});}else if(name===\"DateOperator2\"){var IsOnlyOneOperatorValue;if(evt.target.value===\"One Operator Only\"){IsOnlyOneOperatorValue=false;}else{IsOnlyOneOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{DateOperator2:evt.target.value,IsOnlyOneOperator:IsOnlyOneOperatorValue});}else if(name===\"DateBound2\"){var _invSpace5,_DateRatingErr3;_invSpace5=CommonConfig.RegExp.number;if(_invSpace5.test(evt.target.value)){_DateRatingErr3=false;}else{_DateRatingErr3=true;}return _objectSpread(_objectSpread({},Package),{},{DateBound2:evt.target.value,DateRatingError:_DateRatingErr3});}}else{return _objectSpread({},Package);}});_this.setState({DateOperations:NewTextDetails},function(){});};};_this.export=function(){_this.dt.exportCSV();};_this.toggleEdit=function(){_this.setState({toogleEditModal:false,textOperations:[],IsRateable:false,NumberOperations:[],ListValue:[],DateOperations:[],isEnable:false,historyDates:'',historyDatesArr:[]});};_this.updateQuestion=function(){var data={ResponseTypeName:_this.state.tempData.ResponseTypeName,IsRateable:_this.state.IsRateable,ResponseWeightTypeName:_this.state.ResponseWeightTypeName,RiskQuestionId:_this.state.RiskQuestionId,effectiveDate:_this.state.effectiveDate,loggedInUserId:CommonConfig.loggedInUserId()};if(_this.state.tempData.ResponseTypeName===\"Text\"){if(_this.state.IsRateable){data.textOperations=_this.state.textOperations;}else{data.textOperations='';}}else if(_this.state.tempData.ResponseTypeName===\"Number\"||_this.state.tempData.ResponseTypeName===\"Percentage\"||_this.state.tempData.ResponseTypeName===\"Amount\"){if(_this.state.IsRateable){data.NumberOperations=_this.state.NumberOperations;}else{data.NumberOperations='';}}else if(_this.state.tempData.ResponseTypeName===\"Date\"||_this.state.tempData.ResponseTypeName===\"Year\"){if(_this.state.IsRateable){data.DateOperations=_this.state.DateOperations;}else{data.DateOperations='';}}else if(_this.state.tempData.ResponseTypeName===\"ListOfValues\"||_this.state.tempData.ResponseTypeName===\"YesNo\"){if(_this.state.IsRateable){data.ListValue=_this.state.ListValue;}else{data.ListValue='';}}console.log(\"IsOnlyOneOperator\",data);api.post('api/UpdateRiskQuestionWeightage',data).then(function(res){console.log(\"UpdateRiskQuestionWeightage\",res);if(res.success){console.log(\"UpdateRiskQuestionWeightage\",res.data);toast.success(res.data.message);_this.toggleEdit('save');_this.getRiskQuestion();// setTimeout(function () {\n//     window.location.reload();\n// }, 1000);\n}}).catch(function(err){});};_this.goToHistoryPage=function(data){var Id=data.RiskQuestionId;_this.props.history.push({pathname:'/Master/RiskQuestionHistory/'+Id,state:{Id:Id}});};_this.getPageString=function(e){var firstPage=e.first+1;var l=e.rows*(e.page+1);var lastPage=l<_this.state.RiskQuestionList.length?l:_this.state.RiskQuestionList.length;var str=firstPage+' to '+lastPage+' out of '+_this.state.RiskQuestionList.length+' records';_this.setState({selectedPage:e.first,str:str,rowsPerPage:e.rows});};_this.checked=function(isChecked,value){console.log(\"checked\",isChecked);_this.setState({IsRateable:isChecked});};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));if(e.target.name==='effectiveDate'){if(e.target.value===''||e.target.value===null){_this.setState({effectiveDateError:true});_this.show(\"effectiveDate\",true,\"effectiveDateError\",\"Enter valid effective date\");}else{_this.setState({effectiveDateError:false,effectiveDate:e.target.value});_this.show(\"effectiveDate\",false,\"effectiveDateError\",\"\");}}};var columns=[{field:\"QuestionCategoryName\",header:\"Category\",sortable:true,filter:true,id:0},{field:\"QuestionGroupName\",header:\"Group\",sortable:true,filter:true,id:1},{field:\"QuestionCode\",header:\"Question Code\",sortable:true,filter:true,id:2},{field:\"RiskQuestion\",header:\"Question\",sortable:true,filter:true,id:3},{field:\"IsRateable\",header:\"Is Rated?\",sortable:true,filter:true,id:4},{field:\"ResponseType\",header:\"Response Type\",sortable:true,filter:true,id:5},{field:\"ResponseWeightTypeName\",header:\"Rating Type\",sortable:true,filter:true,id:6},{body:_this.actionTemplate.bind(_assertThisInitialized(_this)),header:\"Action\",sortable:false,filter:false,id:7}];_this.onColumnToggle=_this.onColumnToggle.bind(_assertThisInitialized(_this));_this.state={cols:columns,RiskQuestionList:[],rowData:'',VesselClassList:[],VesselTypeList:[],vesselClass:'',VesselClassId:'',vesselClassError:true,VesselTypeId:'',vesselType:'',vesselTypeError:true,selectedPage:0,rowsPerPageOptions:CommonConfig.dataTableConfig.rowsPerPageOptions,str:'',rowsPerPage:CommonConfig.dataTableConfig.rowsPerPage,globalFilter:null,toogleEditModal:false,tempData:'',IsRateable:false,ResponseWeightTypeName:'',ResponseWeightTypeNameError:true,textOperation:'',textOperations:[],TextArr:{id:1,TextRating:'',TextOperator:'',TextToCompare:'',TextToCompareError:false,isDeleted:false},NumberOperations:[],NumberArr:{id:1,NumberRating:'',NumberOperator1:'',NumberOperator1Arr:[],NumberBound1:'',NumberOperator2:'',NumberOperator2Arr:[],NumberBound2:'',IsOnlyOneOperator:false,IsAllOtherOperator:true,NumberRatingError:false,isDeleted:false},DateOperations:[],DateArr:{id:1,DateRating:'',DateOperator1:'',DateOperator1Arr:[],DateBound1:'',DateOperator2:'',DateOperator2Arr:[],DateBound2:'',IsOnlyOneOperator:false,IsAllOtherOperator:true,DateRatingError:false,isDeleted:false},TextRatingError:true,TextRating:'',ListValue:[],Rating:'',RatingError:true,listType:'',systemEndorsementArr:[],systemEndorsement:'',systemEndorsementError:true,systemEndorsementText:'',systemEndorsementTextArr:[],RiskQuestionId:'',RiskQuestionResponseWeightageId:'',ResponseType:'',effectivedate:'Effective Date',effectiveDate:moment().format('YYYY-MM-DD'),effectiveDateError:true,historyDates:'',historyDatesArr:[],isEnable:false};_this.colOptions=[];for(var _i=0,_columns=columns;_i<_columns.length;_i++){var col=_columns[_i];_this.colOptions.push({label:col.header,value:col});}return _this;}_createClass(RiskQuestionList,[{key:\"onColumnToggle\",value:function onColumnToggle(event){var valueInOrder=event.value.sort(function(x,y){return x.id-y.id;});this.setState({cols:valueInOrder});}},{key:\"componentDidMount\",value:function componentDidMount(){this.getRiskQuestion();this.getTimelineDetails();this.getVesselClass();this.getDropDownValues('RATINGTYPE','systemEndorsementArr','SortOrder');this.getDropDownValues('RATINGOPERATOR','NumberOperator1Arr','SortOrder');this.getDropDownValues('RATINGOPERATOR2','NumberOperator2Arr','SortOrder');this.getDropDownValues('RATINGOPERATOR','DateOperator1Arr','SortOrder');this.getDropDownValues('RATINGOPERATOR2','DateOperator2Arr','SortOrder');this.getDropDownValues('TEXTOPERATOR','systemEndorsementTextArr','SortOrder');}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName,orderBy){var _this2=this;try{var data={stringmaptype:stringMapType,orderby:orderBy};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){console.log(\"getDropDownValues\",res.data);_this2.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){}}},{key:\"getRiskQuestion\",value:function getRiskQuestion(){var _this3=this;var data={QuestionCategory:'QUESTIONCATEGORY',QuestionGroup:'QUESTIONGROUP',ResponseType:'RESPONSETYPE',ResponseWeitghtType:'RESPONSEWEIGHTTYPE',VesselClassId:'0f90c38f-3f40-11ea-b7f2-fa163eb9754c'};api.post('api/getRiskQuestion',data).then(function(res){console.log(\"getRiskQuestion\",res.data);if(res.success){var formattedData=[];for(var i=0;i<res.data.length;i++){formattedData.push({id:[i+1],QuestionCategoryName:res.data[i].QuestionCategoryName,QuestionGroupName:res.data[i].QuestionGroupName,QuestionCode:res.data[i].QuestionCode,RiskQuestion:res.data[i].RiskQuestion,IsRateable:res.data[i].IsRateable.data[0]===0?'No':'Yes',ResponseTypeName:res.data[i].ResponseType,ResponseWeightTypeName:res.data[i].ResponseWeightTypeName,ReferenceStringMapType:res.data[i].ReferenceStringMapType,RiskQuestionId:res.data[i].RiskQuestionId,loggedInUserId:CommonConfig.loggedInUserId(),ResponseType:res.data[i].ResponseTypeName,effectiveDate:CommonConfig.isEmpty(res.data[i].StartDate)?'':moment(res.data[i].StartDate).format('YYYY-MM-DD')});}_this3.setState({RiskQuestionList:formattedData});}}).catch(function(err){});}},{key:\"getListValue\",value:function getListValue(ReferenceStringMapType){var _this4=this;console.log(\"getListValue\",ReferenceStringMapType);try{var data={stringmaptype:ReferenceStringMapType.ReferenceStringMapType};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){console.log(\"getListValue\",res.data);var dataToSend={RiskQuestionId:ReferenceStringMapType.RiskQuestionId// ReferenceStringMapType: ReferenceStringMapType.ReferenceStringMapType\n};api.post(\"api/getRiskQuestionResponseWeightageData\",dataToSend).then(function(res){if(res.success){console.log(\"getRiskQuestionResponseWeightageData\",res.data);if(!res.data.length){debugger;if(ReferenceStringMapType.ResponseTypeName===\"Number\"||ReferenceStringMapType.ResponseTypeName===\"Percentage\"||ReferenceStringMapType.ResponseTypeName===\"Amount\"){_this4.setState({NumberOperations:[_this4.state.NumberArr]});}else if(ReferenceStringMapType.ResponseTypeName===\"Text\"){_this4.setState({textOperations:[_this4.state.TextArr]});}else if(ReferenceStringMapType.ResponseTypeName===\"Date\"||ReferenceStringMapType.ResponseTypeName===\"Year\"){_this4.setState({DateOperations:[_this4.state.DateArr]});}}else{var formattedData=[];var NumberOperations=[];var textOperations=[];var DateOperations=[];var i;for(i=0;i<res.data.length;i++){var temppDataForNumber={id:1,NumberRating:'',NumberOperator1:'',NumberOperator1Arr:[],NumberBound1:'',NumberOperator2:'',NumberOperator2Arr:[],NumberBound2:'',IsOnlyOneOperator:true,IsAllOtherOperator:true,DateRatingError:false,isDeleted:false};var temppDataForText={id:1,TextRating:'',TextOperator:'',TextToCompare:'',isDeleted:false};var temppDataForDate={id:1,DateRating:'',DateOperator1:'',DateOperator1Arr:[],DateBound1:'',DateOperator2:'',DateOperator2Arr:[],DateBound2:'',IsOnlyOneOperator:true,IsAllOtherOperator:true,NumberRatingError:false,isDeleted:false};formattedData.push({Response:CommonConfig.isEmpty(res.data[i].ResponseStringMapKey)?'':res.data[i].ResponseStringMapKey.trim(),Rating:CommonConfig.isEmpty(res.data[i].Rating)?CommonConfig.isEmpty(res.data[i].AbsoluteAmount)?0:res.data[i].AbsoluteAmount:res.data[i].Rating,RiskQuestionResponseWeightageId:CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId});temppDataForNumber.id=i+1;temppDataForNumber.NumberRating=CommonConfig.isEmpty(res.data[i].Rating)?res.data[i].AbsoluteAmount:res.data[i].Rating;temppDataForNumber.NumberOperator1=CommonConfig.isEmpty(res.data[i].Operator1)?'':res.data[i].Operator1;temppDataForNumber.NumberBound1=CommonConfig.isEmpty(res.data[i].Bound1)?0.00:res.data[i].Bound1;temppDataForNumber.NumberOperator2=CommonConfig.isEmpty(res.data[i].Operator2)?'':res.data[i].Operator2;if(temppDataForNumber.NumberOperator2===\"One Operator Only\"){temppDataForNumber.IsOnlyOneOperator=false;}else{temppDataForNumber.IsOnlyOneOperator=true;}temppDataForNumber.NumberBound2=CommonConfig.isEmpty(res.data[i].Bound2)?0.00:res.data[i].Bound2;temppDataForNumber.RiskQuestionResponseWeightageId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId;temppDataForNumber.isDeleted=false;// temppDataForNumber.IsOnlyOneOperator= true;\ntemppDataForText.TextRating=CommonConfig.isEmpty(res.data[i].Rating)?res.data[i].AbsoluteAmount:res.data[i].Rating;temppDataForText.TextOperator=CommonConfig.isEmpty(res.data[i].Operator1)?'':res.data[i].Operator1;temppDataForText.TextToCompare=CommonConfig.isEmpty(res.data[i].Bound1)?'':res.data[i].Bound1;temppDataForText.RiskQuestionResponseWeightageId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId;temppDataForText.isDeleted=false;temppDataForDate.id=i+1;temppDataForDate.DateRating=CommonConfig.isEmpty(res.data[i].Rating)?res.data[i].AbsoluteAmount:res.data[i].Rating;temppDataForDate.DateOperator1=CommonConfig.isEmpty(res.data[i].Operator1)?0.00:res.data[i].Operator1;temppDataForDate.DateBound1=CommonConfig.isEmpty(res.data[i].Bound1)?0.00:res.data[i].Bound1;temppDataForDate.DateOperator2=CommonConfig.isEmpty(res.data[i].Operator2)?0.00:res.data[i].Operator2;if(temppDataForDate.NumberOperator2===\"One Operator Only\"){temppDataForDate.IsOnlyOneOperator=false;}else{temppDataForDate.IsOnlyOneOperator=true;}temppDataForDate.DateBound2=CommonConfig.isEmpty(res.data[i].Bound2)?0.00:res.data[i].Bound2;temppDataForDate.RiskQuestionResponseWeightageId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId;temppDataForDate.isDeleted=false;// temppDataForDate.IsOnlyOneOperator= true;\nNumberOperations.push(temppDataForNumber);textOperations.push(temppDataForText);DateOperations.push(temppDataForDate);}_this4.setState({NumberOperations:NumberOperations});_this4.setState({textOperations:textOperations});_this4.setState({DateOperations:DateOperations});_this4.setState({ListValue:formattedData});}}}).catch(function(err){console.log(\"err\",err);});}}).catch(function(err){console.log(\"err\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getVesselClass\",value:function getVesselClass(){var _this5=this;var data={};//Static policy ID\napi.post('api/getVesselClassList',data).then(function(res){console.log(res);if(res.success){_this5.setState({VesselClassList:res.data});}else{}}).catch(function(err){console.log(\"errr\",err);});}},{key:\"addRowToArray\",value:function addRowToArray(type){var i=this.state.textOperations.length;if(type==='Text'){var textOperation=this.state.textOperations;textOperation.push(this.state.TextArr);this.setState({textOperations:textOperation});}else if(type==='Number'){var NumberOperation=this.state.NumberOperations;NumberOperation.push(this.state.NumberArr);this.setState({NumberOperations:NumberOperation});}else if(type==='Date'){var DateOperation=this.state.DateOperations;DateOperation.push(this.state.DateArr);this.setState({DateOperations:DateOperation});}}},{key:\"removeRowToArray\",value:function removeRowToArray(value,i){this.state.textOperations[i].isDeleted=true;console.log(\"removeRowToNumberArray\",this.state.textOperations);this.setState({textOperations:this.state.textOperations});}},{key:\"removeRowToNumberArray\",value:function removeRowToNumberArray(value,i){this.state.NumberOperations[i].isDeleted=true;console.log(\"removeRowToNumberArray\",this.state.NumberOperations);this.setState({NumberOperations:this.state.NumberOperations});}},{key:\"removeRowToDateArray\",value:function removeRowToDateArray(value,i){this.state.DateOperations[i].isDeleted=true;console.log(\"removeRowToNumberArray\",this.state.DateOperations);this.setState({DateOperations:this.state.DateOperations});}},{key:\"getTimelineDetails\",value:function getTimelineDetails(){var formattedData=[];var firstPage=formattedData.length?'1':'0';var lastPage=this.state.rowsPerPage<formattedData.length?this.state.rowsPerPage:formattedData.length;var str=firstPage+' to '+lastPage+' out of '+formattedData.length+' records';}},{key:\"actionTemplate\",value:function actionTemplate(rowData,column){var _this6=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-clock\",className:\"p-button-primary\",tooltip:\"Show History\",onClick:function onClick(){return _this6.goToHistoryPage(rowData);},tooltipOptions:{position:'bottom'},style:{marginLeft:10}}));}},{key:\"selectType\",value:function selectType(value,type){console.log(\"selectType\",value,type);if(type==='vesselClass'){if(CommonConfig.isEmpty(value)){this.setState({vesselClassError:true,vesselClass:value});this.show(\"vesselClass\",true,\"vesselClassError\",\"Please select Vessel Class Name\");}else{this.setState({vesselClassError:false,vesselClass:value});this.show(\"vesselClass\",false,\"vesselClassError\",\"\");}}if(type==='ResponseWeightTypeName'){if(value===''||value===null||value===undefined){this.setState({ResponseWeightTypeNameError:true,ResponseWeightTypeName:value});this.show(\"ResponseWeightTypeName\",true,\"ResponseWeightTypeNameError\",\"Select valid type\");}else{var NewTextDetails=this.state.NumberOperations.map(function(Package,index){return _objectSpread(_objectSpread({},Package),{},{NumberRating:0.00});});var NewTextDetailsForDate=this.state.DateOperations.map(function(Package,index){return _objectSpread(_objectSpread({},Package),{},{DateRating:0.00});});var NewTextDetailsForList=this.state.ListValue.map(function(Package,index){return _objectSpread(_objectSpread({},Package),{},{Rating:0.00});});this.setState({NumberOperations:NewTextDetails,DateOperations:NewTextDetailsForDate,ListValue:NewTextDetailsForList});this.setState({ResponseWeightTypeNameError:false,ResponseWeightTypeName:value});this.show(\"ResponseWeightTypeName\",false,\"ResponseWeightTypeNameError\",\"Select valid type\");}}}},{key:\"show\",value:function show(field,condition,errorField,message){console.log(\"(field, condition, errorField, message)\",field,condition,errorField,message);if(condition){if(document.getElementById(field))document.getElementById(field).className=\"form-control is-invalid\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML='<p>'+message+' </p>';}else{if(document.getElementById(field))document.getElementById(field).className=\"form-control\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML=null;}}},{key:\"editZone\",value:function editZone(task){if(task==\"view\"){this.setState({isEnable:false});// window.location.reload();\n}else{this.setState({isEnable:true});}}},{key:\"render\",value:function render(){var _this7=this;var columns=this.state.cols.map(function(col,i){return/*#__PURE__*/React.createElement(Column,{field:col.field,header:col.header,body:col.body,sortable:col.sortable,filter:col.filter,filterMatchMode:\"contains\"});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"basic-header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Risk Question List\")),/*#__PURE__*/React.createElement(\"div\",{className:\"basic-header\"},/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"header-right-option\"},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-search\",style:{margin:'4px 4px 0 0'}}),/*#__PURE__*/React.createElement(InputText,{type:\"search\",onInput:function onInput(e){return _this7.setState({globalFilter:e.target.value});},placeholder:\"Global Search\",size:\"30\",style:{marginRight:10}})),/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.cols,options:this.colOptions,fixedPlaceholder:true,placeholder:CommonConfig.dataTableConfig.columnToggleIcon,tooltip:\"Show / Hide Column\",onChange:this.onColumnToggle,style:{width:'50px'}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-external-link\",tooltip:\"Export As CSV\",tooltipOptions:{position:'bottom'},onClick:this.export,style:{marginRight:10}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"table-custom\"},/*#__PURE__*/React.createElement(DataTable,{ref:function ref(el){return _this7.dt=el;},value:this.state.RiskQuestionList,first:this.state.selectedPage,onPage:function onPage(e){return _this7.getPageString(e);},paginator:true,rows:this.state.rowsPerPage,totalRecords:this.state.RiskQuestionList.length,exportFilename:\"Risk Question List\",currentPageReportTemplate:this.state.str,paginatorTemplate:\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",rowsPerPageOptions:this.state.rowsPerPageOptions,globalFilter:this.state.globalFilter,emptyMessage:\"No records found\",responsive:true,resizableColumns:true,columnResizeMode:\"fit\",scrollable:true,scrollHeight:\"265px\"},columns)),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.toogleEditModal,toggle:function toggle(){return _this7.toggleEdit('save');},className:'modal-lg '+this.props.className},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this7.toggleEdit('save');}},\"Risk Question\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"b\",null,\"Question Category:\"),\" \",this.state.tempData.QuestionCategoryName),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"b\",null,\"Question Group:\"),\" \",this.state.tempData.QuestionGroupName),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"b\",null,\"Question Code:\"),\" \",this.state.tempData.QuestionCode)),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"span\",{style:{fontSize:20}},/*#__PURE__*/React.createElement(\"b\",null,\"Question:\"),\" \",this.state.tempData.RiskQuestion))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"b\",null,\"Response Type:\"),\" \",this.state.tempData.ResponseTypeName)),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Is Rateable?\")),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",name:\"IsRateable\",value:\"IsRateable\",id:\"IsRateable\",checked:this.state.IsRateable,onClick:function onClick(e){return _this7.checked(e.target.checked);}}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"1\"},/*#__PURE__*/React.createElement(\"b\",null,\"Type\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"ResponseWeightTypeName\",id:\"ResponseWeightTypeName\",onChange:function onChange(e){return _this7.selectType(e.target.value,'ResponseWeightTypeName');},value:this.state.ResponseWeightTypeName},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),this.state.systemEndorsementArr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.StringMapName},type.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"ResponseWeightTypeNameError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,this.state.effectivedate)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"effectiveDate\",id:\"effectiveDate\",onChange:function onChange(e){return _this7.handleChange(e);},value:this.state.effectiveDate,min:moment().format('YYYY-MM-DD'),max:moment().add(100,'years').format('YYYY-MM-DD')}),/*#__PURE__*/React.createElement(\"em\",{id:\"effectiveDateError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(\"div\",null,this.state.tempData.ResponseTypeName===\"ListOfValues\"?/*#__PURE__*/ /*<~~~~~~~~~~~LIST~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Response\"))),this.state.ListValue.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this7.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"Rating\",id:\"Rating\",value:value.Rating,onChange:_this7.ListValueValidate('Rating',index)}),value.RatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"10\"},/*#__PURE__*/React.createElement(\"b\",null,value.Response)));})):this.state.tempData.ResponseTypeName===\"YesNo\"?/*#__PURE__*/ /*<~~~~~~~~~~~YESNO~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Response\"))),this.state.ListValue.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this7.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"Rating\",id:\"Rating\",value:value.Rating,onChange:_this7.ListValueValidate('Rating',index)}),value.RatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,value.Response)));})):this.state.tempData.ResponseTypeName===\"Number\"||this.state.tempData.ResponseTypeName===\"Percentage\"||this.state.tempData.ResponseTypeName===\"Amount\"?/*#__PURE__*/ /*<~~~~~~~~~~~NUMBER~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 2\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 2\"))),/*#__PURE__*/React.createElement(\"div\",null,this.state.NumberOperations.map(function(value,index){return/*#__PURE__*/React.createElement(\"div\",null,value.isDeleted==true?null:/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this7.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"NumberRating\",value:value.NumberRating,id:\"NumberRating\",onChange:_this7.NumberInputValidate('NumberRating',index)}),value.NumberRatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null))):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"NumberOperator1\",onChange:_this7.NumberInputValidate('NumberOperator1',index),value:value.NumberOperator1},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this7.state.NumberOperator1Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.StringMapName},type.StringMapName);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"NumberBound1\",value:value.NumberBound1,onChange:_this7.NumberInputValidate('NumberBound1',index)})):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"NumberOperator2\",onChange:_this7.NumberInputValidate('NumberOperator2',index),value:value.NumberOperator2},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this7.state.NumberOperator2Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator&&value.IsOnlyOneOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"NumberBound2\",value:value.NumberBound2,onChange:_this7.NumberInputValidate('NumberBound2',index)})):null),value.IsAllOtherOperator?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this7.addRowToArray('Number');}},\"Add Row\"),index!==0?/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this7.removeRowToNumberArray(value,index);}},\"  Remove\"):null):null));}))):this.state.tempData.ResponseTypeName===\"Date\"||this.state.tempData.ResponseTypeName===\"Year\"?/*#__PURE__*/ /*<~~~~~~~~~~~DATE~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 2\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 2\"))),/*#__PURE__*/React.createElement(\"div\",null,this.state.DateOperations.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this7.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"DateRating\",id:\"DateRating\",value:value.DateRating,onChange:_this7.DateInputValidate('DateRating',index)}),value.DateRatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"DateOperator1\",onChange:_this7.DateInputValidate('DateOperator1',index),value:value.DateOperator1},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this7.state.DateOperator1Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"DateBound1\",value:value.DateBound1,onChange:_this7.DateInputValidate('DateBound1',index)})):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"DateOperator2\",onChange:_this7.DateInputValidate('DateOperator2',index),value:value.DateOperator2},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this7.state.DateOperator2Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator&&value.IsOnlyOneOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"DateBound2\",value:value.DateBound2,onChange:_this7.DateInputValidate('DateBound2',index)})):null),value.IsAllOtherOperator?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this7.addRowToArray('Date');}},\"Add Row\"),index!==0?/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this7.removeRowToDateArray(value,index);}},\"  Remove\"):null):null);}))):this.state.tempData.ResponseTypeName===\"Text\"?/*#__PURE__*/ /*<~~~~~~~~~~~TEXT~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator\")),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Text for Comparison\"))),/*#__PURE__*/React.createElement(\"div\",null,this.state.textOperations.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this7.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"TextRating\",id:\"TextRating\",value:value.TextRating,onChange:_this7.InputValidate('TextRating',index)}),value.TextRatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"systemEndorsementText\",onChange:_this7.InputValidate('TextOperator',index),value:value.TextOperator},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this7.state.systemEndorsementTextArr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"TextToCompare\",id:\"TextToCompare\",value:value.TextToCompare,onChange:_this7.InputValidate('TextToCompare',index)}),value.TextToCompareError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null)),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this7.addRowToArray('Text');}},\"Add Row\"),index!==0?/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this7.removeRowToArray(value,index);}},\"  Remove\"):null));}))):null)),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this7.updateQuestion();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Update\"),' ',/*#__PURE__*/React.createElement(BTN,{color:\"primary\",onClick:function onClick(){return _this7.toggleEdit('save');}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-close\"}),\" Cancel\"))));}}]);return RiskQuestionList;}(Component);export default RiskQuestionList;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/RiskQuestion/RiskQuestionList.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","api","APIConstant","CommonConfig","moment","RiskQuestionList","OpenModal","data","console","log","setState","toogleEditModal","state","tempData","IsRateable","ResponseWeightTypeName","textOperations","NumberOperations","DateOperations","RiskQuestionId","effectiveDate","getListValue","InputValidate","name","PIndex","evt","target","value","NewTextDetails","map","Package","index","invSpace","TextRatingErr","test","TextRating","TextRatingError","TextOperator","RegExp","nameWithoutSpace","TextToCompare","TextToCompareError","NumberInputValidate","NumberRatingErr","NumberRating","NumberRatingError","IsAllOtherOperatorValue","NumberOperator1","IsAllOtherOperator","DateRatingErr","number","NumberBound1","IsOnlyOneOperatorValue","NumberOperator2","IsOnlyOneOperator","NumberBound2","ListValueValidate","ListValue","Rating","RatingError","DateInputValidate","DateRating","DateRatingError","DateOperator1","DateBound1","DateOperator2","DateBound2","export","dt","exportCSV","toggleEdit","isEnable","historyDates","historyDatesArr","updateQuestion","ResponseTypeName","loggedInUserId","post","then","res","success","message","getRiskQuestion","catch","err","goToHistoryPage","Id","props","history","push","pathname","getPageString","e","firstPage","first","l","rows","page","lastPage","length","str","selectedPage","rowsPerPage","checked","isChecked","handleChange","effectiveDateError","show","columns","field","header","sortable","filter","id","body","actionTemplate","bind","onColumnToggle","cols","rowData","VesselClassList","VesselTypeList","vesselClass","VesselClassId","vesselClassError","VesselTypeId","vesselType","vesselTypeError","rowsPerPageOptions","dataTableConfig","globalFilter","ResponseWeightTypeNameError","textOperation","TextArr","isDeleted","NumberArr","NumberOperator1Arr","NumberOperator2Arr","DateArr","DateOperator1Arr","DateOperator2Arr","listType","systemEndorsementArr","systemEndorsement","systemEndorsementError","systemEndorsementText","systemEndorsementTextArr","RiskQuestionResponseWeightageId","ResponseType","effectivedate","format","colOptions","col","label","event","valueInOrder","sort","x","y","getTimelineDetails","getVesselClass","getDropDownValues","stringMapType","setStateName","orderBy","stringmaptype","orderby","path","dropdownbycode","error","QuestionCategory","QuestionGroup","ResponseWeitghtType","formattedData","i","QuestionCategoryName","QuestionGroupName","QuestionCode","RiskQuestion","ReferenceStringMapType","isEmpty","StartDate","dataToSend","temppDataForNumber","temppDataForText","temppDataForDate","Response","ResponseStringMapKey","trim","AbsoluteAmount","Operator1","Bound1","Operator2","Bound2","type","NumberOperation","DateOperation","column","position","marginLeft","undefined","NewTextDetailsForDate","NewTextDetailsForList","condition","errorField","document","getElementById","className","innerHTML","task","textAlign","margin","marginRight","columnToggleIcon","width","el","marginTop","fontSize","selectType","StringMapName","add","display","addRowToArray","removeRowToNumberArray","removeRowToDateArray","removeRowToArray"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport { CommonConfig } from '../../../utils/constants';\nimport moment from 'moment';\n\n\nclass RiskQuestionList extends Component {\n    constructor() {\n        super();\n\n        let columns = [\n            { field: \"QuestionCategoryName\", header: \"Category\", sortable: true, filter: true, id: 0 },\n            { field: \"QuestionGroupName\", header: \"Group\", sortable: true, filter: true, id: 1 },\n            { field: \"QuestionCode\", header: \"Question Code\", sortable: true, filter: true, id: 2 },\n            { field: \"RiskQuestion\", header: \"Question\", sortable: true, filter: true, id: 3 },\n            { field: \"IsRateable\", header: \"Is Rated?\", sortable: true, filter: true, id: 4 },\n            { field: \"ResponseType\", header: \"Response Type\", sortable: true, filter: true, id: 5 },\n            { field: \"ResponseWeightTypeName\", header: \"Rating Type\", sortable: true, filter: true, id: 6 },\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, id: 7 }\n        ];\n\n        this.onColumnToggle = this.onColumnToggle.bind(this);\n\n        this.state = {\n            cols: columns,\n            RiskQuestionList: [],\n            rowData: '',\n            VesselClassList: [],\n            VesselTypeList: [],\n            vesselClass: '',\n            VesselClassId: '',\n            vesselClassError: true,\n            VesselTypeId: '',\n            vesselType: '',\n            vesselTypeError: true,\n            selectedPage: 0,\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            str: '',\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            globalFilter: null,\n            toogleEditModal: false,\n            tempData: '',\n            IsRateable: false,\n            ResponseWeightTypeName: '',\n            ResponseWeightTypeNameError: true,\n            textOperation: '',\n            textOperations: [],\n            TextArr: {\n                id: 1,\n                TextRating: '',\n                TextOperator: '',\n                TextToCompare: '',\n                TextToCompareError: false,\n                isDeleted: false,\n            },\n            NumberOperations: [],\n            NumberArr: {\n                id: 1,\n                NumberRating: '',\n                NumberOperator1: '',\n                NumberOperator1Arr: [],\n                NumberBound1: '',\n                NumberOperator2: '',\n                NumberOperator2Arr: [],\n                NumberBound2: '',\n                IsOnlyOneOperator: false,\n                IsAllOtherOperator: true,\n                NumberRatingError: false,\n                isDeleted: false,\n            },\n            DateOperations: [],\n            DateArr: {\n                id: 1,\n                DateRating: '',\n                DateOperator1: '',\n                DateOperator1Arr: [],\n                DateBound1: '',\n                DateOperator2: '',\n                DateOperator2Arr: [],\n                DateBound2: '',\n                IsOnlyOneOperator: false,\n                IsAllOtherOperator: true,\n                DateRatingError: false,\n                isDeleted: false,\n            },\n            TextRatingError: true,\n            TextRating: '',\n            ListValue: [],\n            Rating: '',\n            RatingError: true,\n            listType: '',\n            systemEndorsementArr: [],\n            systemEndorsement: '',\n            systemEndorsementError: true,\n            systemEndorsementText: '',\n            systemEndorsementTextArr: [],\n            RiskQuestionId: '',\n            RiskQuestionResponseWeightageId: '',\n            ResponseType: '',\n            effectivedate: 'Effective Date',\n            effectiveDate: moment().format('YYYY-MM-DD'),\n            effectiveDateError: true,\n            historyDates: '',\n            historyDatesArr: [],\n            isEnable: false,\n        };\n        this.colOptions = [];\n        for (let col of columns) {\n            this.colOptions.push({ label: col.header, value: col });\n        }\n    }\n\n    onColumnToggle(event) {\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\n        this.setState({ cols: valueInOrder });\n    }\n\n    componentDidMount() {\n        this.getRiskQuestion();\n        this.getTimelineDetails();\n        this.getVesselClass();\n        this.getDropDownValues('RATINGTYPE', 'systemEndorsementArr', 'SortOrder');\n        this.getDropDownValues('RATINGOPERATOR', 'NumberOperator1Arr', 'SortOrder');\n        this.getDropDownValues('RATINGOPERATOR2', 'NumberOperator2Arr', 'SortOrder');\n        this.getDropDownValues('RATINGOPERATOR', 'DateOperator1Arr', 'SortOrder');\n        this.getDropDownValues('RATINGOPERATOR2', 'DateOperator2Arr', 'SortOrder');\n        this.getDropDownValues('TEXTOPERATOR', 'systemEndorsementTextArr', 'SortOrder');\n    }\n\n    getDropDownValues(stringMapType, setStateName, orderBy) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: orderBy\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    console.log(\"getDropDownValues\", res.data);\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getRiskQuestion() {\n        const data = {\n            QuestionCategory: 'QUESTIONCATEGORY',\n            QuestionGroup: 'QUESTIONGROUP',\n            ResponseType: 'RESPONSETYPE',\n            ResponseWeitghtType: 'RESPONSEWEIGHTTYPE',\n            VesselClassId: '0f90c38f-3f40-11ea-b7f2-fa163eb9754c',\n        };\n        api.post('api/getRiskQuestion', data).then(res => {\n            console.log(\"getRiskQuestion\", res.data);\n            if (res.success) {\n                var formattedData = [];\n                for (var i = 0; i < res.data.length; i++) {\n                    formattedData.push({\n                        id: [i + 1],\n                        QuestionCategoryName: res.data[i].QuestionCategoryName,\n                        QuestionGroupName: res.data[i].QuestionGroupName,\n                        QuestionCode: res.data[i].QuestionCode,\n                        RiskQuestion: res.data[i].RiskQuestion,\n                        IsRateable: res.data[i].IsRateable.data[0] === 0 ? 'No' : 'Yes',\n                        ResponseTypeName: res.data[i].ResponseType,\n                        ResponseWeightTypeName: res.data[i].ResponseWeightTypeName,\n                        ReferenceStringMapType: res.data[i].ReferenceStringMapType,\n                        RiskQuestionId: res.data[i].RiskQuestionId,\n                        loggedInUserId: CommonConfig.loggedInUserId(),\n                        ResponseType: res.data[i].ResponseTypeName,\n                        effectiveDate: CommonConfig.isEmpty(res.data[i].StartDate) ? '' : moment(res.data[i].StartDate).format('YYYY-MM-DD'),\n                    })\n                }\n                this.setState({ RiskQuestionList: formattedData });\n            }\n        }).catch(err => {\n        });\n    }\n\n    OpenModal = (data) => {\n        console.log(\"OpenModal\", data);\n        this.setState({ toogleEditModal: !this.state.toogleEditModal, tempData: data, IsRateable: (data.IsRateable === 'Yes' ? true : false), ResponseWeightTypeName: data.ResponseWeightTypeName, textOperations: [], NumberOperations: [], DateOperations: [], RiskQuestionId: data.RiskQuestionId, effectiveDate: data.effectiveDate });\n        this.getListValue(data);\n    }\n\n    getListValue(ReferenceStringMapType) {\n        console.log(\"getListValue\", ReferenceStringMapType);\n        try {\n            const data = {\n                stringmaptype: ReferenceStringMapType.ReferenceStringMapType\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    console.log(\"getListValue\", res.data);\n                    const dataToSend = {\n                        RiskQuestionId: ReferenceStringMapType.RiskQuestionId,\n                        // ReferenceStringMapType: ReferenceStringMapType.ReferenceStringMapType\n                    }\n                    api.post(\"api/getRiskQuestionResponseWeightageData\", dataToSend).then(res => {\n                        if (res.success) {\n                            console.log(\"getRiskQuestionResponseWeightageData\", res.data);\n                            if (!res.data.length) {\n                                debugger\n                                if (ReferenceStringMapType.ResponseTypeName === \"Number\" || ReferenceStringMapType.ResponseTypeName === \"Percentage\" || ReferenceStringMapType.ResponseTypeName === \"Amount\") {\n                                    this.setState({ NumberOperations: [this.state.NumberArr] });\n                                } else if (ReferenceStringMapType.ResponseTypeName === \"Text\") {\n                                    this.setState({ textOperations: [this.state.TextArr] });\n                                } else if (ReferenceStringMapType.ResponseTypeName === \"Date\" || ReferenceStringMapType.ResponseTypeName === \"Year\") {\n                                    this.setState({ DateOperations: [this.state.DateArr] });\n                                }\n                            } else {\n                                var formattedData = [];\n                                var NumberOperations = [];\n                                var textOperations = [];\n                                var DateOperations = [];\n                                let i;\n                                for (i = 0; i < res.data.length; i++) {\n                                    var temppDataForNumber = {\n                                        id: 1,\n                                        NumberRating: '',\n                                        NumberOperator1: '',\n                                        NumberOperator1Arr: [],\n                                        NumberBound1: '',\n                                        NumberOperator2: '',\n                                        NumberOperator2Arr: [],\n                                        NumberBound2: '',\n                                        IsOnlyOneOperator: true,\n                                        IsAllOtherOperator: true,\n                                        DateRatingError: false,\n                                        isDeleted: false,\n                                    };\n\n                                    var temppDataForText = {\n                                        id: 1,\n                                        TextRating: '',\n                                        TextOperator: '',\n                                        TextToCompare: '',\n                                        isDeleted: false,\n                                    }\n\n                                    var temppDataForDate = {\n                                        id: 1,\n                                        DateRating: '',\n                                        DateOperator1: '',\n                                        DateOperator1Arr: [],\n                                        DateBound1: '',\n                                        DateOperator2: '',\n                                        DateOperator2Arr: [],\n                                        DateBound2: '',\n                                        IsOnlyOneOperator: true,\n                                        IsAllOtherOperator: true,\n                                        NumberRatingError: false,\n                                        isDeleted: false,\n                                    }\n                                    formattedData.push({\n                                        Response: CommonConfig.isEmpty(res.data[i].ResponseStringMapKey) ? '' : (res.data[i].ResponseStringMapKey).trim(),\n                                        Rating: CommonConfig.isEmpty(res.data[i].Rating) ? CommonConfig.isEmpty(res.data[i].AbsoluteAmount) ? 0 : res.data[i].AbsoluteAmount : res.data[i].Rating,\n                                        RiskQuestionResponseWeightageId: CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId\n\n                                    });\n\n                                    temppDataForNumber.id = i + 1;\n                                    temppDataForNumber.NumberRating = CommonConfig.isEmpty(res.data[i].Rating) ? res.data[i].AbsoluteAmount : res.data[i].Rating;\n                                    temppDataForNumber.NumberOperator1 = CommonConfig.isEmpty(res.data[i].Operator1) ? '' : res.data[i].Operator1;\n                                    temppDataForNumber.NumberBound1 = CommonConfig.isEmpty(res.data[i].Bound1) ? 0.00 : res.data[i].Bound1;\n\n                                    temppDataForNumber.NumberOperator2 = CommonConfig.isEmpty(res.data[i].Operator2) ? '' : res.data[i].Operator2;\n                                    if (temppDataForNumber.NumberOperator2 === \"One Operator Only\") {\n                                        temppDataForNumber.IsOnlyOneOperator = false;\n                                    } else {\n                                        temppDataForNumber.IsOnlyOneOperator = true;\n                                    }\n                                    temppDataForNumber.NumberBound2 = CommonConfig.isEmpty(res.data[i].Bound2) ? 0.00 : res.data[i].Bound2;\n                                    temppDataForNumber.RiskQuestionResponseWeightageId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId;\n                                    temppDataForNumber.isDeleted = false;\n                                    // temppDataForNumber.IsOnlyOneOperator= true;\n\n                                    temppDataForText.TextRating = CommonConfig.isEmpty(res.data[i].Rating) ? res.data[i].AbsoluteAmount : res.data[i].Rating;\n                                    temppDataForText.TextOperator = CommonConfig.isEmpty(res.data[i].Operator1) ? '' : res.data[i].Operator1;\n                                    temppDataForText.TextToCompare = CommonConfig.isEmpty(res.data[i].Bound1) ? '' : res.data[i].Bound1;\n                                    temppDataForText.RiskQuestionResponseWeightageId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId;\n                                    temppDataForText.isDeleted = false;\n\n                                    temppDataForDate.id = i + 1;\n                                    temppDataForDate.DateRating = CommonConfig.isEmpty(res.data[i].Rating) ? res.data[i].AbsoluteAmount : res.data[i].Rating;\n                                    temppDataForDate.DateOperator1 = CommonConfig.isEmpty(res.data[i].Operator1) ? 0.00 : res.data[i].Operator1;\n                                    temppDataForDate.DateBound1 = CommonConfig.isEmpty(res.data[i].Bound1) ? 0.00 : res.data[i].Bound1;\n                                    temppDataForDate.DateOperator2 = CommonConfig.isEmpty(res.data[i].Operator2) ? 0.00 : res.data[i].Operator2;\n                                    if (temppDataForDate.NumberOperator2 === \"One Operator Only\") {\n                                        temppDataForDate.IsOnlyOneOperator = false;\n                                    } else {\n                                        temppDataForDate.IsOnlyOneOperator = true;\n                                    }\n                                    temppDataForDate.DateBound2 = CommonConfig.isEmpty(res.data[i].Bound2) ? 0.00 : res.data[i].Bound2;\n                                    temppDataForDate.RiskQuestionResponseWeightageId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId;\n                                    temppDataForDate.isDeleted = false;\n                                    // temppDataForDate.IsOnlyOneOperator= true;\n\n                                    NumberOperations.push(temppDataForNumber);\n                                    textOperations.push(temppDataForText);\n                                    DateOperations.push(temppDataForDate);\n                                }\n                                this.setState({ NumberOperations: NumberOperations });\n                                this.setState({ textOperations: textOperations });\n                                this.setState({ DateOperations: DateOperations });\n                                this.setState({ ListValue: formattedData });\n                            }\n                        }\n                    }).catch(err => {\n                        console.log(\"err\", err);\n                    });\n                }\n            }).catch(err => {\n                console.log(\"err\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getVesselClass() {\n        let data = {} //Static policy ID\n        api.post('api/getVesselClassList', data).then(res => {\n            console.log(res);\n\n            if (res.success) {\n                this.setState({ VesselClassList: res.data });\n            } else {\n            }\n        }).catch(err => {\n            console.log(\"errr\", err);\n        });\n    }\n\n    addRowToArray(type) {\n        var i = this.state.textOperations.length;\n        if (type === 'Text') {\n            var textOperation = this.state.textOperations;\n            textOperation.push(this.state.TextArr);\n            this.setState({ textOperations: textOperation });\n        } else if (type === 'Number') {\n            var NumberOperation = this.state.NumberOperations;\n            NumberOperation.push(this.state.NumberArr);\n            this.setState({ NumberOperations: NumberOperation });\n        } else if (type === 'Date') {\n            var DateOperation = this.state.DateOperations;\n            DateOperation.push(this.state.DateArr);\n            this.setState({ DateOperations: DateOperation });\n        }\n    }\n\n    removeRowToArray(value, i) {\n        this.state.textOperations[i].isDeleted = true;\n        console.log(\"removeRowToNumberArray\", this.state.textOperations);\n        this.setState({ textOperations: this.state.textOperations });\n    }\n\n    removeRowToNumberArray(value, i) {\n        this.state.NumberOperations[i].isDeleted = true;\n        console.log(\"removeRowToNumberArray\", this.state.NumberOperations);\n        this.setState({ NumberOperations: this.state.NumberOperations });\n    }\n\n    removeRowToDateArray(value, i) {\n        this.state.DateOperations[i].isDeleted = true;\n        console.log(\"removeRowToNumberArray\", this.state.DateOperations);\n        this.setState({ DateOperations: this.state.DateOperations });\n    }\n\n    InputValidate = (name, PIndex) => evt => {\n        console.log(\"InputValidate\", name, PIndex, this.state.ResponseWeightTypeName);\n        this.setState({ [evt.target.name]: evt.target.value });\n        const NewTextDetails = this.state.textOperations.map((Package, index) => {\n            if (PIndex === index) {\n                if (name === \"TextRating\") {\n                    let invSpace, TextRatingErr;\n                    if (this.state.ResponseWeightTypeName === \"Rating\") {\n                        invSpace = /(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/\n                    } else if (this.state.ResponseWeightTypeName === \"Absolute\") {\n                        invSpace = /^[0-9]+(\\.[0-9][0-9])?$/;\n                    }\n\n                    if (invSpace.test(evt.target.value)) {\n                        TextRatingErr = false;\n                    } else {\n                        TextRatingErr = true;\n                    }\n                    return { ...Package, TextRating: evt.target.value, TextRatingError: TextRatingErr };\n                } else if (name === \"TextOperator\") {\n                    // let IsAllOtherOperatorValue;\n                    // if (evt.target.value === \"All Others\") {\n                    //     IsAllOtherOperatorValue = false;\n                    // } else {\n                    //     IsAllOtherOperatorValue = true;\n                    // }\n                    return { ...Package, TextOperator: evt.target.value };\n                }\n                else if (name === \"TextToCompare\") {\n                    let invSpace = CommonConfig.RegExp.nameWithoutSpace, TextRatingErr;\n                    // if (this.state.ResponseWeightTypeName === \"Rating\") {\n                    //     invSpace = CommonConfig.RegExp.allowAllWithSpace\n                    // }\n\n                    if (!invSpace.test(evt.target.value)) {\n                        TextRatingErr = true;\n                    }\n                    return { ...Package, TextToCompare: evt.target.value, TextToCompareError: TextRatingErr };\n                }\n            } else {\n                return { ...Package };\n            }\n        });\n        this.setState({ textOperations: NewTextDetails }, function () {\n        });\n    }\n\n    NumberInputValidate = (name, PIndex) => evt => {\n        console.log(name, PIndex);\n        this.setState({ [evt.target.name]: evt.target.value });\n        const NewTextDetails = this.state.NumberOperations.map((Package, index) => {\n            if (PIndex === index) {\n                if (name === \"NumberRating\") {\n                    let invSpace, NumberRatingErr;\n                    if (this.state.ResponseWeightTypeName === \"Rating\") {\n                        invSpace = /(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/\n                    } else if (this.state.ResponseWeightTypeName === \"Absolute\") {\n                        invSpace = /^[0-9]+(\\.[0-9][0-9])?$/;\n                    }\n\n                    if (invSpace.test(evt.target.value)) {\n                        NumberRatingErr = false;\n                    } else {\n                        NumberRatingErr = true;\n                    }\n                    return { ...Package, NumberRating: evt.target.value, NumberRatingError: NumberRatingErr };\n                }\n                else if (name === \"NumberOperator1\") {\n                    let IsAllOtherOperatorValue;\n                    if (evt.target.value === \"All Others\") {\n                        IsAllOtherOperatorValue = false;\n                    } else {\n                        IsAllOtherOperatorValue = true;\n                    }\n                    return { ...Package, NumberOperator1: evt.target.value, IsAllOtherOperator: IsAllOtherOperatorValue };\n                }\n\n                else if (name === \"NumberBound1\") {\n                    let invSpace, DateRatingErr;\n                    invSpace = CommonConfig.RegExp.number;\n                    if (invSpace.test(evt.target.value)) {\n                        DateRatingErr = false;\n                    } else {\n                        DateRatingErr = true;\n                    }\n                    return { ...Package, NumberBound1: evt.target.value, NumberRatingError: DateRatingErr };\n                }\n\n                else if (name === \"NumberOperator2\") {\n                    console.log(\"evt.target.value\", evt.target.value);\n                    let IsOnlyOneOperatorValue;\n                    if (evt.target.value === \"One Operator Only\") {\n                        IsOnlyOneOperatorValue = false;\n                    } else {\n                        IsOnlyOneOperatorValue = true;\n                    }\n                    return { ...Package, NumberOperator2: evt.target.value, IsOnlyOneOperator: IsOnlyOneOperatorValue };\n                }\n\n                else if (name === \"NumberBound2\") {\n                    let invSpace, DateRatingErr;\n                    invSpace = CommonConfig.RegExp.number;\n                    if (invSpace.test(evt.target.value)) {\n                        DateRatingErr = false;\n                    } else {\n                        DateRatingErr = true;\n                    }\n                    return { ...Package, NumberBound2: evt.target.value, NumberRatingError: DateRatingErr };\n                }\n            } else {\n                return { ...Package };\n            }\n        });\n        this.setState({ NumberOperations: NewTextDetails }, function () {\n        });\n    }\n\n    ListValueValidate = (name, PIndex) => evt => {\n        console.log(name, PIndex);\n        this.setState({ [evt.target.name]: evt.target.value });\n        const NewTextDetails = this.state.ListValue.map((Package, index) => {\n            console.log(\"ListValueindex\", index, PIndex === index);\n            if (PIndex === index) {\n                if (name === \"Rating\") {\n                    let invSpace, NumberRatingErr;\n                    if (this.state.ResponseWeightTypeName === \"Rating\") {\n                        invSpace = /(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/\n                    } else if (this.state.ResponseWeightTypeName === \"Absolute\") {\n                        invSpace = /^[0-9]+(\\.[0-9][0-9])?$/;\n                    }\n\n                    if (invSpace.test(evt.target.value)) {\n                        NumberRatingErr = false;\n                    } else {\n                        NumberRatingErr = true;\n                    }\n                    return { ...Package, Rating: evt.target.value, RatingError: NumberRatingErr };\n                }\n            } else {\n                return { ...Package };\n            }\n        });\n        this.setState({ ListValue: NewTextDetails }, function () {\n        });\n    }\n\n    DateInputValidate = (name, PIndex) => evt => {\n        console.log(name, PIndex);\n        this.setState({ [evt.target.name]: evt.target.value });\n        const NewTextDetails = this.state.DateOperations.map((Package, index) => {\n            if (PIndex === index) {\n                if (name === \"DateRating\") {\n                    let invSpace, DateRatingErr;\n                    if (this.state.ResponseWeightTypeName === \"Rating\") {\n                        invSpace = /(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/\n                    } else if (this.state.ResponseWeightTypeName === \"Absolute\") {\n                        invSpace = /^[0-9]+(\\.[0-9][0-9])?$/;\n                    }\n                    if (invSpace.test(evt.target.value)) {\n                        DateRatingErr = false;\n                    } else {\n                        DateRatingErr = true;\n                    }\n                    return { ...Package, DateRating: evt.target.value, DateRatingError: DateRatingErr };\n                }\n\n                else if (name === \"DateOperator1\") {\n                    let IsAllOtherOperatorValue;\n                    if (evt.target.value === \"All Others\") {\n                        IsAllOtherOperatorValue = false;\n                    } else {\n                        IsAllOtherOperatorValue = true;\n                    }\n                    return { ...Package, DateOperator1: evt.target.value, IsAllOtherOperator: IsAllOtherOperatorValue };\n                }\n\n                else if (name === \"DateBound1\") {\n                    let invSpace, DateRatingErr;\n                    invSpace = CommonConfig.RegExp.number;\n                    if (invSpace.test(evt.target.value)) {\n                        DateRatingErr = false;\n                    } else {\n                        DateRatingErr = true;\n                    }\n                    return { ...Package, DateBound1: evt.target.value, DateRatingError: DateRatingErr };\n                }\n\n                else if (name === \"DateOperator2\") {\n                    let IsOnlyOneOperatorValue;\n                    if (evt.target.value === \"One Operator Only\") {\n                        IsOnlyOneOperatorValue = false;\n                    } else {\n                        IsOnlyOneOperatorValue = true;\n                    }\n                    return { ...Package, DateOperator2: evt.target.value, IsOnlyOneOperator: IsOnlyOneOperatorValue };\n                } else if (name === \"DateBound2\") {\n                    let invSpace, DateRatingErr;\n                    invSpace = CommonConfig.RegExp.number;\n                    if (invSpace.test(evt.target.value)) {\n                        DateRatingErr = false;\n                    } else {\n                        DateRatingErr = true;\n                    }\n                    return { ...Package, DateBound2: evt.target.value, DateRatingError: DateRatingErr };\n                }\n            } else {\n                return { ...Package };\n            }\n        });\n        this.setState({ DateOperations: NewTextDetails }, function () {\n        });\n    }\n\n    export = () => {\n        this.dt.exportCSV();\n    }\n\n    toggleEdit = () => {\n        this.setState({ toogleEditModal: false, textOperations: [], IsRateable: false, NumberOperations: [], ListValue: [], DateOperations: [], isEnable: false, historyDates: '', historyDatesArr: [] });\n    }\n\n    updateQuestion = () => {\n        let data = {\n            ResponseTypeName: this.state.tempData.ResponseTypeName,\n            IsRateable: this.state.IsRateable,\n            ResponseWeightTypeName: this.state.ResponseWeightTypeName,\n            RiskQuestionId: this.state.RiskQuestionId,\n            effectiveDate: this.state.effectiveDate,\n            loggedInUserId: CommonConfig.loggedInUserId()\n        };\n        if (this.state.tempData.ResponseTypeName === \"Text\") {\n            if (this.state.IsRateable) {\n                data.textOperations = this.state.textOperations;\n            } else {\n                data.textOperations = '';\n            }\n        } else if (this.state.tempData.ResponseTypeName === \"Number\" || this.state.tempData.ResponseTypeName === \"Percentage\" || this.state.tempData.ResponseTypeName === \"Amount\") {\n            if (this.state.IsRateable) {\n                data.NumberOperations = this.state.NumberOperations;\n            } else {\n                data.NumberOperations = '';\n            }\n        } else if (this.state.tempData.ResponseTypeName === \"Date\" || this.state.tempData.ResponseTypeName === \"Year\") {\n            if (this.state.IsRateable) {\n                data.DateOperations = this.state.DateOperations;\n            } else {\n                data.DateOperations = '';\n            }\n        } else if (this.state.tempData.ResponseTypeName === \"ListOfValues\" || this.state.tempData.ResponseTypeName === \"YesNo\") {\n            if (this.state.IsRateable) {\n                data.ListValue = this.state.ListValue;\n            } else {\n                data.ListValue = '';\n            }\n        }\n        console.log(\"IsOnlyOneOperator\", data);\n\n        api.post('api/UpdateRiskQuestionWeightage', data).then(res => {\n            console.log(\"UpdateRiskQuestionWeightage\", res);\n            if (res.success) {\n                console.log(\"UpdateRiskQuestionWeightage\", res.data);\n                toast.success(res.data.message);\n                this.toggleEdit('save');\n                this.getRiskQuestion();\n                // setTimeout(function () {\n                //     window.location.reload();\n                // }, 1000);\n            }\n        }).catch(err => {\n        });\n    }\n\n    getTimelineDetails() {\n        var formattedData = [];\n        let firstPage = (formattedData.length) ? '1' : '0';\n        let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n    }\n\n    actionTemplate(rowData, column) {\n        return <div>\n            {/* <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\" tooltip=\"Edit\" onClick={() => this.OpenModal(rowData)} tooltipOptions={{ position: 'bottom' }}></Button> */}\n            <Button type=\"button\" icon=\"pi pi-clock\" className=\"p-button-primary\" tooltip=\"Show History\" onClick={() => this.goToHistoryPage(rowData)} tooltipOptions={{ position: 'bottom' }} style={{ marginLeft: 10 }}></Button>\n            {/* <Button color=\"warning\" style={{ marginRight: '.5em' }}  title=\"Edit\"><i className=\"pi pi-pencil\"></i></Button> */}\n        </div>;\n    }\n\n    goToHistoryPage = (data) => {\n        var Id = data.RiskQuestionId;\n        this.props.history.push({\n            pathname: '/Master/RiskQuestionHistory/' + Id,\n            state: {\n                Id: Id,\n            }\n        });\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.RiskQuestionList.length) ? l : this.state.RiskQuestionList.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.RiskQuestionList.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    checked = (isChecked, value) => {\n        console.log(\"checked\", isChecked);\n        this.setState({ IsRateable: isChecked });\n    }\n\n    selectType(value, type) {\n        console.log(\"selectType\", value, type);\n\n        if (type === 'vesselClass') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ vesselClassError: true, vesselClass: value });\n                this.show(\"vesselClass\", true, \"vesselClassError\", \"Please select Vessel Class Name\");\n            } else {\n                this.setState({ vesselClassError: false, vesselClass: value });\n                this.show(\"vesselClass\", false, \"vesselClassError\", \"\");\n            }\n        }\n\n        if (type === 'ResponseWeightTypeName') {\n            if (value === '' || value === null || value === undefined) {\n                this.setState({ ResponseWeightTypeNameError: true, ResponseWeightTypeName: value });\n                this.show(\"ResponseWeightTypeName\", true, \"ResponseWeightTypeNameError\", \"Select valid type\");\n            } else {\n                const NewTextDetails = this.state.NumberOperations.map((Package, index) => {\n                    return { ...Package, NumberRating: 0.00 };\n                });\n                const NewTextDetailsForDate = this.state.DateOperations.map((Package, index) => {\n                    return { ...Package, DateRating: 0.00 };\n                });\n                const NewTextDetailsForList = this.state.ListValue.map((Package, index) => {\n                    return { ...Package, Rating: 0.00 };\n                });\n                this.setState({ NumberOperations: NewTextDetails, DateOperations: NewTextDetailsForDate, ListValue: NewTextDetailsForList })\n                this.setState({ ResponseWeightTypeNameError: false, ResponseWeightTypeName: value });\n                this.show(\"ResponseWeightTypeName\", false, \"ResponseWeightTypeNameError\", \"Select valid type\");\n            }\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.name === 'effectiveDate') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ effectiveDateError: true });\n                this.show(\"effectiveDate\", true, \"effectiveDateError\", \"Enter valid effective date\");\n            } else {\n                this.setState({ effectiveDateError: false, effectiveDate: e.target.value });\n                this.show(\"effectiveDate\", false, \"effectiveDateError\", \"\");\n            }\n        }\n    }\n\n    show(field, condition, errorField, message) {\n        console.log(\"(field, condition, errorField, message)\", field, condition, errorField, message);\n        if (condition) {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control is-invalid\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    editZone(task) {\n        if (task == \"view\") {\n            this.setState({ isEnable: false });\n            // window.location.reload();\n        } else {\n            this.setState({ isEnable: true });\n        }\n    }\n\n    render() {\n        let columns = this.state.cols.map((col, i) => {\n            return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\n        });\n        return (\n            <div>\n                <div className=\"basic-header\">\n                    <h1>Risk Question List</h1>\n                </div>\n\n\n                <div className=\"basic-header\">\n                    <div></div>\n                    <div className=\"header-right-option\">\n                        <div style={{ textAlign: 'right' }}>\n                            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\n                            <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" size=\"30\" style={{ marginRight: 10 }} />\n                        </div>\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\n                        />\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export As CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\n                    </div>\n                </div>\n\n                <div className=\"table-custom\">\n                    <DataTable\n                        ref={(el) => this.dt = el}\n                        value={this.state.RiskQuestionList}\n                        first={this.state.selectedPage}\n                        onPage={(e) => this.getPageString(e)}\n                        paginator={true}\n                        rows={this.state.rowsPerPage}\n                        totalRecords={this.state.RiskQuestionList.length}\n                        exportFilename=\"Risk Question List\"\n                        currentPageReportTemplate={this.state.str}\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\n                        globalFilter={this.state.globalFilter}\n                        emptyMessage=\"No records found\"\n                        responsive={true}\n                        resizableColumns={true}\n                        columnResizeMode=\"fit\"\n                        scrollable={true}\n                        scrollHeight=\"265px\">\n                        {columns}\n                    </DataTable>\n\n                </div>\n\n                <Modal isOpen={this.state.toogleEditModal} toggle={() => this.toggleEdit('save')}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={() => this.toggleEdit('save')}>Risk Question</ModalHeader>\n\n                    <ModalBody>\n                        <Row>\n                            <Col md=\"4\">\n                                <b>Question Category:</b> {this.state.tempData.QuestionCategoryName}\n                            </Col>\n                            <Col md=\"4\">\n                                <b>Question Group:</b> {this.state.tempData.QuestionGroupName}\n                            </Col>\n                            <Col md=\"4\">\n                                <b>Question Code:</b> {this.state.tempData.QuestionCode}\n                            </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            <Col>\n                                <span style={{ fontSize: 20 }}><b>Question:</b> {this.state.tempData.RiskQuestion}</span>\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: 10 }}>\n                            <Col>\n                                <b>Response Type:</b> {this.state.tempData.ResponseTypeName}\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"2\">\n                                <b>Is Rateable?</b>\n                            </Col>\n                            <Col>\n                                <Input type='checkbox' name='IsRateable' value='IsRateable' id='IsRateable' checked={(this.state.IsRateable)}\n                                    onClick={(e) => this.checked(e.target.checked)} />\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"1\">\n                                <b>Type</b>\n                            </Col>\n                            <Col md=\"2\">\n                                <div className=\"input-box\">\n                                    <Input type=\"select\" name=\"ResponseWeightTypeName\" id=\"ResponseWeightTypeName\" onChange={(e) => this.selectType(e.target.value, 'ResponseWeightTypeName')} value={this.state.ResponseWeightTypeName}>\n                                        <option value=''>Select Rating Type</option>\n                                        {this.state.systemEndorsementArr.map((type, i) => {\n                                            return (<option value={type.StringMapName}>{type.StringMapName}</option>)\n                                        })\n                                        }\n                                    </Input>\n                                    <em id=\"ResponseWeightTypeNameError\" className=\"error invalid-feedback\"></em>\n                                    {/* <em className=\"error invalid-feedback\" >Please enter mooring registration no</em> */}\n                                </div>\n                            </Col>\n                            <Col md=\"2\">\n                                <label>{this.state.effectivedate}</label>\n                            </Col>\n                            <Col md=\"3\">\n                                <Input type=\"date\" name=\"effectiveDate\" id=\"effectiveDate\" onChange={(e) => this.handleChange(e)} value={this.state.effectiveDate}\n                                    min={moment().format('YYYY-MM-DD')}\n                                    max={moment().add(100, 'years').format('YYYY-MM-DD')}\n                                >\n                                </Input>\n                                <em id=\"effectiveDateError\" className=\"error invalid-feedback\"></em>\n                            </Col>\n                        </Row>\n                        <div>\n                            {(this.state.tempData.ResponseTypeName === \"ListOfValues\") ?   /*<~~~~~~~~~~~LIST~~~~~~~~~~>*/\n                                <div>\n                                    <Row>\n                                        <Col md=\"2\">\n                                            <b>{this.state.ResponseWeightTypeName}</b>\n                                        </Col>\n                                        <Col md=\"3\">\n                                            <b>Response</b>\n                                        </Col>\n                                    </Row>\n                                    {this.state.ListValue.map((value, index) => {\n                                        return (\n                                            <Row>\n                                                <Col md=\"2\">\n                                                    {(this.state.IsRateable) ?\n                                                        <div>\n                                                            <Input type=\"text\" name=\"Rating\" id=\"Rating\" value={value.Rating} onChange={this.ListValueValidate('Rating', index)}></Input>\n                                                            {(value.RatingError) ?\n                                                                <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\n                                                                : (null)}\n                                                        </div>\n                                                        : (null)}\n                                                </Col>\n                                                <Col md=\"10\">\n                                                    <b>{value.Response}</b>\n                                                </Col>\n                                            </Row>\n                                        )\n                                    }\n                                    )}\n                                </div>\n\n                                : (this.state.tempData.ResponseTypeName === \"YesNo\") ?   /*<~~~~~~~~~~~YESNO~~~~~~~~~~>*/\n                                    <div>\n                                        <Row>\n                                            <Col md=\"2\">\n                                                <b>{this.state.ResponseWeightTypeName}</b>\n                                            </Col>\n                                            <Col md=\"3\">\n                                                <b>Response</b>\n                                            </Col>\n                                        </Row>\n                                        {this.state.ListValue.map((value, index) => {\n                                            return (\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        {(this.state.IsRateable) ?\n                                                            <div>\n                                                                <Input type=\"text\" name=\"Rating\" id=\"Rating\" value={value.Rating} onChange={this.ListValueValidate('Rating', index)}></Input>\n                                                                {(value.RatingError) ?\n                                                                    <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\n                                                                    : (null)}\n                                                            </div>\n                                                            : (null)}\n                                                    </Col>\n                                                    <Col md=\"3\">\n                                                        <b>{value.Response}</b>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n                                        )}\n                                    </div>\n\n                                    : (this.state.tempData.ResponseTypeName === \"Number\" || this.state.tempData.ResponseTypeName === \"Percentage\" || this.state.tempData.ResponseTypeName === \"Amount\") ?   /*<~~~~~~~~~~~NUMBER~~~~~~~~~~>*/\n                                        <div>\n                                            <Row>\n                                                <Col md=\"2\">\n                                                    <b>{this.state.ResponseWeightTypeName}</b>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                    <b>Operator 1</b>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                    <b>Bound 1</b>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                    <b>Operator 2</b>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                    <b>Bound 2</b>\n                                                </Col>\n\n                                            </Row>\n                                            <div>\n                                                {this.state.NumberOperations.map((value, index) => {\n                                                    return (\n                                                        <div>\n                                                            {(value.isDeleted == true) ? (null) : (\n                                                                <Row>\n                                                                    <Col md=\"2\">\n                                                                        {(this.state.IsRateable) ?\n                                                                            <div className=\"input-box\">\n                                                                                <Row>\n                                                                                    <Col>\n                                                                                        <Input type=\"text\" name=\"NumberRating\" value={value.NumberRating} id=\"NumberRating\" onChange={this.NumberInputValidate('NumberRating', index)} />\n                                                                                        {(value.NumberRatingError) ?\n                                                                                            <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\n                                                                                            : (null)}\n                                                                                    </Col>\n                                                                                </Row>\n                                                                            </div>\n                                                                            : (null)}\n                                                                    </Col>\n                                                                    <Col md=\"2\">\n                                                                        <div className=\"input-box\">\n                                                                            <Input type=\"select\" name=\"NumberOperator1\" onChange={this.NumberInputValidate('NumberOperator1', index)} value={value.NumberOperator1}>\n                                                                                <option value=''>Select Rating Type</option>\n                                                                                {this.state.NumberOperator1Arr.map((type, i) => {\n                                                                                    return (<option value={type.StringMapName}>{type.StringMapName}</option>)\n                                                                                })\n                                                                                }\n                                                                            </Input>\n                                                                        </div>\n                                                                    </Col>\n                                                                    <Col md=\"2\">\n                                                                        {(value.IsAllOtherOperator) ?\n                                                                            <div className=\"input-box\">\n                                                                                <Input type=\"text\" name=\"NumberBound1\" value={value.NumberBound1} onChange={this.NumberInputValidate('NumberBound1', index)}></Input>\n                                                                            </div>\n                                                                            : (null)}\n                                                                    </Col>\n                                                                    <Col md=\"2\">\n                                                                        {/* {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ? */}\n                                                                        <div className=\"input-box\">\n                                                                            <Input type=\"select\" name=\"NumberOperator2\" onChange={this.NumberInputValidate('NumberOperator2', index)} value={value.NumberOperator2}>\n                                                                                <option value=''>Select Rating Type</option>\n                                                                                {this.state.NumberOperator2Arr.map((type, i) => {\n                                                                                    return (<option value={type.value}>{type.label}</option>)\n                                                                                })\n                                                                                }\n                                                                            </Input>\n                                                                        </div>\n                                                                        {/* : (null)} */}\n                                                                    </Col>\n                                                                    <Col md=\"2\">\n                                                                        {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ?\n                                                                            <div className=\"input-box\">\n                                                                                <Input type=\"text\" name=\"NumberBound2\" value={value.NumberBound2} onChange={this.NumberInputValidate('NumberBound2', index)}></Input>\n                                                                            </div>\n                                                                            : (null)}\n                                                                    </Col>\n                                                                    {(value.IsAllOtherOperator) ?\n                                                                        <Col>\n                                                                            <a onClick={() => this.addRowToArray('Number')}>Add Row</a>\n                                                                            {(index !== 0) ?\n                                                                                <a onClick={() => this.removeRowToNumberArray(value, index)}>  Remove</a> : null\n                                                                            }\n                                                                        </Col>\n                                                                        : (null)}\n                                                                </Row>\n                                                            )}\n                                                        </div>\n                                                    )\n                                                })}\n                                            </div>\n                                        </div>\n\n                                        : (this.state.tempData.ResponseTypeName === \"Date\" || this.state.tempData.ResponseTypeName === \"Year\") ?   /*<~~~~~~~~~~~DATE~~~~~~~~~~>*/\n                                            <div>\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <b>{this.state.ResponseWeightTypeName}</b>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <b>Operator 1</b>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <b>Bound 1</b>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <b>Operator 2</b>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <b>Bound 2</b>\n                                                    </Col>\n                                                </Row>\n                                                <div>\n                                                    {this.state.DateOperations.map((value, index) => {\n                                                        return (\n                                                            <Row>\n                                                                <Col md=\"2\">\n                                                                    {(this.state.IsRateable) ?\n                                                                        <div className=\"input-box\">\n                                                                            <Input type=\"text\" name=\"DateRating\" id=\"DateRating\"\n                                                                                value={value.DateRating}\n                                                                                onChange={this.DateInputValidate('DateRating', index)} />\n                                                                            {(value.DateRatingError) ?\n                                                                                <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\n                                                                                : (null)}\n                                                                        </div>\n                                                                        : (null)}\n                                                                </Col>\n                                                                <Col md=\"2\">\n                                                                    <div className=\"input-box\">\n                                                                        <Input type=\"select\" name=\"DateOperator1\" onChange={this.DateInputValidate('DateOperator1', index)} value={value.DateOperator1}>\n                                                                            <option value=''>Select Rating Type</option>\n                                                                            {this.state.DateOperator1Arr.map((type, i) => {\n                                                                                return (<option value={type.value}>{type.label}</option>)\n                                                                            })\n                                                                            }\n                                                                        </Input>\n                                                                    </div>\n                                                                </Col>\n\n                                                                <Col md=\"2\">\n                                                                    {(value.IsAllOtherOperator) ?\n                                                                        <div className=\"input-box\">\n                                                                            <Input type=\"text\" name=\"DateBound1\" value={value.DateBound1} onChange={this.DateInputValidate('DateBound1', index)}></Input>\n                                                                        </div>\n                                                                        : (null)}\n                                                                </Col>\n\n\n                                                                <Col md=\"2\">\n                                                                    {/* {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ? */}\n                                                                    <div className=\"input-box\">\n                                                                        <Input type=\"select\" name=\"DateOperator2\" onChange={this.DateInputValidate('DateOperator2', index)} value={value.DateOperator2}>\n                                                                            <option value=''>Select Rating Type</option>\n                                                                            {this.state.DateOperator2Arr.map((type, i) => {\n                                                                                return (<option value={type.value}>{type.label}</option>)\n                                                                            })\n                                                                            }\n                                                                        </Input>\n                                                                    </div>\n                                                                    {/* : (null)} */}\n                                                                </Col>\n\n\n                                                                <Col md=\"2\">\n                                                                    {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ?\n                                                                        <div className=\"input-box\">\n                                                                            <Input type=\"text\" name=\"DateBound2\" value={value.DateBound2} onChange={this.DateInputValidate('DateBound2', index)}></Input>\n                                                                        </div>\n                                                                        : (null)}\n                                                                </Col>\n                                                                {(value.IsAllOtherOperator) ?\n                                                                    <Col>\n                                                                        <a onClick={() => this.addRowToArray('Date')}>Add Row</a>\n                                                                        {(index !== 0) ?\n                                                                            <a onClick={() => this.removeRowToDateArray(value, index)}>  Remove</a> : null\n                                                                        }\n                                                                    </Col>\n                                                                    : (null)}\n                                                            </Row>\n                                                        )\n                                                    })}\n                                                </div>\n                                            </div>\n\n                                            : (this.state.tempData.ResponseTypeName === \"Text\") ?   /*<~~~~~~~~~~~TEXT~~~~~~~~~~>*/\n                                                <div>\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                            <b>{this.state.ResponseWeightTypeName}</b>\n                                                        </Col>\n                                                        <Col md=\"3\">\n                                                            <b>Operator</b>\n                                                        </Col>\n                                                        <Col md=\"3\">\n                                                            <b>Text for Comparison</b>\n                                                        </Col>\n                                                    </Row>\n                                                    <div>\n                                                        {this.state.textOperations.map((value, index) => {\n                                                            return (\n                                                                <Row>\n                                                                    <Col md=\"2\">\n                                                                        {(this.state.IsRateable) ?\n                                                                            <div className=\"input-box\">\n                                                                                <Input type=\"text\" name=\"TextRating\" id=\"TextRating\" value={value.TextRating} onChange={this.InputValidate('TextRating', index)} />\n                                                                                {(value.TextRatingError) ?\n                                                                                    <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\n                                                                                    : (null)}\n                                                                            </div>\n                                                                            : (null)}\n                                                                    </Col>\n                                                                    <Col md=\"3\">\n                                                                        <div className=\"input-box\">\n                                                                            <Input type=\"select\" name=\"systemEndorsementText\" onChange={this.InputValidate('TextOperator', index)} value={value.TextOperator}>\n                                                                                <option value=''>Select Rating Type</option>\n                                                                                {this.state.systemEndorsementTextArr.map((type, i) => {\n                                                                                    return (<option value={type.value}>{type.label}</option>)\n                                                                                })\n                                                                                }\n                                                                            </Input>\n                                                                        </div>\n                                                                    </Col>\n                                                                    <Col md=\"3\">\n                                                                        <div className=\"input-box\">\n                                                                            <Input type=\"text\" name=\"TextToCompare\" id=\"TextToCompare\" value={value.TextToCompare} onChange={this.InputValidate('TextToCompare', index)} />\n                                                                            {(value.TextToCompareError) ?\n                                                                                <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\n                                                                                : (null)}\n                                                                        </div>\n                                                                    </Col>\n                                                                    <Col>\n                                                                        <a onClick={() => this.addRowToArray('Text')}>Add Row</a>\n                                                                        {(index !== 0) ?\n                                                                            <a onClick={() => this.removeRowToArray(value, index)}>  Remove</a> : null\n                                                                        }\n                                                                    </Col>\n                                                                </Row>\n                                                            )\n                                                        })}\n                                                    </div>\n                                                </div>\n                                                : (null)\n                            }\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <BTN color=\"success\" onClick={() => this.updateQuestion()}><i class=\"fa fa-check\"></i> Update</BTN>{' '}\n                        <BTN color=\"primary\" onClick={() => this.toggleEdit('save')}><i class=\"fa fa-close\"></i> Cancel</BTN>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default RiskQuestionList;"]},"metadata":{},"sourceType":"module"}