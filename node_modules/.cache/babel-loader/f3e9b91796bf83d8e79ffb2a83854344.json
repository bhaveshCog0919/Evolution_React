{"ast":null,"code":"import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Button,Card,CardBody,Col,Container,Form,Input,InputGroup,InputGroupAddon,InputGroupText,Row}from\"reactstrap\";import api from\"../../../utils/apiClient\";import Cookies from\"js-cookie\";import APIConstant from\"../../../utils/constants\";import{ToastContainer,toast}from\"react-toastify\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);var _super=_createSuper(Register);function Register(props,context){var _this;_classCallCheck(this,Register);_this=_super.call(this,props,context);_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));if(e.target.name===\"newpassword\"){if(e.target.value===\"\"||e.target.value===null){_this.setState({newpasswordError:true});_this.show(\"newpassword\",true);}else{_this.setState({newpasswordError:false,newpassword:e.target.value});_this.show(\"newpassword\",false);}}if(e.target.name===\"verifypassword\"){if(e.target.value===\"\"||e.target.value===null){_this.setState({verifypasswordError:true});_this.show(\"verifypassword\",true);}else{_this.setState({verifypasswordError:false,verifypassword:e.target.value});_this.show(\"verifypassword\",false);}}};var token=document.location.href.split('token=')[1];if(token===undefined){_this.props.history.push('/');}_this.state={newpassword:\"\",verifypassword:\"\",newpasswordError:true,verifypasswordError:true};return _this;}_createClass(Register,[{key:\"show\",value:function show(field,condition){if(condition){document.getElementById(field).className=\"form-control is-invalid\";}else{document.getElementById(field).className=\"form-control\";}}},{key:\"onReset\",value:function onReset(){var _this2=this;if(this.state.newpasswordError===false&&this.state.verifypasswordError===false){var token=document.location.href.split('token=')[1];var form={'newpassword':this.state.newpassword,'verifypassword':this.state.verifypassword,'token':token};api.post(APIConstant.path.resetpassword,form).then(function(res){if(res.success){toast.success(res.message);_this2.props.history.push('/login');}else{toast.error(res.message);}}).catch(function(err){toast.error(err);});}else{this.show(\"newpassword\",this.state.newpasswordError);this.show(\"verifypassword\",this.state.verifypasswordError);}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ToastContainer,null),/*#__PURE__*/React.createElement(\"div\",{className:\"app flex-row align-items-center\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,{className:\"justify-content-center\"},/*#__PURE__*/React.createElement(Col,{md:\"9\",lg:\"7\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"mx-4\"},/*#__PURE__*/React.createElement(CardBody,{className:\"p-4\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Reset Password\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted\"},\"Password confirmation!\"),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"icon-lock\"}))),/*#__PURE__*/React.createElement(Input,{name:\"newpassword\",id:\"newpassword\",type:\"password\",placeholder:\"New Password\",autoComplete:\"current-password\",onChange:function onChange(e){return _this3.handleChange(e);},value:this.state.password}),/*#__PURE__*/React.createElement(\"em\",{className:\"error invalid-feedback\"},\"Please enter new password\")),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"icon-lock\"}))),/*#__PURE__*/React.createElement(Input,{name:\"verifypassword\",id:\"verifypassword\",type:\"password\",placeholder:\"Verify Password\",autoComplete:\"current-password\",onChange:function onChange(e){return _this3.handleChange(e);},value:this.state.verifypassword}),/*#__PURE__*/React.createElement(\"em\",{className:\"error invalid-feedback\"},\"Please enter verify password\")),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"px-4\",onClick:function onClick(){return _this3.onReset();}},\"Reset\")))))))));}}]);return Register;}(Component);export default Register;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Pages/ResetPassword/ResetPassword.js"],"names":["React","Component","Button","Card","CardBody","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","api","Cookies","APIConstant","ToastContainer","toast","Register","props","context","handleChange","e","setState","target","name","value","newpasswordError","show","newpassword","verifypasswordError","verifypassword","token","document","location","href","split","undefined","history","push","state","field","condition","getElementById","className","form","post","path","resetpassword","then","res","success","message","error","catch","err","password","onReset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\";\nimport api from \"../../../utils/apiClient\";\nimport Cookies from \"js-cookie\";\nimport APIConstant from \"../../../utils/constants\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nclass Register extends Component {\n  constructor(props, context) {\n    super(props, context);\n    var token = document.location.href.split('token=')[1];\n    if(token === undefined)\n    {\n      this.props.history.push('/')\n    }\n    this.state = {\n      newpassword: \"\",\n      verifypassword: \"\",\n      newpasswordError: true,\n      verifypasswordError: true\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    if (e.target.name === \"newpassword\") {\n      if (e.target.value === \"\" || e.target.value === null) {\n        this.setState({\n          newpasswordError: true\n        });\n        this.show(\"newpassword\", true);\n      } else {\n        this.setState({\n          newpasswordError: false,\n          newpassword: e.target.value\n        });\n        this.show(\"newpassword\", false);\n      }\n    }\n\n    if (e.target.name === \"verifypassword\") {\n        if (e.target.value === \"\" || e.target.value === null) {\n          this.setState({\n            verifypasswordError: true\n          });\n          this.show(\"verifypassword\", true);\n        } else {\n          this.setState({\n            verifypasswordError: false,\n            verifypassword: e.target.value\n          });\n          this.show(\"verifypassword\", false);\n        }\n      }\n  };\n\n  show(field,condition)\n  {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    }\n    else\n    {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n\n  onReset() {\n\n    if(this.state.newpasswordError===false && this.state.verifypasswordError===false){\n      var token = document.location.href.split('token=')[1];\n      const form = {\n        'newpassword': this.state.newpassword,\n        'verifypassword': this.state.verifypassword,\n        'token': token\n      }\n\n      api.post(APIConstant.path.resetpassword, form)\n      .then(res => {\n        if (res.success) {\n          toast.success(res.message)\n          this.props.history.push('/login')\n        }\n        else {\n          toast.error(res.message)\n       }\n      }).catch(err => {\n          toast.error(err)\n      })\n     }\n     else\n     {\n        this.show(\"newpassword\",this.state.newpasswordError)\n        this.show(\"verifypassword\",this.state.verifypasswordError)\n     }\n  }\n\n  render() {\n    return (\n     <div>\n         <ToastContainer></ToastContainer>\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n              <Card className=\"mx-4\">\n                <CardBody className=\"p-4\">\n                  <Form>\n                    <h1>Reset Password</h1>\n                    <p className=\"text-muted\">Password confirmation!</p>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        name=\"newpassword\"\n                        id=\"newpassword\"\n                        type=\"password\"\n                        placeholder=\"New Password\"\n                        autoComplete=\"current-password\"\n                        onChange={e => this.handleChange(e)}\n                        value={this.state.password}\n                      />\n                      <em className=\"error invalid-feedback\">\n                            Please enter new password\n                          </em>\n                    </InputGroup>\n                    <InputGroup className=\"mb-4\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-lock\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        name=\"verifypassword\"\n                        id=\"verifypassword\"\n                        type=\"password\"\n                        placeholder=\"Verify Password\"\n                        autoComplete=\"current-password\"\n                        onChange={e => this.handleChange(e)}\n                        value={this.state.verifypassword}\n                      />\n                      <em className=\"error invalid-feedback\">\n                            Please enter verify password\n                          </em>\n                    </InputGroup>\n                    <Button\n                      color=\"primary\"\n                      className=\"px-4\"\n                      onClick={() => this.onReset()}\n                    >\n                      Reset\n                    </Button>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}