{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/Info/AuthorizeClass.js\";\nimport React, { Component } from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport api from '../../../../utils/apiClient';\nimport APIConstant, { CommonConfig } from '../../../../utils/constants';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\n\nclass AuthorizeClass extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.authorizeArray.length ? l : this.state.authorizeArray.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.authorizeArray.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.openDeleteModal = rowData => {\n      this.setState({\n        toggleModal: !this.state.toggleModal,\n        deleteBinderAuthorisedClassId: rowData.id,\n        deletevesselclass: rowData.vesselclass\n      });\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false,\n        deleteBinderAuthorisedClassId: '',\n        deletevesselclass: ''\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      let decimalRegExp = CommonConfig.RegExp.decimalWithOne;\n\n      if (e.target.name === 'minimumpremium') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            minimumpremiumError: false,\n            minimumpremium: 0\n          });\n          this.show(\"minimumpremium\", false, \"minimumpremiumError\", \"\");\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              minimumpremiumError: true\n            });\n            this.show(\"minimumpremium\", true, \"minimumpremiumError\", \"Please Enter Valid Minimum Premium\");\n          } else {\n            this.setState({\n              minimumpremiumError: false,\n              minimumpremium: e.target.value\n            });\n            this.show(\"minimumpremium\", false, \"minimumpremiumError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'startdate') {\n        if (e.target.value != \"\") {\n          this.setState({\n            startdateError: false\n          });\n          this.show(\"startdate\", false);\n          this.setState({\n            startdate: e.target.value\n          });\n        } else {\n          this.setState({\n            startdateError: true\n          });\n          this.show(\"startdate\", true);\n        }\n      }\n    };\n\n    this.selectType = (value, type) => {\n      if (type == \"vesselclass\") {\n        this.setState({\n          vesselclass: value\n        });\n      }\n    };\n\n    let columns = [{\n      field: \"vesselclass\",\n      header: \"Vessel\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"minimumpremium\",\n      header: \"Minimum Premium\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: this.formatDate.bind(this),\n      header: \"Effective Date\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 8\n    }];\n    const orginial = this.setState; // this.state = JSON.parse(localStorage.getItem('authorizegroupstate'))\n    //     ? JSON.parse(localStorage.getItem('authorizegroupstate'))\n    //     : \n\n    this.state = {\n      toggleModal: false,\n      selectedLanguage: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      authorizeArray: [],\n      BinderId: \"\",\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      vesselclass: \"\",\n      addUpdateData: {},\n      vesselclassError: false,\n      vesselclassmaster: [],\n      minimumpremium: \"\",\n      minimumpremiumError: false,\n      BinderAuthorisedClassId: \"\",\n      startdate: moment().format(\"YYYY-MM-DD\"),\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  formatDate(rowData) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, moment(rowData.startdate).format('DD/MM/YYYY'));\n  }\n\n  componentWillUnmount() {\n    localStorage.removeItem('authorizegroupstate');\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-pencil\",\n      className: \"p-button-warning\",\n      onClick: () => this.editAuthorizeClass(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      tooltip: \"Delete\",\n      onClick: () => this.openDeleteModal(rowData),\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.getVesselClassList();\n  }\n\n  getVesselClassList() {\n    api.get(APIConstant.path.getVesselClass).then(res => {\n      if (res.success) {\n        this.setState({\n          allvesselclassmaster: res.data\n        });\n        var splitData = this.props.location.pathname.split(\"/\"); // if (splitData[3] !== undefined) {\n\n        if (!CommonConfig.isEmpty(splitData[3])) {\n          this.setState({\n            BinderId: splitData[3]\n          });\n          this.getAuthorizeClass(splitData[3]);\n        } // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n        //     this.setState({ BinderId: this.props.match.params.Id })\n        //     this.getAuthorizeClass(this.props.match.params.Id)\n        // }\n\n      } else {}\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getAuthorizeClass(BinderID) {\n    let data = {\n      \"BinderId\": BinderID\n    };\n    api.post(APIConstant.path.getAuthorizeClass, data).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        console.log(\"===========Authirised Class Data\");\n        console.log(res.data); // let vesselclassmaster = []\n\n        var vesselclassmaster = [...this.state.allvesselclassmaster]; // make a separate copy of the array\n\n        for (let i = 0; i < res.data.length; i++) {\n          let index = vesselclassmaster.findIndex(x => x.VesselClassName === res.data[i].VesselClassName);\n\n          if (index !== -1) {\n            vesselclassmaster.splice(index, 1);\n          }\n        }\n\n        this.setState({\n          authorizeArray: res.data.map(obj => {\n            return {\n              vesselclass: obj.VesselClassName,\n              minimumpremium: obj.MinimumPremium,\n              id: obj.BinderAuthorisedClassId,\n              vesselclassid: obj.VesselClassId,\n              startdate: moment(obj.AuthorizedClassStartDate).format('YYYY-MM-DD')\n            };\n          }),\n          vesselclassmaster: vesselclassmaster\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  addAuthorizeClass() {\n    if (this.state.BinderId == \"\") {\n      toast.error('To add Authorized Class Please Create New binder or edit existing Binder');\n    } else if (this.state.vesselclass == '') {\n      toast.error('Please Select Vessel Class');\n    } else if (this.state.minimumpremium == '') {\n      toast.error('Please Enter Minimum Premiun');\n    } else if (this.state.minimumpremiumError) {\n      toast.error('Please Enter Valid Minimum Premiun');\n    } else if (this.state.startdate == '') {\n      toast.error('Please Enter Effective Date');\n    } else {\n      let data = {\n        \"BinderId\": this.state.BinderId,\n        \"VesselClassId\": this.state.vesselclass,\n        \"MinimumPremiunm\": this.state.minimumpremium,\n        \"UserId\": CommonConfig.loggedInUserId(),\n        \"BinderAuthorisedClassId\": this.state.BinderAuthorisedClassId,\n        \"StartDate\": moment(this.state.startdate).format('YYYY-MM-DD')\n      }; // debugger\n\n      console.log(data);\n      api.post(APIConstant.path.addUpdateAuthorizeClass, data).then(res => {\n        if (res.success) {\n          console.log(\"===========Authirised Class Created\", res);\n          toast.success(res.data.message);\n          this.getAuthorizeClass(this.state.BinderId);\n          this.setState({\n            vesselclass: \"\",\n            minimumpremium: \"\",\n            startdate: moment().format('YYYY-MM-DD')\n          }); // setTimeout(function () {\n          //     window.location.reload();\n          // }, 2000);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.setState({\n        BinderAuthorisedClassId: \"\",\n        vesselclass: \"\",\n        minimumpremium: \"\",\n        startdate: moment().format(\"YYYY-MM-DD\")\n      });\n    }\n  }\n\n  editAuthorizeClass(event) {\n    debugger;\n    var vesselclassmaster = this.state.vesselclassmaster;\n    var allvesselclassmaster = [...this.state.allvesselclassmaster]; // make a separate copy of the array\n\n    let index1 = allvesselclassmaster.findIndex(x => x.VesselClassId === event.vesselclassid);\n\n    if (index1 !== -1) {\n      vesselclassmaster.splice(index1, 0, allvesselclassmaster[index1]);\n    }\n\n    this.setState({\n      vesselclassmaster: vesselclassmaster\n    });\n    let index = this.state.authorizeArray.findIndex(x => x.id === event.id);\n\n    if (index !== -1) {\n      let data = this.state.authorizeArray[index];\n      this.setState({\n        vesselclass: data.vesselclassid,\n        minimumpremium: data.minimumpremium,\n        BinderAuthorisedClassId: data.id,\n        startdate: moment(data.startdate).format('YYYY-MM-DD')\n      });\n    }\n  }\n\n  deleteAuthorizeClass() {\n    let data = {\n      \"BinderAuthorisedClassId\": this.state.deleteBinderAuthorisedClassId,\n      \"UserId\": CommonConfig.loggedInUserId(),\n      \"BinderId\": this.state.BinderId\n    };\n    console.log(data);\n    api.post(APIConstant.path.deleteAuthorizedClass, data).then(res => {\n      if (res.success) {\n        // let index = this.state.authorizeArray.findIndex(x => x.vesselclass === this.state.vesselclass);\n        // if (index !== -1) {\n        //     this.state.authorizeArray.splice(index, 1);\n        //     this.setState({ authorizeArray: this.state.authorizeArray });\n        // }\n        if (res.data[0][0].ErrorMsg !== \"\") {\n          console.log(res.data[0][0]);\n          toast.error(res.data[0][0].ErrorMsg);\n        } else {\n          toast.success(\"Authorised class successfully deleted\");\n        }\n\n        this.setState({\n          vesselclass: \"\",\n          minimumpremium: \"\",\n          startdate: moment().format('YYYY-MM-DD'),\n          BinderAuthorisedClassId: \"\"\n        });\n        this.getAuthorizeClass(this.state.BinderId);\n        this.toggleLarge();\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // show(field, condition) {\n  //     if (condition) {\n  //         document.getElementById(field).className = \"form-control is-invalid\";\n  //     } else {\n  //         document.getElementById(field).className = \"form-control\";\n  //     }\n  // }\n  show(field, condition, errorField, message) {\n    debugger;\n\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }, \"Vessel Class\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"vesselclass\",\n      id: \"vesselclass\",\n      onChange: e => this.selectType(e.target.value, 'vesselclass'),\n      value: this.state.vesselclass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 37\n      }\n    }, \"Select VesselClass\"), this.state.vesselclassmaster.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.VesselClassId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 94\n        }\n      }, type.VesselClassName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }, \"Please select VesselClass\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 33\n      }\n    }, \"Effective Date\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"startdate\",\n      id: \"startdate\",\n      placeholder: \"Start Date\",\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      value: this.state.startdate,\n      min: moment().format('YYYY-MM-DD'),\n      max: moment().add(100, 'years').format('YYYY-MM-DD'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 33\n      }\n    }, \"Please select StartDate\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 33\n      }\n    }, \"Minimum Premium\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"minimumpremium\",\n      id: \"minimumpremium\",\n      onChange: e => this.handleChange(e),\n      value: this.state.minimumpremium,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"minimumpremiumError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: \"fit-content\"\n      },\n      type: \"button\",\n      icon: this.state.BinderAuthorisedClassId == \"\" ? \"pi pi-plus\" : \"pi pi-save\",\n      tooltip: this.state.BinderAuthorisedClassId == \"\" ? \"Add Authorize Class\" : \"Update Authorize Class\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.addAuthorizeClass(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.authorizeArray,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.authorizeArray.length,\n      exportFilename: \"Authorized Class List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: this.state.paginatorTemplate,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }\n    }, \"Delete Authorized class\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 21\n      }\n    }, \"Are you sure, You want to delete \", this.state.deletevesselclass, \" Authorized Class?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.deleteAuthorizeClass(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 90\n      }\n    }), \" Delete\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 73\n      }\n    }), \"Cancel\"))));\n  }\n\n}\n\nexport default withTranslation()(AuthorizeClass);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/Info/AuthorizeClass.js"],"names":["React","Component","Col","Row","Modal","ModalBody","ModalHeader","ModalFooter","Button","BTN","Input","withTranslation","DataTable","Column","MultiSelect","InputText","api","APIConstant","CommonConfig","moment","toast","AuthorizeClass","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","authorizeArray","length","str","setState","selectedPage","rowsPerPage","openDeleteModal","rowData","toggleModal","deleteBinderAuthorisedClassId","id","deletevesselclass","vesselclass","toggleLarge","handleChange","target","name","value","decimalRegExp","RegExp","decimalWithOne","minimumpremiumError","minimumpremium","show","test","startdateError","startdate","selectType","type","columns","field","header","sortable","filter","filterMatchMode","formatDate","bind","body","actionTemplate","orginial","selectedLanguage","i18n","language","cols","BinderId","rowsPerPageOptions","dataTableConfig","globalFilter","addUpdateData","vesselclassError","vesselclassmaster","BinderAuthorisedClassId","format","paginatorTemplate","colOptions","col","push","label","onColumnToggle","export","componentWillUnmount","localStorage","removeItem","event","valueInOrder","sort","x","y","dt","exportCSV","column","editAuthorizeClass","marginRight","position","componentWillMount","componentDidMount","getVesselClassList","get","path","getVesselClass","then","res","success","allvesselclassmaster","data","splitData","location","pathname","split","isEmpty","getAuthorizeClass","catch","err","console","log","BinderID","post","i","index","findIndex","VesselClassName","splice","map","obj","MinimumPremium","vesselclassid","VesselClassId","AuthorizedClassStartDate","addAuthorizeClass","error","loggedInUserId","addUpdateAuthorizeClass","message","index1","deleteAuthorizeClass","deleteAuthorizedClass","ErrorMsg","condition","errorField","document","getElementById","className","innerHTML","render","add","height","columnToggleIcon","width","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kDAAP;AACA,OAAO,yCAAP;AACA,OAAO,2BAAP;AACA,OAAO,uCAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,WAAlD,EAA+DC,MAAM,IAAIC,GAAzE,EAA8EC,KAA9E,QAA2F,YAA3F;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASP,MAAT,QAAuB,mBAAvB;AACA,OAAOQ,GAAP,MAAgB,6BAAhB;AACA,OAAOC,WAAP,IAAsBC,YAAtB,QAA0C,6BAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,cAAN,SAA6BpB,SAA7B,CAAuC;AACnCqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyDnBC,aAzDmB,GAyDFC,CAAD,IAAO;AACnB,UAAIC,SAAS,GAAGD,CAAC,CAACE,KAAF,GAAU,CAA1B;AACA,UAAIC,CAAC,GAAGH,CAAC,CAACI,IAAF,IAAUJ,CAAC,CAACK,IAAF,GAAS,CAAnB,CAAR;AACA,UAAIC,QAAQ,GAAIH,CAAC,GAAG,KAAKI,KAAL,CAAWC,cAAX,CAA0BC,MAA/B,GAAyCN,CAAzC,GAA6C,KAAKI,KAAL,CAAWC,cAAX,CAA0BC,MAAtF;AACA,UAAIC,GAAG,GAAGT,SAAS,GAAG,MAAZ,GAAqBK,QAArB,GAAgC,UAAhC,GAA6C,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,MAAvE,GAAgF,UAA1F;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEZ,CAAC,CAACE,KAAlB;AAAyBQ,QAAAA,GAAG,EAAEA,GAA9B;AAAmCG,QAAAA,WAAW,EAAEb,CAAC,CAACI;AAAlD,OAAd;AACH,KA/DkB;;AAAA,SAoFnBU,eApFmB,GAoFAC,OAAD,IAAa;AAC3B,WAAKJ,QAAL,CAAc;AACVK,QAAAA,WAAW,EAAE,CAAC,KAAKT,KAAL,CAAWS,WADf;AAEVC,QAAAA,6BAA6B,EAAEF,OAAO,CAACG,EAF7B;AAGVC,QAAAA,iBAAiB,EAAEJ,OAAO,CAACK;AAHjB,OAAd;AAKH,KA1FkB;;AAAA,SA4FnBC,WA5FmB,GA4FL,MAAM;AAChB,WAAKV,QAAL,CAAc;AACVK,QAAAA,WAAW,EAAE,KADH;AAEVC,QAAAA,6BAA6B,EAAE,EAFrB;AAGVE,QAAAA,iBAAiB,EAAE;AAHT,OAAd;AAKH,KAlGkB;;AAAA,SA6RnBG,YA7RmB,GA6RHtB,CAAD,IAAO;AAElB,WAAKW,QAAL,CAAc;AAAE,SAACX,CAAC,CAACuB,MAAF,CAASC,IAAV,GAAiBxB,CAAC,CAACuB,MAAF,CAASE;AAA5B,OAAd;AAEA,UAAIC,aAAa,GAAGjC,YAAY,CAACkC,MAAb,CAAoBC,cAAxC;;AAEA,UAAI5B,CAAC,CAACuB,MAAF,CAASC,IAAT,KAAkB,gBAAtB,EAAwC;AACpC,YAAIxB,CAAC,CAACuB,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBzB,CAAC,CAACuB,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AAClD,eAAKd,QAAL,CAAc;AAAEkB,YAAAA,mBAAmB,EAAE,KAAvB;AAA8BC,YAAAA,cAAc,EAAE;AAA9C,WAAd;AACA,eAAKC,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAAmC,qBAAnC,EAA0D,EAA1D;AACH,SAHD,MAGO;AACH,cAAI,CAACL,aAAa,CAACM,IAAd,CAAmBhC,CAAC,CAACuB,MAAF,CAASE,KAA5B,CAAL,EAAyC;AACrC,iBAAKd,QAAL,CAAc;AAAEkB,cAAAA,mBAAmB,EAAE;AAAvB,aAAd;AACA,iBAAKE,IAAL,CAAU,gBAAV,EAA4B,IAA5B,EAAkC,qBAAlC,EAAyD,oCAAzD;AACH,WAHD,MAGO;AACH,iBAAKpB,QAAL,CAAc;AAAEkB,cAAAA,mBAAmB,EAAE,KAAvB;AAA8BC,cAAAA,cAAc,EAAE9B,CAAC,CAACuB,MAAF,CAASE;AAAvD,aAAd;AACA,iBAAKM,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAAmC,qBAAnC,EAA0D,EAA1D;AACH;AACJ;AACJ;;AAED,UAAI/B,CAAC,CAACuB,MAAF,CAASC,IAAT,KAAkB,WAAtB,EAAmC;AAC/B,YAAIxB,CAAC,CAACuB,MAAF,CAASE,KAAT,IAAkB,EAAtB,EAA0B;AAEtB,eAAKd,QAAL,CAAc;AAAEsB,YAAAA,cAAc,EAAE;AAAlB,WAAd;AACA,eAAKF,IAAL,CAAU,WAAV,EAAuB,KAAvB;AACA,eAAKpB,QAAL,CAAc;AACVuB,YAAAA,SAAS,EAAElC,CAAC,CAACuB,MAAF,CAASE;AADV,WAAd;AAGH,SAPD,MAOO;AACH,eAAKd,QAAL,CAAc;AAAEsB,YAAAA,cAAc,EAAE;AAAlB,WAAd;AACA,eAAKF,IAAL,CAAU,WAAV,EAAuB,IAAvB;AACH;AACJ;AAGJ,KAjUkB;;AAAA,SAmUnBI,UAnUmB,GAmUN,CAACV,KAAD,EAAQW,IAAR,KAAiB;AAC1B,UAAIA,IAAI,IAAI,aAAZ,EAA2B;AACvB,aAAKzB,QAAL,CAAc;AAAES,UAAAA,WAAW,EAAEK;AAAf,SAAd;AACH;AACJ,KAvUkB;;AAGf,QAAIY,OAAO,GAAG,CACV;AAAEC,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,MAAM,EAAE,QAAhC;AAA0CC,MAAAA,QAAQ,EAAE,IAApD;AAA0DC,MAAAA,MAAM,EAAE,IAAlE;AAAwEC,MAAAA,eAAe,EAAE,UAAzF;AAAqGxB,MAAAA,EAAE,EAAE;AAAzG,KADU,EAEV;AAAEoB,MAAAA,KAAK,EAAE,gBAAT;AAA2BC,MAAAA,MAAM,EAAE,iBAAnC;AAAsDC,MAAAA,QAAQ,EAAE,IAAhE;AAAsEC,MAAAA,MAAM,EAAE,IAA9E;AAAoFC,MAAAA,eAAe,EAAE,UAArG;AAAiHxB,MAAAA,EAAE,EAAE;AAArH,KAFU,EAGV;AAAEoB,MAAAA,KAAK,EAAE,KAAKK,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAT;AAAqCL,MAAAA,MAAM,EAAE,gBAA7C;AAA+DC,MAAAA,QAAQ,EAAE,IAAzE;AAA+EC,MAAAA,MAAM,EAAE,IAAvF;AAA6FC,MAAAA,eAAe,EAAE,UAA9G;AAA0HxB,MAAAA,EAAE,EAAE;AAA9H,KAHU,EAIV;AAAE2B,MAAAA,IAAI,EAAE,KAAKC,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAR;AAAwCL,MAAAA,MAAM,EAAE,QAAhD;AAA0DC,MAAAA,QAAQ,EAAE,KAApE;AAA2EC,MAAAA,MAAM,EAAE,KAAnF;AAA0FC,MAAAA,eAAe,EAAE,UAA3G;AAAuHxB,MAAAA,EAAE,EAAE;AAA3H,KAJU,CAAd;AAOA,UAAM6B,QAAQ,GAAG,KAAKpC,QAAtB,CAVe,CAWf;AACA;AACA;;AACA,SAAKJ,KAAL,GAAa;AACTS,MAAAA,WAAW,EAAE,KADJ;AAETgC,MAAAA,gBAAgB,EAAGlD,KAAK,CAACmD,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4CpD,KAAK,CAACmD,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4CpD,KAAK,CAACmD,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA2CpD,KAAK,CAACmD,IAAN,CAAWC,QAFrJ;AAGTC,MAAAA,IAAI,EAAEd,OAHG;AAIT7B,MAAAA,cAAc,EAAE,EAJP;AAKT4C,MAAAA,QAAQ,EAAE,EALD;AAMTxC,MAAAA,YAAY,EAAE,CANL;AAOTyC,MAAAA,kBAAkB,EAAE5D,YAAY,CAAC6D,eAAb,CAA6BD,kBAPxC;AAQTxC,MAAAA,WAAW,EAAEpB,YAAY,CAAC6D,eAAb,CAA6BzC,WARjC;AAST0C,MAAAA,YAAY,EAAE,IATL;AAUTnC,MAAAA,WAAW,EAAE,EAVJ;AAWToC,MAAAA,aAAa,EAAE,EAXN;AAYTC,MAAAA,gBAAgB,EAAE,KAZT;AAaTC,MAAAA,iBAAiB,EAAE,EAbV;AAcT5B,MAAAA,cAAc,EAAE,EAdP;AAeTD,MAAAA,mBAAmB,EAAE,KAfZ;AAgBT8B,MAAAA,uBAAuB,EAAE,EAhBhB;AAiBTzB,MAAAA,SAAS,EAAExC,MAAM,GAAGkE,MAAT,CAAgB,YAAhB,CAjBF;AAkBTC,MAAAA,iBAAiB,EAAE;AAlBV,KAAb;AAqBA,SAAKC,UAAL,GAAkB,EAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgB1B,OAAhB,EAAyB;AACrB,WAAKyB,UAAL,CAAgBE,IAAhB,CAAqB;AAAEC,QAAAA,KAAK,EAAEF,GAAG,CAACxB,MAAb;AAAqBd,QAAAA,KAAK,EAAEsC;AAA5B,OAArB;AACH;;AAED,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBtB,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKuB,MAAL,GAAc,KAAKA,MAAL,CAAYvB,IAAZ,CAAiB,IAAjB,CAAd;AAGH;;AAEDD,EAAAA,UAAU,CAAC5B,OAAD,EAAU;AAChB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIrB,MAAM,CAACqB,OAAO,CAACmB,SAAT,CAAN,CAA0B0B,MAA1B,CAAiC,YAAjC,CAAJ,CADJ;AAGH;;AAEDQ,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,qBAAxB;AACH;;AAUDJ,EAAAA,cAAc,CAACK,KAAD,EAAQ;AAClB,QAAIC,YAAY,GAAGD,KAAK,CAAC9C,KAAN,CAAYgD,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAE,aAAOD,CAAC,CAACxD,EAAF,GAAOyD,CAAC,CAACzD,EAAhB;AAAoB,KAAjD,CAAnB;AACA,SAAKP,QAAL,CAAc;AAAEwC,MAAAA,IAAI,EAAEqB;AAAR,KAAd;AACH;;AAEDL,EAAAA,MAAM,GAAG;AACL,SAAKS,EAAL,CAAQC,SAAR;AACH;;AAED/B,EAAAA,cAAc,CAAC/B,OAAD,EAAU+D,MAAV,EAAkB;AAC5B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,cAA3B;AAA0C,MAAA,SAAS,EAAC,kBAApD;AAAuE,MAAA,OAAO,EAAE,MAAM,KAAKC,kBAAL,CAAwBhE,OAAxB,CAAtF;AACI,MAAA,KAAK,EAAE;AAAEiE,QAAAA,WAAW,EAAE;AAAf,OADX;AACoC,MAAA,OAAO,EAAC,MAD5C;AACmD,MAAA,cAAc,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAKH,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,aAA3B;AAAyC,MAAA,SAAS,EAAC,iBAAnD;AAAqE,MAAA,OAAO,EAAC,QAA7E;AAAsF,MAAA,OAAO,EAAE,MAAM,KAAKnE,eAAL,CAAqBC,OAArB,CAArG;AAAoI,MAAA,cAAc,EAAE;AAAEkE,QAAAA,QAAQ,EAAE;AAAZ,OAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALG,CAAP;AAOH;;AAkBDC,EAAAA,kBAAkB,GAAG,CAEpB;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,kBAAL;AACH;;AAEDA,EAAAA,kBAAkB,GAAG;AACjB7F,IAAAA,GAAG,CAAC8F,GAAJ,CAAQ7F,WAAW,CAAC8F,IAAZ,CAAiBC,cAAzB,EAAyCC,IAAzC,CAA8CC,GAAG,IAAI;AACjD,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACb,aAAK/E,QAAL,CAAc;AAAEgF,UAAAA,oBAAoB,EAAEF,GAAG,CAACG;AAA5B,SAAd;AACA,YAAIC,SAAS,GAAG,KAAK/F,KAAL,CAAWgG,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,CAAhB,CAFa,CAGb;;AACA,YAAI,CAACvG,YAAY,CAACwG,OAAb,CAAqBJ,SAAS,CAAC,CAAD,CAA9B,CAAL,EAAyC;AACzC,eAAKlF,QAAL,CAAc;AAAEyC,YAAAA,QAAQ,EAAEyC,SAAS,CAAC,CAAD;AAArB,WAAd;AACI,eAAKK,iBAAL,CAAuBL,SAAS,CAAC,CAAD,CAAhC;AACH,SAPY,CAQb;AACA;AACA;AACA;;AACH,OAZD,MAYO,CACN;AACJ,KAfD,EAeGM,KAfH,CAeSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAjBD;AAkBH;;AAEDF,EAAAA,iBAAiB,CAACK,QAAD,EAAW;AACxB,QAAIX,IAAI,GAAG;AACP,kBAAYW;AADL,KAAX;AAGAhH,IAAAA,GAAG,CAACiH,IAAJ,CAAShH,WAAW,CAAC8F,IAAZ,CAAiBY,iBAA1B,EAA6CN,IAA7C,EAAmDJ,IAAnD,CAAwDC,GAAG,IAAI;AAC3DY,MAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;;AACA,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACbW,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACG,IAAhB,EAFa,CAIb;;AAEA,YAAIlC,iBAAiB,GAAG,CAAC,GAAG,KAAKnD,KAAL,CAAWoF,oBAAf,CAAxB,CANa,CAMiD;;AAE9D,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,GAAG,CAACG,IAAJ,CAASnF,MAA7B,EAAqCgG,CAAC,EAAtC,EAA0C;AACtC,cAAIC,KAAK,GAAGhD,iBAAiB,CAACiD,SAAlB,CAA4BjC,CAAC,IAAIA,CAAC,CAACkC,eAAF,KAAsBnB,GAAG,CAACG,IAAJ,CAASa,CAAT,EAAYG,eAAnE,CAAZ;;AACA,cAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdhD,YAAAA,iBAAiB,CAACmD,MAAlB,CAAyBH,KAAzB,EAAgC,CAAhC;AACH;AACJ;;AAGD,aAAK/F,QAAL,CAAc;AACVH,UAAAA,cAAc,EAAEiF,GAAG,CAACG,IAAJ,CAASkB,GAAT,CAAcC,GAAD,IAAS;AAClC,mBAAO;AACH3F,cAAAA,WAAW,EAAE2F,GAAG,CAACH,eADd;AAEH9E,cAAAA,cAAc,EAAEiF,GAAG,CAACC,cAFjB;AAGH9F,cAAAA,EAAE,EAAE6F,GAAG,CAACpD,uBAHL;AAIHsD,cAAAA,aAAa,EAAEF,GAAG,CAACG,aAJhB;AAKHhF,cAAAA,SAAS,EAAExC,MAAM,CAACqH,GAAG,CAACI,wBAAL,CAAN,CAAqCvD,MAArC,CAA4C,YAA5C;AALR,aAAP;AAOH,WARe,CADN;AAUVF,UAAAA,iBAAiB,EAAEA;AAVT,SAAd;AAYH;AACJ,KA/BD,EA+BGyC,KA/BH,CA+BSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAjCD;AAkCH;;AAEDgB,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAK7G,KAAL,CAAW6C,QAAX,IAAuB,EAA3B,EAA+B;AAC3BzD,MAAAA,KAAK,CAAC0H,KAAN,CAAY,0EAAZ;AACH,KAFD,MAGK,IAAI,KAAK9G,KAAL,CAAWa,WAAX,IAA0B,EAA9B,EAAkC;AACnCzB,MAAAA,KAAK,CAAC0H,KAAN,CAAY,4BAAZ;AACH,KAFI,MAGA,IAAI,KAAK9G,KAAL,CAAWuB,cAAX,IAA6B,EAAjC,EAAqC;AACtCnC,MAAAA,KAAK,CAAC0H,KAAN,CAAY,8BAAZ;AACH,KAFI,MAGA,IAAI,KAAK9G,KAAL,CAAWsB,mBAAf,EAAoC;AACrClC,MAAAA,KAAK,CAAC0H,KAAN,CAAY,oCAAZ;AACH,KAFI,MAGA,IAAI,KAAK9G,KAAL,CAAW2B,SAAX,IAAwB,EAA5B,EAAgC;AACjCvC,MAAAA,KAAK,CAAC0H,KAAN,CAAY,6BAAZ;AACH,KAFI,MAGA;AACD,UAAIzB,IAAI,GAAG;AACP,oBAAY,KAAKrF,KAAL,CAAW6C,QADhB;AAEP,yBAAiB,KAAK7C,KAAL,CAAWa,WAFrB;AAGP,2BAAmB,KAAKb,KAAL,CAAWuB,cAHvB;AAIP,kBAAUrC,YAAY,CAAC6H,cAAb,EAJH;AAKP,mCAA2B,KAAK/G,KAAL,CAAWoD,uBAL/B;AAMP,qBAAajE,MAAM,CAAC,KAAKa,KAAL,CAAW2B,SAAZ,CAAN,CAA6B0B,MAA7B,CAAoC,YAApC;AANN,OAAX,CADC,CASD;;AACAyC,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACArG,MAAAA,GAAG,CAACiH,IAAJ,CAAShH,WAAW,CAAC8F,IAAZ,CAAiBiC,uBAA1B,EAAmD3B,IAAnD,EAAyDJ,IAAzD,CAA8DC,GAAG,IAAI;AACjE,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACbW,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDb,GAAnD;AACA9F,UAAAA,KAAK,CAAC+F,OAAN,CAAcD,GAAG,CAACG,IAAJ,CAAS4B,OAAvB;AACA,eAAKtB,iBAAL,CAAuB,KAAK3F,KAAL,CAAW6C,QAAlC;AACA,eAAKzC,QAAL,CAAc;AACVS,YAAAA,WAAW,EAAE,EADH;AAEVU,YAAAA,cAAc,EAAE,EAFN;AAGVI,YAAAA,SAAS,EAAExC,MAAM,GAAGkE,MAAT,CAAgB,YAAhB;AAHD,WAAd,EAJa,CASb;AACA;AACA;AACH;AACJ,OAdD,EAcGuC,KAdH,CAcSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAhBD;AAkBA,WAAKzF,QAAL,CAAc;AACVgD,QAAAA,uBAAuB,EAAE,EADf;AAEVvC,QAAAA,WAAW,EAAE,EAFH;AAGVU,QAAAA,cAAc,EAAE,EAHN;AAIVI,QAAAA,SAAS,EAAExC,MAAM,GAAGkE,MAAT,CAAgB,YAAhB;AAJD,OAAd;AAMH;AAEJ;;AAEDmB,EAAAA,kBAAkB,CAACR,KAAD,EAAQ;AACtB;AACA,QAAIb,iBAAiB,GAAG,KAAKnD,KAAL,CAAWmD,iBAAnC;AACA,QAAIiC,oBAAoB,GAAG,CAAC,GAAG,KAAKpF,KAAL,CAAWoF,oBAAf,CAA3B,CAHsB,CAG2C;;AAEjE,QAAI8B,MAAM,GAAG9B,oBAAoB,CAACgB,SAArB,CAA+BjC,CAAC,IAAIA,CAAC,CAACwC,aAAF,KAAoB3C,KAAK,CAAC0C,aAA9D,CAAb;;AACA,QAAIQ,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACf/D,MAAAA,iBAAiB,CAACmD,MAAlB,CAAyBY,MAAzB,EAAiC,CAAjC,EAAoC9B,oBAAoB,CAAC8B,MAAD,CAAxD;AACH;;AAED,SAAK9G,QAAL,CAAc;AAAE+C,MAAAA,iBAAiB,EAAEA;AAArB,KAAd;AACA,QAAIgD,KAAK,GAAG,KAAKnG,KAAL,CAAWC,cAAX,CAA0BmG,SAA1B,CAAoCjC,CAAC,IAAIA,CAAC,CAACxD,EAAF,KAASqD,KAAK,CAACrD,EAAxD,CAAZ;;AACA,QAAIwF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,UAAId,IAAI,GAAG,KAAKrF,KAAL,CAAWC,cAAX,CAA0BkG,KAA1B,CAAX;AACA,WAAK/F,QAAL,CAAc;AACVS,QAAAA,WAAW,EAAEwE,IAAI,CAACqB,aADR;AAEVnF,QAAAA,cAAc,EAAE8D,IAAI,CAAC9D,cAFX;AAGV6B,QAAAA,uBAAuB,EAAEiC,IAAI,CAAC1E,EAHpB;AAIVgB,QAAAA,SAAS,EAAExC,MAAM,CAACkG,IAAI,CAAC1D,SAAN,CAAN,CAAuB0B,MAAvB,CAA8B,YAA9B;AAJD,OAAd;AAMH;AACJ;;AAED8D,EAAAA,oBAAoB,GAAG;AACnB,QAAI9B,IAAI,GAAG;AACP,iCAA2B,KAAKrF,KAAL,CAAWU,6BAD/B;AAEP,gBAAUxB,YAAY,CAAC6H,cAAb,EAFH;AAGP,kBAAY,KAAK/G,KAAL,CAAW6C;AAHhB,KAAX;AAKAiD,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEArG,IAAAA,GAAG,CAACiH,IAAJ,CAAShH,WAAW,CAAC8F,IAAZ,CAAiBqC,qBAA1B,EAAiD/B,IAAjD,EAAuDJ,IAAvD,CAA4DC,GAAG,IAAI;AAC/D,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACb;AACA;AACA;AACA;AACA;AACA,YAAID,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAegC,QAAf,KAA4B,EAAhC,EAAoC;AAChCvB,UAAAA,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAZ;AACAjG,UAAAA,KAAK,CAAC0H,KAAN,CAAY5B,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAegC,QAA3B;AACH,SAHD,MAGO;AACHjI,UAAAA,KAAK,CAAC+F,OAAN,CAAc,uCAAd;AACH;;AACD,aAAK/E,QAAL,CAAc;AACVS,UAAAA,WAAW,EAAE,EADH;AAEVU,UAAAA,cAAc,EAAE,EAFN;AAGVI,UAAAA,SAAS,EAAExC,MAAM,GAAGkE,MAAT,CAAgB,YAAhB,CAHD;AAIVD,UAAAA,uBAAuB,EAAE;AAJf,SAAd;AAMA,aAAKuC,iBAAL,CAAuB,KAAK3F,KAAL,CAAW6C,QAAlC;AACA,aAAK/B,WAAL;AAGH;AACJ,KAxBD,EAwBG8E,KAxBH,CAwBSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA1BD;AA4BH;;AA8CD;AACA;AACA;AACA;AACA;AACA;AACA;AAEArE,EAAAA,IAAI,CAACO,KAAD,EAAQuF,SAAR,EAAmBC,UAAnB,EAA+BN,OAA/B,EAAwC;AACxC;;AACA,QAAIK,SAAJ,EAAe;AACX,UAAIE,QAAQ,CAACC,cAAT,CAAwB1F,KAAxB,CAAJ,EACIyF,QAAQ,CAACC,cAAT,CAAwB1F,KAAxB,EAA+B2F,SAA/B,GAA2C,yBAA3C;AAEJ,UAAIF,QAAQ,CAACC,cAAT,CAAwBF,UAAxB,CAAJ,EACIC,QAAQ,CAACC,cAAT,CAAwBF,UAAxB,EAAoCI,SAApC,GAAgD,QAAQV,OAAR,GAAkB,OAAlE;AACP,KAND,MAMO;AACH,UAAIO,QAAQ,CAACC,cAAT,CAAwB1F,KAAxB,CAAJ,EACIyF,QAAQ,CAACC,cAAT,CAAwB1F,KAAxB,EAA+B2F,SAA/B,GAA2C,cAA3C;AAEJ,UAAIF,QAAQ,CAACC,cAAT,CAAwBF,UAAxB,CAAJ,EACIC,QAAQ,CAACC,cAAT,CAAwBF,UAAxB,EAAoCI,SAApC,GAAgD,IAAhD;AACP;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI9F,OAAO,GAAG,KAAK9B,KAAL,CAAW4C,IAAX,CAAgB2D,GAAhB,CAAoB,CAAC/C,GAAD,EAAM0C,CAAN,KAAY;AAC1C,0BAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,KAAK,EAAE1C,GAAG,CAACzB,KAA3B;AAAkC,QAAA,MAAM,EAAEyB,GAAG,CAACxB,MAA9C;AAAsD,QAAA,IAAI,EAAEwB,GAAG,CAAClB,IAAhE;AAAsE,QAAA,QAAQ,EAAEkB,GAAG,CAACvB,QAApF;AAA8F,QAAA,MAAM,EAAEuB,GAAG,CAACtB,MAA1G;AAAkH,QAAA,eAAe,EAAEsB,GAAG,CAACrB,eAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFa,CAAd;AAIA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,aAA1B;AAAwC,MAAA,EAAE,EAAC,aAA3C;AAAyD,MAAA,QAAQ,EAAG1C,CAAD,IAAO,KAAKmC,UAAL,CAAgBnC,CAAC,CAACuB,MAAF,CAASE,KAAzB,EAAgC,aAAhC,CAA1E;AAA0H,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWa,WAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,EAAE,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEK,KAAKb,KAAL,CAAWmD,iBAAX,CAA6BoD,GAA7B,CAAiC,CAAC1E,IAAD,EAAOqE,CAAP,KAAa;AAAE,0BAAQ;AAAQ,QAAA,KAAK,EAAErE,IAAI,CAAC8E,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC9E,IAAI,CAACwE,eAAzC,CAAR;AAA6E,KAA7H,CAFL,CADJ,eAKI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCALJ,CAJJ,eAWI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAXJ,eAcI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAoC,MAAA,EAAE,EAAC,WAAvC;AAAmD,MAAA,WAAW,EAAC,YAA/D;AAA4E,MAAA,MAAM,EAAG5G,CAAD,IAAO,KAAKsB,YAAL,CAAkBtB,CAAlB,CAA3F;AACI,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKsB,YAAL,CAAkBtB,CAAlB,CADrB;AAC2C,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAW2B,SAD7D;AACwE,MAAA,GAAG,EAAExC,MAAM,GAAGkE,MAAT,CAAgB,YAAhB,CAD7E;AAC4G,MAAA,GAAG,EAAElE,MAAM,GAAG0I,GAAT,CAAa,GAAb,EAAkB,OAAlB,EAA2BxE,MAA3B,CAAkC,YAAlC,CADjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJJ,CAdJ,eAoBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CApBJ,eAuBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,gBAAxB;AAAyC,MAAA,EAAE,EAAC,gBAA5C;AAA6D,MAAA,QAAQ,EAAG5D,CAAD,IAAO,KAAKsB,YAAL,CAAkBtB,CAAlB,CAA9E;AAAoG,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWuB,cAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAI,MAAA,EAAE,EAAC,qBAAP;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAvBJ,eA6BI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEuG,QAAAA,MAAM,EAAE;AAAV,OAAf;AAA0C,MAAA,IAAI,EAAC,QAA/C;AAAwD,MAAA,IAAI,EAAE,KAAK9H,KAAL,CAAWoD,uBAAX,IAAsC,EAAtC,GAA2C,YAA3C,GAA0D,YAAxH;AAAsI,MAAA,OAAO,EAAE,KAAKpD,KAAL,CAAWoD,uBAAX,IAAsC,EAAtC,GAA2C,qBAA3C,GAAmE,wBAAlN;AAA4O,MAAA,cAAc,EAAE;AAAEsB,QAAAA,QAAQ,EAAE;AAAZ,OAA5P;AAAoR,MAAA,OAAO,EAAE,MAAM,KAAKmC,iBAAL,EAAnS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,CADJ,CADJ,eAkCI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAK7G,KAAL,CAAW4C,IAA/B;AAAqC,MAAA,OAAO,EAAE,KAAKW,UAAnD;AACI,MAAA,gBAAgB,EAAE,IADtB;AAC4B,MAAA,WAAW,EAAErE,YAAY,CAAC6D,eAAb,CAA6BgF,gBADtE;AACwF,MAAA,OAAO,EAAC,oBADhG;AAEI,MAAA,QAAQ,EAAE,KAAKpE,cAFnB;AAEmC,MAAA,KAAK,EAAE;AAAEqE,QAAAA,KAAK,EAAE;AAAT,OAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,qBAA3B;AAAiD,MAAA,OAAO,EAAC,eAAzD;AAAyE,MAAA,cAAc,EAAE;AAAEtD,QAAAA,QAAQ,EAAE;AAAZ,OAAzF;AAAiH,MAAA,OAAO,EAAE,KAAKd,MAA/H;AAAuI,MAAA,KAAK,EAAE;AAAEa,QAAAA,WAAW,EAAE;AAAf,OAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAlCJ,CADJ,eA4CI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAGwD,EAAD,IAAQ,KAAK5D,EAAL,GAAU4D,EAAlC;AAAsC,MAAA,KAAK,EAAE,KAAKjI,KAAL,CAAWC,cAAxD;AAAwE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWK,YAA1F;AAAwG,MAAA,MAAM,EAAGZ,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB,CAAvH;AACI,MAAA,SAAS,EAAE,IADf;AACqB,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWM,WADtC;AACmD,MAAA,YAAY,EAAE,KAAKN,KAAL,CAAWC,cAAX,CAA0BC,MAD3F;AACmG,MAAA,cAAc,EAAC,uBADlH;AAEI,MAAA,yBAAyB,EAAE,KAAKF,KAAL,CAAWG,GAF1C;AAE+C,MAAA,UAAU,EAAE,IAF3D;AAEiE,MAAA,YAAY,EAAC,OAF9E;AAGI,MAAA,iBAAiB,EAAE,KAAKH,KAAL,CAAWsD,iBAHlC;AAII,MAAA,kBAAkB,EAAE,KAAKtD,KAAL,CAAW8C,kBAJnC;AAIuD,MAAA,YAAY,EAAE,KAAK9C,KAAL,CAAWgD,YAJhF;AAI8F,MAAA,YAAY,EAAC,kBAJ3G;AAKI,MAAA,UAAU,EAAE,IALhB;AAKsB,MAAA,gBAAgB,EAAE,IALxC;AAK8C,MAAA,gBAAgB,EAAC,KAL/D,CAKqE;AALrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKlB,OAPL,CADJ,CA5CJ,eAwDI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK9B,KAAL,CAAWS,WAA1B;AAAuC,MAAA,MAAM,EAAE,KAAKK,WAApD;AACI,MAAA,SAAS,EAAE,cAAc,KAAKvB,KAAL,CAAWmI,SADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAK5G,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACsC,KAAKd,KAAL,CAAWY,iBADjD,uBAHJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKuG,oBAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiE;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE,YADJ,EAC8G,GAD9G,eAEI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,KAAKrG,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgD;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhD,WAFJ,CANJ,CAxDJ,CADJ;AAsEH;;AA9akC;;AAibvC,eAAenC,eAAe,GAAGU,cAAH,CAA9B","sourcesContent":["import React, { Component } from 'react';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport api from '../../../../utils/apiClient';\r\nimport APIConstant, { CommonConfig } from '../../../../utils/constants';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass AuthorizeClass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"vesselclass\", header: \"Vessel\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"minimumpremium\", header: \"Minimum Premium\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: this.formatDate.bind(this), header: \"Effective Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 8 }\r\n        ];\r\n\r\n        const orginial = this.setState;\r\n        // this.state = JSON.parse(localStorage.getItem('authorizegroupstate'))\r\n        //     ? JSON.parse(localStorage.getItem('authorizegroupstate'))\r\n        //     : \r\n        this.state = {\r\n            toggleModal: false,\r\n            selectedLanguage: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            authorizeArray: [],\r\n            BinderId: \"\",\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            vesselclass: \"\",\r\n            addUpdateData: {},\r\n            vesselclassError: false,\r\n            vesselclassmaster: [],\r\n            minimumpremium: \"\",\r\n            minimumpremiumError: false,\r\n            BinderAuthorisedClassId: \"\",\r\n            startdate: moment().format(\"YYYY-MM-DD\"),\r\n            paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n\r\n    }\r\n\r\n    formatDate(rowData) {\r\n        return (\r\n            <p>{moment(rowData.startdate).format('DD/MM/YYYY')}</p>\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.removeItem('authorizegroupstate')\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.authorizeArray.length) ? l : this.state.authorizeArray.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.authorizeArray.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\" onClick={() => this.editAuthorizeClass(rowData)}\r\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\r\n            </Button>\r\n            {/* <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" onClick={() => this.deleteAuthorizeClass(rowData)} tooltipOptions={{ position: 'bottom' }}></Button> */}\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" onClick={() => this.openDeleteModal(rowData)} tooltipOptions={{ position: 'bottom' }}></Button>\r\n        </div>;\r\n    }\r\n\r\n    openDeleteModal = (rowData) => {\r\n        this.setState({\r\n            toggleModal: !this.state.toggleModal,\r\n            deleteBinderAuthorisedClassId: rowData.id,\r\n            deletevesselclass: rowData.vesselclass,\r\n        });\r\n    }\r\n\r\n    toggleLarge = () => {\r\n        this.setState({\r\n            toggleModal: false,\r\n            deleteBinderAuthorisedClassId: '',\r\n            deletevesselclass: ''\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getVesselClassList();\r\n    }\r\n\r\n    getVesselClassList() {\r\n        api.get(APIConstant.path.getVesselClass).then(res => {\r\n            if (res.success) {\r\n                this.setState({ allvesselclassmaster: res.data });\r\n                var splitData = this.props.location.pathname.split(\"/\");\r\n                // if (splitData[3] !== undefined) {\r\n                if (!CommonConfig.isEmpty(splitData[3])) {\r\n                this.setState({ BinderId: splitData[3] })\r\n                    this.getAuthorizeClass(splitData[3])\r\n                } \r\n                // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n                //     this.setState({ BinderId: this.props.match.params.Id })\r\n                //     this.getAuthorizeClass(this.props.match.params.Id)\r\n                // }\r\n            } else {\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    getAuthorizeClass(BinderID) {\r\n        let data = {\r\n            \"BinderId\": BinderID\r\n        }\r\n        api.post(APIConstant.path.getAuthorizeClass, data).then(res => {\r\n            console.log(res)\r\n            if (res.success) {\r\n                console.log(\"===========Authirised Class Data\")\r\n                console.log(res.data)\r\n\r\n                // let vesselclassmaster = []\r\n\r\n                var vesselclassmaster = [...this.state.allvesselclassmaster]; // make a separate copy of the array\r\n\r\n                for (let i = 0; i < res.data.length; i++) {\r\n                    let index = vesselclassmaster.findIndex(x => x.VesselClassName === res.data[i].VesselClassName);\r\n                    if (index !== -1) {\r\n                        vesselclassmaster.splice(index, 1);\r\n                    }\r\n                }\r\n\r\n\r\n                this.setState({\r\n                    authorizeArray: res.data.map((obj) => {\r\n                        return {\r\n                            vesselclass: obj.VesselClassName,\r\n                            minimumpremium: obj.MinimumPremium,\r\n                            id: obj.BinderAuthorisedClassId,\r\n                            vesselclassid: obj.VesselClassId,\r\n                            startdate: moment(obj.AuthorizedClassStartDate).format('YYYY-MM-DD')\r\n                        }\r\n                    }),\r\n                    vesselclassmaster: vesselclassmaster\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    addAuthorizeClass() {\r\n        if (this.state.BinderId == \"\") {\r\n            toast.error('To add Authorized Class Please Create New binder or edit existing Binder');\r\n        }\r\n        else if (this.state.vesselclass == '') {\r\n            toast.error('Please Select Vessel Class');\r\n        }\r\n        else if (this.state.minimumpremium == '') {\r\n            toast.error('Please Enter Minimum Premiun');\r\n        }\r\n        else if (this.state.minimumpremiumError) {\r\n            toast.error('Please Enter Valid Minimum Premiun');\r\n        }\r\n        else if (this.state.startdate == '') {\r\n            toast.error('Please Enter Effective Date');\r\n        }\r\n        else {\r\n            let data = {\r\n                \"BinderId\": this.state.BinderId,\r\n                \"VesselClassId\": this.state.vesselclass,\r\n                \"MinimumPremiunm\": this.state.minimumpremium,\r\n                \"UserId\": CommonConfig.loggedInUserId(),\r\n                \"BinderAuthorisedClassId\": this.state.BinderAuthorisedClassId,\r\n                \"StartDate\": moment(this.state.startdate).format('YYYY-MM-DD')\r\n            }\r\n            // debugger\r\n            console.log(data)\r\n            api.post(APIConstant.path.addUpdateAuthorizeClass, data).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"===========Authirised Class Created\", res)\r\n                    toast.success(res.data.message);\r\n                    this.getAuthorizeClass(this.state.BinderId);\r\n                    this.setState({\r\n                        vesselclass: \"\",\r\n                        minimumpremium: \"\",\r\n                        startdate: moment().format('YYYY-MM-DD')\r\n                    })\r\n                    // setTimeout(function () {\r\n                    //     window.location.reload();\r\n                    // }, 2000);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n            this.setState({\r\n                BinderAuthorisedClassId: \"\",\r\n                vesselclass: \"\",\r\n                minimumpremium: \"\",\r\n                startdate: moment().format(\"YYYY-MM-DD\")\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    editAuthorizeClass(event) {\r\n        debugger;\r\n        var vesselclassmaster = this.state.vesselclassmaster;\r\n        var allvesselclassmaster = [...this.state.allvesselclassmaster]; // make a separate copy of the array\r\n\r\n        let index1 = allvesselclassmaster.findIndex(x => x.VesselClassId === event.vesselclassid);\r\n        if (index1 !== -1) {\r\n            vesselclassmaster.splice(index1, 0, allvesselclassmaster[index1]);\r\n        }\r\n\r\n        this.setState({ vesselclassmaster: vesselclassmaster })\r\n        let index = this.state.authorizeArray.findIndex(x => x.id === event.id);\r\n        if (index !== -1) {\r\n            let data = this.state.authorizeArray[index]\r\n            this.setState({\r\n                vesselclass: data.vesselclassid,\r\n                minimumpremium: data.minimumpremium,\r\n                BinderAuthorisedClassId: data.id,\r\n                startdate: moment(data.startdate).format('YYYY-MM-DD')\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteAuthorizeClass() {\r\n        let data = {\r\n            \"BinderAuthorisedClassId\": this.state.deleteBinderAuthorisedClassId,\r\n            \"UserId\": CommonConfig.loggedInUserId(),\r\n            \"BinderId\": this.state.BinderId\r\n        }\r\n        console.log(data)\r\n\r\n        api.post(APIConstant.path.deleteAuthorizedClass, data).then(res => {\r\n            if (res.success) {\r\n                // let index = this.state.authorizeArray.findIndex(x => x.vesselclass === this.state.vesselclass);\r\n                // if (index !== -1) {\r\n                //     this.state.authorizeArray.splice(index, 1);\r\n                //     this.setState({ authorizeArray: this.state.authorizeArray });\r\n                // }\r\n                if (res.data[0][0].ErrorMsg !== \"\") {\r\n                    console.log(res.data[0][0])\r\n                    toast.error(res.data[0][0].ErrorMsg);\r\n                } else {\r\n                    toast.success(\"Authorised class successfully deleted\");\r\n                }\r\n                this.setState({\r\n                    vesselclass: \"\",\r\n                    minimumpremium: \"\",\r\n                    startdate: moment().format('YYYY-MM-DD'),\r\n                    BinderAuthorisedClassId: \"\"\r\n                })\r\n                this.getAuthorizeClass(this.state.BinderId);\r\n                this.toggleLarge();\r\n\r\n\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        let decimalRegExp = CommonConfig.RegExp.decimalWithOne;\r\n\r\n        if (e.target.name === 'minimumpremium') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ minimumpremiumError: false, minimumpremium: 0 });\r\n                this.show(\"minimumpremium\", false, \"minimumpremiumError\", \"\");\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ minimumpremiumError: true });\r\n                    this.show(\"minimumpremium\", true, \"minimumpremiumError\", \"Please Enter Valid Minimum Premium\");\r\n                } else {\r\n                    this.setState({ minimumpremiumError: false, minimumpremium: e.target.value });\r\n                    this.show(\"minimumpremium\", false, \"minimumpremiumError\", \"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'startdate') {\r\n            if (e.target.value != \"\") {\r\n\r\n                this.setState({ startdateError: false });\r\n                this.show(\"startdate\", false);\r\n                this.setState({\r\n                    startdate: e.target.value\r\n                });\r\n            } else {\r\n                this.setState({ startdateError: true });\r\n                this.show(\"startdate\", true);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    selectType = (value, type) => {\r\n        if (type == \"vesselclass\") {\r\n            this.setState({ vesselclass: value })\r\n        }\r\n    }\r\n\r\n    // show(field, condition) {\r\n    //     if (condition) {\r\n    //         document.getElementById(field).className = \"form-control is-invalid\";\r\n    //     } else {\r\n    //         document.getElementById(field).className = \"form-control\";\r\n    //     }\r\n    // }\r\n\r\n    show(field, condition, errorField, message) {\r\n        debugger;\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <div className=\"input-box\">\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <label>Vessel Class</label>\r\n                            </Col>\r\n                            <Col md=\"3\">\r\n                                <Input type=\"select\" name=\"vesselclass\" id=\"vesselclass\" onChange={(e) => this.selectType(e.target.value, 'vesselclass')} value={this.state.vesselclass}>\r\n                                    <option value='' disabled={\"disabled\"}>Select VesselClass</option>\r\n                                    {this.state.vesselclassmaster.map((type, i) => { return (<option value={type.VesselClassId}>{type.VesselClassName}</option>) })}\r\n                                </Input>\r\n                                <em className=\"error invalid-feedback\" >Please select VesselClass</em>\r\n                            </Col>\r\n                            <Col md=\"1\">\r\n                                <label>Effective Date</label>\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <Input type=\"date\" name=\"startdate\" id=\"startdate\" placeholder=\"Start Date\" onBlur={(e) => this.handleChange(e)}\r\n                                    onChange={(e) => this.handleChange(e)} value={this.state.startdate} min={moment().format('YYYY-MM-DD')} max={moment().add(100, 'years').format('YYYY-MM-DD')}\r\n                                />\r\n                                <em className=\"error invalid-feedback\" >Please select StartDate</em>\r\n                            </Col>\r\n                            <Col md=\"1\">\r\n                                <label>Minimum Premium</label>\r\n                            </Col>\r\n                            <Col md=\"3\">\r\n                                <Input type=\"text\" name=\"minimumpremium\" id=\"minimumpremium\" onChange={(e) => this.handleChange(e)} value={this.state.minimumpremium}>\r\n                                </Input>\r\n                                {/* <em className=\"error invalid-feedback\" >Please enter Minimum Premium</em> */}\r\n                                <em id=\"minimumpremiumError\" className=\"error invalid-feedback\"></em>\r\n                            </Col>\r\n                            <Button style={{ height: \"fit-content\" }} type=\"button\" icon={this.state.BinderAuthorisedClassId == \"\" ? \"pi pi-plus\" : \"pi pi-save\"} tooltip={this.state.BinderAuthorisedClassId == \"\" ? \"Add Authorize Class\" : \"Update Authorize Class\"} tooltipOptions={{ position: 'bottom' }} onClick={() => this.addAuthorizeClass()}></Button>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.authorizeArray} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.authorizeArray.length} exportFilename=\"Authorized Class List\"\r\n                        currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\r\n                        paginatorTemplate={this.state.paginatorTemplate}\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \r\n                    >\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLarge}>Delete Authorized class</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure, You want to delete {this.state.deletevesselclass} Authorized Class?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.deleteAuthorizeClass()}><i class=\"fa fa-check\"></i> Delete</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-close\"></i>Cancel</BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(AuthorizeClass);"]},"metadata":{},"sourceType":"module"}