{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/AgedDebtorsList.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass AgedDebtorsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'tillDate') {\n        debugger;\n        this.setState({\n          tillDate: e.target.value,\n          tillDateError: false\n        });\n        this.show('tillDate', false, 'tillDateError', '');\n      }\n    };\n\n    let columns = [{\n      field: \"ClientName\",\n      header: \"Client Name\",\n      sortable: true,\n      filter: true,\n      id: 0\n    }, {\n      field: \"ClientCode\",\n      header: \"Client Code\",\n      sortable: true,\n      filter: true,\n      id: 1\n    }, {\n      field: \"Department\",\n      header: \"Type\",\n      sortable: true,\n      filter: true,\n      id: 2\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 3\n    }, {\n      field: \"AgentName\",\n      header: \"Agent Name\",\n      sortable: true,\n      filter: true,\n      id: 4\n    }, {\n      field: \"AgentCode\",\n      header: \"Agent Code\",\n      sortable: true,\n      filter: true,\n      id: 5\n    }, {\n      field: \"InsuranceCompany\",\n      header: \"Insurance Company\",\n      sortable: true,\n      filter: true,\n      id: 6\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 7\n    }, {\n      field: \"InceptionDate\",\n      header: \"Inception Date\",\n      sortable: true,\n      filter: true,\n      id: 8\n    }, {\n      field: \"TransactionDescription\",\n      header: \"Transaction Type\",\n      sortable: true,\n      filter: true,\n      id: 9\n    }, {\n      field: \"ChargeAmount\",\n      header: \"Charge Amt\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"PaidAmount\",\n      header: \"Paid Amt\",\n      sortable: true,\n      filter: true,\n      id: 11,\n      style: {\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Outstanding\",\n      header: \"Outstanding Amt\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"DueDate\",\n      header: \"Outstanding Since\",\n      sortable: true,\n      filter: true,\n      id: 13\n    }, {\n      field: \"DayAfterDueDate\",\n      header: \"No of Days\",\n      sortable: true,\n      filter: true,\n      id: 14\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      DebtorType: 'Client',\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      tillDate: moment().format(\"YYYY-MM\"),\n      tillDateError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {// this.AgedDebtorsList();\n    // this.getOrganazationData(this.state.DebtorType);\n  } // ClientDetails(rowData) {\n  //     return (\n  //       <div className=\"policy-list-data\">\n  //         <p>{rowData.ClientName}</p>\n  //         <p>{rowData.ClientCode}</p>\n  //       </div>\n  //     )\n  //   }\n  //   AgentDetails(rowData) {\n  //     return (\n  //       <div className=\"policy-list-data\">\n  //         <p>{rowData.AgentName}</p>\n  //         <p>{rowData.AgentCode}</p>\n  //       </div>\n  //     )\n  //   }\n\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  } // DateDetails(rowData) {\n  //     return (\n  //       <div className=\"policy-list-data\">\n  //         <p>{rowData.RenewalDate}</p>\n  //         <p>{rowData.InceptionDate}</p>\n  //       </div>\n  //     )\n  //   }\n\n\n  AgedDebtorsList() {\n    var data = {\n      DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\n      agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\n      tillDate: this.state.tillDate ? this.state.tillDate : ''\n    };\n    api.post('api/AgedDebtorsList', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          var ChargeAmount = 0;\n          var PaidAmount = 0;\n          var Outstanding = 0;\n\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            ChargeAmount = tempData.ChargedAmount + ChargeAmount;\n            PaidAmount = tempData.PaidAmount + PaidAmount;\n            Outstanding = tempData.OutstandingAmount + Outstanding;\n            formattedData.push({\n              AgentName: tempData.AgentName,\n              AgentCode: tempData.AgentCode,\n              Department: tempData.Type,\n              TransactionDescription: tempData.TransactionType,\n              PolicyNumber: tempData.PolicyNumber,\n              ClientName: tempData.ClientName,\n              ClientCode: tempData.ContactCode,\n              InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\n              RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\n              InsuranceCompany: tempData.InsuranceCompany,\n              ChargeAmount: parseFloat(tempData.ChargedAmount ? tempData.ChargedAmount : 0).toFixed(2),\n              PaidAmount: parseFloat(tempData.PaidAmount ? tempData.PaidAmount : 0).toFixed(2),\n              Outstanding: parseFloat(tempData.Outstanding ? tempData.Outstanding : 0).toFixed(2),\n              RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\n              TransactionType: tempData.TransactionType,\n              DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\n              DayAfterDueDate: tempData.DueDays\n            });\n          }\n\n          formattedData.push({\n            ClientName: 'Total',\n            ChargeAmount: parseFloat(ChargeAmount).toFixed(2),\n            PaidAmount: parseFloat(PaidAmount).toFixed(2),\n            Outstanding: parseFloat(Outstanding).toFixed(2)\n          });\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.AgedDebtorsList();\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        agentinfoError: false\n      });\n      this.show('agentinfo', false, 'agentinfoError', '');\n    }\n  } // getOrganazationData(ContactType) {\n  //     try {\n  //         let data = { ContactType: ContactType };\n  //         api.post('api/getOrganazationData', data).then(res => {\n  //             if (res.success) {\n  //                 var formattedData = [];\n  //                 for (let i = 0; i < res.data.length; i++) {\n  //                     formattedData.push({\n  //                         label: res.data[i].OrganizationName,\n  //                         value: res.data[i].OrganizationId,\n  //                     })\n  //                 }\n  //                 this.setState({ sourceList: formattedData });\n  //             } else {\n  //                 console.log('getOrganazationData_error');\n  //             }\n  //         }).catch(err => {\n  //             console.log('getOrganazationData', err);\n  //         });\n  //     } catch (error) {\n  //         console.log('getOrganazationData', error);\n  //     }\n  // }\n\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, \"Aged Debtors List\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      style: {\n        width: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, \"DebtorType\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"DebtorType\",\n      id: \"DebtorType\",\n      onChange: e => this.selectType(e.target.value, 'DebtorType'),\n      value: this.state.DebtorType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Client\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }, \"Client\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SubAgent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, \"Sub Agent\"), \"}\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, \" Search \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Aged Debtors List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(AgedDebtorsList);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/AgedDebtorsList.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","AgedDebtorsList","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","tillDate","tillDateError","show","columns","field","header","sortable","filter","id","style","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","DebtorType","DebtorTypeError","agentinfo","agentinfoError","format","colOptions","col","push","label","export","bind","componentDidMount","getDropDownValues","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","formattedData","dataLength","ChargeAmount","PaidAmount","Outstanding","i","tempData","console","log","ChargedAmount","OutstandingAmount","AgentName","AgentCode","Department","Type","TransactionDescription","TransactionType","PolicyNumber","ClientName","ClientCode","ContactCode","InceptionDate","RenewalDate","InsuranceCompany","parseFloat","toFixed","RenewalOrInceptionDate","DueDate","DayAfterDueDate","DueDays","dt","exportCSV","filterData","selectType","type","condition","errorField","message","document","getElementById","className","innerHTML","render","t","map","body","filterMatchMode","width","columnToggleIcon","position","onColumnToggle","marginRight","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n\r\nclass AgedDebtorsList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"ClientName\", header: \"Client Name\", sortable: true, filter: true, id: 0 },\r\n            { field: \"ClientCode\", header: \"Client Code\", sortable: true, filter: true, id: 1 },\r\n            { field: \"Department\", header: \"Type\", sortable: true, filter: true, id: 2 },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 3 },\r\n            { field: \"AgentName\", header: \"Agent Name\", sortable: true, filter: true, id: 4 },\r\n            { field: \"AgentCode\", header: \"Agent Code\", sortable: true, filter: true, id: 5 },\r\n            { field: \"InsuranceCompany\", header: \"Insurance Company\", sortable: true, filter: true, id: 6 },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 7 },\r\n            { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 8 },\r\n            { field: \"TransactionDescription\", header: \"Transaction Type\", sortable: true, filter: true, id: 9 },\r\n            { field: \"ChargeAmount\", header: \"Charge Amt\", sortable: true, filter: true, id: 10 ,style:{'textAlign':'right'}},\r\n            { field: \"PaidAmount\", header: \"Paid Amt\", sortable: true, filter: true, id: 11 ,style:{'textAlign':'right'}},\r\n            { field: \"Outstanding\", header: \"Outstanding Amt\", sortable: true, filter: true, id: 12 ,style:{'textAlign':'right'}},\r\n            { field: \"DueDate\", header: \"Outstanding Since\", sortable: true, filter: true, id: 13 },\r\n            { field: \"DayAfterDueDate\", header: \"No of Days\", sortable: true, filter: true, id: 14 }\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n\r\n            DebtorType: 'Client',\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            tillDate: moment().format(\"YYYY-MM\"),\r\n            tillDateError: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.AgedDebtorsList();\r\n        // this.getOrganazationData(this.state.DebtorType);\r\n    }\r\n\r\n    // ClientDetails(rowData) {\r\n    //     return (\r\n    //       <div className=\"policy-list-data\">\r\n    //         <p>{rowData.ClientName}</p>\r\n    //         <p>{rowData.ClientCode}</p>\r\n    //       </div>\r\n    //     )\r\n    //   }\r\n\r\n    //   AgentDetails(rowData) {\r\n    //     return (\r\n    //       <div className=\"policy-list-data\">\r\n    //         <p>{rowData.AgentName}</p>\r\n    //         <p>{rowData.AgentCode}</p>\r\n    //       </div>\r\n    //     )\r\n    //   }\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    // DateDetails(rowData) {\r\n    //     return (\r\n    //       <div className=\"policy-list-data\">\r\n    //         <p>{rowData.RenewalDate}</p>\r\n    //         <p>{rowData.InceptionDate}</p>\r\n    //       </div>\r\n    //     )\r\n    //   }\r\n\r\n    AgedDebtorsList() {\r\n        var data = {\r\n            DebtorType: this.state.DebtorType?this.state.DebtorType:'',\r\n            agentinfo: this.state.agentinfo?this.state.agentinfo:'',\r\n            tillDate: this.state.tillDate?this.state.tillDate:''\r\n        };\r\n        api.post('api/AgedDebtorsList', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage:0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n                    var ChargeAmount = 0;\r\n                    var PaidAmount = 0;\r\n                    var Outstanding = 0;\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        ChargeAmount=tempData.ChargedAmount+ChargeAmount;\r\n                        PaidAmount=tempData.PaidAmount+PaidAmount;\r\n                        Outstanding=tempData.OutstandingAmount+Outstanding;\r\n                        formattedData.push({\r\n                            AgentName: tempData.AgentName,\r\n                            AgentCode: tempData.AgentCode,\r\n                            Department: tempData.Type,\r\n                            TransactionDescription: tempData.TransactionType,\r\n                            PolicyNumber: tempData.PolicyNumber,\r\n                            ClientName: tempData.ClientName,\r\n                            ClientCode: tempData.ContactCode,\r\n                            InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\r\n                            RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\r\n                            InsuranceCompany: tempData.InsuranceCompany,\r\n                            ChargeAmount:  parseFloat(tempData.ChargedAmount?tempData.ChargedAmount:0).toFixed(2),\r\n                            PaidAmount:  parseFloat(tempData.PaidAmount?tempData.PaidAmount:0).toFixed(2),\r\n                            Outstanding:  parseFloat(tempData.Outstanding?tempData.Outstanding:0).toFixed(2),\r\n                            RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\r\n                            TransactionType: tempData.TransactionType,\r\n                            DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\r\n                            DayAfterDueDate: tempData. DueDays\r\n                        });\r\n                    }\r\n                    formattedData.push({\r\n                        ClientName: 'Total',\r\n                        ChargeAmount: parseFloat(ChargeAmount).toFixed(2),\r\n                        PaidAmount:parseFloat(PaidAmount).toFixed(2),\r\n                        Outstanding:parseFloat(Outstanding).toFixed(2) \r\n                    });\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n     \r\n            this.AgedDebtorsList();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'tillDate') {\r\n            debugger;\r\n\r\n                this.setState({ tillDate: e.target.value, tillDateError: false });\r\n                this.show('tillDate', false, 'tillDateError', '');\r\n\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n                this.setState({ DebtorTypeError: false, DebtorType: value });\r\n\r\n        }\r\n\r\n        if (type === 'agentinfo') {\r\n\r\n                this.setState({ agentinfo: value, agentinfoError: false });\r\n                this.show('agentinfo', false, 'agentinfoError', '');\r\n       \r\n        }\r\n    }\r\n\r\n    // getOrganazationData(ContactType) {\r\n    //     try {\r\n    //         let data = { ContactType: ContactType };\r\n    //         api.post('api/getOrganazationData', data).then(res => {\r\n    //             if (res.success) {\r\n    //                 var formattedData = [];\r\n    //                 for (let i = 0; i < res.data.length; i++) {\r\n    //                     formattedData.push({\r\n    //                         label: res.data[i].OrganizationName,\r\n    //                         value: res.data[i].OrganizationId,\r\n    //                     })\r\n    //                 }\r\n    //                 this.setState({ sourceList: formattedData });\r\n    //             } else {\r\n    //                 console.log('getOrganazationData_error');\r\n    //             }\r\n    //         }).catch(err => {\r\n    //             console.log('getOrganazationData', err);\r\n    //         });\r\n    //     } catch (error) {\r\n    //         console.log('getOrganazationData', error);\r\n    //     }\r\n    // }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Aged Debtors List</h1>\r\n                    <div className=\"input-box\"style={{width:'20%'}}>\r\n                    <label>DebtorType</label>\r\n                    <Input type=\"select\" name=\"DebtorType\" id=\"DebtorType\" onChange={(e) => this.selectType(e.target.value, 'DebtorType')} value={this.state.DebtorType}>\r\n                        <option value=\"Client\">Client</option>\r\n                        <option value=\"SubAgent\">Sub Agent</option>\r\n                        }\r\n                    </Input>\r\n                    </div>\r\n                    <div>&nbsp;</div>\r\n                    <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Search Aged Debtors List\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md='3'>\r\n                                           \r\n                                        </Col>\r\n                                        <Col md='2'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>Till Date</label>\r\n                                                <Input disabled type=\"month\" id=\"tillDate\" name=\"tillDate\"\r\n                                                    value={this.state.tillDate}\r\n                                                    onChange={(e) => this.handleChange(e, 'tillDate')}\r\n                                                ></Input>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md='3'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>Agent Name/Code</label>\r\n                                                <Select name=\"agentinfo\" id=\"agentinfo\" options={this.state.sourceList}\r\n                                                    value={this.state.agentinfo} onChange={(data) => this.selectType(data, 'agentinfo')}\r\n                                                />\r\n                                                <em id=\"agentinfoError\" className=\"error invalid-feedback\"></em>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md='2'>\r\n                                           \r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div> */}\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Aged Debtors List\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation()(AgedDebtorsList);\r\n"]},"metadata":{},"sourceType":"module"}