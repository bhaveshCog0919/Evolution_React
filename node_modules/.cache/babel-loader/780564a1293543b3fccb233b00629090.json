{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/AgentCommissionReport.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass AgentCommissionReport extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'monthtillDate') {\n        this.setState({\n          monthtillDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'fromDate') {\n        this.setState({\n          fromDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'toDate') {\n        this.setState({\n          toDate: e.target.value\n        });\n      }\n    };\n\n    let columns = [// { field: \"ClientCode\", header: \"Client Code\", sortable: true, filter: true, id: 1 },\n    // { field: \"Department\", header: \"Type\", sortable: true, filter: true, id: 2 },\n    {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 0\n    }, {\n      field: \"ClientName\",\n      header: \"Client Name\",\n      sortable: true,\n      filter: true,\n      id: 1\n    }, // { field: \"AgentName\", header: \"Agent Name\", sortable: true, filter: true, id: 4 },\n    // { field: \"AgentCode\", header: \"Agent Code\", sortable: true, filter: true, id: 5 },\n    // { field: \"InsuranceCompany\", header: \"Insurance Company\", sortable: true, filter: true, id: 6 },\n    {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 2\n    }, {\n      field: \"InceptionDate\",\n      header: \"Inception Date\",\n      sortable: true,\n      filter: true,\n      id: 3\n    }, {\n      field: \"TransactionType\",\n      header: \"Transaction Type\",\n      sortable: true,\n      filter: true,\n      id: 4\n    }, {\n      field: \"TransactionDate\",\n      header: \"Transaction Date\",\n      sortable: true,\n      filter: true,\n      id: 5\n    }, {\n      field: \"Premium\",\n      header: \"Premium\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AgentCommission\",\n      header: \"Agent Commission\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'textAlign': 'right'\n      }\n    } // { field: \"ChargeAmount\", header: \"Charge Amt\", sortable: true, filter: true, id: 10 },\n    // { field: \"PaidAmount\", header: \"Paid Amt\", sortable: true, filter: true, id: 11 },\n    // { field: \"Outstanding\", header: \"Outstanding Amt\", sortable: true, filter: true, id: 12 },\n    // { field: \"DueDate\", header: \"Outstanding Since\", sortable: true, filter: true, id: 13 },\n    // { field: \"DayAfterDueDate\", header: \"No of Days\", sortable: true, filter: true, id: 14 }\n    ];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      DebtorType: 'SubAgent',\n      Period: 0,\n      // DebtorTypeList:[\n      //     {label:'',value:''}\n      // ],\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      monthtillDate: moment().format(\"YYYY-MM\"),\n      fromDate: '',\n      toDate: ''\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.AgentCommissionReport();\n    this.getOrganazationData(this.state.DebtorType);\n  }\n\n  ClientDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, rowData.ClientName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, rowData.ClientCode));\n  }\n\n  AgentDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, rowData.AgentName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, rowData.AgentCode));\n  }\n\n  DateDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, rowData.RenewalDate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, rowData.InceptionDate));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  AgentCommissionReport() {\n    var data = {\n      DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\n      agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\n      Period: this.state.Period ? this.state.Period : 0,\n      monthtillDate: this.state.monthtillDate ? this.state.monthtillDate : '',\n      fromDate: this.state.fromDate ? this.state.fromDate : '',\n      toDate: this.state.toDate ? this.state.toDate : ''\n    };\n    api.post('api/AgentCommissionReport', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          var v_Premium = 0;\n          var v_AgentCommission = 0;\n\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              // AgentName: tempData.SourceName,\n              // AgentCode: tempData.SubAgentId,\n              // Department: tempData.Department,\n              // ClientCode: tempData.ClientContactCode,\n              TransactionType: tempData.Description,\n              PolicyNumber: tempData.PolicyNumber,\n              ClientName: tempData.ClientName,\n              InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\n              RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\n              TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\n              Premium: parseFloat(tempData.Premium ? tempData.Premium : 0).toFixed(2),\n              AgentCommission: parseFloat(tempData.AgentCommission ? tempData.AgentCommission : 0).toFixed(2) // InsuranceCompany: tempData.InsuranceCompany,\n              // ChargeAmount: tempData.ChargeAmount,\n              // PaidAmount: tempData.PaidAmount,\n              // Outstanding: tempData.Outstanding,\n              // RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\n              // TransactionType: tempData.TransactionType,\n              // DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\n              // DayAfterDueDate: tempData.DayAfterDueDate\n\n            });\n            v_Premium = tempData.Premium + v_Premium;\n            v_AgentCommission = tempData.AgentCommission + v_AgentCommission;\n          }\n\n          formattedData.push({\n            PolicyNumber: 'Total',\n            Premium: parseFloat(v_Premium).toFixed(2),\n            AgentCommission: parseFloat(v_AgentCommission).toFixed(2)\n          });\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.AgentCommissionReport();\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        agentinfoError: false\n      });\n      this.show('agentinfo', false, 'agentinfoError', '');\n    }\n\n    if (type === 'Period') {\n      this.setState({\n        Period: value\n      });\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, \"Agent Commission Report\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 33\n      }\n    }, \"Search Sub Agent/Service Center\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 49\n      }\n    }, \"Period\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Period\",\n      id: \"Period\",\n      onChange: e => this.selectType(e.target.value, 'Period'),\n      value: this.state.Period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 53\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 53\n      }\n    }, \"Custom\"), \"}\"))), this.state.Period == 0 ? /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 57\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"month\",\n      id: \"monthtillDate\",\n      name: \"monthtillDate\",\n      value: this.state.monthtillDate,\n      onChange: e => this.handleChange(e, 'monthtillDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 57\n      }\n    }))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 65\n      }\n    }, \"From Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"fromDate\",\n      name: \"fromDate\",\n      value: this.state.fromDate,\n      onChange: e => this.handleChange(e, 'fromDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 65\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 65\n      }\n    }, \"To Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"toDate\",\n      name: \"toDate\",\n      value: this.state.toDate,\n      onChange: e => this.handleChange(e, 'toDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 65\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 49\n      }\n    }, \"Debtor Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"DebtorType\",\n      id: \"DebtorType\",\n      onChange: e => this.selectType(e.target.value, 'DebtorType'),\n      value: this.state.DebtorType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SubAgent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 53\n      }\n    }, \"Sub Agent\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ServiceCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 53\n      }\n    }, \"Service Center\"), \"}\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 49\n      }\n    }, \"Agent Name\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"agentinfo\",\n      id: \"agentinfo\",\n      options: this.state.sourceList,\n      value: this.state.agentinfo,\n      onChange: data => this.selectType(data, 'agentinfo') // placeholder={t(\"policyUnderwriting:Source.defaultValue\")}\n      // disabled={this.state.sourceDisable == true ? true : false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 45\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 45\n      }\n    }, \" Search \")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Agent Commission Report\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(AgentCommissionReport);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/AgentCommissionReport.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","AgentCommissionReport","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","monthtillDate","fromDate","toDate","columns","field","header","sortable","filter","id","style","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","DebtorType","Period","DebtorTypeError","agentinfo","agentinfoError","format","colOptions","col","push","label","export","bind","componentDidMount","getOrganazationData","ClientDetails","rowData","ClientName","ClientCode","AgentDetails","AgentName","AgentCode","DateDetails","RenewalDate","InceptionDate","getDropDownValues","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","formattedData","dataLength","v_Premium","v_AgentCommission","i","tempData","console","log","TransactionType","Description","PolicyNumber","TransactionDate","Premium","parseFloat","toFixed","AgentCommission","dt","exportCSV","filterData","selectType","type","show","ContactType","OrganizationName","OrganizationId","sourceList","condition","errorField","message","document","getElementById","className","innerHTML","render","t","map","body","filterMatchMode","columnToggleIcon","position","onColumnToggle","width","marginRight","custom","float","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n\r\nclass AgentCommissionReport extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n\r\n            // { field: \"ClientCode\", header: \"Client Code\", sortable: true, filter: true, id: 1 },\r\n            // { field: \"Department\", header: \"Type\", sortable: true, filter: true, id: 2 },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 0 },\r\n            { field: \"ClientName\", header: \"Client Name\", sortable: true, filter: true, id: 1 },\r\n            // { field: \"AgentName\", header: \"Agent Name\", sortable: true, filter: true, id: 4 },\r\n            // { field: \"AgentCode\", header: \"Agent Code\", sortable: true, filter: true, id: 5 },\r\n            // { field: \"InsuranceCompany\", header: \"Insurance Company\", sortable: true, filter: true, id: 6 },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 2 },\r\n            { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 3 },\r\n            { field: \"TransactionType\", header: \"Transaction Type\", sortable: true, filter: true, id: 4 },\r\n            { field: \"TransactionDate\", header: \"Transaction Date\", sortable: true, filter: true, id: 5 },\r\n            { field: \"Premium\", header: \"Premium\", sortable: true, filter: true, id: 6 ,style:{'textAlign':'right'}},\r\n            { field: \"AgentCommission\", header: \"Agent Commission\", sortable: true, filter: true, id: 7 ,style:{'textAlign':'right'}},\r\n            // { field: \"ChargeAmount\", header: \"Charge Amt\", sortable: true, filter: true, id: 10 },\r\n            // { field: \"PaidAmount\", header: \"Paid Amt\", sortable: true, filter: true, id: 11 },\r\n            // { field: \"Outstanding\", header: \"Outstanding Amt\", sortable: true, filter: true, id: 12 },\r\n            // { field: \"DueDate\", header: \"Outstanding Since\", sortable: true, filter: true, id: 13 },\r\n            // { field: \"DayAfterDueDate\", header: \"No of Days\", sortable: true, filter: true, id: 14 }\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n\r\n            DebtorType: 'SubAgent',\r\n            Period: 0,\r\n            // DebtorTypeList:[\r\n            //     {label:'',value:''}\r\n            // ],\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            monthtillDate: moment().format(\"YYYY-MM\"),\r\n            fromDate: '',\r\n            toDate: ''\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.AgentCommissionReport();\r\n        this.getOrganazationData(this.state.DebtorType);\r\n    }\r\n\r\n    ClientDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ClientName}</p>\r\n                <p>{rowData.ClientCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    AgentDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.AgentName}</p>\r\n                <p>{rowData.AgentCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    DateDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.RenewalDate}</p>\r\n                <p>{rowData.InceptionDate}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n\r\n    AgentCommissionReport() {\r\n        var data = {\r\n            DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\r\n            agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\r\n            Period: this.state.Period ? this.state.Period : 0,\r\n            monthtillDate: this.state.monthtillDate ? this.state.monthtillDate : '',\r\n            fromDate: this.state.fromDate ? this.state.fromDate : '',\r\n            toDate: this.state.toDate ? this.state.toDate : ''\r\n        };\r\n        api.post('api/AgentCommissionReport', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage:0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n                    var v_Premium = 0;\r\n                    var v_AgentCommission = 0;\r\n\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            // AgentName: tempData.SourceName,\r\n                            // AgentCode: tempData.SubAgentId,\r\n                            // Department: tempData.Department,\r\n                            // ClientCode: tempData.ClientContactCode,\r\n                            TransactionType: tempData.Description,\r\n                            PolicyNumber: tempData.PolicyNumber,\r\n                            ClientName: tempData.ClientName,\r\n                            InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\r\n                            RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\r\n                            TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\r\n                            Premium: parseFloat(tempData.Premium?tempData.Premium:0).toFixed(2),\r\n                            AgentCommission: parseFloat(tempData.AgentCommission?tempData.AgentCommission:0).toFixed(2),\r\n                            // InsuranceCompany: tempData.InsuranceCompany,\r\n                            // ChargeAmount: tempData.ChargeAmount,\r\n                            // PaidAmount: tempData.PaidAmount,\r\n                            // Outstanding: tempData.Outstanding,\r\n                            // RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\r\n                            // TransactionType: tempData.TransactionType,\r\n                            // DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\r\n                            // DayAfterDueDate: tempData.DayAfterDueDate\r\n                        });\r\n                        v_Premium = tempData.Premium + v_Premium;\r\n                        v_AgentCommission = tempData.AgentCommission + v_AgentCommission;\r\n                    }\r\n                    formattedData.push({\r\n                        PolicyNumber: 'Total',\r\n                        Premium: parseFloat(v_Premium).toFixed(2),\r\n                        AgentCommission: parseFloat(v_AgentCommission).toFixed(2),\r\n                    });\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.AgentCommissionReport();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'monthtillDate') {\r\n            this.setState({ monthtillDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, agentinfoError: false });\r\n            this.show('agentinfo', false, 'agentinfoError', '');\r\n\r\n        }\r\n\r\n        if (type === 'Period') {\r\n            this.setState({ Period: value });\r\n        }\r\n\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Agent Commission Report</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Search Sub Agent/Service Center\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md='2'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>Period</label>\r\n                                                <Input type=\"select\" name=\"Period\" id=\"Period\" onChange={(e) => this.selectType(e.target.value, 'Period')} value={this.state.Period}>\r\n                                                    <option value=\"0\">Month</option>\r\n                                                    <option value=\"1\">Custom</option>\r\n                                    }\r\n                                </Input>\r\n                                            </div>\r\n                                        </Col>\r\n                                        {\r\n                                            this.state.Period == 0 ?\r\n                                                <Col md='6'>\r\n                                                    <div className=\"input-box\">\r\n                                                        <label>Month</label>\r\n                                                        <Input type=\"month\" id=\"monthtillDate\" name=\"monthtillDate\"\r\n                                                            value={this.state.monthtillDate}\r\n                                                            onChange={(e) => this.handleChange(e, 'monthtillDate')}\r\n                                                        ></Input>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                :\r\n                                                <Col md='4'>\r\n                                                    <Row>\r\n                                                        <Col md='6'>\r\n                                                            <div className=\"input-box\">\r\n                                                                <label>From Date</label>\r\n                                                                <Input type=\"date\" id=\"fromDate\" name=\"fromDate\"\r\n                                                                    value={this.state.fromDate}\r\n                                                                    onChange={(e) => this.handleChange(e, 'fromDate')}\r\n                                                                ></Input>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                        <Col md='6'>\r\n                                                            <div className=\"input-box\">\r\n                                                                <label>To Date</label>\r\n                                                                <Input type=\"date\" id=\"toDate\" name=\"toDate\"\r\n                                                                    value={this.state.toDate}\r\n                                                                    onChange={(e) => this.handleChange(e, 'toDate')}\r\n                                                                ></Input>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Col>}\r\n                                        <Col md='3'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>Debtor Type</label>\r\n                                                <Input type=\"select\" name=\"DebtorType\" id=\"DebtorType\" onChange={(e) => this.selectType(e.target.value, 'DebtorType')} value={this.state.DebtorType}>\r\n                                                    <option value=\"SubAgent\">Sub Agent</option>\r\n                                                    <option value=\"ServiceCenter\">Service Center</option>\r\n                                                    {/* {this.state.DebtorTypeList.map((type, i) => {\r\n                                        return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                    }) */}\r\n                                    }\r\n                                </Input>\r\n                                            </div>\r\n                                        </Col>\r\n                                        {/* <Col md='2'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>Till Date</label>\r\n                                                <Input disabled type=\"month\" id=\"tillDate\" name=\"tillDate\"\r\n                                                    value={this.state.tillDate}\r\n                                                    onChange={(e) => this.handleChange(e, 'tillDate')}\r\n                                                ></Input>\r\n                                              </div>\r\n                                        </Col> */}\r\n                                        <Col md='3'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>Agent Name</label>\r\n                                                <Select name=\"agentinfo\" id=\"agentinfo\" options={this.state.sourceList}\r\n                                                    value={this.state.agentinfo} onChange={(data) => this.selectType(data, 'agentinfo')}\r\n                                                // placeholder={t(\"policyUnderwriting:Source.defaultValue\")}\r\n                                                // disabled={this.state.sourceDisable == true ? true : false}\r\n                                                />\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Agent Commission Report\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(AgentCommissionReport);\r\n"]},"metadata":{},"sourceType":"module"}