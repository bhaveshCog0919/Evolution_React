{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/ContactManagement.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\nimport moment from 'moment';\nimport { toast } from 'react-toastify'; // import 'react-toastify/dist/ReactToastify.css';\n\nimport { withTranslation } from 'react-i18next';\nimport api from '../../utils/apiClient';\nimport APIConstant from '../../utils/constants';\nimport { CommonConfig } from '../../utils/constants';\n\nclass ContactManagement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.edit = rowData => {\n      let id = rowData.id;\n      let entityType = rowData.entityType;\n      this.props.history.push({\n        pathname: '/viewContactDetails/' + id + '/' + entityType,\n        state: {\n          id: id,\n          entityType: entityType\n        }\n      }); // this.setState({ showModal: true, selectedRecord: rowData, \n      //   arrayToDisplay: (rowData.entityType === 'person') ? this.state.personQuestion : this.state.organizationQuestion\n      // });\n    };\n\n    this.delete = rowData => {\n      try {\n        let data = {\n          id: rowData.id,\n          entityType: rowData.entityType,\n          loggedInUserId: CommonConfig.loggedInUserId()\n        };\n        api.post('api/deleteContact', data).then(res => {\n          console.log(\"DSAf\", res);\n\n          if (res.data.success) {\n            toast.success(res.data.message);\n            this.reset('delete');\n            this.getContactDetails();\n          } else {}\n        }).catch(err => {\n          console.log(\"DSAf\", err);\n        });\n      } catch (error) {\n        console.log(\"DSAf\", error);\n      }\n    };\n\n    this.confirmDelete = rowData => {\n      this.setState({\n        isDeleteContact: true,\n        selectedRecord: rowData\n      });\n    };\n\n    this.viewPolicy = rowData => {\n      console.log(rowData);\n      let data = {\n        id: rowData.id,\n        entityType: rowData.entityType\n      };\n      api.post('api/getUserPolicyList', data).then(res => {\n        if (res.data.success) {\n          if (res.data.data.length == '0') {\n            this.setState({\n              showPolicyModal: true,\n              NewPolicyUserId: rowData.id,\n              NewPolicyUser: rowData.name\n            });\n          } else {\n            console.log(\"rowData.id...\", rowData.id);\n            console.log(\"rowData.entityType...\", rowData.entityType);\n            this.props.history.push({\n              pathname: '/PolicyList/' + rowData.id + '/' + rowData.entityType,\n              state: {\n                id: rowData.id,\n                entityType: rowData.entityType\n              }\n            });\n          }\n        } else {\n          console.log('err');\n        }\n      }).catch(err => {\n        console.log(\"DSAf\", err);\n      });\n    };\n\n    this.newPolicy = rowData => {\n      let id = rowData.id;\n      this.props.history.push({\n        pathname: '/CreatePolicy/' + id,\n        state: {\n          id: id\n        }\n      });\n    };\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.value === '' || e.target.value === null) {// this.show(e.target.name, true);\n      } else {\n        this.show(e.target.name, false);\n        this.setState({\n          note: e.target.value\n        });\n      }\n    };\n\n    this.selectType = (value, type) => {\n      if (value === '') {\n        this.show(type, true);\n      } else {\n        this.show(type, false);\n        let arr2 = this.state.verificationArray;\n        let i = this.state.verificationArray.findIndex(x => x.label === type);\n\n        if (i !== -1) {\n          arr2[i].value = value === 'Correct' ? true : false;\n        } else {\n          arr2.push({\n            label: type,\n            value: value === 'Correct' ? true : false\n          });\n        }\n\n        this.setState({\n          verificationArray: arr2\n        });\n      }\n    };\n\n    this.reset = type => {\n      if (type === 'edit') {\n        this.setState({\n          showModal: false,\n          selectedRecord: '',\n          verificationArray: [],\n          note: ''\n        });\n      } else if (type === 'delete') {\n        this.setState({\n          isDeleteContact: false,\n          selectedRecord: ''\n        });\n      } else if (type === 'policyModal') {\n        this.setState({\n          showPolicyModal: false,\n          NewPolicyUser: '',\n          NewPolicyUserId: ''\n        });\n      }\n    };\n\n    this.goToEdit = () => {\n      try {\n        var id = this.state.selectedRecord.id;\n        var entityType = this.state.selectedRecord.entityType;\n        this.props.history.push({\n          pathname: '/viewContactDetails/' + id + '/' + entityType,\n          state: {\n            id: id,\n            entityType: entityType\n          }\n        });\n        let errCount = 0;\n\n        for (let i = 0; i < this.state.verificationArray.length; i++) {\n          if (!this.state.verificationArray[i].value) {\n            errCount++;\n          }\n        }\n\n        if (this.state.verificationArray.length <= 2 && this.state.note === '') {\n          //verification fail\n          toast.error('User verification failed');\n        } else if (errCount >= 2) {\n          //verification fail\n          toast.error('User verification failed');\n        } else if (errCount == 1 && this.state.note === '') {\n          //verfication fail\n          toast.error('User verification failed');\n        } else {\n          var id = this.state.selectedRecord.id;\n          var entityType = this.state.selectedRecord.entityType;\n          let data = {\n            verificationArray: this.state.verificationArray,\n            isCorrect: true,\n            note: this.state.note,\n            id: id\n          }; // api.post('api/addVerificationDetails', data).then(res => {\n          //   if(res.success){\n          //     if(res.data.success){\n          //       toast.success(res.data.message);\n          //       this.reset();\n          //       this.props.history.push({\n          //         pathname: '/editContactDetails/' + id + '/' + entityType,\n          //         state: {\n          //           id: id,\n          //           entityType: entityType\n          //         }\n          //       });\n          //     }else{\n          //     }\n          //   }else{\n          //     // toast.error('User verification failed');\n          //   }\n          // }).catch(err => {\n          //   console.log(\"err\", err);\n          // });\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    this.searchGlobal = e => {\n      console.log(\"Zsdfsafg\", e);\n      this.setState({\n        globalFilter: e.target.value\n      });\n      console.log(\"frgt\", this.state.arr);\n    };\n\n    this.filterData = filteredData => {\n      console.log(\"dddd\", filteredData); // let firstPage = (filteredData.length) ? '1' : '0';\n      // let lastPage = (this.state.rowsPerPage < filteredData.length) ? this.state.rowsPerPage : filteredData.length;\n      // let str = firstPage + ' to ' + lastPage + ' out of ' + filteredData.length + ' records';\n      // this.setState({ str: str });\n    };\n\n    let columns = [{\n      field: \"code\",\n      header: \"Code\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      style: {\n        width: 80\n      },\n      id: 0\n    }, {\n      field: \"name\",\n      header: \"Name/Company\",\n      sortable: true,\n      filterMatchMode: 'contains',\n      filter: true,\n      style: {},\n      id: 1\n    }, // { field: \"address\", header: \"Address\", sortable: true, filter: true },\n    // { field: \"county\", header: \"County\", sortable: true, filter: true },\n    {\n      field: \"phone\",\n      header: \"Phone\",\n      sortable: true,\n      filterMatchMode: 'contains',\n      filter: true,\n      style: {},\n      id: 2\n    }, {\n      field: \"email\",\n      header: \"Email\",\n      sortable: true,\n      filterMatchMode: 'contains',\n      filter: true,\n      style: {},\n      id: 3\n    }, {\n      field: \"country\",\n      header: \"Country\",\n      sortable: true,\n      filterMatchMode: 'contains',\n      filter: true,\n      style: {},\n      id: 4\n    }, {\n      field: \"address\",\n      header: \"Address\",\n      sortable: true,\n      filterMatchMode: 'contains',\n      filter: true,\n      style: {},\n      id: 5\n    }, {\n      field: \"contact\",\n      header: \"Contact Type\",\n      sortable: true,\n      filterMatchMode: 'contains',\n      filter: true,\n      style: {},\n      id: 6\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filterMatchMode: 'contains',\n      filter: false,\n      style: {},\n      id: 7\n    }];\n    this.state = {\n      selectedLanguage: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      brand: null,\n      colors: null,\n      toggleModal: false,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      organizationQuestion: [],\n      personQuestion: [],\n      arrayToDisplay: [],\n      verificationArray: [],\n      showModal: false,\n      selectedRecord: '',\n      note: '',\n      isDeleteContact: false,\n      showPolicyModal: false,\n      NewPolicyUserId: '',\n      NewPolicyUser: ''\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.getContactDetails();\n    this.getPersonQuestion();\n    this.getOrganizationQuestion();\n  }\n\n  getContactDetails() {\n    try {\n      let data = {\n        orderby: CommonConfig.isEmpty(this.props.location.state) ? 'SearchName' : this.props.location.state.isAdded ? 'CreatedOn' : 'SearchName'\n      };\n      api.post('api/getContactList', data).then(res => {\n        console.log(\"getContactList----------------- \", res);\n\n        if (res.success) {\n          let formattedData = [];\n          let i;\n\n          for (i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              id: res.data[i].PersonId && res.data[i].PersonId !== undefined && res.data[i].PersonId !== null ? res.data[i].PersonId : res.data[i].OrganizationId,\n              entityType: res.data[i].EntityType,\n              code: res.data[i].ContactCode,\n              name: res.data[i].fullname,\n              //(res.data[i].personid ? res.data[i].forename + ' ' + res.data[i].surname : res.data[i].organizationname),\n              address: res.data[i].AddrLine1 === null || res.data[i].AddrLine1 === undefined ? '' : res.data[i].AddrLine1,\n              //res.data[i].addrline1 + ' ' + res.data[i].addrline2 + ' ' + res.data[i].addrline3,\n              // county: res.data[i].state,\n              phone: (CommonConfig.isEmpty(res.data[i].CountryCode) ? '' : res.data[i].CountryCode) + ' ' + (CommonConfig.isEmpty(res.data[i].AreaCode) ? '' : res.data[i].AreaCode) + ' ' + (CommonConfig.isEmpty(res.data[i].PhoneNumber) ? '' : CommonConfig.formatPhoneNumber(res.data[i].PhoneNumber)),\n              email: res.data[i].Email,\n              country: res.data[i].countryname,\n              business: res.data[i].businesstype,\n              contact: res.data[i].contacttype,\n              DOB: res.data[i].EntityType === 'person' ? CommonConfig.isEmpty(res.data[i].DOB) || res.data[i].DOB == '0000-00-00' || res.data[i].DOB == \"Invalid date\" ? '' : moment(res.data[i].DOB).format('DD-MM-YYYY') : res.data[i].DOB,\n              //for person dob as dob - for organization dob as companyidentifier,\n              PostalCode: res.data[i].PostalCode,\n              Mobile: res.data[i].PhoneNumber\n            });\n          }\n\n          let firstPage = formattedData.length ? '1' : '0';\n          let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n          let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n          this.setState({\n            arr: formattedData,\n            str: str\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"DFsd\", err);\n      });\n    } catch (err) {\n      console.log(\"DFsdaaaa\", err);\n    }\n  }\n\n  getPersonQuestion() {\n    try {\n      const data = {\n        stringmaptype: 'PERSONQUESTION',\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            personQuestion: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getOrganizationQuestion() {\n    try {\n      const data = {\n        stringmaptype: 'ORGQUESTION',\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            organizationQuestion: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  addMoreContact() {\n    this.props.history.push('/addContactDetails');\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  goToPolicy() {\n    this.props.history.push({\n      pathname: '/CreatePolicy/' + this.state.NewPolicyUserId,\n      state: {\n        Id: this.state.NewPolicyUserId\n      }\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    console.log('rowData', rowData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-warning\",\n      onClick: () => this.edit(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View Contact\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      tooltip: \"Delete Contact\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.confirmDelete(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-file\",\n      className: \"p-button-primary\",\n      onClick: () => this.viewPolicy(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View Policy\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      className: \"p-button-success\",\n      onClick: () => this.newPolicy(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"New Policy\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        style: col.style,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }\n    }, \"Contacts\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.searchGlobal(e),\n      placeholder: \"Global Search\",\n      size: \"30\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltip: \"Add Contact\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.addMoreContact(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Contact List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      onValueChange: filteredData => this.filterData(filteredData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.reset('edit'),\n      isOpen: this.state.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.reset('edit'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }, \"Edit Contact Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }\n    }, this.state.arrayToDisplay.map((que, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-box rc-box\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rc-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }\n      }, que.stringmapname)), /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }\n      }, this.state.selectedRecord[que.stringmapkey])), /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: que.stringmapkey,\n        id: que.stringmapkey,\n        className: \"\",\n        onChange: e => this.selectType(e.target.value, e.target.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 27\n        }\n      }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Correct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 27\n        }\n      }, \"Correct\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Incorrect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 27\n        }\n      }, \"Incorrect\")), /*#__PURE__*/React.createElement(\"em\", {\n        className: \"error invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 25\n        }\n      }, \"Please select one option\")))));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box rc-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 21\n      }\n    }, \"Comment\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"note\",\n      type: \"textarea\",\n      id: \"note\",\n      className: \"\",\n      onChange: e => this.handleChange(e),\n      value: this.state.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, \"Please enter note\")))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"danger\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 15\n      }\n    }), \"Verification Failed\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.goToEdit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 15\n      }\n    }), \"Verification Done\"))), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.reset('delete'),\n      isOpen: this.state.isDeleteContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.reset('delete'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }\n    }, \"Delete Contact?\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 13\n      }\n    }, \"Are you sure you want to delete contact \", this.state.selectedRecord.name, \" ?\")), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"danger\",\n      onClick: () => this.reset('delete'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 15\n      }\n    }), \"No\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.delete(this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 15\n      }\n    }), \"Yes\"))), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.reset('policyModal'),\n      isOpen: this.state.showPolicyModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.reset('policyModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }\n    }, \"No Policy Found for \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 37\n      }\n    }, this.state.NewPolicyUser))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }\n    }, t(\"contactDetails:SetupPolicy.message\"))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset('policyModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 15\n      }\n    }), t(\"contactDetails:SetupPolicy.No\")), /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.goToPolicy(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 15\n      }\n    }), t(\"contactDetails:SetupPolicy.Yes\")))));\n  }\n\n}\n\nexport default withTranslation()(ContactManagement);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/ContactManagement.js"],"names":["React","Component","DataTable","Column","InputText","MultiSelect","Button","Col","Row","Modal","ModalBody","ModalHeader","ModalFooter","BTN","Input","moment","toast","withTranslation","api","APIConstant","CommonConfig","ContactManagement","constructor","props","edit","rowData","id","entityType","history","push","pathname","state","delete","data","loggedInUserId","post","then","res","console","log","success","message","reset","getContactDetails","catch","err","error","confirmDelete","setState","isDeleteContact","selectedRecord","viewPolicy","length","showPolicyModal","NewPolicyUserId","NewPolicyUser","name","newPolicy","getPageString","e","firstPage","first","l","rows","page","lastPage","arr","str","selectedPage","rowsPerPage","handleChange","target","value","show","note","selectType","type","arr2","verificationArray","i","findIndex","x","label","showModal","goToEdit","errCount","isCorrect","searchGlobal","globalFilter","filterData","filteredData","columns","field","header","sortable","filter","filterMatchMode","style","width","body","actionTemplate","bind","selectedLanguage","i18n","language","brand","colors","toggleModal","cols","rowsPerPageOptions","dataTableConfig","organizationQuestion","personQuestion","arrayToDisplay","colOptions","col","onColumnToggle","export","componentDidMount","getPersonQuestion","getOrganizationQuestion","orderby","isEmpty","location","isAdded","formattedData","PersonId","undefined","OrganizationId","EntityType","code","ContactCode","fullname","address","AddrLine1","phone","CountryCode","AreaCode","PhoneNumber","formatPhoneNumber","email","Email","country","countryname","business","businesstype","contact","contacttype","DOB","format","PostalCode","Mobile","stringmaptype","path","dropdownbycode","dt","exportCSV","addMoreContact","event","valueInOrder","sort","y","goToPolicy","Id","column","marginRight","position","condition","document","getElementById","className","render","t","map","margin","columnToggleIcon","el","que","stringmapname","stringmapkey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Button } from 'primereact/button';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport api from '../../utils/apiClient';\r\nimport APIConstant from '../../utils/constants';\r\nimport { CommonConfig } from '../../utils/constants';\r\n\r\nclass ContactManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let columns = [\r\n      { field: \"code\", header: \"Code\", sortable: true, filter: true,filterMatchMode: 'contains', style: { width: 80 }, id: 0 },\r\n      { field: \"name\", header: \"Name/Company\", sortable: true,filterMatchMode: 'contains', filter: true, style: {}, id: 1 },\r\n      // { field: \"address\", header: \"Address\", sortable: true, filter: true },\r\n      // { field: \"county\", header: \"County\", sortable: true, filter: true },\r\n      { field: \"phone\", header: \"Phone\", sortable: true,filterMatchMode: 'contains', filter: true, style: {}, id: 2 },\r\n      { field: \"email\", header: \"Email\", sortable: true,filterMatchMode: 'contains', filter: true, style: {}, id: 3 },\r\n      { field: \"country\", header: \"Country\", sortable: true,filterMatchMode: 'contains', filter: true, style: {}, id: 4 },\r\n      { field: \"address\", header: \"Address\", sortable: true,filterMatchMode: 'contains', filter: true, style: {}, id: 5 },\r\n      { field: \"contact\", header: \"Contact Type\", sortable: true,filterMatchMode: 'contains', filter: true, style: {}, id: 6 },\r\n      { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false,filterMatchMode: 'contains', filter: false, style: {}, id: 7 }\r\n    ];\r\n\r\n    this.state = {\r\n      selectedLanguage: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n      brand: null,\r\n      colors: null,\r\n      toggleModal: false,\r\n      cols: columns,\r\n      arr: [],\r\n      selectedPage: 0,\r\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n      str: '',\r\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n      globalFilter: null,\r\n\r\n      organizationQuestion: [],\r\n      personQuestion: [],\r\n      arrayToDisplay: [],\r\n      verificationArray: [],\r\n\r\n      showModal: false,\r\n      selectedRecord: '',\r\n      note: '',\r\n\r\n      isDeleteContact: false,\r\n\r\n      showPolicyModal: false,\r\n      NewPolicyUserId: '',\r\n      NewPolicyUser: ''\r\n    };\r\n\r\n    this.colOptions = [];\r\n    for (let col of columns) {\r\n      this.colOptions.push({ label: col.header, value: col });\r\n    }\r\n\r\n    this.onColumnToggle = this.onColumnToggle.bind(this);\r\n    this.actionTemplate = this.actionTemplate.bind(this);\r\n    this.export = this.export.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getContactDetails();\r\n    this.getPersonQuestion();\r\n    this.getOrganizationQuestion();\r\n  }\r\n\r\n  getContactDetails() {\r\n    try {\r\n      let data = {\r\n        orderby: CommonConfig.isEmpty(this.props.location.state) ? 'SearchName' : (this.props.location.state.isAdded) ? 'CreatedOn' : 'SearchName'\r\n      }\r\n      api.post('api/getContactList', data).then(res => {\r\n        console.log(\"getContactList----------------- \",res);\r\n        if (res.success) {\r\n          let formattedData = [];\r\n          let i;\r\n          for (i = 0; i < res.data.length; i++) {\r\n          \r\n            formattedData.push({\r\n              id: (res.data[i].PersonId && res.data[i].PersonId !== undefined && res.data[i].PersonId !== null) ? res.data[i].PersonId : res.data[i].OrganizationId,\r\n              entityType: res.data[i].EntityType,\r\n              code: res.data[i].ContactCode,\r\n              name: res.data[i].fullname, //(res.data[i].personid ? res.data[i].forename + ' ' + res.data[i].surname : res.data[i].organizationname),\r\n              address: (res.data[i].AddrLine1 === null || res.data[i].AddrLine1 === undefined) ? '' : res.data[i].AddrLine1, //res.data[i].addrline1 + ' ' + res.data[i].addrline2 + ' ' + res.data[i].addrline3,\r\n              // county: res.data[i].state,\r\n              phone: (CommonConfig.isEmpty(res.data[i].CountryCode) ? '':res.data[i].CountryCode) \r\n              + ' ' + (CommonConfig.isEmpty(res.data[i].AreaCode) ? '':res.data[i].AreaCode)\r\n              + ' ' + ( CommonConfig.isEmpty(res.data[i].PhoneNumber) ? '' : \r\n              CommonConfig.formatPhoneNumber(res.data[i].PhoneNumber)),\r\n              email: res.data[i].Email,\r\n              country: res.data[i].countryname,\r\n              business: res.data[i].businesstype,\r\n              contact: res.data[i].contacttype,\r\n              DOB: (res.data[i].EntityType === 'person') ? CommonConfig.isEmpty(res.data[i].DOB) || res.data[i].DOB=='0000-00-00' || res.data[i].DOB == \"Invalid date\"  ?'':moment(res.data[i].DOB).format('DD-MM-YYYY') : res.data[i].DOB, //for person dob as dob - for organization dob as companyidentifier,\r\n              PostalCode: res.data[i].PostalCode,\r\n              Mobile: res.data[i].PhoneNumber\r\n            });\r\n          }\r\n\r\n          let firstPage = (formattedData.length) ? '1' : '0';\r\n          let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n          let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n          this.setState({ arr: formattedData, str: str });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"DFsd\", err);\r\n      });\r\n    } catch (err) {\r\n      console.log(\"DFsdaaaa\", err);\r\n    }\r\n  }\r\n\r\n  getPersonQuestion() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'PERSONQUESTION',\r\n        orderby: 'sortorder'\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ personQuestion: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getOrganizationQuestion() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'ORGQUESTION',\r\n        orderby: 'sortorder'\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ organizationQuestion: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  export() {\r\n    this.dt.exportCSV();\r\n  }\r\n\r\n  addMoreContact() {\r\n    this.props.history.push('/addContactDetails');\r\n  }\r\n\r\n  onColumnToggle(event) {\r\n    let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n    this.setState({ cols: valueInOrder });\r\n  }\r\n\r\n  edit = (rowData) => {\r\n    let id = rowData.id;\r\n    let entityType = rowData.entityType;\r\n\r\n    this.props.history.push({\r\n      pathname: '/viewContactDetails/' + id + '/' + entityType,\r\n      state: {\r\n        id: id,\r\n        entityType: entityType\r\n      }\r\n    });\r\n    // this.setState({ showModal: true, selectedRecord: rowData, \r\n    //   arrayToDisplay: (rowData.entityType === 'person') ? this.state.personQuestion : this.state.organizationQuestion\r\n    // });\r\n  }\r\n\r\n  delete = (rowData) => {\r\n    try {\r\n      let data = {\r\n        id: rowData.id,\r\n        entityType: rowData.entityType,\r\n        loggedInUserId: CommonConfig.loggedInUserId()\r\n      }\r\n      api.post('api/deleteContact', data).then(res => {\r\n        console.log(\"DSAf\", res);\r\n        if (res.data.success) {\r\n          toast.success(res.data.message);\r\n          this.reset('delete');\r\n          this.getContactDetails();\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"DSAf\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"DSAf\", error);\r\n    }\r\n  }\r\n\r\n  confirmDelete = (rowData) => {\r\n    this.setState({ isDeleteContact: true, selectedRecord: rowData });\r\n  }\r\n\r\n  viewPolicy = (rowData) => {\r\n    console.log(rowData);\r\n\r\n    let data = {\r\n      id: rowData.id,\r\n      entityType: rowData.entityType,\r\n    }\r\n    api.post('api/getUserPolicyList', data).then(res => {\r\n\r\n      if (res.data.success) {\r\n        if (res.data.data.length == '0') {\r\n          this.setState({ showPolicyModal: true, NewPolicyUserId: rowData.id, NewPolicyUser: rowData.name });\r\n        } else {\r\n          console.log(\"rowData.id...\",rowData.id);\r\n          console.log(\"rowData.entityType...\",rowData.entityType);\r\n          this.props.history.push({\r\n            pathname: '/PolicyList/' + rowData.id + '/' + rowData.entityType,\r\n            state: {\r\n              id: rowData.id,\r\n              entityType: rowData.entityType\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        console.log('err');\r\n      }\r\n    }).catch(err => {\r\n      console.log(\"DSAf\", err);\r\n    });\r\n  }\r\n\r\n  goToPolicy() {\r\n\r\n    this.props.history.push({\r\n      pathname: '/CreatePolicy/' + this.state.NewPolicyUserId,\r\n      state: {\r\n        Id: this.state.NewPolicyUserId\r\n      }\r\n    });\r\n  }\r\n\r\n  newPolicy = (rowData) => {\r\n    let id = rowData.id;\r\n\r\n    this.props.history.push({\r\n      pathname: '/CreatePolicy/' + id,\r\n      state: {\r\n        id: id\r\n      }\r\n    });\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    console.log('rowData', rowData);\r\n\r\n    return <div>\r\n      {/* <i className=\"pi pi-pencil\" title=\"Edit\" onClick={() => this.edit(rowData)} style={{ marginRight: '.5em' }}></i>\r\n      <i className=\"pi pi-trash\" title=\"Delete\" onClick={() => this.delete(rowData)} style={{ marginLeft: '.5em' }}></i> */}\r\n      <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\"\r\n        onClick={() => this.edit(rowData)}\r\n        style={{ marginRight: '.5em' }} tooltip=\"View Contact\" tooltipOptions={{ position: 'bottom' }} />\r\n      <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete Contact\"\r\n        tooltipOptions={{ position: 'bottom' }} onClick={() => this.confirmDelete(rowData)} />\r\n      <Button type=\"button\" icon=\"pi pi-file\" className=\"p-button-primary\"\r\n        onClick={() => this.viewPolicy(rowData)}\r\n        style={{ marginRight: '.5em' }} tooltip=\"View Policy\" tooltipOptions={{ position: 'bottom' }} />\r\n      <Button type=\"button\" icon=\"pi pi-plus\" className=\"p-button-success\"\r\n        onClick={() => this.newPolicy(rowData)}\r\n        style={{ marginRight: '.5em' }} tooltip=\"New Policy\" tooltipOptions={{ position: 'bottom' }} />\r\n    </div>;\r\n  }\r\n\r\n  getPageString = (e) => {\r\n    let firstPage = e.first + 1;\r\n    let l = e.rows * (e.page + 1);\r\n    let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n    var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n    this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    if (e.target.value === '' || e.target.value === null) {\r\n      // this.show(e.target.name, true);\r\n    } else {\r\n      this.show(e.target.name, false);\r\n      this.setState({ note: e.target.value });\r\n    }\r\n  }\r\n\r\n  selectType = (value, type) => {\r\n    if (value === '') {\r\n      this.show(type, true);\r\n    } else {\r\n      this.show(type, false);\r\n      let arr2 = this.state.verificationArray;\r\n      let i = this.state.verificationArray.findIndex(x => x.label === type);\r\n      if (i !== -1) {\r\n        arr2[i].value = (value === 'Correct') ? true : false\r\n      } else {\r\n        arr2.push({ label: type, value: (value === 'Correct') ? true : false });\r\n      }\r\n      this.setState({ verificationArray: arr2 });\r\n    }\r\n  }\r\n\r\n  show(field, condition) {\r\n    if (condition) {\r\n      document.getElementById(field).className = \"form-control is-invalid\";\r\n    } else {\r\n      document.getElementById(field).className = \"form-control\";\r\n    }\r\n  }\r\n\r\n  reset = (type) => {\r\n    if (type === 'edit') {\r\n      this.setState({ showModal: false, selectedRecord: '', verificationArray: [], note: '' });\r\n    } else if (type === 'delete') {\r\n      this.setState({ isDeleteContact: false, selectedRecord: '' });\r\n    } else if (type === 'policyModal') {\r\n      this.setState({ showPolicyModal: false, NewPolicyUser: '', NewPolicyUserId: '' });\r\n    }\r\n  }\r\n\r\n  goToEdit = () => {\r\n    try {\r\n      var id = this.state.selectedRecord.id;\r\n      var entityType = this.state.selectedRecord.entityType;\r\n      this.props.history.push({\r\n        pathname: '/viewContactDetails/' + id + '/' + entityType,\r\n        state: {\r\n          id: id,\r\n          entityType: entityType\r\n        }\r\n      });\r\n      let errCount = 0;\r\n      for (let i = 0; i < this.state.verificationArray.length; i++) {\r\n        if (!this.state.verificationArray[i].value) {\r\n          errCount++;\r\n        }\r\n      }\r\n\r\n      if (this.state.verificationArray.length <= 2 && this.state.note === '') {\r\n        //verification fail\r\n        toast.error('User verification failed');\r\n      } else if (errCount >= 2) {\r\n        //verification fail\r\n        toast.error('User verification failed');\r\n      } else if (errCount == 1 && this.state.note === '') {\r\n        //verfication fail\r\n        toast.error('User verification failed');\r\n      } else {\r\n        var id = this.state.selectedRecord.id;\r\n        var entityType = this.state.selectedRecord.entityType;\r\n\r\n        let data = {\r\n          verificationArray: this.state.verificationArray,\r\n          isCorrect: true,\r\n          note: this.state.note,\r\n          id: id\r\n        }\r\n\r\n        // api.post('api/addVerificationDetails', data).then(res => {\r\n        //   if(res.success){\r\n        //     if(res.data.success){\r\n        //       toast.success(res.data.message);\r\n\r\n        //       this.reset();\r\n\r\n        //       this.props.history.push({\r\n        //         pathname: '/editContactDetails/' + id + '/' + entityType,\r\n        //         state: {\r\n        //           id: id,\r\n        //           entityType: entityType\r\n        //         }\r\n        //       });\r\n        //     }else{\r\n\r\n        //     }\r\n        //   }else{\r\n        //     // toast.error('User verification failed');\r\n        //   }\r\n        // }).catch(err => {\r\n        //   console.log(\"err\", err);\r\n        // });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n\r\n  searchGlobal = (e) => {\r\n    console.log(\"Zsdfsafg\", e);\r\n    this.setState({ globalFilter: e.target.value });\r\n    console.log(\"frgt\", this.state.arr);\r\n  }\r\n\r\n  filterData = (filteredData) => {\r\n    console.log(\"dddd\", filteredData);\r\n    // let firstPage = (filteredData.length) ? '1' : '0';\r\n    // let lastPage = (this.state.rowsPerPage < filteredData.length) ? this.state.rowsPerPage : filteredData.length;\r\n    // let str = firstPage + ' to ' + lastPage + ' out of ' + filteredData.length + ' records';\r\n    // this.setState({ str: str });\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    let columns = this.state.cols.map((col, i) => {\r\n      return (\r\n        <Column key={i} field={col.field} header={col.header} body={col.body}\r\n          sortable={col.sortable} filter={col.filter} style={col.style} filterMatchMode=\"contains\"\r\n        />\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div>\r\n\r\n        <div className=\"basic-header\">\r\n          <h1>Contacts</h1>\r\n          <div className=\"header-right-option\">\r\n            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n            <InputText type=\"search\" onInput={(e) => this.searchGlobal(e)} placeholder=\"Global Search\" size=\"30\" style={{ marginRight: 10 }} />\r\n\r\n            <MultiSelect value={this.state.cols} options={this.colOptions}\r\n              fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n              onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n            />\r\n\r\n            <Button type=\"button\" icon=\"pi pi-plus\" tooltip=\"Add Contact\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.addMoreContact()}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"table-custom\">\r\n          <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n            paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.arr.length} exportFilename=\"Contact List\"\r\n            currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\r\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n            responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \r\n            onValueChange={(filteredData => this.filterData(filteredData))}\r\n          >\r\n            {columns}\r\n          </DataTable>\r\n        </div>\r\n\r\n        <Modal toggle={() => this.reset('edit')} isOpen={this.state.showModal}>\r\n          <ModalHeader toggle={() => this.reset('edit')}>\r\n            Edit Contact Details\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            {this.state.arrayToDisplay.map((que, i) => {\r\n              return (\r\n                <div className=\"input-box rc-box\" key={i}>\r\n                  <div className=\"rc-inline\">\r\n                    <Row>\r\n                      <Col md=\"4\">\r\n                        <label>{que.stringmapname}</label>\r\n                      </Col>\r\n\r\n                      <Col md=\"4\">\r\n                        <label>{this.state.selectedRecord[que.stringmapkey]}</label>\r\n                      </Col>\r\n\r\n                      <Col md=\"4\">\r\n                        <Input type=\"select\" name={que.stringmapkey} id={que.stringmapkey} className=\"\"\r\n                          onChange={(e) => this.selectType(e.target.value, e.target.name)}>\r\n                          <option value=''>Select</option>\r\n                          <option value='Correct'>Correct</option>\r\n                          <option value='Incorrect'>Incorrect</option>\r\n                        </Input>\r\n                        <em className=\"error invalid-feedback\" >Please select one option</em>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n            }\r\n\r\n            <div className=\"input-box rc-box\">\r\n              <div className=\"rc-inline\">\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <label>Comment</label>\r\n                  </Col>\r\n\r\n                  <Col md=\"8\">\r\n                    <Input name=\"note\" type=\"textarea\" id=\"note\" className=\"\" onChange={e => this.handleChange(e)} value={this.state.note} />\r\n                    <em className=\"error invalid-feedback\" >Please enter note</em>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <BTN color=\"danger\" onClick={() => this.reset()}>\r\n              <i className=\"fa fa-close\"></i>\r\n              Verification Failed\r\n          </BTN>\r\n            <BTN color=\"success\" onClick={() => this.goToEdit()}>\r\n              <i className=\"fa fa-check\"></i>\r\n              Verification Done\r\n            </BTN>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal toggle={() => this.reset('delete')} isOpen={this.state.isDeleteContact}>\r\n          <ModalHeader toggle={() => this.reset('delete')}>\r\n            Delete Contact?\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <span>Are you sure you want to delete contact {this.state.selectedRecord.name} ?</span>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <BTN color=\"danger\" onClick={() => this.reset('delete')}>\r\n              <i className=\"fa fa-close\"></i>\r\n              No\r\n            </BTN>\r\n            <BTN color=\"success\" onClick={() => this.delete(this.state.selectedRecord)}>\r\n              <i className=\"fa fa-check\"></i>\r\n              Yes\r\n            </BTN>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal\r\n          toggle={() => this.reset('policyModal')}\r\n          isOpen={this.state.showPolicyModal}\r\n        >\r\n          <ModalHeader toggle={() => this.reset('policyModal')}>\r\n            <h5>No Policy Found for <b>{this.state.NewPolicyUser}</b></h5>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <p>{t(\"contactDetails:SetupPolicy.message\")}</p>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <BTN color=\"primary\" onClick={() => this.reset('policyModal')}>\r\n              <i className=\"fa fa-close\"></i>\r\n              {t(\"contactDetails:SetupPolicy.No\")}\r\n            </BTN>\r\n            <BTN color=\"primary\" onClick={() => this.goToPolicy()}>\r\n              <i className=\"fa fa-check\"></i>\r\n              {t(\"contactDetails:SetupPolicy.Yes\")}\r\n            </BTN>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ContactManagement);"]},"metadata":{},"sourceType":"module"}