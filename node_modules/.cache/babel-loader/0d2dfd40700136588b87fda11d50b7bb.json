{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Renewal_Forecasting_Report.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass Renewal_Forecasting_Report extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'monthtillDate') {\n        this.setState({\n          monthtillDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'fromDate') {\n        this.setState({\n          fromDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'toDate') {\n        this.setState({\n          toDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'Year') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            Year: e.target.value,\n            YearError: true\n          });\n          this.show('Year', true, 'YearError', 'Please Enter Year');\n        } else {\n          this.setState({\n            Year: e.target.value,\n            YearError: false\n          });\n          this.show('Year', false, 'YearError', '');\n        }\n      }\n    };\n\n    let columns = [\n    /*{ body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n    { field: \"Action\", header: \"Action\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },*/\n    {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Client Name\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '155px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '85px'\n      }\n    }, {\n      field: \"VesselClass\",\n      header: \"Vessel Class\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '125px'\n      }\n    }, {\n      field: \"VesselType\",\n      header: \"Vessel Type \",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '125px'\n      }\n    }, {\n      field: \"Country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'textAlign': 'right',\n        'width': '85px'\n      }\n    }, {\n      field: \"VesselRegistrationLocation\",\n      header: \"Vessel Registration Location\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'textAlign': 'right',\n        'width': '85px'\n      }\n    }, {\n      field: \"SumInsured\",\n      header: \"Sum Insured\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '75px',\n        'textAlign': 'right'\n      }\n    }, {\n      body: this.ColumnclassName.bind(this),\n      field: \"ProjectedPremium\",\n      header: \"Projected Premium\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '75px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"LastRenewalConfirmed\",\n      header: \"Last Renewal Confirmed\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"DifferenceTotalDue\",\n      header: \"Difference Total Due\",\n      sortable: true,\n      filter: true,\n      id: 11,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"PecentageChange\",\n      header: \"Percentage Change\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"Stage\",\n      header: \"Stage\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '105px'\n      }\n    }, {\n      field: \"Recommendation\",\n      header: \"Recommendation\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"Language\",\n      header: \"Language\",\n      sortable: true,\n      filter: true,\n      id: 15,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"Currency\",\n      header: \"Currency\",\n      sortable: true,\n      filter: true,\n      id: 16,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"Source\",\n      header: \"Source\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 17,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"SourceName\",\n      header: \"Source Name\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 17,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"MooringName\",\n      header: \"Mooring Name\",\n      sortable: true,\n      filter: true,\n      id: 18,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"MooringType\",\n      header: \"Mooring Type\",\n      sortable: true,\n      filter: true,\n      id: 19,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"SurveyDueDate\",\n      header: \"Survey Due Date\",\n      sortable: true,\n      filter: true,\n      id: 20,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ClaimReportedsincelastrenewal\",\n      header: \"Claim Reported since last renewal\",\n      sortable: true,\n      filter: true,\n      id: 21,\n      style: {\n        'width': '85px'\n      }\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      DebtorType: 'SubAgent',\n      Period: 0,\n      selected: {},\n      selectedPolicy: 0,\n      selectedAgent: '',\n      selectAll: 0,\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      monthtillDate: moment().format(\"YYYY-MM\"),\n      fromDate: moment().format(\"YYYY-MM-DD\"),\n      toDate: moment().format(\"YYYY-MM-DD\"),\n      MONTHList: [],\n      MONTH: ('0' + (new Date().getMonth() + 2).toString()).slice(-2),\n      MONTHError: false,\n      Year: '',\n      YearError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.Renewal_Forecasting_Report();\n    this.getOrganazationData(this.state.DebtorType);\n    this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\n  }\n\n  ClientDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, rowData.ClientName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, rowData.ClientCode));\n  }\n\n  AgentDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, rowData.AgentName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, rowData.AgentCode));\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.arr.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  SourceName(rowData) {\n    return rowData.Source === \"Direct\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, rowData.Source)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, rowData.Source), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"(\", rowData.SourceName, \")\"));\n  }\n\n  ColumnclassName(rowData, Column) {\n    return rowData.DaysOutstanding <= 7 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#008c9a',\n        color: '#fff'\n      },\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, rowData.ProjectedPremium)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 18\n      }\n    }, rowData.ProjectedPremium));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  Renewal_Forecasting_Report() {\n    var ShowMonth = this.state.MONTH;\n    console.log(ShowMonth);\n    if (ShowMonth === \"\") this.state.MONTH = new Date().getMonth() + 2;else if (ShowMonth === \"All\") this.state.MONTH = 1;\n    if (this.state.Year === \"\") this.state.Year = new Date().getFullYear();\n    var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\n    if (ShowMonth === '' || ShowMonth === 'All') var endDate = moment(startDate).endOf('year').format('YYYY-MM-DD');else var endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n    var data = {\n      fromDate: startDate,\n      toDate: endDate\n    };\n    this.state.MONTH = ShowMonth;\n    api.post('api/Renewal_Forecasting_Report', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              id: i,\n              PolicyNumber: tempData.PolicyNumber,\n              ClientName: tempData.ClientName,\n              RenewalDate: moment(tempData.RenewalDate).format('DD-MM-YYYY'),\n              VesselClass: tempData.VesselClass,\n              VesselType: tempData.VesselType,\n              Country: tempData.Country,\n              VesselRegistrationLocation: tempData.VesselRegistrationLocation,\n              SumInsured: tempData.SumInsured,\n              ProjectedPremium: tempData.TotalDue,\n              LastRenewalConfirmed: tempData.LastRenewalConfirmed,\n              DifferenceTotalDue: tempData.DifferenceTotalDue,\n              PecentageChange: tempData.PecentageChange ? tempData.PecentageChange : '--',\n              Stage: tempData.Stage ? tempData.Stage : '--',\n              Recommendation: tempData.Recommendation ? tempData.Recommendation : '--',\n              Language: tempData.DocLang,\n              Currency: tempData.Currency,\n              Source: tempData.Source,\n              SourceName: tempData.SourceName,\n              SourceData: tempData.Source + \"\" + tempData.SourceName,\n              DaysOutstanding: tempData.DaysOutstanding,\n              MooringName: tempData.MooringName ? tempData.MooringName : '--',\n              MooringType: tempData.MooringType ? tempData.MooringType : '--',\n              SurveyDueDate: tempData.SurveyDueDate ? moment(tempData.SurveyDueDate).format('DD-MM-YYYY') : '--',\n              ClaimReportedsincelastrenewal: tempData.ClaimReportedsincelastrenewal ? tempData.ClaimReportedsincelastrenewal : '--'\n            });\n          }\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.Renewal_Forecasting_Report();\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        agentinfoError: false\n      });\n      this.show('agentinfo', false, 'agentinfoError', '');\n    }\n\n    if (type === 'Period') {\n      this.setState({\n        Period: value\n      });\n    }\n\n    if (type === 'MONTH') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          MONTHError: true,\n          MONTH: value\n        });\n        this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\n      } else {\n        this.setState({\n          MONTHError: false,\n          MONTH: value\n        });\n        this.show('MONTH', false, \"MONTHError\", \"\");\n      }\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  ReferrData() {\n    var data = {}; // api.post('api/Renewal_Forecasting_Report', data).then(res => {\n    // });\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, \"Renewal Forecasting Report\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 33\n      }\n    }, \"Filter\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 45\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"MONTH\",\n      id: \"MONTH\",\n      onChange: e => this.selectType(e.target.value, 'MONTH'),\n      value: this.state.MONTH,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 45\n      }\n    }, \"All\"), this.state.MONTHList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 61\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"MONTHError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 45\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      min: \"1900\",\n      max: \"2099\",\n      id: \"Year\",\n      name: \"Year\",\n      value: this.state.Year,\n      onChange: e => this.handleChange(e, 'Year'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"YearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 45\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 45\n      }\n    }, \" Search \"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Renewal Forecasting Report\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(Renewal_Forecasting_Report);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Renewal_Forecasting_Report.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","Renewal_Forecasting_Report","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","monthtillDate","fromDate","toDate","undefined","Year","YearError","show","columns","field","header","sortable","filter","id","style","body","ColumnclassName","bind","filterMatchMode","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","DebtorType","Period","selected","selectedPolicy","selectedAgent","selectAll","DebtorTypeError","agentinfo","agentinfoError","format","MONTHList","MONTH","Date","getMonth","toString","slice","MONTHError","colOptions","col","push","label","export","componentDidMount","getOrganazationData","getDropDownValues","ClientDetails","rowData","ClientName","ClientCode","AgentDetails","AgentName","AgentCode","toggleRow","newSelected","Object","assign","toggleSelectAll","forEach","x","actionTemplate","column","SourceName","Source","DaysOutstanding","backgroundColor","color","ProjectedPremium","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","ShowMonth","console","log","getFullYear","startDate","parseInt","endDate","endOf","formattedData","dataLength","i","tempData","PolicyNumber","RenewalDate","VesselClass","VesselType","Country","VesselRegistrationLocation","SumInsured","TotalDue","LastRenewalConfirmed","DifferenceTotalDue","PecentageChange","Stage","Recommendation","Language","DocLang","Currency","SourceData","MooringName","MooringType","SurveyDueDate","ClaimReportedsincelastrenewal","dt","exportCSV","filterData","selectType","type","isEmpty","ContactType","OrganizationName","OrganizationId","sourceList","condition","errorField","message","document","getElementById","className","innerHTML","ReferrData","render","t","map","columnToggleIcon","position","onColumnToggle","width","marginRight","custom","float","StringMapKey","StringMapName","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n\r\nclass Renewal_Forecasting_Report extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n             /*{ body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n           { field: \"Action\", header: \"Action\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },*/\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 1, style: { 'width': '75px' } },\r\n            { field: \"ClientName\", header: \"Client Name\", sortable: true, filter: true, id: 2, style: { 'width': '155px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 3, style: { 'width': '85px' } },\r\n            { field: \"VesselClass\", header: \"Vessel Class\", sortable: true, filter: true, id: 4, style: { 'width': '125px' } },\r\n            { field: \"VesselType\", header: \"Vessel Type \", sortable: true, filter: true, id: 5, style: { 'width': '125px' } },\r\n            { field: \"Country\", header: \"Country\", sortable: true, filter: true, id: 6, style: { 'textAlign': 'right','width': '85px'  } },\r\n            { field: \"VesselRegistrationLocation\", header: \"Vessel Registration Location\", sortable: true, filter: true, id: 7, style: { 'textAlign': 'right','width': '85px'  } },\r\n            { field: \"SumInsured\", header: \"Sum Insured\", sortable: true, filter: true, id: 8, style: { 'width': '75px','textAlign':'right' } },\r\n            { body: this.ColumnclassName.bind(this), field: \"ProjectedPremium\", header: \"Projected Premium\", sortable: true, filter: true, id: 9, style: { 'width': '75px','textAlign':'right' } },\r\n            { field: \"LastRenewalConfirmed\", header: \"Last Renewal Confirmed\", sortable: true, filter: true, id: 10, style: { 'width': '75px' } },\r\n            { field: \"DifferenceTotalDue\", header: \"Difference Total Due\", sortable: true, filter: true, id: 11, style: { 'width': '75px' } },\r\n            { field: \"PecentageChange\", header: \"Percentage Change\", sortable: true, filter: true, id: 12, style: { 'width': '75px' } },\r\n            { field: \"Stage\", header: \"Stage\", sortable: true, filter: true, id: 1, style: { 'width': '105px' } },\r\n            { field: \"Recommendation\", header: \"Recommendation\", sortable: true, filter: true, id: 14, style: { 'width': '75px' } },\r\n            { field: \"Language\", header: \"Language\", sortable: true, filter: true, id: 15, style: { 'width': '75px' } },\r\n            { field: \"Currency\", header: \"Currency\", sortable: true, filter: true, id: 16, style: { 'width': '75px' } },\r\n            {field: \"Source\", header: \"Source\", sortable: true, filter: true, filterMatchMode: 'contains', id: 17, style: { 'width': '150px' } },\r\n            { field: \"SourceName\", header: \"Source Name\", sortable: true, filter: true, filterMatchMode: 'contains', id: 17, style: { 'width': '150px' } },\r\n            { field: \"MooringName\", header: \"Mooring Name\", sortable: true, filter: true, id: 18, style: { 'width': '150px' } },\r\n            { field: \"MooringType\", header: \"Mooring Type\", sortable: true, filter: true, id: 19, style: { 'width': '150px' } },\r\n            { field: \"SurveyDueDate\", header: \"Survey Due Date\", sortable: true, filter: true, id: 20, style: { 'width': '100px' } },\r\n            { field: \"ClaimReportedsincelastrenewal\", header: \"Claim Reported since last renewal\", sortable: true, filter: true, id: 21, style: { 'width': '85px' } },\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n\r\n            DebtorType: 'SubAgent',\r\n            Period: 0,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            monthtillDate: moment().format(\"YYYY-MM\"),\r\n            fromDate: moment().format(\"YYYY-MM-DD\"),\r\n            toDate: moment().format(\"YYYY-MM-DD\"),\r\n            MONTHList: [],\r\n            MONTH: ('0'+(new Date().getMonth() + 2).toString()).slice(-2),\r\n            MONTHError: false,\r\n            Year: '',\r\n            YearError: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Renewal_Forecasting_Report();\r\n        this.getOrganazationData(this.state.DebtorType);\r\n        this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\r\n    }\r\n\r\n    ClientDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ClientName}</p>\r\n                <p>{rowData.ClientCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    AgentDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.AgentName}</p>\r\n                <p>{rowData.AgentCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n    SourceName(rowData) {\r\n        return (rowData.Source === \"Direct\")?\r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n               \r\n            </div> :\r\n            \r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n                <p>({rowData.SourceName})</p>\r\n            </div>\r\n        ;\r\n    }\r\n    ColumnclassName(rowData,Column) {\r\n \r\n  \r\n        return (rowData.DaysOutstanding <=7)? <div style={{backgroundColor:'#008c9a',color:'#fff'}} className = \"policy-list-data\">\r\n        <p>{rowData.ProjectedPremium}</p>     \r\n    </div> :<div className = \"policy-list-data\" >\r\n                 <p>{rowData.ProjectedPremium}</p>     \r\n             </div>;\r\n        \r\n            \r\n     }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n\r\n    Renewal_Forecasting_Report() {\r\n        var ShowMonth = this.state.MONTH; console.log(ShowMonth);\r\n        if (ShowMonth ===\"\")\r\n        this.state.MONTH = new Date().getMonth() + 2;\r\n        else\r\n            if (ShowMonth ===\"All\")\r\n            this.state.MONTH = 1;\r\n        if (this.state.Year ===\"\")\r\n        this.state.Year = new Date().getFullYear();\r\n        \r\n        var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\r\n\r\n        if(ShowMonth ==='' || ShowMonth ==='All')\r\n        var endDate =  moment(startDate).endOf('year').format('YYYY-MM-DD');\r\n        else \r\n        var endDate =  moment(startDate).endOf('month').format('YYYY-MM-DD');\r\n        var data = {\r\n            fromDate:  startDate,\r\n            toDate: endDate,\r\n        };\r\n        this.state.MONTH = ShowMonth;\r\n        api.post('api/Renewal_Forecasting_Report', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            id:i,\r\n                            PolicyNumber: tempData.PolicyNumber,\r\n                            ClientName: tempData.ClientName,\r\n                            RenewalDate: moment(tempData.RenewalDate).format('DD-MM-YYYY'),\r\n                            VesselClass: tempData.VesselClass,\r\n                            VesselType: tempData.VesselType,\r\n                            Country: tempData.Country,\r\n                            VesselRegistrationLocation: tempData.VesselRegistrationLocation,\r\n                            SumInsured: tempData.SumInsured,\r\n                            ProjectedPremium: tempData.TotalDue,\r\n                            LastRenewalConfirmed: tempData.LastRenewalConfirmed,\r\n                            DifferenceTotalDue: tempData.DifferenceTotalDue,\r\n                            PecentageChange: tempData.PecentageChange ? tempData.PecentageChange : '--',\r\n                            Stage: tempData.Stage ? tempData.Stage : '--',\r\n                            Recommendation: tempData.Recommendation ? tempData.Recommendation : '--',\r\n                            Language: tempData.DocLang,\r\n                            Currency: tempData.Currency,\r\n                            Source: tempData.Source,\r\n                            SourceName: tempData.SourceName,\r\n                            SourceData: tempData.Source + \"\" + tempData.SourceName,\r\n                            DaysOutstanding: tempData.DaysOutstanding,\r\n                            MooringName: tempData.MooringName ? tempData.MooringName : '--',\r\n                            MooringType: tempData.MooringType ? tempData.MooringType : '--',\r\n                            SurveyDueDate: tempData.SurveyDueDate ? moment(tempData.SurveyDueDate).format('DD-MM-YYYY') : '--',\r\n                            ClaimReportedsincelastrenewal: tempData.ClaimReportedsincelastrenewal ? tempData.ClaimReportedsincelastrenewal : '--',\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.Renewal_Forecasting_Report();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'monthtillDate') {\r\n            this.setState({ monthtillDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'Year') {\r\n\r\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\r\n                this.setState({ Year: e.target.value, YearError: true });\r\n                this.show('Year', true, 'YearError', 'Please Enter Year');\r\n            } else {\r\n                this.setState({ Year: e.target.value, YearError: false });\r\n                this.show('Year', false, 'YearError', '');\r\n            }\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, agentinfoError: false });\r\n            this.show('agentinfo', false, 'agentinfoError', '');\r\n\r\n        }\r\n\r\n        if (type === 'Period') {\r\n            this.setState({ Period: value });\r\n        }\r\n\r\n        if (type === 'MONTH') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ MONTHError: true, MONTH: value });\r\n                this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\r\n            } else {\r\n                this.setState({ MONTHError: false, MONTH: value });\r\n                this.show('MONTH', false, \"MONTHError\", \"\");\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    ReferrData(){\r\n        var data = {\r\n                   };\r\n               \r\n        // api.post('api/Renewal_Forecasting_Report', data).then(res => {\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Renewal Forecasting Report</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Filter\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md='3'>\r\n                                            <label>Month</label>\r\n                                            <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\r\n                                            <option value='All'>All</option>\r\n                                                {this.state.MONTHList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                        <Col md='3'>\r\n\r\n                                            <label>Year</label>\r\n                                            <Input type=\"number\" min=\"1900\" max=\"2099\" id=\"Year\" name=\"Year\"\r\n                                                value={this.state.Year}\r\n                                                onChange={(e) => this.handleChange(e, 'Year')}\r\n                                            ></Input>\r\n\r\n                                            <em id=\"YearError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                        <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        {/* <Col md='3'>\r\n                                            <label>Month</label>\r\n                                            <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\r\n                                                {this.state.MONTHList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col> */}\r\n\r\n                                       {/*} <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.ReferrData()}> Refer </BTN>\r\n                                    </Col>*/}\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Renewal Forecasting Report\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(Renewal_Forecasting_Report);\r\n"]},"metadata":{},"sourceType":"module"}