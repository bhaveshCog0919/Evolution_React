{"ast":null,"code":"import i18n from'i18next';import Backend from'i18next-xhr-backend';import LanguageDetector from'i18next-browser-languagedetector';import{initReactI18next}from'react-i18next';var fileArray=['translation','contactDetails','ExternalNotes','InternalNotes','Documents','Task','policyVessel','policyUnderwriting','policyGeneral','policyEndorsement','policyMooring','policyAddOnCoverage','policyAccount','policyTimeline','policyDetails','masterVesselClass','masterVesselType','masterMooringZone','masterMooringGuide','masterRiskQuestion','masterBinder','masterAssumption','masterEndorsement','masterLevy','masterNoClaimBonus','contactTask','policyList','policyDetails','contactNotes','generateQuote'];i18n// load translation using xhr -> see /public/locales\n// learn more: https://github.com/i18next/i18next-xhr-backend\n.use(Backend)// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)// pass the i18n instance to react-i18next.\n.use(initReactI18next)// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({ns:fileArray,defaultNS:'translation',fallbackLng:'en',debug:false,interpolation:{escapeValue:false// not needed for react as it escapes by default\n}});export default i18n;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/utils/i18n.js"],"names":["i18n","Backend","LanguageDetector","initReactI18next","fileArray","use","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,GAAIC,CAAAA,SAAS,CAAG,CAAC,aAAD,CAAgB,gBAAhB,CAAkC,eAAlC,CAAmD,eAAnD,CAAoE,WAApE,CAAiF,MAAjF,CAAyF,cAAzF,CAAyG,oBAAzG,CAA+H,eAA/H,CAAiJ,mBAAjJ,CAAsK,eAAtK,CAAuL,qBAAvL,CAA8M,eAA9M,CAA+N,gBAA/N,CAAiP,eAAjP,CAAkQ,mBAAlQ,CAAuR,kBAAvR,CAA2S,mBAA3S,CAAgU,oBAAhU,CAAsV,oBAAtV,CAA4W,cAA5W,CAA4X,kBAA5X,CAAgZ,mBAAhZ,CAAqa,YAAra,CAAmb,oBAAnb,CAAyc,aAAzc,CAAwd,YAAxd,CAAue,eAAve,CAAwf,cAAxf,CAAygB,eAAzgB,CAAhB,CAEAJ,IACE;AACA;AAFE,CAGDK,GAHH,CAGOJ,OAHP,CAIE;AACA;AALF,CAMGI,GANH,CAMOH,gBANP,CAOE;AAPF,CAQGG,GARH,CAQOF,gBARP,CASE;AACA;AAVF,CAWGG,IAXH,CAWQ,CACJC,EAAE,CAAEH,SADA,CAEJI,SAAS,CAAE,aAFP,CAIJC,WAAW,CAAE,IAJT,CAKJC,KAAK,CAAE,KALH,CAOJC,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AADP,CAPX,CAXR,EAuBA,cAAeZ,CAAAA,IAAf","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nlet fileArray = ['translation', 'contactDetails', 'ExternalNotes', 'InternalNotes', 'Documents', 'Task', 'policyVessel', 'policyUnderwriting', 'policyGeneral',  'policyEndorsement', 'policyMooring', 'policyAddOnCoverage', 'policyAccount', 'policyTimeline', 'policyDetails', 'masterVesselClass', 'masterVesselType', 'masterMooringZone', 'masterMooringGuide', 'masterRiskQuestion', 'masterBinder', 'masterAssumption', 'masterEndorsement', 'masterLevy', 'masterNoClaimBonus', 'contactTask', 'policyList' , 'policyDetails', 'contactNotes' , 'generateQuote']\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: fileArray,\n    defaultNS: 'translation',\n\n    fallbackLng: 'en',\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}