{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Notes/Notes.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { toast } from 'react-toastify';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport APIConstant from '../../utils/constants';\nimport moment from 'moment';\nimport { CommonConfig } from '../../utils/constants';\nimport { apiBase } from '../../utils/config';\nimport ShowMoreText from 'react-show-more-text';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.updateNotes = rowdata => {\n      this.setState({\n        isNoteEdit: true,\n        notesdescription: rowdata.note,\n        notesdescriptionError: false,\n        notestitle: rowdata.title,\n        notestitleError: false,\n        notesType: rowdata.category,\n        NotesTypeError: false,\n        noteID: rowdata.noteID,\n        userImg: apiBase + rowdata.link,\n        titleNote: \"Edit\"\n      });\n      this.show(\"notestitle\", false);\n      this.show(\"notesdescription\", false);\n      this.show('notesType', false);\n    };\n\n    this.DeleteNotesModal = rowdata => {\n      this.setState({\n        noteID: rowdata.noteID\n      });\n      this.openModal(rowdata);\n    };\n\n    this.DeleteNotes = noteID => {\n      api.post('api/deleteNote', {\n        noteId: noteID\n      }).then(res => {\n        if (res.success) {\n          this.reset();\n          this.openModal();\n          toast.success('Notes deleted successful!');\n          this.getNoteList();\n        } else {}\n      }).catch(err => {});\n    };\n\n    this.reset = () => {\n      this.setState({\n        isNoteEdit: false,\n        notesdescription: '',\n        notesdescriptionError: true,\n        notestitle: '',\n        notestitleError: true,\n        notesType: '',\n        NotesTypeError: true,\n        noteID: '',\n        userImg: '',\n        userImgData: '',\n        noteaddon: '',\n        titleNote: \"Add\"\n      });\n      this.show(\"notestitle\", false);\n      this.show(\"notesdescription\", false);\n      this.show('notesType', false);\n      document.getElementById(\"noteaddon\").value = null;\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'notestitle') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            notestitleError: true\n          });\n          this.show(\"notestitle\", true);\n        } else {\n          this.setState({\n            notestitleError: false,\n            notestitle: e.target.value\n          });\n          this.show(\"notestitle\", false);\n        }\n      }\n\n      if (e.target.name === 'notesdescription') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            notesdescriptionError: true\n          });\n          this.show(\"notesdescription\", true);\n        } else {\n          this.setState({\n            notesdescriptionError: false,\n            notesdescription: e.target.value\n          });\n          this.show(\"notesdescription\", false);\n        }\n      }\n    };\n\n    this.selectImage = event => {\n      if (event.target.files && event.target.files[0]) {\n        this.setState({\n          userImgData: event.target.files[0]\n        });\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          this.setState({\n            userImg: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    };\n\n    this.saveNotes = () => {\n      if (this.state.notestitleError === false && this.state.NotesTypeError === false && this.state.notesdescriptionError === false) {\n        const NotesForm = new FormData();\n        NotesForm.append('noteId', this.state.noteID);\n        NotesForm.append('notetitle', this.state.notestitle.trim());\n        NotesForm.append('notesType', this.state.notesType);\n        NotesForm.append('notesdescription', this.state.notesdescription.trim());\n        NotesForm.append('entityid', this.state.EntityId);\n        NotesForm.append('entitytype', this.state.EntityType);\n        NotesForm.append('isflag', this.state.isImportant);\n        NotesForm.append('loggedInUserId', CommonConfig.loggedInUserId());\n        NotesForm.append('languageId', this.state.LanguageId);\n\n        if (this.state.userImgData && this.state.userImgData != '' && this.state.userImgData != undefined && this.state.userImgData != null) {\n          NotesForm.append('notesAddOn', this.state.userImgData);\n        }\n\n        api.post('api/addNotes', NotesForm).then(res => {\n          if (res.success) {\n            document.getElementById(\"noteaddon\").value = null;\n            this.reset();\n\n            if (res.data.affectedRows) {\n              toast.success('Notes updated successfully');\n            } else {\n              toast.success('Notes added successfully');\n            }\n\n            toast.success(res.message);\n            this.getNoteList();\n          } else {}\n        }).catch(err => {});\n      } else {\n        this.show(\"notestitle\", this.state.notestitleError);\n        this.show(\"notesType\", this.state.NotesTypeError);\n        this.show(\"notesdescription\", this.state.notesdescriptionError);\n      }\n    };\n\n    console.log(\"props\", props);\n    let columns = [{\n      field: \"id\",\n      header: \"Id\",\n      sortable: true,\n      filter: false,\n      id: 0\n    }, {\n      field: \"category\",\n      header: \"category\",\n      sortable: true,\n      filter: true,\n      id: 1\n    }, {\n      field: \"user\",\n      header: \"User\",\n      sortable: true,\n      filter: true,\n      id: 2\n    }, {\n      field: \"title\",\n      header: \"Title\",\n      sortable: true,\n      filter: true,\n      id: 3\n    }, {\n      field: \"note\",\n      body: this.noteTemplate.bind(this),\n      header: \"note\",\n      sortable: true,\n      filter: true,\n      id: 4\n    }, {\n      field: \"created\",\n      header: \"Created\",\n      sortable: true,\n      filter: false,\n      id: 5\n    }, {\n      field: \"updated\",\n      header: \"Updated\",\n      sortable: true,\n      filter: false,\n      id: 6\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      id: 7\n    }];\n    const NType = [{\n      label: 'Policy',\n      value: 'Policy'\n    }, {\n      label: 'Claim',\n      value: 'Claim'\n    }];\n    this.state = {\n      toggleModal: false,\n      cols: columns,\n      arr: [],\n      isImportant: 1,\n      Notes: '',\n      Type: [],\n      notesType: '',\n      notestitle: '',\n      notesdescription: '',\n      notestitleError: true,\n      notesdescriptionError: true,\n      NotesTypeError: true,\n      noteID: '',\n      isNoteEdit: false,\n      EntityId: 'fddf9f64-0f38-4ebb-81d4-0e52f548f549',\n      EntityType: 'Organization',\n      userImg: '',\n      userImgData: '',\n      noteaddon: '',\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      selectedPage: 0,\n      titleNote: \"Add\",\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.onBrandChange = this.onBrandChange.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.getNoteList();\n    this.getNotesType();\n  }\n\n  getNoteList() {\n    api.post('api/getNotes', {}).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        console.log('erfwefcafc', res.data);\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            id: [i + 1],\n            noteID: res.data[i].NoteId,\n            category: res.data[i].NoteType,\n            user: res.data[i].EntityName,\n            title: res.data[i].NoteTitle,\n            note: res.data[i].NoteText,\n            created: moment(res.data[i].CreatedOn).format(CommonConfig.dateFormat.dateTime),\n            updated: res.data[i].UpdatedOn != null ? moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateTime) : '',\n            link: res.data[i].Link\n          });\n        }\n\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      } else {}\n    }).catch(err => {});\n  }\n\n  getNotesType() {\n    try {\n      const data = {\n        stringmaptype: 'NOTETYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        console.log('NOTETYPE', res);\n\n        if (res.success) {\n          this.setState({\n            Type: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  executeOnClick(isExpanded) {}\n\n  noteTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(ShowMoreText, {\n      lines: 3,\n      more: \"Show more\",\n      less: \"Show less\",\n      anchorClass: \"\",\n      onClick: this.executeOnClick,\n      expanded: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, rowData.note));\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-pencil\",\n      style: {\n        margin: 2\n      },\n      tooltip: \"Edit\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.updateNotes(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      style: {\n        margin: 2\n      },\n      tooltip: \"Delete\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.DeleteNotesModal(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  onBrandChange(event) {\n    this.dt.filter(event.value, 'brand', 'equals');\n    this.setState({\n      brand: event.value\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  openModal() {\n    this.setState({\n      toggleModal: !this.state.toggleModal\n    });\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  selectType(value, type) {\n    if (value === '' || value === null) {\n      this.setState({\n        NotesTypeError: true,\n        notesType: value\n      });\n      this.show('notesType', true);\n    } else {\n      this.setState({\n        NotesTypeError: false,\n        notesType: value\n      });\n      this.show('notesType', false);\n    }\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      md: \"12\",\n      style: {\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    }, this.state.titleNote, \" Notes\"))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 19\n      }\n    }, \"Note Title*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"notestitle\",\n      id: \"notestitle\",\n      onChange: e => this.handleChange(e),\n      placeholder: \"Note Title\",\n      size: \"30\",\n      value: this.state.notestitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }, \" Please enter note title \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, \"Notes Type*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"notesType\",\n      id: \"notesType\",\n      onChange: e => this.selectType(e.target.value, 'notesType'),\n      value: this.state.notesType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }\n    }, \"Select Notes Type\"), this.state.Type.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 31\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, \" Please select note type \")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, \"Notes*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"notesdescription\",\n      id: \"notesdescription\",\n      rows: 5,\n      cols: 50,\n      placeholder: \"please write note\",\n      value: this.state.notesdescription,\n      onChange: e => this.handleChange(e),\n      autoResize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }\n    }, \" Please enter note \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, \"Notes Addon\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      name: \"noteaddon\",\n      id: \"noteaddon\",\n      onChange: this.selectImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, this.state.isNoteEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveNotes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 79\n      }\n    }), \" Update\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 75\n      }\n    }), \" Cancel\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveNotes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 79\n      }\n    }), \" Save\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 75\n      }\n    }), \" Cancel\"))))))), /*#__PURE__*/React.createElement(Col, {\n      xs: \"4\",\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: \"4\",\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-section introduction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"feature-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 15\n      }\n    }, \"Notes\")))), /*#__PURE__*/React.createElement(Col, {\n      xs: \"4\",\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'textAlign': 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      size: \"30\",\n      style: {\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      style: {\n        margin: 2\n      },\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    })))));\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      currentPageReportTemplate: this.state.str,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      exportFilename: \"Notes\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown \",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }\n    }, \"Delete Notes\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }\n    }, \"Are you sure you want to delete note?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.DeleteNotes(this.state.noteID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 86\n      }\n    }), \" Yes\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 61\n      }\n    }), \" Cancel\"))));\n  }\n\n} // export default Notes;\n\n\nexport default withTranslation()(Notes);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Notes/Notes.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","api","APIConstant","moment","CommonConfig","apiBase","ShowMoreText","useTranslation","withTranslation","Trans","Notes","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","updateNotes","rowdata","isNoteEdit","notesdescription","note","notesdescriptionError","notestitle","title","notestitleError","notesType","category","NotesTypeError","noteID","userImg","link","titleNote","show","DeleteNotesModal","openModal","DeleteNotes","post","noteId","then","res","success","reset","getNoteList","catch","err","userImgData","noteaddon","document","getElementById","value","toggleLarge","toggleModal","handleChange","target","name","isEmpty","selectImage","event","files","reader","FileReader","onload","result","readAsDataURL","saveNotes","NotesForm","FormData","append","trim","EntityId","EntityType","isImportant","loggedInUserId","LanguageId","undefined","data","affectedRows","message","console","log","columns","field","header","sortable","filter","id","body","noteTemplate","bind","actionTemplate","NType","label","cols","Type","dataTableConfig","rowsPerPageOptions","i18n","language","colOptions","col","push","onColumnToggle","onBrandChange","export","componentDidMount","getNotesType","formattedData","i","NoteId","NoteType","user","EntityName","NoteTitle","NoteText","created","CreatedOn","format","dateFormat","dateTime","updated","UpdatedOn","Link","stringmaptype","path","dropdownbycode","error","executeOnClick","isExpanded","rowData","column","margin","position","dt","brand","exportCSV","valueInOrder","sort","x","y","selectType","type","condition","className","render","padding","float","handleSubmit","marginTop","map","ct","StringMapKey","StringMapName","textAlign","width","columnToggleIcon","globalFilter","marginBottom","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,kDAAP;AACA,OAAO,yCAAP;AACA,OAAO,2BAAP;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,GAArD,EAA0DC,GAA1D,EAA+DC,KAA/D,EAAsEP,MAAM,IAAIQ,GAAhF,QAA2F,YAA3F;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;;AAEA,MAAMC,KAAN,SAAoBxB,SAApB,CAA8B;AAC5ByB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgHnBC,aAhHmB,GAgHFC,CAAD,IAAO;AACrB,UAAIC,SAAS,GAAGD,CAAC,CAACE,KAAF,GAAU,CAA1B;AACA,UAAIC,CAAC,GAAGH,CAAC,CAACI,IAAF,IAAUJ,CAAC,CAACK,IAAF,GAAS,CAAnB,CAAR;AACA,UAAIC,QAAQ,GAAIH,CAAC,GAAG,KAAKI,KAAL,CAAWC,GAAX,CAAeC,MAApB,GAA8BN,CAA9B,GAAkC,KAAKI,KAAL,CAAWC,GAAX,CAAeC,MAAhE;AACA,UAAIC,GAAG,GAAGT,SAAS,GAAG,MAAZ,GAAqBK,QAArB,GAAgC,UAAhC,GAA6C,KAAKC,KAAL,CAAWC,GAAX,CAAeC,MAA5D,GAAqE,UAA/E;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEZ,CAAC,CAACE,KAAlB;AAAyBQ,QAAAA,GAAG,EAAEA,GAA9B;AAAmCG,QAAAA,WAAW,EAAEb,CAAC,CAACI;AAAlD,OAAd;AACD,KAtHkB;;AAAA,SAwHnBU,WAxHmB,GAwHJC,OAAD,IAAa;AACzB,WAAKJ,QAAL,CAAc;AACZK,QAAAA,UAAU,EAAE,IADA;AACMC,QAAAA,gBAAgB,EAAEF,OAAO,CAACG,IADhC;AACsCC,QAAAA,qBAAqB,EAAE,KAD7D;AAEZC,QAAAA,UAAU,EAAEL,OAAO,CAACM,KAFR;AAEeC,QAAAA,eAAe,EAAE,KAFhC;AAGZC,QAAAA,SAAS,EAAER,OAAO,CAACS,QAHP;AAGiBC,QAAAA,cAAc,EAAE,KAHjC;AAIZC,QAAAA,MAAM,EAAEX,OAAO,CAACW,MAJJ;AAKZC,QAAAA,OAAO,EAAEpC,OAAO,GAAGwB,OAAO,CAACa,IALf;AAMZC,QAAAA,SAAS,EAAE;AANC,OAAd;AAQA,WAAKC,IAAL,CAAU,YAAV,EAAwB,KAAxB;AACA,WAAKA,IAAL,CAAU,kBAAV,EAA8B,KAA9B;AACA,WAAKA,IAAL,CAAU,WAAV,EAAuB,KAAvB;AACD,KApIkB;;AAAA,SAsInBC,gBAtImB,GAsIChB,OAAD,IAAa;AAC9B,WAAKJ,QAAL,CAAc;AAAEe,QAAAA,MAAM,EAAEX,OAAO,CAACW;AAAlB,OAAd;AACA,WAAKM,SAAL,CAAejB,OAAf;AACD,KAzIkB;;AAAA,SA2InBkB,WA3ImB,GA2IJP,MAAD,IAAY;AACxBvC,MAAAA,GAAG,CAAC+C,IAAJ,CAAS,gBAAT,EAA2B;AAAEC,QAAAA,MAAM,EAAET;AAAV,OAA3B,EAA+CU,IAA/C,CAAoDC,GAAG,IAAI;AACzD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACf,eAAKC,KAAL;AACA,eAAKP,SAAL;AACAvD,UAAAA,KAAK,CAAC6D,OAAN,CAAc,2BAAd;AACA,eAAKE,WAAL;AACD,SALD,MAKO,CAEN;AACF,OATD,EASGC,KATH,CASSC,GAAG,IAAI,CACf,CAVD;AAWD,KAvJkB;;AAAA,SAyJnBH,KAzJmB,GAyJX,MAAM;AACZ,WAAK5B,QAAL,CAAc;AACZK,QAAAA,UAAU,EAAE,KADA;AACOC,QAAAA,gBAAgB,EAAE,EADzB;AAC6BE,QAAAA,qBAAqB,EAAE,IADpD;AAEZC,QAAAA,UAAU,EAAE,EAFA;AAEIE,QAAAA,eAAe,EAAE,IAFrB;AAGZC,QAAAA,SAAS,EAAE,EAHC;AAGGE,QAAAA,cAAc,EAAE,IAHnB;AAIZC,QAAAA,MAAM,EAAE,EAJI;AAIAC,QAAAA,OAAO,EAAE,EAJT;AAIagB,QAAAA,WAAW,EAAE,EAJ1B;AAI8BC,QAAAA,SAAS,EAAE,EAJzC;AAI6Cf,QAAAA,SAAS,EAAE;AAJxD,OAAd;AAMA,WAAKC,IAAL,CAAU,YAAV,EAAwB,KAAxB;AACA,WAAKA,IAAL,CAAU,kBAAV,EAA8B,KAA9B;AACA,WAAKA,IAAL,CAAU,WAAV,EAAuB,KAAvB;AACAe,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,GAA6C,IAA7C;AACD,KApKkB;;AAAA,SA2MnBC,WA3MmB,GA2ML,MAAM;AAClB,WAAKrC,QAAL,CAAc;AAAEsC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KA7MkB;;AAAA,SAoNnBC,YApNmB,GAoNHlD,CAAD,IAAO;AACpB,WAAKW,QAAL,CAAc;AAAE,SAACX,CAAC,CAACmD,MAAF,CAASC,IAAV,GAAiBpD,CAAC,CAACmD,MAAF,CAASJ;AAA5B,OAAd;;AACA,UAAI/C,CAAC,CAACmD,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAClC,YAAI9D,YAAY,CAAC+D,OAAb,CAAqBrD,CAAC,CAACmD,MAAF,CAASJ,KAA9B,CAAJ,EAA0C;AACxC,eAAKpC,QAAL,CAAc;AAAEW,YAAAA,eAAe,EAAE;AAAnB,WAAd;AACA,eAAKQ,IAAL,CAAU,YAAV,EAAwB,IAAxB;AACD,SAHD,MAGO;AACL,eAAKnB,QAAL,CAAc;AAAEW,YAAAA,eAAe,EAAE,KAAnB;AAA0BF,YAAAA,UAAU,EAAEpB,CAAC,CAACmD,MAAF,CAASJ;AAA/C,WAAd;AACA,eAAKjB,IAAL,CAAU,YAAV,EAAwB,KAAxB;AACD;AACF;;AACD,UAAI9B,CAAC,CAACmD,MAAF,CAASC,IAAT,KAAkB,kBAAtB,EAA0C;AACxC,YAAI9D,YAAY,CAAC+D,OAAb,CAAqBrD,CAAC,CAACmD,MAAF,CAASJ,KAA9B,CAAJ,EAA0C;AACxC,eAAKpC,QAAL,CAAc;AAAEQ,YAAAA,qBAAqB,EAAE;AAAzB,WAAd;AACA,eAAKW,IAAL,CAAU,kBAAV,EAA8B,IAA9B;AACD,SAHD,MAGO;AACL,eAAKnB,QAAL,CAAc;AAAEQ,YAAAA,qBAAqB,EAAE,KAAzB;AAAgCF,YAAAA,gBAAgB,EAAEjB,CAAC,CAACmD,MAAF,CAASJ;AAA3D,WAAd;AACA,eAAKjB,IAAL,CAAU,kBAAV,EAA8B,KAA9B;AACD;AACF;AACF,KAxOkB;;AAAA,SA0OnBwB,WA1OmB,GA0OJC,KAAD,IAAW;AAEvB,UAAIA,KAAK,CAACJ,MAAN,CAAaK,KAAb,IAAsBD,KAAK,CAACJ,MAAN,CAAaK,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,aAAK7C,QAAL,CAAc;AAAEgC,UAAAA,WAAW,EAAEY,KAAK,CAACJ,MAAN,CAAaK,KAAb,CAAmB,CAAnB;AAAf,SAAd;AACA,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAiB3D,CAAD,IAAO;AACrB,eAAKW,QAAL,CAAc;AAAEgB,YAAAA,OAAO,EAAE3B,CAAC,CAACmD,MAAF,CAASS;AAApB,WAAd;AACD,SAFD;;AAGAH,QAAAA,MAAM,CAACI,aAAP,CAAqBN,KAAK,CAACJ,MAAN,CAAaK,KAAb,CAAmB,CAAnB,CAArB;AAED;AACF,KArPkB;;AAAA,SAiQnBM,SAjQmB,GAiQP,MAAM;AAChB,UACE,KAAKvD,KAAL,CAAWe,eAAX,KAA+B,KAA/B,IACA,KAAKf,KAAL,CAAWkB,cAAX,KAA8B,KAD9B,IAEA,KAAKlB,KAAL,CAAWY,qBAAX,KAAqC,KAHvC,EAIE;AACA,cAAM4C,SAAS,GAAG,IAAIC,QAAJ,EAAlB;AACAD,QAAAA,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B,KAAK1D,KAAL,CAAWmB,MAAtC;AACAqC,QAAAA,SAAS,CAACE,MAAV,CAAiB,WAAjB,EAA8B,KAAK1D,KAAL,CAAWa,UAAX,CAAsB8C,IAAtB,EAA9B;AACAH,QAAAA,SAAS,CAACE,MAAV,CAAiB,WAAjB,EAA8B,KAAK1D,KAAL,CAAWgB,SAAzC;AACAwC,QAAAA,SAAS,CAACE,MAAV,CAAiB,kBAAjB,EAAqC,KAAK1D,KAAL,CAAWU,gBAAX,CAA4BiD,IAA5B,EAArC;AACAH,QAAAA,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA6B,KAAK1D,KAAL,CAAW4D,QAAxC;AACAJ,QAAAA,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B,KAAK1D,KAAL,CAAW6D,UAA1C;AACAL,QAAAA,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B,KAAK1D,KAAL,CAAW8D,WAAtC;AACAN,QAAAA,SAAS,CAACE,MAAV,CAAiB,gBAAjB,EAAmC3E,YAAY,CAACgF,cAAb,EAAnC;AACAP,QAAAA,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B,KAAK1D,KAAL,CAAWgE,UAA1C;;AAEA,YAAI,KAAKhE,KAAL,CAAWoC,WAAX,IAA0B,KAAKpC,KAAL,CAAWoC,WAAX,IAA0B,EAApD,IAA0D,KAAKpC,KAAL,CAAWoC,WAAX,IAA0B6B,SAApF,IAAiG,KAAKjE,KAAL,CAAWoC,WAAX,IAA0B,IAA/H,EAAqI;AACnIoB,UAAAA,SAAS,CAACE,MAAV,CAAiB,YAAjB,EAA+B,KAAK1D,KAAL,CAAWoC,WAA1C;AACD;;AACDxD,QAAAA,GAAG,CAAC+C,IAAJ,CAAS,cAAT,EAAyB6B,SAAzB,EAAoC3B,IAApC,CAAyCC,GAAG,IAAI;AAE9C,cAAIA,GAAG,CAACC,OAAR,EAAiB;AACfO,YAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,GAA6C,IAA7C;AACA,iBAAKR,KAAL;;AACA,gBAAIF,GAAG,CAACoC,IAAJ,CAASC,YAAb,EAA2B;AACzBjG,cAAAA,KAAK,CAAC6D,OAAN,CAAc,4BAAd;AACD,aAFD,MAEO;AACL7D,cAAAA,KAAK,CAAC6D,OAAN,CAAc,0BAAd;AACD;;AACD7D,YAAAA,KAAK,CAAC6D,OAAN,CAAcD,GAAG,CAACsC,OAAlB;AACA,iBAAKnC,WAAL;AACD,WAVD,MAUO,CAEN;AACF,SAfD,EAeGC,KAfH,CAeSC,GAAG,IAAI,CACf,CAhBD;AAiBD,OApCD,MAoCO;AACL,aAAKZ,IAAL,CAAU,YAAV,EAAwB,KAAKvB,KAAL,CAAWe,eAAnC;AACA,aAAKQ,IAAL,CAAU,WAAV,EAAuB,KAAKvB,KAAL,CAAWkB,cAAlC;AACA,aAAKK,IAAL,CAAU,kBAAV,EAA8B,KAAKvB,KAAL,CAAWY,qBAAzC;AACD;AACF,KA3SkB;;AAEjByD,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB/E,KAApB;AAEA,QAAIgF,OAAO,GAAG,CACZ;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,MAAM,EAAE,IAAvB;AAA6BC,MAAAA,QAAQ,EAAE,IAAvC;AAA6CC,MAAAA,MAAM,EAAE,KAArD;AAA4DC,MAAAA,EAAE,EAAE;AAAhE,KADY,EAEZ;AAAEJ,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,MAAM,EAAE,UAA7B;AAAyCC,MAAAA,QAAQ,EAAE,IAAnD;AAAyDC,MAAAA,MAAM,EAAE,IAAjE;AAAuEC,MAAAA,EAAE,EAAE;AAA3E,KAFY,EAGZ;AAAEJ,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCC,MAAAA,QAAQ,EAAE,IAA3C;AAAiDC,MAAAA,MAAM,EAAE,IAAzD;AAA+DC,MAAAA,EAAE,EAAE;AAAnE,KAHY,EAIZ;AAAEJ,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE,OAA1B;AAAmCC,MAAAA,QAAQ,EAAE,IAA7C;AAAmDC,MAAAA,MAAM,EAAE,IAA3D;AAAiEC,MAAAA,EAAE,EAAE;AAArE,KAJY,EAKZ;AAAEJ,MAAAA,KAAK,EAAE,MAAT;AAAiBK,MAAAA,IAAI,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAvB;AAAqDN,MAAAA,MAAM,EAAE,MAA7D;AAAqEC,MAAAA,QAAQ,EAAE,IAA/E;AAAqFC,MAAAA,MAAM,EAAE,IAA7F;AAAmGC,MAAAA,EAAE,EAAE;AAAvG,KALY,EAMZ;AAAEJ,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAE,SAA5B;AAAuCC,MAAAA,QAAQ,EAAE,IAAjD;AAAuDC,MAAAA,MAAM,EAAE,KAA/D;AAAsEC,MAAAA,EAAE,EAAE;AAA1E,KANY,EAOZ;AAAEJ,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,MAAM,EAAE,SAA5B;AAAuCC,MAAAA,QAAQ,EAAE,IAAjD;AAAuDC,MAAAA,MAAM,EAAE,KAA/D;AAAsEC,MAAAA,EAAE,EAAE;AAA1E,KAPY,EAQZ;AAAEC,MAAAA,IAAI,EAAE,KAAKG,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAR;AAAwCN,MAAAA,MAAM,EAAE,QAAhD;AAA0DC,MAAAA,QAAQ,EAAE,KAApE;AAA2EC,MAAAA,MAAM,EAAE,KAAnF;AAA0FC,MAAAA,EAAE,EAAE;AAA9F,KARY,CAAd;AAUA,UAAMK,KAAK,GAAG,CACZ;AAAEC,MAAAA,KAAK,EAAE,QAAT;AAAmB1C,MAAAA,KAAK,EAAE;AAA1B,KADY,EAEZ;AAAE0C,MAAAA,KAAK,EAAE,OAAT;AAAkB1C,MAAAA,KAAK,EAAE;AAAzB,KAFY,CAAd;AAIA,SAAKxC,KAAL,GAAa;AACX0C,MAAAA,WAAW,EAAE,KADF;AAEXyC,MAAAA,IAAI,EAAEZ,OAFK;AAGXtE,MAAAA,GAAG,EAAE,EAHM;AAIX6D,MAAAA,WAAW,EAAE,CAJF;AAKXzE,MAAAA,KAAK,EAAE,EALI;AAMX+F,MAAAA,IAAI,EAAE,EANK;AAOXpE,MAAAA,SAAS,EAAE,EAPA;AAQXH,MAAAA,UAAU,EAAE,EARD;AASXH,MAAAA,gBAAgB,EAAE,EATP;AAUXK,MAAAA,eAAe,EAAE,IAVN;AAWXH,MAAAA,qBAAqB,EAAE,IAXZ;AAYXM,MAAAA,cAAc,EAAE,IAZL;AAaXC,MAAAA,MAAM,EAAE,EAbG;AAcXV,MAAAA,UAAU,EAAE,KAdD;AAeXmD,MAAAA,QAAQ,EAAE,sCAfC;AAgBXC,MAAAA,UAAU,EAAE,cAhBD;AAkBXzC,MAAAA,OAAO,EAAE,EAlBE;AAmBXgB,MAAAA,WAAW,EAAE,EAnBF;AAoBXC,MAAAA,SAAS,EAAE,EApBA;AAsBXlC,MAAAA,GAAG,EAAE,EAtBM;AAuBXG,MAAAA,WAAW,EAAEvB,YAAY,CAACsG,eAAb,CAA6B/E,WAvB/B;AAwBXgF,MAAAA,kBAAkB,EAAEvG,YAAY,CAACsG,eAAb,CAA6BC,kBAxBtC;AAyBXjF,MAAAA,YAAY,EAAE,CAzBH;AA0BXiB,MAAAA,SAAS,EAAE,KA1BA;AA2BX0C,MAAAA,UAAU,EAAGzE,KAAK,CAACgG,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4CjG,KAAK,CAACgG,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4CjG,KAAK,CAACgG,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA2CjG,KAAK,CAACgG,IAAN,CAAWC;AA3B7I,KAAb;AA6BA,SAAKC,UAAL,GAAkB,EAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgBnB,OAAhB,EAAyB;AACvB,WAAKkB,UAAL,CAAgBE,IAAhB,CAAqB;AAAET,QAAAA,KAAK,EAAEQ,GAAG,CAACjB,MAAb;AAAqBjC,QAAAA,KAAK,EAAEkD;AAA5B,OAArB;AACD;;AACD,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBb,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKc,aAAL,GAAqB,KAAKA,aAAL,CAAmBd,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKe,MAAL,GAAc,KAAKA,MAAL,CAAYf,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClB,SAAK9D,WAAL;AACA,SAAK+D,YAAL;AACD;;AAED/D,EAAAA,WAAW,GAAG;AACZrD,IAAAA,GAAG,CAAC+C,IAAJ,CAAS,cAAT,EAAyB,EAAzB,EAA6BE,IAA7B,CAAkCC,GAAG,IAAI;AACvC,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACf,YAAIkE,aAAa,GAAG,EAApB;AACA5B,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BxC,GAAG,CAACoC,IAA9B;;AAEA,aAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpE,GAAG,CAACoC,IAAJ,CAAShE,MAA7B,EAAqCgG,CAAC,EAAtC,EAA0C;AACxCD,UAAAA,aAAa,CAACN,IAAd,CAAmB;AACjBf,YAAAA,EAAE,EAAE,CAACsB,CAAC,GAAG,CAAL,CADa;AAEjB/E,YAAAA,MAAM,EAAEW,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYC,MAFH;AAGjBlF,YAAAA,QAAQ,EAAEa,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYE,QAHL;AAIjBC,YAAAA,IAAI,EAAEvE,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYI,UAJD;AAKjBxF,YAAAA,KAAK,EAAEgB,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYK,SALF;AAMjB5F,YAAAA,IAAI,EAAEmB,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYM,QAND;AAOjBC,YAAAA,OAAO,EAAE3H,MAAM,CAACgD,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYQ,SAAb,CAAN,CAA8BC,MAA9B,CAAqC5H,YAAY,CAAC6H,UAAb,CAAwBC,QAA7D,CAPQ;AAQjBC,YAAAA,OAAO,EAAEhF,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYa,SAAZ,IAAyB,IAAzB,GAAgCjI,MAAM,CAACgD,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYa,SAAb,CAAN,CAA8BJ,MAA9B,CAAqC5H,YAAY,CAAC6H,UAAb,CAAwBC,QAA7D,CAAhC,GAAyG,EARjG;AASjBxF,YAAAA,IAAI,EAAES,GAAG,CAACoC,IAAJ,CAASgC,CAAT,EAAYc;AATD,WAAnB;AAWD;;AACD,YAAIjH,QAAQ,GAAI,KAAKC,KAAL,CAAWM,WAAX,GAAyB2F,aAAa,CAAC/F,MAAxC,GAAkD,KAAKF,KAAL,CAAWM,WAA7D,GAA2E2F,aAAa,CAAC/F,MAAxG;AACA,YAAIC,GAAG,GAAG,UAAUJ,QAAV,GAAqB,UAArB,GAAkCkG,aAAa,CAAC/F,MAAhD,GAAyD,UAAnE;AACA,aAAKE,QAAL,CAAc;AAAEH,UAAAA,GAAG,EAAEgG,aAAP;AAAsB9F,UAAAA,GAAG,EAAEA;AAA3B,SAAd;AACD,OApBD,MAoBO,CAEN;AACF,KAxBD,EAwBG+B,KAxBH,CAwBSC,GAAG,IAAI,CAEf,CA1BD;AA2BD;;AAED6D,EAAAA,YAAY,GAAG;AACb,QAAI;AACF,YAAM9B,IAAI,GAAG;AACX+C,QAAAA,aAAa,EAAE;AADJ,OAAb;AAGArI,MAAAA,GAAG,CAAC+C,IAAJ,CAAS9C,WAAW,CAACqI,IAAZ,CAAiBC,cAA1B,EAA0CjD,IAA1C,EAAgDrC,IAAhD,CAAqDC,GAAG,IAAI;AAC1DuC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBxC,GAAxB;;AAEA,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACf,eAAK3B,QAAL,CAAc;AAAEgF,YAAAA,IAAI,EAAEtD,GAAG,CAACoC;AAAZ,WAAd;AACD,SAFD,MAEO,CAEN;AACF,OARD,EAQGhC,KARH,CAQSC,GAAG,IAAI,CAEf,CAVD;AAWD,KAfD,CAeE,OAAOiF,KAAP,EAAc,CAEf;AACF;;AAwDDC,EAAAA,cAAc,CAACC,UAAD,EAAa,CAC1B;;AAEDxC,EAAAA,YAAY,CAACyC,OAAD,EAAUC,MAAV,EAAkB;AAC5B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,CADT;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,WAAW,EAAC,EAJd;AAKE,MAAA,OAAO,EAAE,KAAKH,cALhB;AAME,MAAA,QAAQ,EAAE,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGE,OAAO,CAAC5G,IAPX,CADK,CAAP;AAWD;;AAEDqE,EAAAA,cAAc,CAACuC,OAAD,EAAUC,MAAV,EAAkB;AAC9B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,cAA3B;AAA0C,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjD;AAAgE,MAAA,OAAO,EAAC,MAAxE;AAA+E,MAAA,cAAc,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA/F;AAAuH,MAAA,OAAO,EAAE,MAAM,KAAKnH,WAAL,CAAiBgH,OAAjB,CAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,eAEL,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,aAA3B;AAAyC,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAhD;AAA+D,MAAA,OAAO,EAAC,QAAvE;AAAgF,MAAA,cAAc,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAhG;AAAwH,MAAA,OAAO,EAAE,MAAM,KAAKlG,gBAAL,CAAsB+F,OAAtB,CAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAID;;AAED1B,EAAAA,aAAa,CAAC7C,KAAD,EAAQ;AACnB,SAAK2E,EAAL,CAAQhD,MAAR,CAAe3B,KAAK,CAACR,KAArB,EAA4B,OAA5B,EAAqC,QAArC;AACA,SAAKpC,QAAL,CAAc;AAAEwH,MAAAA,KAAK,EAAE5E,KAAK,CAACR;AAAf,KAAd;AACD;;AAEDsD,EAAAA,MAAM,GAAG;AACP,SAAK6B,EAAL,CAAQE,SAAR;AACD;;AAEDpG,EAAAA,SAAS,GAAG;AACV,SAAKrB,QAAL,CAAc;AAAEsC,MAAAA,WAAW,EAAE,CAAC,KAAK1C,KAAL,CAAW0C;AAA3B,KAAd;AACD;;AAMDkD,EAAAA,cAAc,CAAC5C,KAAD,EAAQ;AACpB,QAAI8E,YAAY,GAAG9E,KAAK,CAACR,KAAN,CAAYuF,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAE,aAAOD,CAAC,CAACpD,EAAF,GAAOqD,CAAC,CAACrD,EAAhB;AAAoB,KAAjD,CAAnB;AACA,SAAKxE,QAAL,CAAc;AAAE+E,MAAAA,IAAI,EAAE2C;AAAR,KAAd;AACD;;AAqCDI,EAAAA,UAAU,CAAC1F,KAAD,EAAQ2F,IAAR,EAAc;AACtB,QAAI3F,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,IAA9B,EAAoC;AAClC,WAAKpC,QAAL,CAAc;AAAEc,QAAAA,cAAc,EAAE,IAAlB;AAAwBF,QAAAA,SAAS,EAAEwB;AAAnC,OAAd;AACA,WAAKjB,IAAL,CAAU,WAAV,EAAuB,IAAvB;AACD,KAHD,MAGO;AACL,WAAKnB,QAAL,CAAc;AAAEc,QAAAA,cAAc,EAAE,KAAlB;AAAyBF,QAAAA,SAAS,EAAEwB;AAApC,OAAd;AACA,WAAKjB,IAAL,CAAU,WAAV,EAAuB,KAAvB;AACD;AACF;;AA8CDA,EAAAA,IAAI,CAACiD,KAAD,EAAQ4D,SAAR,EAAmB;AACrB,QAAIA,SAAJ,EAAe;AACb9F,MAAAA,QAAQ,CAACC,cAAT,CAAwBiC,KAAxB,EAA+B6D,SAA/B,GAA2C,yBAA3C;AACD,KAFD,MAEO;AACL/F,MAAAA,QAAQ,CAACC,cAAT,CAAwBiC,KAAxB,EAA+B6D,SAA/B,GAA2C,cAA3C;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI7D,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACX,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAC,IAAhB;AAAqB,MAAA,KAAK,EAAE;AAAE8D,QAAAA,OAAO,EAAE;AAAX,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKxI,KAAL,CAAWsB,SAA1C,WADF,CADF,CADF,eAME;AAAM,MAAA,QAAQ,EAAE,KAAKmH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,EAAE,EAAC,YAAxC;AAAqD,MAAA,QAAQ,EAAEjJ,CAAC,IAAI,KAAKkD,YAAL,CAAkBlD,CAAlB,CAApE;AAA0F,MAAA,WAAW,EAAC,YAAtG;AAAmH,MAAA,IAAI,EAAC,IAAxH;AAA6H,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWa,UAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,CADF,CADF,eAQE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,WAA1B;AAAsC,MAAA,EAAE,EAAC,WAAzC;AAAqD,MAAA,QAAQ,EAAGpB,CAAD,IAAO,KAAKyI,UAAL,CAAgBzI,CAAC,CAACmD,MAAF,CAASJ,KAAzB,EAAgC,WAAhC,CAAtE;AAAoH,MAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWgB,SAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEG,KAAKhB,KAAL,CAAWoF,IAAX,CAAgBuD,GAAhB,CAAoB,CAACC,EAAD,EAAK1C,CAAL,KAAW;AAC9B,0BAAQ;AAAQ,QAAA,KAAK,EAAE0C,EAAE,CAACC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCD,EAAE,CAACE,aAApC,CAAR;AACD,KAFA,CAFH,CAFF,eASE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCATF,CADF,CARF,CADF,eAuBE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,kBAA5B;AAA+C,MAAA,EAAE,EAAC,kBAAlD;AAAqE,MAAA,IAAI,EAAE,CAA3E;AAA8E,MAAA,IAAI,EAAE,EAApF;AAAwF,MAAA,WAAW,EAAC,mBAApG;AAAwH,MAAA,KAAK,EAAE,KAAK1I,KAAL,CAAWU,gBAA1I;AAA4J,MAAA,QAAQ,EAAEjB,CAAC,IAAI,KAAKkD,YAAL,CAAkBlD,CAAlB,CAA3K;AAAiM,MAAA,UAAU,EAAE,IAA7M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CADF,CADF,eAQE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAoC,MAAA,EAAE,EAAC,WAAvC;AAAmD,MAAA,QAAQ,EAAE,KAAKsD,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CARF,CAvBF,eAsCE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAK/C,KAAL,CAAWS,UAAZ,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAK8C,SAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsD;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,YADF,EACiG,GADjG,eAEE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKvB,KAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD;AAAG,MAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,YAFF,CADF,CAFH,gBASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKuB,SAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsD;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,UADF,EAC+F,GAD/F,eAEE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKvB,KAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD;AAAG,MAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,YAFF,CADF,CAVN,CADF,CAtCF,CANF,CADF,eAoEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAE+G,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAK/I,KAAL,CAAWmF,IAA/B;AAAqC,MAAA,OAAO,EAAE,KAAKM,UAAnD;AAA+D,MAAA,QAAQ,EAAE,KAAKG,cAA9E;AAA8F,MAAA,KAAK,EAAE;AAAEoD,QAAAA,KAAK,EAAE;AAAT,OAArG;AAAwH,MAAA,gBAAgB,EAAE,IAA1I;AAAgJ,MAAA,WAAW,EAAEjK,YAAY,CAACsG,eAAb,CAA6B4D,gBAA1L;AAA4M,MAAA,OAAO,EAAC,oBAApN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CApEF,eAyEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CADF,CAzEF,eAgFE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAE,qBAAa;AAAf,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAGxJ,CAAD,IAAO,KAAKW,QAAL,CAAc;AAAE8I,QAAAA,YAAY,EAAEzJ,CAAC,CAACmD,MAAF,CAASJ;AAAzB,OAAd,CAAzC;AAA0F,MAAA,WAAW,EAAC,eAAtG;AAAsH,MAAA,IAAI,EAAC,IAA3H;AAAgI,MAAA,KAAK,EAAE;AAAE2G,QAAAA,YAAY,EAAE;AAAhB,OAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,KAAK,EAAE;AAAE1B,QAAAA,MAAM,EAAE;AAAV,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,qBAA3B;AAAiD,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAxD;AAAuE,MAAA,OAAO,EAAC,eAA/E;AAA+F,MAAA,cAAc,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA/G;AAAuI,MAAA,OAAO,EAAE,KAAK5B,MAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CAhFF,CADW,CAAb;AA2FA,QAAIvB,OAAO,GAAG,KAAKvE,KAAL,CAAWmF,IAAX,CAAgBwD,GAAhB,CAAoB,CAACjD,GAAD,EAAMQ,CAAN,KAAY;AAC5C,0BAAO,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAER,GAAG,CAAClB,KAAnB;AAA0B,QAAA,MAAM,EAAEkB,GAAG,CAACjB,MAAtC;AAA8C,QAAA,IAAI,EAAEiB,GAAG,CAACb,IAAxD;AAA8D,QAAA,QAAQ,EAAEa,GAAG,CAAChB,QAA5E;AAAsF,QAAA,MAAM,EAAEgB,GAAG,CAACf,MAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFa,CAAd;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAGyE,EAAD,IAAQ,KAAKzB,EAAL,GAAUyB,EAAlC;AAAsC,MAAA,KAAK,EAAE,KAAKpJ,KAAL,CAAWC,GAAxD;AACE,MAAA,yBAAyB,EAAE,KAAKD,KAAL,CAAWG,GADxC;AAC6C,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,YAD/D;AAC6E,MAAA,MAAM,EAAGZ,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB,CAD5F;AAEE,MAAA,SAAS,EAAE,IAFb;AAEmB,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWM,WAFpC;AAEiD,MAAA,MAAM,EAAEmE,MAFzD;AAEiE,MAAA,cAAc,EAAC,OAFhF;AAGE,MAAA,iBAAiB,EAAC,uGAHpB;AAIE,MAAA,kBAAkB,EAAE,KAAKzE,KAAL,CAAWsF,kBAJjC;AAIqD,MAAA,YAAY,EAAE,KAAKtF,KAAL,CAAWkJ,YAJ9E;AAI4F,MAAA,YAAY,EAAC,kBAJzG;AAKE,MAAA,UAAU,EAAE,IALd;AAKoB,MAAA,gBAAgB,EAAE,IALtC;AAK4C,MAAA,gBAAgB,EAAC,KAL7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG3E,OANH,CADF,CADF,eAYE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKvE,KAAL,CAAW0C,WAA1B;AAAuC,MAAA,MAAM,EAAE,KAAKD,WAApD;AACE,MAAA,SAAS,EAAE,cAAc,KAAKlD,KAAL,CAAW8I,SADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAK5F,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAHF,eAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKf,WAAL,CAAiB,KAAK1B,KAAL,CAAWmB,MAA5B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyE;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzE,SADF,EACiH,GADjH,eAEE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,KAAKsB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgD;AAAG,MAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhD,YAFF,CANF,CAZF,CADF;AA2BD;;AAjb2B,C,CAob9B;;;AACA,eAAetD,eAAe,GAAGE,KAAH,CAA9B","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from 'primereact/button';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\r\nimport api from '../../utils/apiClient';\r\nimport APIConstant from '../../utils/constants';\r\nimport moment from 'moment';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { apiBase } from '../../utils/config';\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n\r\nclass Notes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"props\",props);\r\n\r\n    let columns = [\r\n      { field: \"id\", header: \"Id\", sortable: true, filter: false, id: 0 },\r\n      { field: \"category\", header: \"category\", sortable: true, filter: true, id: 1 },\r\n      { field: \"user\", header: \"User\", sortable: true, filter: true, id: 2 },\r\n      { field: \"title\", header: \"Title\", sortable: true, filter: true, id: 3 },\r\n      { field: \"note\", body: this.noteTemplate.bind(this), header: \"note\", sortable: true, filter: true, id: 4 },\r\n      { field: \"created\", header: \"Created\", sortable: true, filter: false, id: 5 },\r\n      { field: \"updated\", header: \"Updated\", sortable: true, filter: false, id: 6 },\r\n      { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, id: 7 }\r\n    ];\r\n    const NType = [\r\n      { label: 'Policy', value: 'Policy' },\r\n      { label: 'Claim', value: 'Claim' }\r\n    ];\r\n    this.state = {\r\n      toggleModal: false,\r\n      cols: columns,\r\n      arr: [],\r\n      isImportant: 1,\r\n      Notes: '',\r\n      Type: [],\r\n      notesType: '',\r\n      notestitle: '',\r\n      notesdescription: '',\r\n      notestitleError: true,\r\n      notesdescriptionError: true,\r\n      NotesTypeError: true,\r\n      noteID: '',\r\n      isNoteEdit: false,\r\n      EntityId: 'fddf9f64-0f38-4ebb-81d4-0e52f548f549',\r\n      EntityType: 'Organization',\r\n\r\n      userImg: '',\r\n      userImgData: '',\r\n      noteaddon: '',\r\n\r\n      str: '',\r\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n      selectedPage: 0,\r\n      titleNote: \"Add\",\r\n      LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n    };\r\n    this.colOptions = [];\r\n    for (let col of columns) {\r\n      this.colOptions.push({ label: col.header, value: col });\r\n    }\r\n    this.onColumnToggle = this.onColumnToggle.bind(this);\r\n    this.onBrandChange = this.onBrandChange.bind(this);\r\n    this.export = this.export.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNoteList();\r\n    this.getNotesType();\r\n  }\r\n\r\n  getNoteList() {\r\n    api.post('api/getNotes', {}).then(res => {\r\n      if (res.success) {\r\n        var formattedData = [];\r\n        console.log('erfwefcafc', res.data);\r\n\r\n        for (var i = 0; i < res.data.length; i++) {\r\n          formattedData.push({\r\n            id: [i + 1],\r\n            noteID: res.data[i].NoteId,\r\n            category: res.data[i].NoteType,\r\n            user: res.data[i].EntityName,\r\n            title: res.data[i].NoteTitle,\r\n            note: res.data[i].NoteText,\r\n            created: moment(res.data[i].CreatedOn).format(CommonConfig.dateFormat.dateTime),\r\n            updated: res.data[i].UpdatedOn != null ? moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateTime) : '',\r\n            link: res.data[i].Link,\r\n          })\r\n        }\r\n        let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n        let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n        this.setState({ arr: formattedData, str: str });\r\n      } else {\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n    });\r\n  }\r\n\r\n  getNotesType() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'NOTETYPE'\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        console.log('NOTETYPE', res);\r\n\r\n        if (res.success) {\r\n          this.setState({ Type: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n\r\n      });\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  getPageString = (e) => {\r\n    let firstPage = e.first + 1;\r\n    let l = e.rows * (e.page + 1);\r\n    let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n    var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n    this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n  }\r\n\r\n  updateNotes = (rowdata) => {\r\n    this.setState({\r\n      isNoteEdit: true, notesdescription: rowdata.note, notesdescriptionError: false,\r\n      notestitle: rowdata.title, notestitleError: false,\r\n      notesType: rowdata.category, NotesTypeError: false,\r\n      noteID: rowdata.noteID,\r\n      userImg: apiBase + rowdata.link,\r\n      titleNote: \"Edit\"\r\n    });\r\n    this.show(\"notestitle\", false);\r\n    this.show(\"notesdescription\", false);\r\n    this.show('notesType', false);\r\n  }\r\n\r\n  DeleteNotesModal = (rowdata) => {\r\n    this.setState({ noteID: rowdata.noteID });\r\n    this.openModal(rowdata);\r\n  }\r\n\r\n  DeleteNotes = (noteID) => {\r\n    api.post('api/deleteNote', { noteId: noteID }).then(res => {\r\n      if (res.success) {\r\n        this.reset();\r\n        this.openModal();\r\n        toast.success('Notes deleted successful!');\r\n        this.getNoteList();\r\n      } else {\r\n\r\n      }\r\n    }).catch(err => {\r\n    });\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      isNoteEdit: false, notesdescription: '', notesdescriptionError: true,\r\n      notestitle: '', notestitleError: true,\r\n      notesType: '', NotesTypeError: true,\r\n      noteID: '', userImg: '', userImgData: '', noteaddon: '', titleNote: \"Add\"\r\n    });\r\n    this.show(\"notestitle\", false);\r\n    this.show(\"notesdescription\", false);\r\n    this.show('notesType', false);\r\n    document.getElementById(\"noteaddon\").value = null;\r\n  }\r\n\r\n  executeOnClick(isExpanded) {\r\n  }\r\n\r\n  noteTemplate(rowData, column) {\r\n    return <div>\r\n      <ShowMoreText\r\n        lines={3}\r\n        more='Show more'\r\n        less='Show less'\r\n        anchorClass=''\r\n        onClick={this.executeOnClick}\r\n        expanded={false}>\r\n        {rowData.note}\r\n      </ShowMoreText>\r\n    </div>;\r\n  }\r\n\r\n  actionTemplate(rowData, column) {\r\n    return <div>\r\n      <Button type=\"button\" icon=\"pi pi-pencil\" style={{ margin: 2 }} tooltip=\"Edit\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.updateNotes(rowData)}></Button>\r\n      <Button type=\"button\" icon=\"pi pi-trash\" style={{ margin: 2 }} tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.DeleteNotesModal(rowData)}></Button>\r\n    </div>;\r\n  }\r\n\r\n  onBrandChange(event) {\r\n    this.dt.filter(event.value, 'brand', 'equals');\r\n    this.setState({ brand: event.value });\r\n  }\r\n\r\n  export() {\r\n    this.dt.exportCSV();\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({ toggleModal: !this.state.toggleModal });\r\n  }\r\n\r\n  toggleLarge = () => {\r\n    this.setState({ toggleModal: false });\r\n  }\r\n\r\n  onColumnToggle(event) {\r\n    let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n    this.setState({ cols: valueInOrder });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if (e.target.name === 'notestitle') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ notestitleError: true });\r\n        this.show(\"notestitle\", true);\r\n      } else {\r\n        this.setState({ notestitleError: false, notestitle: e.target.value });\r\n        this.show(\"notestitle\", false);\r\n      }\r\n    }\r\n    if (e.target.name === 'notesdescription') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ notesdescriptionError: true });\r\n        this.show(\"notesdescription\", true);\r\n      } else {\r\n        this.setState({ notesdescriptionError: false, notesdescription: e.target.value });\r\n        this.show(\"notesdescription\", false);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectImage = (event) => {\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.setState({ userImgData: event.target.files[0] });\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.setState({ userImg: e.target.result });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n\r\n    }\r\n  }\r\n\r\n  selectType(value, type) {\r\n    if (value === '' || value === null) {\r\n      this.setState({ NotesTypeError: true, notesType: value });\r\n      this.show('notesType', true);\r\n    } else {\r\n      this.setState({ NotesTypeError: false, notesType: value });\r\n      this.show('notesType', false);\r\n    }\r\n  }\r\n\r\n  saveNotes = () => {\r\n    if (\r\n      this.state.notestitleError === false &&\r\n      this.state.NotesTypeError === false &&\r\n      this.state.notesdescriptionError === false\r\n    ) {\r\n      const NotesForm = new FormData();\r\n      NotesForm.append('noteId', this.state.noteID);\r\n      NotesForm.append('notetitle', this.state.notestitle.trim());\r\n      NotesForm.append('notesType', this.state.notesType);\r\n      NotesForm.append('notesdescription', this.state.notesdescription.trim());\r\n      NotesForm.append('entityid', this.state.EntityId);\r\n      NotesForm.append('entitytype', this.state.EntityType);\r\n      NotesForm.append('isflag', this.state.isImportant);\r\n      NotesForm.append('loggedInUserId', CommonConfig.loggedInUserId());\r\n      NotesForm.append('languageId', this.state.LanguageId);\r\n\r\n      if (this.state.userImgData && this.state.userImgData != '' && this.state.userImgData != undefined && this.state.userImgData != null) {\r\n        NotesForm.append('notesAddOn', this.state.userImgData);\r\n      }\r\n      api.post('api/addNotes', NotesForm).then(res => {\r\n\r\n        if (res.success) {\r\n          document.getElementById(\"noteaddon\").value = null;\r\n          this.reset();\r\n          if (res.data.affectedRows) {\r\n            toast.success('Notes updated successfully');\r\n          } else {\r\n            toast.success('Notes added successfully');\r\n          }\r\n          toast.success(res.message);\r\n          this.getNoteList();\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n      });\r\n    } else {\r\n      this.show(\"notestitle\", this.state.notestitleError);\r\n      this.show(\"notesType\", this.state.NotesTypeError);\r\n      this.show(\"notesdescription\", this.state.notesdescriptionError);\r\n    }\r\n  }\r\n\r\n  show(field, condition) {\r\n    if (condition) {\r\n      document.getElementById(field).className = \"form-control is-invalid\";\r\n    } else {\r\n      document.getElementById(field).className = \"form-control\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var header = <div>\r\n      <Row>\r\n        <Col xs=\"12\" md=\"12\" style={{ padding: 20 }}>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"12\">\r\n              <h4 style={{ float: 'left' }}>{this.state.titleNote} Notes</h4>\r\n            </Col>\r\n          </Row>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <Row style={{ marginTop: 10 }}>\r\n              <Col md=\"3\">\r\n                <div className=\"input-box\">\r\n                  <label>Note Title*</label>\r\n                  <Input type=\"text\" name=\"notestitle\" id=\"notestitle\" onChange={e => this.handleChange(e)} placeholder=\"Note Title\" size=\"30\" value={this.state.notestitle} />\r\n                  <em className=\"error invalid-feedback\"> Please enter note title </em>\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"input-box\">\r\n                  <label>Notes Type*</label>\r\n                  <Input type=\"select\" name=\"notesType\" id=\"notesType\" onChange={(e) => this.selectType(e.target.value, 'notesType')} value={this.state.notesType}>\r\n                    <option value=''>Select Notes Type</option>\r\n                    {this.state.Type.map((ct, i) => {\r\n                      return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\r\n                    })\r\n                    }\r\n                  </Input>\r\n                  <em className=\"error invalid-feedback\"> Please select note type </em>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 10 }}>\r\n              <Col md=\"9\">\r\n                <div className=\"input-box\">\r\n                  <label>Notes*</label>\r\n                  <Input type=\"textarea\" name=\"notesdescription\" id=\"notesdescription\" rows={5} cols={50} placeholder=\"please write note\" value={this.state.notesdescription} onChange={e => this.handleChange(e)} autoResize={true} />\r\n                  <em className=\"error invalid-feedback\"> Please enter note </em>\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"input-box\">\r\n                  <label>Notes Addon</label>\r\n                  <Input type=\"file\" name=\"noteaddon\" id=\"noteaddon\" onChange={this.selectImage} />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"text-center\">\r\n              <Col>\r\n                {(this.state.isNoteEdit) ?\r\n                  (\r\n                    <div>\r\n                      <div className=\"pull-right\">\r\n                        <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Update</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <div className=\"pull-right\">\r\n                        <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Save</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                }\r\n              </Col>\r\n            </Row>\r\n          </form>\r\n        </Col>\r\n        <Col xs=\"4\" md=\"4\">\r\n          <div style={{ textAlign: 'left' }}>\r\n            <MultiSelect value={this.state.cols} options={this.colOptions} onChange={this.onColumnToggle} style={{ width: '50px' }} fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" />\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"4\" md=\"4\">\r\n          <div className=\"content-section introduction\">\r\n            <div className=\"feature-intro\">\r\n              <h1>Notes</h1>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs=\"4\" md=\"4\">\r\n          <div style={{ 'textAlign': 'right' }}>\r\n            <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" size=\"30\" style={{ marginBottom: 10 }} />\r\n            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n            <Button type=\"button\" icon=\"pi pi-external-link\" style={{ margin: 2 }} tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export}></Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>;\r\n\r\n    let columns = this.state.cols.map((col, i) => {\r\n      return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} />;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"table-custom\">\r\n          <DataTable ref={(el) => this.dt = el} value={this.state.arr}\r\n            currentPageReportTemplate={this.state.str} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n            paginator={true} rows={this.state.rowsPerPage} header={header} exportFilename=\"Notes\"\r\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown \"\r\n            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n            responsive={true} resizableColumns={true} columnResizeMode=\"fit\">\r\n            {columns}\r\n          </DataTable>\r\n        </div>\r\n\r\n        <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n          className={'modal-lg ' + this.props.className}>\r\n          <ModalHeader toggle={this.toggleLarge}>Delete Notes</ModalHeader>\r\n          <ModalBody>\r\n            Are you sure you want to delete note?\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <BTN color=\"success\" onClick={() => this.DeleteNotes(this.state.noteID)}><i class=\"fa fa-check\"></i> Yes</BTN>{' '}\r\n            <BTN color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Notes;\r\nexport default withTranslation()(Notes);"]},"metadata":{},"sourceType":"module"}