{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/SubAgentPaymentReport.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, InputGroup, CardBody, Row, Col } from 'reactstrap';\nimport APIConstant from '../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\n\nclass SubAgentPaymentReport extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'tillDate') {\n        this.setState({\n          tillDate: e.target.value,\n          tillDateError: false\n        });\n        this.show('tillDate', false, 'tillDateError', '');\n      }\n\n      if (e.target.name === 'newEntryDate') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            newEntryDateError: true\n          });\n          this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\n        } else {\n          this.setState({\n            newEntryDateError: false,\n            newEntryDate: e.target.value\n          });\n          this.show(\"newEntryDate\", false, \"newEntryDateError\", \"\");\n        }\n      }\n    };\n\n    let columns = [{\n      field: \"TransactionDate\",\n      header: \"TransactionDate\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"UniqueReferenceId\",\n      header: \"UniqueReferenceId\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"TotalAmountPaidInBatch\",\n      header: \"TotalAmountPaidInBatch\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"PaymentMode\",\n      header: \"PaymentMode\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"PolicyNumber\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"ClientName\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ClientDue\",\n      header: \"ClientDue\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Commission\",\n      header: \"Commission\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"NetDue\",\n      header: \"NetDue\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AmountPaid\",\n      header: \"AmountPaid\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"PolicyAccountReferenceId\",\n      header: \"PolicyAccountReferenceId\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      showcol2: false,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      selected: {},\n      selectedPolicy: 0,\n      selectedAgent: '',\n      selectAll: 0,\n      newEntryDate: '',\n      newEntryDateError: false,\n      paymentMode: '',\n      paymentModearr: [],\n      paymentModeError: false,\n      note: '',\n      DebtorType: 'SubAgent',\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      tillDate: moment().format(\"YYYY-MM\"),\n      tillDateError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.getOrganazationData('SubAgent');\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.arr.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  DateDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, rowData.RenewalDate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, rowData.InceptionDate));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  SubAgentPaymentReport() {\n    var data = {\n      DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\n      agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\n      tillDate: this.state.tillDate ? this.state.tillDate : ''\n    };\n    api.post('api/SubAgentPaymentReport', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          var AmountPaid = 0;\n          var ClientDue = 0;\n          var Commission = 0;\n          var NetDue = 0;\n          var TotalAmountPaidInBatch = 0;\n\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            formattedData.push({\n              id: i,\n              AmountPaid: tempData.AmountPaid,\n              ClientDue: tempData.ClientDue,\n              ClientName: tempData.ClientName,\n              Commission: tempData.Commission,\n              NetDue: tempData.NetDue,\n              PaymentMode: tempData.PaymentMode,\n              PolicyAccountReferenceId: tempData.PolicyAccountReferenceId,\n              PolicyNumber: tempData.PolicyNumber,\n              TotalAmountPaidInBatch: tempData.TotalAmountPaidInBatch,\n              TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\n              UniqueReferenceId: tempData.UniqueReferenceId\n            });\n            AmountPaid = AmountPaid + tempData.AmountPaid;\n            Commission = Commission + tempData.Commission;\n            ClientDue = ClientDue + tempData.ClientDue;\n            NetDue = NetDue + tempData.NetDue;\n            TotalAmountPaidInBatch = TotalAmountPaidInBatch + tempData.TotalAmountPaidInBatch;\n          }\n\n          formattedData.push({\n            TransactionDate: 'Total',\n            AmountPaid: parseFloat(AmountPaid).toFixed(2),\n            ClientDue: parseFloat(ClientDue).toFixed(2),\n            Commission: parseFloat(Commission).toFixed(2),\n            NetDue: parseFloat(NetDue).toFixed(2),\n            TotalAmountPaidInBatch: parseFloat(TotalAmountPaidInBatch).toFixed(2)\n          });\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    if (this.state.radioSelected || this.state.DebtorType == '' || this.state.agentinfo == '') {\n      toast.error(\"Select Sub Agent First\");\n    } else {\n      this.SubAgentPaymentReport();\n    }\n  }\n\n  onRadioBtnClick(e) {\n    this.setState({\n      radioSelected: e.target.checked,\n      agentinfo: ''\n    });\n    this.state.agentinfo = '';\n    this.SubAgentPaymentReport();\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'paymentMode') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          paymentModeError: true,\n          paymentMode: value\n        });\n        this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\n      } else {\n        this.setState({\n          paymentModeError: false,\n          paymentMode: value\n        });\n        this.show('paymentMode', false, \"paymentModeError\", \"\");\n      }\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        radioSelected: false,\n        DebtorType: 'SubAgent'\n      });\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = '';\n    columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 24\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }\n    }, \"Sub Agent Payment Report\"), /*#__PURE__*/React.createElement(\"div\", {\n      md: \"3\",\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 37\n      }\n    }, \"Search Sub Agent\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 45\n      }\n    }, \"Select Agent\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"agentinfo\",\n      id: \"agentinfo\",\n      options: this.state.sourceList,\n      value: this.state.agentinfo,\n      onChange: data => this.selectType(data, 'agentinfo'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 49\n      }\n    }, \" Search \")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Sub Agent Payment Report\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(SubAgentPaymentReport);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/SubAgentPaymentReport.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","InputGroup","CardBody","Row","Col","APIConstant","Modal","ModalBody","ModalHeader","ModalFooter","toast","SearchBox","SubAgentPaymentReport","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","tillDate","tillDateError","show","isEmpty","newEntryDateError","newEntryDate","columns","field","header","sortable","filter","id","style","LanguageId","i18n","language","cols","showcol2","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","selected","selectedPolicy","selectedAgent","selectAll","paymentMode","paymentModearr","paymentModeError","note","DebtorType","DebtorTypeError","agentinfo","agentinfoError","format","colOptions","col","push","label","export","bind","componentDidMount","getOrganazationData","toggleRow","newSelected","Object","assign","actionTemplate","rowData","column","toggleSelectAll","forEach","x","DateDetails","RenewalDate","InceptionDate","getDropDownValues","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","formattedData","dataLength","AmountPaid","ClientDue","Commission","NetDue","TotalAmountPaidInBatch","i","tempData","ClientName","PaymentMode","PolicyAccountReferenceId","PolicyNumber","TransactionDate","UniqueReferenceId","parseFloat","toFixed","dt","exportCSV","filterData","radioSelected","onRadioBtnClick","checked","selectType","type","ContactType","OrganizationName","OrganizationId","sourceList","console","log","condition","errorField","message","document","getElementById","className","innerHTML","render","t","map","body","filterMatchMode","columnToggleIcon","position","onColumnToggle","width","marginRight","custom","float","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, InputGroup, CardBody, Row, Col } from 'reactstrap';\r\nimport APIConstant from '../../utils/constants';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\r\n\r\nclass SubAgentPaymentReport extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"TransactionDate\", header: \"TransactionDate\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"UniqueReferenceId\", header: \"UniqueReferenceId\", sortable: true, filter: true, id: 1, style: { 'width': '60px' } },\r\n            { field: \"TotalAmountPaidInBatch\", header: \"TotalAmountPaidInBatch\", sortable: true, filter: true, id: 2, style: { 'width': '80px' } },\r\n            { field: \"PaymentMode\", header: \"PaymentMode\", sortable: true, filter: true, id: 3, style: { 'width': '80px' } },\r\n            { field: \"PolicyNumber\", header: \"PolicyNumber\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            { field: \"ClientName\", header: \"ClientName\", sortable: true, filter: true, id: 5, style: { 'width': '100px' } },\r\n            { field: \"ClientDue\", header: \"ClientDue\", sortable: true, filter: true, id: 6, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Commission\", header: \"Commission\", sortable: true, filter: true, id: 7, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"NetDue\", header: \"NetDue\", sortable: true, filter: true, id: 8, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AmountPaid\", header: \"AmountPaid\", sortable: true, filter: true, id: 9, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"PolicyAccountReferenceId\", header: \"PolicyAccountReferenceId\", sortable: true, filter: true, id: 12, style: { 'width': '60px', 'textAlign': 'right' } },\r\n        ];\r\n     \r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            showcol2: false,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            newEntryDate: '',\r\n            newEntryDateError: false,\r\n            paymentMode: '',\r\n            paymentModearr: [],\r\n            paymentModeError: false,\r\n            note: '',\r\n            DebtorType: 'SubAgent',\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            tillDate: moment().format(\"YYYY-MM\"),\r\n            tillDateError: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrganazationData('SubAgent');\r\n    }\r\n\r\n\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n\r\n    DateDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.RenewalDate}</p>\r\n                <p>{rowData.InceptionDate}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    SubAgentPaymentReport() {\r\n        var data = {\r\n            DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\r\n            agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\r\n            tillDate: this.state.tillDate ? this.state.tillDate : ''\r\n        };\r\n        api.post('api/SubAgentPaymentReport', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n\r\n                    var AmountPaid = 0;\r\n                    var ClientDue = 0;\r\n                    var Commission = 0;\r\n                    var NetDue = 0;\r\n                    var TotalAmountPaidInBatch = 0;\r\n\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        formattedData.push({\r\n                            id: i,\r\n                            AmountPaid: tempData.AmountPaid,\r\n                            ClientDue: tempData.ClientDue,\r\n                            ClientName: tempData.ClientName,\r\n                            Commission: tempData.Commission,\r\n                            NetDue: tempData.NetDue,\r\n                            PaymentMode: tempData.PaymentMode,\r\n                            PolicyAccountReferenceId: tempData.PolicyAccountReferenceId,\r\n                            PolicyNumber: tempData.PolicyNumber,\r\n                            TotalAmountPaidInBatch: tempData.TotalAmountPaidInBatch,\r\n                            TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\r\n                            UniqueReferenceId: tempData.UniqueReferenceId,\r\n                        });\r\n                        AmountPaid = AmountPaid + tempData.AmountPaid;\r\n                        Commission = Commission + tempData.Commission;\r\n                        ClientDue = ClientDue + tempData.ClientDue;\r\n                        NetDue = NetDue + tempData.NetDue;\r\n                        TotalAmountPaidInBatch = TotalAmountPaidInBatch + tempData.TotalAmountPaidInBatch;\r\n                    }\r\n                    formattedData.push({\r\n                        TransactionDate: 'Total',\r\n                        AmountPaid: parseFloat(AmountPaid).toFixed(2),\r\n                        ClientDue: parseFloat(ClientDue).toFixed(2),\r\n                        Commission: parseFloat(Commission).toFixed(2),\r\n                        NetDue: parseFloat(NetDue).toFixed(2),\r\n                        TotalAmountPaidInBatch: parseFloat(TotalAmountPaidInBatch).toFixed(2)\r\n                    });\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        if (this.state.radioSelected || this.state.DebtorType == '' || this.state.agentinfo == '') {\r\n            toast.error(\"Select Sub Agent First\");\r\n        } else {\r\n            this.SubAgentPaymentReport();\r\n        }\r\n    }\r\n    onRadioBtnClick(e) {\r\n        this.setState({\r\n            radioSelected: e.target.checked,\r\n            agentinfo: ''\r\n        });\r\n        this.state.agentinfo = '';\r\n        this.SubAgentPaymentReport();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'tillDate') {\r\n            this.setState({ tillDate: e.target.value, tillDateError: false });\r\n            this.show('tillDate', false, 'tillDateError', '');\r\n\r\n        }\r\n        if (e.target.name === 'newEntryDate') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ newEntryDateError: true });\r\n                this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\r\n            } else {\r\n                this.setState({ newEntryDateError: false, newEntryDate: e.target.value });\r\n                this.show(\"newEntryDate\", false, \"newEntryDateError\", \"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n        if (type === 'paymentMode') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ paymentModeError: true, paymentMode: value });\r\n                this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\r\n            } else {\r\n                this.setState({ paymentModeError: false, paymentMode: value });\r\n                this.show('paymentMode', false, \"paymentModeError\", \"\");\r\n\r\n            }\r\n        }\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, radioSelected: false, DebtorType: 'SubAgent' });\r\n\r\n        }\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n        let columns = '';\r\n      \r\n            columns = this.state.cols.map((col, i) => {\r\n                return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n                />;\r\n            });\r\n            return (\r\n                <div>\r\n                    <div className=\"basic-header\">\r\n                        <h1>Sub Agent Payment Report</h1>\r\n                        <div md=\"3\" className=\"header-right-option\" >\r\n                            <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                                fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                                onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                            />\r\n\r\n                            <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-box\" id=\"accordion\">\r\n                        <Card className=\"mb-0\">\r\n                            <CardHeader id=\"headingOne\">\r\n                                <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                    <h5 className=\"m-0 p-0\">\r\n                                        Search Sub Agent\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                    </h5>\r\n                                </BTN>\r\n                            </CardHeader>\r\n                            <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                                <CardBody>\r\n                                    <div className=\"filter-data\">\r\n                                        <Row> <Col md=\"3\">\r\n                                            <label>Select Agent</label>\r\n                                            <Select name=\"agentinfo\" id=\"agentinfo\" options={this.state.sourceList}\r\n                                                value={this.state.agentinfo} onChange={(data) => this.selectType(data, 'agentinfo')}\r\n                                            />\r\n                                        </Col>\r\n                                         {/* <Col md=\"3\">\r\n                                                <label>\r\n                                                    <Input type=\"checkbox\" name=\"radioSelected\"\r\n                                                        checked={this.state.radioSelected}\r\n                                                        value={this.state.radioSelected}\r\n                                                        onChange={(e) => this.onRadioBtnClick(e)}\r\n                                                    /> All Agent</label>\r\n                                            </Col> */}\r\n                                            <Col md=\"2\">\r\n                                                <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Collapse>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"table-custom\">\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                            paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Sub Agent Payment Report\"\r\n                            currentPageReportTemplate={this.state.str}\r\n                            scrollable={true}\r\n                            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                            responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                            {columns}\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    export default withTranslation()(SubAgentPaymentReport);\r\n"]},"metadata":{},"sourceType":"module"}