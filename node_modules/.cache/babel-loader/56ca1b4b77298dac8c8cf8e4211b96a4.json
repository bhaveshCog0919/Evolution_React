{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/NoClaimBonus/NoClaimBonus.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport { CommonConfig } from '../../../utils/constants';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport moment from 'moment';\n\nclass NoClaimBonus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.noClaimBonusList.length ? l : this.state.noClaimBonusList.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.noClaimBonusList.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.edit = rowData => {\n      this.setState({\n        heading: 'Update',\n        buttonName: 'Update',\n        toastName: 'Updated',\n        years: rowData.years,\n        discount: rowData.discount,\n        NoClaimBonusId: rowData.NoClaimBonusId,\n        // effectiveDate: rowData.effectiveDate,\n        effectiveDateError: false,\n        yearsError: false,\n        discountError: false,\n        primary: true\n      });\n    };\n\n    this.openDeleteModal = rowData => {\n      this.setState({\n        toggleModal: true,\n        NoClaimBonusId: rowData.NoClaimBonusId,\n        years: rowData.years\n      });\n    };\n\n    this.goToHistoryPage = rowData => {\n      console.log(\"rowData\", rowData);\n      var Id = rowData.NoClaimBonusId;\n      this.props.history.push({\n        pathname: '/Master/NoClaimBonusHistory/' + Id,\n        state: {\n          Id: Id\n        }\n      });\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false,\n        years: '',\n        NoClaimBonusId: ''\n      });\n    };\n\n    this.Save = () => {\n      // console.log(\"this.state.noClaimBonusList...\", this.state.noClaimBonusList);\n      const {\n        t\n      } = this.props;\n\n      if (this.state.yearsError === false && this.state.discountError === false && this.state.effectiveDateError === false) {\n        let checkNCBYears;\n\n        if (this.state.buttonName === \"Save\") {\n          checkNCBYears = this.state.noClaimBonusList.filter(x => x.years === parseInt(this.state.years));\n\n          if (checkNCBYears.length) {\n            toast.error(t(\"masterNoClaimBonus:Toast.error\"));\n            return null;\n          }\n        }\n\n        if (this.state.buttonName === \"Update\") {\n          let array = this.state.noClaimBonusList.filter(x => x.NoClaimBonusId !== this.state.NoClaimBonusId);\n          checkNCBYears = array.filter(x => x.years === parseInt(this.state.years));\n\n          if (checkNCBYears.length) {\n            toast.error(t(\"masterNoClaimBonus:Toast.error\"));\n            return null;\n          }\n        }\n\n        let data = {\n          NoClaimBonusId: this.state.NoClaimBonusId,\n          NCBYears: this.state.years,\n          NCBDiscount: this.state.discount,\n          LanguageId: this.state.LanguageId,\n          effectiveDate: this.state.effectiveDate,\n          CreatedBy: CommonConfig.loggedInUserId()\n        };\n        console.log('data', data);\n        api.post('api/addUpdateNoClaimBonus', data).then(res => {\n          if (res.success) {\n            toast.success(t(\"masterNoClaimBonus:Toast.\" + this.state.toastName + \"\"));\n            this.reset();\n            this.getNoClaimBonusList();\n          } else {\n            toast.error(res.data.message);\n          }\n        }).catch(err => {});\n      } else {\n        this.show(\"years\", this.state.yearsError);\n        this.show(\"discount\", this.state.discountError);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'years') {\n        if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\n          this.setState({\n            yearsError: true\n          });\n          this.show(\"years\", true);\n        } else {\n          let invSpace = CommonConfig.RegExp.number;\n          let years = e.target.value;\n\n          if (!invSpace.test(years)) {\n            this.setState({\n              yearsError: true\n            });\n            this.show(\"years\", true);\n          } else {\n            this.setState({\n              yearsError: false,\n              years: e.target.value\n            });\n            this.show(\"years\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'discount') {\n        if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\n          this.setState({\n            discountError: true\n          });\n          this.show(\"discount\", true);\n        } else {\n          let invSpace = CommonConfig.RegExp.percentageWithNegative;\n          let discount = e.target.value;\n\n          if (!invSpace.test(discount)) {\n            this.setState({\n              discountError: true\n            });\n            this.show(\"discount\", true);\n          } else {\n            this.setState({\n              discountError: false,\n              discount: e.target.value\n            });\n            this.show(\"discount\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'effectiveDate') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            effectiveDateError: true\n          });\n          this.show(\"effectiveDate\", true);\n        } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\n          this.setState({\n            effectiveDateError: true\n          });\n          this.show(\"effectiveDate\", true);\n        } else {\n          this.setState({\n            effectiveDateError: false,\n            effectiveDate: e.target.value\n          });\n          this.show(\"effectiveDate\", false);\n        }\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        years: '',\n        discount: '',\n        effectiveDate: moment().format(CommonConfig.dateFormat.YearMonthDay),\n        effectiveDateError: true,\n        yearsError: true,\n        discountError: true,\n        NoClaimBonusId: '',\n        heading: 'Add',\n        buttonName: 'Save',\n        toastName: 'Saved',\n        primary: false\n      });\n    };\n\n    this.export = () => {\n      this.dt.exportCSV();\n    };\n\n    const {\n      t: _t\n    } = props;\n    let columns = [{\n      field: \"years\",\n      header: \"NoofYears\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"discount\",\n      header: \"DiscountRate\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"effective_Date\",\n      header: \"Effective Date\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 3\n    }];\n    this.state = {\n      noClaimBonusList: [],\n      cols: columns,\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      heading: 'Add',\n      buttonName: 'Save',\n      toastName: 'Saved',\n      rowData: '',\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      years: '',\n      discount: '',\n      primary: false,\n      toggleModal: false,\n      yearsError: true,\n      discountError: true,\n      NoClaimBonusId: '',\n      effectivedate: 'Effective Date',\n      effectiveDate: moment().format(CommonConfig.dateFormat.YearMonthDay),\n      effectiveDateError: true\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: _t(\"masterNoClaimBonus:DataTableHeaders.\" + col.header + \"\"),\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.openModal = this.openModal.bind(this);\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  componentDidMount() {\n    this.getNoClaimBonusList();\n  }\n\n  getNoClaimBonusList() {\n    try {\n      api.post('api/getNoClaimBonus').then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (var i = 0; i < res.data.length; i++) {\n            // var Updated = (res.data[i].updatedon === undefined || res.data[i].updatedon === null || res.data[i].updatedon === \"\") ? (\"No Updates\") : (Moment(res.data[i].updatedon).format(CommonConfig.dateFormat.dateTime));\n            formattedData.push({\n              NoClaimBonusId: res.data[i].NoClaimBonusId,\n              years: res.data[i].YearCount,\n              discount: res.data[i].DiscountRate,\n              effective_Date: moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker)\n            });\n            let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n            let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\n            this.setState({\n              noClaimBonusList: formattedData,\n              str: str\n            });\n          }\n        } else {\n          console.log(\"Else\");\n        }\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  Delete() {\n    const {\n      t\n    } = this.props;\n\n    try {\n      let data = {\n        NoClaimBonusId: this.state.NoClaimBonusId,\n        CreatedBy: CommonConfig.loggedInUserId()\n      };\n      api.post('api/deleteNoClaimBonus', data).then(res => {\n        if (res.success) {\n          this.toggleLarge();\n          toast.success(t(\"masterNoClaimBonus:Toast.Delete\"));\n          this.getNoClaimBonusList();\n        }\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  actionTemplate(rowData, column) {\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-pencil\",\n      className: \"p-button-warning\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"buttons.Edit\"),\n      style: {\n        padding: 2\n      },\n      onClick: () => this.edit(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"buttons.Delete\"),\n      style: {\n        padding: 2\n      },\n      onClick: () => this.openDeleteModal(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-clock\",\n      className: \"p-button-primary\",\n      tooltip: \"Show History\",\n      onClick: () => this.goToHistoryPage(rowData),\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      style: {\n        padding: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  openModal() {\n    this.setState({\n      primary: true\n    });\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const mandatoryFieldMsg = t(\"mandatoryFieldMsg\");\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: t(\"masterNoClaimBonus:DataTableHeaders.\" + col.header + \"\"),\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, t(\"masterNoClaimBonus:Header\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: t(\"translation:labels.globalSearchLabel\"),\n      size: \"30\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"translation:labels.shoeHideColumnLabel\"),\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"masterNoClaimBonus:AddNoClaimBonus\"),\n      onClick: this.openModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"translation:buttons.exportAsCSVLabel\"),\n      onClick: this.export,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.noClaimBonusList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.noClaimBonusList.length,\n      exportFilename: t(\"masterNoClaimBonus:NoClaimBonusList\"),\n      currentPageReportTemplate: this.state.str,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: t(\"translation:NoRecordsMsg\"),\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.primary,\n      toggle: this.reset,\n      className: 'modal-primary ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }\n    }, t(\"masterNoClaimBonus:ModalHeading.\" + this.state.heading + \"\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      action: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 37\n      }\n    }, mandatoryFieldMsg))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 41\n      }\n    }, t(\"masterNoClaimBonus:NoofYears.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"years\",\n      id: \"years\",\n      onChange: e => this.handleChange(e),\n      placeholder: t(\"masterNoClaimBonus:NoofYears.placeholder\"),\n      value: this.state.years,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 41\n      }\n    }, t(\"masterNoClaimBonus:NoofYears.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imput-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 41\n      }\n    }, this.state.effectivedate), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"effectiveDate\",\n      id: \"effectiveDate\",\n      onChange: e => this.handleChange(e),\n      value: this.state.effectiveDate,\n      min: moment().format(CommonConfig.dateFormat.YearMonthDay),\n      max: moment().add(100, 'years').format(CommonConfig.dateFormat.YearMonthDay),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 41\n      }\n    }, \"Please enter valid effective date\")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imput-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 41\n      }\n    }, t(\"masterNoClaimBonus:DiscountRate.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"discount\",\n      id: \"discount\",\n      onChange: e => this.handleChange(e),\n      placeholder: t(\"masterNoClaimBonus:DiscountRate.placeholder\"),\n      value: this.state.discount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 41\n      }\n    }, t(\"masterNoClaimBonus:DiscountRate.error_blank\"))))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.Save(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 74\n      }\n    }), \" \", t(\"buttons.\" + this.state.buttonName + \"\")), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 75\n      }\n    }), \" \", t(\"buttons.Cancel\")))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }\n    }, t(\"masterNoClaimBonus:Delete.label\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }\n    }, \"Are you sure, You want to delete No Claim Bonus for \", this.state.years, \" years?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.Delete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 76\n      }\n    }), \" \", t(\"buttons.Yes\")), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 73\n      }\n    }), \" \", t(\"buttons.No\")))));\n  }\n\n}\n\nexport default withTranslation()(NoClaimBonus);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/NoClaimBonus/NoClaimBonus.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","api","CommonConfig","useTranslation","withTranslation","Trans","moment","NoClaimBonus","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","noClaimBonusList","length","str","setState","selectedPage","rowsPerPage","edit","rowData","heading","buttonName","toastName","years","discount","NoClaimBonusId","effectiveDateError","yearsError","discountError","primary","openDeleteModal","toggleModal","goToHistoryPage","console","log","Id","history","push","pathname","toggleLarge","Save","t","checkNCBYears","filter","x","parseInt","error","array","data","NCBYears","NCBDiscount","LanguageId","effectiveDate","CreatedBy","loggedInUserId","post","then","res","success","reset","getNoClaimBonusList","message","catch","err","show","handleChange","target","name","value","undefined","invSpace","RegExp","number","test","percentageWithNegative","format","dateFormat","YearMonthDay","export","dt","exportCSV","columns","field","header","sortable","filterMatchMode","id","body","actionTemplate","bind","cols","i18n","language","rowsPerPageOptions","dataTableConfig","globalFilter","effectivedate","colOptions","col","label","onColumnToggle","openModal","event","valueInOrder","sort","y","componentDidMount","formattedData","i","YearCount","DiscountRate","effective_Date","StartDate","forDatePicker","Delete","column","position","padding","condition","document","getElementById","className","render","mandatoryFieldMsg","map","textAlign","margin","marginRight","columnToggleIcon","width","el","color","marginTop","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport moment from 'moment';\r\n\r\nclass NoClaimBonus extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { t } = props;\r\n        let columns = [\r\n            { field: \"years\", header: \"NoofYears\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"discount\", header: \"DiscountRate\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"effective_Date\", header: \"Effective Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 3 }\r\n        ];\r\n\r\n        this.state = {\r\n            noClaimBonusList: [],\r\n            cols: columns,\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            heading: 'Add',\r\n            buttonName: 'Save',\r\n            toastName: 'Saved',\r\n            rowData: '',\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            years: '',\r\n            discount: '',\r\n            primary: false,\r\n            toggleModal: false,\r\n            yearsError: true,\r\n            discountError: true,\r\n            NoClaimBonusId: '',\r\n            effectivedate: 'Effective Date',\r\n            effectiveDate: moment().format(CommonConfig.dateFormat.YearMonthDay),\r\n            effectiveDateError: true,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: t(\"masterNoClaimBonus:DataTableHeaders.\" + col.header + \"\"), value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNoClaimBonusList();\r\n    }\r\n\r\n    getNoClaimBonusList() {\r\n        try {\r\n            api.post('api/getNoClaimBonus').then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        // var Updated = (res.data[i].updatedon === undefined || res.data[i].updatedon === null || res.data[i].updatedon === \"\") ? (\"No Updates\") : (Moment(res.data[i].updatedon).format(CommonConfig.dateFormat.dateTime));\r\n                        formattedData.push({\r\n                            NoClaimBonusId: res.data[i].NoClaimBonusId,\r\n                            years: res.data[i].YearCount,\r\n                            discount: res.data[i].DiscountRate,\r\n                            effective_Date: moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker),\r\n                        });\r\n                        let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                        let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n\r\n                        this.setState({ noClaimBonusList: formattedData, str: str });\r\n                    }\r\n                } else {\r\n                    console.log(\"Else\");\r\n                }\r\n            }).catch(err => {\r\n\r\n            });\r\n        } catch (error) {\r\n            console.log(\"err\", error);\r\n        }\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.noClaimBonusList.length) ? l : this.state.noClaimBonusList.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.noClaimBonusList.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    edit = (rowData) => {\r\n\r\n        this.setState({\r\n            heading: 'Update',\r\n            buttonName: 'Update',\r\n            toastName: 'Updated',\r\n            years: rowData.years,\r\n            discount: rowData.discount,\r\n            NoClaimBonusId: rowData.NoClaimBonusId,\r\n            // effectiveDate: rowData.effectiveDate,\r\n            effectiveDateError: false,\r\n            yearsError: false,\r\n            discountError: false,\r\n            primary: true\r\n        });\r\n    }\r\n\r\n    openDeleteModal = (rowData) => {\r\n        this.setState({\r\n            toggleModal: true,\r\n            NoClaimBonusId: rowData.NoClaimBonusId,\r\n            years: rowData.years\r\n        });\r\n    }\r\n\r\n    goToHistoryPage = (rowData) => {\r\n        console.log(\"rowData\", rowData);\r\n        var Id = rowData.NoClaimBonusId;\r\n        this.props.history.push({\r\n            pathname: '/Master/NoClaimBonusHistory/' + Id,\r\n            state: {\r\n                Id: Id,\r\n            }\r\n        });\r\n    }\r\n\r\n    Delete() {\r\n        const { t } = this.props;\r\n        try {\r\n            let data = {\r\n                NoClaimBonusId: this.state.NoClaimBonusId,\r\n                CreatedBy: CommonConfig.loggedInUserId()\r\n            }\r\n            api.post('api/deleteNoClaimBonus', data).then(res => {\r\n                if (res.success) {\r\n                    this.toggleLarge();\r\n                    toast.success(t(\"masterNoClaimBonus:Toast.Delete\"));\r\n                    this.getNoClaimBonusList();\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    toggleLarge = () => {\r\n        this.setState({\r\n            toggleModal: false,\r\n            years: '',\r\n            NoClaimBonusId: ''\r\n        });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        const { t } = this.props;\r\n\r\n        return <div className=\"text-center\">\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\" tooltipOptions={{ position: 'bottom' }}\r\n                tooltip={t(\"buttons.Edit\")} style={{ padding: 2 }} onClick={() => this.edit(rowData)} />\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltipOptions={{ position: 'bottom' }}\r\n                tooltip={t(\"buttons.Delete\")} style={{ padding: 2 }} onClick={() => this.openDeleteModal(rowData)} />\r\n            <Button type=\"button\" icon=\"pi pi-clock\" className=\"p-button-primary\" tooltip=\"Show History\" \r\n                onClick={() => this.goToHistoryPage(rowData)} tooltipOptions={{ position: 'bottom' }} style={{ padding: 2 }}></Button>\r\n        </div>;\r\n    }\r\n\r\n    Save = () => {\r\n\r\n        // console.log(\"this.state.noClaimBonusList...\", this.state.noClaimBonusList);\r\n        const { t } = this.props;\r\n        if (\r\n            this.state.yearsError === false &&\r\n            this.state.discountError === false &&\r\n            this.state.effectiveDateError === false\r\n        ) {\r\n            let checkNCBYears;\r\n            if (this.state.buttonName === \"Save\") {\r\n                checkNCBYears = this.state.noClaimBonusList.filter(x => x.years === parseInt(this.state.years));\r\n                if (checkNCBYears.length) {\r\n                    toast.error(t(\"masterNoClaimBonus:Toast.error\"));\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            if (this.state.buttonName === \"Update\") {\r\n                let array = this.state.noClaimBonusList.filter(x => x.NoClaimBonusId !== this.state.NoClaimBonusId);\r\n                checkNCBYears = array.filter(x => x.years === parseInt(this.state.years));\r\n                if (checkNCBYears.length) {\r\n                    toast.error(t(\"masterNoClaimBonus:Toast.error\"));\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            let data = {\r\n                NoClaimBonusId: this.state.NoClaimBonusId,\r\n                NCBYears: this.state.years,\r\n                NCBDiscount: this.state.discount,\r\n                LanguageId: this.state.LanguageId,\r\n                effectiveDate: this.state.effectiveDate,\r\n                CreatedBy: CommonConfig.loggedInUserId()\r\n            }\r\n            console.log('data',data);            \r\n            api.post('api/addUpdateNoClaimBonus', data).then(res => {\r\n                if (res.success) {\r\n                    toast.success(t(\"masterNoClaimBonus:Toast.\" + this.state.toastName + \"\"));\r\n                    this.reset();\r\n                    this.getNoClaimBonusList();\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } else {\r\n            this.show(\"years\", this.state.yearsError);\r\n            this.show(\"discount\", this.state.discountError);\r\n        }\r\n    }\r\n\r\n    show(field, condition) {\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'years') {\r\n            if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\r\n                this.setState({ yearsError: true });\r\n                this.show(\"years\", true);\r\n            } else {\r\n                let invSpace = CommonConfig.RegExp.number;\r\n                let years = e.target.value;\r\n                if (!invSpace.test(years)) {\r\n                    this.setState({ yearsError: true });\r\n                    this.show(\"years\", true);\r\n                } else {\r\n                    this.setState({ yearsError: false, years: e.target.value });\r\n                    this.show(\"years\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'discount') {\r\n            if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\r\n                this.setState({ discountError: true });\r\n                this.show(\"discount\", true);\r\n            } else {\r\n                let invSpace = CommonConfig.RegExp.percentageWithNegative;\r\n                let discount = e.target.value;\r\n                if (!invSpace.test(discount)) {\r\n                    this.setState({ discountError: true });\r\n                    this.show(\"discount\", true);\r\n                } else {\r\n                    this.setState({ discountError: false, discount: e.target.value });\r\n                    this.show(\"discount\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'effectiveDate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ effectiveDateError: true });\r\n                this.show(\"effectiveDate\", true);\r\n            } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\r\n                this.setState({ effectiveDateError: true });\r\n                this.show(\"effectiveDate\", true);\r\n            } else {\r\n                this.setState({ effectiveDateError: false, effectiveDate: e.target.value });\r\n                this.show(\"effectiveDate\", false);\r\n            }\r\n        }\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            years: '',\r\n            discount: '',\r\n            effectiveDate: moment().format(CommonConfig.dateFormat.YearMonthDay),\r\n            effectiveDateError: true,\r\n            yearsError: true,\r\n            discountError: true,\r\n            NoClaimBonusId: '',\r\n            heading: 'Add',\r\n            buttonName: 'Save',\r\n            toastName: 'Saved',\r\n            primary: false,\r\n        })\r\n    }\r\n\r\n    export = () => {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            primary: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { t } = this.props;\r\n        const mandatoryFieldMsg = t(\"mandatoryFieldMsg\");\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={t(\"masterNoClaimBonus:DataTableHeaders.\" + col.header + \"\")} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>{t(\"masterNoClaimBonus:Header\")}</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <div style={{ textAlign: 'right' }}>\r\n                            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n                            <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder={t(\"translation:labels.globalSearchLabel\")} size=\"30\" style={{ marginRight: 10 }} />\r\n                        </div>\r\n\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltipOptions={{ position: 'bottom' }} tooltip={t(\"translation:labels.shoeHideColumnLabel\")}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-plus\" tooltipOptions={{ position: 'bottom' }} tooltip={t(\"masterNoClaimBonus:AddNoClaimBonus\")} onClick={this.openModal}></Button>\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltipOptions={{ position: 'bottom' }} tooltip={t(\"translation:buttons.exportAsCSVLabel\")} onClick={this.export}></Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-custom\">\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.noClaimBonusList}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.noClaimBonusList.length}\r\n                        exportFilename={t(\"masterNoClaimBonus:NoClaimBonusList\")}\r\n                        currentPageReportTemplate={this.state.str}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage={t(\"translation:NoRecordsMsg\")}\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollable={true}\r\n                        scrollHeight=\"340px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.primary} toggle={this.reset}\r\n                    className={'modal-primary ' + this.props.className}>\r\n                    <ModalHeader toggle={this.reset}>{t(\"masterNoClaimBonus:ModalHeading.\" + this.state.heading + \"\")}{}</ModalHeader>\r\n                    <ModalBody>\r\n                        <form className=\"form\" action=\"#\">\r\n                            <Row>\r\n                                <Col md=\"12\" className=\"text-right\">\r\n                                    <span style={{ color: \"red\" }}>{mandatoryFieldMsg}</span>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"6\">\r\n                                    <div className=\"input-box\">\r\n                                        <label>{t(\"masterNoClaimBonus:NoofYears.label\")}*</label>\r\n                                        <Input type=\"text\" name=\"years\" id=\"years\" onChange={e => this.handleChange(e)} placeholder={t(\"masterNoClaimBonus:NoofYears.placeholder\")} value={this.state.years} >\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\">{t(\"masterNoClaimBonus:NoofYears.error_blank\")}</em>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"6\">\r\n                                    <div className=\"imput-box\">\r\n                                        <label>{this.state.effectivedate}</label>\r\n                                        <Input type=\"date\" name=\"effectiveDate\" id=\"effectiveDate\" onChange={(e) => this.handleChange(e)} value={this.state.effectiveDate}\r\n                                            min={moment().format(CommonConfig.dateFormat.YearMonthDay)}\r\n                                            max={moment().add(100, 'years').format(CommonConfig.dateFormat.YearMonthDay)}\r\n                                        >\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\" >Please enter valid effective date</em>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"6\">\r\n                                    <div className=\"imput-box\">\r\n                                        <label>{t(\"masterNoClaimBonus:DiscountRate.label\")}*</label>\r\n                                        <Input type=\"text\" name=\"discount\" id=\"discount\" onChange={e => this.handleChange(e)} placeholder={t(\"masterNoClaimBonus:DiscountRate.placeholder\")} value={this.state.discount} >\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\">{t(\"masterNoClaimBonus:DiscountRate.error_blank\")}</em>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.Save()}><i class=\"fa fa-check\"></i> {t(\"buttons.\" + this.state.buttonName + \"\")}</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-close\"></i> {t(\"buttons.Cancel\")}</BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLarge}>{t(\"masterNoClaimBonus:Delete.label\")}</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure, You want to delete No Claim Bonus for {this.state.years} years?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.Delete()}><i class=\"fa fa-check\"></i> {t(\"buttons.Yes\")}</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-close\"></i> {t(\"buttons.No\")}</BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NoClaimBonus);"]},"metadata":{},"sourceType":"module"}