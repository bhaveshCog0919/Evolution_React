{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/App.js\";\nimport React, { Component } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport Layout from './Layout';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { UnauthenticatedRoute, AuthenticatedRoute } from './utils/authenticate';\nimport { matchPath } from 'react-router';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nconst loading = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"animated fadeIn pt-3 text-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }\n}, \"Loading...\"); // Containers\n\n\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout')); // Pages\n\nconst Login = React.lazy(() => import('./views/Pages/Login/Login'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500/Page500')); // let cors = require('cors')\n// app.use(cors())\n\ntoast.configure(); // const isAuthenticated = () => {\n//   //write your condition here\n//   return true;\n// }\n// page uses the hook\n// function Page() {\n//   const { t, i18n } = useTranslation();\n//   const changeLanguage = lng => {\n//     i18n.changeLanguage(lng);\n//     window.location.reload();\n//   };\n//   return (\n//     <div className=\"lan-buttons\">\n//        <button onClick={() => changeLanguage('de')}>de</button>\n//         <button onClick={() => changeLanguage('en')}>en</button>\n//         <button onClick={() => changeLanguage('es')}>es</button>\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  //Once Login Ready Then In Login Component  UnauthenticatedRoute\n  //Once Login Required Of Any Page Then In AuthenticatedRoute\n  constructor(props, context) {\n    super(props, context);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(HashRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Suspense, {\n      fallback: loading(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UnauthenticatedRoute, {\n      exact: true,\n      path: \"/login\",\n      name: \"Login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Layout, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 48\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/404\",\n      name: \"Page 404\",\n      render: props => /*#__PURE__*/React.createElement(Page404, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 71\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/500\",\n      name: \"Page 500\",\n      render: props => /*#__PURE__*/React.createElement(Page500, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 71\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/App.js"],"names":["React","Component","HashRouter","Route","Switch","Redirect","Layout","toast","UnauthenticatedRoute","AuthenticatedRoute","matchPath","useTranslation","withTranslation","Trans","loading","DefaultLayout","lazy","Login","Page404","Page500","configure","App","constructor","props","context","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport Layout from './Layout'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {UnauthenticatedRoute, AuthenticatedRoute} from './utils/authenticate'\nimport { matchPath } from 'react-router'\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\n\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login/Login'))\n\nconst Page404 = React.lazy(() => import('./views/Pages/Page404/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500/Page500'));\n// let cors = require('cors')\n// app.use(cors())\ntoast.configure()\n\n// const isAuthenticated = () => {\n//   //write your condition here\n//   return true;\n// }\n\n// page uses the hook\n// function Page() {\n//   const { t, i18n } = useTranslation();\n\n//   const changeLanguage = lng => {\n//     i18n.changeLanguage(lng);\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className=\"lan-buttons\">\n//        <button onClick={() => changeLanguage('de')}>de</button>\n//         <button onClick={() => changeLanguage('en')}>en</button>\n//         <button onClick={() => changeLanguage('es')}>es</button>\n//     </div>\n//   );\n// }\n\n\nclass App extends Component {\n //Once Login Ready Then In Login Component  UnauthenticatedRoute\n //Once Login Required Of Any Page Then In AuthenticatedRoute\n constructor(props,context)\n {\n   super(props, context);\n } \n render() {\n    return (\n      <HashRouter>\n        <React.Suspense fallback={loading()}>\n          {/* for multilanguage enable Page */}\n          {/* <Page /> */}\n          <Switch>\n            {/* for Demo / Production */}\n            <UnauthenticatedRoute exact path=\"/login\" name=\"Login\" component={Login} />\n            <Route exact path=\"/\" component={Login} />\n            <Route path='/' render={(props) => <Layout {...props} /> } />\n      \n            <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} />\n            <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} />\n            {/* <AuthenticatedRoute path=\"/\" name=\"Home\" component={DefaultLayout} /> */}\n            {/* for Development */}\n            {/* <Route exact path=\"/login\" name=\"Login\" component={Login} />\n            <Route exact path=\"/register\" name=\"Register\" component={Register} />\n            <Route exact path=\"/forgotpassword\" name=\"Forgot Password\" component={ForgotPassword} />\n            <Route exact path=\"/resetpassword/:token?\" name=\"Reset Password\" component={ResetPassword} />\n            <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} />\n            <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} />\n            <Route path=\"/\" name=\"Home\" component={DefaultLayout} /> */}\n          </Switch>\n        </React.Suspense>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}