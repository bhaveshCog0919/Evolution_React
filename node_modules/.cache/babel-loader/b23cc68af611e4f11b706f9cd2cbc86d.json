{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Lead_Quotation_and_newbusiness_report.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\nimport ShowMoreText from 'react-show-more-text';\n\nclass Lead_Quotation_and_newbusiness_report extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'monthtillDate') {\n        this.setState({\n          monthtillDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'fromDate') {\n        this.setState({\n          fromDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'toDate') {\n        this.setState({\n          toDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'Year') {\n        console.log('Year', e.target.value);\n\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            Year: e.target.value,\n            YearError: true\n          });\n          this.show('Year', true, 'YearError', 'Please Enter Year');\n        } else {\n          this.setState({\n            Year: e.target.value,\n            YearError: false\n          });\n          this.show('Year', false, 'YearError', '');\n        }\n      }\n    };\n\n    let columns = [\n    /*  { body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },*/\n    {\n      field: \"Stage\",\n      header: \"Stage\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '85px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy ID\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      field: \"Name\",\n      header: \"Name\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"Language\",\n      header: \"Language\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      field: \"PolicyClass\",\n      header: \"Policy Class\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyType\",\n      header: \"Policy Type\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'textAlign': 'right',\n        'width': '100px'\n      }\n    }, {\n      field: \"YearBuilt\",\n      header: \"Year Built\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'textAlign': 'right',\n        'width': '65px'\n      }\n    }, {\n      field: \"TSI\",\n      header: \"TSI\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '85px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Cover\",\n      header: \"Cover\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '105px'\n      }\n    }, {\n      field: \"Source\",\n      header: \"Source\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '85px'\n      }\n    }, {\n      field: \"SourceName\",\n      header: \"Source Name\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 11,\n      style: {\n        'width': '105px'\n      }\n    }, {\n      field: \"Quarter\",\n      header: \"Quarter\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '65px'\n      }\n    }, // { field: \"Stage\", header: \"Stage\", sortable: true, filter: true, id: 13, style: { 'width': '65px' }  },\n    {\n      body: this.ShowNotes.bind(this),\n      field: \"Notes\",\n      header: \"Notes\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      field: \"LastHandler\",\n      header: \"Last Handler\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 15,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      field: \"RunDays\",\n      header: \"Run Days\",\n      sortable: true,\n      filter: true,\n      id: 16,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      field: \"LeadMonth\",\n      header: \"Lead Month\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 17,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      body: this.ShowQuotationIssuedDate.bind(this),\n      field: \"QuotationIssued\",\n      header: \"Quotation Issued\",\n      sortable: true,\n      filter: true,\n      id: 18,\n      style: {\n        'width': '105px'\n      }\n    }, {\n      body: this.ShowRiskBoundDate.bind(this),\n      field: \"RiskBound\",\n      header: \"Risk Bound\",\n      sortable: true,\n      filter: true,\n      id: 19,\n      style: {\n        'width': '105px'\n      }\n    }, {\n      field: \"QuotationPremium\",\n      header: \"Quotation Premium\",\n      sortable: true,\n      filter: true,\n      id: 20,\n      style: {\n        'width': '65px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Yearcontactfirstestablished\",\n      header: \"Year contact first established\",\n      sortable: true,\n      filter: true,\n      id: 21,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      field: \"MooringLocation\",\n      header: \"Mooring Location\",\n      sortable: true,\n      filter: true,\n      id: 22,\n      style: {\n        'width': '155px'\n      }\n    }, {\n      field: \"ClientEmail\",\n      header: \"Client Email\",\n      sortable: true,\n      filter: true,\n      id: 23,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"ClientPhoneNumber\",\n      header: \"Client Phone Number\",\n      sortable: true,\n      filter: true,\n      id: 24,\n      style: {\n        'width': '155px'\n      }\n    }, {\n      field: \"RiskboundBY\",\n      header: \"Risk bound BY\",\n      sortable: true,\n      filter: true,\n      id: 25,\n      style: {\n        'width': '65px'\n      }\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      DebtorType: 'SubAgent',\n      Period: 0,\n      selected: {},\n      selectedPolicy: 0,\n      selectedAgent: '',\n      selectAll: 0,\n      policyNoteList: [],\n      noteType: [],\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      monthtillDate: moment().format(\"YYYY-MM\"),\n      fromDate: moment().format(\"YYYY-MM-DD\"),\n      toDate: moment().format(\"YYYY-MM-DD\"),\n      MONTHList: [],\n      MONTH: ('0' + (new Date().getMonth() + 1).toString()).slice(-2),\n      MONTHError: false,\n      Year: '',\n      YearError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.Lead_Quotation_and_newbusiness_report();\n    this.getOrganazationData(this.state.DebtorType);\n    this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\n  }\n\n  ClientDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, rowData.ClientName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, rowData.ClientCode));\n  }\n\n  ShowNotes(rowData) {\n    return rowData.Notes != \"--\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: () => this.getNoteList(rowData),\n      style: {\n        color: 'blue',\n        cursor: 'pointer'\n      },\n      href: \"#\",\n      id: rowData.PolicyId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, rowData.Notes))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, rowData.Notes)));\n  }\n\n  AgentDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, rowData.AgentName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, rowData.AgentCode));\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.arr.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  DateDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, rowData.RenewalDate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, rowData.InceptionDate));\n  }\n\n  ShowRiskBoundDate(rowData) {\n    return rowData.RiskBound != 'Invalid date' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, rowData.RiskBound)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, \"--\"));\n  }\n\n  ShowQuotationIssuedDate(rowData) {\n    return rowData.QuotationIssued != 'Invalid date' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, rowData.QuotationIssued)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \"--\"));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getNoteList(rowData) {\n    this.setState({\n      NavID: null\n    });\n    const data = {\n      'entityId': rowData.PolicyId,\n      'entityType': 'Policy',\n      'CurrentUser': CommonConfig.loggedInUserData().EntityId\n    }; // api.post('api/getNotes', data).then(res => {\n\n    api.post('api/getNewBusineesNotes', data).then(res => {\n      if (res.success) {\n        this.setState({\n          policyNoteList: res.data,\n          openNotePopup: true,\n          NavID: rowData.PolicyId\n        });\n      } else {\n        toast.warn(\"No notes found for Policy.\");\n      }\n    }).catch(err => {\n      console.log(\"getNoteList err\", err);\n    });\n  }\n\n  Lead_Quotation_and_newbusiness_report() {\n    var ShowMonth = this.state.MONTH;\n    console.log(ShowMonth);\n    if (ShowMonth === \"\") this.state.MONTH = new Date().getMonth() + 1;else if (ShowMonth === \"All\") this.state.MONTH = 1;\n    if (this.state.Year === \"\") this.state.Year = new Date().getFullYear();\n    var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\n    if (ShowMonth === '' || ShowMonth === 'All') var endDate = moment(startDate).endOf('year').format('YYYY-MM-DD');else var endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n    var data = {\n      fromDate: startDate,\n      toDate: endDate\n    }; //console.log(data);\n\n    this.state.MONTH = ShowMonth;\n    api.post('api/Lead_Quotation_and_newbusiness_report', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              PolicyNumber: tempData.PolicyNumber,\n              PolicyId: tempData.PolicyId,\n              Name: tempData.ClientName,\n              Language: tempData.DocLang,\n              PolicyClass: tempData.PolicyVesselClass,\n              PolicyType: tempData.PolicyVesselType,\n              YearBuilt: tempData.YearBuilt,\n              TSI: tempData.SumInsured ? tempData.SumInsured : '',\n              Cover: tempData.LiabilityType ? tempData.LiabilityType : '--',\n              Source: tempData.Source ? tempData.Source : '--',\n              SourceName: tempData.SourceName ? tempData.SourceName : '--',\n              Quarter: tempData.Quarter ? tempData.Quarter : '--',\n              Stage: tempData.Stage ? tempData.Stage : '--',\n              Notes: tempData.Notes ? tempData.Notes : '--',\n              LastHandler: tempData.LastHandler ? tempData.LastHandler : '--',\n              RunDays: tempData.RunDays,\n              LeadMonth: tempData.LeadMonth + \" (\" + moment().month(tempData.LeadMonth - 1).format(\"MMMM\") + \")\",\n              QuotationIssued: moment(tempData.QuotationIssued).format('DD-MM-YYYY'),\n              RiskBound: moment(tempData.RiskBound).format('DD-MM-YYYY'),\n              QuotationPremium: tempData.QuotationPremium,\n              Yearcontactfirstestablished: tempData.YearContactFirstEstablished,\n              MooringLocation: tempData.MooringLocation,\n              ClientEmail: tempData.ClientEmail,\n              ClientPhoneNumber: tempData.ClientPhone,\n              RiskboundBY: tempData.RiskBoundBy\n            });\n          }\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.Lead_Quotation_and_newbusiness_report();\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        agentinfoError: false\n      });\n      this.show('agentinfo', false, 'agentinfoError', '');\n    }\n\n    if (type === 'Period') {\n      this.setState({\n        Period: value\n      });\n    }\n\n    if (type === 'MONTH') {\n      console.log('MONTH', value);\n\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          MONTHError: true,\n          MONTH: value\n        });\n        this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\n      } else {\n        this.setState({\n          MONTHError: false,\n          MONTH: value\n        });\n        this.show('MONTH', false, \"MONTHError\", \"\");\n      }\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  Update_Stage() {}\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, \"Lead Quotation and new business report\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 33\n      }\n    }, \"Filter\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 49\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"MONTH\",\n      id: \"MONTH\",\n      onChange: e => this.selectType(e.target.value, 'MONTH'),\n      value: this.state.MONTH,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 49\n      }\n    }, \"All\"), this.state.MONTHList.map((type, i) => {\n      console.log(type.StringMapKey);\n      return moment().month() + 1 === type.StringMapKey ? /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 109\n        }\n      }, type.StringMapName) : /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 58\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"MONTHError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 49\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      min: \"1900\",\n      max: \"2099\",\n      id: \"Year\",\n      name: \"Year\",\n      value: this.state.Year,\n      onChange: e => this.handleChange(e, 'Year'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"YearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 45\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 45\n      }\n    }, \" Search \"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Lead Quotation and new business report\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.openNotePopup,\n      className: 'modal-lg',\n      style: {\n        maxWidth: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.setState({\n        openNotePopup: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 21\n      }\n    }, \" Notes \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"added-note-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 29\n      }\n    }, this.state.policyNoteList.length, \" notes\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 29\n      }\n    }, this.state.policyNoteList.map((notes, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"addednote-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: notes.IsFlag.data[0] === 0 ? '#aaaaaa' : '#ff0000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-exclamation-circle\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 129\n        }\n      })), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 53\n        }\n      }, notes.NoteType), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(ShowMoreText, {\n        lines: 2,\n        more: \"Show more\",\n        less: \"Show less\",\n        anchorClass: \"\",\n        onClick: this.executeOnClick,\n        expanded: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 57\n        }\n      }, notes.NoteText)), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 61\n        }\n      }, \"Added By\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-user\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 112\n        }\n      }), \" \", notes.CreatedByName), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-calendar\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 84\n        }\n      }), \" \", moment(notes.CreatedOn).format(CommonConfig.dateFormat.dateTime))), notes.UpdatedByName != null ? /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 65\n        }\n      }, \"Updated By\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-user\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 116\n        }\n      }), \" \", notes.UpdatedByName), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-calendar\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 88\n        }\n      }), \" \", moment(notes.UpdatedOn).format(CommonConfig.dateFormat.dateTime))) : null)));\n    }))))));\n  }\n\n}\n\nexport default withTranslation()(Lead_Quotation_and_newbusiness_report);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Lead_Quotation_and_newbusiness_report.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","Modal","ModalHeader","ModalBody","ModalFooter","toast","APIConstant","ShowMoreText","Lead_Quotation_and_newbusiness_report","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","monthtillDate","fromDate","toDate","console","log","undefined","Year","YearError","show","columns","field","header","sortable","filter","id","style","filterMatchMode","body","ShowNotes","bind","ShowQuotationIssuedDate","ShowRiskBoundDate","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","DebtorType","Period","selected","selectedPolicy","selectedAgent","selectAll","policyNoteList","noteType","DebtorTypeError","agentinfo","agentinfoError","format","MONTHList","MONTH","Date","getMonth","toString","slice","MONTHError","colOptions","col","push","label","export","componentDidMount","getOrganazationData","getDropDownValues","ClientDetails","rowData","ClientName","ClientCode","Notes","getNoteList","color","cursor","PolicyId","AgentDetails","AgentName","AgentCode","toggleRow","newSelected","Object","assign","toggleSelectAll","forEach","x","actionTemplate","column","DateDetails","RenewalDate","InceptionDate","RiskBound","QuotationIssued","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","NavID","loggedInUserData","EntityId","openNotePopup","warn","ShowMonth","getFullYear","startDate","parseInt","endDate","endOf","formattedData","dataLength","i","tempData","PolicyNumber","Name","Language","DocLang","PolicyClass","PolicyVesselClass","PolicyType","PolicyVesselType","YearBuilt","TSI","SumInsured","Cover","LiabilityType","Source","SourceName","Quarter","Stage","LastHandler","RunDays","LeadMonth","month","QuotationPremium","Yearcontactfirstestablished","YearContactFirstEstablished","MooringLocation","ClientEmail","ClientPhoneNumber","ClientPhone","RiskboundBY","RiskBoundBy","dt","exportCSV","filterData","selectType","type","isEmpty","ContactType","OrganizationName","OrganizationId","sourceList","condition","errorField","message","document","getElementById","className","innerHTML","Update_Stage","render","t","map","columnToggleIcon","position","onColumnToggle","width","marginRight","custom","float","StringMapKey","StringMapName","el","maxWidth","notes","IsFlag","NoteType","executeOnClick","NoteText","CreatedByName","CreatedOn","dateFormat","dateTime","UpdatedByName","UpdatedOn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col,Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\nimport ShowMoreText from 'react-show-more-text';\r\n\r\nclass Lead_Quotation_and_newbusiness_report extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n          /*  { body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },*/\r\n            { field: \"Stage\", header: \"Stage\", sortable: true, filter: true, id: 1, style: { 'width': '85px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy ID\", sortable: true, filter: true, id: 2, style: { 'width': '65px' } },\r\n            { field: \"Name\", header: \"Name\", sortable: true, filter: true, id: 3, style: { 'width': '150px' } },\r\n            { field: \"Language\", header: \"Language\", sortable: true, filter: true, id: 4, style: { 'width': '65px' } },\r\n            { field: \"PolicyClass\", header: \"Policy Class\", sortable: true, filter: true, id: 5, style: { 'width': '100px' } },\r\n            { field: \"PolicyType\", header: \"Policy Type\", sortable: true, filter: true, id: 6, style: { 'textAlign': 'right','width': '100px'  }},\r\n            { field: \"YearBuilt\", header: \"Year Built\", sortable: true, filter: true, id: 7, style: { 'textAlign': 'right','width': '65px'  } },\r\n            { field: \"TSI\", header: \"TSI\", sortable: true, filter: true, id: 8, style: { 'width': '85px','textAlign': 'right' } },\r\n            { field: \"Cover\", header: \"Cover\", sortable: true, filter: true, id: 9, style: { 'width': '105px' }  },\r\n            { field: \"Source\", header: \"Source\", sortable: true, filter: true, id: 10, style: { 'width': '85px' }  },\r\n            { field: \"SourceName\", header: \"Source Name\", sortable: true, filter: true,filterMatchMode: 'contains', id: 11, style: { 'width': '105px' }  },\r\n            { field: \"Quarter\", header: \"Quarter\", sortable: true, filter: true, id: 12, style: { 'width': '65px' }  },\r\n           // { field: \"Stage\", header: \"Stage\", sortable: true, filter: true, id: 13, style: { 'width': '65px' }  },\r\n            { body: this.ShowNotes.bind(this),field: \"Notes\", header: \"Notes\", sortable: true, filter: true, id: 14, style: { 'width': '65px' }  },\r\n            { field: \"LastHandler\", header: \"Last Handler\", sortable: true, filter: true,filterMatchMode: 'contains', id: 15, style: { 'width': '65px' }  },\r\n            { field: \"RunDays\", header: \"Run Days\", sortable: true, filter: true, id: 16, style: { 'width': '65px' }  },\r\n            { field: \"LeadMonth\", header: \"Lead Month\", sortable: true, filter: true,filterMatchMode: 'contains', id: 17, style: { 'width': '65px' }  },\r\n\r\n            { body: this.ShowQuotationIssuedDate.bind(this),field: \"QuotationIssued\", header: \"Quotation Issued\", sortable: true, filter: true, id: 18, style: { 'width': '105px' }  },\r\n            {  body: this.ShowRiskBoundDate.bind(this),field: \"RiskBound\", header: \"Risk Bound\", sortable: true, filter: true, id: 19, style: { 'width': '105px' }  },\r\n            { field: \"QuotationPremium\", header: \"Quotation Premium\", sortable: true, filter: true, id: 20, style: { 'width': '65px', 'textAlign': 'right' }  },\r\n            { field: \"Yearcontactfirstestablished\", header: \"Year contact first established\", sortable: true, filter: true, id: 21, style: { 'width': '65px' }  },\r\n            { field: \"MooringLocation\", header: \"Mooring Location\", sortable: true, filter: true, id: 22, style: { 'width': '155px' }  },\r\n            { field: \"ClientEmail\", header: \"Client Email\", sortable: true, filter: true, id: 23, style: {'width': '200px'}  },\r\n            { field: \"ClientPhoneNumber\", header: \"Client Phone Number\", sortable: true, filter: true, id: 24, style: { 'width': '155px' }  },\r\n            { field: \"RiskboundBY\", header: \"Risk bound BY\", sortable: true, filter: true, id: 25, style: { 'width': '65px' }  },\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n\r\n            DebtorType: 'SubAgent',\r\n            Period: 0,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            policyNoteList: [],\r\n            noteType: [],\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            monthtillDate: moment().format(\"YYYY-MM\"),\r\n            fromDate: moment().format(\"YYYY-MM-DD\"),\r\n            toDate: moment().format(\"YYYY-MM-DD\"),\r\n            MONTHList: [],\r\n            MONTH: ('0'+(new Date().getMonth() + 1).toString()).slice(-2),\r\n            MONTHError: false,\r\n            Year: '',\r\n            YearError: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Lead_Quotation_and_newbusiness_report();\r\n        this.getOrganazationData(this.state.DebtorType);\r\n        this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\r\n    }\r\n\r\n    ClientDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ClientName}</p>\r\n                <p>{rowData.ClientCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n    ShowNotes(rowData) {\r\n        return (rowData.Notes !=\"--\")?\r\n            <div className=\"policy-list-data\">\r\n                  <span>\r\n        <p onClick={() => this.getNoteList(rowData)} style={{ color:'blue', cursor: 'pointer' }}  href=\"#\" id={rowData.PolicyId}>{rowData.Notes}</p>\r\n              \r\n            </span>\r\n            </div>\r\n            :\r\n            <div className=\"policy-list-data\">\r\n                  <span>\r\n        <p >{rowData.Notes}</p>\r\n              \r\n            </span>\r\n            </div>;\r\n        }\r\n    AgentDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.AgentName}</p>\r\n                <p>{rowData.AgentCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n    \r\n    DateDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.RenewalDate}</p>\r\n                <p>{rowData.InceptionDate}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    ShowRiskBoundDate(rowData) {\r\n        return (rowData.RiskBound != 'Invalid date')?\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.RiskBound}</p>\r\n            </div>:\r\n            <div className=\"policy-list-data\">\r\n            <p>--</p>\r\n        </div>;\r\n    }\r\n\r\n    ShowQuotationIssuedDate(rowData) {\r\n        return (rowData.QuotationIssued != 'Invalid date')?\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.QuotationIssued}</p>\r\n            </div>:\r\n            <div className=\"policy-list-data\">\r\n            <p>--</p>\r\n        </div>;\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n   \r\n    getNoteList(rowData) {\r\n        this.setState({ NavID: null });\r\n\r\n        const data = {\r\n            'entityId': rowData.PolicyId,\r\n            'entityType': 'Policy',\r\n            'CurrentUser': CommonConfig.loggedInUserData().EntityId\r\n        };\r\n        // api.post('api/getNotes', data).then(res => {\r\n            api.post('api/getNewBusineesNotes', data).then(res => {\r\n            if (res.success) {\r\n                this.setState({ policyNoteList: res.data, openNotePopup: true, NavID: rowData.PolicyId });\r\n            } else {\r\n                toast.warn(\"No notes found for Policy.\");\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"getNoteList err\", err);\r\n        });\r\n    }\r\n\r\n    Lead_Quotation_and_newbusiness_report() { \r\n        var ShowMonth = this.state.MONTH; console.log(ShowMonth);\r\n\r\n        if (ShowMonth ===\"\")\r\n        this.state.MONTH = new Date().getMonth() + 1;\r\n        else\r\n            if (ShowMonth ===\"All\")\r\n            this.state.MONTH = 1;\r\n        if (this.state.Year ===\"\")\r\n        this.state.Year = new Date().getFullYear();\r\n        \r\n        var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\r\n\r\n        if(ShowMonth ==='' || ShowMonth ==='All')\r\n        var endDate =  moment(startDate).endOf('year').format('YYYY-MM-DD');\r\n        else \r\n        var endDate =  moment(startDate).endOf('month').format('YYYY-MM-DD');\r\n        var data = {\r\n            fromDate: startDate,\r\n            toDate: endDate,\r\n        };\r\n        //console.log(data);\r\n        this.state.MONTH = ShowMonth;\r\n        api.post('api/Lead_Quotation_and_newbusiness_report', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage:0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n            \r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                \r\n                        formattedData.push({\r\n                            PolicyNumber:tempData.PolicyNumber,\r\n                            PolicyId:tempData.PolicyId,\r\nName:tempData.ClientName,\r\nLanguage:tempData.DocLang,\r\nPolicyClass:tempData.PolicyVesselClass,\r\nPolicyType:tempData.PolicyVesselType,\r\nYearBuilt:tempData.YearBuilt,\r\nTSI:tempData.SumInsured?tempData.SumInsured:'',\r\nCover:tempData.LiabilityType?tempData.LiabilityType:'--',\r\nSource:tempData.Source?tempData.Source:'--',\r\nSourceName:tempData.SourceName?tempData.SourceName:'--',\r\nQuarter:tempData.Quarter?tempData.Quarter:'--',\r\nStage:tempData.Stage?tempData.Stage:'--',\r\nNotes:tempData.Notes?tempData.Notes:'--',\r\nLastHandler:tempData.LastHandler?tempData.LastHandler:'--',\r\nRunDays:tempData.RunDays,\r\nLeadMonth: tempData.LeadMonth+ \" (\" + moment().month(tempData.LeadMonth -1 ).format(\"MMMM\")  + \")\",\r\nQuotationIssued: moment(tempData.QuotationIssued).format('DD-MM-YYYY'),\r\nRiskBound: moment(tempData.RiskBound).format('DD-MM-YYYY'),\r\nQuotationPremium:tempData.QuotationPremium,\r\nYearcontactfirstestablished:tempData.YearContactFirstEstablished,\r\nMooringLocation:tempData.MooringLocation,\r\nClientEmail:tempData.ClientEmail,\r\nClientPhoneNumber:tempData.ClientPhone,\r\nRiskboundBY:tempData.RiskBoundBy,\r\n                        });\r\n                }\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.Lead_Quotation_and_newbusiness_report();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'monthtillDate') {\r\n            this.setState({ monthtillDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'Year') {\r\nconsole.log('Year',e.target.value);\r\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\r\n                this.setState({ Year: e.target.value, YearError: true });\r\n                this.show('Year', true, 'YearError', 'Please Enter Year');\r\n            } else {\r\n                this.setState({ Year: e.target.value, YearError: false });\r\n                this.show('Year', false, 'YearError', '');\r\n            }\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, agentinfoError: false });\r\n            this.show('agentinfo', false, 'agentinfoError', '');\r\n\r\n        }\r\n\r\n        if (type === 'Period') {\r\n            this.setState({ Period: value });\r\n        }\r\n\r\n        if (type === 'MONTH') {\r\n\r\n            console.log('MONTH',value);\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ MONTHError: true, MONTH: value });\r\n                this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\r\n            } else {\r\n                this.setState({ MONTHError: false, MONTH: value });\r\n                this.show('MONTH', false, \"MONTHError\", \"\");\r\n\r\n            }\r\n        \r\n        }\r\n\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    Update_Stage(){\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Lead Quotation and new business report</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Filter\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md='3'>\r\n                                                <label>Month</label>\r\n                                                <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\r\n                                                <option value='All'>All</option>\r\n                                                    {this.state.MONTHList.map((type, i) => { console.log(type.StringMapKey);\r\n                                                        return (moment().month() +1  === type.StringMapKey)?<option value={type.StringMapKey} >{type.StringMapName}</option>\r\n                                                        :<option value={type.StringMapKey} >{type.StringMapName}</option>;\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                                <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                        <Col md='3'>\r\n                                            \r\n                                                <label>Year</label>\r\n                                                <Input type=\"number\" min=\"1900\" max=\"2099\" id=\"Year\" name=\"Year\"\r\n                                                    value={this.state.Year}\r\n                                                    onChange={(e) => this.handleChange(e, 'Year')}\r\n                                                ></Input>\r\n\r\n                                                <em id=\"YearError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                        <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        {/* <Col md='3'>\r\n                                            <label>Month</label>\r\n                                            <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\r\n                                                {this.state.MONTHList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>   */}\r\n                                      {/*  <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.Update_Stage()}> Update Stage </BTN>\r\n                                    </Col>*/}\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Lead Quotation and new business report\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            \r\n                {/* Confirmation Popup On Stage Change */}\r\n\r\n                <Modal isOpen={this.state.openNotePopup} className={'modal-lg'} style={{ maxWidth: '70%' }}>\r\n                    <ModalHeader toggle={() => this.setState({ openNotePopup: false })}> Notes </ModalHeader>\r\n\r\n                    <ModalBody>\r\n                     \r\n\r\n                        <div className=\"added-note-outer\">\r\n                            <h4>{this.state.policyNoteList.length} notes</h4>\r\n                            <ul>\r\n                                {\r\n                                    this.state.policyNoteList.map((notes, i) => {\r\n                                        return (\r\n                                            <li>\r\n                                                <div className=\"addednote-left\">\r\n                                                    <span style={{ color: notes.IsFlag.data[0] === 0 ? '#aaaaaa' : '#ff0000' }}><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i></span>\r\n                                                    <h3>{notes.NoteType}</h3>\r\n                                                    <p>\r\n                                                        <ShowMoreText\r\n                                                            lines={2}\r\n                                                            more='Show more'\r\n                                                            less='Show less'\r\n                                                            anchorClass=''\r\n                                                            onClick={this.executeOnClick}\r\n                                                            expanded={false}>\r\n                                                            {notes.NoteText}\r\n                                                        </ShowMoreText>\r\n                                                    </p>\r\n                                                    <Row>\r\n                                                        <Col md='6'>\r\n                                                            <p>Added By</p>\r\n                                                            <span className=\"date\" style={{ marginRight: 10 }}><i class=\"fa fa-user\" aria-hidden=\"true\"></i> {notes.CreatedByName}</span>\r\n                                                            <span className=\"date\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> {moment(notes.CreatedOn).format(CommonConfig.dateFormat.dateTime)}</span>\r\n                                                        </Col>\r\n                                                        {(notes.UpdatedByName != null) ? (\r\n                                                            <Col md='6'>\r\n                                                                <p>Updated By</p>\r\n                                                                <span className=\"date\" style={{ marginRight: 10 }}><i class=\"fa fa-user\" aria-hidden=\"true\"></i> {notes.UpdatedByName}</span>\r\n                                                                <span className=\"date\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> {moment(notes.UpdatedOn).format(CommonConfig.dateFormat.dateTime)}</span>\r\n                                                            </Col>\r\n                                                        ) : (null)}\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(Lead_Quotation_and_newbusiness_report);\r\n"]},"metadata":{},"sourceType":"module"}