{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{toast}from'react-toastify';import'primereact/resources/themes/nova-light/theme.css';import'primereact/resources/primereact.min.css';import'primeicons/primeicons.css';import{Menu}from'primereact/menu';import{Button as BTN}from'primereact/button';import{apiBase}from'../../utils/config';import{Modal,ModalHeader,Col,Row,Input,Button,InputGroup,UncontrolledTooltip}from'reactstrap';import api from'../../utils/apiClient';import APIConstant from'../../utils/constants';import moment from'moment';import{CommonConfig}from'../../utils/constants';import{withTranslation}from'react-i18next';import axios from'axios';import BootstrapTable from'react-bootstrap-table-next';var IBAN=require('iban');var headers={'Content-Type':'application/json','Authorization':'JWT fefege...',\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Headers\":\"*\",'X-Requested-With':'XMLHttpRequest'};axios.defaults.headers.post['Content-Type']='application/x-www-form-urlencoded';axios.defaults.headers.post['Access-Control-Allow-Origin']='*';var Account=/*#__PURE__*/function(_Component){_inherits(Account,_Component);var _super=_createSuper(Account);function Account(props){var _this$state;var _this;_classCallCheck(this,Account);_this=_super.call(this,props);_this.getPageString=function(e){var firstPage=e.first+1;var l=e.rows*(e.page+1);var lastPage=l<_this.state.arr.length?l:_this.state.arr.length;var str=firstPage+' to '+lastPage+' out of '+_this.state.arr.length+' records';_this.setState({selectedPage:e.first,str:str,rowsPerPage:e.rows});};_this.generateReceipt=function(rowData){console.log(\"generateReceipt\",rowData);if(rowData.IsReceiptGenerated===1){_this.setState({toggleModal:true,regenerateDoc:rowData});}else{var data={PolicyAccountId:rowData.PolicyAccountId,loggedInUserId:CommonConfig.loggedInUserId()};api.post('api/generateReciept',data).then(function(res){if(res.success){console.log(\"generateReceipt\",res.data);toast.success(res.data.message);setTimeout(function(){window.location.reload();},1000);}});}};_this.editAccount=function(e,rowData){_this.setState({PolicyAccountId:rowData.PolicyAccountId,referenceId:rowData.ReferenceId});if(rowData.TransactionType=='Debit'){_this.setState({paymentAmountError:false,newEntryDateError:false,descriptionError:false,paymentModeError:false,chargeAmountError:false,isEdit:true});}else if(rowData.TransactionType=='Credit'){_this.setState({newEntryDateError:false,descriptionError:false,paymentAmountError:false,paymentModeError:false,chargeAmountError:false,isEdit:true});}else{_this.setState({newEntryDateError:false,descriptionError:false,paymentAmountError:false,paymentModeError:false,chargeAmountError:false,isEdit:true,isAccountRecordEdit:true,entryTypeError:false});}setTimeout(function(){if(rowData.TransactionType=='Debit'||rowData.TransactionType=='Credit'){_this.showJournalEntryPopup(rowData);}else{if(rowData.TransactionType=='Payment'){_this.showMakePaymentPopup(rowData);}else{_this.showReturnPaymentPopup(rowData);}}},100);};_this.showJournalEntryPopup=function(rowData){if(rowData===undefined){_this.resetAccountForm();}else{_this.setState({PolicyAccountId:rowData.PolicyAccountId,newEntryDate:moment(rowData.TransactionDate,'DD/MM/YYYY').format(\"YYYY-MM-DD\"),transactionType:rowData.TransactionType,referenceId:rowData.ReferenceId,description:rowData.Description,chargeAmount:rowData.ChargeAmount,chargeFee:rowData.ChargeFeeAmount,totalChargeAmount:rowData.TotalChargeAmount,paymentAmount:rowData.PaymentAmount,paymentMode:rowData.PaymentModeName,paymentStatus:rowData.PaymentStatus,note:rowData.Note,isMakePayment:false,isReturnPayment:false});_this.calculateBalanceAFTPay();}_this.setState({toggleNewEntryModal:true,accountData:rowData});};_this.showDeletePaymentPopup=function(e,rowData){_this.setState({toggleModalDel:true,delPolicyId:rowData});};_this.deleteAccount=function(){// console.log('deleteAccount state', this.state.delPolicyId.TransactionType);\n// return;\nvar data={PolicyAccountId:_this.state.delPolicyId.PolicyAccountId,loggedInUserId:CommonConfig.loggedInUserId(),DocumentId:_this.state.delPolicyId.DocumentId};try{api.post('api/deleteAccountById',data).then(function(res){if(res.success){if(res.data.success){if(_this.state.delPolicyId.TransactionType=='Payment'){var _data={PolicyAccountId:_this.state.delPolicyId.PolicyAccountId,loggedInUserId:CommonConfig.loggedInUserId()};api.post('api/updateTransactionOutstanding',_data).then(function(response){_this.setState({toggleModalDel:false,delPolicyId:''});toast.success(res.data.message);setTimeout(function(){window.location.reload();},1000);});}else{_this.setState({toggleModalDel:false,delPolicyId:''});toast.success(res.data.message);setTimeout(function(){window.location.reload();},1000);}}}}).catch(function(err){console.log(\"err..\",err);});}catch(err){console.log(\"err..\",err);}};_this.handleDateChange=function(e,type){_this.setState(_defineProperty({},type,e));};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));var nameRegExp=CommonConfig.RegExp.nameWithSpace;var numberRegExp=CommonConfig.RegExp.number;var decimalRegExp=CommonConfig.RegExp.decimalWithOne;var allowAllWithSpace=CommonConfig.RegExp.allowAllWithSpace;// let cardnumRegExp = /[^0-9]/;\n// \"^(?:(?<visa>4[0-9]{12}(?:[0-9]{3})?)|\" +\n// \"(?<mastercard>5[1-5][0-9]{14})|\" +\n// \"(?<discover>6(?:011|5[0-9]{2})[0-9]{12})|\" +\n// \"(?<amex>3[47][0-9]{13})|\" +\n// \"(?<diners>3(?:0[0-5]|[68][0-9])?[0-9]{11})|\" +\n// \"(?<jcb>(?:2131|1800|35[0-9]{3})[0-9]{11}))$\"\nvar cvvRegExp=/^[0-9]{3,4}$/;var value=e.target.value;if(e.target.name==='newEntryDate'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({newEntryDateError:true});_this.show(\"newEntryDate\",true,\"newEntryDateError\",\"Please enter date\");}else{_this.setState({newEntryDateError:false,newEntryDate:e.target.value});_this.show(\"newEntryDate\",false,\"newEntryDateError\",\"\");}}if(e.target.name==='chargeAmount'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({chargeAmountError:true});_this.show(\"chargeAmount\",true,\"chargeAmountError\",\"Please enter charge fees \");}else{var nameRegEx=decimalRegExp;var name=e.target.value;if(!nameRegEx.test(name)){_this.setState({chargeAmountError:true});_this.show(\"chargeAmount\",true,\"chargeAmountError\",\"Please enter valid charge fees\");}else{_this.setState({chargeAmountError:false,chargeAmount:e.target.value});_this.show(\"chargeAmount\",false,\"chargeAmountError\",\"\");}}}if(e.target.name==='paymentAmount'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({paymentAmountError:true});_this.show(\"paymentAmount\",true,\"paymentAmountError\",\"Please enter charge fees \");}else{var _nameRegEx=decimalRegExp;var _name=e.target.value;if(!_nameRegEx.test(_name)){_this.setState({paymentAmountError:true});_this.show(\"paymentAmount\",true,\"paymentAmountError\",\"Please enter valid charge fees\");}else{_this.setState({paymentAmountError:false,paymentAmount:e.target.value});_this.show(\"paymentAmount\",false,\"paymentAmountError\",\"\");}}setTimeout(function(){if(_this.state.isTransferFundPopup){_this.calculateTransferFundPremium();}else{_this.calculatePremium();}},500);}if(e.target.name==='chargeFee'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({chargeFeeError:true});_this.show(\"chargeFee\",true,\"chargeFeeError\",\"Please enter charge fees \");}else{var _nameRegEx2=numberRegExp;var _name2=e.target.value;if(!_nameRegEx2.test(_name2)){_this.setState({chargeFeeError:true});_this.show(\"chargeFee\",true,\"chargeFeeError\",\"Please enter valid charge fees\");}else{_this.setState({chargeFeeError:false,chargeFee:e.target.value});_this.show(\"chargeFee\",false,\"chargeFeeError\",\"\");}}}if(e.target.name==='description'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({descriptionError:true});_this.show(\"description\",true,\"descriptionError\",\"Please enter description \");}else{var _nameRegEx3=allowAllWithSpace;var _name3=e.target.value;if(!_nameRegEx3.test(_name3)){_this.setState({descriptionError:true});_this.show(\"description\",true,\"descriptionError\",\"Please enter valid description\");}else{_this.setState({descriptionError:false,description:e.target.value});_this.show(\"description\",false,\"descriptionError\",\"\");}}}if(e.target.name==='accountName'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({accountNameError:true});_this.show(\"accountName\",true,\"accountNameError\",\"Please enter Account Name \");}else{var _nameRegEx4=CommonConfig.RegExp.nameWithSpace;var _name4=e.target.value;if(!_nameRegEx4.test(_name4)){_this.setState({accountNameError:true});_this.show(\"accountName\",true,\"accountNameError\",\"Please enter valid Account Name\");}else{_this.setState({accountNameError:false,accountName:e.target.value});_this.show(\"accountName\",false,\"accountNameError\",\"\");}}}if(e.target.name==='bankName'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({bankNameError:true});_this.show(\"bankName\",true,\"bankNameError\",\"Please enter Bank Name\");}else{var _nameRegEx5=CommonConfig.RegExp.nameWithSpace;var _name5=e.target.value;if(!_nameRegEx5.test(_name5)){_this.setState({bankNameError:true});_this.show(\"bankName\",true,\"bankNameError\",\"Please enter valid Bank Name\");}else{_this.setState({bankNameError:false,bankName:e.target.value});_this.show(\"bankName\",false,\"bankNameError\",\"\");}}}if(e.target.name==='IBAN'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({IBANError:true});_this.show(\"IBAN\",true,\"IBANError\",\"Please enter IBAN Number\");}else{// let nameRegEx = CommonConfig.RegExp.alphaNumeric;\nvar _name6=e.target.value;if(IBAN.isValid(_name6)){_this.setState({IBANError:false,IBAN:_name6});_this.show(\"IBAN\",false,\"IBANError\",\"\");}else{_this.setState({IBANError:true});_this.show(\"IBAN\",true,\"IBANError\",\"Please enter valid IBAN Number\");}}}if(e.target.name==='BIC'){_this.setState({BICError:false});/*if (CommonConfig.isEmpty(e.target.value)) {\n               this.setState({ BICError: true });\n               this.show(\"BIC\", true, \"BICError\", \"Please enter BIC Number\");\n             } else {\n               let nameRegEx = CommonConfig.RegExp.alphaNumeric;\n               let name = e.target.value;\n               if (!nameRegEx.test(name)) {\n                 this.setState({ BICError: true });\n                 this.show(\"BIC\", true, \"BICError\", \"Please enter valid BIC Number\");\n               } else {\n                 if (e.target.value.length < 8 || e.target.value.length > 11) {\n                   this.setState({ BICError: true, BIC: e.target.value });\n                   this.show(\"BIC\", true, \"BICError\", \"BIC number must be between 8 to 11 Characters\");\n                 } else {\n                   this.setState({ BICError: false, BIC: e.target.value });\n                   this.show(\"BIC\", false, \"BICError\", \"\");\n                 }\n               }\n             }*/}if(e.target.name==='CardholderName'){if(CommonConfig.isEmpty(value)){_this.setState({CardholderNameError:true});_this.show(\"CardholderName\",true,\"CardholderNameError\",\"Please enter CardholderName\");}else{if(!nameRegExp.test(value)){_this.setState({CardholderNameError:true});_this.show(\"CardholderName\",true,\"CardholderNameError\",\"Please enter valid CardholderName\");}else{_this.setState({CardholderNameError:false,CardholderName:value});_this.show(\"CardholderName\",false,\"CardholderNameError\",\"\");}}}if(e.target.name==='CardNumber'){if(CommonConfig.isEmpty(value)){_this.setState({CardNumberError:true});_this.show(\"CardNumber\",true,\"CardNumberError\",\"Please enter CardNumber\");}else{// if (!cardnumRegExp.test(value)) {\n//     this.setState({ CardNumberError: true });\n//     this.show(\"CardNumber\", true, \"CardNumberError\", \"Please enter valid CardNumber\");\n//   } else {\n_this.setState({CardNumberError:false,CardNumber:value});_this.show(\"CardNumber\",false,\"CardNumberError\",\"\");// }\n}}if(e.target.name==='CVV'){if(CommonConfig.isEmpty(value)){_this.setState({CVVError:true});_this.show(\"CVV\",true,\"CVVError\",\"Please enter CVV\");}else{if(!cvvRegExp.test(value)){_this.setState({CVVError:true});_this.show(\"CVV\",true,\"CVVError\",\"Please enter valid CVV\");}else{_this.setState({CVVError:false,CVV:value});_this.show(\"CVV\",false,\"CVVError\",\"\");}}}_this.calculateBalanceAFTPay();_this.totalChargeAmt();};_this.actionFormatter=function(cell,rowData){console.log(\"actionFormatter > \",cell,rowData,_assertThisInitialized(_this));var tempActions=rowData.Actions;var actions=CommonConfig.isEmpty(tempActions)?[]:tempActions.split(',');console.log('actionFormatter > actions > ',actions);var accountRecordMenu=[];if(actions.length){for(var i=0;i<actions.length;i++){if(actions[i]!=''){accountRecordMenu.push({label:actions[i],data:rowData,UniqueReferenceId:rowData.UniqueReferenceId});}}}var path=apiBase+\"\"+rowData.URL;return/*#__PURE__*/React.createElement(\"div\",{className:'Account'+rowData.Id},/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-primary\",tooltip:\"View\",tooltipOptions:{position:'bottom'},style:{marginRight:'.5em'},onClick:function onClick(e){return _this.editAccount(e,rowData);}}),accountRecordMenu.length?/*#__PURE__*/React.createElement(Input,{type:\"select\",style:{width:'40%',display:'inline-block'},name:\"accountRecord\"+rowData.Id,id:\"accountRecord\"+rowData.Id,onChange:function onChange(e){return _this.accountRecordActions(e.target.value,rowData,false);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select\"),accountRecordMenu.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.label,key:i},type.label);})):null);};_this.handleOnExpand=function(row,isExpand,rowIndex,e){try{if(isExpand){var data={UniqueReferenceId:row.UniqueReferenceId};api.post('api/getChildAccountRecords',data).then(function(res){_this.setState({childAccountData:[]});var tempChildAccountData=res.data[0];console.log(\"getChildAccountRecords\",tempChildAccountData);if(res.success){tempChildAccountData.forEach(function(element){var tempActions=element.Menu;var childActions=CommonConfig.isEmpty(tempActions)?[]:tempActions.split(',');console.log('handleOnExpand > childActions > ',childActions);var childAccountRecordMenu=[];if(childActions.length){for(var i=0;i<childActions.length;i++){if(childActions[i]!=''){childAccountRecordMenu.push({label:childActions[i],UniqueReferenceId:element.UniqueReferenceId});}}}element.Actions=childAccountRecordMenu;element.CurrencySymbol=row.CurrencySymbol;element.Path=apiBase+\"\"+element.URL;});setTimeout(function(){_this.setState({childAccountData:tempChildAccountData});},500);}else{console.log(\"getChildAccountRecords > error 3\",res);}}).catch(function(err){_this.setState({childAccountData:[]});console.log(\"getChildAccountRecords > error 2\",err);});}}catch(error){console.log(\"handleOnExpand > Err\",error);}};_this.expandRow={onlyOneExpanding:true,showExpandColumn:true,expandByColumnOnly:true,parentClassName:function parentClassName(isExpanded,row,rowIndex){return'parent-expand-foo';},onExpand:_this.handleOnExpand,renderer:function renderer(row){return/*#__PURE__*/React.createElement(\"div\",null,_this.state.childAccountData.length>0?/*#__PURE__*/React.createElement(\"table\",{width:'100%',style:{border:'none'}},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"Txn Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Transaction\"),/*#__PURE__*/React.createElement(\"th\",null,\"Reference Id\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"),/*#__PURE__*/React.createElement(\"th\",null,\"Amount\"),/*#__PURE__*/React.createElement(\"th\",null,\"Payment Mode\"),/*#__PURE__*/React.createElement(\"th\",null,\"Added By\"),/*#__PURE__*/React.createElement(\"th\",null,\"Outstanding\"),/*#__PURE__*/React.createElement(\"th\",null,\"Actions\")),_this.state.childAccountData.map(function(accountEntry,i){console.log(\"childAccountData > \"+i+\" > \",accountEntry);return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,i+1),/*#__PURE__*/React.createElement(\"td\",null,moment(accountEntry.TransactionDate).format(CommonConfig.dateFormat.dateOnly)),/*#__PURE__*/React.createElement(\"td\",null,accountEntry.ClientTransactionType),/*#__PURE__*/React.createElement(\"td\",null,accountEntry.UniqueReferenceId),/*#__PURE__*/React.createElement(\"td\",null,accountEntry.Description),/*#__PURE__*/React.createElement(\"td\",null,accountEntry.TransactionType=='Payment'||accountEntry.TransactionType=='ReturnPayment'?/*#__PURE__*/React.createElement(\"div\",{style:{float:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:accountEntry.CurrencySymbol}),CommonConfig.isEmpty(accountEntry.PaymentAmount)?'':accountEntry.PaymentAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\")):/*#__PURE__*/React.createElement(\"div\",{style:{float:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:accountEntry.CurrencySymbol}),CommonConfig.isEmpty(accountEntry.TotalChargeAmount)?'':accountEntry.TotalChargeAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"))),/*#__PURE__*/React.createElement(\"td\",null,accountEntry.TransactionType=='Payment'||accountEntry.TransactionType=='ReturnPayment'?accountEntry.PaymentMode:'N/A'),/*#__PURE__*/React.createElement(\"td\",null,accountEntry.CreatedByName,(CommonConfig.isEmpty(accountEntry.CreatedOn)?'':\" (\"+moment(accountEntry.CreatedOn).format(CommonConfig.dateFormat.dateTime))+\")\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{style:{float:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:accountEntry.CurrencySymbol}),CommonConfig.isEmpty(accountEntry.Outstanding)?'0':accountEntry.Outstanding.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"childRccountRecordMenu\"+accountEntry.Id},accountEntry.IsLocked?/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"i\",{style:{fontSize:'30px',verticalAlign:'sub',color:'red'},className:\"pi pi-lock\",href:\"#\",id:\"LockedTooltip\"+accountEntry.BReference}),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"top\",target:\"LockedTooltip\"+accountEntry.BReference},accountEntry.BReference)):null,/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-primary\",tooltip:\"View\",tooltipOptions:{position:'bottom'},onClick:function onClick(e){return _this.editAccount(e,accountEntry);}}),accountEntry.ClientTransactionType!=='Contra'&&accountEntry.ClientTransactionType!=='Short Write Off'&&accountEntry.TransactionType==='Payment'?/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"pi pi-file\",className:\"p-button-primary\",tooltip:\"Generate Receipt of Payment\",tooltipOptions:{position:'bottom'},style:{marginRight:'.5em'},onClick:function onClick(e){return _this.generateReceipt(accountEntry);}}):null,accountEntry.TransactionType==='Payment'?CommonConfig.isEmpty(accountEntry.IsReceiptGenerated)?null:/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-warning\",tooltip:\"View Receipt of Payment\",tooltipOptions:{position:'bottom'},style:{marginRight:'.5em'},onClick:function onClick(e){return window.open(accountEntry.Path,\"_blank\");}}):null,accountEntry.Actions.length?/*#__PURE__*/React.createElement(Input,{type:\"select\",style:{width:'40%',display:'inline-block'},name:\"childRccountRecord\"+accountEntry.Id,id:\"childRccountRecord\"+accountEntry.Id,onChange:function onChange(e){return _this.accountRecordActions(e.target.value,accountEntry,true);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select\"),accountEntry.Actions.map(function(type,j){return/*#__PURE__*/React.createElement(\"option\",{value:type.label,key:j},type.label);})):null)));})):/*#__PURE__*/React.createElement(\"small\",{style:{textAlign:\"center\"}},\"No Record for this transaction.\"));}};_this.accountRecordActions=function(type,rowData,isAccountChildEntry){try{console.log(\"actionFormatter > accountRecordActions > \",type,rowData,isAccountChildEntry);if(type=='Make Payment'){_this.getPolicyOutstandingTransaction(rowData);}else if(type=='Short Write Off'){var isConfirm=window.confirm(\"Are you sure you wants to Short Write Off \"+rowData.Balance+\" amount?\");if(isConfirm==true){_this.shortWriteoff(rowData.UniqueReferenceId,rowData.Balance);}}else if(type=='Return Payment'){_this.setState({returnPaymentData:rowData});setTimeout(function(){_this.showReturnPaymentPopup();},100);}else if(type=='Transfer Fund'){_this.getAccountTransferFund(rowData);}else if(type=='Contra'||type=='Cancel Payment'||type=='Bounce Cheque'||type=='Bank Transfer Failed'||type=='Credit Card Declined'){var isConfirm=window.confirm(\"Are you sure you wants to \"+type+\" #\"+rowData.UniqueReferenceId+\"?\");if(isConfirm==true){_this.processAccountEntry(type,rowData);}}// Dropdown action to default 'Select';\nif(isAccountChildEntry){if(document.getElementsByName('childRccountRecord'+rowData.Id)){document.getElementsByName('childRccountRecord'+rowData.Id)[0].value='';}}else{if(document.getElementsByName('accountRecord'+rowData.Id)){document.getElementsByName('accountRecord'+rowData.Id)[0].value='';}}}catch(error){console.log(\"accountRecordActions > error \",error);}};_this.processAccountEntry=function(type,rowData){try{if(rowData.UniqueReferenceId){var data={UniqueReferenceId:rowData.UniqueReferenceId,AccountActionType:type,CurrentUser:CommonConfig.loggedInUserId()};api.post('api/processAccountEntry',data).then(function(res){console.log(\"processAccountEntry > res\",res);if(res.success){console.log(\"processAccountEntry > response > data\",res.data);toast.success(type+\" successfully.\");setTimeout(function(){window.location.reload();},1000);}else{toast.error('Account record is not relevent for '+type+' action.');}}).catch(function(err){console.log(\"processAccountEntry error\",err);toast.error(err);});}else{toast.error('Account record is not relevent for '+type+' action.');}}catch(error){console.log(\"processAccountEntry > error \",error);toast.error(error);}};var columns=[// { dataField: \"SequenceNumber\", text: \"#\" },\n{dataField:\"TransactionDate\",text:\"Txn Date\"},{dataField:\"Narration\",text:\"Transaction\"},{dataField:\"UniqueReferenceId\",text:\"Reference ID\"},{dataField:\"ClientTransactionType\",text:\"Description\"},{dataField:\"AmountCharge\",text:\"Amount Charged\",formatter:_this.formatAmountChargedData},{dataField:\"TotalPaymentAmount\",text:\"Payment Amount\",formatter:_this.formatPaymentData},// { dataField: \"PaymentMode\", text: \"Payment Mode\" },\n{dataField:\"CreatedBy\",text:\"Added By\"},{dataField:\"Balance\",text:\"Balance\",formatter:_this.formatBalanceData},{dataField:\"Action\",text:\"Actions\",formatter:_this.actionFormatter,edit:_this.editAccount,accountRecordActions:_this.accountRecordActions}];_this.state=(_this$state={LanguageId:props.i18n.language==='en'?'en-GB':props.i18n.language==='es'?'es-ES':props.i18n.language==='ie'?'en-IE':props.i18n.language,policyAccountList:[],PolicyComputation:'',isEdit:false,EntityBankDetailId:'',brand:null,colors:null,delPolicyId:[],toggleModalDel:false,toggleModalAdd:false,cols:columns,arr:[],rowData:'',selectedPage:0,rowsPerPageOptions:CommonConfig.dataTableConfig.rowsPerPageOptions,str:'',rowsPerPage:CommonConfig.dataTableConfig.rowsPerPage,globalFilter:null,toggleNewEntryModal:false,toggleBnkDetailsModal:false,policyNumber:props.PolicyNumber,policyType:props.PolicyType,policyHolder:props.PolicyHolder,policyId:'',EntityId:'',EntityType:'',referenceId:'',PolicyAccountId:\"\",accountData:\"\",newEntryDate:moment().format('DD-MM-YYYY'),newEntryDateError:false,transactionType:'Debit',description:'',descriptionError:true,chargeAmount:0,chargeAmountError:true,chargeFee:0,chargeFeeError:'',totalChargeAmount:0,totalChargeAmountError:'',paymentAmount:0,paymentAmountError:true,paymentMode:'',paymentModeError:true,paymentDue:0,paymentStatus:'',paymentStatusError:true,note:'',addedBy:'',addedDate:'',updatedBy:'',updatedDate:'',paymentModearr:[],returnPaymentModearr:[],paymentStatusarr:[],isMakePayment:false,isReturnPayment:false,country:'',IBAN:'',IBANError:true,journalEntry:'',journalEntryError:true,journalDebitData:[],BIC:'',BICError:false,bankCountry:'',bankCountryError:true,countryList:[],bankName:'',bankNameError:true,accountName:'',accountNameError:true,bankDetailsRes:[],CurrencySymbol:'',calculateBalanceAFTPay:0,TransactionType:'',toggleModal:false,regenerateDoc:[],outstanding:0,existOutstanding:0,updatedPremium:0,updatedPremiumAdminFee:0,updatedPremiumLevy:0,updatedPremiumLessLevy:0,showCalculation:false,isAccountRecordEdit:false,Currency:'Euro',CardholderName:'',CardNumber:'',CardType:'VISA',ExpiryMonth:'1',ExpiryYear:'2020',CVV:'',IsSelectedCard:0,RenewalDate:'',Forename:'',Surname:'',EmailId:'',ContactTelephoneNumber:'',CardholderNameError:false,CardNumberError:false,CardTypeError:false,ExpiryMonthError:false,ExpiryYearError:false,CVVError:false,isPaymentPopup:false,SystemOutstandingTransactions:[],OutstandingTransactions:[],entryType:'',entryTypeError:true},_defineProperty(_this$state,\"journalDebitData\",[]),_defineProperty(_this$state,\"journalCreditData\",[]),_defineProperty(_this$state,\"IsLapsePolicy\",0),_defineProperty(_this$state,\"DaysOverdue\",0),_defineProperty(_this$state,\"RenewalDate\",''),_defineProperty(_this$state,\"IsLapsePolicyPopup\",false),_defineProperty(_this$state,\"lapsePolicyNote\",''),_defineProperty(_this$state,\"isGenerateRenewal\",0),_defineProperty(_this$state,\"PremiumType\",''),_defineProperty(_this$state,\"isPolicyRenewal\",0),_defineProperty(_this$state,\"expandedRows\",null),_defineProperty(_this$state,\"childAccountData\",[]),_defineProperty(_this$state,\"subAccMenu\",false),_defineProperty(_this$state,\"returnPaymentData\",{}),_defineProperty(_this$state,\"isTransferFundPopup\",false),_defineProperty(_this$state,\"transferFundData\",{}),_defineProperty(_this$state,\"PolicyOutstandingTransactions\",[]),_defineProperty(_this$state,\"SystemPolicyOutstandingTransactions\",[]),_defineProperty(_this$state,\"paymentAmountRemains\",0),_this$state);_this.onColumnToggle=_this.onColumnToggle.bind(_assertThisInitialized(_this));_this.actionTemplate=_this.actionTemplate.bind(_assertThisInitialized(_this));// this.export = this.export.bind(this);\n/*\n        let columns = [\n          { field: \"SequenceNumber\", header: \"#\", sortable: true, filter: true, id: 0, style: { width: '2%' }, expander: true },\n          { field: \"TransactionDate\", header: \"Txn Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1, },\n          { field: \"Narration\", header: \"Transaction\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1, },\n          { field: \"UniqueReferenceId\", header: \"Txn ID\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2, },\n          { field: \"ClientTransactionType\", header: \"Description\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3, },\n          { body: this.formatAmountChargedData.bind(this), field: \"AmountCharge\", header: \"Amount Charged\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\n          { body: this.formatPaymentData.bind(this), field: \"PaymentAmount\", header: \"Payment Amount\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\n          { field: \"PaymentMode\", header: \"Payment Mode(Status)\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\n          { field: \"CreatedBy\", header: \"Added By\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\n          // { field: \"UpdatedBy\", header: \"Updated by\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\n          { body: this.formatBalanceData.bind(this), field: \"Balance\", header: \"Balance\", sortable: true, filter: true, filterMatchMode: 'contains', id: 9 },\n          { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 10, style: { width: '12%' } }\n        ];*/ /*this.colOptions = [];\n        for (let col of columns) {\n          this.colOptions.push({ label: col.header, value: col });\n        }*/return _this;}_createClass(Account,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({newEntryDate:moment().format('YYYY-MM-DD')});if(this.props.match.params.constructor===Object&&Object.keys(this.props.match.params).length!==0){this.setState({policyId:this.props.match.params.id,EntityId:this.props.EntityId,EntityType:this.props.EntityType,CurrencySymbol:this.props.CurrencySymbol,RenewalDate:this.props.RenewalDate,Currency:this.props.currency});}this.getAccountDetails();this.getDropDownValues();this.getPaymentMode();this.getReturnPaymentMode();this.getJournalDebitData();this.getJournalCreditData();this.getPaymentStatus();this.getDropDownValues('POLICYCOUNTRY','countryList','StringMapName');this.getUserBankAccountDetails();this.getPolicyDetails();this.getPaymentDetails();this.getLapsePolicyDetails();this.isGenerateRenewal();}},{key:\"isGenerateRenewal\",value:function isGenerateRenewal(){var _this2=this;var data={policyId:this.props.match.params.id};api.post(APIConstant.path.isGenerateRenewal,data).then(function(res){console.log('PolicyAccount isGenerateRenewal',res);if(res.success){if(!CommonConfig.isEmpty(res.data[0].returnValue)&&res.data[0].returnValue!=0){console.log('res.data[0].returnValue',res.data[0].returnValue);_this2.setState({isGenerateRenewal:res.data[0].returnValue,PremiumType:'Renewal',isPolicyRenewal:1});}}else{console.log('error');}}).catch(function(err){});}},{key:\"getPaymentDetails\",value:function getPaymentDetails(){var _this3=this;try{var data={policyId:this.props.match.params.id};api.post('api/getpaymentholderdetails',data).then(function(res){if(res.success){var resdata=res.data[0];_this3.setState({EntityId:resdata[0].EntityId,EntityType:resdata[0].EntityType,RenewalDate:resdata[0].RenewalDate,Forename:resdata[0].Forename,Surname:resdata[0].Surname,EmailId:resdata[0].EmailId,ContactTelephoneNumber:resdata[0].CountryCode+' '+resdata[0].AreaCode+' '+CommonConfig.formatPhoneNumber(resdata[0].Phone)// SelectSavedCard:res.data[0].SelectSavedCard,\n// CardholderName: res.data[0].CardholderName,\n// CardNumber: res.data[0].CardNumber,\n// CardType: res.data[0].CardType,\n// ExpiryMonth: res.data[0].ExpiryMonth,\n// ExpiryYear: res.data[0].ExpiryYear,\n// IsSelectedCard: res.data[0].IsSelectedCard,\n});}else{}}).catch(function(err){console.log(\"error\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getPolicyDetails\",value:function getPolicyDetails(){var _this4=this;try{var data={policyId:this.props.match.params.id};api.post('api/getPolicyComputation',data).then(function(res){if(res.success){console.log(\"-i-i-i-i--i-i--i---i---i\",res.data[0]);var resdata=res.data[0];_this4.setState({PolicyComputation:resdata});console.log(\"-i-i-i-i--i-i--i---i---i\",_this4.state.PolicyComputation);}else{}}).catch(function(err){console.log(\"error\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName,orderBy){var _this5=this;try{var data={stringmaptype:stringMapType,orderby:orderBy};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){_this5.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){}}},{key:\"getJournalDebitData\",value:function getJournalDebitData(){var _this6=this;try{var data={stringmaptype:'JOURNALENTRYDEBIT'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){var journalDebitData=[];for(var i=0;i<res.data.length;i++){journalDebitData.push({label:res.data[i].StringMapName,value:res.data[i].Description});}_this6.setState({journalDebitData:journalDebitData});}else{}}).catch(function(err){console.log(\"error\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getJournalCreditData\",value:function getJournalCreditData(){var _this7=this;try{var data={stringmaptype:'JOURNALENTRYCREDIT'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){var journalCreditData=[];for(var i=0;i<res.data.length;i++){journalCreditData.push({label:res.data[i].StringMapName,value:res.data[i].Description});}_this7.setState({journalCreditData:journalCreditData});}else{}}).catch(function(err){console.log(\"error\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getPaymentMode\",value:function getPaymentMode(){var _this8=this;try{var data={stringmaptype:'PAYMENTMODE'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){var paymentMode=[];for(var i=0;i<res.data.length;i++){paymentMode.push({label:res.data[i].StringMapName,value:res.data[i].Description});}console.log(\"paymentMode-----\",paymentMode);_this8.setState({paymentModearr:paymentMode});}else{}}).catch(function(err){console.log(\"error\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getReturnPaymentMode\",value:function getReturnPaymentMode(){var _this9=this;try{var data={stringmaptype:'RETURNPAYMENTMODE'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){var returnPaymentMode=[];for(var i=0;i<res.data.length;i++){returnPaymentMode.push({label:res.data[i].StringMapName,value:res.data[i].Description});}_this9.setState({returnPaymentModearr:returnPaymentMode});}else{}}).catch(function(err){console.log(\"error\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getPaymentStatus\",value:function getPaymentStatus(){var _this10=this;try{var data={stringmaptype:'PAYMENTSTATUS'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){var paymentStatus=[];for(var i=0;i<res.data.length;i++){paymentStatus.push({label:res.data[i].StringMapName,value:res.data[i].Description});}_this10.setState({paymentStatusarr:paymentStatus});}else{}}).catch(function(err){console.log(\"error\",err);});}catch(error){console.log(\"error\",error);}}},{key:\"getAccountDetails\",value:function getAccountDetails(){var _this11=this;try{// debugger\nvar data={PolicyId:this.props.match.params.id};api.post('api/getDebitAccountList',data).then(function(res){console.log(\"getDebitAccountList\",res);var accountData=res.data[0];if(res.success){if(accountData.length){var duePayment=accountData[0].ClosingBalance;}else{duePayment=0.00;}var formattedData=[];var i;for(i=0;i<accountData.length;i++){var _formattedData$push;var PaymentMode=\"\";if(accountData[i].PaymentMode==\"null\"){}else if(accountData[i].PaymentMode){PaymentMode=accountData[i].PaymentMode+' ('+accountData[i].PaymentStatus+')';}var CreatedBy=CommonConfig.isEmpty(accountData[i].CreatedBy)?'':accountData[i].CreatedByName+\" (\"+moment(accountData[i].CreatedOn).format(CommonConfig.dateFormat.dateTime)+\")\";var UpdatedBy=CommonConfig.isEmpty(accountData[i].UpdatedBy)?'':accountData[i].CreatedByName+\" (\"+moment(accountData[i].UpdatedOn).format(CommonConfig.dateFormat.dateTime)+\")\";formattedData.push((_formattedData$push={CurrencySymbol:_this11.props.CurrencySymbol,Id:accountData[i].Id,PolicyAccountId:accountData[i].PolicyAccountId,DocumentId:accountData[i].DocumentId,SequenceNumber:accountData[i].Id,CreatedOn:moment(accountData[i].CreatedOn).format(CommonConfig.dateFormat.dateOnly),CreatedOnDate:accountData[i].CreatedOn,ClientTransactionType:accountData[i].ClientTransactionType,TransactionUniqueReferenceId:accountData[i].TransactionUniqueReferenceId,UniqueReferenceId:accountData[i].UniqueReferenceId,ReferenceId:accountData[i].ReferenceId,Description:accountData[i].Description,ChargeAmount:accountData[i].ChargeAmount,ChargeFeeAmount:accountData[i].ChargeFeeAmount,TotalChargeAmount:accountData[i].TotalChargeAmount,AmountCharge:accountData[i].TotalChargeAmount,PaymentAmount:accountData[i].PaymentAmount,Outstanding:accountData[i].Outstanding,PaymentMode:PaymentMode,CreatedBy:CreatedBy,UpdatedBy:UpdatedBy,Balance:accountData[i].Balance,TransactionType:accountData[i].TransactionType,PaymentModeName:accountData[i].PaymentMode,TransactionDate:moment(accountData[i].TransactionDate).format(CommonConfig.dateFormat.dateOnly),PaymentStatus:accountData[i].PaymentStatus,Note:accountData[i].Note,IsReceiptGenerated:CommonConfig.isEmpty(accountData[i].IsReceiptGenerated)?0:accountData[i].IsReceiptGenerated.data[0],ReceiptDocumentId:CommonConfig.isEmpty(accountData[i].ReceiptDocumentId)?'':accountData[i].ReceiptDocumentId,URL:CommonConfig.isEmpty(accountData[i].URL)?'':accountData[i].URL,RelatedReferenceId:accountData[i].RelatedReferenceId,SystemEntryType:accountData[i].SystemEntryType,RenewalOrInceptionDate:accountData[i].RenewalOrInceptionDate,Narration:accountData[i].Narration,BatchEntryId:accountData[i].BatchEntryId},_defineProperty(_formattedData$push,\"Balance\",accountData[i].Balance),_defineProperty(_formattedData$push,\"Actions\",accountData[i].Actions),_defineProperty(_formattedData$push,\"TotalPaymentAmount\",accountData[i].TotalPaymentAmount),_formattedData$push));}var firstPage=formattedData.length?'1':'0';var lastPage=_this11.state.rowsPerPage<formattedData.length?_this11.state.rowsPerPage:formattedData.length;var str=firstPage+' to '+lastPage+' out of '+formattedData.length+' records';_this11.setState({arr:formattedData,str:str,paymentDue:duePayment,policyAccountList:accountData});console.log(\"formattedData\",_this11.state.arr);}else{console.log(\"getAccountDetails > error 3\",res);}}).catch(function(err){console.log(\"getAccountDetails > error 2\",err);});}catch(err){console.log(\"getAccountDetails > error 1\",err);}}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName){var _this12=this;try{var data={stringmaptype:stringMapType,orderby:'sortorder'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){_this12.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){}}},{key:\"onColumnToggle\",value:function onColumnToggle(event){var valueInOrder=event.value.sort(function(x,y){return x.id-y.id;});this.setState({cols:valueInOrder});}},{key:\"actionTemplate\",value:function actionTemplate(rowData,column){var _this13=this;// console.log(\"actionTemplate\", rowData);\nvar path=apiBase+\"\"+rowData.URL;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-primary\",tooltip:\"View\",tooltipOptions:{position:'bottom'},style:{marginRight:'.5em'},onClick:function onClick(e){return _this13.editAccount(e,rowData);}}),rowData.TransactionType==='Payment'?/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"pi pi-file\",className:\"p-button-primary\",tooltip:\"Generate Receipt of Payment\",tooltipOptions:{position:'bottom'},style:{marginRight:'.5em'},onClick:function onClick(e){return _this13.generateReceipt(rowData);}}):null,rowData.TransactionType==='Payment'&&rowData.IsReceiptGenerated===1?/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-warning\",tooltip:\"View Receipt of Payment\",tooltipOptions:{position:'bottom'},style:{marginRight:'.5em'},onClick:function onClick(e){return window.open(path,\"_blank\");}}):null);}},{key:\"againGenerateReceipt\",value:function againGenerateReceipt(){var data={PolicyAccountId:this.state.regenerateDoc.PolicyAccountId,loggedInUserId:CommonConfig.loggedInUserId()};api.post('api/generateReciept',data).then(function(res){if(res.success){toast.success(res.data.message);setTimeout(function(){window.location.reload();},1000);}});}},{key:\"hidePopup\",value:function hidePopup(){this.setState({toggleModal:false});}},{key:\"formatAmountChargedData\",value:function formatAmountChargedData(cell,rowData){console.log(\"formatAmountChargedData\",this);return/*#__PURE__*/React.createElement(\"div\",{style:{float:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:rowData.CurrencySymbol}),CommonConfig.isEmpty(rowData.TotalChargeAmount)?'0':rowData.TotalChargeAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"));}},{key:\"formatPaymentData\",value:function formatPaymentData(cell,rowData){return/*#__PURE__*/React.createElement(\"div\",{style:{float:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:rowData.CurrencySymbol}),CommonConfig.isEmpty(rowData.TotalPaymentAmount)?'0':rowData.TotalPaymentAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"));}},{key:\"formatBalanceData\",value:function formatBalanceData(cell,rowData){return/*#__PURE__*/React.createElement(\"div\",{style:{float:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:rowData.CurrencySymbol}),CommonConfig.isEmpty(rowData.Balance)?'0':rowData.Balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"));}},{key:\"showMakePaymentPopup\",value:function showMakePaymentPopup(rowData){if(rowData===undefined){this.getPolicyOutstandingTransaction();}else{this.setState({isEdit:true});this.getBatchPaymentDetails(rowData);}}},{key:\"hideMakePaymentPopup\",value:function hideMakePaymentPopup(){this.setState({isPaymentPopup:false,transactionType:'Payment',description:'',paymentAmount:'',descriptionError:false,paymentAmountError:false,existOutstanding:0});}},{key:\"saveMakePaymentEntry\",value:function(){var _saveMakePaymentEntry=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this14=this;var data,params;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!this.state.newEntryDateError){_context.next=5;break;}toast.error('Please Enter Transaction Date');_context.next=71;break;case 5:if(!this.state.descriptionError){_context.next=9;break;}toast.error('Please Enter Description');_context.next=71;break;case 9:if(!this.state.paymentAmountError){_context.next=13;break;}toast.error('Please Enter Payment Amount');_context.next=71;break;case 13:if(!this.state.paymentModeError){_context.next=17;break;}toast.error('Please Select Payment Mode');_context.next=71;break;case 17:if(!(this.state.paymentAmount==0)){_context.next=21;break;}toast.error('Payment amount can not be 0.');_context.next=71;break;case 21:if(!this.validateTransactionsTotal()){_context.next=25;break;}toast.error('Total Amount Applied must be match with Payment Amount');_context.next=71;break;case 25:data={PolicyId:this.props.match.params.id,EntryType:'',NewEntryDate:moment(this.state.newEntryDate).format(CommonConfig.dateFormat.dbDateTime),TransactionType:this.state.transactionType,ReferenceId:this.state.referenceId,Description:this.state.description,PaymentAmount:this.state.paymentAmount,PaymentMode:this.state.paymentMode,PaymentStatus:\"Success\",Note:this.state.note,CreatedBy:CommonConfig.loggedInUserId(),PaymentEntries:this.state.OutstandingTransactions,LanguageId:this.state.LanguageId};if(!(data.PaymentMode==\"Debit/Credit Card\")){_context.next=70;break;}if(!(this.state.CardholderName===''||this.state.CardholderName===null||this.state.CardholderName==='null'||this.state.CardholderName==='NULL'||this.state.CardholderName==='undefined'||this.state.CardholderName===undefined)){_context.next=32;break;}this.show(\"CardholderName\",true,\"CardholderNameError\",\"Please enter CardholderName\");return _context.abrupt(\"return\");case 32:if(!(this.state.CardNumber===''||this.state.CardNumber===null||this.state.CardNumber==='null'||this.state.CardNumber==='NULL'||this.state.CardNumber==='undefined'||this.state.CardNumber===undefined)){_context.next=37;break;}this.show(\"CardNumber\",true,\"CardNumberError\",\"Please enter CardNumber\");return _context.abrupt(\"return\");case 37:if(!(this.state.CardType===''||this.state.CardType===null||this.state.CardType==='null'||this.state.CardType==='NULL'||this.state.CardType==='undefined'||this.state.CardType===undefined)){_context.next=42;break;}this.show('CardType',true,\"CardTypeError\",\"Select CardType\");return _context.abrupt(\"return\");case 42:if(!(this.state.ExpiryMonth===''||this.state.ExpiryMonth===null||this.state.ExpiryMonth==='null'||this.state.ExpiryMonth==='NULL'||this.state.ExpiryMonth==='undefined'||this.state.ExpiryMonth===undefined)){_context.next=47;break;}this.show('ExpiryMonth',true,\"ExpiryMonthError\",\"Select ExpiryMonth\");return _context.abrupt(\"return\");case 47:if(!(this.state.ExpiryYear===''||this.state.ExpiryYear===null||this.state.ExpiryYear==='null'||this.state.ExpiryYear==='NULL'||this.state.ExpiryYear==='undefined'||this.state.ExpiryYear===undefined)){_context.next=52;break;}this.show('ExpiryYear',true,\"ExpiryYearError\",\"Select ExpiryYear\");return _context.abrupt(\"return\");case 52:if(!(this.state.CVV===''||this.state.CVV===null||this.state.CVV==='null'||this.state.CVV==='NULL'||this.state.CVV==='undefined'||this.state.CVV===undefined)){_context.next=57;break;}this.show(\"CVV\",true,\"CVVError\",\"Please enter valid CVV\");return _context.abrupt(\"return\");case 57:params=new URLSearchParams();params.append('CardNumber',this.state.CardNumber);params.append('CardholderName',this.state.CardholderName);params.append('ExpiryMonth',this.state.ExpiryMonth);params.append('ExpiryYear',this.state.ExpiryYear);params.append('CVV',this.state.CVV);params.append('TotalAmount',data.PaymentAmount);params.append('Currency',this.state.Currency);params.append('amount',data.PaymentAmount);_context.next=68;return axios({method:'post',url:CommonConfig.phpapi,data:params}).then(function(response){if(response.data.responseCode==\"00\"){toast.success(\"Payment has been done successfully.\");console.log(\"payment\",response.data);// console.log(\"fdsdsdffsd\",response.data.timestamp);\n// console.log(\"fdsdsdffsd\",response.data.transactionReference.transactionId);\n// console.log(\"fdsdsdffsd\",response.data.transactionReference.orderId);\nvar renewalPolicy={RenewalPolicyDate:_this14.state.RenewalDate,PolicyNo:_this14.state.policyNumber,PolicyHolderForeName:_this14.state.Forename,PolicyHolderSurName:_this14.state.Surname,ContactNo:_this14.state.ContactTelephoneNumber,PolicyHolderEmail:_this14.state.EmailId,Amount:data.PaymentAmount,CardHolderName:_this14.state.CardholderName,CardNumber:_this14.state.CardNumber,CardType:_this14.state.CardType,ExpiryMonth:_this14.state.ExpiryMonth,ExpiryYear:_this14.state.ExpiryYear,Cvv:_this14.state.CVV,PaymentSource:'Evolution',Currency:_this14.state.Currency,PaymentTimestamp:response.data.timestamp,PaymentTransactionId:response.data.transactionReference.transactionId,PaymentOrderId:response.data.transactionReference.orderId};api.post('api/renewalPolicy',renewalPolicy).then(function(res){console.log(\"res\",res);_this14.saveMakePaymentEntryCallAPI(data);}).catch(function(err){toast.error(\"Payment has been done successfully but not able to add entry in database.\");console.log(\"addUpdateAccountEntry error 2\",err);});}else{toast.error(\"payment not done\");}}).catch(function(error){console.log(error);});case 68:_context.next=71;break;case 70:this.saveMakePaymentEntryCallAPI(data);case 71:_context.next=76;break;case 73:_context.prev=73;_context.t0=_context[\"catch\"](0);console.log(\"saveMakePaymentEntry error 1\",_context.t0);case 76:case\"end\":return _context.stop();}}},_callee,this,[[0,73]]);}));function saveMakePaymentEntry(){return _saveMakePaymentEntry.apply(this,arguments);}return saveMakePaymentEntry;}()},{key:\"saveMakePaymentEntryCallAPI\",value:function saveMakePaymentEntryCallAPI(data){var _this15=this;console.log(\"saveMakePaymentEntry-request\",JSON.stringify(data));try{api.post('api/saveMakePaymentEntry',data).then(function(res){console.log(\"saveMakePaymentEntry-response\",res.data);if(res.success&&res.data.success){var i;(function(){var accountEntries=res.data.data[0].AccountEntries;var accountRecord=accountEntries.split(',');console.log(\"saveMakePaymentEntry-accountRecord\",accountRecord);for(i=0;i<accountRecord.length;i++){if(!CommonConfig.isEmpty(accountRecord[i])){var generateRecieptData={PolicyAccountId:accountRecord[i],loggedInUserId:CommonConfig.loggedInUserId()};api.post('api/generateReciept',generateRecieptData).then(function(generateRecieptRes){console.log(\"generateReciept \",i,accountRecord.length,generateRecieptRes);if(i==accountRecord.length){_this15.hideMakePaymentPopup();toast.success(res.data.message);setTimeout(function(){window.location.reload();},1000);}});}}})();}}).catch(function(err){toast.error(\"Not able to add entry in database.\");console.log(\"saveMakePaymentEntry-err\",err);});}catch(error){toast.error(\"Not able to add entry in database.\");console.log(\"saveMakePaymentEntry-err\",error);}}},{key:\"validateTransactionsTotal\",value:function validateTransactionsTotal(){var OutstandingTransactions=this.state.OutstandingTransactions;var PaymentAmount=this.state.paymentAmount;var TotalAmount=0;for(var i=0;i<OutstandingTransactions.length;i++){TotalAmount=parseFloat(TotalAmount)+parseFloat(OutstandingTransactions[i].AmountApplied);}if(PaymentAmount==TotalAmount){return false;}return true;}},{key:\"showReturnPaymentPopup\",value:function showReturnPaymentPopup(rowData){console.log(\"showReturnPaymentPopup>\",rowData);if(rowData===undefined){var statusDesc=this.state.returnPaymentData.ClientTransactionType+\" : Return Payment\";this.setState({toggleNewEntryModal:true,transactionType:'ReturnPayment',isMakePayment:true,isReturnPayment:true,newEntryDateError:false,chargeAmountError:false,calculateBalanceAFTPay:0,description:statusDesc,note:'',paymentAmount:0,descriptionError:false,paymentAmountError:false,entryTypeError:false,isEdit:false,isAccountRecordEdit:false,existOutstanding:0});if(!CommonConfig.isEmpty(this.state.returnPaymentData)){this.setState({paymentAmount:Math.abs(this.state.returnPaymentData.Balance)});}}else{this.setState({toggleNewEntryModal:true,transactionType:'ReturnPayment',isMakePayment:true,isReturnPayment:true,calculateBalanceAFTPay:this.state.paymentDue,description:rowData.Description,paymentAmount:Math.abs(rowData.PaymentAmount),paymentMode:rowData.PaymentMode,note:rowData.Note,isEdit:true,isAccountRecordEdit:true,newEntryDate:moment(rowData.TransactionDate).format(\"YYYY-MM-DD\"),existOutstanding:rowData.Outstanding});}}},{key:\"showBankDetailsPopup\",value:function showBankDetailsPopup(){var accountNameError=CommonConfig.isEmpty(this.state.accountName)?true:false;var bankNameError=CommonConfig.isEmpty(this.state.bankName)?true:false;var bankCountryError=CommonConfig.isEmpty(this.state.bankCountry)?true:false;var IBANError=CommonConfig.isEmpty(this.state.IBAN)?true:false;this.setState({toggleBnkDetailsModal:true,paymentAmountError:false,accountNameError:accountNameError,bankNameError:bankNameError,bankCountryError:bankCountryError,IBANError:IBANError});}},{key:\"hideEntryPopup\",value:function hideEntryPopup(){this.setState({toggleNewEntryModal:false,accountData:\"\",referenceId:'',description:'',ChargeAmount:0,chargeFee:0,paymentAmount:0,PaymentAmount:0,paymentStatus:'',paymentMode:'',descriptionError:true,paymentAmountError:true,paymentModeError:true,paymentStatusError:true,PolicyAccountId:'',newEntryDate:moment().format(\"YYYY-MM-DD\"),isEdit:false,isAccountRecordEdit:false,returnPaymentData:{}});this.calculateBalanceAFTPay();}},{key:\"hideBankDetailsPopup\",value:function hideBankDetailsPopup(){this.setState({toggleBnkDetailsModal:false,accountNameError:false,bankNameError:false,bankCountryError:false,IBANError:false,BICError:false,accountName:this.state.bankDetailsRes.AccountName,bankName:this.state.bankDetailsRes.BankName,bankCountry:this.state.bankDetailsRes.Country,IBAN:this.state.bankDetailsRes.IBAN,BIC:this.state.bankDetailsRes.BIC});}},{key:\"hidedeletePopup\",value:function hidedeletePopup(){this.setState({toggleModalDel:false});}},{key:\"addUpdateAccountEntry\",value:function(){var _addUpdateAccountEntry=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this16=this;var accountForm,API;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{if(this.state.newEntryDateError===false&&this.state.descriptionError===false&&this.state.paymentAmountError===false&&this.state.chargeAmountError===false&&this.state.paymentModeError===false&&this.state.entryTypeError===false){accountForm={PolicyId:this.props.match.params.id,PolicyAccountId:this.state.PolicyAccountId,EntryType:CommonConfig.isEmpty(this.state.entryType)?'':this.state.entryType,NewEntryDate:moment(this.state.newEntryDate).format(CommonConfig.dateFormat.dbDateTime),TransactionType:this.state.transactionType,ReferenceId:this.state.referenceId,Description:this.state.description,ChargeAmount:this.state.chargeAmount,ChargeFeeAmount:this.state.chargeFee,TotalChargeAmount:this.state.totalChargeAmount,PaymentAmount:this.state.paymentAmount,PaymentMode:this.state.paymentMode,PaymentStatus:\"Success\",Note:this.state.note,CreatedBy:CommonConfig.loggedInUserId(),Outstanding:Number(this.state.outstanding),Premium:Number(this.state.updatedPremium),AdminFee:Number(this.state.updatedPremiumAdminFee),Levy:Number(this.state.updatedPremiumLevy),LessLevy:Number(this.state.updatedPremiumLessLevy),LanguageId:this.state.LanguageId};if(accountForm.TransactionType=='ReturnPayment'){accountForm.TransactionUniqueReferenceId=this.state.returnPaymentData.UniqueReferenceId.toString();}API='api/addUpdateAccountEntry';if(this.state.isReturnPayment){API='api/addReturnPaymentEntry';}console.log(\"addReturnPaymentEntry > \",accountForm);api.post(API,accountForm).then(function(res){console.log(\"addUpdateAccountEntry>\",res);if(res.success){if(res.data.success){if(_this16.state.isMakePayment&&!_this16.state.isReturnPayment){var generateRecieptData={PolicyAccountId:res.data.data,loggedInUserId:CommonConfig.loggedInUserId()};api.post('api/generateReciept',generateRecieptData).then(function(generateRecieptRes){if(res.success){toast.success(res.data.message);_this16.hideEntryPopup();setTimeout(function(){// window.location.reload();\n},1000);}});}else{toast.success(res.data.message);_this16.hideEntryPopup();setTimeout(function(){window.location.reload();},1000);}}else{toast.error(res.data.message);_this16.hideEntryPopup();setTimeout(function(){window.location.reload();},1000);}}}).catch(function(err){console.log(\"addUpdateAccountEntry error 2\",err);_this16.hideEntryPopup();setTimeout(function(){window.location.reload();},1000);});}else{this.show(\"newEntryDate\",this.state.newEntryDateError,\"newEntryDateError\",\"Please enter transaction date\");this.show(\"description\",this.state.descriptionError,\"descriptionError\",\"Please enter description\");this.show(\"paymentAmount\",this.state.paymentAmountError,\"paymentAmountError\",\"Please enter payment amount\");this.show(\"chargeAmount\",this.state.chargeAmountError,\"chargeAmountError\",\"Please enter charge amount\");this.show(\"paymentMode\",this.state.paymentModeError,\"paymentModeError\",\"Please select payment mode\");this.show(\"entryType\",this.state.entryTypeError,\"entryTypeError\",\"Please select type\");}}catch(error){console.log(\"addUpdateAccountEntry error 1\",error);}case 1:case\"end\":return _context2.stop();}}},_callee2,this);}));function addUpdateAccountEntry(){return _addUpdateAccountEntry.apply(this,arguments);}return addUpdateAccountEntry;}()},{key:\"getUserBankAccountDetails\",value:function getUserBankAccountDetails(){var _this17=this;try{var data={EntityId:this.props.EntityId,EntityType:this.props.EntityType};console.log(\"getUserBankAccountDetails > req\",data);api.post(APIConstant.path.getUserBankAccountDetails,data).then(function(res){console.log(\"getUserBankAccountDetails > res\",res);if(res.data.length){var BankExists=1;_this17.setState({accountNameError:false,IBANError:false,BICError:false,bankNameError:false,bankCountryError:false});}else{_this17.setState({EntityBankDetailId:'',accountName:'',IBAN:'',BIC:'',bankName:'',bankCountry:'',bankExists:0,bankDetailsRes:[]});_this17.setState({accountNameError:true,IBANError:true,BICError:false,bankNameError:true,bankCountryError:true});}if(res.success){_this17.setState({EntityBankDetailId:res.data[0].EntityBankDetailId,accountName:res.data[0].AccountName,IBAN:res.data[0].IBAN,BIC:res.data[0].BIC,bankName:res.data[0].BankName,bankCountry:res.data[0].Country,bankExists:BankExists,bankDetailsRes:res.data[0]});}else{console.log(\"else\");}}).catch(function(err){console.log(\"sss\",err);});}catch(error){console.log(\"ssss\",error);}}},{key:\"addUpdateBankDetails\",value:function addUpdateBankDetails(){var _this18=this;try{if(this.state.accountNameError===false&&this.state.bankNameError===false&&this.state.bankCountryError===false&&this.state.IBANError===false){var data={EntityBankDetailId:this.state.EntityBankDetailId,entityId:this.props.EntityId,EntityType:this.props.EntityType,AccountName:this.state.accountName,IBAN:this.state.IBAN,BIC:this.state.BIC,BankName:this.state.bankName,Country:this.state.bankCountry,LoggedInUserId:CommonConfig.loggedInUserId()};api.post('api/addUpdateBankDetails',data).then(function(res){if(res.success){if(res.data.success){toast.success(res.data.message);// window.location.reload();\n}else{toast.error(res.data.message);}setTimeout(function(){_this18.getUserBankAccountDetails();_this18.hideBankDetailsPopup();},100);}}).catch(function(err){console.log(\"addUpdateAccountEntry error 2\",err);});}else{this.show(\"accountName\",this.state.accountNameError,'accountNameError','Please enter Account Name');this.show(\"bankName\",this.state.bankNameError,'bankNameError','Please enter Bank Name.');this.show(\"bankCountry\",this.state.bankCountryError,'bankCountryError','Please select country.');this.show(\"IBAN\",this.state.IBANError,'IBANError','Please enter valid IBAN.');//this.show(\"BIC\", this.state.BICError);\n}}catch(error){console.log(\"error\",error);}}},{key:\"clearBankDetails\",value:function clearBankDetails(){var _this19=this;try{var data={EntityBankDetailId:this.state.EntityBankDetailId,EntityId:this.props.EntityId,LoggedInUserId:CommonConfig.loggedInUserId()};console.log(\"clearBankDetails\",data);api.post('api/clearBankDetails',data).then(function(res){console.log(\"clearBankDetails > res\",res);if(res.success){if(res.data.success){toast.success(res.data.message);}else{toast.error(res.data.message);}setTimeout(function(){_this19.getUserBankAccountDetails();_this19.hideBankDetailsPopup();},100);}}).catch(function(err){console.log(\"clearBankDetails error\",err);});}catch(error){console.log(\"clearBankDetails > error\",error);}}},{key:\"onRadioBtnClick\",value:function onRadioBtnClick(radioSelected){this.setState({newEntryDate:moment().format('YYYY-MM-DD'),transactionType:'Debit',referenceId:'',description:'',chargeAmount:0,chargeFee:0,totalChargeAmount:0,paymentAmount:0,paymentMode:'',paymentStatus:'',note:'',addedBy:'',addedDate:'',updatedBy:'',updatedDate:''});// this.resetAccountForm();\nthis.setState({transactionType:radioSelected});if(radioSelected=='Credit'){this.setState({paymentAmountError:true,chargeAmountError:false});}}},{key:\"selectType\",value:function selectType(value,type){if(type==='paymentMode'){if(CommonConfig.isEmpty(value)){this.setState({paymentModeError:true,paymentMode:value});this.show('paymentMode',true,\"paymentModeError\",\"Select payment mode\");}else{this.setState({paymentModeError:false,paymentMode:value});this.show('paymentMode',false,\"paymentModeError\",\"\");}}if(type==='paymentStatus'){if(CommonConfig.isEmpty(value)){this.setState({paymentStatusError:true,paymentStatus:value});this.show('paymentStatus',true,\"paymentStatusError\",\"Select payment status\");}else{this.setState({paymentStatusError:false,paymentStatus:value});this.show('paymentStatus',false,\"paymentStatusError\",\"\");}}if(type==='bankCountry'){if(CommonConfig.isEmpty(value)){this.setState({bankCountryError:true,bankCountry:value});this.show(\"bankCountry\",true,\"bankCountryError\",\"Please select Country\");}else{this.setState({bankCountryError:false,bankCountry:value});this.show(\"bankCountry\",false,\"bankCountryError\",\"\");}}if(type==='CardType'){if(CommonConfig.isEmpty(value)){this.setState({CardTypeError:true,CardType:value});this.show('CardType',true,\"CardTypeError\",\"Select CardType\");}else{this.setState({CardTypeError:false,CardType:value});this.show('CardType',false,\"CardTypeError\",\"\");}// this.setState({ CardType: value });\n}if(type==='ExpiryMonth'){if(CommonConfig.isEmpty(value)){this.setState({ExpiryMonthError:true,ExpiryMonth:value});this.show('ExpiryMonth',true,\"ExpiryMonthError\",\"Select ExpiryMonth\");}else{this.setState({ExpiryMonthError:false,ExpiryMonth:value});this.show('ExpiryMonth',false,\"ExpiryMonthError\",\"\");}// this.setState({ ExpiryMonth: value });\n}if(type==='ExpiryYear'){if(CommonConfig.isEmpty(value)){this.setState({ExpiryYearError:true,ExpiryYear:value});this.show('ExpiryYear',true,\"ExpiryYearError\",\"Select ExpiryYear\");}else{this.setState({ExpiryYearError:false,ExpiryYear:value});this.show('ExpiryYear',false,\"ExpiryYearError\",\"\");}// this.setState({ ExpiryYear: value });\n}if(type==='entryType'){if(CommonConfig.isEmpty(value)){this.setState({entryTypeError:true,entryType:value});this.show('entryType',true,\"entryTypeError\",\"Please select type\");}else{this.setState({entryTypeError:false,entryType:value,description:value});this.show('entryType',false,\"entryTypeError\",\"\");}}}},{key:\"show\",value:function show(field,condition,errorField,message){if(condition){if(document.getElementById(field))document.getElementById(field).className=\"form-control is-invalid\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML='<p>'+message+' </p>';}else{if(document.getElementById(field))document.getElementById(field).className=\"form-control\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML=null;}}},{key:\"handleChangeAmount\",value:function handleChangeAmount(e,i){var value=e.target.value;if(CommonConfig.isEmpty(value)){value='';}var SystemOutstandingTransactions=this.state.SystemOutstandingTransactions;var OutstandingTransactions=this.state.OutstandingTransactions;var transaction=SystemOutstandingTransactions[i];var AmountApplied=value;var TotalDue=transaction.TotalDue;var LevyTotalAmount=transaction.LevyTotalAmount;var Outstanding=transaction.Outstanding;OutstandingTransactions[i].AmountApplied=AmountApplied;if(Outstanding>=AmountApplied){var UpdatedAdminFee=0;var OutstandingAfterPayment=0;var UpdatedLevy=0;var UpdatedNetPremium=0;OutstandingAfterPayment=Outstanding-AmountApplied;UpdatedAdminFee=transaction.AdminFee*AmountApplied/TotalDue;UpdatedLevy=AmountApplied*LevyTotalAmount/TotalDue;UpdatedNetPremium=AmountApplied-UpdatedLevy-UpdatedAdminFee;OutstandingTransactions[i].OutstandingAfterPayment=Number(OutstandingAfterPayment).toFixed(2);OutstandingTransactions[i].UpdatedNetPremium=Number(UpdatedNetPremium).toFixed(2);OutstandingTransactions[i].UpdatedLevy=Number(UpdatedLevy).toFixed(2);OutstandingTransactions[i].UpdatedAdminFee=Number(UpdatedAdminFee).toFixed(2);this.show(\"AmountApplied\",false,\"AmountAppliedError\",\"\");}else{this.show(\"AmountApplied\",true,\"AmountAppliedError\",\"Please enter proper amount\");}this.setState({OutstandingTransactions:OutstandingTransactions});}},{key:\"resetAccountForm\",value:function resetAccountForm(){this.setState({newEntryDate:moment().format('YYYY-MM-DD'),transactionType:'Debit',referenceId:'',description:'',chargeAmount:0,chargeFee:0,totalChargeAmount:0,paymentAmount:0,paymentMode:'',paymentStatus:'',note:'',addedBy:'',addedDate:'',updatedBy:'',updatedDate:'',PolicyAccountId:'',isMakePayment:false,isReturnPayment:false,newEntryDateError:false,descriptionError:true,chargeAmountError:true,paymentAmountError:false,paymentModeError:false,paymentStatusError:true});this.calculateBalanceAFTPay();this.totalChargeAmt();}},{key:\"calculateBalanceAFTPay\",value:function calculateBalanceAFTPay(){var _this20=this;if(this.state.paymentDue&&this.state.paymentAmount){setTimeout(function(){var calculateBalanceAFTPay=0;var calculateBalanceAFTPay=Number(_this20.state.paymentDue)-Number(_this20.state.paymentAmount);_this20.setState({calculateBalanceAFTPay:calculateBalanceAFTPay});},100);// console.log(\"calculateBalanceAFTPay\", this.state.calculateBalanceAFTPay);\n}}},{key:\"totalChargeAmt\",value:function totalChargeAmt(){var _this21=this;if(this.state.chargeAmount){setTimeout(function(){var totalAmount=0;var totalAmount=Number(_this21.state.chargeAmount)+Number(_this21.state.chargeFee);_this21.setState({totalChargeAmount:totalAmount});},100);console.log(\"totalAmount\",this.state.totalAmount);}}},{key:\"calculatePremium\",value:function calculatePremium(){try{var SystemOutstandingTransactions=this.state.SystemOutstandingTransactions;var OutstandingTransactions=this.state.OutstandingTransactions;var PaymentAmount=this.state.paymentAmount;var ExistOutstanding=Number(this.state.existOutstanding);var RemainingPaymentAmount=PaymentAmount;for(var i=0;i<SystemOutstandingTransactions.length;i++){var transaction=SystemOutstandingTransactions[i];var AmountApplied=0;var TotalDue=transaction.TotalDue;var LevyTotalAmount=transaction.LevyTotalAmount;var Outstanding=transaction.Outstanding;var OutstandingAfterPayment=0;var UpdatedNetAmount=0;var UpdatedNetPremium=0;var UpdatedLevy=0;var UpdatedAdminFee=0;if(RemainingPaymentAmount>0){AmountApplied=RemainingPaymentAmount<=Outstanding?RemainingPaymentAmount:Outstanding;OutstandingAfterPayment=Outstanding-AmountApplied;UpdatedAdminFee=transaction.AdminFee*AmountApplied/TotalDue;UpdatedNetAmount=AmountApplied-UpdatedAdminFee;UpdatedLevy=AmountApplied*LevyTotalAmount/TotalDue;UpdatedNetPremium=AmountApplied-UpdatedLevy-UpdatedAdminFee;RemainingPaymentAmount=RemainingPaymentAmount-AmountApplied;}OutstandingTransactions[i].AmountApplied=Number(AmountApplied).toFixed(2);OutstandingTransactions[i].OutstandingAfterPayment=Number(OutstandingAfterPayment).toFixed(2);OutstandingTransactions[i].UpdatedNetPremium=Number(UpdatedNetPremium).toFixed(2);OutstandingTransactions[i].UpdatedLevy=Number(UpdatedLevy).toFixed(2);OutstandingTransactions[i].UpdatedAdminFee=Number(UpdatedAdminFee).toFixed(2);}this.setState({OutstandingTransactions:OutstandingTransactions});}catch(error){console.log(\"calculatePremium >> error\",error);}}},{key:\"getCurrentDecription\",value:function getCurrentDecription(){var desc=\"\";var policyAccountList=this.state.policyAccountList;policyAccountList=policyAccountList.filter(function(val){return val.SystemEntryType!='';});if(policyAccountList.length){desc=policyAccountList[0].SystemEntryType;}return desc;}},{key:\"getPolicyOutstandingTransaction\",value:function getPolicyOutstandingTransaction(rowData){var _this22=this;console.log('rowData >',rowData);var data={PolicyId:this.props.match.params.id,LoggedInUserId:CommonConfig.loggedInUserId(),UniqueReferenceId:''};if(rowData!==undefined){data.UniqueReferenceId=rowData.UniqueReferenceId;}api.post('api/getPolicyOutstandingTransaction',data).then(function(res){console.log(\"getPolicyOutstandingTransaction res\",res);if(res.success){if(res.data[0].length){_this22.setState({SystemOutstandingTransactions:res.data[0],OutstandingTransactions:res.data[0]});var statusDesc=rowData.ClientTransactionType;// this.getCurrentDecription();\n_this22.setState({isPaymentPopup:true,transactionType:'Payment',description:statusDesc,paymentAmount:res.data[0][0].Outstanding,descriptionError:false,paymentAmountError:false,existOutstanding:0,isEdit:false,newEntryDateError:false});setTimeout(function(){_this22.calculatePremium();},100);}else{toast.warn(\"There is no Payment Due for this Policy.\");}}}).catch(function(err){console.log(\"getPolicyOutstandingTransaction error\",err);});}},{key:\"getBatchPaymentDetails\",value:function getBatchPaymentDetails(rowData){var _this23=this;var data={PolicyAccountId:this.state.PolicyAccountId};console.log(\"getBatchPaymentDetails rowdata \",rowData);api.post('api/getBatchPaymentDetails',data).then(function(res){console.log(\"getBatchPaymentDetails res\",res);if(res.success){if(res.data.length){var OutstandingTransactions=res.data;_this23.setState({OutstandingTransactions:OutstandingTransactions});console.log(\"getBatchPaymentDetails > OutstandingTransactions\",OutstandingTransactions);var paymentAmountTotal=0;for(var i in OutstandingTransactions){paymentAmountTotal+=parseFloat(OutstandingTransactions[i].PaymentAmount);}_this23.setState({isPaymentPopup:true,transactionType:'Payment',paymentAmountError:false,paymentAmount:paymentAmountTotal.toFixed(2),description:rowData.Description,descriptionError:false,existOutstanding:0,isEdit:true,newEntryDate:moment(rowData.TransactionDate).format(\"YYYY-MM-DD\"),paymentMode:rowData.PaymentMode,note:rowData.Note});}}}).catch(function(err){console.log(\"getBatchPaymentDetails error\",err);});}},{key:\"shortWriteoff\",value:function shortWriteoff(UniqueReferenceId,writeoffAmount){try{var data={PolicyId:this.state.policyId,UniqueReferenceId:UniqueReferenceId,PaymentAmount:writeoffAmount,LoggedInUserId:CommonConfig.loggedInUserId()};console.log(\"shortWriteoff > \",data);api.post('api/shortWriteoff',data).then(function(res){console.log(\"shortWriteoff > res >\",res);if(res.success){if(res.data.success){toast.success(res.data.message);window.location.reload();}else{toast.error(res.data.message);}}}).catch(function(err){console.log(\"shortWriteoff > error > 1\",err);});}catch(error){console.log(\"shortWriteoff > error > 2\",error);}}},{key:\"getLapsePolicyDetails\",value:function getLapsePolicyDetails(){var _this24=this;try{var data={PolicyId:this.props.match.params.id,LoggedInUserId:CommonConfig.loggedInUserId()};api.post('api/getLapsePolicyDetails',data).then(function(res){console.log(\"getLapsePolicyDetails > res >\",res);if(res.success){if(res.data.length){_this24.setState({IsLapsePolicy:res.data[0].IsLapsePolicy,DaysOverdue:res.data[0].DaysOverdue,RenewalDate:res.data[0].RenewalDate});}}}).catch(function(err){console.log(\"getLapsePolicyDetails > error > 1\",err);});}catch(error){console.log(\"getLapsePolicyDetails > error > 2\",error);}}},{key:\"showLapsePolicyPopup\",value:function showLapsePolicyPopup(){this.setState({IsLapsePolicyPopup:true,lapsePolicyNote:''});}},{key:\"hideLapsePolicyPopup\",value:function hideLapsePolicyPopup(){this.setState({IsLapsePolicyPopup:false,lapsePolicyNote:''});}},{key:\"lapsePolicy\",value:function lapsePolicy(){try{var data={PolicyId:this.state.policyId,Note:this.state.lapsePolicyNote,LoggedInUserId:CommonConfig.loggedInUserId()};api.post('api/lapsePolicy',data).then(function(res){console.log(\"lapsePolicy > res >\",res);if(res.success){if(res.data.success){toast.success(res.data.message);setTimeout(function(){window.location.reload();},100);}else{toast.error(res.data.message);setTimeout(function(){window.location.reload();},100);}}else{toast.error(res.message);setTimeout(function(){window.location.reload();},100);}}).catch(function(err){console.log(\"lapsePolicy > error > 1\",err);setTimeout(function(){window.location.reload();},100);});}catch(error){console.log(\"lapsePolicy > error > 2\",error);}}},{key:\"cancelTransaction\",value:function cancelTransaction(data){console.log(\"cancelTransaction >> \",data);}},{key:\"hideTransferFundPopup\",value:function hideTransferFundPopup(){this.setState({isTransferFundPopup:false,paymentMode:'',transferFundData:'',paymentAmountRemains:0,PolicyOutstandingTransactions:''});}},{key:\"handleTransferFundChangeAmount\",value:function handleTransferFundChangeAmount(e,i){var value=e.target.value;if(CommonConfig.isEmpty(value)){value='';}var SystemPolicyOutstandingTransactions=this.state.SystemPolicyOutstandingTransactions;var PolicyOutstandingTransactions=this.state.PolicyOutstandingTransactions;var transaction=SystemPolicyOutstandingTransactions[i];var AmountApplied=value;var TotalDue=transaction.TotalDue;var LevyTotalAmount=transaction.LevyTotalAmount;var Outstanding=transaction.Outstanding;PolicyOutstandingTransactions[i].AmountApplied=AmountApplied;if(Outstanding>=AmountApplied){var UpdatedAdminFee=0;var OutstandingAfterPayment=0;var UpdatedLevy=0;var UpdatedNetPremium=0;OutstandingAfterPayment=Outstanding-AmountApplied;UpdatedAdminFee=transaction.AdminFee*AmountApplied/TotalDue;UpdatedLevy=AmountApplied*LevyTotalAmount/TotalDue;UpdatedNetPremium=AmountApplied-UpdatedLevy-UpdatedAdminFee;PolicyOutstandingTransactions[i].OutstandingAfterPayment=Number(OutstandingAfterPayment).toFixed(2);PolicyOutstandingTransactions[i].UpdatedNetPremium=Number(UpdatedNetPremium).toFixed(2);PolicyOutstandingTransactions[i].UpdatedLevy=Number(UpdatedLevy).toFixed(2);PolicyOutstandingTransactions[i].UpdatedAdminFee=Number(UpdatedAdminFee).toFixed(2);this.show(\"AmountApplied\"+i,false,\"AmountAppliedError\",\"\");}else{this.show(\"AmountApplied\"+i,true,\"AmountAppliedError\",\"Please enter proper amount\");}this.setState({PolicyOutstandingTransactions:PolicyOutstandingTransactions});var PaymentAmount=this.state.paymentAmount;var TotalAmount=0;for(var _i=0;_i<PolicyOutstandingTransactions.length;_i++){var POAmountApplied=PolicyOutstandingTransactions[_i].AmountApplied==''?0:PolicyOutstandingTransactions[_i].AmountApplied;TotalAmount=parseFloat(TotalAmount)+parseFloat(POAmountApplied);}var paymentAmountRemains=Number(PaymentAmount-TotalAmount).toFixed(2);this.setState({paymentAmountRemains:paymentAmountRemains});}},{key:\"getAccountTransferFund\",value:function getAccountTransferFund(rowData){var _this25=this;try{console.log(\"getAccountTransferFund > rowData\",rowData);var data={PolicyId:this.state.policyId,CurrentUser:CommonConfig.loggedInUserId()};api.post('api/getAccountTransferFund',data).then(function(res){console.log(\"getAccountTransferFund > res\",res);if(res.success){if(res.data[0].length){_this25.setState({isTransferFundPopup:true,PolicyOutstandingTransactions:res.data[0],SystemPolicyOutstandingTransactions:res.data[0],transactionType:'Payment',description:'Transfer a Fund',paymentMode:'Fund Transfer',paymentAmount:Math.abs(rowData.Balance),existOutstanding:0,isEdit:false,paymentModeError:false,newEntryDateError:false,descriptionError:false,paymentAmountError:false,transferFundData:rowData});setTimeout(function(){_this25.calculateTransferFundPremium();},100);}else{toast.warn(\"There are no Payment Due for any Policy of \"+_this25.state.policyHolder+\".\");}}else{toast.error('There are no due for other Policy of '+_this25.state.policyHolder+'.');}}).catch(function(err){console.log(\"getAccountTransferFund error\",err);toast.error(err);});}catch(error){console.log(\"getAccountTransferFund > error \",error);toast.error(error);}}},{key:\"calculateTransferFundPremium\",value:function calculateTransferFundPremium(){try{var SystemPolicyOutstandingTransactions=this.state.SystemPolicyOutstandingTransactions;var PolicyOutstandingTransactions=this.state.PolicyOutstandingTransactions;var PaymentAmount=this.state.paymentAmount;var ExistOutstanding=Number(this.state.existOutstanding);var RemainingPaymentAmount=PaymentAmount;for(var i=0;i<SystemPolicyOutstandingTransactions.length;i++){var transaction=SystemPolicyOutstandingTransactions[i];console.log(\"transaction\",transaction);var AmountApplied=0;var TotalDue=Number(transaction.TotalDue);var LevyTotalAmount=Number(transaction.LevyTotalAmount);var Outstanding=Number(transaction.Outstanding);var OutstandingAfterPayment=0;var UpdatedNetAmount=0;var UpdatedNetPremium=0;var UpdatedLevy=0;var UpdatedAdminFee=0;if(RemainingPaymentAmount>0){AmountApplied=RemainingPaymentAmount<=Outstanding?Number(RemainingPaymentAmount):Number(Outstanding);OutstandingAfterPayment=Outstanding-AmountApplied;UpdatedAdminFee=transaction.AdminFee*AmountApplied/TotalDue;UpdatedNetAmount=AmountApplied-UpdatedAdminFee;UpdatedLevy=AmountApplied*LevyTotalAmount/TotalDue;UpdatedNetPremium=AmountApplied-UpdatedLevy-UpdatedAdminFee;RemainingPaymentAmount=RemainingPaymentAmount-AmountApplied;}else{OutstandingAfterPayment=Outstanding-AmountApplied;}PolicyOutstandingTransactions[i].AmountApplied=Number(AmountApplied).toFixed(2);PolicyOutstandingTransactions[i].OutstandingAfterPayment=Number(OutstandingAfterPayment).toFixed(2);PolicyOutstandingTransactions[i].UpdatedNetPremium=Number(UpdatedNetPremium).toFixed(2);PolicyOutstandingTransactions[i].UpdatedLevy=Number(UpdatedLevy).toFixed(2);PolicyOutstandingTransactions[i].UpdatedAdminFee=Number(UpdatedAdminFee).toFixed(2);}this.setState({PolicyOutstandingTransactions:PolicyOutstandingTransactions,paymentAmountRemains:RemainingPaymentAmount});}catch(error){console.log(\"calculatePremium >> error\",error);}}},{key:\"validateTransferFundTotal\",value:function validateTransferFundTotal(){console.log(\"validateTransferFundTotal >\",this.state);var PolicyOutstandingTransactions=this.state.PolicyOutstandingTransactions;var PaymentAmount=this.state.paymentAmount;var TotalAmount=0;for(var i=0;i<PolicyOutstandingTransactions.length;i++){TotalAmount=parseFloat(TotalAmount)+parseFloat(PolicyOutstandingTransactions[i].AmountApplied);}if(TotalAmount>0&&TotalAmount<=PaymentAmount){return false;}return true;}},{key:\"saveTransferFund\",value:function saveTransferFund(){try{if(this.state.newEntryDateError){toast.error('Please Enter Transaction Date');}else if(this.state.descriptionError){toast.error('Please Enter Description');}else if(this.state.paymentAmountError){toast.error('Please Enter Payment Amount');}else if(this.state.paymentModeError){toast.error('Please Select Payment Mode');}else if(this.state.paymentAmount==0){toast.error('Payment amount can not be 0.');}else if(this.validateTransferFundTotal()){toast.error('Total Amount Applied must be in between 1 to '+this.state.paymentAmount+'.');}else{var data={PolicyId:this.props.match.params.id,EntryType:'',TransferFundRecord:this.state.transferFundData,NewEntryDate:moment(this.state.newEntryDate).format(CommonConfig.dateFormat.dbDateTime),TransactionType:this.state.transactionType,ReferenceId:this.state.referenceId,Description:this.state.description,PaymentAmount:this.state.paymentAmount,PaymentMode:this.state.paymentMode,PaymentStatus:\"Success\",Note:this.state.note,CreatedBy:CommonConfig.loggedInUserId(),PaymentEntries:this.state.PolicyOutstandingTransactions,LanguageId:this.state.LanguageId};console.log(\"saveTransferFund > \",data);this.saveTransferFundAPICall(data);}}catch(error){console.log(\"saveMakePaymentEntry error 1\",JSON.stringify(error));}}},{key:\"saveTransferFundAPICall\",value:function saveTransferFundAPICall(data){var _this26=this;console.log(\"saveTransferFund-request\",JSON.stringify(data));try{api.post('api/saveTransferFund',data).then(function(res){console.log(\"saveTransferFund-response\",res.data);if(res.success&&res.data.success){_this26.hideTransferFundPopup();toast.success(res.data.message);setTimeout(function(){window.location.reload();},1000);}}).catch(function(err){toast.error(\"Not able to add entry in database.\");console.log(\"saveTransferFund-err\",err);});}catch(error){toast.error(\"Not able to add entry in database.\");console.log(\"saveTransferFund-err\",error);}}},{key:\"render\",value:function render(){var _this27=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"table-custom\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\",style:{alignSelf:'center'}},/*#__PURE__*/React.createElement(\"span\",null,\" Policy Number: \",this.state.policyNumber)),/*#__PURE__*/React.createElement(Col,{md:\"10\",className:\"p-0\"},/*#__PURE__*/React.createElement(BTN,{type:\"button\",icon:\"fa fa-bank\",className:\"p-button-primary\",tooltip:\"Bank Details\",tooltipOptions:{position:'bottom'},onClick:function onClick(){return _this27.showBankDetailsPopup();}}),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"inline-block\",margin:\"10px 20px\"}},/*#__PURE__*/React.createElement(\"h5\",null,\"Payment Due : \",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\"  \",this.state.paymentDue?this.state.paymentDue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"):0)),this.state.IsLapsePolicy?/*#__PURE__*/React.createElement(\"div\",{style:{alignSelf:'center',display:\"inline-block\",margin:\"10px\"}},/*#__PURE__*/React.createElement(\"small\",null,\"Renewal Date: \",moment(this.state.RenewalDate).format(CommonConfig.dateFormat.dateOnly),\"(\",this.state.DaysOverdue<0?this.state.DaysOverdue+' Day(s) Overdue':Math.abs(this.state.DaysOverdue)+' Day(s) to Renewal',\")\"),/*#__PURE__*/React.createElement(Button,{style:{margin:\"10px\"},color:\"danger\",onClick:function onClick(){return _this27.showLapsePolicyPopup();}},\"Lapse Policy\")):null)),/*#__PURE__*/React.createElement(BootstrapTable,{keyField:\"SequenceNumber\",data:this.state.arr,columns:this.state.cols,expandRow:this.expandRow}),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.toggleNewEntryModal,className:'modal-lg',style:{maxWidth:'70%'}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this27.hideEntryPopup();}},this.state.transactionType=='Payment'||this.state.transactionType=='ReturnPayment'?'Payment Entry':'Journal Entry'),/*#__PURE__*/React.createElement(Col,{style:{margin:\"20px\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyNumber),\" \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy Type \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyType),\" \")),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy Holder \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyHolder),\" \")),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\"Transaction Date*\"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,type:\"date\",name:\"newEntryDate\",id:\"newEntryDate\",placeholder:\"transaction date\",onBlur:function onBlur(e){return _this27.handleChange(e);},onChange:function onChange(e){return _this27.handleChange(e);},value:this.state.newEntryDate,min:moment().subtract(100,'years').format('DD-MM-YYYY'),max:moment().format('DD-MM-YYYY')}),/*#__PURE__*/React.createElement(\"em\",{id:\"newEntryDateError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Description* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"description\",type:\"text\",id:\"description\",className:\"\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.description,disabled:this.state.isEdit}),/*#__PURE__*/React.createElement(\"em\",{id:\"descriptionError\",className:\"error invalid-feedback\"}))),this.state.transactionType==='Debit'?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Charge Amount* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"chargeAmount\",type:\"text\",id:\"chargeAmount\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.chargeAmount,disabled:this.state.isEdit}),/*#__PURE__*/React.createElement(\"em\",{id:\"chargeAmountError\",className:\"error invalid-feedback\"})))):null,this.state.transactionType==='Credit'?/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Adj Amount* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"paymentAmount\",type:\"number\",id:\"paymentAmount\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.paymentAmount,disabled:this.state.isEdit}),/*#__PURE__*/React.createElement(\"em\",{id:\"paymentAmountError\",className:\"error invalid-feedback\"}))):null,this.state.transactionType==='ReturnPayment'?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Payment Amount* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"paymentAmount\",type:\"number\",id:\"paymentAmount\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.paymentAmount,disabled:this.state.isEdit}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Return Payment Mode* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"paymentMode\",id:\"paymentMode\",disabled:this.state.isEdit,onChange:function onChange(e){return _this27.selectType(e.target.value,'paymentMode');},value:this.state.paymentMode},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select payment mode\"),this.state.returnPaymentModearr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.label,key:i},type.value);})),/*#__PURE__*/React.createElement(\"em\",{id:\"paymentModeError\",className:\"error invalid-feedback\"})))):null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Note \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"note\",type:\"textarea\",id:\"note\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.note,disabled:this.state.isEdit}))))),CommonConfig.isEmpty(this.state.PolicyAccountId)?/*#__PURE__*/React.createElement(\"div\",{style:{margin:20}},/*#__PURE__*/React.createElement(Row,{className:\"pull-right\",style:{backgroundColor:\"#fff\",marginRight:10}},/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"success\",onClick:function onClick(){return _this27.addUpdateAccountEntry();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-check\"}),\"Save\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"danger\",onClick:function onClick(){return _this27.hideEntryPopup();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-times\"}),\"Cancel\"))):null),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isPaymentPopup,className:'modal-lg',style:{maxWidth:'70%'}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this27.hideMakePaymentPopup();}},\"Payment Entry\"),/*#__PURE__*/React.createElement(\"div\",{style:{padding:20}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyNumber),\" \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy Type \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyType),\" \")),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy Holder \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyHolder),\" \")),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\"Transaction Date*\"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,type:\"date\",name:\"newEntryDate\",id:\"newEntryDate\",placeholder:\"transaction date\",onBlur:function onBlur(e){return _this27.handleChange(e);},onChange:function onChange(e){return _this27.handleChange(e);},value:this.state.newEntryDate,min:moment().subtract(100,'years').format('DD-MM-YYYY'),max:moment().format('DD-MM-YYYY')}),/*#__PURE__*/React.createElement(\"em\",{id:\"newEntryDateError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Description* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,name:\"description\",type:\"text\",id:\"description\",className:\"\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.description}),/*#__PURE__*/React.createElement(\"em\",{id:\"descriptionError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Payment Amount* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,name:\"paymentAmount\",type:\"number\",id:\"paymentAmount\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.paymentAmount}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Payment Mode* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,type:\"select\",name:\"paymentMode\",id:\"paymentMode\",onChange:function onChange(e){return _this27.selectType(e.target.value,'paymentMode');},value:this.state.paymentMode},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select payment mode\"),this.state.paymentModearr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.label,key:i},type.value);})),/*#__PURE__*/React.createElement(\"em\",{id:\"paymentModeError\",className:\"error invalid-feedback\"})))),this.state.OutstandingTransactions.length?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"table\",{border:\"1\",style:{width:'100%',marginTop:15,marginBottom:15}},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"th\",{style:{width:'20%'}},\"Transaction Type\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Reference Id\"),this.state.isEdit?null:/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Outstanding\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Amount Applied\"),this.state.isEdit?null:/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Outstanding After Payment\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Net Premium\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Levy\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Admin\")),/*#__PURE__*/React.createElement(\"tbody\",null,this.state.OutstandingTransactions.map(function(transaction,i){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,transaction.Narration),/*#__PURE__*/React.createElement(\"td\",null,transaction.UniqueReferenceId),_this27.state.isEdit?null:/*#__PURE__*/React.createElement(\"td\",null,transaction.Outstanding),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Input,{disabled:_this27.state.isEdit,name:\"AmountApplied\",id:\"AmountApplied\",type:\"number\",value:transaction.AmountApplied,onChange:function onChange(e){return _this27.handleChangeAmount(e,i);},onBlur:function onBlur(e){return _this27.handleChangeAmount(e,i);}})),_this27.state.isEdit?null:/*#__PURE__*/React.createElement(\"td\",null,transaction.OutstandingAfterPayment),/*#__PURE__*/React.createElement(\"td\",null,transaction.UpdatedNetPremium),/*#__PURE__*/React.createElement(\"td\",null,transaction.UpdatedLevy),/*#__PURE__*/React.createElement(\"td\",null,transaction.UpdatedAdminFee));}))),/*#__PURE__*/React.createElement(\"em\",{id:\"AmountAppliedError\",style:{color:'red'},className:\"error\"})):null,this.state.paymentMode=='Debit/Credit Card'?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Card Type (*) \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"CardType\",type:\"select\",id:\"CardType\",onChange:function onChange(e){return _this27.selectType(e.target.value,'CardType');},value:this.state.CardType},/*#__PURE__*/React.createElement(\"option\",{value:\"VISA\"},\"Visa\"),/*#__PURE__*/React.createElement(\"option\",{value:\"MC\"},\"Master Card\"),/*#__PURE__*/React.createElement(\"option\",{value:\"laser\"},\"Laser\")),/*#__PURE__*/React.createElement(\"em\",{id:\"CardTypeError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Cardholder Name (*) \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"CardholderName\",type:\"text\",id:\"CardholderName\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.CardholderName}),/*#__PURE__*/React.createElement(\"em\",{id:\"CardholderNameError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Card Number (*) \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"CardNumber\",type:\"text\",id:\"CardNumber\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.CardNumber}),/*#__PURE__*/React.createElement(\"em\",{id:\"CardNumberError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Expiry (*) \"),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(Input,{name:\"ExpiryMonth\",type:\"select\",id:\"ExpiryMonth\",onChange:function onChange(e){return _this27.selectType(e.target.value,'ExpiryMonth');},value:this.state.ExpiryMonth},/*#__PURE__*/React.createElement(\"option\",{value:\"1\"},\"1\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2\"},\"2\"),/*#__PURE__*/React.createElement(\"option\",{value:\"3\"},\"3\"),/*#__PURE__*/React.createElement(\"option\",{value:\"4\"},\"4\"),/*#__PURE__*/React.createElement(\"option\",{value:\"5\"},\"5\"),/*#__PURE__*/React.createElement(\"option\",{value:\"6\"},\"6\"),/*#__PURE__*/React.createElement(\"option\",{value:\"7\"},\"7\"),/*#__PURE__*/React.createElement(\"option\",{value:\"8\"},\"8\"),/*#__PURE__*/React.createElement(\"option\",{value:\"9\"},\"9\"),/*#__PURE__*/React.createElement(\"option\",{value:\"10\"},\"10\"),/*#__PURE__*/React.createElement(\"option\",{value:\"11\"},\"11\"),/*#__PURE__*/React.createElement(\"option\",{value:\"12\"},\"12\")),/*#__PURE__*/React.createElement(\"em\",{id:\"ExpiryMonthError\",className:\"error invalid-feedback\"})),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(Input,{name:\"ExpiryYear\",type:\"select\",id:\"ExpiryYear\",onChange:function onChange(e){return _this27.selectType(e.target.value,'ExpiryYear');},value:this.state.ExpiryYear},/*#__PURE__*/React.createElement(\"option\",{value:\"2020\"},\"2020\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2021\"},\"2021\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2022\"},\"2022\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2023\"},\"2023\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2024\"},\"2024\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2025\"},\"2025\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2026\"},\"2026\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2027\"},\"2027\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2028\"},\"2028\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2029\"},\"2029\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2030\"},\"2030\")),/*#__PURE__*/React.createElement(\"em\",{id:\"ExpiryYearError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" CVV (*) \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{name:\"CVV\",type:\"password\",id:\"CVV\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.CVV}),/*#__PURE__*/React.createElement(\"em\",{id:\"CVVError\",className:\"error invalid-feedback\"})))):null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Note \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,name:\"note\",type:\"textarea\",id:\"note\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.note}))))),CommonConfig.isEmpty(this.state.PolicyAccountId)?/*#__PURE__*/React.createElement(\"div\",{style:{margin:20}},/*#__PURE__*/React.createElement(Row,{className:\"pull-right\",style:{backgroundColor:\"#fff\",marginRight:10}},/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"success\",onClick:function onClick(){return _this27.saveMakePaymentEntry();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-check\"}),\" Save\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"danger\",onClick:function onClick(){return _this27.hideMakePaymentPopup();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-times\"}),\" Cancel\"))):null),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isTransferFundPopup,className:'modal-lg',style:{maxWidth:'70%'}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this27.hideTransferFundPopup();}},\"Transfer a Fund\"),/*#__PURE__*/React.createElement(\"div\",{style:{padding:20}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyNumber),\" \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy Type \"),/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyType),\" \")),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Policy Holder \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},\" \",/*#__PURE__*/React.createElement(\"label\",null,this.state.policyHolder),\" \")),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\"Transaction Date*\"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,type:\"date\",name:\"newEntryDate\",id:\"newEntryDate\",placeholder:\"transaction date\",onBlur:function onBlur(e){return _this27.handleChange(e);},onChange:function onChange(e){return _this27.handleChange(e);},value:this.state.newEntryDate,min:moment().subtract(100,'years').format('DD-MM-YYYY'),max:moment().format('DD-MM-YYYY')}),/*#__PURE__*/React.createElement(\"em\",{id:\"newEntryDateError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Description* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,name:\"description\",type:\"text\",id:\"description\",className:\"\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.description}),/*#__PURE__*/React.createElement(\"em\",{id:\"descriptionError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Payment Amount* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:true,name:\"paymentAmount\",type:\"number\",id:\"paymentAmount\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.paymentAmount})),/*#__PURE__*/React.createElement(Col,{md:\"3\"},this.state.paymentAmountRemains<0?/*#__PURE__*/React.createElement(\"span\",{style:{color:'red'}},\" Balance: \",this.state.paymentAmountRemains,\" \"):/*#__PURE__*/React.createElement(\"span\",null,\" Balance: \",this.state.paymentAmountRemains,\" \"))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Payment Mode* \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,type:\"select\",name:\"paymentMode\",id:\"paymentMode\",onChange:function onChange(e){return _this27.selectType(e.target.value,'paymentMode');},value:this.state.paymentMode},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select payment mode\"),this.state.paymentModearr.map(function(type,i){return type.label=='Fund Transfer'?/*#__PURE__*/React.createElement(\"option\",{value:type.label,key:i},type.value):null;})),/*#__PURE__*/React.createElement(\"em\",{id:\"paymentModeError\",className:\"error invalid-feedback\"})))),this.state.PolicyOutstandingTransactions.length?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"table\",{border:\"1\",style:{width:'100%',marginTop:15,marginBottom:15}},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"th\",{style:{width:'20%'}},\"Policy Number\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'20%'}},\"Transaction Type\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Reference Id\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Outstanding\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Amount Applied\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Outstanding After Payment\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Net Premium\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Levy\"),/*#__PURE__*/React.createElement(\"th\",{style:{width:'10%'}},\"Admin\")),/*#__PURE__*/React.createElement(\"tbody\",null,this.state.PolicyOutstandingTransactions.map(function(transaction,i){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,transaction.PolicyNumber),/*#__PURE__*/React.createElement(\"td\",null,transaction.Narration),/*#__PURE__*/React.createElement(\"td\",null,transaction.UniqueReferenceId),/*#__PURE__*/React.createElement(\"td\",null,transaction.Outstanding),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Input,{disabled:_this27.state.isEdit,name:\"AmountApplied\",id:\"AmountApplied\"+i,type:\"number\",value:transaction.AmountApplied,onChange:function onChange(e){return _this27.handleTransferFundChangeAmount(e,i);},onBlur:function onBlur(e){return _this27.handleTransferFundChangeAmount(e,i);}})),/*#__PURE__*/React.createElement(\"td\",null,transaction.OutstandingAfterPayment),/*#__PURE__*/React.createElement(\"td\",null,transaction.UpdatedNetPremium),/*#__PURE__*/React.createElement(\"td\",null,transaction.UpdatedLevy),/*#__PURE__*/React.createElement(\"td\",null,transaction.UpdatedAdminFee));}))),/*#__PURE__*/React.createElement(\"em\",{id:\"AmountAppliedError\",style:{color:'red'},className:\"error\"})):null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"3\"},\" Note \"),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isEdit,name:\"note\",type:\"textarea\",id:\"note\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.note}))))),/*#__PURE__*/React.createElement(\"div\",{style:{margin:20}},/*#__PURE__*/React.createElement(Row,{className:\"pull-right\",style:{backgroundColor:\"#fff\",marginRight:10}},/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"success\",onClick:function onClick(){return _this27.saveTransferFund();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-check\"}),\" Save\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"danger\",onClick:function onClick(){return _this27.hideTransferFundPopup();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-times\"}),\" Cancel\")))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.toggleBnkDetailsModal,className:'modal-lg'},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this27.hideBankDetailsPopup();}},\" Enter Bank Details \"),/*#__PURE__*/React.createElement(Col,{style:{margin:\"20px\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,\"Account Name*\")),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"accountName\",id:\"accountName\",onChange:function onChange(e){return _this27.handleChange(e);},value:this.state.accountName}),/*#__PURE__*/React.createElement(\"em\",{id:\"accountNameError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,\"Bank Name*\")),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"bankName\",id:\"bankName\",onChange:function onChange(e){return _this27.handleChange(e);},value:this.state.bankName}),/*#__PURE__*/React.createElement(\"em\",{id:\"bankNameError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,\"Country*\")),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"bankCountry\",id:\"bankCountry\",onChange:function onChange(e){return _this27.selectType(e.target.value,'bankCountry');},value:this.state.bankCountry},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select country\"),this.state.countryList.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.StringMapKey},type.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"bankCountryError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,\"IBAN*\")),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"IBAN\",id:\"IBAN\",onChange:function onChange(e){return _this27.handleChange(e);},value:this.state.IBAN}),/*#__PURE__*/React.createElement(\"em\",{id:\"IBANError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,\"BIC\")),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"BIC\",id:\"BIC\",onChange:function onChange(e){return _this27.handleChange(e);},value:this.state.BIC}),/*#__PURE__*/React.createElement(\"em\",{id:\"BICError\",className:\"error invalid-feedback\"})))))),/*#__PURE__*/React.createElement(\"div\",{style:{margin:20}},/*#__PURE__*/React.createElement(Row,{className:\"pull-right\",style:{backgroundColor:\"#fff\",marginRight:10}},CommonConfig.isEmpty(this.state.EntityBankDetailId)?null:/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"danger\",onClick:function onClick(){return _this27.clearBankDetails();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-trash\"}),\" Clear Bank Details\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"success\",onClick:function onClick(){return _this27.addUpdateBankDetails();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-check\"}),\" Save\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"primary\",onClick:function onClick(){return _this27.hideBankDetailsPopup();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-times\"}),\" Cancel\"))))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.toggleModalDel,className:'modal-lg'},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this27.hidedeletePopup();}},\"Delete Payment\"),/*#__PURE__*/React.createElement(Col,{style:{margin:\"20px\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},\"Are you sure want to delete this payment of \",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\" \",this.state.delPolicyId.TransactionType==='Credit'||this.state.delPolicyId.TransactionType==='Payment'||this.state.delPolicyId.TransactionType==='ReturnPayment'?this.state.delPolicyId.PaymentAmount:this.state.delPolicyId.AmountCharge,\" \",this.state.delPolicyId.PaymentModeName,\" on \",this.state.delPolicyId.TransactionDate))),/*#__PURE__*/React.createElement(\"div\",{style:{margin:20}},/*#__PURE__*/React.createElement(Row,{className:\"pull-right\",style:{backgroundColor:\"#fff\",marginRight:10}},/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"danger\",onClick:function onClick(){return _this27.deleteAccount();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-trash\"}),\"Delete\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"primary\",onClick:function onClick(){return _this27.hidedeletePopup();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-times\"}),\"Cancel\")))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.toggleModal,className:'modal-lg',toggle:function toggle(){return _this27.hidePopup();}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this27.hidePopup();}},\"Regenerate Receipt of Payment\"),/*#__PURE__*/React.createElement(Col,{style:{margin:\"20px\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},\"Are you sure want to re-generate this receipt of payment ?\"))),/*#__PURE__*/React.createElement(\"div\",{style:{margin:20}},/*#__PURE__*/React.createElement(Row,{className:\"pull-right\",style:{backgroundColor:\"#fff\",marginRight:10}},/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"success\",onClick:function onClick(){return _this27.againGenerateReceipt();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-check\"}),\"Yes\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"primary\",onClick:function onClick(){return _this27.hidePopup();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-times\"}),\"No\")))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.IsLapsePolicyPopup,className:'modal-lg',toggle:function toggle(){return _this27.hideLapsePolicyPopup();}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this27.hideLapsePolicyPopup();}},\" Are you sure you want to Lapse this policy ? \"),/*#__PURE__*/React.createElement(Col,{md:\"12\",style:{marginTop:15}},/*#__PURE__*/React.createElement(Row,{style:{marginTop:15}},/*#__PURE__*/React.createElement(Col,{md:\"2\"},\"Policy Number\"),/*#__PURE__*/React.createElement(Col,{md:\"2\"},this.state.policyNumber)),/*#__PURE__*/React.createElement(Row,{style:{marginTop:15}},/*#__PURE__*/React.createElement(Col,{md:\"2\"},\" Note \"),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"lapsePolicyNote\",id:\"lapsePolicyNote\",rows:\"3\",onChange:function onChange(e){return _this27.handleChange(e);},onBlur:function onBlur(e){return _this27.handleChange(e);},value:this.state.lapsePolicyNote})))),/*#__PURE__*/React.createElement(\"div\",{style:{margin:20}},/*#__PURE__*/React.createElement(Row,{className:\"pull-right\",style:{backgroundColor:\"#fff\",marginRight:10}},/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"success\",onClick:function onClick(){return _this27.lapsePolicy();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-check\"}),\"Yes\"),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:\"10px\"},color:\"primary\",onClick:function onClick(){return _this27.hideLapsePolicyPopup();}},/*#__PURE__*/React.createElement(\"i\",{style:{marginRight:\"10px\"},className:\"fa fa-times\"}),\"Cancel\")))));}}]);return Account;}(Component);export default withTranslation()(Account);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/Account.js"],"names":["React","Component","toast","Menu","Button","BTN","apiBase","Modal","ModalHeader","Col","Row","Input","InputGroup","UncontrolledTooltip","api","APIConstant","moment","CommonConfig","withTranslation","axios","BootstrapTable","IBAN","require","headers","defaults","post","Account","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","generateReceipt","rowData","console","log","IsReceiptGenerated","toggleModal","regenerateDoc","data","PolicyAccountId","loggedInUserId","then","res","success","message","setTimeout","window","location","reload","editAccount","referenceId","ReferenceId","TransactionType","paymentAmountError","newEntryDateError","descriptionError","paymentModeError","chargeAmountError","isEdit","isAccountRecordEdit","entryTypeError","showJournalEntryPopup","showMakePaymentPopup","showReturnPaymentPopup","undefined","resetAccountForm","newEntryDate","TransactionDate","format","transactionType","description","Description","chargeAmount","ChargeAmount","chargeFee","ChargeFeeAmount","totalChargeAmount","TotalChargeAmount","paymentAmount","PaymentAmount","paymentMode","PaymentModeName","paymentStatus","PaymentStatus","note","Note","isMakePayment","isReturnPayment","calculateBalanceAFTPay","toggleNewEntryModal","accountData","showDeletePaymentPopup","toggleModalDel","delPolicyId","deleteAccount","DocumentId","response","catch","err","handleDateChange","type","handleChange","target","name","value","nameRegExp","RegExp","nameWithSpace","numberRegExp","number","decimalRegExp","decimalWithOne","allowAllWithSpace","cvvRegExp","isEmpty","show","nameRegEx","test","isTransferFundPopup","calculateTransferFundPremium","calculatePremium","chargeFeeError","accountNameError","accountName","bankNameError","bankName","IBANError","isValid","BICError","CardholderNameError","CardholderName","CardNumberError","CardNumber","CVVError","CVV","totalChargeAmt","actionFormatter","cell","tempActions","Actions","actions","split","accountRecordMenu","i","push","label","UniqueReferenceId","path","URL","Id","position","marginRight","width","display","accountRecordActions","map","handleOnExpand","row","isExpand","rowIndex","childAccountData","tempChildAccountData","forEach","element","childActions","childAccountRecordMenu","CurrencySymbol","Path","error","expandRow","onlyOneExpanding","showExpandColumn","expandByColumnOnly","parentClassName","isExpanded","onExpand","renderer","border","accountEntry","dateFormat","dateOnly","ClientTransactionType","float","toString","replace","PaymentMode","CreatedByName","CreatedOn","dateTime","Outstanding","IsLocked","fontSize","verticalAlign","color","BReference","open","j","textAlign","isAccountChildEntry","getPolicyOutstandingTransaction","isConfirm","confirm","Balance","shortWriteoff","returnPaymentData","getAccountTransferFund","processAccountEntry","document","getElementsByName","AccountActionType","CurrentUser","columns","dataField","text","formatter","formatAmountChargedData","formatPaymentData","formatBalanceData","edit","LanguageId","i18n","language","policyAccountList","PolicyComputation","EntityBankDetailId","brand","colors","toggleModalAdd","cols","rowsPerPageOptions","dataTableConfig","globalFilter","toggleBnkDetailsModal","policyNumber","PolicyNumber","policyType","PolicyType","policyHolder","PolicyHolder","policyId","EntityId","EntityType","totalChargeAmountError","paymentDue","paymentStatusError","addedBy","addedDate","updatedBy","updatedDate","paymentModearr","returnPaymentModearr","paymentStatusarr","country","journalEntry","journalEntryError","journalDebitData","BIC","bankCountry","bankCountryError","countryList","bankDetailsRes","outstanding","existOutstanding","updatedPremium","updatedPremiumAdminFee","updatedPremiumLevy","updatedPremiumLessLevy","showCalculation","Currency","CardType","ExpiryMonth","ExpiryYear","IsSelectedCard","RenewalDate","Forename","Surname","EmailId","ContactTelephoneNumber","CardTypeError","ExpiryMonthError","ExpiryYearError","isPaymentPopup","SystemOutstandingTransactions","OutstandingTransactions","entryType","onColumnToggle","bind","actionTemplate","match","params","constructor","Object","keys","id","currency","getAccountDetails","getDropDownValues","getPaymentMode","getReturnPaymentMode","getJournalDebitData","getJournalCreditData","getPaymentStatus","getUserBankAccountDetails","getPolicyDetails","getPaymentDetails","getLapsePolicyDetails","isGenerateRenewal","returnValue","PremiumType","isPolicyRenewal","resdata","CountryCode","AreaCode","formatPhoneNumber","Phone","stringMapType","setStateName","orderBy","stringmaptype","orderby","dropdownbycode","StringMapName","journalCreditData","returnPaymentMode","PolicyId","duePayment","ClosingBalance","formattedData","CreatedBy","UpdatedBy","UpdatedOn","SequenceNumber","CreatedOnDate","TransactionUniqueReferenceId","AmountCharge","ReceiptDocumentId","RelatedReferenceId","SystemEntryType","RenewalOrInceptionDate","Narration","BatchEntryId","TotalPaymentAmount","event","valueInOrder","sort","x","y","column","getBatchPaymentDetails","validateTransactionsTotal","EntryType","NewEntryDate","dbDateTime","PaymentEntries","URLSearchParams","append","method","url","phpapi","responseCode","renewalPolicy","RenewalPolicyDate","PolicyNo","PolicyHolderForeName","PolicyHolderSurName","ContactNo","PolicyHolderEmail","Amount","CardHolderName","Cvv","PaymentSource","PaymentTimestamp","timestamp","PaymentTransactionId","transactionReference","transactionId","PaymentOrderId","orderId","saveMakePaymentEntryCallAPI","JSON","stringify","accountEntries","AccountEntries","accountRecord","generateRecieptData","generateRecieptRes","hideMakePaymentPopup","TotalAmount","parseFloat","AmountApplied","statusDesc","Math","abs","AccountName","BankName","Country","accountForm","Number","Premium","AdminFee","Levy","LessLevy","API","hideEntryPopup","BankExists","bankExists","entityId","LoggedInUserId","hideBankDetailsPopup","radioSelected","field","condition","errorField","getElementById","className","innerHTML","transaction","TotalDue","LevyTotalAmount","UpdatedAdminFee","OutstandingAfterPayment","UpdatedLevy","UpdatedNetPremium","toFixed","totalAmount","ExistOutstanding","RemainingPaymentAmount","UpdatedNetAmount","desc","filter","val","warn","paymentAmountTotal","writeoffAmount","IsLapsePolicy","DaysOverdue","IsLapsePolicyPopup","lapsePolicyNote","transferFundData","paymentAmountRemains","PolicyOutstandingTransactions","SystemPolicyOutstandingTransactions","POAmountApplied","validateTransferFundTotal","TransferFundRecord","saveTransferFundAPICall","hideTransferFundPopup","alignSelf","showBankDetailsPopup","margin","showLapsePolicyPopup","maxWidth","marginTop","subtract","selectType","backgroundColor","marginLeft","addUpdateAccountEntry","padding","marginBottom","handleChangeAmount","saveMakePaymentEntry","handleTransferFundChangeAmount","saveTransferFund","StringMapKey","clearBankDetails","addUpdateBankDetails","hidedeletePopup","hidePopup","againGenerateReceipt","hideLapsePolicyPopup","lapsePolicy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Menu } from 'primereact/menu';\nimport { Button as BTN } from 'primereact/button';\nimport { apiBase } from '../../utils/config';\nimport { Modal, ModalHeader, Col, Row, Input, Button, InputGroup, UncontrolledTooltip } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport APIConstant from '../../utils/constants';\nimport moment from 'moment';\nimport { CommonConfig } from '../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nvar IBAN = require('iban');\nconst headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'JWT fefege...',\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\": \"*\",\n    'X-Requested-With': 'XMLHttpRequest'\n};\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nclass Account extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        let columns = [\n            // { dataField: \"SequenceNumber\", text: \"#\" },\n            { dataField: \"TransactionDate\", text: \"Txn Date\" },\n            { dataField: \"Narration\", text: \"Transaction\" },\n            { dataField: \"UniqueReferenceId\", text: \"Reference ID\" },\n            { dataField: \"ClientTransactionType\", text: \"Description\" },\n            { dataField: \"AmountCharge\", text: \"Amount Charged\", formatter: this.formatAmountChargedData },\n            { dataField: \"TotalPaymentAmount\", text: \"Payment Amount\", formatter: this.formatPaymentData },\n            // { dataField: \"PaymentMode\", text: \"Payment Mode\" },\n            { dataField: \"CreatedBy\", text: \"Added By\" },\n            { dataField: \"Balance\", text: \"Balance\", formatter: this.formatBalanceData },\n            { dataField: \"Action\", text: \"Actions\", formatter: this.actionFormatter, edit: this.editAccount, accountRecordActions: this.accountRecordActions },\n        ];\n\n        this.state = {\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\n            policyAccountList: [],\n            PolicyComputation: '',\n            isEdit: false,\n            EntityBankDetailId: '',\n            brand: null,\n            colors: null,\n            delPolicyId: [],\n            toggleModalDel: false,\n            toggleModalAdd: false,\n            cols: columns,\n            arr: [],\n            rowData: '',\n            selectedPage: 0,\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            str: '',\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            globalFilter: null,\n            toggleNewEntryModal: false,\n            toggleBnkDetailsModal: false,\n\n            policyNumber: props.PolicyNumber,\n            policyType: props.PolicyType,\n            policyHolder: props.PolicyHolder,\n            policyId: '',\n            EntityId: '',\n            EntityType: '',\n            referenceId: '',\n\n            PolicyAccountId: \"\",\n            accountData: \"\",\n            newEntryDate: moment().format('DD-MM-YYYY'),\n            newEntryDateError: false,\n            transactionType: 'Debit',\n            description: '',\n            descriptionError: true,\n            chargeAmount: 0,\n            chargeAmountError: true,\n            chargeFee: 0,\n            chargeFeeError: '',\n            totalChargeAmount: 0,\n            totalChargeAmountError: '',\n            paymentAmount: 0,\n            paymentAmountError: true,\n            paymentMode: '',\n            paymentModeError: true,\n            paymentDue: 0,\n            paymentStatus: '',\n            paymentStatusError: true,\n            note: '',\n            addedBy: '',\n            addedDate: '',\n            updatedBy: '',\n            updatedDate: '',\n            paymentModearr: [],\n            returnPaymentModearr: [],\n            paymentStatusarr: [],\n            isMakePayment: false,\n            isReturnPayment: false,\n            country: '',\n            IBAN: '',\n            IBANError: true,\n\n            journalEntry: '',\n            journalEntryError: true,\n            journalDebitData: [],\n\n            BIC: '',\n            BICError: false,\n\n            bankCountry: '',\n            bankCountryError: true,\n            countryList: [],\n\n            bankName: '',\n            bankNameError: true,\n\n            accountName: '',\n            accountNameError: true,\n            bankDetailsRes: [],\n\n            CurrencySymbol: '',\n            calculateBalanceAFTPay: 0,\n\n            TransactionType: '',\n            toggleModal: false,\n            regenerateDoc: [],\n\n            outstanding: 0,\n            existOutstanding: 0,\n            updatedPremium: 0,\n            updatedPremiumAdminFee: 0,\n            updatedPremiumLevy: 0,\n            updatedPremiumLessLevy: 0,\n            showCalculation: false,\n\n            isAccountRecordEdit: false,\n            Currency: 'Euro',\n            CardholderName: '',\n            CardNumber: '',\n            CardType: 'VISA',\n            ExpiryMonth: '1',\n            ExpiryYear: '2020',\n            CVV: '',\n            IsSelectedCard: 0,\n            RenewalDate: '',\n            Forename: '',\n            Surname: '',\n            EmailId: '',\n            ContactTelephoneNumber: '',\n            CardholderNameError: false,\n            CardNumberError: false,\n            CardTypeError: false,\n            ExpiryMonthError: false,\n            ExpiryYearError: false,\n            CVVError: false,\n\n            isPaymentPopup: false,\n            SystemOutstandingTransactions: [],\n            OutstandingTransactions: [],\n\n            entryType: '',\n            entryTypeError: true,\n            journalDebitData: [],\n            journalCreditData: [],\n\n            IsLapsePolicy: 0,\n            DaysOverdue: 0,\n            RenewalDate: '',\n\n            IsLapsePolicyPopup: false,\n            lapsePolicyNote: '',\n\n            isGenerateRenewal: 0,\n            PremiumType: '',\n            isPolicyRenewal: 0,\n\n            expandedRows: null,\n            childAccountData: [],\n\n            subAccMenu: false,\n            returnPaymentData: {},\n\n            isTransferFundPopup: false,\n            transferFundData: {},\n            PolicyOutstandingTransactions: [],\n            SystemPolicyOutstandingTransactions: [],\n            paymentAmountRemains: 0\n        };\n\n        this.onColumnToggle = this.onColumnToggle.bind(this);\n        this.actionTemplate = this.actionTemplate.bind(this);\n        // this.export = this.export.bind(this);\n\n        /*\n        let columns = [\n          { field: \"SequenceNumber\", header: \"#\", sortable: true, filter: true, id: 0, style: { width: '2%' }, expander: true },\n          { field: \"TransactionDate\", header: \"Txn Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1, },\n          { field: \"Narration\", header: \"Transaction\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1, },\n          { field: \"UniqueReferenceId\", header: \"Txn ID\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2, },\n          { field: \"ClientTransactionType\", header: \"Description\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3, },\n          { body: this.formatAmountChargedData.bind(this), field: \"AmountCharge\", header: \"Amount Charged\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\n          { body: this.formatPaymentData.bind(this), field: \"PaymentAmount\", header: \"Payment Amount\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\n          { field: \"PaymentMode\", header: \"Payment Mode(Status)\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\n          { field: \"CreatedBy\", header: \"Added By\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\n          // { field: \"UpdatedBy\", header: \"Updated by\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\n          { body: this.formatBalanceData.bind(this), field: \"Balance\", header: \"Balance\", sortable: true, filter: true, filterMatchMode: 'contains', id: 9 },\n          { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 10, style: { width: '12%' } }\n        ];*/\n\n        /*this.colOptions = [];\n        for (let col of columns) {\n          this.colOptions.push({ label: col.header, value: col });\n        }*/\n\n    }\n\n    componentDidMount() {\n\n        this.setState({ newEntryDate: moment().format('YYYY-MM-DD') })\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n            this.setState({ policyId: this.props.match.params.id, EntityId: this.props.EntityId, EntityType: this.props.EntityType, CurrencySymbol: this.props.CurrencySymbol, RenewalDate: this.props.RenewalDate, Currency: this.props.currency });\n        }\n        this.getAccountDetails();\n        this.getDropDownValues();\n        this.getPaymentMode();\n        this.getReturnPaymentMode();\n        this.getJournalDebitData();\n        this.getJournalCreditData();\n        this.getPaymentStatus();\n        this.getDropDownValues('POLICYCOUNTRY', 'countryList', 'StringMapName');\n        this.getUserBankAccountDetails();\n        this.getPolicyDetails();\n        this.getPaymentDetails();\n        this.getLapsePolicyDetails();\n\n        this.isGenerateRenewal();\n    }\n\n    isGenerateRenewal() {\n        const data = { policyId: this.props.match.params.id };\n        api.post(APIConstant.path.isGenerateRenewal, data).then(res => {\n            console.log('PolicyAccount isGenerateRenewal', res);\n            if (res.success) {\n                if (!CommonConfig.isEmpty(res.data[0].returnValue) && res.data[0].returnValue != 0) {\n                    console.log('res.data[0].returnValue', res.data[0].returnValue);\n                    this.setState({ isGenerateRenewal: res.data[0].returnValue, PremiumType: 'Renewal', isPolicyRenewal: 1 })\n                }\n            } else {\n                console.log('error');\n            }\n        }).catch(err => {\n\n        });\n    }\n\n    getPaymentDetails() {\n        try {\n            const data = {\n                policyId: this.props.match.params.id,\n            };\n            api.post('api/getpaymentholderdetails', data).then(res => {\n                if (res.success) {\n\n                    let resdata = res.data[0];\n                    this.setState({\n                        EntityId: resdata[0].EntityId,\n                        EntityType: resdata[0].EntityType,\n                        RenewalDate: resdata[0].RenewalDate,\n                        Forename: resdata[0].Forename,\n                        Surname: resdata[0].Surname,\n                        EmailId: resdata[0].EmailId,\n                        ContactTelephoneNumber: resdata[0].CountryCode + ' ' + resdata[0].AreaCode + ' ' + CommonConfig.formatPhoneNumber(resdata[0].Phone),\n                        // SelectSavedCard:res.data[0].SelectSavedCard,\n                        // CardholderName: res.data[0].CardholderName,\n                        // CardNumber: res.data[0].CardNumber,\n                        // CardType: res.data[0].CardType,\n                        // ExpiryMonth: res.data[0].ExpiryMonth,\n                        // ExpiryYear: res.data[0].ExpiryYear,\n                        // IsSelectedCard: res.data[0].IsSelectedCard,\n                    });\n                } else {\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getPolicyDetails() {\n        try {\n            const data = {\n                policyId: this.props.match.params.id,\n            };\n            api.post('api/getPolicyComputation', data).then(res => {\n                if (res.success) {\n                    console.log(\"-i-i-i-i--i-i--i---i---i\", res.data[0]);\n                    let resdata = res.data[0];\n                    this.setState({ PolicyComputation: resdata });\n                    console.log(\"-i-i-i-i--i-i--i---i---i\", this.state.PolicyComputation);\n                } else {\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getDropDownValues(stringMapType, setStateName, orderBy) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: orderBy\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getJournalDebitData() {\n        try {\n            const data = {\n                stringmaptype: 'JOURNALENTRYDEBIT',\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var journalDebitData = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        journalDebitData.push({\n                            label: res.data[i].StringMapName,\n                            value: res.data[i].Description\n                        })\n                    }\n                    this.setState({ journalDebitData: journalDebitData });\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getJournalCreditData() {\n        try {\n            const data = {\n                stringmaptype: 'JOURNALENTRYCREDIT',\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var journalCreditData = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        journalCreditData.push({\n                            label: res.data[i].StringMapName,\n                            value: res.data[i].Description\n                        })\n                    }\n                    this.setState({ journalCreditData: journalCreditData });\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getPaymentMode() {\n        try {\n            const data = {\n                stringmaptype: 'PAYMENTMODE',\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var paymentMode = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        paymentMode.push({\n                            label: res.data[i].StringMapName,\n                            value: res.data[i].Description\n                        })\n                    }\n                    console.log(\"paymentMode-----\", paymentMode);\n                    this.setState({ paymentModearr: paymentMode });\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getReturnPaymentMode() {\n\n        try {\n            const data = {\n                stringmaptype: 'RETURNPAYMENTMODE',\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var returnPaymentMode = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        returnPaymentMode.push({\n                            label: res.data[i].StringMapName,\n                            value: res.data[i].Description\n                        })\n                    }\n                    this.setState({ returnPaymentModearr: returnPaymentMode });\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getPaymentStatus() {\n        try {\n            const data = {\n                stringmaptype: 'PAYMENTSTATUS',\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    var paymentStatus = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        paymentStatus.push({\n                            label: res.data[i].StringMapName,\n                            value: res.data[i].Description\n                        })\n                    }\n                    this.setState({ paymentStatusarr: paymentStatus });\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    getAccountDetails() {\n        try {\n            // debugger\n            let data = {\n                PolicyId: this.props.match.params.id\n            }\n            api.post('api/getDebitAccountList', data).then(res => {\n                console.log(\"getDebitAccountList\", res);\n\n                let accountData = res.data[0];\n                if (res.success) {\n\n                    if (accountData.length) {\n                        var duePayment = accountData[0].ClosingBalance;\n                    } else {\n                        duePayment = 0.00;\n                    }\n\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < accountData.length; i++) {\n\n                        let PaymentMode = \"\";\n                        if (accountData[i].PaymentMode == \"null\") {\n                        } else if (accountData[i].PaymentMode) {\n                            PaymentMode = accountData[i].PaymentMode + ' (' + accountData[i].PaymentStatus + ')';\n                        }\n\n                        var CreatedBy = CommonConfig.isEmpty(accountData[i].CreatedBy) ? '' : accountData[i].CreatedByName + \" (\" + moment(accountData[i].CreatedOn).format(CommonConfig.dateFormat.dateTime) + \")\";\n\n                        var UpdatedBy = CommonConfig.isEmpty(accountData[i].UpdatedBy) ? '' : accountData[i].CreatedByName + \" (\" + moment(accountData[i].UpdatedOn).format(CommonConfig.dateFormat.dateTime) + \")\";\n\n                        formattedData.push({\n                            CurrencySymbol: this.props.CurrencySymbol,\n                            Id: accountData[i].Id,\n                            PolicyAccountId: accountData[i].PolicyAccountId,\n                            DocumentId: accountData[i].DocumentId,\n                            SequenceNumber: accountData[i].Id,\n                            CreatedOn: moment(accountData[i].CreatedOn).format(CommonConfig.dateFormat.dateOnly),\n                            CreatedOnDate: accountData[i].CreatedOn,\n                            ClientTransactionType: accountData[i].ClientTransactionType,\n                            TransactionUniqueReferenceId: accountData[i].TransactionUniqueReferenceId,\n                            UniqueReferenceId: accountData[i].UniqueReferenceId,\n                            ReferenceId: accountData[i].ReferenceId,\n                            Description: accountData[i].Description,\n                            ChargeAmount: accountData[i].ChargeAmount,\n                            ChargeFeeAmount: accountData[i].ChargeFeeAmount,\n                            TotalChargeAmount: accountData[i].TotalChargeAmount,\n                            AmountCharge: accountData[i].TotalChargeAmount,\n                            PaymentAmount: accountData[i].PaymentAmount,\n                            Outstanding: accountData[i].Outstanding,\n                            PaymentMode: PaymentMode,\n                            CreatedBy: CreatedBy,\n                            UpdatedBy: UpdatedBy,\n                            Balance: accountData[i].Balance,\n                            TransactionType: accountData[i].TransactionType,\n                            PaymentModeName: accountData[i].PaymentMode,\n                            TransactionDate: moment(accountData[i].TransactionDate).format(CommonConfig.dateFormat.dateOnly),\n                            PaymentStatus: accountData[i].PaymentStatus,\n                            Note: accountData[i].Note,\n                            IsReceiptGenerated: CommonConfig.isEmpty(accountData[i].IsReceiptGenerated) ? 0 : accountData[i].IsReceiptGenerated.data[0],\n                            ReceiptDocumentId: CommonConfig.isEmpty(accountData[i].ReceiptDocumentId) ? '' : accountData[i].ReceiptDocumentId,\n                            URL: CommonConfig.isEmpty(accountData[i].URL) ? '' : accountData[i].URL,\n                            RelatedReferenceId: accountData[i].RelatedReferenceId,\n                            SystemEntryType: accountData[i].SystemEntryType,\n                            RenewalOrInceptionDate: accountData[i].RenewalOrInceptionDate,\n                            Narration: accountData[i].Narration,\n                            BatchEntryId: accountData[i].BatchEntryId,\n                            Balance: accountData[i].Balance,\n                            Actions: accountData[i].Actions,\n                            TotalPaymentAmount: accountData[i].TotalPaymentAmount\n                        });\n                    }\n                    let firstPage = (formattedData.length) ? '1' : '0';\n                    let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\n                    let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n                    this.setState({ arr: formattedData, str: str, paymentDue: duePayment, policyAccountList: accountData });\n                    console.log(\"formattedData\", this.state.arr);\n                } else {\n                    console.log(\"getAccountDetails > error 3\", res);\n                }\n            }).catch(err => {\n                console.log(\"getAccountDetails > error 2\", err);\n            });\n        } catch (err) {\n            console.log(\"getAccountDetails > error 1\", err);\n        }\n    }\n\n    getDropDownValues(stringMapType, setStateName) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: 'sortorder'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    onColumnToggle(event) {\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\n        this.setState({ cols: valueInOrder });\n    }\n\n    actionTemplate(rowData, column) {\n        // console.log(\"actionTemplate\", rowData);\n        var path = apiBase + \"\" + rowData.URL;\n        return <div>\n            {/* {(rowData.TransactionType !== 'Payment') ? ( */}\n            <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-primary\" tooltip=\"View\" tooltipOptions={{ position: 'bottom' }} style={{ marginRight: '.5em' }} onClick={(e) => this.editAccount(e, rowData)}>\n            </BTN>\n            {/* ) : (null)} */}\n\n            {/* <BTN type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }} style={{ marginRight: '.5em' }} onClick={(e) => this.showDeletePaymentPopup(e, rowData)}>\n      </BTN> */}\n\n            {(rowData.TransactionType === 'Payment') ? (\n                <BTN type=\"button\" icon=\"pi pi-file\" className=\"p-button-primary\" tooltip=\"Generate Receipt of Payment\" tooltipOptions={{ position: 'bottom' }} style={{ marginRight: '.5em' }} onClick={(e) => this.generateReceipt(rowData)}>\n                </BTN>\n            ) : (\n                    null\n                )}\n\n            {(rowData.TransactionType === 'Payment' && rowData.IsReceiptGenerated === 1) ? (\n                <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" tooltip=\"View Receipt of Payment\" tooltipOptions={{ position: 'bottom' }} style={{ marginRight: '.5em' }} onClick={(e) => window.open(path, \"_blank\")} >\n                </BTN>\n            ) : (null)}\n\n        </div>;\n    }\n\n    generateReceipt = (rowData) => {\n        console.log(\"generateReceipt\", rowData);\n        if (rowData.IsReceiptGenerated === 1) {\n            this.setState({ toggleModal: true, regenerateDoc: rowData })\n        } else {\n            let data = {\n                PolicyAccountId: rowData.PolicyAccountId,\n                loggedInUserId: CommonConfig.loggedInUserId()\n            }\n            api.post('api/generateReciept', data).then(res => {\n                if (res.success) {\n                    console.log(\"generateReceipt\", res.data);\n                    toast.success(res.data.message);\n                    setTimeout(function () {\n                        window.location.reload();\n                    }, 1000);\n                }\n            });\n        }\n    }\n\n    againGenerateReceipt() {\n        let data = {\n            PolicyAccountId: this.state.regenerateDoc.PolicyAccountId,\n            loggedInUserId: CommonConfig.loggedInUserId()\n        }\n        api.post('api/generateReciept', data).then(res => {\n            if (res.success) {\n                toast.success(res.data.message);\n                setTimeout(function () {\n                    window.location.reload();\n                }, 1000);\n            }\n        });\n    }\n\n    hidePopup() {\n        this.setState({ toggleModal: false })\n    }\n\n    formatAmountChargedData(cell, rowData) {\n        console.log(\"formatAmountChargedData\", this);\n        return (\n            <div style={{ float: 'right' }}>{<i className={rowData.CurrencySymbol} ></i>}{(CommonConfig.isEmpty(rowData.TotalChargeAmount) ? ('0') : (rowData.TotalChargeAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")))}</div>\n        )\n    }\n\n    formatPaymentData(cell, rowData) {\n        return (\n            <div style={{ float: 'right' }}>{<i className={rowData.CurrencySymbol} ></i>}{(CommonConfig.isEmpty(rowData.TotalPaymentAmount) ? ('0') : (rowData.TotalPaymentAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")))}</div>\n        )\n    }\n\n    formatBalanceData(cell, rowData) {\n        return (\n            <div style={{ float: 'right' }}>{<i className={rowData.CurrencySymbol} ></i>}{(CommonConfig.isEmpty(rowData.Balance) ? ('0') : (rowData.Balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")))}</div>\n        )\n    }\n\n    editAccount = (e, rowData) => {\n        this.setState({ PolicyAccountId: rowData.PolicyAccountId, referenceId: rowData.ReferenceId });\n        if (rowData.TransactionType == 'Debit') {\n            this.setState({ paymentAmountError: false, newEntryDateError: false, descriptionError: false, paymentModeError: false, chargeAmountError: false, isEdit: true })\n        }\n        else if (rowData.TransactionType == 'Credit') {\n            this.setState({ newEntryDateError: false, descriptionError: false, paymentAmountError: false, paymentModeError: false, chargeAmountError: false, isEdit: true })\n        } else {\n            this.setState({ newEntryDateError: false, descriptionError: false, paymentAmountError: false, paymentModeError: false, chargeAmountError: false, isEdit: true, isAccountRecordEdit: true, entryTypeError: false })\n        }\n\n        setTimeout(() => {\n\n            if (rowData.TransactionType == 'Debit' || rowData.TransactionType == 'Credit') {\n                this.showJournalEntryPopup(rowData);\n            } else {\n                if (rowData.TransactionType == 'Payment') {\n                    this.showMakePaymentPopup(rowData);\n                } else {\n                    this.showReturnPaymentPopup(rowData);\n                }\n            }\n\n        }, 100);\n    }\n\n    showJournalEntryPopup = (rowData) => {\n        if (rowData === undefined) {\n            this.resetAccountForm();\n        } else {\n            this.setState({\n                PolicyAccountId: rowData.PolicyAccountId,\n                newEntryDate: moment(rowData.TransactionDate, 'DD/MM/YYYY').format(\"YYYY-MM-DD\"),\n                transactionType: rowData.TransactionType,\n                referenceId: rowData.ReferenceId,\n                description: rowData.Description,\n                chargeAmount: rowData.ChargeAmount,\n                chargeFee: rowData.ChargeFeeAmount,\n                totalChargeAmount: rowData.TotalChargeAmount,\n                paymentAmount: rowData.PaymentAmount,\n                paymentMode: rowData.PaymentModeName,\n                paymentStatus: rowData.PaymentStatus,\n                note: rowData.Note,\n                isMakePayment: false,\n                isReturnPayment: false,\n            });\n            this.calculateBalanceAFTPay();\n        }\n\n        this.setState({ toggleNewEntryModal: true, accountData: rowData });\n    }\n\n    showMakePaymentPopup(rowData) {\n        if (rowData === undefined) {\n            this.getPolicyOutstandingTransaction();\n        } else {\n            this.setState({ isEdit: true });\n            this.getBatchPaymentDetails(rowData);\n        }\n    }\n\n    hideMakePaymentPopup() {\n        this.setState({ isPaymentPopup: false, transactionType: 'Payment', description: '', paymentAmount: '', descriptionError: false, paymentAmountError: false, existOutstanding: 0 });\n    }\n\n    async saveMakePaymentEntry() {\n        try {\n\n            if (this.state.newEntryDateError) {\n                toast.error('Please Enter Transaction Date');\n            } else if (this.state.descriptionError) {\n                toast.error('Please Enter Description');\n            } else if (this.state.paymentAmountError) {\n                toast.error('Please Enter Payment Amount');\n            } else if (this.state.paymentModeError) {\n                toast.error('Please Select Payment Mode');\n            } else if (this.state.paymentAmount == 0) {\n                toast.error('Payment amount can not be 0.');\n            } else if (this.validateTransactionsTotal()) {\n                toast.error('Total Amount Applied must be match with Payment Amount');\n            } else {\n                let data = {\n                    PolicyId: this.props.match.params.id,\n                    EntryType: '',\n                    NewEntryDate: moment(this.state.newEntryDate).format(CommonConfig.dateFormat.dbDateTime),\n                    TransactionType: this.state.transactionType,\n                    ReferenceId: this.state.referenceId,\n                    Description: this.state.description,\n                    PaymentAmount: this.state.paymentAmount,\n                    PaymentMode: this.state.paymentMode,\n                    PaymentStatus: \"Success\",\n                    Note: this.state.note,\n                    CreatedBy: CommonConfig.loggedInUserId(),\n                    PaymentEntries: this.state.OutstandingTransactions,\n                    LanguageId: this.state.LanguageId\n                };\n                if (data.PaymentMode == \"Debit/Credit Card\") {\n\n                    if (this.state.CardholderName === '' || this.state.CardholderName === null || this.state.CardholderName === 'null' || this.state.CardholderName === 'NULL' || this.state.CardholderName === 'undefined' || this.state.CardholderName === undefined) {\n                        this.show(\"CardholderName\", true, \"CardholderNameError\", \"Please enter CardholderName\");\n                        return;\n                    } else if (this.state.CardNumber === '' || this.state.CardNumber === null || this.state.CardNumber === 'null' || this.state.CardNumber === 'NULL' || this.state.CardNumber === 'undefined' || this.state.CardNumber === undefined) {\n                        this.show(\"CardNumber\", true, \"CardNumberError\", \"Please enter CardNumber\");\n                        return;\n                    } else if (this.state.CardType === '' || this.state.CardType === null || this.state.CardType === 'null' || this.state.CardType === 'NULL' || this.state.CardType === 'undefined' || this.state.CardType === undefined) {\n                        this.show('CardType', true, \"CardTypeError\", \"Select CardType\");\n                        return;\n                    } else if (this.state.ExpiryMonth === '' || this.state.ExpiryMonth === null || this.state.ExpiryMonth === 'null' || this.state.ExpiryMonth === 'NULL' || this.state.ExpiryMonth === 'undefined' || this.state.ExpiryMonth === undefined) {\n                        this.show('ExpiryMonth', true, \"ExpiryMonthError\", \"Select ExpiryMonth\");\n                        return;\n                    } else if (this.state.ExpiryYear === '' || this.state.ExpiryYear === null || this.state.ExpiryYear === 'null' || this.state.ExpiryYear === 'NULL' || this.state.ExpiryYear === 'undefined' || this.state.ExpiryYear === undefined) {\n                        this.show('ExpiryYear', true, \"ExpiryYearError\", \"Select ExpiryYear\");\n                        return;\n                    } else if (this.state.CVV === '' || this.state.CVV === null || this.state.CVV === 'null' || this.state.CVV === 'NULL' || this.state.CVV === 'undefined' || this.state.CVV === undefined) {\n                        this.show(\"CVV\", true, \"CVVError\", \"Please enter valid CVV\");\n                        return;\n                    } else {\n                        const params = new URLSearchParams();\n                        params.append('CardNumber', this.state.CardNumber);\n                        params.append('CardholderName', this.state.CardholderName);\n                        params.append('ExpiryMonth', this.state.ExpiryMonth);\n                        params.append('ExpiryYear', this.state.ExpiryYear);\n                        params.append('CVV', this.state.CVV);\n                        params.append('TotalAmount', data.PaymentAmount);\n                        params.append('Currency', this.state.Currency);\n                        params.append('amount', data.PaymentAmount);\n                        await axios({\n                            method: 'post',\n                            url: CommonConfig.phpapi,\n                            data: params\n                        }).then(response => {\n                            if (response.data.responseCode == \"00\") {\n                                toast.success(\"Payment has been done successfully.\");\n                                console.log(\"payment\", response.data);\n                                // console.log(\"fdsdsdffsd\",response.data.timestamp);\n                                // console.log(\"fdsdsdffsd\",response.data.transactionReference.transactionId);\n                                // console.log(\"fdsdsdffsd\",response.data.transactionReference.orderId);\n                                var renewalPolicy = {\n                                    RenewalPolicyDate: this.state.RenewalDate,\n                                    PolicyNo: this.state.policyNumber,\n                                    PolicyHolderForeName: this.state.Forename,\n                                    PolicyHolderSurName: this.state.Surname,\n                                    ContactNo: this.state.ContactTelephoneNumber,\n                                    PolicyHolderEmail: this.state.EmailId,\n                                    Amount: data.PaymentAmount,\n                                    CardHolderName: this.state.CardholderName,\n                                    CardNumber: this.state.CardNumber,\n                                    CardType: this.state.CardType,\n                                    ExpiryMonth: this.state.ExpiryMonth,\n                                    ExpiryYear: this.state.ExpiryYear,\n                                    Cvv: this.state.CVV,\n                                    PaymentSource: 'Evolution',\n                                    Currency: this.state.Currency,\n                                    PaymentTimestamp: response.data.timestamp,\n                                    PaymentTransactionId: response.data.transactionReference.transactionId,\n                                    PaymentOrderId: response.data.transactionReference.orderId\n                                };\n                                api.post('api/renewalPolicy', renewalPolicy).then(res => {\n                                    console.log(\"res\", res);\n                                    this.saveMakePaymentEntryCallAPI(data);\n                                }).catch(err => {\n                                    toast.error(\"Payment has been done successfully but not able to add entry in database.\");\n                                    console.log(\"addUpdateAccountEntry error 2\", err);\n                                });\n                            }\n                            else {\n                                toast.error(\"payment not done\");\n                            }\n                        }).catch(error => {\n                            console.log(error);\n                        });\n                    }\n                }\n                else {\n                    this.saveMakePaymentEntryCallAPI(data);\n                }\n\n            }\n        } catch (error) {\n            console.log(\"saveMakePaymentEntry error 1\", error);\n        }\n    }\n\n    saveMakePaymentEntryCallAPI(data) {\n        console.log(\"saveMakePaymentEntry-request\", JSON.stringify(data));\n        try {\n            api.post('api/saveMakePaymentEntry', data).then(res => {\n                console.log(\"saveMakePaymentEntry-response\", res.data);\n                if (res.success && res.data.success) {\n\n                    let accountEntries = res.data.data[0].AccountEntries;\n                    let accountRecord = accountEntries.split(',');\n\n                    console.log(\"saveMakePaymentEntry-accountRecord\", accountRecord);\n\n                    for (var i = 0; i < accountRecord.length; i++) {\n                        if (!CommonConfig.isEmpty(accountRecord[i])) {\n                            let generateRecieptData = {\n                                PolicyAccountId: accountRecord[i],\n                                loggedInUserId: CommonConfig.loggedInUserId()\n                            }\n                            api.post('api/generateReciept', generateRecieptData).then(generateRecieptRes => {\n                                console.log(\"generateReciept \", i, accountRecord.length, generateRecieptRes);\n                                if (i == accountRecord.length) {\n                                    this.hideMakePaymentPopup();\n                                    toast.success(res.data.message);\n                                    setTimeout(function () {\n                                        window.location.reload();\n                                    }, 1000);\n                                }\n                            });\n                        }\n                    }\n                }\n            }).catch(err => {\n                toast.error(\"Not able to add entry in database.\");\n                console.log(\"saveMakePaymentEntry-err\", err);\n            });\n        } catch (error) {\n            toast.error(\"Not able to add entry in database.\");\n            console.log(\"saveMakePaymentEntry-err\", error);\n        }\n\n    }\n\n    validateTransactionsTotal() {\n        let OutstandingTransactions = this.state.OutstandingTransactions;\n        let PaymentAmount = this.state.paymentAmount;\n        let TotalAmount = 0;\n\n        for (let i = 0; i < OutstandingTransactions.length; i++) {\n            TotalAmount = parseFloat(TotalAmount) + parseFloat(OutstandingTransactions[i].AmountApplied);\n        }\n\n        if (PaymentAmount == TotalAmount) {\n            return false;\n        }\n        return true;\n    }\n\n    showReturnPaymentPopup(rowData) {\n\n        console.log(\"showReturnPaymentPopup>\", rowData);\n\n        if (rowData === undefined) {\n            var statusDesc = this.state.returnPaymentData.ClientTransactionType + \" : Return Payment\";\n            this.setState({\n                toggleNewEntryModal: true,\n                transactionType: 'ReturnPayment',\n                isMakePayment: true,\n                isReturnPayment: true,\n                newEntryDateError: false,\n                chargeAmountError: false,\n                calculateBalanceAFTPay: 0,\n                description: statusDesc,\n                note: '',\n                paymentAmount: 0,\n                descriptionError: false,\n                paymentAmountError: false,\n                entryTypeError: false,\n                isEdit: false,\n                isAccountRecordEdit: false,\n                existOutstanding: 0\n            });\n            if (!CommonConfig.isEmpty(this.state.returnPaymentData)) {\n                this.setState({\n                    paymentAmount: Math.abs(this.state.returnPaymentData.Balance),\n                });\n            }\n        } else {\n            this.setState({\n                toggleNewEntryModal: true,\n                transactionType: 'ReturnPayment',\n                isMakePayment: true,\n                isReturnPayment: true,\n                calculateBalanceAFTPay: this.state.paymentDue,\n                description: rowData.Description,\n                paymentAmount: Math.abs(rowData.PaymentAmount),\n                paymentMode: rowData.PaymentMode,\n                note: rowData.Note,\n                isEdit: true,\n                isAccountRecordEdit: true,\n                newEntryDate: moment(rowData.TransactionDate).format(\"YYYY-MM-DD\"),\n                existOutstanding: rowData.Outstanding\n            });\n        }\n    }\n\n    showBankDetailsPopup() {\n        let accountNameError = CommonConfig.isEmpty(this.state.accountName) ? true : false;\n        let bankNameError = CommonConfig.isEmpty(this.state.bankName) ? true : false;\n        let bankCountryError = CommonConfig.isEmpty(this.state.bankCountry) ? true : false;\n        let IBANError = CommonConfig.isEmpty(this.state.IBAN) ? true : false;\n\n        this.setState({\n            toggleBnkDetailsModal: true, paymentAmountError: false,\n            accountNameError: accountNameError, bankNameError: bankNameError, bankCountryError: bankCountryError, IBANError: IBANError\n        });\n    }\n\n    showDeletePaymentPopup = (e, rowData) => {\n        this.setState({ toggleModalDel: true, delPolicyId: rowData });\n    }\n\n    deleteAccount = () => {\n        // console.log('deleteAccount state', this.state.delPolicyId.TransactionType);\n        // return;\n        let data = {\n            PolicyAccountId: this.state.delPolicyId.PolicyAccountId,\n            loggedInUserId: CommonConfig.loggedInUserId(),\n            DocumentId: this.state.delPolicyId.DocumentId,\n        }\n        try {\n            api.post('api/deleteAccountById', data).then(res => {\n                if (res.success) {\n                    if (res.data.success) {\n                        if (this.state.delPolicyId.TransactionType == 'Payment') {\n                            let data = {\n                                PolicyAccountId: this.state.delPolicyId.PolicyAccountId,\n                                loggedInUserId: CommonConfig.loggedInUserId()\n                            }\n                            api.post('api/updateTransactionOutstanding', data).then(response => {\n                                this.setState({ toggleModalDel: false, delPolicyId: '' });\n                                toast.success(res.data.message);\n                                setTimeout(function () {\n                                    window.location.reload();\n                                }, 1000);\n                            });\n                        } else {\n                            this.setState({ toggleModalDel: false, delPolicyId: '' });\n                            toast.success(res.data.message);\n                            setTimeout(function () {\n                                window.location.reload();\n                            }, 1000);\n                        }\n\n                    }\n                }\n            }).catch(err => {\n                console.log(\"err..\", err);\n            });\n        }\n        catch (err) {\n            console.log(\"err..\", err);\n        }\n    }\n\n    hideEntryPopup() {\n        this.setState({\n            toggleNewEntryModal: false, accountData: \"\", referenceId: '', description: '', ChargeAmount: 0, chargeFee: 0, paymentAmount: 0, PaymentAmount: 0, paymentStatus: '', paymentMode: '', descriptionError: true,\n            paymentAmountError: true, paymentModeError: true, paymentStatusError: true, PolicyAccountId: '', newEntryDate: moment().format(\"YYYY-MM-DD\"), isEdit: false, isAccountRecordEdit: false, returnPaymentData: {}\n        });\n        this.calculateBalanceAFTPay();\n    }\n\n    hideBankDetailsPopup() {\n        this.setState({\n            toggleBnkDetailsModal: false, accountNameError: false, bankNameError: false,\n            bankCountryError: false, IBANError: false, BICError: false,\n            accountName: this.state.bankDetailsRes.AccountName,\n            bankName: this.state.bankDetailsRes.BankName,\n            bankCountry: this.state.bankDetailsRes.Country,\n            IBAN: this.state.bankDetailsRes.IBAN,\n            BIC: this.state.bankDetailsRes.BIC,\n        });\n    }\n\n    hidedeletePopup() {\n        this.setState({ toggleModalDel: false })\n    }\n\n    async addUpdateAccountEntry() {\n        try {\n            if (\n                this.state.newEntryDateError === false && this.state.descriptionError === false && this.state.paymentAmountError === false &&\n                this.state.chargeAmountError === false && this.state.paymentModeError === false && this.state.entryTypeError === false\n            ) {\n                let accountForm = {\n                    PolicyId: this.props.match.params.id,\n                    PolicyAccountId: this.state.PolicyAccountId,\n                    EntryType: CommonConfig.isEmpty(this.state.entryType) ? '' : this.state.entryType,\n                    NewEntryDate: moment(this.state.newEntryDate).format(CommonConfig.dateFormat.dbDateTime),\n                    TransactionType: this.state.transactionType,\n                    ReferenceId: this.state.referenceId,\n                    Description: this.state.description,\n                    ChargeAmount: this.state.chargeAmount,\n                    ChargeFeeAmount: this.state.chargeFee,\n                    TotalChargeAmount: this.state.totalChargeAmount,\n                    PaymentAmount: this.state.paymentAmount,\n                    PaymentMode: this.state.paymentMode,\n                    PaymentStatus: \"Success\",\n                    Note: this.state.note,\n                    CreatedBy: CommonConfig.loggedInUserId(),\n                    Outstanding: Number(this.state.outstanding),\n                    Premium: Number(this.state.updatedPremium),\n                    AdminFee: Number(this.state.updatedPremiumAdminFee),\n                    Levy: Number(this.state.updatedPremiumLevy),\n                    LessLevy: Number(this.state.updatedPremiumLessLevy),\n                    LanguageId: this.state.LanguageId\n                }\n\n                if (accountForm.TransactionType == 'ReturnPayment') {\n                    accountForm.TransactionUniqueReferenceId = this.state.returnPaymentData.UniqueReferenceId.toString();\n                }\n\n                var API = 'api/addUpdateAccountEntry';\n                if (this.state.isReturnPayment) {\n                    API = 'api/addReturnPaymentEntry';\n                }\n\n                console.log(\"addReturnPaymentEntry > \", accountForm);\n\n                api.post(API, accountForm).then(res => {\n                    console.log(\"addUpdateAccountEntry>\", res);\n                    if (res.success) {\n                        if (res.data.success) {\n                            if (this.state.isMakePayment && !this.state.isReturnPayment) {\n                                let generateRecieptData = {\n                                    PolicyAccountId: res.data.data,\n                                    loggedInUserId: CommonConfig.loggedInUserId()\n                                }\n                                api.post('api/generateReciept', generateRecieptData).then(generateRecieptRes => {\n                                    if (res.success) {\n                                        toast.success(res.data.message);\n                                        this.hideEntryPopup();\n                                        setTimeout(function () {\n                                            // window.location.reload();\n                                        }, 1000);\n                                    }\n                                });\n                            } else {\n                                toast.success(res.data.message);\n                                this.hideEntryPopup();\n                                setTimeout(function () {\n                                    window.location.reload();\n                                }, 1000);\n                            }\n                        } else {\n                            toast.error(res.data.message);\n                            this.hideEntryPopup();\n                            setTimeout(function () {\n                                window.location.reload();\n                            }, 1000);\n                        }\n                    }\n                }).catch(err => {\n                    console.log(\"addUpdateAccountEntry error 2\", err);\n                    this.hideEntryPopup();\n                    setTimeout(function () {\n                        window.location.reload();\n                    }, 1000);\n                });\n\n            } else {\n                this.show(\"newEntryDate\", this.state.newEntryDateError, \"newEntryDateError\", \"Please enter transaction date\")\n                this.show(\"description\", this.state.descriptionError, \"descriptionError\", \"Please enter description\")\n                this.show(\"paymentAmount\", this.state.paymentAmountError, \"paymentAmountError\", \"Please enter payment amount\");\n                this.show(\"chargeAmount\", this.state.chargeAmountError, \"chargeAmountError\", \"Please enter charge amount\");\n                this.show(\"paymentMode\", this.state.paymentModeError, \"paymentModeError\", \"Please select payment mode\");\n                this.show(\"entryType\", this.state.entryTypeError, \"entryTypeError\", \"Please select type\");\n            }\n        } catch (error) {\n            console.log(\"addUpdateAccountEntry error 1\", error);\n        }\n    }\n\n    getUserBankAccountDetails() {\n        try {\n            const data = { EntityId: this.props.EntityId, EntityType: this.props.EntityType };\n            console.log(\"getUserBankAccountDetails > req\", data);\n            api.post(APIConstant.path.getUserBankAccountDetails, data).then(res => {\n                console.log(\"getUserBankAccountDetails > res\", res);\n                if (res.data.length) {\n                    var BankExists = 1\n                    this.setState({ accountNameError: false, IBANError: false, BICError: false, bankNameError: false, bankCountryError: false });\n                } else {\n                    this.setState({\n                        EntityBankDetailId: '',\n                        accountName: '',\n                        IBAN: '',\n                        BIC: '',\n                        bankName: '',\n                        bankCountry: '',\n                        bankExists: 0,\n                        bankDetailsRes: []\n                    });\n                    this.setState({ accountNameError: true, IBANError: true, BICError: false, bankNameError: true, bankCountryError: true });\n                }\n                if (res.success) {\n                    this.setState({\n                        EntityBankDetailId: res.data[0].EntityBankDetailId,\n                        accountName: res.data[0].AccountName,\n                        IBAN: res.data[0].IBAN,\n                        BIC: res.data[0].BIC,\n                        bankName: res.data[0].BankName,\n                        bankCountry: res.data[0].Country,\n                        bankExists: BankExists,\n                        bankDetailsRes: res.data[0]\n                    });\n                } else {\n                    console.log(\"else\");\n                }\n            }).catch(err => {\n                console.log(\"sss\", err);\n            });\n        } catch (error) {\n            console.log(\"ssss\", error);\n        }\n    }\n\n    addUpdateBankDetails() {\n        try {\n\n            if (\n                this.state.accountNameError === false &&\n                this.state.bankNameError === false &&\n                this.state.bankCountryError === false &&\n                this.state.IBANError === false\n            ) {\n                let data = {\n                    EntityBankDetailId: this.state.EntityBankDetailId,\n                    entityId: this.props.EntityId,\n                    EntityType: this.props.EntityType,\n                    AccountName: this.state.accountName,\n                    IBAN: this.state.IBAN,\n                    BIC: this.state.BIC,\n                    BankName: this.state.bankName,\n                    Country: this.state.bankCountry,\n                    LoggedInUserId: CommonConfig.loggedInUserId()\n                }\n                api.post('api/addUpdateBankDetails', data).then(res => {\n                    if (res.success) {\n                        if (res.data.success) {\n                            toast.success(res.data.message);\n                            // window.location.reload();\n                        } else {\n                            toast.error(res.data.message);\n                        }\n                        setTimeout(() => {\n                            this.getUserBankAccountDetails();\n                            this.hideBankDetailsPopup();\n                        }, 100);\n                    }\n                }).catch(err => {\n                    console.log(\"addUpdateAccountEntry error 2\", err);\n                });\n            } else {\n                this.show(\"accountName\", this.state.accountNameError, 'accountNameError', 'Please enter Account Name');\n                this.show(\"bankName\", this.state.bankNameError, 'bankNameError', 'Please enter Bank Name.');\n                this.show(\"bankCountry\", this.state.bankCountryError, 'bankCountryError', 'Please select country.');\n                this.show(\"IBAN\", this.state.IBANError, 'IBANError', 'Please enter valid IBAN.');\n                //this.show(\"BIC\", this.state.BICError);\n            }\n\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    clearBankDetails() {\n        try {\n            let data = {\n                EntityBankDetailId: this.state.EntityBankDetailId,\n                EntityId: this.props.EntityId,\n                LoggedInUserId: CommonConfig.loggedInUserId()\n            };\n            console.log(\"clearBankDetails\", data);\n            api.post('api/clearBankDetails', data).then(res => {\n                console.log(\"clearBankDetails > res\", res);\n                if (res.success) {\n                    if (res.data.success) {\n                        toast.success(res.data.message);\n                    } else {\n                        toast.error(res.data.message);\n                    }\n                    setTimeout(() => {\n                        this.getUserBankAccountDetails();\n                        this.hideBankDetailsPopup();\n                    }, 100);\n                }\n            }).catch(err => {\n                console.log(\"clearBankDetails error\", err);\n            });\n        } catch (error) {\n            console.log(\"clearBankDetails > error\", error);\n        }\n    }\n\n    handleDateChange = (e, type) => {\n        this.setState({ [type]: e });\n    }\n\n    onRadioBtnClick(radioSelected) {\n        this.setState({\n            newEntryDate: moment().format('YYYY-MM-DD'),\n            transactionType: 'Debit',\n            referenceId: '',\n            description: '',\n            chargeAmount: 0,\n            chargeFee: 0,\n            totalChargeAmount: 0,\n            paymentAmount: 0,\n            paymentMode: '',\n            paymentStatus: '',\n\n            note: '',\n            addedBy: '',\n            addedDate: '',\n            updatedBy: '',\n            updatedDate: ''\n        })\n        // this.resetAccountForm();\n        this.setState({\n            transactionType: radioSelected\n        });\n        if (radioSelected == 'Credit') {\n            this.setState({\n                paymentAmountError: true, chargeAmountError: false\n            });\n        }\n    }\n\n    selectType(value, type) {\n\n        if (type === 'paymentMode') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ paymentModeError: true, paymentMode: value });\n                this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\n            } else {\n                this.setState({ paymentModeError: false, paymentMode: value });\n                this.show('paymentMode', false, \"paymentModeError\", \"\");\n\n            }\n        }\n\n        if (type === 'paymentStatus') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ paymentStatusError: true, paymentStatus: value });\n                this.show('paymentStatus', true, \"paymentStatusError\", \"Select payment status\");\n            } else {\n                this.setState({ paymentStatusError: false, paymentStatus: value });\n                this.show('paymentStatus', false, \"paymentStatusError\", \"\");\n\n            }\n        }\n\n        if (type === 'bankCountry') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ bankCountryError: true, bankCountry: value });\n                this.show(\"bankCountry\", true, \"bankCountryError\", \"Please select Country\");\n            } else {\n                this.setState({ bankCountryError: false, bankCountry: value });\n                this.show(\"bankCountry\", false, \"bankCountryError\", \"\");\n            }\n        }\n\n        if (type === 'CardType') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ CardTypeError: true, CardType: value });\n                this.show('CardType', true, \"CardTypeError\", \"Select CardType\");\n            } else {\n                this.setState({ CardTypeError: false, CardType: value });\n                this.show('CardType', false, \"CardTypeError\", \"\");\n            }\n            // this.setState({ CardType: value });\n        }\n\n        if (type === 'ExpiryMonth') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ ExpiryMonthError: true, ExpiryMonth: value });\n                this.show('ExpiryMonth', true, \"ExpiryMonthError\", \"Select ExpiryMonth\");\n            } else {\n                this.setState({ ExpiryMonthError: false, ExpiryMonth: value });\n                this.show('ExpiryMonth', false, \"ExpiryMonthError\", \"\");\n            }\n            // this.setState({ ExpiryMonth: value });\n        }\n\n        if (type === 'ExpiryYear') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ ExpiryYearError: true, ExpiryYear: value });\n                this.show('ExpiryYear', true, \"ExpiryYearError\", \"Select ExpiryYear\");\n            } else {\n                this.setState({ ExpiryYearError: false, ExpiryYear: value });\n                this.show('ExpiryYear', false, \"ExpiryYearError\", \"\");\n            }\n            // this.setState({ ExpiryYear: value });\n        }\n\n        if (type === 'entryType') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ entryTypeError: true, entryType: value });\n                this.show('entryType', true, \"entryTypeError\", \"Please select type\");\n            } else {\n                this.setState({ entryTypeError: false, entryType: value, description: value });\n                this.show('entryType', false, \"entryTypeError\", \"\");\n            }\n        }\n\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control is-invalid\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        let nameRegExp = CommonConfig.RegExp.nameWithSpace;\n        let numberRegExp = CommonConfig.RegExp.number;\n        let decimalRegExp = CommonConfig.RegExp.decimalWithOne;\n        let allowAllWithSpace = CommonConfig.RegExp.allowAllWithSpace;\n        // let cardnumRegExp = /[^0-9]/;\n        // \"^(?:(?<visa>4[0-9]{12}(?:[0-9]{3})?)|\" +\n        // \"(?<mastercard>5[1-5][0-9]{14})|\" +\n        // \"(?<discover>6(?:011|5[0-9]{2})[0-9]{12})|\" +\n        // \"(?<amex>3[47][0-9]{13})|\" +\n        // \"(?<diners>3(?:0[0-5]|[68][0-9])?[0-9]{11})|\" +\n        // \"(?<jcb>(?:2131|1800|35[0-9]{3})[0-9]{11}))$\"\n        let cvvRegExp = /^[0-9]{3,4}$/;\n        let value = e.target.value;\n        if (e.target.name === 'newEntryDate') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ newEntryDateError: true });\n                this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\n            } else {\n                this.setState({ newEntryDateError: false, newEntryDate: e.target.value });\n                this.show(\"newEntryDate\", false, \"newEntryDateError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'chargeAmount') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ chargeAmountError: true });\n                this.show(\"chargeAmount\", true, \"chargeAmountError\", \"Please enter charge fees \");\n            } else {\n                let nameRegEx = decimalRegExp;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ chargeAmountError: true });\n                    this.show(\"chargeAmount\", true, \"chargeAmountError\", \"Please enter valid charge fees\");\n                } else {\n                    this.setState({ chargeAmountError: false, chargeAmount: e.target.value });\n                    this.show(\"chargeAmount\", false, \"chargeAmountError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'paymentAmount') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ paymentAmountError: true });\n                this.show(\"paymentAmount\", true, \"paymentAmountError\", \"Please enter charge fees \");\n            } else {\n                let nameRegEx = decimalRegExp;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ paymentAmountError: true });\n                    this.show(\"paymentAmount\", true, \"paymentAmountError\", \"Please enter valid charge fees\");\n                } else {\n                    this.setState({ paymentAmountError: false, paymentAmount: e.target.value });\n                    this.show(\"paymentAmount\", false, \"paymentAmountError\", \"\");\n                }\n            }\n            setTimeout(() => {\n                if (this.state.isTransferFundPopup) {\n                    this.calculateTransferFundPremium();\n                } else {\n                    this.calculatePremium();\n                }\n            }, 500);\n        }\n\n        if (e.target.name === 'chargeFee') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ chargeFeeError: true });\n                this.show(\"chargeFee\", true, \"chargeFeeError\", \"Please enter charge fees \");\n            } else {\n                let nameRegEx = numberRegExp;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ chargeFeeError: true });\n                    this.show(\"chargeFee\", true, \"chargeFeeError\", \"Please enter valid charge fees\");\n                } else {\n                    this.setState({ chargeFeeError: false, chargeFee: e.target.value });\n                    this.show(\"chargeFee\", false, \"chargeFeeError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'description') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ descriptionError: true });\n                this.show(\"description\", true, \"descriptionError\", \"Please enter description \");\n            } else {\n                let nameRegEx = allowAllWithSpace;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ descriptionError: true });\n                    this.show(\"description\", true, \"descriptionError\", \"Please enter valid description\");\n                } else {\n                    this.setState({ descriptionError: false, description: e.target.value });\n                    this.show(\"description\", false, \"descriptionError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'accountName') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ accountNameError: true });\n                this.show(\"accountName\", true, \"accountNameError\", \"Please enter Account Name \");\n            } else {\n                let nameRegEx = CommonConfig.RegExp.nameWithSpace;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ accountNameError: true });\n                    this.show(\"accountName\", true, \"accountNameError\", \"Please enter valid Account Name\");\n                } else {\n                    this.setState({ accountNameError: false, accountName: e.target.value });\n                    this.show(\"accountName\", false, \"accountNameError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'bankName') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ bankNameError: true });\n                this.show(\"bankName\", true, \"bankNameError\", \"Please enter Bank Name\");\n            } else {\n                let nameRegEx = CommonConfig.RegExp.nameWithSpace;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ bankNameError: true });\n                    this.show(\"bankName\", true, \"bankNameError\", \"Please enter valid Bank Name\");\n                } else {\n                    this.setState({ bankNameError: false, bankName: e.target.value });\n                    this.show(\"bankName\", false, \"bankNameError\", \"\");\n                }\n            }\n        }\n\n        if (e.target.name === 'IBAN') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ IBANError: true });\n                this.show(\"IBAN\", true, \"IBANError\", \"Please enter IBAN Number\");\n            } else {\n                // let nameRegEx = CommonConfig.RegExp.alphaNumeric;\n                let name = e.target.value;\n                if (IBAN.isValid(name)) {\n                    this.setState({ IBANError: false, IBAN: name });\n                    this.show(\"IBAN\", false, \"IBANError\", \"\");\n                } else {\n                    this.setState({ IBANError: true });\n                    this.show(\"IBAN\", true, \"IBANError\", \"Please enter valid IBAN Number\");\n                }\n            }\n        }\n\n        if (e.target.name === 'BIC') {\n            this.setState({ BICError: false });\n\n            /*if (CommonConfig.isEmpty(e.target.value)) {\n               this.setState({ BICError: true });\n               this.show(\"BIC\", true, \"BICError\", \"Please enter BIC Number\");\n             } else {\n               let nameRegEx = CommonConfig.RegExp.alphaNumeric;\n               let name = e.target.value;\n               if (!nameRegEx.test(name)) {\n                 this.setState({ BICError: true });\n                 this.show(\"BIC\", true, \"BICError\", \"Please enter valid BIC Number\");\n               } else {\n                 if (e.target.value.length < 8 || e.target.value.length > 11) {\n                   this.setState({ BICError: true, BIC: e.target.value });\n                   this.show(\"BIC\", true, \"BICError\", \"BIC number must be between 8 to 11 Characters\");\n                 } else {\n                   this.setState({ BICError: false, BIC: e.target.value });\n                   this.show(\"BIC\", false, \"BICError\", \"\");\n                 }\n               }\n             }*/\n        }\n\n        if (e.target.name === 'CardholderName') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ CardholderNameError: true });\n                this.show(\"CardholderName\", true, \"CardholderNameError\", \"Please enter CardholderName\");\n            } else {\n                if (!nameRegExp.test(value)) {\n                    this.setState({ CardholderNameError: true });\n                    this.show(\"CardholderName\", true, \"CardholderNameError\", \"Please enter valid CardholderName\");\n                } else {\n                    this.setState({ CardholderNameError: false, CardholderName: value });\n                    this.show(\"CardholderName\", false, \"CardholderNameError\", \"\");\n                }\n\n            }\n        }\n\n        if (e.target.name === 'CardNumber') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ CardNumberError: true });\n                this.show(\"CardNumber\", true, \"CardNumberError\", \"Please enter CardNumber\");\n            } else {\n                // if (!cardnumRegExp.test(value)) {\n                //     this.setState({ CardNumberError: true });\n                //     this.show(\"CardNumber\", true, \"CardNumberError\", \"Please enter valid CardNumber\");\n                //   } else {\n                this.setState({ CardNumberError: false, CardNumber: value });\n                this.show(\"CardNumber\", false, \"CardNumberError\", \"\");\n                // }\n\n            }\n        }\n\n        if (e.target.name === 'CVV') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ CVVError: true });\n                this.show(\"CVV\", true, \"CVVError\", \"Please enter CVV\");\n            } else {\n                if (!cvvRegExp.test(value)) {\n                    this.setState({ CVVError: true });\n                    this.show(\"CVV\", true, \"CVVError\", \"Please enter valid CVV\");\n                } else {\n                    this.setState({ CVVError: false, CVV: value });\n                    this.show(\"CVV\", false, \"CVVError\", \"\");\n                }\n\n            }\n        }\n\n        this.calculateBalanceAFTPay();\n        this.totalChargeAmt();\n    }\n\n    handleChangeAmount(e, i) {\n\n        let value = e.target.value;\n        if (CommonConfig.isEmpty(value)) {\n            value = '';\n        }\n\n        let SystemOutstandingTransactions = this.state.SystemOutstandingTransactions;\n        let OutstandingTransactions = this.state.OutstandingTransactions;\n        let transaction = SystemOutstandingTransactions[i];\n\n        let AmountApplied = value;\n        let TotalDue = transaction.TotalDue;\n        let LevyTotalAmount = transaction.LevyTotalAmount;\n        let Outstanding = transaction.Outstanding;\n\n        OutstandingTransactions[i].AmountApplied = AmountApplied;\n\n        if (Outstanding >= AmountApplied) {\n            let UpdatedAdminFee = 0;\n            let OutstandingAfterPayment = 0;\n            var UpdatedLevy = 0;\n            var UpdatedNetPremium = 0;\n\n            OutstandingAfterPayment = Outstanding - AmountApplied;\n            UpdatedAdminFee = (transaction.AdminFee * AmountApplied) / TotalDue;\n            UpdatedLevy = (AmountApplied * LevyTotalAmount) / TotalDue;\n            UpdatedNetPremium = AmountApplied - UpdatedLevy - UpdatedAdminFee;\n            OutstandingTransactions[i].OutstandingAfterPayment = Number(OutstandingAfterPayment).toFixed(2);\n            OutstandingTransactions[i].UpdatedNetPremium = Number(UpdatedNetPremium).toFixed(2);\n            OutstandingTransactions[i].UpdatedLevy = Number(UpdatedLevy).toFixed(2);\n            OutstandingTransactions[i].UpdatedAdminFee = Number(UpdatedAdminFee).toFixed(2);\n\n            this.show(\"AmountApplied\", false, \"AmountAppliedError\", \"\");\n        } else {\n            this.show(\"AmountApplied\", true, \"AmountAppliedError\", \"Please enter proper amount\");\n        }\n\n        this.setState({ OutstandingTransactions: OutstandingTransactions });\n\n    }\n\n    resetAccountForm() {\n        this.setState({\n            newEntryDate: moment().format('YYYY-MM-DD'),\n            transactionType: 'Debit',\n            referenceId: '',\n            description: '',\n            chargeAmount: 0,\n            chargeFee: 0,\n            totalChargeAmount: 0,\n            paymentAmount: 0,\n            paymentMode: '',\n            paymentStatus: '',\n            note: '',\n            addedBy: '',\n            addedDate: '',\n            updatedBy: '',\n            updatedDate: '',\n            PolicyAccountId: '',\n            isMakePayment: false,\n            isReturnPayment: false,\n            newEntryDateError: false,\n            descriptionError: true,\n            chargeAmountError: true,\n            paymentAmountError: false,\n            paymentModeError: false,\n            paymentStatusError: true\n        });\n        this.calculateBalanceAFTPay();\n        this.totalChargeAmt();\n    }\n\n    calculateBalanceAFTPay() {\n\n        if (this.state.paymentDue && this.state.paymentAmount) {\n            setTimeout(() => {\n                var calculateBalanceAFTPay = 0;\n                var calculateBalanceAFTPay = Number(this.state.paymentDue) - Number(this.state.paymentAmount);\n\n                this.setState({ calculateBalanceAFTPay: calculateBalanceAFTPay });\n            }, 100);\n            // console.log(\"calculateBalanceAFTPay\", this.state.calculateBalanceAFTPay);\n        }\n    }\n\n    totalChargeAmt() {\n\n        if (this.state.chargeAmount) {\n            setTimeout(() => {\n                var totalAmount = 0;\n                var totalAmount = Number(this.state.chargeAmount) + Number(this.state.chargeFee);\n\n                this.setState({ totalChargeAmount: totalAmount });\n            }, 100);\n            console.log(\"totalAmount\", this.state.totalAmount);\n        }\n    }\n\n    calculatePremium() {\n        try {\n\n            let SystemOutstandingTransactions = this.state.SystemOutstandingTransactions;\n            let OutstandingTransactions = this.state.OutstandingTransactions;\n            let PaymentAmount = this.state.paymentAmount;\n            var ExistOutstanding = Number(this.state.existOutstanding);\n            var RemainingPaymentAmount = PaymentAmount;\n\n            for (let i = 0; i < SystemOutstandingTransactions.length; i++) {\n\n                let transaction = SystemOutstandingTransactions[i];\n\n                let AmountApplied = 0;\n                let TotalDue = transaction.TotalDue;\n                let LevyTotalAmount = transaction.LevyTotalAmount;\n\n                let Outstanding = transaction.Outstanding;\n                let OutstandingAfterPayment = 0;\n                let UpdatedNetAmount = 0;\n                var UpdatedNetPremium = 0;\n                var UpdatedLevy = 0;\n                let UpdatedAdminFee = 0;\n\n                if (RemainingPaymentAmount > 0) {\n                    AmountApplied = (RemainingPaymentAmount <= Outstanding) ? RemainingPaymentAmount : Outstanding;\n                    OutstandingAfterPayment = Outstanding - AmountApplied;\n                    UpdatedAdminFee = (transaction.AdminFee * AmountApplied) / TotalDue;\n                    UpdatedNetAmount = AmountApplied - UpdatedAdminFee;\n                    UpdatedLevy = (AmountApplied * LevyTotalAmount) / TotalDue;\n                    UpdatedNetPremium = AmountApplied - UpdatedLevy - UpdatedAdminFee;\n                    RemainingPaymentAmount = RemainingPaymentAmount - AmountApplied;\n                }\n\n                OutstandingTransactions[i].AmountApplied = Number(AmountApplied).toFixed(2);\n                OutstandingTransactions[i].OutstandingAfterPayment = Number(OutstandingAfterPayment).toFixed(2);\n                OutstandingTransactions[i].UpdatedNetPremium = Number(UpdatedNetPremium).toFixed(2);\n                OutstandingTransactions[i].UpdatedLevy = Number(UpdatedLevy).toFixed(2);\n                OutstandingTransactions[i].UpdatedAdminFee = Number(UpdatedAdminFee).toFixed(2);\n            }\n            this.setState({ OutstandingTransactions: OutstandingTransactions });\n\n        } catch (error) {\n            console.log(\"calculatePremium >> error\", error);\n        }\n    }\n\n    getCurrentDecription() {\n        let desc = \"\";\n        let policyAccountList = this.state.policyAccountList;\n        policyAccountList = policyAccountList.filter(function (val) {\n            return val.SystemEntryType != '';\n        });\n        if (policyAccountList.length) {\n            desc = policyAccountList[0].SystemEntryType;\n        }\n        return desc;\n    }\n\n    getPolicyOutstandingTransaction(rowData) {\n        console.log('rowData >', rowData);\n        let data = {\n            PolicyId: this.props.match.params.id,\n            LoggedInUserId: CommonConfig.loggedInUserId(),\n            UniqueReferenceId: ''\n        };\n        if (rowData !== undefined) {\n            data.UniqueReferenceId = rowData.UniqueReferenceId;\n        }\n        api.post('api/getPolicyOutstandingTransaction', data).then(res => {\n            console.log(\"getPolicyOutstandingTransaction res\", res);\n            if (res.success) {\n                if (res.data[0].length) {\n                    this.setState({ SystemOutstandingTransactions: res.data[0], OutstandingTransactions: res.data[0] });\n\n                    var statusDesc = rowData.ClientTransactionType; // this.getCurrentDecription();\n                    this.setState({ isPaymentPopup: true, transactionType: 'Payment', description: statusDesc, paymentAmount: res.data[0][0].Outstanding, descriptionError: false, paymentAmountError: false, existOutstanding: 0, isEdit: false, newEntryDateError: false });\n\n                    setTimeout(() => {\n                        this.calculatePremium();\n                    }, 100);\n\n                } else {\n                    toast.warn(\"There is no Payment Due for this Policy.\");\n                }\n            }\n        }).catch(err => {\n            console.log(\"getPolicyOutstandingTransaction error\", err);\n        });\n    }\n\n    getBatchPaymentDetails(rowData) {\n        let data = {\n            PolicyAccountId: this.state.PolicyAccountId\n        }\n        console.log(\"getBatchPaymentDetails rowdata \", rowData);\n        api.post('api/getBatchPaymentDetails', data).then(res => {\n            console.log(\"getBatchPaymentDetails res\", res);\n            if (res.success) {\n                if (res.data.length) {\n                    var OutstandingTransactions = res.data;\n                    this.setState({ OutstandingTransactions: OutstandingTransactions });\n\n                    console.log(\"getBatchPaymentDetails > OutstandingTransactions\", OutstandingTransactions);\n\n                    var paymentAmountTotal = 0;\n\n                    for (var i in OutstandingTransactions) {\n                        paymentAmountTotal += parseFloat(OutstandingTransactions[i].PaymentAmount);\n                    }\n\n                    this.setState({\n                        isPaymentPopup: true, transactionType: 'Payment',\n                        paymentAmountError: false, paymentAmount: paymentAmountTotal.toFixed(2),\n                        description: rowData.Description, descriptionError: false,\n                        existOutstanding: 0, isEdit: true,\n                        newEntryDate: moment(rowData.TransactionDate).format(\"YYYY-MM-DD\"),\n                        paymentMode: rowData.PaymentMode,\n                        note: rowData.Note\n                    });\n                }\n            }\n        }).catch(err => {\n            console.log(\"getBatchPaymentDetails error\", err);\n        });\n    }\n\n    shortWriteoff(UniqueReferenceId, writeoffAmount) {\n        try {\n            let data = {\n                PolicyId: this.state.policyId,\n                UniqueReferenceId: UniqueReferenceId,\n                PaymentAmount: writeoffAmount,\n                LoggedInUserId: CommonConfig.loggedInUserId()\n            }\n            console.log(\"shortWriteoff > \", data);\n            api.post('api/shortWriteoff', data).then(res => {\n                console.log(\"shortWriteoff > res >\", res);\n                if (res.success) {\n                    if (res.data.success) {\n                        toast.success(res.data.message);\n                        window.location.reload();\n                    } else {\n                        toast.error(res.data.message);\n                    }\n                }\n            }).catch(err => {\n                console.log(\"shortWriteoff > error > 1\", err);\n            });\n\n        } catch (error) {\n            console.log(\"shortWriteoff > error > 2\", error);\n        }\n    }\n\n    getLapsePolicyDetails() {\n        try {\n            let data = {\n                PolicyId: this.props.match.params.id,\n                LoggedInUserId: CommonConfig.loggedInUserId()\n            }\n            api.post('api/getLapsePolicyDetails', data).then(res => {\n                console.log(\"getLapsePolicyDetails > res >\", res);\n                if (res.success) {\n                    if (res.data.length) {\n                        this.setState({\n                            IsLapsePolicy: res.data[0].IsLapsePolicy,\n                            DaysOverdue: res.data[0].DaysOverdue,\n                            RenewalDate: res.data[0].RenewalDate\n                        });\n                    }\n                }\n            }).catch(err => {\n                console.log(\"getLapsePolicyDetails > error > 1\", err);\n            });\n\n        } catch (error) {\n            console.log(\"getLapsePolicyDetails > error > 2\", error);\n        }\n    }\n\n    showLapsePolicyPopup() {\n        this.setState({ IsLapsePolicyPopup: true, lapsePolicyNote: '' });\n    }\n\n    hideLapsePolicyPopup() {\n        this.setState({ IsLapsePolicyPopup: false, lapsePolicyNote: '' });\n    }\n\n    lapsePolicy() {\n        try {\n            let data = {\n                PolicyId: this.state.policyId,\n                Note: this.state.lapsePolicyNote,\n                LoggedInUserId: CommonConfig.loggedInUserId()\n            }\n            api.post('api/lapsePolicy', data).then(res => {\n                console.log(\"lapsePolicy > res >\", res);\n                if (res.success) {\n                    if (res.data.success) {\n                        toast.success(res.data.message);\n                        setTimeout(() => {\n                            window.location.reload();\n                        }, 100);\n                    } else {\n                        toast.error(res.data.message);\n                        setTimeout(() => {\n                            window.location.reload();\n                        }, 100);\n                    }\n                } else {\n                    toast.error(res.message);\n                    setTimeout(() => {\n                        window.location.reload();\n                    }, 100);\n                }\n            }).catch(err => {\n                console.log(\"lapsePolicy > error > 1\", err);\n                setTimeout(() => {\n                    window.location.reload();\n                }, 100);\n            });\n\n        } catch (error) {\n            console.log(\"lapsePolicy > error > 2\", error);\n        }\n    }\n\n    actionFormatter = (cell, rowData) => {\n        console.log(\"actionFormatter > \", cell, rowData, this);\n\n        var tempActions = rowData.Actions;\n        var actions = CommonConfig.isEmpty(tempActions) ? [] : tempActions.split(',');\n        console.log('actionFormatter > actions > ', actions);\n\n        var accountRecordMenu = [];\n        if (actions.length) {\n            for (var i = 0; i < actions.length; i++) {\n                if (actions[i] != '') {\n                    accountRecordMenu.push({\n                        label: actions[i],\n                        data: rowData,\n                        UniqueReferenceId: rowData.UniqueReferenceId,\n                    });\n                }\n            }\n        }\n\n        var path = apiBase + \"\" + rowData.URL;\n        return (\n            <div className={'Account' + rowData.Id}>\n                <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-primary\" tooltip=\"View\" tooltipOptions={{ position: 'bottom' }} style={{ marginRight: '.5em' }} onClick={(e) => this.editAccount(e, rowData)}>\n                </BTN>\n\n                {(accountRecordMenu.length) ? (\n                    <Input type=\"select\"\n                        style={{ width: '40%', display: 'inline-block' }}\n                        name={\"accountRecord\" + rowData.Id} id={\"accountRecord\" + rowData.Id}\n                        onChange={(e) => this.accountRecordActions(e.target.value, rowData, false)}\n                    >\n                        <option value=''>Select</option>\n                        {\n                            accountRecordMenu.map((type, i) => {\n                                return (<option value={type.label} key={i}>{type.label}</option>)\n                            })\n                        }\n                    </Input>\n                ) : (null)}\n\n                {/* <Menu model={accountRecordMenu} popup={true} ref={el => this.menu = el} id={\"accountMenu\" + rowData.Id} />\n                <BTN icon=\"pi pi-ellipsis-v\" className=\"p-button-primary\"\n                    aria-controls={\"accountMenu\" + rowData.Id} aria-haspopup={true}\n                    onMouseEnter={(event) => this.menu.toggle(event)} /> */}\n\n            </div>\n        );\n    }\n\n    handleOnExpand = (row, isExpand, rowIndex, e) => {\n        try {\n            if (isExpand) {\n                let data = {\n                    UniqueReferenceId: row.UniqueReferenceId\n                };\n                api.post('api/getChildAccountRecords', data).then(res => {\n                    this.setState({ childAccountData: [] });\n                    var tempChildAccountData = res.data[0];\n                    console.log(\"getChildAccountRecords\", tempChildAccountData);\n                    if (res.success) {\n\n                        tempChildAccountData.forEach(function (element) {\n                            var tempActions = element.Menu;\n                            var childActions = CommonConfig.isEmpty(tempActions) ? [] : tempActions.split(',');\n                            console.log('handleOnExpand > childActions > ', childActions);\n\n                            var childAccountRecordMenu = [];\n                            if (childActions.length) {\n                                for (var i = 0; i < childActions.length; i++) {\n                                    if (childActions[i] != '') {\n                                        childAccountRecordMenu.push({\n                                            label: childActions[i],\n                                            UniqueReferenceId: element.UniqueReferenceId,\n                                        });\n                                    }\n                                }\n                            }\n                            element.Actions = childAccountRecordMenu;\n                            element.CurrencySymbol = row.CurrencySymbol;\n                            element.Path = apiBase + \"\" + element.URL;\n                        });\n\n                        setTimeout(() => {\n                            this.setState({ childAccountData: tempChildAccountData });\n                        }, 500);\n                    } else {\n                        console.log(\"getChildAccountRecords > error 3\", res);\n                    }\n                }).catch(err => {\n                    this.setState({ childAccountData: [] });\n                    console.log(\"getChildAccountRecords > error 2\", err);\n                });\n            }\n        } catch (error) {\n            console.log(\"handleOnExpand > Err\", error);\n        }\n    }\n\n    expandRow = {\n        onlyOneExpanding: true,\n        showExpandColumn: true,\n        expandByColumnOnly: true,\n        parentClassName: (isExpanded, row, rowIndex) => {\n            return 'parent-expand-foo';\n        },\n        onExpand: this.handleOnExpand,\n        renderer: row => (\n            <div>\n                {(this.state.childAccountData.length > 0) ? (\n\n                    <table width={'100%'} style={{ border: 'none' }}>\n                        <tr>\n                            <th>#</th>\n                            <th>Txn Date</th>\n                            <th>Transaction</th>\n                            <th>Reference Id</th>\n                            <th>Description</th>\n                            <th>Amount</th>\n                            <th>Payment Mode</th>\n                            <th>Added By</th>\n                            <th>Outstanding</th>\n                            <th>Actions</th>\n                        </tr>\n                        {\n                            this.state.childAccountData.map((accountEntry, i) => {\n                                console.log(\"childAccountData > \" + i + \" > \", accountEntry);\n                                return (\n                                    <tr>\n                                        <td>{(i + 1)}</td>\n                                        <td>{moment(accountEntry.TransactionDate).format(CommonConfig.dateFormat.dateOnly)}</td>\n                                        <td>{accountEntry.ClientTransactionType}</td>\n                                        <td>{accountEntry.UniqueReferenceId}</td>\n                                        <td>{accountEntry.Description}</td>\n                                        <td>\n                                            {\n                                                (accountEntry.TransactionType == 'Payment' || accountEntry.TransactionType == 'ReturnPayment') ?\n                                                    (\n                                                        <div style={{ float: 'right' }}>\n                                                            {<i className={accountEntry.CurrencySymbol} ></i>}\n                                                            {(CommonConfig.isEmpty(accountEntry.PaymentAmount) ? ('') : (accountEntry.PaymentAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")))}\n                                                        </div>\n                                                    ) : (\n                                                        <div style={{ float: 'right' }}>\n                                                            {<i className={accountEntry.CurrencySymbol} ></i>}\n                                                            {(CommonConfig.isEmpty(accountEntry.TotalChargeAmount) ? ('') : (accountEntry.TotalChargeAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")))}\n                                                        </div>\n                                                    )\n                                            }\n                                        </td>\n                                        <td>\n                                            {(accountEntry.TransactionType == 'Payment' || accountEntry.TransactionType == 'ReturnPayment') ? (accountEntry.PaymentMode) : ('N/A')}\n                                        </td>\n                                        <td>\n                                            {accountEntry.CreatedByName}\n                                            {\n                                                (CommonConfig.isEmpty(accountEntry.CreatedOn) ?\n                                                    ('') : \" (\" + moment(accountEntry.CreatedOn).format(CommonConfig.dateFormat.dateTime)) + \")\"\n                                            }\n                                        </td>\n                                        <td>\n                                            <div style={{ float: 'right' }}>\n                                                {<i className={accountEntry.CurrencySymbol} ></i>}\n                                                {(CommonConfig.isEmpty(accountEntry.Outstanding) ? ('0') : (accountEntry.Outstanding.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")))}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div className={\"childRccountRecordMenu\" + accountEntry.Id} >\n                                                {(accountEntry.IsLocked) ? (\n                                                    <span>\n                                                        <i style={{ fontSize: '30px', verticalAlign: 'sub', color: 'red' }} className=\"pi pi-lock\" href=\"#\" id={\"LockedTooltip\" + accountEntry.BReference}></i>\n                                                        <UncontrolledTooltip placement=\"top\" target={\"LockedTooltip\" + accountEntry.BReference}>\n                                                            {accountEntry.BReference}\n                                                        </UncontrolledTooltip>\n                                                    </span>\n                                                ) : (null)}\n\n                                                <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-primary\" tooltip=\"View\" tooltipOptions={{ position: 'bottom' }} onClick={(e) => this.editAccount(e, accountEntry)}>\n                                                </BTN>\n\n                                                {((accountEntry.ClientTransactionType !== 'Contra' && accountEntry.ClientTransactionType !== 'Short Write Off') && accountEntry.TransactionType === 'Payment') ? (\n                                                    <BTN type=\"button\" icon=\"pi pi-file\" className=\"p-button-primary\" tooltip=\"Generate Receipt of Payment\" tooltipOptions={{ position: 'bottom' }} style={{ marginRight: '.5em' }} onClick={(e) => this.generateReceipt(accountEntry)}>\n                                                    </BTN>\n                                                ) : (null)}\n\n                                                {(accountEntry.TransactionType === 'Payment') ? (\n                                                    CommonConfig.isEmpty(accountEntry.IsReceiptGenerated) ? (null) : (\n                                                        <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" tooltip=\"View Receipt of Payment\" tooltipOptions={{ position: 'bottom' }} style={{ marginRight: '.5em' }} onClick={(e) => window.open(accountEntry.Path, \"_blank\")} >\n                                                        </BTN>\n                                                    )\n                                                ) : (null)}\n\n                                                {(accountEntry.Actions.length) ? (\n                                                    <Input type=\"select\"\n                                                        style={{ width: '40%', display: 'inline-block' }}\n                                                        name={\"childRccountRecord\" + accountEntry.Id} id={\"childRccountRecord\" + accountEntry.Id}\n                                                        onChange={(e) => this.accountRecordActions(e.target.value, accountEntry, true)}\n                                                    >\n                                                        <option value=''>Select</option>\n                                                        {\n                                                            accountEntry.Actions.map((type, j) => {\n                                                                return (<option value={type.label} key={j}>{type.label}</option>)\n                                                            })\n                                                        }\n                                                    </Input>\n                                                ) : (null)}\n\n                                                {/* <Menu model={accountEntry.Menu} popup={true} ref={el => this.menu = el} id={\"subAccountMenu\" + i} />\n                                                    <BTN icon=\"pi pi-ellipsis-v\" className=\"p-button-primary\"\n                                                        aria-controls={\"subAccountMenu\" + i} aria-haspopup={true}\n                                                        onMouseEnter={(event) => this.menu.toggle(event)}\n                                                    // onMouseLeave={(event) => this.menu.toggle(event)}\n                                                        /> */}\n                                            </div>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </table>\n                ) : (\n                        <small style={{ textAlign: \"center\" }}>No Record for this transaction.</small>\n                    )}\n            </div>\n        )\n    };\n\n    accountRecordActions = (type, rowData, isAccountChildEntry) => {\n        try {\n            console.log(\"actionFormatter > accountRecordActions > \", type, rowData, isAccountChildEntry);\n\n            if (type == 'Make Payment') {\n                this.getPolicyOutstandingTransaction(rowData);\n\n            } else if (type == 'Short Write Off') {\n                var isConfirm = window.confirm(\"Are you sure you wants to Short Write Off \" + rowData.Balance + \" amount?\");\n                if (isConfirm == true) {\n                    this.shortWriteoff(rowData.UniqueReferenceId, rowData.Balance);\n                }\n            } else if (type == 'Return Payment') {\n                this.setState({ returnPaymentData: rowData });\n                setTimeout(() => {\n                    this.showReturnPaymentPopup();\n                }, 100);\n            } else if (type == 'Transfer Fund') {\n                this.getAccountTransferFund(rowData);\n\n            } else if (type == 'Contra' || type == 'Cancel Payment' || type == 'Bounce Cheque' || type == 'Bank Transfer Failed' || type == 'Credit Card Declined') {\n                var isConfirm = window.confirm(\"Are you sure you wants to \" + type + \" #\" + rowData.UniqueReferenceId + \"?\");\n                if (isConfirm == true) {\n                    this.processAccountEntry(type, rowData);\n                }\n            }\n\n            // Dropdown action to default 'Select';\n            if (isAccountChildEntry) {\n                if (document.getElementsByName('childRccountRecord' + rowData.Id)) {\n                    document.getElementsByName('childRccountRecord' + rowData.Id)[0].value = '';\n                }\n            } else {\n                if (document.getElementsByName('accountRecord' + rowData.Id)) {\n                    document.getElementsByName('accountRecord' + rowData.Id)[0].value = '';\n                }\n            }\n\n        } catch (error) {\n            console.log(\"accountRecordActions > error \", error);\n        }\n    }\n\n    processAccountEntry = (type, rowData) => {\n        try {\n            if (rowData.UniqueReferenceId) {\n\n                let data = {\n                    UniqueReferenceId: rowData.UniqueReferenceId,\n                    AccountActionType: type,\n                    CurrentUser: CommonConfig.loggedInUserId(),\n                };\n                api.post('api/processAccountEntry', data).then(res => {\n                    console.log(\"processAccountEntry > res\", res);\n                    if (res.success) {\n                        console.log(\"processAccountEntry > response > data\", res.data);\n                        toast.success(type + \" successfully.\");\n                        setTimeout(function () {\n                            window.location.reload();\n                        }, 1000);\n                    } else {\n                        toast.error('Account record is not relevent for ' + type + ' action.');\n                    }\n                }).catch(err => {\n                    console.log(\"processAccountEntry error\", err);\n                    toast.error(err);\n                });\n            } else {\n                toast.error('Account record is not relevent for ' + type + ' action.');\n            }\n        } catch (error) {\n            console.log(\"processAccountEntry > error \", error);\n            toast.error(error);\n        }\n    }\n\n    cancelTransaction(data) {\n        console.log(\"cancelTransaction >> \", data);\n    }\n\n    hideTransferFundPopup() {\n        this.setState({\n            isTransferFundPopup: false,\n            paymentMode: '',\n            transferFundData: '',\n            paymentAmountRemains: 0,\n            PolicyOutstandingTransactions: ''\n        });\n    }\n\n    handleTransferFundChangeAmount(e, i) {\n\n        let value = e.target.value;\n        if (CommonConfig.isEmpty(value)) {\n            value = '';\n        }\n\n        let SystemPolicyOutstandingTransactions = this.state.SystemPolicyOutstandingTransactions;\n        let PolicyOutstandingTransactions = this.state.PolicyOutstandingTransactions;\n        let transaction = SystemPolicyOutstandingTransactions[i];\n\n        let AmountApplied = value;\n        let TotalDue = transaction.TotalDue;\n        let LevyTotalAmount = transaction.LevyTotalAmount;\n        let Outstanding = transaction.Outstanding;\n\n        PolicyOutstandingTransactions[i].AmountApplied = AmountApplied;\n\n        if (Outstanding >= AmountApplied) {\n            let UpdatedAdminFee = 0;\n            let OutstandingAfterPayment = 0;\n            var UpdatedLevy = 0;\n            var UpdatedNetPremium = 0;\n\n            OutstandingAfterPayment = Outstanding - AmountApplied;\n            UpdatedAdminFee = (transaction.AdminFee * AmountApplied) / TotalDue;\n            UpdatedLevy = (AmountApplied * LevyTotalAmount) / TotalDue;\n            UpdatedNetPremium = AmountApplied - UpdatedLevy - UpdatedAdminFee;\n            PolicyOutstandingTransactions[i].OutstandingAfterPayment = Number(OutstandingAfterPayment).toFixed(2);\n            PolicyOutstandingTransactions[i].UpdatedNetPremium = Number(UpdatedNetPremium).toFixed(2);\n            PolicyOutstandingTransactions[i].UpdatedLevy = Number(UpdatedLevy).toFixed(2);\n            PolicyOutstandingTransactions[i].UpdatedAdminFee = Number(UpdatedAdminFee).toFixed(2);\n\n            this.show(\"AmountApplied\" + i, false, \"AmountAppliedError\", \"\");\n        } else {\n            this.show(\"AmountApplied\" + i, true, \"AmountAppliedError\", \"Please enter proper amount\");\n        }\n\n        this.setState({ PolicyOutstandingTransactions: PolicyOutstandingTransactions });\n\n        let PaymentAmount = this.state.paymentAmount;\n        let TotalAmount = 0;\n        for (let i = 0; i < PolicyOutstandingTransactions.length; i++) {\n            var POAmountApplied = PolicyOutstandingTransactions[i].AmountApplied == '' ? 0 : PolicyOutstandingTransactions[i].AmountApplied;\n            TotalAmount = parseFloat(TotalAmount) + parseFloat(POAmountApplied);\n        }\n        var paymentAmountRemains = Number(PaymentAmount - TotalAmount).toFixed(2);\n        this.setState({ paymentAmountRemains: paymentAmountRemains });\n\n    }\n\n    getAccountTransferFund(rowData) {\n        try {\n            console.log(\"getAccountTransferFund > rowData\", rowData);\n            let data = {\n                PolicyId: this.state.policyId,\n                CurrentUser: CommonConfig.loggedInUserId(),\n            };\n            api.post('api/getAccountTransferFund', data).then(res => {\n                console.log(\"getAccountTransferFund > res\", res);\n                if (res.success) {\n                    if (res.data[0].length) {\n                        this.setState({\n                            isTransferFundPopup: true,\n                            PolicyOutstandingTransactions: res.data[0],\n                            SystemPolicyOutstandingTransactions: res.data[0],\n                            transactionType: 'Payment',\n                            description: 'Transfer a Fund',\n                            paymentMode: 'Fund Transfer',\n                            paymentAmount: Math.abs(rowData.Balance),\n                            existOutstanding: 0,\n                            isEdit: false,\n                            paymentModeError: false,\n                            newEntryDateError: false,\n                            descriptionError: false,\n                            paymentAmountError: false,\n                            transferFundData: rowData\n                        });\n\n                        setTimeout(() => {\n                            this.calculateTransferFundPremium();\n                        }, 100);\n                    } else {\n                        toast.warn(\"There are no Payment Due for any Policy of \" + this.state.policyHolder + \".\");\n                    }\n                } else {\n                    toast.error('There are no due for other Policy of ' + this.state.policyHolder + '.');\n                }\n            }).catch(err => {\n                console.log(\"getAccountTransferFund error\", err);\n                toast.error(err);\n            });\n        } catch (error) {\n            console.log(\"getAccountTransferFund > error \", error);\n            toast.error(error);\n        }\n    }\n\n    calculateTransferFundPremium() {\n        try {\n            let SystemPolicyOutstandingTransactions = this.state.SystemPolicyOutstandingTransactions;\n            let PolicyOutstandingTransactions = this.state.PolicyOutstandingTransactions;\n            let PaymentAmount = this.state.paymentAmount;\n            var ExistOutstanding = Number(this.state.existOutstanding);\n            var RemainingPaymentAmount = PaymentAmount;\n\n            for (let i = 0; i < SystemPolicyOutstandingTransactions.length; i++) {\n\n                let transaction = SystemPolicyOutstandingTransactions[i];\n\n                console.log(\"transaction\", transaction);\n\n                let AmountApplied = 0;\n                let TotalDue = Number(transaction.TotalDue);\n                let LevyTotalAmount = Number(transaction.LevyTotalAmount);\n\n                let Outstanding = Number(transaction.Outstanding);\n                let OutstandingAfterPayment = 0;\n                let UpdatedNetAmount = 0;\n                var UpdatedNetPremium = 0;\n                var UpdatedLevy = 0;\n                let UpdatedAdminFee = 0;\n\n                if (RemainingPaymentAmount > 0) {\n                    AmountApplied = (RemainingPaymentAmount <= Outstanding) ? Number(RemainingPaymentAmount) : Number(Outstanding);\n                    OutstandingAfterPayment = Outstanding - AmountApplied;\n                    UpdatedAdminFee = (transaction.AdminFee * AmountApplied) / TotalDue;\n                    UpdatedNetAmount = AmountApplied - UpdatedAdminFee;\n                    UpdatedLevy = (AmountApplied * LevyTotalAmount) / TotalDue;\n                    UpdatedNetPremium = AmountApplied - UpdatedLevy - UpdatedAdminFee;\n                    RemainingPaymentAmount = RemainingPaymentAmount - AmountApplied;\n                } else {\n                    OutstandingAfterPayment = Outstanding - AmountApplied;\n                }\n\n                PolicyOutstandingTransactions[i].AmountApplied = Number(AmountApplied).toFixed(2);\n                PolicyOutstandingTransactions[i].OutstandingAfterPayment = Number(OutstandingAfterPayment).toFixed(2);\n                PolicyOutstandingTransactions[i].UpdatedNetPremium = Number(UpdatedNetPremium).toFixed(2);\n                PolicyOutstandingTransactions[i].UpdatedLevy = Number(UpdatedLevy).toFixed(2);\n                PolicyOutstandingTransactions[i].UpdatedAdminFee = Number(UpdatedAdminFee).toFixed(2);\n            }\n            this.setState({ PolicyOutstandingTransactions: PolicyOutstandingTransactions, paymentAmountRemains: RemainingPaymentAmount });\n\n        } catch (error) {\n            console.log(\"calculatePremium >> error\", error);\n        }\n    }\n\n    validateTransferFundTotal() {\n        console.log(\"validateTransferFundTotal >\", this.state);\n        let PolicyOutstandingTransactions = this.state.PolicyOutstandingTransactions;\n        let PaymentAmount = this.state.paymentAmount;\n        let TotalAmount = 0;\n\n        for (let i = 0; i < PolicyOutstandingTransactions.length; i++) {\n            TotalAmount = parseFloat(TotalAmount) + parseFloat(PolicyOutstandingTransactions[i].AmountApplied);\n        }\n\n        if (TotalAmount > 0 && TotalAmount <= PaymentAmount) {\n            return false;\n        }\n        return true;\n    }\n\n    saveTransferFund() {\n        try {\n            if (this.state.newEntryDateError) {\n                toast.error('Please Enter Transaction Date');\n            } else if (this.state.descriptionError) {\n                toast.error('Please Enter Description');\n            } else if (this.state.paymentAmountError) {\n                toast.error('Please Enter Payment Amount');\n            } else if (this.state.paymentModeError) {\n                toast.error('Please Select Payment Mode');\n            } else if (this.state.paymentAmount == 0) {\n                toast.error('Payment amount can not be 0.');\n            } else if (this.validateTransferFundTotal()) {\n                toast.error('Total Amount Applied must be in between 1 to ' + this.state.paymentAmount + '.');\n            } else {\n                let data = {\n                    PolicyId: this.props.match.params.id,\n                    EntryType: '',\n                    TransferFundRecord: this.state.transferFundData,\n                    NewEntryDate: moment(this.state.newEntryDate).format(CommonConfig.dateFormat.dbDateTime),\n                    TransactionType: this.state.transactionType,\n                    ReferenceId: this.state.referenceId,\n                    Description: this.state.description,\n                    PaymentAmount: this.state.paymentAmount,\n                    PaymentMode: this.state.paymentMode,\n                    PaymentStatus: \"Success\",\n                    Note: this.state.note,\n                    CreatedBy: CommonConfig.loggedInUserId(),\n                    PaymentEntries: this.state.PolicyOutstandingTransactions,\n                    LanguageId: this.state.LanguageId\n                };\n                console.log(\"saveTransferFund > \", data);\n\n                this.saveTransferFundAPICall(data);\n            }\n        } catch (error) {\n            console.log(\"saveMakePaymentEntry error 1\", JSON.stringify(error));\n        }\n    }\n\n    saveTransferFundAPICall(data) {\n        console.log(\"saveTransferFund-request\", JSON.stringify(data));\n        try {\n            api.post('api/saveTransferFund', data).then(res => {\n                console.log(\"saveTransferFund-response\", res.data);\n                if (res.success && res.data.success) {\n                    this.hideTransferFundPopup();\n                    toast.success(res.data.message);\n                    setTimeout(function () {\n                        window.location.reload();\n                    }, 1000);\n                }\n            }).catch(err => {\n                toast.error(\"Not able to add entry in database.\");\n                console.log(\"saveTransferFund-err\", err);\n            });\n        } catch (error) {\n            toast.error(\"Not able to add entry in database.\");\n            console.log(\"saveTransferFund-err\", error);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"table-custom\">\n\n                <Row>\n\n                    <Col md=\"2\" style={{ alignSelf: 'center' }}>\n                        <span> Policy Number: {this.state.policyNumber}</span>\n                    </Col>\n\n                    <Col md=\"10\" className=\"p-0\">\n                        <BTN type=\"button\" icon=\"fa fa-bank\" className=\"p-button-primary\" tooltip=\"Bank Details\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.showBankDetailsPopup()}>\n                        </BTN>\n\n                        <div style={{ display: \"inline-block\", margin: \"10px 20px\" }}>\n                            <h5>\n                                Payment Due : <i className={this.props.CurrencySymbol} ></i>  {this.state.paymentDue ? this.state.paymentDue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : 0}\n\n                            </h5>\n                        </div>\n\n                        {(this.state.IsLapsePolicy) ? (\n                            <div style={{ alignSelf: 'center', display: \"inline-block\", margin: \"10px\" }}>\n                                <small>\n                                    Renewal Date: {moment(this.state.RenewalDate).format(CommonConfig.dateFormat.dateOnly)}\n                                    ({(this.state.DaysOverdue < 0) ? this.state.DaysOverdue + ' Day(s) Overdue' : (Math.abs(this.state.DaysOverdue) + ' Day(s) to Renewal')})\n                                </small>\n                                <Button style={{ margin: \"10px\" }} color=\"danger\" onClick={() => this.showLapsePolicyPopup()}>Lapse Policy</Button>\n                            </div>\n                        ) : (null)}\n\n                        {/* \n                            <Button style={{ margin: \"5px\" }} color=\"primary\" onClick={() => this.showJournalEntryPopup()}>Journal Entry</Button> \n                            <Col md=\"3\" style={{ alignSelf: \"center\" }}> \n                            {(this.state.isPolicyRenewal == 1) ? (null) : (\n                                <Button style={{ margin: \"5px\" }} color=\"primary\" onClick={() => this.showMakePaymentPopup()}>Make Payment</Button>\n                            )}\n                            <Button style={{ margin: \"5px\" }} color=\"primary\" onClick={() => this.showReturnPaymentPopup()}>Return Payment</Button> \n                            </Col>\n                        */}\n                    </Col>\n\n                </Row>\n\n                <BootstrapTable\n                    keyField='SequenceNumber'\n                    data={this.state.arr}\n                    columns={this.state.cols}\n                    expandRow={this.expandRow}\n                />\n\n                <Modal isOpen={this.state.toggleNewEntryModal} className={'modal-lg'} style={{ maxWidth: '70%' }}>\n                    <ModalHeader toggle={() => this.hideEntryPopup()}>\n                        {(this.state.transactionType == 'Payment' || this.state.transactionType == 'ReturnPayment') ? 'Payment Entry' : 'Journal Entry'}\n                    </ModalHeader>\n\n                    <Col style={{ margin: \"20px\" }}>\n\n                        <Row>\n                            <Col md=\"3\"> Policy </Col>\n                            <Col md=\"3\"> <label>{this.state.policyNumber}</label> </Col>\n                            <Col md=\"3\"> Policy Type </Col>\n                            <Col md=\"3\"> <label>{this.state.policyType}</label> </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"3\"> Policy Holder </Col>\n                            <Col md=\"4\"> <label>{this.state.policyHolder}</label> </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"3\">Transaction Date*</Col>\n                            <Col md=\"4\">\n                                <InputGroup>\n                                    <Input disabled={this.state.isEdit} type=\"date\" name=\"newEntryDate\" id=\"newEntryDate\" placeholder=\"transaction date\" onBlur={(e) => this.handleChange(e)}\n                                        onChange={(e) => this.handleChange(e)} value={this.state.newEntryDate}\n                                        min={moment().subtract(100, 'years').format('DD-MM-YYYY')}\n                                        max={moment().format('DD-MM-YYYY')}\n                                    />\n                                    <em id=\"newEntryDateError\" className=\"error invalid-feedback\" ></em>\n                                </InputGroup>\n\n                                {/* <DatePicker name=\"newEntryDate\" onChange={e => this.handleDateChange(e, 'newEntryDate')}\n                                value={this.state.newEntryDate} maxDate={moment().toDate()}\n                                /> */}\n                            </Col>\n                        </Row>\n\n                        <div>\n                            {/* {\n                                (this.state.transactionType === 'Debit' || this.state.transactionType === 'Credit') ?\n                                    (\n                                        <Row style={{ marginTop: 10 }}>\n                                            <Col md=\"3\"> Type* </Col>\n                                            <Col md=\"4\">\n                                                {\n                                                    (this.state.transactionType === 'Debit') ? (\n                                                        <Input type=\"select\" name=\"entryType\" id=\"entryType\" onChange={(e) => this.selectType(e.target.value, 'entryType')} value={this.state.entryType} disabled={this.state.isEdit}>\n                                                            <option value=''>Select Type</option>\n                                                            {this.state.journalDebitData.map((type, i) => {\n                                                                return (<option value={type.label} key={i}>{type.value}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                    ) : (\n                                                            <Input type=\"select\" name=\"entryType\" id=\"entryType\" onChange={(e) => this.selectType(e.target.value, 'entryType')} value={this.state.entryType} disabled={this.state.isEdit}>\n                                                                <option value=''>Select Type</option>\n                                                                {this.state.journalCreditData.map((type, i) => {\n                                                                    return (<option value={type.label} key={i}>{type.value}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                        )\n                                                }\n                                                <em id=\"entryTypeError\" className=\"error invalid-feedback\" ></em>\n                                            </Col>\n                                        </Row>\n                                    ) : (\n                                        null\n                                    )\n                            } */}\n\n                            <Row style={{ marginTop: 10 }}>\n                                <Col md=\"3\"> Description* </Col>\n                                <Col md=\"4\">\n                                    <Input name=\"description\" type=\"text\" id=\"description\" className=\"\"\n                                        onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.description} disabled={this.state.isEdit} />\n                                    <em id=\"descriptionError\" className=\"error invalid-feedback\" ></em>\n                                </Col>\n                            </Row>\n\n                            {\n                                (this.state.transactionType === 'Debit') ?\n                                    (\n                                        <div>\n                                            <Row style={{ marginTop: 10 }}>\n                                                <Col md=\"3\"> Charge Amount* </Col>\n                                                <Col md=\"4\">\n                                                    <Input name=\"chargeAmount\" type=\"text\" id=\"chargeAmount\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.chargeAmount} disabled={this.state.isEdit} />\n                                                    <em id=\"chargeAmountError\" className=\"error invalid-feedback\" ></em>\n                                                </Col>\n                                            </Row>\n\n                                        </div>\n                                    ) : (\n                                        null\n                                    )\n                            }\n\n                            {\n                                (this.state.transactionType === 'Credit') ?\n                                    (\n                                        <Row style={{ marginTop: 10 }}>\n                                            <Col md=\"3\"> Adj Amount* </Col>\n                                            <Col md=\"4\">\n                                                <Input name=\"paymentAmount\" type=\"number\" id=\"paymentAmount\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.paymentAmount} disabled={this.state.isEdit} />\n                                                <em id=\"paymentAmountError\" className=\"error invalid-feedback\" ></em>\n                                            </Col>\n                                        </Row>\n                                    ) : (\n                                        null\n                                    )\n                            }\n\n                            {\n                                (this.state.transactionType === 'ReturnPayment') ?\n                                    (\n                                        <div>\n                                            <Row style={{ marginTop: 10 }}>\n                                                <Col md=\"3\"> Payment Amount* </Col>\n                                                <Col md=\"4\">\n                                                    <Input name=\"paymentAmount\" type=\"number\" id=\"paymentAmount\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.paymentAmount} disabled={this.state.isEdit} />\n                                                </Col>\n                                            </Row>\n\n                                            <Row style={{ marginTop: 10 }}>\n                                                <Col md=\"3\"> Return Payment Mode* </Col>\n                                                <Col md=\"4\">\n                                                    <Input type=\"select\" name=\"paymentMode\" id=\"paymentMode\" disabled={this.state.isEdit}\n                                                        onChange={(e) => this.selectType(e.target.value, 'paymentMode')} value={this.state.paymentMode}\n                                                    >\n                                                        <option value=''>Select payment mode</option>\n                                                        {this.state.returnPaymentModearr.map((type, i) => {\n                                                            return (<option value={type.label} key={i}>{type.value}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"paymentModeError\" className=\"error invalid-feedback\" ></em>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    ) : (\n                                        null\n                                    )\n                            }\n\n                            <Row style={{ marginTop: 10 }}>\n                                <Col md=\"3\"> Note </Col>\n                                <Col md=\"4\">\n                                    <Input name=\"note\" type=\"textarea\" id=\"note\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.note} disabled={this.state.isEdit} />\n                                </Col>\n                            </Row>\n\n                        </div>\n                    </Col>\n\n                    {CommonConfig.isEmpty(this.state.PolicyAccountId) ? (\n                        <div style={{ margin: 20 }}>\n                            <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\n                                <Button style={{ marginLeft: \"10px\" }} color=\"success\" onClick={() => this.addUpdateAccountEntry()}>\n                                    < i style={{ marginRight: \"10px\" }} className=\"fa fa-check\" ></i >\n                                    Save\n                                </Button>\n                                <Button style={{ marginLeft: \"10px\" }} color=\"danger\" onClick={() => this.hideEntryPopup()}>\n                                    <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i>\n                                    Cancel\n                                </Button>\n                            </Row>\n                        </div>\n                    ) : (null)}\n                </Modal>\n\n                <Modal isOpen={this.state.isPaymentPopup} className={'modal-lg'} style={{ maxWidth: '70%' }}>\n                    <ModalHeader toggle={() => this.hideMakePaymentPopup()}>Payment Entry</ModalHeader>\n\n                    <div style={{ padding: 20 }}>\n\n                        <Row>\n                            <Col md=\"3\"> Policy </Col>\n                            <Col md=\"3\"> <label>{this.state.policyNumber}</label> </Col>\n                            <Col md=\"3\"> Policy Type </Col>\n                            <Col md=\"3\"> <label>{this.state.policyType}</label> </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"3\"> Policy Holder </Col>\n                            <Col md=\"4\"> <label>{this.state.policyHolder}</label> </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"3\">Transaction Date*</Col>\n                            <Col md=\"4\">\n                                <InputGroup>\n                                    <Input disabled={this.state.isEdit} type=\"date\" name=\"newEntryDate\" id=\"newEntryDate\" placeholder=\"transaction date\" onBlur={(e) => this.handleChange(e)}\n                                        onChange={(e) => this.handleChange(e)} value={this.state.newEntryDate}\n                                        min={moment().subtract(100, 'years').format('DD-MM-YYYY')}\n                                        max={moment().format('DD-MM-YYYY')}\n                                    />\n                                    <em id=\"newEntryDateError\" className=\"error invalid-feedback\" ></em>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n\n                        <div>\n\n                            <Row style={{ marginTop: 10 }}>\n                                <Col md=\"3\"> Description* </Col>\n                                <Col md=\"4\">\n                                    <Input disabled={this.state.isEdit} name=\"description\" type=\"text\" id=\"description\" className=\"\"\n                                        onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.description} />\n                                    <em id=\"descriptionError\" className=\"error invalid-feedback\" ></em>\n                                </Col>\n                            </Row>\n\n                            <div>\n                                <Row style={{ marginTop: 10 }}>\n                                    <Col md=\"3\"> Payment Amount* </Col>\n                                    <Col md=\"4\">\n                                        <Input disabled={this.state.isEdit} name=\"paymentAmount\" type=\"number\" id=\"paymentAmount\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.paymentAmount} />\n                                    </Col>\n                                </Row>\n\n                                <Row style={{ marginTop: 10 }}>\n                                    <Col md=\"3\"> Payment Mode* </Col>\n                                    <Col md=\"4\">\n                                        <Input disabled={this.state.isEdit} type=\"select\" name=\"paymentMode\" id=\"paymentMode\"\n                                            onChange={(e) => this.selectType(e.target.value, 'paymentMode')} value={this.state.paymentMode}\n                                        >\n                                            <option value=''>Select payment mode</option>\n                                            {this.state.paymentModearr.map((type, i) => {\n                                                return (<option value={type.label} key={i}>{type.value}</option>)\n                                            })\n                                            }\n                                        </Input>\n                                        <em id=\"paymentModeError\" className=\"error invalid-feedback\" ></em>\n                                    </Col>\n\n                                    {/* {(this.state.PolicyAccountId == '') ?\n                                        <Col md=\"5\">\n                                            <Row>\n                                                <Col md=\"8\"> Payment Due: </Col>\n                                                <Col md=\"4\">\n                                                    <i className={this.props.CurrencySymbol} ></i> {this.state.paymentDue}\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md=\"8\"> Balance after payment: </Col>\n                                                <Col md=\"4\">\n                                                    <i className={this.props.CurrencySymbol} ></i> {this.state.calculateBalanceAFTPay.toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        : (null)} */}\n                                </Row>\n                            </div>\n\n                            {(this.state.OutstandingTransactions.length) ? (\n                                <div>\n\n                                    <table border='1' style={{ width: '100%', marginTop: 15, marginBottom: 15 }}>\n                                        <thead>\n                                            <th style={{ width: '20%' }}>Transaction Type</th>\n                                            <th style={{ width: '10%' }}>Reference Id</th>\n                                            {\n                                                (this.state.isEdit) ? (null) : <th style={{ width: '10%' }}>Outstanding</th>\n                                            }\n                                            <th style={{ width: '10%' }}>Amount Applied</th>\n                                            {\n                                                (this.state.isEdit) ? (null) : <th style={{ width: '10%' }}>Outstanding After Payment</th>\n                                            }\n                                            <th style={{ width: '10%' }}>Net Premium</th>\n                                            <th style={{ width: '10%' }}>Levy</th>\n                                            <th style={{ width: '10%' }}>Admin</th>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.OutstandingTransactions.map((transaction, i) => {\n                                                return (\n                                                    <tr>\n                                                        <td>{transaction.Narration}</td>\n                                                        <td>{transaction.UniqueReferenceId}</td>\n                                                        {\n                                                            (this.state.isEdit) ? (null) : <td>{transaction.Outstanding}</td>\n                                                        }\n                                                        <td>\n                                                            <Input disabled={this.state.isEdit} name=\"AmountApplied\" id=\"AmountApplied\" type=\"number\" value={transaction.AmountApplied} onChange={e => this.handleChangeAmount(e, i)} onBlur={e => this.handleChangeAmount(e, i)} />\n                                                        </td>\n                                                        {\n                                                            (this.state.isEdit) ? (null) : <td>{transaction.OutstandingAfterPayment}</td>\n                                                        }\n                                                        <td>{transaction.UpdatedNetPremium}</td>\n                                                        <td>{transaction.UpdatedLevy}</td>\n                                                        <td>{transaction.UpdatedAdminFee}</td>\n                                                    </tr>\n                                                )\n                                            })}\n                                        </tbody>\n                                    </table>\n\n                                    <em id=\"AmountAppliedError\" style={{ color: 'red', }} className=\"error\" ></em>\n                                </div>\n                            ) : (null)}\n\n                            {(this.state.paymentMode == 'Debit/Credit Card') ? (\n                                <div>\n\n                                    <Row style={{ marginTop: 10 }}>\n                                        <Col md=\"3\"> Card Type (*) </Col>\n                                        <Col md=\"4\">\n                                            <Input name=\"CardType\" type=\"select\" id=\"CardType\" onChange={(e) => this.selectType(e.target.value, 'CardType')} value={this.state.CardType} >\n                                                <option value=\"VISA\">Visa</option>\n                                                <option value=\"MC\">Master Card</option>\n                                                <option value=\"laser\">Laser</option>\n                                            </Input>\n\n                                            <em id=\"CardTypeError\" className=\"error invalid-feedback\" ></em>\n                                        </Col>\n                                    </Row>\n\n                                    <Row style={{ marginTop: 10 }}>\n                                        <Col md=\"3\"> Cardholder Name (*) </Col>\n                                        <Col md=\"4\">\n                                            <Input name=\"CardholderName\" type=\"text\" id=\"CardholderName\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.CardholderName} />\n                                            <em id=\"CardholderNameError\" className=\"error invalid-feedback\" ></em>\n                                        </Col>\n                                    </Row>\n\n                                    <Row style={{ marginTop: 10 }}>\n                                        <Col md=\"3\"> Card Number (*) </Col>\n                                        <Col md=\"4\">\n                                            <Input name=\"CardNumber\" type=\"text\" id=\"CardNumber\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.CardNumber} />\n                                            <em id=\"CardNumberError\" className=\"error invalid-feedback\" ></em>\n                                        </Col>\n                                    </Row>\n\n                                    <Row style={{ marginTop: 10 }}>\n                                        <Col md=\"3\"> Expiry (*) </Col>\n                                        <Col md=\"2\">\n                                            <Input name=\"ExpiryMonth\" type=\"select\" id=\"ExpiryMonth\" onChange={(e) => this.selectType(e.target.value, 'ExpiryMonth')} value={this.state.ExpiryMonth} >\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                                <option value=\"5\">5</option>\n                                                <option value=\"6\">6</option>\n                                                <option value=\"7\">7</option>\n                                                <option value=\"8\">8</option>\n                                                <option value=\"9\">9</option>\n                                                <option value=\"10\">10</option>\n                                                <option value=\"11\">11</option>\n                                                <option value=\"12\">12</option>\n                                            </Input>\n                                            <em id=\"ExpiryMonthError\" className=\"error invalid-feedback\" ></em>\n                                        </Col>\n                                        <Col md=\"2\">\n                                            <Input name=\"ExpiryYear\" type=\"select\" id=\"ExpiryYear\" onChange={(e) => this.selectType(e.target.value, 'ExpiryYear')} value={this.state.ExpiryYear} >\n                                                <option value=\"2020\">2020</option>\n                                                <option value=\"2021\">2021</option>\n                                                <option value=\"2022\">2022</option>\n                                                <option value=\"2023\">2023</option>\n                                                <option value=\"2024\">2024</option>\n                                                <option value=\"2025\">2025</option>\n                                                <option value=\"2026\">2026</option>\n                                                <option value=\"2027\">2027</option>\n                                                <option value=\"2028\">2028</option>\n                                                <option value=\"2029\">2029</option>\n                                                <option value=\"2030\">2030</option>\n                                            </Input>\n                                            <em id=\"ExpiryYearError\" className=\"error invalid-feedback\" ></em>\n                                        </Col>\n                                    </Row>\n\n                                    <Row style={{ marginTop: 10 }}>\n                                        <Col md=\"3\"> CVV (*) </Col>\n                                        <Col md=\"4\">\n                                            <Input name=\"CVV\" type=\"password\" id=\"CVV\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.CVV} />\n                                            <em id=\"CVVError\" className=\"error invalid-feedback\" ></em>\n                                        </Col>\n                                    </Row>\n\n                                </div>\n                            ) : (null)}\n\n                            <Row style={{ marginTop: 10 }}>\n                                <Col md=\"3\"> Note </Col>\n                                <Col md=\"4\">\n                                    <Input disabled={this.state.isEdit} name=\"note\" type=\"textarea\" id=\"note\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.note} />\n                                </Col>\n                            </Row>\n\n                        </div>\n\n                    </div>\n\n                    {CommonConfig.isEmpty(this.state.PolicyAccountId) ? (\n                        <div style={{ margin: 20 }}>\n                            <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\n                                <Button style={{ marginLeft: \"10px\" }} color=\"success\" onClick={() => this.saveMakePaymentEntry()}>\n                                    <i style={{ marginRight: \"10px\" }} className=\"fa fa-check\" ></i > Save\n                                </Button>\n                                <Button style={{ marginLeft: \"10px\" }} color=\"danger\" onClick={() => this.hideMakePaymentPopup()}>\n                                    <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i> Cancel\n                                </Button>\n                            </Row>\n                        </div>\n                    ) : (null)}\n\n                </Modal>\n\n                <Modal isOpen={this.state.isTransferFundPopup} className={'modal-lg'} style={{ maxWidth: '70%' }}>\n                    <ModalHeader toggle={() => this.hideTransferFundPopup()}>Transfer a Fund</ModalHeader>\n\n                    <div style={{ padding: 20 }}>\n\n                        <Row>\n                            <Col md=\"3\"> Policy </Col>\n                            <Col md=\"3\"> <label>{this.state.policyNumber}</label> </Col>\n                            <Col md=\"3\"> Policy Type </Col>\n                            <Col md=\"3\"> <label>{this.state.policyType}</label> </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"3\"> Policy Holder </Col>\n                            <Col md=\"4\"> <label>{this.state.policyHolder}</label> </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            <Col md=\"3\">Transaction Date*</Col>\n                            <Col md=\"4\">\n                                <InputGroup>\n                                    <Input disabled={this.state.isEdit} type=\"date\" name=\"newEntryDate\" id=\"newEntryDate\" placeholder=\"transaction date\" onBlur={(e) => this.handleChange(e)}\n                                        onChange={(e) => this.handleChange(e)} value={this.state.newEntryDate}\n                                        min={moment().subtract(100, 'years').format('DD-MM-YYYY')}\n                                        max={moment().format('DD-MM-YYYY')}\n                                    />\n                                    <em id=\"newEntryDateError\" className=\"error invalid-feedback\" ></em>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n\n                        <div>\n\n                            <Row style={{ marginTop: 10 }}>\n                                <Col md=\"3\"> Description* </Col>\n                                <Col md=\"4\">\n                                    <Input disabled={this.state.isEdit} name=\"description\" type=\"text\" id=\"description\" className=\"\"\n                                        onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.description} />\n                                    <em id=\"descriptionError\" className=\"error invalid-feedback\" ></em>\n                                </Col>\n                            </Row>\n\n                            <div>\n                                <Row style={{ marginTop: 10 }}>\n                                    <Col md=\"3\"> Payment Amount* </Col>\n                                    <Col md=\"4\">\n                                        <Input disabled={true} name=\"paymentAmount\" type=\"number\" id=\"paymentAmount\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.paymentAmount} />\n                                    </Col>\n                                    <Col md=\"3\">\n                                        {this.state.paymentAmountRemains < 0 ?\n                                            (<span style={{ color: 'red' }}> Balance: {this.state.paymentAmountRemains} </span>)\n                                            :\n                                            (<span> Balance: {this.state.paymentAmountRemains} </span>)\n                                        }\n                                    </Col>\n                                </Row>\n\n                                <Row style={{ marginTop: 10 }}>\n                                    <Col md=\"3\"> Payment Mode* </Col>\n                                    <Col md=\"4\">\n                                        <Input disabled={this.state.isEdit} type=\"select\" name=\"paymentMode\" id=\"paymentMode\"\n                                            onChange={(e) => this.selectType(e.target.value, 'paymentMode')} value={this.state.paymentMode}\n                                        >\n                                            <option value=''>Select payment mode</option>\n                                            {this.state.paymentModearr.map((type, i) => {\n                                                return (\n                                                    (type.label == 'Fund Transfer') ?\n                                                        <option value={type.label} key={i}>{type.value}</option>\n                                                        : (null)\n                                                )\n                                            })\n                                            }\n                                        </Input>\n                                        <em id=\"paymentModeError\" className=\"error invalid-feedback\" ></em>\n                                    </Col>\n                                </Row>\n                            </div>\n\n                            {(this.state.PolicyOutstandingTransactions.length) ? (\n                                <div>\n                                    <table border='1' style={{ width: '100%', marginTop: 15, marginBottom: 15 }}>\n                                        <thead>\n                                            <th style={{ width: '20%' }}>Policy Number</th>\n                                            <th style={{ width: '20%' }}>Transaction Type</th>\n                                            <th style={{ width: '10%' }}>Reference Id</th>\n                                            <th style={{ width: '10%' }}>Outstanding</th>\n                                            <th style={{ width: '10%' }}>Amount Applied</th>\n                                            <th style={{ width: '10%' }}>Outstanding After Payment</th>\n                                            <th style={{ width: '10%' }}>Net Premium</th>\n                                            <th style={{ width: '10%' }}>Levy</th>\n                                            <th style={{ width: '10%' }}>Admin</th>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.PolicyOutstandingTransactions.map((transaction, i) => {\n                                                return (\n                                                    <tr>\n                                                        <td>{transaction.PolicyNumber}</td>\n                                                        <td>{transaction.Narration}</td>\n                                                        <td>{transaction.UniqueReferenceId}</td>\n                                                        <td>{transaction.Outstanding}</td>\n                                                        <td>\n                                                            <Input disabled={this.state.isEdit} name=\"AmountApplied\" id={\"AmountApplied\" + i} type=\"number\" value={transaction.AmountApplied} onChange={e => this.handleTransferFundChangeAmount(e, i)} onBlur={e => this.handleTransferFundChangeAmount(e, i)} />\n                                                        </td>\n                                                        <td>{transaction.OutstandingAfterPayment}</td>\n                                                        <td>{transaction.UpdatedNetPremium}</td>\n                                                        <td>{transaction.UpdatedLevy}</td>\n                                                        <td>{transaction.UpdatedAdminFee}</td>\n                                                    </tr>\n                                                )\n                                            })}\n                                        </tbody>\n                                    </table>\n\n                                    <em id=\"AmountAppliedError\" style={{ color: 'red', }} className=\"error\" ></em>\n                                </div>\n                            ) : (null)}\n\n                            <Row style={{ marginTop: 10 }}>\n                                <Col md=\"3\"> Note </Col>\n                                <Col md=\"4\">\n                                    <Input disabled={this.state.isEdit} name=\"note\" type=\"textarea\" id=\"note\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.note} />\n                                </Col>\n                            </Row>\n\n                        </div>\n\n                    </div>\n\n                    <div style={{ margin: 20 }}>\n                        <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"success\" onClick={() => this.saveTransferFund()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-check\" ></i > Save\n                                </Button>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"danger\" onClick={() => this.hideTransferFundPopup()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i> Cancel\n                                </Button>\n                        </Row>\n                    </div>\n\n                </Modal>\n\n                <Modal isOpen={this.state.toggleBnkDetailsModal} className={'modal-lg'}>\n                    <ModalHeader toggle={() => this.hideBankDetailsPopup()}> Enter Bank Details </ModalHeader>\n                    <Col style={{ margin: \"20px\" }}>\n                        <Row>\n                            <Col md=\"12\">\n                                {/* <Card> <CardBody style={{ backgroundColor: \"#f2f2f2\" }}> */}\n                                <div className=\"input-box\">\n                                    <Row>\n                                        <Col md=\"3\">\n                                            <label>Account Name*</label>\n                                        </Col>\n                                        <Col md=\"6\">\n                                            <Input type=\"text\" name=\"accountName\" id=\"accountName\" onChange={(e) => this.handleChange(e)} value={this.state.accountName} />\n                                            <em id=\"accountNameError\" className=\"error invalid-feedback\"></em>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <div className=\"input-box\">\n                                    <Row>\n                                        <Col md=\"3\">\n                                            <label>Bank Name*</label>\n                                        </Col>\n                                        <Col md=\"6\">\n                                            <Input type=\"text\" name=\"bankName\" id=\"bankName\" onChange={(e) => this.handleChange(e)} value={this.state.bankName} />\n                                            <em id=\"bankNameError\" className=\"error invalid-feedback\"></em>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <div className=\"input-box\">\n                                    <Row>\n                                        <Col md=\"3\">\n                                            <label>Country*</label>\n                                        </Col>\n                                        <Col md=\"3\">\n                                            <Input type=\"select\" name=\"bankCountry\" id=\"bankCountry\" onChange={(e) => this.selectType(e.target.value, 'bankCountry')} value={this.state.bankCountry}>\n                                                <option value=''>Select country</option>\n                                                {this.state.countryList.map((type, i) => {\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                            <em id=\"bankCountryError\" className=\"error invalid-feedback\"></em>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <div className=\"input-box\">\n                                    <Row>\n                                        <Col md=\"3\">\n                                            <label>IBAN*</label>\n                                        </Col>\n                                        <Col md=\"6\">\n                                            <Input type=\"text\" name=\"IBAN\" id=\"IBAN\" onChange={(e) => this.handleChange(e)} value={this.state.IBAN} />\n                                            <em id=\"IBANError\" className=\"error invalid-feedback\"></em>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <div className=\"input-box\">\n                                    <Row>\n                                        <Col md=\"3\">\n                                            <label>BIC</label>\n                                        </Col>\n                                        <Col md=\"3\">\n                                            <Input type=\"text\" name=\"BIC\" id=\"BIC\" onChange={(e) => this.handleChange(e)} value={this.state.BIC} />\n                                            <em id=\"BICError\" className=\"error invalid-feedback\"></em>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                {/* </CardBody> </Card> */}\n                            </Col>\n                        </Row>\n\n                        <div style={{ margin: 20 }}>\n                            <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\n\n                                {(CommonConfig.isEmpty(this.state.EntityBankDetailId)) ? (null) : (\n                                    <Button style={{ marginLeft: \"10px\" }} color=\"danger\" onClick={() => this.clearBankDetails()}>\n                                        <i style={{ marginRight: \"10px\" }} className=\"fa fa-trash\"></i> Clear Bank Details\n                                    </Button>\n                                )}\n                                <Button style={{ marginLeft: \"10px\" }} color=\"success\" onClick={() => this.addUpdateBankDetails()}>\n                                    <i style={{ marginRight: \"10px\" }} className=\"fa fa-check\" ></i> Save\n                                </Button>\n                                <Button style={{ marginLeft: \"10px\" }} color=\"primary\" onClick={() => this.hideBankDetailsPopup()}>\n                                    <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i> Cancel\n                                </Button>\n                            </Row>\n                        </div>\n                    </Col>\n                </Modal>\n\n                <Modal isOpen={this.state.toggleModalDel} className={'modal-lg'}>\n                    <ModalHeader toggle={() => this.hidedeletePopup()}>\n                        Delete Payment\n          </ModalHeader>\n                    <Col style={{ margin: \"20px\" }}>\n                        <Row>\n                            <Col md=\"12\">\n                                Are you sure want to delete this payment of {<i className={this.props.CurrencySymbol} ></i>} {(this.state.delPolicyId.TransactionType === 'Credit' || this.state.delPolicyId.TransactionType === 'Payment' || this.state.delPolicyId.TransactionType === 'ReturnPayment') ? this.state.delPolicyId.PaymentAmount : this.state.delPolicyId.AmountCharge} {this.state.delPolicyId.PaymentModeName} on {this.state.delPolicyId.TransactionDate}\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    <div style={{ margin: 20 }}>\n                        <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"danger\" onClick={() => this.deleteAccount()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-trash\"></i>\n                Delete\n              </Button>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"primary\" onClick={() => this.hidedeletePopup()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i>\n                Cancel\n              </Button>\n                        </Row>\n                    </div>\n                </Modal>\n\n                <Modal isOpen={this.state.toggleModal} className={'modal-lg'} toggle={() => this.hidePopup()}>\n                    <ModalHeader toggle={() => this.hidePopup()}>\n                        Regenerate Receipt of Payment\n          </ModalHeader>\n                    <Col style={{ margin: \"20px\" }}>\n                        <Row>\n                            <Col md=\"12\">\n                                Are you sure want to re-generate this receipt of payment ?\n              </Col>\n                        </Row>\n                    </Col>\n\n                    <div style={{ margin: 20 }}>\n                        <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"success\" onClick={() => this.againGenerateReceipt()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-check\"></i>\n                Yes\n              </Button>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"primary\" onClick={() => this.hidePopup()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i>\n                No\n              </Button>\n                        </Row>\n                    </div>\n                </Modal>\n\n                <Modal isOpen={this.state.IsLapsePolicyPopup} className={'modal-lg'} toggle={() => this.hideLapsePolicyPopup()}>\n                    <ModalHeader toggle={() => this.hideLapsePolicyPopup()}> Are you sure you want to Lapse this policy ? </ModalHeader>\n\n                    <Col md='12' style={{ marginTop: 15 }}>\n\n                        <Row style={{ marginTop: 15 }}>\n                            <Col md=\"2\">Policy Number</Col>\n                            <Col md=\"2\">{this.state.policyNumber}</Col>\n                        </Row>\n\n                        {/* <Row style={{ marginTop: 15 }}>\n              <Col md=\"2\">Payment Due</Col>\n              <Col md=\"2\">{this.state.paymentDue}</Col>\n            </Row> */}\n\n                        <Row style={{ marginTop: 15 }}>\n                            <Col md=\"2\"> Note </Col>\n                            <Col md=\"6\">\n                                <Input type=\"textarea\" name=\"lapsePolicyNote\" id=\"lapsePolicyNote\" rows='3' onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.lapsePolicyNote} />\n                            </Col>\n                        </Row>\n\n                    </Col>\n\n                    <div style={{ margin: 20 }}>\n                        <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"success\" onClick={() => this.lapsePolicy()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-check\"></i>Yes\n              </Button>\n                            <Button style={{ marginLeft: \"10px\" }} color=\"primary\" onClick={() => this.hideLapsePolicyPopup()}>\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i>Cancel\n              </Button>\n                        </Row>\n                    </div>\n                </Modal>\n\n            </div >\n        )\n    }\n}\n\nexport default withTranslation()(Account);\n"]},"metadata":{},"sourceType":"module"}