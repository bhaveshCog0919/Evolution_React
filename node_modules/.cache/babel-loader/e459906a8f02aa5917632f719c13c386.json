{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Renewal_Follow_up_Report.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Modal, ModalBody, ModalHeader, Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col, UncontrolledTooltip } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\nconst URL = 'http://localhost:4111/#/';\n\nclass Renewal_Follow_up_Report extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'monthtillDate') {\n        this.setState({\n          monthtillDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'fromDate') {\n        this.setState({\n          fromDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'toDate') {\n        this.setState({\n          toDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'Year') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            Year: e.target.value,\n            YearError: true\n          });\n          this.show('Year', true, 'YearError', 'Please Enter Year');\n        } else {\n          this.setState({\n            Year: e.target.value,\n            YearError: false\n          });\n          this.show('Year', false, 'YearError', '');\n        }\n      }\n    };\n\n    let columns = [\n    /* { field: \"Action\", header: \"Action\", sortable: false, id: 0, style: { 'width': '45px' } },*/\n    {\n      field: \"Stage\",\n      header: \"Stage\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '105px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      body: this.PolicyTemplate.bind(this),\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      body: this.ClientTemplate.bind(this),\n      field: \"ClientName\",\n      header: \"Client Name\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"Currency\",\n      header: \"Currency\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '65px'\n      }\n    }, {\n      body: this.ColumnclassName.bind(this),\n      field: \"TotalDue\",\n      header: \"Total Due\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '75px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"PolicyType\",\n      header: \"Policy Type\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"VesselClass\",\n      header: \"Vessel Class\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'textAlign': 'right',\n        'width': '100px'\n      }\n    }, {\n      field: \"VesselType\",\n      header: \"Vessel Type\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'textAlign': 'right',\n        'width': '100px'\n      }\n    }, {\n      field: \"SumInsured\",\n      header: \"Sum Insured\",\n      sortable: true,\n      filter: true,\n      id: 15,\n      style: {\n        'width': '75px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Source\",\n      header: \"Source\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 11,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"SourceName\",\n      header: \"Source Name\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 12,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      body: this.ContactNumberTemplate.bind(this),\n      field: \"ContactNumber\",\n      header: \"Contact Number\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '155px'\n      }\n    }, {\n      body: this.formatEmail.bind(this),\n      field: \"Email\",\n      header: \"Email\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '155px'\n      }\n    }, {\n      field: \"Country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      id: 16,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"DaysOutstanding\",\n      header: \"Days Outstanding\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"Language\",\n      header: \"Language\",\n      sortable: true,\n      filter: true,\n      id: 18,\n      style: {\n        'width': '75px'\n      }\n    }, {\n      field: \"VesselRegistrationLocation\",\n      header: \"Vessel Registration Location\",\n      sortable: true,\n      filter: true,\n      id: 17,\n      style: {\n        'width': '75px'\n      }\n    }\n    /* { field: \"LastRenewalConfirmed\", header: \"Last Renewal Confirmed\", sortable: true, filter: true, id: 10, style: { 'width': '75px' } },\r\n    { field: \"DifferenceTotalDue\", header: \"Difference Total Due\", sortable: true, filter: true, id: 10, style: { 'width': '75px' } },\r\n    { field: \"ChangeonPreviousyear\", header: \"Change on Previous year\", sortable: true, filter: true, id: 11, style: { 'width': '75px' } },\r\n    { field: \"Previouspaymenttype\", header: \"Previous payment type\", sortable: true, filter: true, id: 12, style: { 'width': '65px' } },*/\n    ];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      selected: {},\n      selectedPolicy: 0,\n      selectedAgent: '',\n      selectAll: 0,\n      DebtorType: 'SubAgent',\n      Period: 0,\n      agentinfo: '',\n      agentinfoError: false,\n      monthtillDate: moment().format(\"YYYY-MM\"),\n      fromDate: moment().format(\"YYYY-MM-DD\"),\n      toDate: moment().format(\"YYYY-MM-DD\"),\n      MONTHList: [],\n      MONTH: ('0' + (new Date().getMonth() + 1).toString()).slice(-2),\n      MONTHError: false,\n      Year: '',\n      YearError: false,\n      DaysOutstanding: 'All',\n      policyTypeArray: [],\n      policyType: 'Vessel',\n      isSMSModalVisible: false,\n      rowData: {},\n      SMSTemplate: '',\n      SMSTemplateError: false,\n      SMSTypeList: [],\n      EmailTemplate: '',\n      EmailTemplateError: false,\n      EmailTypeList: []\n    };\n    console.log('month', '0' + (new Date().getMonth() + 1).toString());\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.ClientTemplate = this.ClientTemplate.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.Renewal_Follow_up_Report();\n    this.getDropDownValues('POLICYTYPE', 'policyTypeArray');\n    this.getOrganazationData(this.state.DebtorType);\n    this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\n    this.getSMSTypeDropDown();\n  }\n\n  getSMSTypeDropDown() {\n    try {\n      var formattedSMS = [];\n      api.post('api/getSMSTypeDropDown').then(res => {\n        console.log('res', res.success);\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedSMS.push({\n            label: res.data[i].TamplateName,\n            value: res.data[i].MessageTemplateId\n          });\n        }\n\n        this.setState({\n          SMSTypeList: formattedSMS\n        });\n      }).catch(err => {\n        console.log('err', err);\n      });\n    } catch (error) {\n      console.log(\"error in getSMSTypeDropDown\", error);\n    }\n  }\n\n  getDropDownValues(stringMapType, setStateName) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  ClientTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.viewContactDetails(rowData),\n      style: {\n        marginRight: '.5em',\n        cursor: 'pointer',\n        borderBottomWidth: \"1px\",\n        color: \"#007ad9\"\n      },\n      tooltip: \"View Details\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, rowData.ClientName));\n  }\n\n  PolicyTemplate(rowData, column) {\n    console.log('rowData', rowData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.viewPolicy(rowData),\n      style: {\n        marginRight: '.5em',\n        cursor: 'pointer',\n        borderBottomWidth: \"1px\",\n        color: \"#007ad9\"\n      },\n      tooltip: \"View Details\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, rowData.PolicyNumber));\n  }\n\n  ClientDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, rowData.ClientName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, rowData.ClientCode));\n  }\n\n  AgentDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, rowData.AgentName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, rowData.AgentCode));\n  }\n\n  ContactNumberTemplate(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, rowData.ContactNumber), /*#__PURE__*/React.createElement(BTN, {\n      onClick: () => this.openSMSTempalteModal(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, \"SMS\"));\n  }\n\n  openSMSTempalteModal(rowData) {\n    this.setState({\n      isSMSModalVisible: true,\n      rowData: rowData\n    });\n  }\n\n  sendSMS(rowData) {\n    try {\n      if (this.state.SMSTemplate) {\n        let data = {\n          TemplateId: this.state.SMSTemplate,\n          PolicyId: rowData.PolicyId,\n          MessageHeaderId: ''\n        };\n        api.post('api/sendSMSOnDemand', data).then(res => {\n          // console.log('res',res);\n          if (res.success == 'true' || res.success == true) {\n            toast.success('SMS Send Successfull');\n          } else if (res.success == 'false' || res.success == false) {\n            toast.error(res.message);\n          }\n        }).catch(err => {\n          // console.log('err',err);\n          toast.error(\"SMS Sending Failed\");\n        });\n      } else {\n        this.show('SMSTemplate', true, \"SMSTemplateError\", \"Please select SMS Template\");\n      } // console.log('rowData',rowData)\n\n    } catch (error) {\n      console.log(\"error in SendSMS\", error);\n    }\n  }\n\n  formatEmail(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, rowData.Email));\n  } // sendEmail(rowData){\n  //     try{\n  //         console.log('rowData',rowData)\n  //         let data ={\n  //             PolicyId :rowData.PolicyId,\n  //             MessageHeaderId: '',\n  //             to: 'ajay.cognisun@gmail.com',  //rowData.Email,\n  //             cc: '',\n  //             bcc: '',\n  //             subject:'Testing by Ajay',\n  //             EmailSenderId:'',\n  //             html:'<p>Hello For Testing</p>',\n  //         }\n  //         api.post('api/sendEmailOnDemand', data).then(res =>{\n  //             console.log('res',res);\n  //         }).catch(err=>{\n  //             console.log('err',err);\n  //         });\n  //     } catch (error) {\n  //         console.log(\"error in EmailSMS\",error)\n  //     }\n  // }\n\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selqected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.arr.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  viewContactDetails(rowData) {\n    window.open(window.location.origin + '/#' + 'viewContactDetails/' + rowData.EntityId + '/' + rowData.EntityType);\n  }\n\n  viewPolicy(rowData) {\n    window.open(window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1', '_blank');\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  SourceName(rowData) {\n    return rowData.Source === \"Direct\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, rowData.Source)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, rowData.Source), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, rowData.SourceName));\n  }\n\n  DateDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, rowData.RenewalDate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, rowData.InceptionDate));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  Renewal_Follow_up_Report() {\n    var ShowMonth = this.state.MONTH;\n    console.log(ShowMonth);\n    if (ShowMonth === \"\") this.state.MONTH = new Date().getMonth() + 2;else if (ShowMonth === \"All\") this.state.MONTH = 1;\n    if (this.state.Year === \"\") this.state.Year = new Date().getFullYear();\n    var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\n    if (ShowMonth === '' || ShowMonth === 'All') var endDate = moment(startDate).endOf('year').format('YYYY-MM-DD');else var endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n    var data = {\n      policyType: this.state.policyType,\n      fromDate: startDate,\n      toDate: endDate,\n      daysOutstanding: this.state.DaysOutstanding\n    };\n    console.log(\"lok\", data);\n    this.state.MONTH = ShowMonth;\n    api.post('api/Renewal_Follow_up_Report', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              id: i,\n              Stage: tempData.Stage,\n              RenewalDate: moment(tempData.RenewalDate).format('DD-MM-YYYY'),\n              DaysOutstanding: tempData.DaysOutstanding,\n              PolicyNumber: tempData.PolicyNumber,\n              PolicyId: tempData.PolicyId,\n              EntityId: tempData.EntityId,\n              EntityType: tempData.EntityType,\n              ClientName: tempData.ClientName,\n              PolicyType: tempData.PolicyType,\n              VesselClass: tempData.VesselClass,\n              VesselType: tempData.VesselType,\n              Country: tempData.Country,\n              VesselRegistrationLocation: tempData.VesselRegistrationLocation,\n              SumInsured: tempData.SumInsured,\n              TotalDue: tempData.TotalDue,\n\n              /*LastRenewalConfirmed: tempData.LastRenewalConfirmed,\r\n              DifferenceTotalDue: tempData.DifferenceTotalDue,\r\n              ChangeonPreviousyear: tempData.ChangeOnPreviousYear,\r\n              Previouspaymenttype: tempData.PreviousPaymentType,*/\n              Language: tempData.DocLang,\n              Currency: tempData.Currency,\n              Source: tempData.Source,\n              SourceName: tempData.SourceName,\n              SourceData: tempData.Source + \"\" + tempData.SourceName,\n              ContactNumber: tempData.ClientPhone,\n              Email: tempData.ClientEmail\n            });\n          }\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.Renewal_Follow_up_Report();\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'policyType') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyType: ''\n        });\n      } else {\n        this.setState({\n          policyType: value.value\n        });\n      }\n    }\n\n    if (type === 'DaysOutstanding') {\n      this.setState({\n        DaysOutstanding: value\n      });\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        agentinfoError: false\n      });\n      this.show('agentinfo', false, 'agentinfoError', '');\n    }\n\n    if (type === 'Period') {\n      this.setState({\n        Period: value\n      });\n    }\n\n    if (type === 'MONTH') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          MONTHError: true,\n          MONTH: value\n        });\n        this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\n      } else {\n        this.setState({\n          MONTHError: false,\n          MONTH: value\n        });\n        this.show('MONTH', false, \"MONTHError\", \"\");\n      }\n    }\n\n    if (type === 'SMSTemplate') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          SMSTemplateError: true,\n          SMSTemplate: value\n        });\n        this.show('SMSTemplate', true, \"SMSTemplateError\", \"Please select SMS Template\");\n      } else {\n        this.setState({\n          SMSTemplateError: false,\n          SMSTemplate: value\n        });\n        this.show('SMSTemplate', false, \"SMSTemplateError\", \"\");\n      }\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  ColumnclassName(rowData, Column) {\n    return rowData.DaysOutstanding <= 7 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#008c9a',\n        color: '#fff'\n      },\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 8\n      }\n    }, rowData.TotalDue)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 17\n      }\n    }, rowData.TotalDue));\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 21\n      }\n    }, \"Renewal Follow up Report\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 33\n      }\n    }, \"Filter\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 49\n      }\n    }, \"Policy Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyType\",\n      id: \"policyType\",\n      value: this.state.policyType,\n      onChange: e => this.selectType(e.target, 'policyType'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 53\n      }\n    }, \"Select Policy Type\"), this.state.policyTypeArray.map((policyType, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: policyType.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 65\n        }\n      }, policyType.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 45\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"MONTH\",\n      id: \"MONTH\",\n      onChange: e => this.selectType(e.target.value, 'MONTH'),\n      value: this.state.MONTH,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 45\n      }\n    }, \"All\"), this.state.MONTHList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 61\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"MONTHError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 45\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      min: \"1900\",\n      max: \"2099\",\n      id: \"Year\",\n      name: \"Year\",\n      value: this.state.Year,\n      onChange: e => this.handleChange(e, 'Year'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"YearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 45\n      }\n    }, \"Days Outstanding\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"DaysOutstanding\",\n      id: \"DaysOutstanding\",\n      onChange: e => this.selectType(e.target.value, 'DaysOutstanding'),\n      value: this.state.DaysOutstanding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 49\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Before 45-60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 49\n      }\n    }, \"Before 45-60 d\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Before 7-44\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 49\n      }\n    }, \"Before 7-44 d\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Before 6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 49\n      }\n    }, \"Before 6 d\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Overdue < 38\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 49\n      }\n    }, \"Overdue < 38 d\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"About to Lapse 38-44\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 49\n      }\n    }, \"About to Lapse (38-44 d)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Overdue > 45\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 49\n      }\n    }, \"Lapsed (> 45 d)\")), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"MONTHError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 45\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 45\n      }\n    }, \" Search \")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Renewal Follow up Report\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 21\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isSMSModalVisible,\n      className: 'modal-lg',\n      style: {\n        maxWidth: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.setState({\n        isSMSModalVisible: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 21\n      }\n    }, \" Send SMS \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 41\n      }\n    }, \"Policy Number  : \", this.state.rowData.PolicyNumber)), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 41\n      }\n    }, \"Phone Number  : \", this.state.rowData.ContactNumber)))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 33\n      }\n    }, \"Select SMSTemplate :\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"SMSTemplate\",\n      id: \"SMSTemplate\",\n      value: this.state.SMSTemplate,\n      onChange: e => this.selectType(e.target.value, 'SMSTemplate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 37\n      }\n    }, \"Select\"), this.state.SMSTypeList.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: x.value,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 49\n        }\n      }, x.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"SMSTemplateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"SendSMS\",\n      onClick: () => this.sendSMS(this.state.rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 33\n      }\n    }, \" SendSMS\")))))));\n  }\n\n}\n\nexport default withTranslation()(Renewal_Follow_up_Report);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Renewal_Follow_up_Report.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Modal","ModalBody","ModalHeader","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","UncontrolledTooltip","toast","APIConstant","URL","Renewal_Follow_up_Report","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","monthtillDate","fromDate","toDate","undefined","Year","YearError","show","columns","field","header","sortable","filter","id","style","body","PolicyTemplate","bind","ClientTemplate","ColumnclassName","filterMatchMode","ContactNumberTemplate","formatEmail","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","selected","selectedPolicy","selectedAgent","selectAll","DebtorType","Period","agentinfo","agentinfoError","format","MONTHList","MONTH","Date","getMonth","toString","slice","MONTHError","DaysOutstanding","policyTypeArray","policyType","isSMSModalVisible","rowData","SMSTemplate","SMSTemplateError","SMSTypeList","EmailTemplate","EmailTemplateError","EmailTypeList","console","log","colOptions","col","push","label","export","componentDidMount","getDropDownValues","getOrganazationData","getSMSTypeDropDown","formattedSMS","post","then","res","success","i","data","TamplateName","MessageTemplateId","catch","err","error","stringMapType","setStateName","stringmaptype","orderby","path","dropdownbycode","column","viewContactDetails","marginRight","cursor","borderBottomWidth","color","position","ClientName","viewPolicy","PolicyNumber","ClientDetails","ClientCode","AgentDetails","AgentName","AgentCode","ContactNumber","openSMSTempalteModal","sendSMS","TemplateId","PolicyId","MessageHeaderId","message","Email","toggleRow","newSelected","Object","assign","selqected","toggleSelectAll","forEach","x","window","open","location","origin","EntityId","EntityType","actionTemplate","SourceName","Source","DateDetails","RenewalDate","InceptionDate","orderBy","ShowMonth","getFullYear","startDate","parseInt","endDate","endOf","daysOutstanding","formattedData","dataLength","tempData","Stage","PolicyType","VesselClass","VesselType","Country","VesselRegistrationLocation","SumInsured","TotalDue","Language","DocLang","Currency","SourceData","ClientPhone","ClientEmail","dt","exportCSV","filterData","selectType","type","DebtorTypeError","isEmpty","ContactType","OrganizationName","OrganizationId","sourceList","condition","errorField","document","getElementById","className","innerHTML","backgroundColor","render","t","map","columnToggleIcon","onColumnToggle","width","custom","float","StringMapKey","StringMapName","el","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Modal, ModalBody, ModalHeader, Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col ,UncontrolledTooltip} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\nconst URL = 'http://localhost:4111/#/'; \r\n\r\nclass Renewal_Follow_up_Report extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n           /* { field: \"Action\", header: \"Action\", sortable: false, id: 0, style: { 'width': '45px' } },*/\r\n            { field: \"Stage\", header: \"Stage\", sortable: true, filter: true, id: 1, style: { 'width': '105px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 2, style: { 'width': '100px' } },\r\n            { body: this.PolicyTemplate.bind(this) , field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 4, style: { 'width': '75px' } },\r\n\t        { body: this.ClientTemplate.bind(this) , field: \"ClientName\", header: \"Client Name\", sortable: true, filter: true, id: 6, style: { 'width': '150px' } },\r\n            { field: \"Currency\", header: \"Currency\", sortable: true, filter: true, id: 10, style: { 'width': '65px' } },\r\n            { body: this.ColumnclassName.bind(this), field: \"TotalDue\", header: \"Total Due\", sortable: true, filter: true, id: 9, style: { 'width': '75px','textAlign':'right' } },\r\n            { field: \"PolicyType\", header: \"Policy Type\", sortable: true, filter: true, id: 5, style: { 'width': '100px'  } },\r\n            { field: \"VesselClass\", header: \"Vessel Class\", sortable: true, filter: true, id: 7, style: { 'textAlign': 'right','width': '100px'  } },\r\n            { field: \"VesselType\", header: \"Vessel Type\", sortable: true, filter: true, id: 8, style: { 'textAlign': 'right','width': '100px'  } },\r\n            { field: \"SumInsured\", header: \"Sum Insured\", sortable: true, filter: true, id: 15, style: { 'width': '75px','textAlign':'right' } },\r\n            { field: \"Source\", header: \"Source\", sortable: true, filter: true, filterMatchMode: 'contains', id: 11, style: { 'width': '150px' } },\r\n            { field: \"SourceName\", header: \"Source Name\", sortable: true, filter: true, filterMatchMode: 'contains', id: 12, style: { 'width': '150px' } },\r\n            { body: this.ContactNumberTemplate.bind(this) , field: \"ContactNumber\", header: \"Contact Number\", sortable: true, filter: true, id: 13, style: { 'width': '155px' } },\r\n            { body:this.formatEmail.bind(this), field: \"Email\", header: \"Email\", sortable: true, filter: true, id: 14, style: { 'width': '155px' } },\r\n            { field: \"Country\", header: \"Country\", sortable: true, filter: true, id: 16, style: { 'width': '75px' } },\r\n            { field: \"DaysOutstanding\", header: \"Days Outstanding\", sortable: true, filter: true, id: 3, style: { 'width': '75px' } },\r\n            { field: \"Language\", header: \"Language\", sortable: true, filter: true, id: 18, style: { 'width': '75px' } },\r\n            { field: \"VesselRegistrationLocation\", header: \"Vessel Registration Location\", sortable: true, filter: true, id: 17, style: { 'width': '75px' } },\r\n            /* { field: \"LastRenewalConfirmed\", header: \"Last Renewal Confirmed\", sortable: true, filter: true, id: 10, style: { 'width': '75px' } },\r\n            { field: \"DifferenceTotalDue\", header: \"Difference Total Due\", sortable: true, filter: true, id: 10, style: { 'width': '75px' } },\r\n            { field: \"ChangeonPreviousyear\", header: \"Change on Previous year\", sortable: true, filter: true, id: 11, style: { 'width': '75px' } },\r\n            { field: \"Previouspaymenttype\", header: \"Previous payment type\", sortable: true, filter: true, id: 12, style: { 'width': '65px' } },*/\r\n            \r\n            \r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            DebtorType: 'SubAgent',\r\n            Period: 0,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            monthtillDate: moment().format(\"YYYY-MM\"),\r\n            fromDate: moment().format(\"YYYY-MM-DD\"),\r\n            toDate: moment().format(\"YYYY-MM-DD\"),\r\n            MONTHList: [],\r\n            MONTH: ('0'+(new Date().getMonth() + 1).toString()).slice(-2),\r\n            MONTHError: false,\r\n            Year: '',\r\n            YearError: false,\r\n            DaysOutstanding:'All',\r\n    \t\tpolicyTypeArray: [],\r\n            policyType: 'Vessel',\t\r\n            isSMSModalVisible: false,\r\n            rowData: {},\r\n            SMSTemplate:'',\r\n            SMSTemplateError: false,\r\n            SMSTypeList: [],\r\n            EmailTemplate:'',\r\n            EmailTemplateError: false,\r\n            EmailTypeList: [],\r\n\r\n        };\r\n        console.log('month','0'+(new Date().getMonth() + 1).toString());\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.ClientTemplate = this.ClientTemplate.bind(this);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Renewal_Follow_up_Report();\r\n        this.getDropDownValues('POLICYTYPE', 'policyTypeArray');\r\n        this.getOrganazationData(this.state.DebtorType);\r\n        this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\r\n        this.getSMSTypeDropDown();\r\n    }\r\n\r\n    getSMSTypeDropDown(){\r\n        try{\r\n            var formattedSMS = [];\r\n        \r\n            api.post('api/getSMSTypeDropDown').then(res =>{\r\n                console.log('res',res.success);\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    formattedSMS.push({\r\n                        label: res.data[i].TamplateName,\r\n                        value: res.data[i].MessageTemplateId,\r\n                    });\r\n                }\r\n                this.setState({SMSTypeList:formattedSMS });\r\n            }).catch(err=>{\r\n                console.log('err',err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error in getSMSTypeDropDown\",error)\r\n        }   \r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: 'sortorder'\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error...\", error);\r\n        }\r\n    }\r\n\r\n    ClientTemplate(rowData, column){\r\n        return <div className=\"policy-list-data\">\r\n            <span onClick={() => this.viewContactDetails(rowData)}\r\n                style={{ marginRight: '.5em', cursor: 'pointer' , borderBottomWidth: \"1px\" , color: \"#007ad9\" }} tooltip=\"View Details\" tooltipOptions={{ position: 'bottom' }}>\r\n                {rowData.ClientName}\r\n            </span>\r\n            </div>;\r\n    }\r\n\r\n    PolicyTemplate(rowData, column) {\r\n    console.log('rowData', rowData);\r\n    return <div className=\"policy-list-data\">\r\n            <a onClick={() => this.viewPolicy(rowData)}\r\n                style={{ marginRight: '.5em', cursor: 'pointer' , borderBottomWidth: \"1px\" , color: \"#007ad9\"}} tooltip=\"View Details\" tooltipOptions={{ position: 'bottom' }}>\r\n                {rowData.PolicyNumber}\r\n            </a>     \r\n    </div>;\r\n  }\r\n\r\n    ClientDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ClientName}</p>\r\n                <p>{rowData.ClientCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    AgentDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.AgentName}</p>\r\n                <p>{rowData.AgentCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    ContactNumberTemplate(rowData){\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ContactNumber}</p>\r\n                <BTN onClick={() => this.openSMSTempalteModal(rowData)}>SMS</BTN>\r\n                {/* <span>\r\n                <i class=\"fas fa-sms\" style={{ fontSize: '25px'}} id={\"SMS\"+rowData.PolicyNumber}></i>\r\n                    <UncontrolledTooltip placement=\"right\" target={\"SMS\"+rowData.PolicyNumber}>\r\n                        {\"Send SMS\"}\r\n                    </UncontrolledTooltip>\r\n                 </span> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    openSMSTempalteModal(rowData){\r\n        this.setState({isSMSModalVisible: true , rowData: rowData });\r\n    }\r\n\r\n\r\n    sendSMS(rowData){\r\n        try{\r\n            if(this.state.SMSTemplate){\r\n                let data ={\r\n                    TemplateId: this.state.SMSTemplate,\r\n                    PolicyId :rowData.PolicyId,\r\n                    MessageHeaderId: '',\r\n                }\r\n                api.post('api/sendSMSOnDemand', data).then(res =>{\r\n                    // console.log('res',res);\r\n                    if(res.success == 'true' || res.success == true){\r\n                        toast.success('SMS Send Successfull');\r\n                    }else if(res.success == 'false' || res.success == false){\r\n                        toast.error(res.message);  \r\n                    }\r\n                }).catch(err=>{\r\n                    // console.log('err',err);\r\n                    toast.error(\"SMS Sending Failed\")\r\n                });\r\n            }else{\r\n                this.show('SMSTemplate', true, \"SMSTemplateError\", \"Please select SMS Template\");\r\n            }\r\n            // console.log('rowData',rowData)\r\n            \r\n        } catch (error) {\r\n            console.log(\"error in SendSMS\",error)\r\n        }   \r\n    }\r\n\r\n    formatEmail(rowData){\r\n        return(\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Email}</p>\r\n                {/* <BTN onClick={() => this.sendEmail(rowData)}>EMAIL</BTN> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // sendEmail(rowData){\r\n    //     try{\r\n    //         console.log('rowData',rowData)\r\n    //         let data ={\r\n    //             PolicyId :rowData.PolicyId,\r\n    //             MessageHeaderId: '',\r\n    //             to: 'ajay.cognisun@gmail.com',  //rowData.Email,\r\n    //             cc: '',\r\n    //             bcc: '',\r\n    //             subject:'Testing by Ajay',\r\n    //             EmailSenderId:'',\r\n    //             html:'<p>Hello For Testing</p>',\r\n\r\n    //         }\r\n    //         api.post('api/sendEmailOnDemand', data).then(res =>{\r\n    //             console.log('res',res);\r\n    //         }).catch(err=>{\r\n    //             console.log('err',err);\r\n    //         });\r\n    //     } catch (error) {\r\n    //         console.log(\"error in EmailSMS\",error)\r\n    //     }\r\n        \r\n    // }\r\n\r\n\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selqected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n    \r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    viewContactDetails(rowData) {\r\n        window.open(window.location.origin + '/#' + 'viewContactDetails/' + rowData.EntityId + '/' + rowData.EntityType);\r\n    }\r\n\r\n    viewPolicy(rowData) {\r\n        window.open(window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1', '_blank');\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n    SourceName(rowData) {\r\n        return (rowData.Source === \"Direct\")?\r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n               \r\n            </div> :\r\n            \r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n                <p>{rowData.SourceName}</p>\r\n            </div>\r\n        ;\r\n    }\r\n    DateDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.RenewalDate}</p>\r\n                <p>{rowData.InceptionDate}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n\r\n    Renewal_Follow_up_Report() {\r\n        var ShowMonth = this.state.MONTH; console.log(ShowMonth);\r\n        if (ShowMonth ===\"\")\r\n        this.state.MONTH = new Date().getMonth() + 2;\r\n        else\r\n            if (ShowMonth ===\"All\")\r\n            this.state.MONTH = 1;\r\n        if (this.state.Year ===\"\")\r\n        this.state.Year = new Date().getFullYear();\r\n        \r\n        var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\r\n\r\n        if(ShowMonth ==='' || ShowMonth ==='All')\r\n        var endDate =  moment(startDate).endOf('year').format('YYYY-MM-DD');\r\n        else \r\n        var endDate =  moment(startDate).endOf('month').format('YYYY-MM-DD');\r\n        var data = {\r\n\t        policyType: this.state.policyType,\r\n            fromDate:  startDate,\r\n            toDate: endDate,\r\n            daysOutstanding: this.state.DaysOutstanding,\r\n        };\r\n        console.log(\"lok\",data);\r\n        this.state.MONTH = ShowMonth;\r\n        api.post('api/Renewal_Follow_up_Report', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage:0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            id:i,\r\nStage: tempData.Stage,\r\nRenewalDate: moment(tempData.RenewalDate).format('DD-MM-YYYY'),\r\nDaysOutstanding: tempData.DaysOutstanding,\r\nPolicyNumber: tempData.PolicyNumber,\r\nPolicyId: tempData.PolicyId,\r\nEntityId: tempData.EntityId,\r\nEntityType: tempData.EntityType,\r\nClientName: tempData.ClientName,\r\nPolicyType: tempData.PolicyType,\r\nVesselClass: tempData.VesselClass,\r\nVesselType : tempData.VesselType,\r\nCountry: tempData.Country,\r\nVesselRegistrationLocation: tempData.VesselRegistrationLocation,\r\nSumInsured: tempData.SumInsured,\r\nTotalDue: tempData.TotalDue,\r\n\r\n/*LastRenewalConfirmed: tempData.LastRenewalConfirmed,\r\nDifferenceTotalDue: tempData.DifferenceTotalDue,\r\nChangeonPreviousyear: tempData.ChangeOnPreviousYear,\r\nPreviouspaymenttype: tempData.PreviousPaymentType,*/\r\nLanguage: tempData.DocLang,\r\nCurrency: tempData.Currency,\r\nSource: tempData.Source,\r\nSourceName: tempData.SourceName,\r\nSourceData: tempData.Source + \"\" + tempData.SourceName,\r\nContactNumber: tempData.ClientPhone,\r\nEmail: tempData.ClientEmail,\r\n                        });\r\n\r\n                    }\r\n                }\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n}\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.Renewal_Follow_up_Report();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'monthtillDate') {\r\n            this.setState({ monthtillDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'Year') {\r\n\r\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\r\n                this.setState({ Year: e.target.value, YearError: true });\r\n                this.show('Year', true, 'YearError', 'Please Enter Year');\r\n            } else {\r\n                this.setState({ Year: e.target.value, YearError: false });\r\n                this.show('Year', false, 'YearError', '');\r\n            }\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n        if (type === 'policyType') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ policyType: '' });\r\n            } else {\r\n                this.setState({ policyType: value.value });\r\n            }\r\n        }\r\n        if (type === 'DaysOutstanding') {\r\n\r\n            this.setState({DaysOutstanding: value });\r\n\r\n        } \r\n\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, agentinfoError: false });\r\n            this.show('agentinfo', false, 'agentinfoError', '');\r\n\r\n        }\r\n\r\n        if (type === 'Period') {\r\n            this.setState({ Period: value });\r\n        }\r\n\r\n        if (type === 'MONTH') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ MONTHError: true, MONTH: value });\r\n                this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\r\n            } else {\r\n                this.setState({ MONTHError: false, MONTH: value });\r\n                this.show('MONTH', false, \"MONTHError\", \"\");\r\n\r\n            }\r\n        }\r\n        if (type === 'SMSTemplate') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ SMSTemplateError: true, SMSTemplate: value });\r\n                this.show('SMSTemplate', true, \"SMSTemplateError\", \"Please select SMS Template\");\r\n            } else {\r\n                this.setState({ SMSTemplateError: false, SMSTemplate: value });\r\n                this.show('SMSTemplate', false, \"SMSTemplateError\", \"\");\r\n\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n   \r\n    ColumnclassName(rowData,Column) {\r\n \r\n       \r\n       return (rowData.DaysOutstanding <=7)? <div style={{backgroundColor:'#008c9a',color:'#fff'}} className = \"policy-list-data\">\r\n       <p>{rowData.TotalDue}</p>     \r\n   </div> :<div className = \"policy-list-data\" >\r\n                <p>{rowData.TotalDue}</p>     \r\n            </div>;\r\n       \r\n       \r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Renewal Follow up Report</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Filter\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n \t\t\t\t\t<Col md=\"3\">\r\n                                            <div className=\"input-box\">\r\n                                                <label>Policy Type</label>\r\n                                                <Input type=\"select\" name=\"policyType\" id=\"policyType\" value={this.state.policyType} onChange={(e) => this.selectType(e.target, 'policyType')}>\r\n                                                    <option value=\"\">Select Policy Type</option>\r\n                                                    {this.state.policyTypeArray.map((policyType, i) => {\r\n                                                        return (<option value={policyType.StringMapKey} key={i}>{policyType.StringMapName}</option>)\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                                <em id=\"policyTypeError\" className=\"error invalid-feedback\"></em>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md='3'>\r\n                                            <label>Month</label>\r\n                                            <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\r\n                                            <option value='All'>All</option>\r\n                                                {this.state.MONTHList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                        <Col md='3'>\r\n\r\n                                            <label>Year</label>\r\n                                            <Input type=\"number\" min=\"1900\" max=\"2099\" id=\"Year\" name=\"Year\"\r\n                                                value={this.state.Year}\r\n                                                onChange={(e) => this.handleChange(e, 'Year')}\r\n                                            ></Input>\r\n\r\n                                            <em id=\"YearError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                        <Col md='3'>\r\n                                            <label>Days Outstanding</label>\r\n                                            <Input type=\"select\" name=\"DaysOutstanding\" id=\"DaysOutstanding\" onChange={(e) => this.selectType(e.target.value, 'DaysOutstanding')} value={this.state.DaysOutstanding}>\r\n                                                {/* {this.state.MONTHList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                } */}\r\n                                                <option value=\"All\">All</option>\r\n                                                <option value=\"Before 45-60\">Before 45-60 d</option>\r\n                                                <option value=\"Before 7-44\">Before 7-44 d</option>\r\n                                                <option value=\"Before 6\">Before 6 d</option>\r\n                                                <option value=\"Overdue < 38\">Overdue &lt; 38 d</option>\r\n                                                <option value=\"About to Lapse 38-44\">About to Lapse (38-44 d)</option>\r\n                                                <option value=\"Overdue > 45\">Lapsed (&gt; 45 d)</option>\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                        <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Renewal Follow up Report\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true} \r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.isSMSModalVisible} className={'modal-lg'} style={{ maxWidth: '70%' }}>\r\n                    <ModalHeader toggle={() => this.setState({ isSMSModalVisible: false })}> Send SMS </ModalHeader>\r\n                    <ModalBody>\r\n                        <Card className=\"mb-0\">\r\n                            <Row>\r\n                                <Col>\r\n                                <div> \r\n                                    <Row>\r\n                                     <Col md=\"4\"> \r\n                                        <label>\r\n                                             Policy Number  : {this.state.rowData.PolicyNumber}  \r\n                                        </label>\r\n                                    </Col>\r\n                                    <Col md=\"4\">\r\n                                        <label>\r\n                                             Phone Number  : {this.state.rowData.ContactNumber} \r\n                                        </label>\r\n                                    </Col>\r\n                                    </Row>                        \r\n                                </div>\r\n                                </Col>   \r\n                            </Row>\r\n                            <Row>\r\n                            <Col md=\"3\">\r\n                                <label>\r\n                                        Select SMSTemplate :  \r\n                                </label>\r\n                                  \r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Input type=\"select\" name=\"SMSTemplate\" id=\"SMSTemplate\" value={this.state.SMSTemplate} onChange={(e) => this.selectType(e.target.value, 'SMSTemplate')}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {this.state.SMSTypeList.map((x, i) => {\r\n                                        return (<option value={x.value} key={i}>{x.label}</option>)\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                                <em id=\"SMSTemplateError\" className=\"error invalid-feedback\"></em>\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <BTN color=\"success\" title=\"SendSMS\" \r\n                                    onClick={() => this.sendSMS(this.state.rowData)}> SendSMS\r\n                                </BTN>\r\n                            </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n            </div>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(Renewal_Follow_up_Report);\r\n"]},"metadata":{},"sourceType":"module"}