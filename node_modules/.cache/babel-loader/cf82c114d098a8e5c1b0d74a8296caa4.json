{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/tasks.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { toast } from 'react-toastify';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Col, Row, Input, InputGroup, Button as BTN } from 'reactstrap';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport { withTranslation } from 'react-i18next';\nimport DatePicker from 'react-date-picker';\nimport Moment from \"moment\";\nimport AddContactNav from './DefaultAddContactNav';\nimport api from '../../utils/apiClient';\nimport { CommonConfig } from '../../utils/constants';\nimport APIConstant from '../../utils/constants';\n\nclass tasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      this.setState({\n        isTaskEdit: false,\n        TaskTitle: '',\n        Task_Followers: '',\n        Task_FollowersError: true,\n        Assignee: '',\n        AssigneeError: true,\n        Priority: this.state.Priority,\n        PriorityError: false,\n        Type: '',\n        TaskTitleError: true,\n        Status: this.state.Status,\n        statusError: false,\n        DueDate: '',\n        DueDateError: true,\n        Regarding: '',\n        RegardingError: true,\n        RegardingInput: '',\n        RegardingInputError: true,\n        Details: '',\n        DetailsError: true,\n        userImgData: '',\n        noteaddon: '',\n        taskID: '',\n        isEdit: false\n      });\n    };\n\n    this.addMoreTask = () => {\n      this.openModalAdd();\n    };\n\n    this.toggleLargeDel = () => {\n      this.setState({\n        toggleModalDel: false\n      });\n    };\n\n    this.toggleLargeAdd = () => {\n      this.reset();\n      this.setState({\n        toggleModalAdd: false,\n        TaskTitle: '',\n        Task_Followers: '',\n        Task_FollowersError: false,\n        Assignee: '',\n        AssigneeError: false,\n        Priority: this.state.Priority,\n        PriorityError: false,\n        Type: '',\n        TaskTitleError: false,\n        Status: this.state.Status,\n        statusError: false,\n        DueDate: '',\n        DueDateError: false,\n        Regarding: '',\n        RegardingError: false,\n        RegardingInput: '',\n        RegardingInputError: false,\n        Details: '',\n        DetailsError: false,\n        isEdit: false\n      });\n    };\n\n    this.DeleteTaskModal = rowdata => {\n      this.setState({\n        taskID: rowdata.Taskid\n      });\n      this.openModalDel(rowdata);\n    };\n\n    this.DeleteTask = Taskid => {\n      api.post('api/deleteTasks', {\n        taskId: Taskid\n      }).then(res => {\n        if (res.success) {\n          this.openModalDel();\n          this.getTasks();\n          toast.success('Task deleted successfully');\n        } else {}\n      }).catch(err => {});\n    };\n\n    this.saveTask = () => {\n      if (this.state.TaskTitleError === false && this.state.PriorityError === false && this.state.statusError === false && this.state.TypeError === false && this.state.Task_FollowersError === false && this.state.DetailsError === false && this.state.AssigneeError === false && this.state.RegardingInputError === false) {\n        const data = {\n          'TaskTitle': this.state.TaskTitle.trim(),\n          'Assignee': this.state.Assignee,\n          'Priority': this.state.Priority,\n          'Type': this.state.Type,\n          'Status': this.state.Status,\n          'DueDate': this.state.DueDate,\n          'Regarding': this.state.Regarding,\n          'RegardingInput': this.state.RegardingInput,\n          'Details': this.state.Details.trim(),\n          'Task_Followers': this.state.Task_Followers,\n          'TaskId': this.state.taskID,\n          'isEdit': this.state.isEdit,\n          'noteaddon': this.state.userImg\n        };\n        api.post('api/addUpdateTasks', data).then(res => {\n          if (res.success) {\n            document.getElementById(\"noteaddon\").value = null;\n            toast.success('Task added successfully');\n            this.closeModelAdd();\n            this.getTasks();\n            this.reset();\n          } else {\n            console.log(\"Error\");\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        this.show(\"TaskTitle\", this.state.TaskTitleError);\n\n        if (this.state.isEdit) {\n          this.show(\"Priority\", this.state.PriorityError);\n          this.show(\"Status\", this.state.statusError);\n        }\n\n        this.show(\"Type\", this.state.TypeError);\n        this.show(\"Task_Followers\", this.state.Task_FollowersError);\n        this.show(\"Details\", this.state.DetailsError);\n        this.show(\"Assignee\", this.state.AssigneeError);\n        this.show(\"RegardingInput\", this.state.RegardingInputError);\n      }\n    };\n\n    this.mulSelVal = e => {\n      if (e.value.length == 0) {\n        this.setState({\n          Task_FollowersError: true,\n          Task_Followers: e.value\n        });\n        this.show('Task_Followers', true);\n      } else {\n        this.setState({\n          Task_FollowersError: false,\n          Task_Followers: e.value\n        });\n        this.show('Task_Followers', false);\n      } // console.log(\"Afdsas\", this.state.Task_Followers);\n\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'TaskTitle') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            TaskTitleError: true\n          });\n          this.show(\"TaskTitle\", true);\n        } else {\n          this.setState({\n            TaskTitleError: false,\n            TaskTitle: e.target.value\n          });\n          this.show(\"TaskTitle\", false);\n        }\n      }\n\n      if (e.target.name === 'RegardingInput') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          if (this.state.Regarding != '') {\n            this.setState({\n              RegardingInputError: true\n            });\n            this.show(\"RegardingInput\", true);\n          }\n        } else {\n          if (this.state.Regarding != '') {\n            this.setState({\n              RegardingInputError: false\n            });\n            this.show(\"RegardingInput\", false);\n          }\n\n          this.setState({\n            RegardingInput: e.target.value\n          });\n        }\n      }\n\n      if (e.target.name === 'Details') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            DetailsError: true\n          });\n          this.show(\"Details\", true);\n        } else {\n          this.setState({\n            DetailsError: false,\n            Details: e.target.value\n          });\n          this.show(\"Details\", false);\n        }\n      }\n    };\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.selectImage = event => {\n      if (event.target.files && event.target.files[0]) {\n        this.setState({\n          userImgData: event.target.files[0]\n        });\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          this.setState({\n            userImg: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    };\n\n    let columns = [{\n      field: \"id\",\n      header: \"Id\",\n      sortable: true,\n      filter: true,\n      id: 0\n    }, {\n      field: \"Reporter\",\n      header: \"Reporter\",\n      sortable: true,\n      filter: true,\n      id: 1\n    }, {\n      field: \"Assignee\",\n      header: \"Assignee\",\n      sortable: true,\n      filter: true,\n      id: 2\n    }, {\n      field: \"Task_Follower\",\n      header: \"TaskFollower\",\n      sortable: true,\n      filter: true,\n      id: 3\n    }, {\n      field: \"Title\",\n      header: \"Title\",\n      sortable: true,\n      filter: true,\n      id: 4\n    }, {\n      field: \"Priority\",\n      header: \"Priority\",\n      sortable: true,\n      filter: true,\n      id: 5\n    }, {\n      field: \"Type\",\n      header: \"TasksType\",\n      sortable: true,\n      filter: true,\n      id: 6\n    }, {\n      field: \"DueDate\",\n      header: \"DueDate\",\n      sortable: true,\n      filter: true,\n      id: 7\n    }, {\n      field: \"Created\",\n      header: \"Created\",\n      sortable: true,\n      filter: true,\n      id: 8\n    }, {\n      field: \"Updated\",\n      header: \"Updated\",\n      sortable: true,\n      filter: true,\n      id: 9\n    }, {\n      field: \"Status\",\n      body: this.statusTemplate,\n      header: \"Status\",\n      sortable: true,\n      filter: true,\n      id: 10\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      id: 11\n    }];\n    this.state = {\n      brand: null,\n      colors: null,\n      toggleModalDel: false,\n      toggleModalAdd: false,\n      cols: columns,\n      arr: [],\n      rowData: '',\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      isTrigerred: true,\n      isSelected: true,\n      taskID: '',\n      TaskTitle: '',\n      TaskTitleError: true,\n      Assignee: '',\n      Assigneearr: [],\n      AssigneeError: true,\n      Task_Followers: '',\n      Task_Followersarr: [],\n      Task_FollowersError: true,\n      Priority: 'Normal',\n      Priorityarr: [],\n      PriorityError: false,\n      Type: '',\n      TaskTypearr: [],\n      TypeError: true,\n      Status: 'Open',\n      Statusarr: [],\n      statusError: false,\n      DueDate: '',\n      DueDateError: true,\n      Regarding: '',\n      Regardingarr: [],\n      RegardingError: true,\n      RegardingInput: '',\n      RegardingInputError: true,\n      Details: '',\n      DetailsError: true,\n      From_user: '',\n      From_userError: true,\n      isEdit: false,\n      taskfollowerid: '',\n      userImg: '',\n      userImgData: '',\n      noteaddon: ''\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.onBrandChange = this.onBrandChange.bind(this);\n    this.export = this.export.bind(this);\n    this.statusTemplate = this.statusTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTasks();\n    this.getAssignee();\n    this.getTask_Followers();\n    this.getPriorityType();\n    this.getTaskType();\n    this.getTaskStatus();\n    this.getTaskRegardings();\n    this.Task_Followers();\n  }\n\n  Task_Followers() {\n    api.post('api/taskFollowers').then(res => {\n      if (res.success) {// console.log(\"taskFollowerssssss\", res);\n      } else {// console.log(\"Else\");\n        }\n    });\n  }\n\n  getTasks() {\n    api.post('api/getTasks').then(res => {\n      if (res.success) {\n        // console.log(\"getTasks\", res);\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          var Updated = res.data[i].UpdatedOn === undefined || res.data[i].UpdatedOn === null || res.data[i].UpdatedOn === \"\" ? \"No Updates\" : Moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateTime);\n          formattedData.push({\n            id: [i + 1],\n            TaskFollowerID: res.data[i].TaskFollowerID,\n            Taskid: res.data[i].TaskId,\n            Assigneeid: res.data[i].TaskAssignee,\n            Reporter: res.data[i].FromUser,\n            Assignee: res.data[i].AssigneeName,\n            Title: res.data[i].Title,\n            Status: res.data[i].TaskStatus,\n            Priority: res.data[i].Priority,\n            Type: res.data[i].TaskType,\n            Task_Follower: res.data[i].FollowerName,\n            Follower_Id: res.data[i].Followerid,\n            Regarding: res.data[i].Regarding,\n            RegardingDetails: res.data[i].RegardingValue,\n            Details: res.data[i].Details,\n            DueDate: Moment(res.data[i].DueDate).format(CommonConfig.dateFormat.dateTime),\n            Created: Moment(res.data[i].CreatedOn).format(CommonConfig.dateFormat.dateTime),\n            Updated: Updated\n          });\n          let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n          let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\n          this.setState({\n            arr: formattedData,\n            str: str\n          });\n        }\n      } else {// console.log(\"Else\");\n      }\n    }).catch(err => {});\n  }\n\n  getAssignee() {\n    api.post('api/getAssignee').then(res => {\n      if (res.success) {\n        var Assignee = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n          Assignee.push({\n            label: res.data[i].PersonId,\n            value: res.data[i].Forename\n          });\n        }\n\n        this.setState({\n          Assigneearr: Assignee\n        });\n      } else {// console.log(\"Else\");\n      }\n    });\n  }\n\n  getTask_Followers() {\n    api.post('api/getTask_Followers').then(res => {\n      if (res.success) {\n        var Task_Followers = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n          Task_Followers.push({\n            name: res.data[i].Forename,\n            code: res.data[i].PersonId,\n            taskfollowerid: ''\n          });\n        }\n\n        this.setState({\n          Task_Followersarr: Task_Followers\n        });\n      } else {// console.log(\"Else\");\n      }\n    });\n  }\n\n  getTaskStatus() {\n    try {\n      const data = {\n        stringmaptype: 'TASKSTATUS'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Status = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Status.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            Statusarr: Status\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getTaskRegardings() {\n    try {\n      const data = {\n        stringmaptype: 'TASKREGARDING'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Regardings = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Regardings.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            Regardingarr: Regardings\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getTaskType() {\n    try {\n      const data = {\n        stringmaptype: 'TASKTYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Type = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Type.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            TaskTypearr: Type\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getPriorityType() {\n    try {\n      const data = {\n        stringmaptype: 'TASKPRIORITY'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Priority = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Priority.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            Priorityarr: Priority\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  editTask(rowData) {\n    // console.log(\"rowData\", rowData);\n    var TaskFollower_ID = rowData.TaskFollowerID.split(','); // console.log(\"TaskFollower_ID\", TaskFollower_ID);\n\n    var Follower_id = rowData.Follower_Id.split(',');\n    var taskFollower_id = [];\n\n    for (var i = 0; i < Follower_id.length; i++) {\n      let record = this.state.Task_Followersarr.find(x => x.code == Follower_id[i]);\n      record.taskfollowerid = TaskFollower_ID[i];\n      record.isEdit = this.state.isEdit;\n      taskFollower_id.push(record);\n    }\n\n    this.setState({\n      toggleModalAdd: true,\n      taskID: rowData.Taskid,\n      TaskTitle: rowData.Title,\n      Task_Followers: taskFollower_id,\n      Task_FollowersError: false,\n      Assignee: rowData.Assigneeid,\n      AssigneeError: false,\n      Priority: rowData.Priority,\n      PriorityError: false,\n      Type: rowData.Type,\n      TypeError: false,\n      TaskTitleError: false,\n      Status: rowData.Status,\n      statusError: false,\n      DueDate: Moment(rowData.DueDate, CommonConfig.dateFormat.dateTime).format('YYYY-MM-DD'),\n      DueDateError: false,\n      Regarding: rowData.Regarding,\n      RegardingError: false,\n      RegardingInput: rowData.RegardingDetails,\n      RegardingInputError: false,\n      Details: rowData.Details,\n      DetailsError: false,\n      From_userError: false,\n      isEdit: true\n    }); // console.log(\"Task_Followers\", this.state.Task_Followers);\n  }\n\n  openModalDel() {\n    this.setState({\n      toggleModalDel: !this.state.toggleModalDel\n    });\n  }\n\n  openModalAdd() {\n    this.reset();\n    this.setState({\n      toggleModalAdd: !this.state.toggleModalAdd\n    });\n  }\n\n  closeModelAdd() {\n    this.reset();\n    this.setState({\n      toggleModalAdd: false\n    });\n  }\n\n  CancleTask() {\n    this.reset();\n    this.setState({\n      toggleModalAdd: false\n    });\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  selectType(value, type) {\n    if (type === 'Priority') {\n      if (value === '' || value === null) {\n        this.setState({\n          PriorityError: true,\n          Priority: value\n        });\n        this.show('Priority', true);\n      } else {\n        this.setState({\n          PriorityError: false,\n          Priority: value\n        });\n        this.show('Priority', false);\n      }\n    }\n\n    if (type === 'Type') {\n      if (value === '' || value === null) {\n        this.setState({\n          TypeError: true,\n          Type: value\n        });\n        this.show('Type', true);\n      } else {\n        this.setState({\n          TypeError: false,\n          Type: value\n        });\n        this.show('Type', false);\n      }\n    }\n\n    if (type === 'Status') {\n      if (value === '' || value === null) {\n        this.setState({\n          statusError: true,\n          Status: value\n        });\n        this.show('Status', true);\n      } else {\n        this.setState({\n          statusError: false,\n          Status: value\n        });\n        this.show('Status', false);\n      }\n    }\n\n    if (type === 'Regarding') {\n      this.setState({\n        RegardingInputError: false,\n        RegardingInput: ''\n      });\n      this.show(\"RegardingInput\", false);\n\n      if (value === '' || value === null) {\n        this.setState({\n          Regarding: value\n        }); // this.show('Regarding', true);\n      } else {\n        this.setState({\n          Regarding: value\n        });\n\n        if (this.state.RegardingInput == '') {\n          this.setState({\n            RegardingInputError: true\n          });\n          this.show(\"RegardingInput\", true);\n        } // this.show('Regarding', false);\n\n      }\n    }\n\n    if (type === 'Assignee') {\n      if (value === '' || value === null) {\n        this.setState({\n          AssigneeError: true,\n          Assignee: value\n        });\n        this.show('Assignee', true);\n      } else {\n        this.setState({\n          AssigneeError: false,\n          Assignee: value\n        });\n        this.show('Assignee', false);\n      }\n    }\n  }\n\n  statusTemplate(rowData, column) {\n    let Status = rowData.Status;\n    let backgroundColor = Status == 'Open' ? '#D8D8D8' : Status == 'Completed' ? '#C5E0B3' : Status == 'In Progress' ? '#F7CAAC' : '#F72A00';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: backgroundColor,\n        borderRadius: 5,\n        paddingLeft: 3,\n        paddingRight: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 16\n      }\n    }, rowData.Status);\n  }\n\n  onBrandChange(event) {\n    this.dt.filter(event.value, 'brand', 'equals');\n    this.setState({\n      brand: event.value\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Edit\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      icon: \"pi pi-pencil\",\n      className: \"p-button-warning\",\n      style: {\n        marginRight: '.5em'\n      },\n      onClick: () => this.editTask(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Delete\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      onClick: () => this.DeleteTaskModal(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  goBack() {\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: t(\"contactTask:Table_header.\" + col.header + \"\"),\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      xs: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AddContactNav, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 25\n      }\n    }, t(\"contactTask:taskTitle\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      size: \"30\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: t(\"contactTask:toggleColumn\"),\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltip: t(\"contactTask:addTask\"),\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.addMoreTask(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Task List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"250px\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"265px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 25\n      }\n    }, columns))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModalDel,\n      toggle: this.toggleLargeDel,\n      className: 'modal-primary ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLargeDel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 21\n      }\n    }, \"Delete Task\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 21\n      }\n    }, \"Are you sure you want to delete task?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.DeleteTask(this.state.taskID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 97\n      }\n    }), \" Yes\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLargeDel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 75\n      }\n    }), \" Close\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModalAdd,\n      toggle: this.toggleLargeAdd,\n      className: 'modal-primary taskModel' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLargeAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 21\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 85\n      }\n    }, t(\"contactTask:editTask\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 126\n      }\n    }, t(\"contactTask:addTask\"))), /*#__PURE__*/React.createElement(ScrollPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Title.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 20,\n        maxWidth: 205\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"TaskTitle\",\n      id: \"TaskTitle\",\n      onChange: e => this.handleChange(e),\n      placeholder: t(\"contactTask:Title.placeholder\"),\n      maxLength: \"30\",\n      value: this.state.TaskTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 41\n      }\n    }, \" \", t(\"contactTask:Title.error_blank\"), \" \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Task_Followers.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      name: \"Task_Followers\",\n      id: \"Task_Followers\",\n      optionLabel: \"name\",\n      style: {\n        width: \"200px\"\n      },\n      value: this.state.Task_Followers,\n      options: this.state.Task_Followersarr,\n      onChange: e => this.mulSelVal(e),\n      filter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Task_Followers.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Assignee:label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Assignee\",\n      id: \"Assignee\",\n      onChange: e => this.selectType(e.target.value, 'Assignee'),\n      value: this.state.Assignee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 45\n      }\n    }, t(\"contactTask:Assignee.placeholder\")), this.state.Assigneearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Assignee.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Priority.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 37\n      }\n    }, this.state.isEdit == true ? /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Priority\",\n      id: \"Priority\",\n      onChange: e => this.selectType(e.target.value, 'Priority'),\n      value: this.state.Priority,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 49\n      }\n    }, t(\"contactTask:Priority.placeholder\")), this.state.Priorityarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 61\n        }\n      }, type.value);\n    })) : /*#__PURE__*/React.createElement(Input, {\n      disabled: true,\n      type: \"select\",\n      name: \"Priority\",\n      id: \"Priority\",\n      onChange: e => this.selectType(e.target.value, 'Priority'),\n      value: this.state.Priority,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 53\n      }\n    }, t(\"contactTask:Priority.placeholder\")), this.state.Priorityarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 65\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Priority.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Type.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Type\",\n      id: \"Type\",\n      onChange: e => this.selectType(e.target.value, 'Type'),\n      value: this.state.Type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 45\n      }\n    }, t(\"contactTask:Type.placeholder\")), this.state.TaskTypearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Type.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Status.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 37\n      }\n    }, this.state.isEdit == true ? /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Status\",\n      id: \"Status\",\n      onChange: e => this.selectType(e.target.value, 'Status'),\n      value: this.state.Status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 45\n      }\n    }, t(\"contactTask:Status.placeholder\")), this.state.Statusarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.placeholder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 57\n        }\n      }, type.value);\n    })) : /*#__PURE__*/React.createElement(Input, {\n      disabled: true,\n      type: \"select\",\n      name: \"Status\",\n      id: \"Status\",\n      onChange: e => this.selectType(e.target.value, 'Status'),\n      value: this.state.Status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 49\n      }\n    }, t(\"contactTask:Status.placeholder\")), this.state.Statusarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 61\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Status.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Due_Date.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      name: \"DueDate\",\n      id: \"DueDate\",\n      onChange: e => this.setState({\n        DueDate: e\n      }),\n      value: this.state.DueDate,\n      minDate: Moment().toDate(),\n      className: \"\",\n      calendarClassName: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 40\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Regarding.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Regarding\",\n      id: \"Regarding\",\n      onChange: e => this.selectType(e.target.value, 'Regarding'),\n      value: this.state.Regarding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 45\n      }\n    }, t(\"contactTask:Regarding.placeholder\")), this.state.Regardingarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Regarding.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"RegardingInput\",\n      id: \"RegardingInput\",\n      onChange: e => this.handleChange(e),\n      placeholder: t(\"contactTask:Regarding_Value.placeholder\"),\n      maxLength: \"38\",\n      value: this.state.RegardingInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Regarding_Value.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Details.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"Details\",\n      id: \"Details\",\n      onChange: e => this.handleChange(e),\n      placeholder: t(\"contactTask:Details.placeholder\"),\n      maxLength: \"500\",\n      value: this.state.Details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 41\n      }\n    }, t(\"contactTask:Details.error_blank\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 37\n      }\n    }, t(\"contactTask:Notes_addon.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"file\",\n      name: \"noteaddon\",\n      id: \"noteaddon\",\n      onChange: this.selectImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      className: \"pull-right\",\n      style: {\n        backgroundColor: \"#fff\",\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginRight: 10,\n        marginTop: 20,\n        border: \"none\"\n      },\n      onClick: () => this.saveTask(),\n      icon: \"pi pi-check\",\n      label: this.state.isEdit ? t(\"buttons.Edit\") : t(\"buttons.Save\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginRight: 10,\n        marginTop: 20,\n        border: \"none\"\n      },\n      onClick: () => this.CancleTask(),\n      icon: \"pi pi-times\",\n      label: t(\"buttons.Close\"),\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default withTranslation()(tasks);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/tasks.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","Button","toast","Modal","ModalHeader","ModalBody","ModalFooter","Col","Row","Input","InputGroup","BTN","ScrollPanel","withTranslation","DatePicker","Moment","AddContactNav","api","CommonConfig","APIConstant","tasks","constructor","props","reset","setState","isTaskEdit","TaskTitle","Task_Followers","Task_FollowersError","Assignee","AssigneeError","Priority","state","PriorityError","Type","TaskTitleError","Status","statusError","DueDate","DueDateError","Regarding","RegardingError","RegardingInput","RegardingInputError","Details","DetailsError","userImgData","noteaddon","taskID","isEdit","addMoreTask","openModalAdd","toggleLargeDel","toggleModalDel","toggleLargeAdd","toggleModalAdd","DeleteTaskModal","rowdata","Taskid","openModalDel","DeleteTask","post","taskId","then","res","success","getTasks","catch","err","saveTask","TypeError","data","trim","userImg","document","getElementById","value","closeModelAdd","console","log","show","mulSelVal","e","length","handleChange","target","name","isEmpty","getPageString","firstPage","first","l","rows","page","lastPage","arr","str","selectedPage","rowsPerPage","selectImage","event","files","reader","FileReader","onload","result","readAsDataURL","columns","field","header","sortable","filter","id","body","statusTemplate","actionTemplate","bind","brand","colors","cols","rowData","rowsPerPageOptions","dataTableConfig","globalFilter","isTrigerred","isSelected","Assigneearr","Task_Followersarr","Priorityarr","TaskTypearr","Statusarr","Regardingarr","From_user","From_userError","taskfollowerid","colOptions","col","push","label","onColumnToggle","onBrandChange","export","componentDidMount","getAssignee","getTask_Followers","getPriorityType","getTaskType","getTaskStatus","getTaskRegardings","formattedData","i","Updated","UpdatedOn","undefined","format","dateFormat","dateTime","TaskFollowerID","TaskId","Assigneeid","TaskAssignee","Reporter","FromUser","AssigneeName","Title","TaskStatus","TaskType","Task_Follower","FollowerName","Follower_Id","Followerid","RegardingDetails","RegardingValue","Created","CreatedOn","PersonId","Forename","code","stringmaptype","path","dropdownbycode","StringMapName","Description","error","Regardings","editTask","TaskFollower_ID","split","Follower_id","taskFollower_id","record","find","x","CancleTask","condition","className","selectType","type","column","backgroundColor","borderRadius","paddingLeft","paddingRight","dt","exportCSV","valueInOrder","sort","y","position","marginRight","goBack","history","render","t","map","margin","columnToggleIcon","width","el","marginLeft","marginTop","fontSize","maxWidth","placeholder","toDate","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { toast } from 'react-toastify';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Col, Row, Input, InputGroup, Button as BTN } from 'reactstrap';\r\nimport { ScrollPanel } from 'primereact/scrollpanel';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DatePicker from 'react-date-picker';\r\nimport Moment from \"moment\";\r\nimport AddContactNav from './DefaultAddContactNav';\r\nimport api from '../../utils/apiClient';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport APIConstant from '../../utils/constants';\r\n\r\nclass tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"id\", header: \"Id\", sortable: true, filter: true, id: 0 },\r\n            { field: \"Reporter\", header: \"Reporter\", sortable: true, filter: true, id: 1 },\r\n            { field: \"Assignee\", header: \"Assignee\", sortable: true, filter: true, id: 2 },\r\n            { field: \"Task_Follower\", header: \"TaskFollower\", sortable: true, filter: true, id: 3 },\r\n            { field: \"Title\", header: \"Title\", sortable: true, filter: true, id: 4 },\r\n            { field: \"Priority\", header: \"Priority\", sortable: true, filter: true, id: 5 },\r\n            { field: \"Type\", header: \"TasksType\", sortable: true, filter: true, id: 6 },\r\n            { field: \"DueDate\", header: \"DueDate\", sortable: true, filter: true, id: 7 },\r\n            { field: \"Created\", header: \"Created\", sortable: true, filter: true, id: 8 },\r\n            { field: \"Updated\", header: \"Updated\", sortable: true, filter: true, id: 9 },\r\n            { field: \"Status\", body: this.statusTemplate, header: \"Status\", sortable: true, filter: true, id: 10 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, id: 11 }\r\n        ];\r\n\r\n        this.state = {\r\n            brand: null,\r\n            colors: null,\r\n            toggleModalDel: false,\r\n            toggleModalAdd: false,\r\n            cols: columns,\r\n            arr: [],\r\n            rowData: '',\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            isTrigerred: true,\r\n\r\n            isSelected: true,\r\n\r\n            taskID: '',\r\n            TaskTitle: '',\r\n            TaskTitleError: true,\r\n\r\n            Assignee: '',\r\n            Assigneearr: [],\r\n            AssigneeError: true,\r\n\r\n            Task_Followers: '',\r\n            Task_Followersarr: [],\r\n            Task_FollowersError: true,\r\n\r\n            Priority: 'Normal',\r\n            Priorityarr: [],\r\n            PriorityError: false,\r\n\r\n            Type: '',\r\n            TaskTypearr: [],\r\n            TypeError: true,\r\n\r\n            Status: 'Open',\r\n            Statusarr: [],\r\n            statusError: false,\r\n\r\n            DueDate: '',\r\n            DueDateError: true,\r\n\r\n            Regarding: '',\r\n            Regardingarr: [],\r\n            RegardingError: true,\r\n\r\n            RegardingInput: '',\r\n            RegardingInputError: true,\r\n\r\n            Details: '',\r\n            DetailsError: true,\r\n\r\n            From_user: '',\r\n            From_userError: true,\r\n\r\n            isEdit: false,\r\n            taskfollowerid: '',\r\n\r\n            userImg: '',\r\n            userImgData: '',\r\n            noteaddon: '',\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.onBrandChange = this.onBrandChange.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.statusTemplate = this.statusTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTasks();\r\n        this.getAssignee();\r\n        this.getTask_Followers();\r\n        this.getPriorityType();\r\n        this.getTaskType();\r\n        this.getTaskStatus();\r\n        this.getTaskRegardings();\r\n        this.Task_Followers();\r\n    }\r\n\r\n    Task_Followers() {\r\n        api.post('api/taskFollowers').then(res => {\r\n            if (res.success) {\r\n                // console.log(\"taskFollowerssssss\", res);\r\n            }\r\n            else {\r\n                // console.log(\"Else\");\r\n            }\r\n        })\r\n    }\r\n\r\n    getTasks() {\r\n        api.post('api/getTasks').then(res => {\r\n            if (res.success) {\r\n                // console.log(\"getTasks\", res);\r\n                var formattedData = [];\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    var Updated = (res.data[i].UpdatedOn === undefined || res.data[i].UpdatedOn === null || res.data[i].UpdatedOn === \"\") ? (\"No Updates\") : (Moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateTime));\r\n                    formattedData.push({\r\n                        id: [i + 1],\r\n                        TaskFollowerID: res.data[i].TaskFollowerID,\r\n                        Taskid: res.data[i].TaskId,\r\n                        Assigneeid: res.data[i].TaskAssignee,\r\n                        Reporter: res.data[i].FromUser,\r\n                        Assignee: res.data[i].AssigneeName,\r\n                        Title: res.data[i].Title,\r\n                        Status: res.data[i].TaskStatus,\r\n                        Priority: res.data[i].Priority,\r\n                        Type: res.data[i].TaskType,\r\n                        Task_Follower: res.data[i].FollowerName,\r\n                        Follower_Id: res.data[i].Followerid,\r\n                        Regarding: res.data[i].Regarding,\r\n                        RegardingDetails: res.data[i].RegardingValue,\r\n                        Details: res.data[i].Details,\r\n                        DueDate: Moment(res.data[i].DueDate).format(CommonConfig.dateFormat.dateTime),\r\n                        Created: Moment(res.data[i].CreatedOn).format(CommonConfig.dateFormat.dateTime),\r\n                        Updated: Updated,\r\n                    });\r\n                    let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                    let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n\r\n                    this.setState({ arr: formattedData, str: str });\r\n                }\r\n            } else {\r\n                // console.log(\"Else\");\r\n\r\n            }\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    getAssignee() {\r\n        api.post('api/getAssignee').then(res => {\r\n            if (res.success) {\r\n                var Assignee = [];\r\n                for (let i = 0; i < res.data.length; i++) {\r\n\r\n                    Assignee.push({\r\n                        label: res.data[i].PersonId,\r\n                        value: res.data[i].Forename\r\n                    })\r\n                }\r\n                this.setState({ Assigneearr: Assignee });\r\n            }\r\n            else {\r\n                // console.log(\"Else\");\r\n            }\r\n        })\r\n    }\r\n\r\n    getTask_Followers() {\r\n        api.post('api/getTask_Followers').then(res => {\r\n            if (res.success) {\r\n                var Task_Followers = [];\r\n                for (let i = 0; i < res.data.length; i++) {\r\n                    Task_Followers.push({\r\n                        name: res.data[i].Forename,\r\n                        code: res.data[i].PersonId,\r\n                        taskfollowerid: ''\r\n                    })\r\n                }\r\n                this.setState({ Task_Followersarr: Task_Followers });\r\n            }\r\n            else {\r\n                // console.log(\"Else\");\r\n            }\r\n        })\r\n    }\r\n\r\n    getTaskStatus() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKSTATUS',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Status = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Status.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ Statusarr: Status });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getTaskRegardings() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKREGARDING',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Regardings = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Regardings.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ Regardingarr: Regardings });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getTaskType() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKTYPE',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Type = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Type.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ TaskTypearr: Type });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getPriorityType() {\r\n\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKPRIORITY',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Priority = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Priority.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ Priorityarr: Priority });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            isTaskEdit: false, TaskTitle: '',\r\n            Task_Followers: '', Task_FollowersError: true,\r\n            Assignee: '', AssigneeError: true,\r\n            Priority: this.state.Priority, PriorityError: false,\r\n            Type: '', TaskTitleError: true,\r\n            Status: this.state.Status, statusError: false,\r\n            DueDate: '', DueDateError: true,\r\n            Regarding: '', RegardingError: true,\r\n            RegardingInput: '', RegardingInputError: true,\r\n            Details: '', DetailsError: true,\r\n            userImgData: '', noteaddon: '',\r\n            taskID: '', isEdit: false\r\n        });\r\n    }\r\n\r\n    editTask(rowData) {\r\n        // console.log(\"rowData\", rowData);\r\n\r\n        var TaskFollower_ID = rowData.TaskFollowerID.split(',');\r\n        // console.log(\"TaskFollower_ID\", TaskFollower_ID);\r\n\r\n        var Follower_id = rowData.Follower_Id.split(',');\r\n        var taskFollower_id = [];\r\n        for (var i = 0; i < Follower_id.length; i++) {\r\n            let record = this.state.Task_Followersarr.find(x => x.code == Follower_id[i]);\r\n            record.taskfollowerid = TaskFollower_ID[i];\r\n            record.isEdit = this.state.isEdit;\r\n            taskFollower_id.push(record);\r\n        }\r\n\r\n\r\n        this.setState({\r\n            toggleModalAdd: true,\r\n            taskID: rowData.Taskid, TaskTitle: rowData.Title,\r\n            Task_Followers: taskFollower_id,\r\n            Task_FollowersError: false,\r\n            Assignee: rowData.Assigneeid, AssigneeError: false,\r\n            Priority: rowData.Priority, PriorityError: false,\r\n            Type: rowData.Type, TypeError: false, TaskTitleError: false,\r\n            Status: rowData.Status, statusError: false,\r\n            DueDate: Moment(rowData.DueDate, CommonConfig.dateFormat.dateTime).format('YYYY-MM-DD'), DueDateError: false,\r\n            Regarding: rowData.Regarding, RegardingError: false,\r\n            RegardingInput: rowData.RegardingDetails, RegardingInputError: false,\r\n            Details: rowData.Details, DetailsError: false,\r\n            From_userError: false, isEdit: true,\r\n        });\r\n        // console.log(\"Task_Followers\", this.state.Task_Followers);\r\n\r\n    }\r\n\r\n    addMoreTask = () => {\r\n        this.openModalAdd();\r\n    }\r\n\r\n    openModalDel() {\r\n        this.setState({ toggleModalDel: !this.state.toggleModalDel });\r\n    }\r\n\r\n    openModalAdd() {\r\n        this.reset();\r\n        this.setState({ toggleModalAdd: !this.state.toggleModalAdd });\r\n    }\r\n\r\n    toggleLargeDel = () => {\r\n        this.setState({ toggleModalDel: false });\r\n    }\r\n\r\n    toggleLargeAdd = () => {\r\n        this.reset();\r\n        this.setState({\r\n            toggleModalAdd: false, TaskTitle: '',\r\n            Task_Followers: '', Task_FollowersError: false,\r\n            Assignee: '', AssigneeError: false,\r\n            Priority: this.state.Priority, PriorityError: false,\r\n            Type: '', TaskTitleError: false,\r\n            Status: this.state.Status, statusError: false,\r\n            DueDate: '', DueDateError: false,\r\n            Regarding: '', RegardingError: false,\r\n            RegardingInput: '', RegardingInputError: false,\r\n            Details: '', DetailsError: false,\r\n            isEdit: false,\r\n\r\n        });\r\n    }\r\n\r\n    closeModelAdd() {\r\n        this.reset();\r\n        this.setState({ toggleModalAdd: false });\r\n    }\r\n\r\n    CancleTask() {\r\n        this.reset();\r\n        this.setState({ toggleModalAdd: false });\r\n    }\r\n\r\n    DeleteTaskModal = (rowdata) => {\r\n        this.setState({ taskID: rowdata.Taskid });\r\n        this.openModalDel(rowdata);\r\n    }\r\n\r\n    DeleteTask = (Taskid) => {\r\n        api.post('api/deleteTasks', { taskId: Taskid }).then(res => {\r\n            if (res.success) {\r\n                this.openModalDel();\r\n                this.getTasks();\r\n                toast.success('Task deleted successfully');\r\n            } else {\r\n\r\n            }\r\n        }).catch(err => {\r\n        });\r\n    }\r\n\r\n    saveTask = () => {\r\n        if (\r\n            this.state.TaskTitleError === false &&\r\n            this.state.PriorityError === false &&\r\n            this.state.statusError === false &&\r\n            this.state.TypeError === false &&\r\n            this.state.Task_FollowersError === false &&\r\n            this.state.DetailsError === false &&\r\n            this.state.AssigneeError === false &&\r\n            this.state.RegardingInputError === false\r\n        ) {\r\n            const data = {\r\n                'TaskTitle': this.state.TaskTitle.trim(),\r\n                'Assignee': this.state.Assignee,\r\n                'Priority': this.state.Priority,\r\n                'Type': this.state.Type,\r\n                'Status': this.state.Status,\r\n                'DueDate': this.state.DueDate,\r\n                'Regarding': this.state.Regarding,\r\n                'RegardingInput': this.state.RegardingInput,\r\n                'Details': this.state.Details.trim(),\r\n                'Task_Followers': this.state.Task_Followers,\r\n                'TaskId': this.state.taskID,\r\n                'isEdit': this.state.isEdit,\r\n                'noteaddon': this.state.userImg\r\n            };\r\n\r\n            api.post('api/addUpdateTasks', data).then(res => {\r\n                if (res.success) {\r\n                    document.getElementById(\"noteaddon\").value = null;\r\n                    toast.success('Task added successfully');\r\n                    this.closeModelAdd();\r\n                    this.getTasks();\r\n                    this.reset();\r\n                } else {\r\n                    console.log(\"Error\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        } else {\r\n            this.show(\"TaskTitle\", this.state.TaskTitleError);\r\n            if (this.state.isEdit) {\r\n                this.show(\"Priority\", this.state.PriorityError);\r\n                this.show(\"Status\", this.state.statusError);\r\n            }\r\n            this.show(\"Type\", this.state.TypeError);\r\n            this.show(\"Task_Followers\", this.state.Task_FollowersError);\r\n            this.show(\"Details\", this.state.DetailsError);\r\n            this.show(\"Assignee\", this.state.AssigneeError);\r\n            this.show(\"RegardingInput\", this.state.RegardingInputError);\r\n\r\n        }\r\n    }\r\n\r\n    show(field, condition) {\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    mulSelVal = (e) => {\r\n        if (e.value.length == 0) {\r\n            this.setState({ Task_FollowersError: true, Task_Followers: e.value });\r\n            this.show('Task_Followers', true);\r\n        } else {\r\n            this.setState({ Task_FollowersError: false, Task_Followers: e.value });\r\n            this.show('Task_Followers', false);\r\n        }\r\n        // console.log(\"Afdsas\", this.state.Task_Followers);\r\n\r\n    }\r\n\r\n    selectType(value, type) {\r\n        if (type === 'Priority') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ PriorityError: true, Priority: value });\r\n                this.show('Priority', true);\r\n            } else {\r\n                this.setState({ PriorityError: false, Priority: value });\r\n                this.show('Priority', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'Type') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ TypeError: true, Type: value });\r\n                this.show('Type', true);\r\n            } else {\r\n                this.setState({ TypeError: false, Type: value });\r\n                this.show('Type', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'Status') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ statusError: true, Status: value });\r\n                this.show('Status', true);\r\n            } else {\r\n                this.setState({ statusError: false, Status: value });\r\n                this.show('Status', false);\r\n            }\r\n        }\r\n\r\n\r\n        if (type === 'Regarding') {\r\n            this.setState({ RegardingInputError: false, RegardingInput: '' });\r\n            this.show(\"RegardingInput\", false);\r\n            if (value === '' || value === null) {\r\n                this.setState({ Regarding: value });\r\n                // this.show('Regarding', true);\r\n            } else {\r\n                this.setState({ Regarding: value });\r\n                if (this.state.RegardingInput == '') {\r\n                    this.setState({ RegardingInputError: true });\r\n                    this.show(\"RegardingInput\", true);\r\n                }\r\n                // this.show('Regarding', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'Assignee') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ AssigneeError: true, Assignee: value });\r\n                this.show('Assignee', true);\r\n            } else {\r\n                this.setState({ AssigneeError: false, Assignee: value });\r\n                this.show('Assignee', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'TaskTitle') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ TaskTitleError: true });\r\n                this.show(\"TaskTitle\", true);\r\n            } else {\r\n                this.setState({ TaskTitleError: false, TaskTitle: e.target.value });\r\n                this.show(\"TaskTitle\", false);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'RegardingInput') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                if (this.state.Regarding != '') {\r\n                    this.setState({ RegardingInputError: true });\r\n                    this.show(\"RegardingInput\", true);\r\n                }\r\n            } else {\r\n                if (this.state.Regarding != '') {\r\n                    this.setState({ RegardingInputError: false });\r\n                    this.show(\"RegardingInput\", false);\r\n                }\r\n                this.setState({ RegardingInput: e.target.value });\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'Details') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ DetailsError: true });\r\n                this.show(\"Details\", true);\r\n            } else {\r\n                this.setState({ DetailsError: false, Details: e.target.value });\r\n                this.show(\"Details\", false);\r\n            }\r\n        }\r\n    }\r\n\r\n    statusTemplate(rowData, column) {\r\n\r\n        let Status = rowData.Status;\r\n        let backgroundColor = Status == 'Open' ? '#D8D8D8' : (Status == 'Completed') ? '#C5E0B3' : (Status == 'In Progress') ? '#F7CAAC' : '#F72A00';\r\n        return <div style={{ backgroundColor: backgroundColor, borderRadius: 5, paddingLeft: 3, paddingRight: 3 }}>{rowData.Status}</div>;\r\n    }\r\n\r\n    onBrandChange(event) {\r\n        this.dt.filter(event.value, 'brand', 'equals');\r\n        this.setState({ brand: event.value });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <Button type=\"button\" tooltip=\"Edit\" tooltipOptions={{ position: 'bottom' }} icon=\"pi pi-pencil\" className=\"p-button-warning\" style={{ marginRight: '.5em' }} onClick={() => this.editTask(rowData)}></Button>\r\n            <Button type=\"button\" tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }} icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={() => this.DeleteTaskModal(rowData)}></Button>\r\n        </div>;\r\n    }\r\n\r\n    goBack() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    selectImage = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ userImgData: event.target.files[0] });\r\n            let reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                this.setState({ userImg: e.target.result });\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={t(\"contactTask:Table_header.\"+col.header+\"\")} body={col.body} sortable={col.sortable} filter={col.filter} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div xs=\"12\" md=\"12\">\r\n                    <Row>\r\n                        <Col xs=\"12\" md=\"12\">\r\n                            <AddContactNav {...this.props} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"basic-header\">\r\n                        <h1>{t(\"contactTask:taskTitle\")}</h1>\r\n                        <div className=\"header-right-option\">\r\n                            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n                            <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" size=\"30\" style={{ marginRight: 10 }} />\r\n\r\n                            <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                                fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip={t(\"contactTask:toggleColumn\")}\r\n                                onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                            />\r\n\r\n                            <Button type=\"button\" icon=\"pi pi-plus\" tooltip={t(\"contactTask:addTask\")} tooltipOptions={{ position: 'bottom' }} onClick={() => this.addMoreTask()}></Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"content-section introduction row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"feature-intro col-md-6\">\r\n                            <h1></h1>\r\n                        </div>\r\n\r\n                    </div> */}\r\n\r\n                    <div className=\"table-custom\">\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                            paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.arr.length} exportFilename=\"Task List\"\r\n                            currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"250px\"\r\n                            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                            responsive={true} resizableColumns={true} columnResizeMode=\"fit\"\r\n                            scrollable={true} scrollHeight=\"265px\">\r\n                            {columns}\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.toggleModalDel} toggle={this.toggleLargeDel} className={'modal-primary ' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLargeDel}>Delete Task</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure you want to delete task?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.DeleteTask(this.state.taskID)}><i class=\"fa fa-check\"></i> Yes</BTN>{' '}\r\n                        <BTN color=\"primary\"onClick={this.toggleLargeDel}><i class=\"fa fa-close\"></i> Close</BTN>\r\n                        {/* <button color=\"primary\" onClick={() => this.DeleteTask(this.state.taskID)}>Yes</button>\r\n                        <button color=\"secondary\" onClick={this.toggleLargeDel}>Cancel</button> */}\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.toggleModalAdd} toggle={this.toggleLargeAdd}\r\n                    className={'modal-primary taskModel' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLargeAdd}>{(this.state.isEdit)?(<div>{t(\"contactTask:editTask\")}</div>):(<div>{t(\"contactTask:addTask\")}</div>)}</ModalHeader>\r\n                    <ScrollPanel>\r\n                        <div style={{ marginLeft: 20 }}>\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 20 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Title.label\")}*</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 20, maxWidth: 205 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"text\" name=\"TaskTitle\" id=\"TaskTitle\" onChange={e => this.handleChange(e)} placeholder={t(\"contactTask:Title.placeholder\")} maxLength=\"30\" value={this.state.TaskTitle} />\r\n                                        <em className=\"error invalid-feedback\"> {t(\"contactTask:Title.error_blank\")} </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Task_Followers.label\")}*</label>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <MultiSelect name=\"Task_Followers\" id=\"Task_Followers\" optionLabel=\"name\" style={{ width: \"200px\" }} value={this.state.Task_Followers} options={this.state.Task_Followersarr}\r\n                                            onChange={(e) => this.mulSelVal(e)}\r\n                                            filter={true} />\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Task_Followers.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Assignee:label\")}*</label>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Assignee\" id=\"Assignee\" onChange={(e) => this.selectType(e.target.value, 'Assignee')} value={this.state.Assignee}>\r\n                                            <option value=''>{t(\"contactTask:Assignee.placeholder\")}</option>\r\n                                            {this.state.Assigneearr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Assignee.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Priority.label\")}*</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        {(this.state.isEdit == true) ? (\r\n                                            <Input type=\"select\" name=\"Priority\" id=\"Priority\" onChange={(e) => this.selectType(e.target.value, 'Priority')} value={this.state.Priority}>\r\n                                                <option value=''>{t(\"contactTask:Priority.placeholder\")}</option>\r\n                                                {this.state.Priorityarr.map((type, i) => {\r\n                                                    return (<option value={type.label}>{type.value}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                        ) : (\r\n                                                <Input disabled={true} type=\"select\" name=\"Priority\" id=\"Priority\" onChange={(e) => this.selectType(e.target.value, 'Priority')} value={this.state.Priority}>\r\n                                                    <option value=''>{t(\"contactTask:Priority.placeholder\")}</option>\r\n                                                    {this.state.Priorityarr.map((type, i) => {\r\n                                                        return (<option value={type.label}>{type.value}</option>)\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                            )}\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Priority.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Type.label\")}*</label>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Type\" id=\"Type\" onChange={(e) => this.selectType(e.target.value, 'Type')} value={this.state.Type}>\r\n                                            <option value=''>{t(\"contactTask:Type.placeholder\")}</option>\r\n                                            {this.state.TaskTypearr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Type.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Status.label\")}*</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        {(this.state.isEdit == true) ? (<Input type=\"select\" name=\"Status\" id=\"Status\" onChange={(e) => this.selectType(e.target.value, 'Status')} value={\r\n                                            this.state.Status}>\r\n                                            <option value=''>{t(\"contactTask:Status.placeholder\")}</option>\r\n                                            {this.state.Statusarr.map((type, i) => {\r\n                                                return (<option value={type.placeholder}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>)\r\n                                            :\r\n                                            (<Input disabled={true} type=\"select\" name=\"Status\" id=\"Status\" onChange={(e) => this.selectType(e.target.value, 'Status')} value={this.state.Status}>\r\n                                                <option value=''>{t(\"contactTask:Status.placeholder\")}</option>\r\n                                                {this.state.Statusarr.map((type, i) => {\r\n                                                    return (<option value={type.label}>{type.value}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>)}\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Status.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Due_Date.label\")}</label>\r\n                                </Col>\r\n                                <Col md=\"5\" style={{ marginTop: 25 }}>\r\n                                    {/* <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"date\" name=\"DueDate\" id=\"DueDate\" onChange={e => this.handleChange(e)} size=\"30\" value={this.state.DueDate} />\r\n                                        <em className=\"error invalid-feedback\"> Please enter Due Date </em>\r\n                                    </InputGroup> */}\r\n                                       <DatePicker name=\"DueDate\" id=\"DueDate\" onChange={e => this.setState({DueDate: e})}\r\n                                        value={this.state.DueDate} minDate={Moment().toDate()}\r\n                                        className=\"\" calendarClassName=\"\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Regarding.label\")}</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Regarding\" id=\"Regarding\" onChange={(e) => this.selectType(e.target.value, 'Regarding')} value={this.state.Regarding}>\r\n                                            <option value=''>{t(\"contactTask:Regarding.placeholder\")}</option>\r\n                                            {this.state.Regardingarr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Regarding.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n                                <Col md=\"5\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"text\" name=\"RegardingInput\" id=\"RegardingInput\" onChange={e => this.handleChange(e)} placeholder={t(\"contactTask:Regarding_Value.placeholder\")} maxLength=\"38\" value={this.state.RegardingInput} />\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Regarding_Value.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>{t(\"contactTask:Details.label\")}*</label>\r\n                                </Col>\r\n                                <Col md=\"9\" style={{ marginTop: 20 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"textarea\" name=\"Details\" id=\"Details\" onChange={e => this.handleChange(e)} placeholder={t(\"contactTask:Details.placeholder\")} maxLength=\"500\" value={this.state.Details} />\r\n                                        <em className=\"error invalid-feedback\">{t(\"contactTask:Details.error_blank\")}</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 20 }}>\r\n                                    <label>{t(\"contactTask:Notes_addon.label\")}</label>\r\n                                </Col>\r\n                                <Col md=\"5\" style={{ marginTop: 20 }}>\r\n                                    <div className=\"btn btn-primary\">\r\n                                        <Input type=\"file\" name=\"noteaddon\" id=\"noteaddon\" onChange={this.selectImage} />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"pull-right\" style={{ backgroundColor: \"#fff\", marginRight: 10 }}>\r\n                                <Button style={{ marginRight: 10, marginTop: 20, border: \"none\" }} onClick={() => this.saveTask()}\r\n                                    icon=\"pi pi-check\" label={this.state.isEdit ? t(\"buttons.Edit\") : t(\"buttons.Save\")} />\r\n                                <Button style={{ marginRight: 10, marginTop: 20, border: \"none\" }} onClick={() => this.CancleTask()}\r\n                                    icon=\"pi pi-times\" label={t(\"buttons.Close\")} color=\"red\" />\r\n                            </Row>\r\n                        </div>\r\n                    </ScrollPanel>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(tasks);"]},"metadata":{},"sourceType":"module"}