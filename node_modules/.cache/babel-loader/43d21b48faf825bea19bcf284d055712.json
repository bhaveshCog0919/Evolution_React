{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Apps/Email/Sent/Sent.js\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, Nav, NavItem, NavLink, FormGroup, Input, Col, ButtonDropdown, Table, DropdownToggle, DropdownMenu, DropdownItem, Badge, Button, ButtonGroup, Row } from 'reactstrap';\nimport APIConstant from '../../../../utils/constants';\nimport { CommonConfig } from '../../../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button as BTN } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport api from '../../../../utils/apiClient';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport moment from 'moment';\nimport { any } from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst simpleParser = require('mailparser').simpleParser;\n\nconst _ = require('lodash');\n\nclass Sent extends Component {\n  constructor(props) {\n    super(props);\n    let columns = [{\n      body: this.actionTemplate.bind(this),\n      style: {\n        width: '50px'\n      },\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      body: this.formatNameEmail.bind(this),\n      field: \"FromEmail\",\n      header: \"From\",\n      sortable: true,\n      filter: true,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      body: this.formatSubject.bind(this),\n      field: \"Subject\",\n      header: \"Subject\",\n      sortable: true,\n      filter: true,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      body: this.formatDate.bind(this),\n      field: \"CreatedOn\",\n      header: \"Date/Time\",\n      sortable: true,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 6\n    }];\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      editEmailData: '',\n      dropdownOpen: false,\n      emailList: [],\n      InboxCount: 0,\n      globalFilter: null,\n      cols: columns,\n      first: 1,\n      selectedEmail: [],\n      rows: 10,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage\n    };\n    this.getInbox();\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-warning\",\n      onClick: () => this.openDetail(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  onPage(event) {\n    let firstPage = event.first + 1;\n    let l = event.rows * (event.page + 1);\n    let lastPage = l < this.state.emailList.length ? l : this.state.emailList.length;\n    var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.emailList.length + ' records';\n    this.setState({\n      selectedPage: event.first,\n      str: str,\n      rowsPerPage: event.rows\n    });\n  }\n\n  formatDate(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, moment(rowData.CreatedOn).format(CommonConfig.dateFormat.dbDateTime)));\n  }\n\n  formatSubject(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, rowData.Subject, \" \", rowData.AttachCount > 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-paperclip\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 57\n      }\n    }, \"(\", rowData.AttachCount, \")\") : null));\n  }\n\n  formatNameEmail(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, rowData.FromName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, rowData.FromEmail));\n  }\n\n  getInbox() {\n    let data = {\n      \"boxName\": \"Sent\",\n      \"searchType\": \"ALL\",\n      \"PolicyId\": this.state.PolicyId\n    };\n    api.post(APIConstant.path.allEmail, data).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        this.setState({\n          emailList: res.data,\n          selectedEmail: []\n        });\n        let count = this.state.emailList.filter(item => {\n          if (item.IsViewed.data[0] == 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }).length;\n        this.setState({\n          InboxCount: count\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  openDetail(item) {\n    this.props.history.push({\n      pathname: '/apps/email/message',\n      state: {\n        type: \"sent\",\n        email: item,\n        InboxCount: this.state.InboxCount\n      }\n    });\n  }\n\n  rowClass(data) {\n    return {\n      'row-accessories': data.IsViewed.data[0] === 0\n    };\n  }\n\n  render() {\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email-app mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#/apps/email/compose\",\n      className: \"btn btn-danger btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"New Email\"), /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      href: \"#/apps/email/inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 52\n      }\n    }), \" Inbox \", /*#__PURE__*/React.createElement(Badge, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 90\n      }\n    }, this.state.InboxCount))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      href: \"#/apps/email/sent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 51\n      }\n    }), \" Sent \")))), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.emailList,\n      rowClassName: this.rowClass,\n      first: this.state.selectedPage,\n      onPage: e => this.onPage(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.emailList.length,\n      exportFilename: \"Email List\",\n      currentPageReportTemplate: this.state.str,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, columns)))));\n  }\n\n}\n\nexport default Sent;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Apps/Email/Sent/Sent.js"],"names":["React","Component","Modal","ModalHeader","ModalBody","Nav","NavItem","NavLink","FormGroup","Input","Col","ButtonDropdown","Table","DropdownToggle","DropdownMenu","DropdownItem","Badge","Button","ButtonGroup","Row","APIConstant","CommonConfig","BTN","InputText","api","DataTable","Column","moment","any","toast","simpleParser","require","_","Sent","constructor","props","columns","body","actionTemplate","bind","style","width","header","sortable","filter","filterMatchMode","id","formatNameEmail","field","formatSubject","formatDate","toggle","state","editEmailData","dropdownOpen","emailList","InboxCount","globalFilter","cols","first","selectedEmail","rows","rowsPerPageOptions","dataTableConfig","rowsPerPage","getInbox","rowData","column","openDetail","marginRight","position","onPage","event","firstPage","l","page","lastPage","length","str","setState","selectedPage","CreatedOn","format","dateFormat","dbDateTime","Subject","AttachCount","FromName","FromEmail","data","PolicyId","post","path","allEmail","then","res","console","log","success","count","item","IsViewed","catch","err","history","push","pathname","type","email","rowClass","render","map","col","i","el","dt","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, Nav, NavItem, NavLink, FormGroup, Input, Col, ButtonDropdown, Table, DropdownToggle, DropdownMenu, DropdownItem, Badge, Button, ButtonGroup, Row } from 'reactstrap';\nimport APIConstant from '../../../../utils/constants';\nimport { CommonConfig } from '../../../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button as BTN } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport api from '../../../../utils/apiClient';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport moment from 'moment';\nimport { any } from 'prop-types';\nimport { toast } from 'react-toastify';\nconst simpleParser = require('mailparser').simpleParser;\nconst _ = require('lodash');\n\nclass Sent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let columns = [\n      { body: this.actionTemplate.bind(this), style: { width: '50px' }, header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 0 },\n      { body: this.formatNameEmail.bind(this), field: \"FromEmail\", header: \"From\", sortable: true, filter: true, filter: false, filterMatchMode: 'contains', id: 3 },\n      { body: this.formatSubject.bind(this), field: \"Subject\", header: \"Subject\", sortable: true, filter: true, filter: false, filterMatchMode: 'contains', id: 5 },\n      { body: this.formatDate.bind(this), field: \"CreatedOn\", header: \"Date/Time\", sortable: true, filter: false, filterMatchMode: 'contains', id: 6 },\n    ];\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      editEmailData: '',\n      dropdownOpen: false,\n      emailList: [],\n      InboxCount: 0,\n      globalFilter: null,\n      cols: columns,\n      first: 1,\n      selectedEmail: [],\n      rows: 10,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n    };\n    \n    this.getInbox()\n  }\n\n  actionTemplate(rowData, column) {\n    return <div className=\"policy-list-data\">\n      <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.openDetail(rowData)}\n        style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\n      </BTN>\n    </div>;\n  }\n\n  onPage(event) {\n    let firstPage = event.first + 1;\n    let l = event.rows * (event.page + 1);\n    let lastPage = (l < this.state.emailList.length) ? l : this.state.emailList.length\n    var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.emailList.length + ' records';\n    this.setState({ selectedPage: event.first, str: str, rowsPerPage: event.rows });\n  }\n\n  formatDate(rowData) {\n    return (\n      <div className=\"policy-list-data\">\n        <p>{moment(rowData.CreatedOn).format(CommonConfig.dateFormat.dbDateTime)}</p>\n      </div>\n    )\n  }\n\n  formatSubject(rowData) {\n    return (\n      <div className=\"policy-list-data\">\n        <p>{rowData.Subject} {rowData.AttachCount > 0 ? <i class=\"fa fa-paperclip\" aria-hidden=\"true\">({rowData.AttachCount})</i> : (null)}</p>\n      </div>\n    )\n  }\n\n  formatNameEmail(rowData) {\n    return (\n      <div className=\"policy-list-data\">\n        <p>{rowData.FromName}</p>\n        <p>{rowData.FromEmail}</p>\n      </div>\n    )\n  }\n\n  getInbox() {\n    let data = {\n      \"boxName\": \"Sent\",\n      \"searchType\": \"ALL\",\n      \"PolicyId\":this.state.PolicyId\n    }\n    api.post(APIConstant.path.allEmail, data).then(res => {\n      console.log(res)\n      if (res.success) {\n        this.setState({ emailList: res.data ,selectedEmail:[]});\n        let count = this.state.emailList.filter((item) => {\n          if (item.IsViewed.data[0] == 0) {\n            return true\n          } else {\n            return false\n          }\n        }).length\n        this.setState({ InboxCount: count })\n      }\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  openDetail(item) {\n    this.props.history.push({\n      pathname: '/apps/email/message',\n      state: {\n        type:\"sent\",\n        email: item,\n        InboxCount: this.state.InboxCount\n      }\n    });\n  }\n\n  rowClass(data) {\n    return {\n      'row-accessories': data.IsViewed.data[0] === 0\n    }\n  }\n\n  render() {\n\n    let columns = this.state.cols.map((col, i) => {\n      return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\n    });\n\n    return (\n      <div className=\"animated fadeIn\">\n        <div className=\"email-app mb-4\">\n          <nav>\n            <a href=\"#/apps/email/compose\" className=\"btn btn-danger btn-block\">New Email</a>\n            <Nav>\n              <NavItem>\n                <NavLink href=\"#/apps/email/inbox\"><i className=\"fa fa-inbox\"></i> Inbox <Badge color=\"danger\">{this.state.InboxCount}</Badge></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#/apps/email/sent\"><i className=\"fa fa-inbox\"></i> Sent </NavLink>\n              </NavItem>\n            </Nav>\n          </nav>\n          <main className=\"inbox\">\n            <ul className=\"messages\">\n              <DataTable\n                ref={(el) => this.dt = el}\n                value={this.state.emailList}\n                rowClassName={this.rowClass}\n                first={this.state.selectedPage}\n                onPage={(e) => this.onPage(e)}\n                paginator={true}\n                rows={this.state.rowsPerPage}\n                totalRecords={this.state.emailList.length}\n                exportFilename=\"Email List\"\n                currentPageReportTemplate={this.state.str}\n                paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                rowsPerPageOptions={this.state.rowsPerPageOptions}\n                globalFilter={this.state.globalFilter}\n                emptyMessage=\"No records found\"\n                responsive={true}\n                resizableColumns={true}\n                columnResizeMode=\"fit\"\n                scrollable={true}\n                scrollHeight=\"340px\">\n                {columns}\n              </DataTable>\n            </ul>\n          </main>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sent;\n"]},"metadata":{},"sourceType":"module"}