{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/New Policy/GenerateQuote.js\";\nimport React, { Component } from 'react';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Card, CardBody, Col, Row, Input, Button as BTN, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Calendar } from 'primereact/calendar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig, Regex } from '../../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { number } from 'prop-types';\nconst Coverage = [{\n  value: 252.26\n}, {\n  value: 80.00\n}, {\n  value: 20.00\n}];\n\nclass GenerateQuote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPremiumAndCoverage = type => {\n      const data = {\n        LiabilityType: type,\n        Country: this.state.country,\n        VesselType: this.state.vesselTypeName,\n        PolicyId: this.state.policyId\n      };\n      api.post('api/getPremiumAndCoverage', data).then(res => {\n        if (res.success) {\n          let totalpremiumThirdParty = res.data[0].PremiumAmount;\n\n          if (this.state.premiumType == 'ThirdParty') {\n            this.setState({\n              totalpremiumThirdParty: res.data[0].PremiumAmount\n            });\n          } else {\n            {\n              this.state.AddOnCoverage.map((value, i) => {\n                totalpremiumThirdParty = totalpremiumThirdParty + value.AddOnCoveragePremiumAmount;\n              });\n            }\n          }\n\n          if (this.state.premiumType == 'Comprehensive') {\n            let totalP = Number(this.state.total) + Number(this.state.totalAddOn);\n            this.setState({\n              totalPremium: totalP\n            });\n          } else {\n            this.setState({\n              totalPremium: totalpremiumThirdParty.toFixed(2)\n            });\n          }\n\n          this.setState({\n            liabilityCoveredAmount: res.data[0].CoveredAmount,\n            policyPremium: res.data[0].PremiumAmount.toFixed(2)\n          });\n        } else {}\n      }).catch(err => {});\n    };\n\n    this.toggleLarge = modal => {\n      if (modal == 'Assumption') {\n        this.setState({\n          toggleAssumption: false\n        });\n      } else if (modal == 'TermsAndCondition') {\n        this.setState({\n          toggleTermsAndCondition: false\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'assumptionAndTerms') {\n        if (e.target.checked) {\n          this.setState({\n            assumptionAndTerms: e.target.checked,\n            assumptionAndTermsError: false\n          });\n        } else {\n          this.setState({\n            assumptionAndTerms: e.target.checked,\n            assumptionAndTermsError: true\n          });\n        }\n      }\n\n      if (e.target.name === 'refrred') {\n        if (e.target.checked) {\n          this.setState({\n            refrred: e.target.checked,\n            refrredError: false\n          });\n        } else {\n          this.setState({\n            refrred: e.target.checked,\n            refrredError: true\n          });\n        }\n      }\n\n      if (e.target.name === 'accountName') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            accountNameError: true\n          });\n          this.show(\"accountName\", true, \"accountNameError\", \"Please enter Account Name \");\n        } else {\n          let nameRegEx = CommonConfig.RegExp.nameWithSpace;\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              accountNameError: true\n            });\n            this.show(\"accountName\", true, \"accountNameError\", \"Please enter valid Account Name\");\n          } else {\n            this.setState({\n              accountNameError: false,\n              accountName: e.target.value\n            });\n            this.show(\"accountName\", false, \"accountNameError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'bankName') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            bankNameError: true\n          });\n          this.show(\"bankName\", true, \"bankNameError\", \"Please enter Bank Name\");\n        } else {\n          let nameRegEx = CommonConfig.RegExp.nameWithSpace;\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              bankNameError: true\n            });\n            this.show(\"bankName\", true, \"bankNameError\", \"Please enter valid Bank Name\");\n          } else {\n            this.setState({\n              bankNameError: false,\n              bankName: e.target.value\n            });\n            this.show(\"bankName\", false, \"bankNameError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'IBAN') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            IBANError: true\n          });\n          this.show(\"IBAN\", true, \"IBANError\", \"Please enter IBAN Number\");\n        } else {\n          let nameRegEx = CommonConfig.RegExp.alphaNumeric;\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              IBANError: true\n            });\n            this.show(\"IBAN\", true, \"IBANError\", \"Please enter valid IBAN Number\");\n          } else {\n            if (e.target.value.length > 34) {\n              this.setState({\n                IBANError: true,\n                IBAN: this.state.IBAN\n              });\n              this.show(\"IBAN\", true, \"IBANError\", \"Please enter less than 34\");\n            } else {\n              this.setState({\n                IBANError: false,\n                IBAN: e.target.value\n              });\n              this.show(\"IBAN\", false, \"IBANError\", \"\");\n            }\n          }\n        }\n      }\n\n      if (e.target.name === 'BIC') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            BICError: true\n          });\n          this.show(\"BIC\", true, \"BICError\", \"Please enter BIC Number\");\n        } else {\n          let nameRegEx = CommonConfig.RegExp.alphaNumeric;\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              BICError: true\n            });\n            this.show(\"BIC\", true, \"BICError\", \"Please enter valid BIC Number\");\n          } else {\n            if (e.target.value.length < 8 || e.target.value.length > 11) {\n              this.setState({\n                BICError: true,\n                BIC: e.target.value\n              });\n              this.show(\"BIC\", true, \"BICError\", \"BIC number must be between 8 to 11 Characters\");\n            } else {\n              this.setState({\n                BICError: false,\n                BIC: e.target.value\n              });\n              this.show(\"BIC\", false, \"BICError\", \"\");\n            }\n          }\n        }\n      }\n    };\n\n    this.Back = () => {\n      this.props.history.push({\n        pathname: '/PolicyList'\n      });\n    };\n\n    this.Save = CoverageAlready => {\n      let data = {\n        CoverageAlreadyList: CoverageAlready,\n        PolicyId: this.state.policyId\n      };\n      api.post('api/addPolicyCovarage', data).then(res => {\n        if (res.data.success) {\n          toast.success(res.data.message);\n          this.getPolicyAddOnCoverage();\n          this.toggleSave();\n        } else {}\n      }).catch(err => {});\n    };\n\n    this.toggleSave = () => {\n      this.setState({\n        toggleSaveModal: false,\n        tempdata: []\n      });\n    };\n\n    this.toggleDelete = () => {\n      this.setState({\n        toggleDeleteModal: false,\n        tempdata: []\n      });\n    };\n\n    this.state = {\n      policyId: '',\n      entityId: '',\n      entityType: 'Person',\n      radioSelected: \"bankPayment\",\n      policyNumber: '',\n      policyType: '',\n      phone: '',\n      language: '',\n      policyHolder: '',\n      country: '',\n      email: '',\n      refrred: false,\n      showRefer: false,\n      policyReferNotes: [],\n      binder: '',\n      subBinder: '',\n      insuranceCompany: '',\n      baseRateType: '',\n      baseRate: '',\n      excess: '',\n      levy: '',\n      adminFee: '',\n      total: 0,\n      totalAddOn: 0,\n      vesselTypeId: '',\n      vesselClassId: '',\n      vesselClassName: '',\n      inceptionDate: '',\n      premiumType: '',\n      premiumTypeError: true,\n      premiumPolicyType: [],\n      AddOnCoverage: [],\n      CoverageAvailable: [],\n      CoverageAlreadyList: [],\n      toggleSaveModal: false,\n      toggleDeleteModal: false,\n      tempdata: [],\n      entityBankDetailId: '',\n      accountName: '',\n      accountNameError: true,\n      bankName: '',\n      bankNameError: true,\n      bankCountry: '',\n      bankCountryError: true,\n      countryList: [],\n      IBAN: '',\n      IBANError: true,\n      BIC: '',\n      BICError: true,\n      bankExists: 0,\n      assumptionCount: '',\n      assumptionArr: [],\n      liabilityCoveredAmount: '00',\n      policyPremium: '00',\n      totalPremium: '00',\n      assumptionAndTerms: false,\n      assumptionAndTermsError: false,\n      ButtonGenerateDisable: false\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.setState({\n        policyId: this.props.match.params.Id,\n        premiumType: 'Comprehensive',\n        premiumTypeError: false\n      }); // setTimeout(() => {\n\n      this.getPolicyHolder(); // }, 150);\n    }\n\n    let userType = CommonConfig.loggedInUserData().ContactType;\n    this.setState({\n      LoginUserType: userType\n    });\n    this.setState({\n      assumptionAndTerms: userType == \"InternalStaff\" ? true : false\n    });\n    this.getLanguageData();\n    this.getCurrencyData();\n    this.getDropDownValues('POLICYTYPE', 'policyTypeList', 'sortorder');\n    this.getDropDownValues('POLICYCOUNTRY', 'countryList', 'StringMapName'); // this.getDropDownValues('PREMIUMPOLICYTYPE', 'premiumPolicyType');\n  }\n\n  getPolicyHolder() {\n    try {\n      const data = {\n        policyId: this.props.match.params.Id\n      };\n      api.post('api/getPolicyHolderDetails', data).then(res => {\n        console.log(\"dataaaaaaaaa-o-o-o-o-o-o-o-o-o-o\", res);\n\n        if (res.success) {\n          this.setState({\n            policyId: res.data[0][0].PolicyId,\n            policyNumber: res.data[0][0].PolicyNumber,\n            policyType: res.data[0][0].PolicyType,\n            phone: res.data[0][0].Phone,\n            language: res.data[0][0].DocLang,\n            languageId: res.data[0][0].LanguageId,\n            policyHolder: res.data[0][0].entityname,\n            email: res.data[0][0].EmailId,\n            refrred: res.data[0][0].IsReferred.data[0] == 0 ? false : true,\n            showRefer: res.data[0][0].IsReferred.data[0] == 0 ? false : true,\n            status: res.data[0][0].Status,\n            country: res.data[0][0].Country,\n            currency: res.data[0][0].Currency,\n            vesselTypeName: res.data[0][0].VesselTypeName,\n            policyPremium: res.data[0][0].CurrentPremium == null ? 0 : res.data[0][0].CurrentPremium.toFixed(2),\n            vesselTypeId: res.data[0][0].VesselTypeId,\n            vesselClassId: res.data[0][0].VesselClassId,\n            vesselClassName: res.data[0][0].VesselClassName,\n            entityId: res.data[0][0].EntityId,\n            liabilityCoveredAmount: res.data[0][0].LiabilityCoveredAmount,\n            inceptionDate: res.data[0][0].InceptionDate,\n            binder: res.data[0][0].Binder,\n            subBinder: res.data[0][0].SubBinder,\n            insuranceCompany: res.data[0][0].InsuranceCompany,\n            baseRateType: res.data[0][0].BaseRateType,\n            baseRate: res.data[0][0].BaseRate,\n            excess: res.data[0][0].Excess,\n            levy: res.data[0][0].Levy == null ? 0 : res.data[0][0].Levy.toFixed(2),\n            adminFee: res.data[0][0].AdminFee == null ? 0 : res.data[0][0].AdminFee.toFixed(2),\n            total: res.data[0][0].CurrentPremium + res.data[0][0].Levy + res.data[0][0].AdminFee // policyPremium: res.data[0].CurrentPremium,\n            // premiumType: res.data[0].LiabilityType,\n            // totalPremium: thirdTotalPremium\n\n          });\n          this.getPremiumPolicyType();\n          this.getPolicyAddOnCoverage();\n          this.getAssumption();\n          this.getUserBankAccountDetails();\n          this.getInsuranceCompany();\n          this.getNotesbyEntityTypeAndEntityId();\n          this.setState({\n            ButtonGenerateDisable: this.state.status == 'Decline' ? true : false\n          });\n        } else {\n          console.log(\"else\");\n        }\n      }).catch(err => {\n        console.log(\"sss\", err);\n      });\n    } catch (error) {\n      console.log(\"ssss\", error);\n    }\n  }\n\n  getPremiumPolicyType() {\n    try {\n      const data = {\n        stringmaptype: 'PREMIUMPOLICYTYPE',\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          console.log(this.state.country);\n          let countryData = this.state.country == 'Spain' ? res.data.filter(x => x.StringMapKey !== 'ThirdParty') : res.data.filter(x => x.StringMapKey !== 'Basica' && x.StringMapKey !== 'Extra');\n          this.setState({\n            premiumPolicyType: countryData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getPolicyAddOnCoverage() {\n    let data = {\n      VesselTypeId: this.state.vesselTypeId\n    };\n    api.post('api/getPolicyAddOnCoverage', data).then(res => {\n      if (res.success) {\n        console.log('-p-o-op--iosd-sd-cs-cs-cfsd-', res.data);\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            id: [i + 1],\n            AddOnCoverageId: res.data[i].AddOnCoverageId,\n            policyOption: res.data[i].AddOnCoverageName,\n            premium: res.data[i].AddOnCoveragePremiumAmount,\n            FeeAmount: res.data[i].AddOnCoverageFeeAmount,\n            isAdded: false\n          });\n        }\n\n        this.setState({\n          CoverageAvailable: formattedData\n        });\n        this.getPolicyAddedCoverage();\n      } else {}\n    }).catch(err => {});\n  }\n\n  getPolicyAddedCoverage() {\n    let data = {\n      PolicyId: this.state.policyId\n    };\n    api.post('api/getPolicyAddedCoverage', data).then(res => {\n      if (res.success) {\n        let totalpremiumThirdParty = 0;\n        let totalAddOns = 0;\n        res.data.map((value, i) => {\n          totalpremiumThirdParty = totalpremiumThirdParty + value.AddOnCoveragePremiumAmount;\n          totalAddOns = totalAddOns + value.AddOnCoveragePremiumAmount;\n        });\n        let totalP = Number(this.state.total) + Number(totalAddOns);\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n            AddOnCoverageId: res.data[i].AddOnCoverageId,\n            policyOption: res.data[i].AddOnCoverageName,\n            premium: res.data[i].AddOnCoveragePremiumAmount,\n            FeeAmount: res.data[i].AddOnCoverageFeeAmount,\n            IsDefault: res.data[i].IsDefault.data[0],\n            isAdded: true\n          });\n          let CoverageAvailableArray = this.state.CoverageAvailable;\n          let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n\n          if (index2 != -1) {\n            CoverageAvailableArray[index2].isAdded = true;\n            this.setState({\n              CoverageAvailable: CoverageAvailableArray\n            });\n          }\n        }\n\n        this.setState({\n          CoverageAlreadyList: formattedData,\n          totalAddOn: totalAddOns.toFixed(2),\n          totalPremium: totalP.toFixed(2)\n        });\n      } else {}\n    }).catch(err => {});\n  }\n\n  getAssumption() {\n    try {\n      const data = {\n        VesselTypeId: this.state.vesselTypeId\n      };\n      api.post(APIConstant.path.getAssumption, data).then(res => {\n        if (res.success) {\n          this.setState({\n            assumptionCount: res.data.length,\n            assumptionArr: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getUserBankAccountDetails() {\n    try {\n      const data = {\n        EntityId: this.state.entityId,\n        EntityType: this.state.entityType\n      };\n      api.post(APIConstant.path.getUserBankAccountDetails, data).then(res => {\n        if (res.data.length) {\n          var BankExists = 1;\n          this.setState({\n            accountNameError: false,\n            IBANError: false,\n            BICError: false,\n            bankNameError: false,\n            bankCountryError: false\n          });\n        }\n\n        console.log('-s-cv-fe-d-ad-', res);\n\n        if (res.success) {\n          this.setState({\n            entityBankDetailId: res.data[0].EntityBankDetailId,\n            accountName: res.data[0].AccountName,\n            IBAN: res.data[0].IBAN,\n            BIC: res.data[0].BIC,\n            bankName: res.data[0].BankName,\n            bankCountry: res.data[0].Country,\n            bankExists: BankExists\n          });\n        } else {\n          console.log(\"else\");\n        }\n      }).catch(err => {\n        console.log(\"sss\", err);\n      });\n    } catch (error) {\n      console.log(\"ssss\", error);\n    }\n  }\n\n  getInsuranceCompany() {\n    try {\n      const data = {\n        Country: this.state.country,\n        VesselClassId: this.state.vesselClassId,\n        InceptionDate: this.state.inceptionDate\n      };\n      console.log(data);\n      api.post('api/getInsuranceCompany', data).then(res => {\n        console.log(\"dataaaaaaaaa\", res.data); // if (res.data.length) {\n        //     var BankExists = 1\n        //     this.setState({accountNameError: false, IBANError: false, BICError: false, bankNameError:false, bankCountryError: false})\n        // }\n        // if (res.success) {\n        //     this.setState({\n        //         entityBankDetailId: res.data[0].EntityBankDetailId,\n        //         accountName: res.data[0].AccountName,\n        //         IBAN: res.data[0].IBAN,\n        //         BIC: res.data[0].BIC,\n        //         bankName: res.data[0].BankName,\n        //         bankCountry: res.data[0].Country,\n        //         bankExists: BankExists,\n        //     });\n        // } else {\n        //     console.log(\"else\");\n        // }\n      }).catch(err => {\n        console.log(\"sss\", err);\n      });\n    } catch (error) {\n      console.log(\"ssss\", error);\n    }\n  }\n\n  getNotesbyEntityTypeAndEntityId() {\n    try {\n      const data = {\n        EntityId: this.state.policyId,\n        EntityType: \"Policy\"\n      };\n      api.post(APIConstant.path.getNotesbyEntityTypeAndEntityId, data).then(res => {\n        if (res.success) {\n          console.log('-i-i-i-o-o-o-o', res);\n          this.setState({\n            policyReferNotes: res.data\n          });\n        } else {\n          console.log(\"else\");\n        }\n      }).catch(err => {\n        console.log(\"sss\", err);\n      });\n    } catch (error) {\n      console.log(\"ssss\", error);\n    }\n  }\n\n  getLanguageData() {\n    try {\n      api.get(APIConstant.path.getLanguage).then(res => {\n        console.log(res);\n\n        if (res.success) {\n          this.setState({\n            languageList: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getCurrencyData() {\n    try {\n      api.get(APIConstant.path.getCurrency).then(res => {\n        console.log(res);\n\n        if (res.success) {\n          this.setState({\n            currencyList: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  editLanguage() {\n    this.setState({\n      changeLanguage: !this.state.changeLanguage\n    });\n  }\n\n  editCurrency() {\n    this.setState({\n      changeCurrency: !this.state.changeCurrency\n    });\n  }\n\n  editPolicyType() {\n    this.setState({\n      changePolicyType: !this.state.changePolicyType\n    });\n  }\n\n  editVesselType() {}\n\n  selectContainerType(value, type) {\n    if (type === 'language') {\n      let languageData = this.state.languageList.filter(list => {\n        return list.LanguageId == value;\n      });\n      this.setState({\n        languageId: value,\n        language: languageData[0].Language,\n        changeLanguage: false\n      });\n    }\n\n    if (type === 'currency') {\n      this.setState({\n        currency: value,\n        changeCurrency: false\n      });\n    }\n\n    if (type === 'policyType') {\n      this.setState({\n        policyType: value,\n        changePolicyType: false\n      });\n    }\n\n    setTimeout(() => {\n      this.changePolicyData(type);\n    }, 200);\n  }\n\n  changePolicyData(type) {\n    console.log(this.state);\n    let data = '';\n\n    if (type === 'language') {\n      data = {\n        PolicyId: this.props.match.params.id,\n        type: type,\n        DocLang: this.state.language,\n        LanguageId: this.state.languageId\n      };\n    }\n\n    if (type === 'currency') {\n      data = {\n        PolicyId: this.props.match.params.id,\n        type: type,\n        Currency: this.state.currency\n      };\n    }\n\n    if (type === 'policyType') {\n      data = {\n        PolicyId: this.props.match.params.id,\n        type: type,\n        PolicyType: this.state.policyType\n      };\n    }\n\n    api.post('api/changePolicyData', data).then(res => {\n      if (res.success) {\n        console.log(res);\n      } else {}\n    }).catch(err => {});\n  }\n\n  openModal(modal) {\n    if (modal == 'Assumption') {\n      this.setState({\n        toggleAssumption: !this.state.toggleAssumption\n      });\n    } else if (modal == 'TermsAndCondition') {\n      this.setState({\n        toggleTermsAndCondition: !this.state.toggleTermsAndCondition\n      });\n    }\n  }\n\n  onRadioBtnClick(radioType, radioSelected) {\n    console.log(this.state);\n\n    if (radioType === 'paymentMode') {\n      this.setState({\n        radioSelected: radioSelected\n      });\n\n      if (radioSelected == \"bankPayment\") {\n        this.setState({\n          accountNameError: true,\n          bankNameError: true,\n          bankCountryError: true,\n          IBANError: true,\n          BICError: true\n        });\n      } else {\n        this.setState({\n          accountNameError: false,\n          bankNameError: false,\n          bankCountryError: false,\n          IBANError: false,\n          BICError: false,\n          accountName: '',\n          bankName: '',\n          bankCountry: '',\n          IBAN: '',\n          BIC: ''\n        });\n      }\n    }\n  }\n\n  selectType(value, type) {\n    if (type === 'premiumType') {\n      if (CommonConfig.isEmpty(value.value)) {\n        this.setState({\n          premiumTypeError: true,\n          premiumType: value.value\n        });\n        this.show('premiumType', true, \"premiumTypeError\", \"Please select Policy Premium Type\");\n      } else {\n        this.setState({\n          premiumTypeError: false,\n          premiumType: value.value\n        });\n        this.show('premiumType', false, \"premiumTypeError\", \"\");\n        this.getPremiumAndCoverage(value.value); // if (value.value == 'Comprehensive') {\n        //     this.getPolicyHolder();\n        // }\n      }\n    }\n\n    if (type === 'bankCountry') {\n      if (CommonConfig.isEmpty(value.value)) {\n        this.setState({\n          bankCountryError: true,\n          bankCountry: value.value\n        });\n        this.show(\"bankCountry\", true, \"bankCountryError\", \"Please select Country\");\n      } else {\n        this.setState({\n          bankCountryError: false,\n          bankCountry: value.value\n        });\n        this.show(\"bankCountry\", false, \"bankCountryError\", \"\");\n      }\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n      document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      document.getElementById(field).className = \"form-control\";\n      document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  SaveQuatation() {\n    console.log(this.state);\n\n    if (!this.state.premiumTypeError && !this.state.accountNameError && !this.state.bankNameError && !this.state.bankCountryError && !this.state.IBANError && !this.state.BICError && this.state.assumptionAndTerms) {\n      let data = {\n        // GENERAL\n        LanguageId: 'en-GB',\n        Status: 'Active',\n        BankExists: this.state.bankExists,\n        // POLICY\n        PolicyId: this.state.policyId,\n        LiabilityType: this.state.premiumType,\n        LiabilityCoveredAmount: this.state.liabilityCoveredAmount,\n        CurrentPremium: this.state.policyPremium,\n        // EntityBankDetail\n        RadioSelected: this.state.radioSelected,\n        EntityBankDetailId: this.state.entityBankDetailId,\n        EntityType: this.state.entityType,\n        EntityId: this.state.entityId,\n        AccountName: this.state.accountName,\n        IBAN: this.state.IBAN,\n        BIC: this.state.BIC,\n        BankName: this.state.bankName,\n        Country: this.state.bankCountry,\n        LoggedInUserId: CommonConfig.loggedInUserId()\n      };\n      api.post('api/saveBankAndQuote', data).then(res => {\n        if (res.success) {\n          toast.success('Quotation Generated successfully');\n          this.props.history.push({\n            pathname: '/PolicyDetails/' + this.state.policyId,\n            state: {\n              Id: this.state.policyId\n            }\n          });\n        } else {}\n      });\n    } else {\n      if (this.state.premiumTypeError) {\n        toast.error(\"Please select Premium Policy Type\");\n        return;\n      }\n\n      if (this.state.accountNameError) {\n        toast.error(\"Please enter Bank Account Name\");\n        return;\n      }\n\n      if (this.state.bankNameError) {\n        toast.error(\"Please enter Bank Name\");\n        return;\n      }\n\n      if (this.state.bankCountryError) {\n        toast.error(\"Please select Bank Country\");\n        return;\n      }\n\n      if (this.state.IBANError) {\n        toast.error(\"Please enter IBN\");\n        return;\n      }\n\n      if (this.state.BICError) {\n        toast.error(\"Please enter BIC\");\n        return;\n      }\n\n      if (!this.state.assumptionAndTerms) {\n        toast.error(\"You must agree to Assumption And Terms & Conditions\");\n        return;\n      }\n    }\n  }\n\n  addToListModal(data) {\n    this.setState({\n      tempdata: data\n    });\n    this.setState({\n      toggleSaveModal: !this.state.toggleSaveModal\n    });\n  }\n\n  addToList(data, field) {\n    let CoverageAlreadyArray = this.state.CoverageAlreadyList;\n    let index1 = CoverageAlreadyArray.findIndex(x => x.policyOption === data.policyOption);\n\n    if (index1 > -1) {\n      CoverageAlreadyArray[index1].isAdded = true;\n      this.setState({\n        CoverageAlreadyList: CoverageAlreadyArray\n      });\n    } else {\n      var CoverageAlready = [{\n        PolicyAddOnCoverageId: null,\n        AddOnCoverageId: data.AddOnCoverageId,\n        policyOption: data.policyOption,\n        premium: data.premium,\n        FeeAmount: data.FeeAmount,\n        isAdded: true\n      }];\n      this.setState({\n        CoverageAlreadyList: this.state.CoverageAlreadyList.concat(CoverageAlready)\n      });\n    }\n\n    let CoverageAvailableArray = this.state.CoverageAvailable;\n    let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n    CoverageAvailableArray[index2].isAdded = true;\n    this.setState({\n      CoverageAvailable: CoverageAvailableArray\n    });\n    this.Save(CoverageAlready);\n  }\n\n  deleteCoverageModal(data) {\n    this.setState({\n      tempdata: data\n    });\n    this.setState({\n      toggleDeleteModal: !this.state.toggleDeleteModal\n    });\n    console.log(data);\n  }\n\n  deleteCoverage(data) {\n    if (data.PolicyAddOnCoverageId) {\n      let apiData = {\n        PolicyAddOnCoverageId: data.PolicyAddOnCoverageId\n      };\n      api.post('api/deleteAddedCoverage', {\n        apiData\n      }).then(res => {\n        if (res.success) {// toast.success('Coverage Deleted Successfully');\n        } else {}\n      }).catch(err => {});\n    }\n\n    let CoverageAvailableArray = this.state.CoverageAvailable;\n    let index1 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n    CoverageAvailableArray[index1].isAdded = false;\n    let listIndex = this.state.CoverageAlreadyList.findIndex(x => x.policyOption === data.policyOption);\n    this.state.CoverageAlreadyList.splice(listIndex, 1);\n    this.setState({\n      CoverageAvailable: CoverageAvailableArray\n    });\n    toast.success('Coverage Deleted Successfully');\n    this.setState({\n      tempdata: data\n    });\n    this.getPolicyAddOnCoverage();\n    this.toggleDelete();\n  }\n\n  render() {\n    const {\n      t,\n      i18n\n    } = this.props;\n    const SaveButton = t(\"buttons.Save\");\n    const CancelButton = t(\"buttons.Cancel\");\n    const BackButton = t(\"buttons.BackToPolicy\");\n    const AddButton = t(\"buttons.Add\");\n    const DeleteButton = t(\"buttons.Delete\");\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 13\n      }\n    }, this.state.showRefer ? /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 25\n      }\n    }, this.state.policyReferNotes.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 46\n        }\n      }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginRight: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 85\n        }\n      }, ct.NoteText));\n    }))) : null, this.state.status == 'Declined' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      style: {\n        textAlign: \"center\",\n        color: \"red\",\n        fontSize: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 22\n      }\n    }, t(\"generateQuote:PolicyisDeclinedbytheSystem\")) : null, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Policy\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 33\n      }\n    }, this.state.policyNumber))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 33\n      }\n    }, this.state.vesselTypeName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 37\n      }\n    }, this.state.status != \"Active\" && this.state.status != '' ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editVesselType(),\n      title: \"Change Vessel Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 49\n      }\n    })) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"qt-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"pl-status badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 37\n      }\n    }, this.state.status), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"pl-status badge badge-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 37\n      }\n    }, \"UNPAID\"), this.state.refrred ? /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        backgroundColor: \"#9e3434\",\n        padding: \"2px 10px\",\n        width: \"max-content\",\n        float: \"left\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 38\n      }\n    }, t(\"generateQuote:Referred\")) : null))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Phone\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 33\n      }\n    }, this.state.phone))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Claims\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 33\n      }\n    }, \"0\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:PolicyHolder\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 33\n      }\n    }, this.state.policyHolder))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Email\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 33\n      }\n    }, this.state.email))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Country\")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 33\n      }\n    }, this.state.country)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:PolicyType\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 33\n      }\n    }, this.state.changePolicyType ? /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyType\",\n      id: \"policyType\",\n      onChange: e => this.selectContainerType(e.target.value, 'policyType'),\n      value: this.state.policyType,\n      style: {\n        width: \"fit-content\",\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 41\n      }\n    }, this.state.policyTypeList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 57\n        }\n      }, ct.StringMapName);\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 45\n      }\n    }, this.state.policyType), /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editPolicyType(),\n      title: \"Change Policy Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Language\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editLanguage(),\n      title: \"Change Language\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 37\n      }\n    }, t(\"generateQuote:Refer\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"refrred\",\n      id: \"refrred\",\n      onChange: e => this.handleChange(e),\n      value: this.state.refrred,\n      checked: this.state.refrred == true ? true : false,\n      value: this.state.refrred,\n      style: {\n        marginLeft: \"10px\"\n      },\n      disabled: this.state.showRefer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 41\n      }\n    })), this.state.changeLanguage ? /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"languageId\",\n      id: \"languageId\",\n      onChange: e => this.selectContainerType(e.target.value, 'language'),\n      value: this.state.languageId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 41\n      }\n    }, this.state.languageList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.LanguageId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 57\n        }\n      }, ct.Language);\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 45\n      }\n    }, this.state.language)))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Currency\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 33\n      }\n    }, this.state.changeCurrency ? /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"currency\",\n      id: \"currency\",\n      onChange: e => this.selectContainerType(e.target.value, 'currency'),\n      value: this.state.currency,\n      style: {\n        width: \"fit-content\",\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 41\n      }\n    }, this.state.currencyList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.CurrncyCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 57\n        }\n      }, ct.CurrncyCode);\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 45\n      }\n    }, this.state.currency), /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editCurrency(),\n      title: \"Change Currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 41\n      }\n    })))))))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 21\n      }\n    }, header), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      style: {\n        backgroundColor: \"#f2f2f2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 53\n      }\n    }, t(\"generateQuote:Binder\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 49\n      }\n    }, this.state.binder), CommonConfig.isEmpty(this.state.subBinder) ? null : /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      style: {\n        display: \"inline-flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Sub Binder\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 57\n      }\n    }, this.state.subBinder)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 53\n      }\n    }, t(\"generateQuote:Insurance Company\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 49\n      }\n    }, this.state.insuranceCompany))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      style: {\n        marginBottom: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 53\n      }\n    }, t(\"generateQuote:Excess\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 49\n      }\n    }, this.state.excess), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 53\n      }\n    }, t(\"generateQuote:Base Rate\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 49\n      }\n    }, this.state.baseRate, this.state.baseRateType == \"Rating\" ? '%' : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 53\n      }\n    }, t(\"generateQuote:PolicyType\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"premiumType\",\n      id: \"premiumType\",\n      onChange: e => this.selectType(e.target, 'premiumType'),\n      value: this.state.premiumType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Select\")), this.state.premiumPolicyType.map((sm, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: sm.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 69\n        }\n      }, sm.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"premiumTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 53\n      }\n    }, t(\"generateQuote:Policy Premium\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 53\n      }\n    }, this.state.policyPremium)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 49\n      }\n    }))), this.state.premiumType == 'Comprehensive' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1145,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Levy\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 61\n      }\n    }, this.state.levy)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Admin Fee\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 61\n      }\n    }, this.state.adminFee)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        height: 1,\n        backgroundColor: '#000000',\n        width: \"70%\",\n        marginBottom: 7,\n        marginTop: -12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Total\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1182,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 61\n      }\n    }, this.state.total.toFixed(2))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 57\n      }\n    })))) : null, this.state.premiumType == 'Comprehensive' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 45\n      }\n    }, this.state.CoverageAlreadyList.map((ca, i) => {\n      if (ca.isAdded) {\n        return /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 65\n          }\n        }), /*#__PURE__*/React.createElement(Col, {\n          md: \"5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1200,\n            columnNumber: 69\n          }\n        }, ca.policyOption)), /*#__PURE__*/React.createElement(Col, {\n          md: \"3\",\n          style: {\n            textAlign: \"right\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 69\n          }\n        }, ca.premium.toFixed(2))), /*#__PURE__*/React.createElement(Col, {\n          md: \"2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 65\n          }\n        }, ca.IsDefault == 0 ? /*#__PURE__*/React.createElement(BTN, {\n          title: DeleteButton,\n          className: \"btn-sm\",\n          onClick: () => this.deleteCoverageModal(ca, 'CoverageAlready'),\n          style: {\n            marginLeft: 5\n          },\n          color: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 74\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 77\n          }\n        })) : null));\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        height: 1,\n        backgroundColor: '#000000',\n        width: \"70%\",\n        marginBottom: 7,\n        marginTop: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1218,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1222,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Total Add Ons\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 61\n      }\n    }, this.state.totalAddOn)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 57\n      }\n    })))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 53\n      }\n    }, t(\"generateQuote:Total Due\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 53\n      }\n    }, this.state.totalPremium)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 49\n      }\n    })))))), this.state.premiumType != 'ThirdParty' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 48\n      }\n    }, t(\"generateQuote:Wait... you may want to get an add on policy for secured protection\"))))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      style: {\n        backgroundColor: \"#f2f2f2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1261,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1263,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1266,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 73\n      }\n    }, t(\"policyAddOnCoverage:AvailableToPurchase.PolicyOption\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1268,\n        columnNumber: 73\n      }\n    }, t(\"policyAddOnCoverage:AvailableToPurchase.Premium\")), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: \"25%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 73\n      }\n    }, t(\"policyAddOnCoverage:AvailableToPurchase.Action\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 65\n      }\n    }, this.state.CoverageAvailable.map((ca, i) => {\n      {// console.log(this.state.CoverageAvailable)\n      }\n\n      if (!ca.isAdded) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 81\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 85\n          }\n        }, ca.policyOption), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1282,\n            columnNumber: 85\n          }\n        }, ca.premium), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(BTN, {\n          title: AddButton,\n          color: \"primary\",\n          icon: \"fa fa-plus\",\n          onClick: () => this.addToListModal(ca, 'CoverageAvailable'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 89\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-plus\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1285,\n            columnNumber: 93\n          }\n        }))));\n      }\n    })))))))))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1307,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1308,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 44\n      }\n    }, t(\"generateQuote:Assumptions\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 130,\n        overflow: \"scroll\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 45\n      }\n    }, this.state.assumptionArr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314,\n          columnNumber: 61\n        }\n      }, type.AssumptionDescription);\n    })))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1321,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 44\n      }\n    }, t(\"generateQuote:Terms & Conditions\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 130,\n        overflow: \"scroll\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: t(\"translation:termsAndCondition.terms\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 45\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1333,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        maxWidth: \"19%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Payment Method *\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box rc-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1341,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"paymentMode\",\n      checked: this.state.radioSelected === 'bankPayment' ? true : false,\n      value: this.state.radioSelected,\n      onChange: () => this.onRadioBtnClick('paymentMode', 'bankPayment'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 45\n      }\n    }), t(\"generateQuote:Bank Payment\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"paymentMode\",\n      checked: this.state.radioSelected === 'cardPayment' ? true : false,\n      value: this.state.radioSelected,\n      onChange: () => this.onRadioBtnClick('paymentMode', 'cardPayment'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1349,\n        columnNumber: 45\n      }\n    }), t(\"generateQuote:Debit/Credit Card\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 21\n      }\n    }, this.state.radioSelected == \"bankPayment\" ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1361,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 37\n      }\n    }, t(\"generateQuote:Enter Bank Information\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      style: {\n        backgroundColor: \"#f2f2f2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1366,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1367,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Account Name\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1372,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"accountName\",\n      id: \"accountName\",\n      onChange: e => this.handleChange(e),\n      value: this.state.accountName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"accountNameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1374,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1379,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1380,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1381,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Bank Name\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1383,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"bankName\",\n      id: \"bankName\",\n      onChange: e => this.handleChange(e),\n      value: this.state.bankName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"bankNameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1385,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1389,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1390,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1391,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1392,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Country\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1394,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"bankCountry\",\n      id: \"bankCountry\",\n      onChange: e => this.selectType(e.target, 'bankCountry'),\n      value: this.state.bankCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1395,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Select\")), this.state.countryList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1398,\n          columnNumber: 73\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"bankCountryError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1402,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1406,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1407,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:IBAN\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"IBAN\",\n      id: \"IBAN\",\n      onChange: e => this.handleChange(e),\n      value: this.state.IBAN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"IBANError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1413,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1418,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:BIC\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"BIC\",\n      id: \"BIC\",\n      onChange: e => this.handleChange(e),\n      value: this.state.BIC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"BICError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1424,\n        columnNumber: 57\n      }\n    })))))))) : null, this.state.radioSelected == \"cardPayment\" ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1435,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 37\n      }\n    }, t(\"generateQuote:Enter Card Detail\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1438,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1439,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      style: {\n        backgroundColor: \"#f2f2f2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1440,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1441,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1442,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1443,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1444,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Cardholder Name\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1446,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"cardholderName\",\n      id: \"cardholderName\",\n      onChange: e => this.handleChange(e),\n      value: this.state.cardholderName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1447,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1448,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Please enter cardholder name\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1453,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1455,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Card Number\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1457,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"cardNumber\",\n      id: \"cardNumber\",\n      onChange: e => this.handleChange(e),\n      value: this.state.cardNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1459,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Please enter card number\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Card Type\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1468,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"cardType\",\n      id: \"cardType\",\n      onChange: e => this.selectType(e.target, 'cardType'),\n      value: this.state.cardType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1469,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Select\"))), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1476,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Please selct card type\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1481,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1483,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Expiry\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1485,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"expiryMonth\",\n      id: \"expiryMonth\",\n      onChange: e => this.handleChange(e),\n      value: this.state.expiryMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1486,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1487,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Select\"))), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1493,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Please enter expiry month\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"expiryYear\",\n      id: \"expiryYear\",\n      onChange: e => this.handleChange(e),\n      value: this.state.expiryYear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 61\n      }\n    }, t(\"generateQuote:Select\"))), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1503,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Please enter expiry Year\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:CVV\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1512,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"CardBIC\",\n      id: \"CardBIC\",\n      onChange: e => this.handleChange(e),\n      value: this.state.CardBIC,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1514,\n        columnNumber: 57\n      }\n    }, t(\"generateQuote:Please enter BIC\"))))))))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1524,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1525,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1526,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1527,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Documents Required to be Uploaded\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1532,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Document 1\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Upload\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1540,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1541,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Document 2\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Upload\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1548,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1549,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Document 3\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1552,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1553,\n        columnNumber: 33\n      }\n    }, t(\"generateQuote:Upload\"))))), this.state.LoginUserType == \"InternalStaff\" ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1559,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"assumptionAndTerms\",\n      id: \"assumptionAndTerms\",\n      onChange: e => this.handleChange(e),\n      checked: this.state.assumptionAndTerms == true ? \"checked\" : \"\",\n      value: this.state.assumptionAndTerms,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 37\n      }\n    }, t(\"generateQuote:I agree to the\"), \" \", this.state.assumptionCount == 0 ? 'Assumption' : /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.openModal('Assumption'),\n      style: {\n        textDecorationLine: 'underline',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 130\n      }\n    }, t(\"generateQuote:Assumptions\")), \" \", t(\"generateQuote:as well as\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.openModal('TermsAndCondition'),\n      style: {\n        textDecorationLine: 'underline',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 312\n      }\n    }, t(\"generateQuote:Terms & Conditions\"))), this.state.assumptionAndTermsError ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1564,\n        columnNumber: 43\n      }\n    }, t(\"generateQuote:You must agree to Assumption And Terms & Conditions\")) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1570,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1571,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.Back(),\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1573,\n        columnNumber: 37\n      }\n    }), t(\"generateQuote:Back\")), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.SaveQuatation(),\n      disabled: this.state.ButtonGenerateDisable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1576,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1577,\n        columnNumber: 37\n      }\n    }), t(\"generateQuote:Save Quotation\")))))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleAssumption,\n      toggle: () => this.toggleLarge('Assumption'),\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1585,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleLarge('Assumption'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 21\n      }\n    }, t(\"generateQuote:Assumption\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1589,\n        columnNumber: 25\n      }\n    }, this.state.assumptionArr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1591,\n          columnNumber: 41\n        }\n      }, type.AssumptionDescription);\n    }))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1595,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: () => this.toggleLarge('TermsAndCondition'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 25\n      }\n    }, t(\"generateQuote:Select\"), \"Close\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleTermsAndCondition,\n      toggle: () => this.toggleLarge('TermsAndCondition'),\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1599,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleLarge('TermsAndCondition'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1601,\n        columnNumber: 21\n      }\n    }, t(\"generateQuote:Terms And Condition\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1602,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: t(\"translation:termsAndCondition.terms\")\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1603,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1605,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: () => this.toggleLarge('TermsAndCondition'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1606,\n        columnNumber: 25\n      }\n    }, t(\"generateQuote:Close\")))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleSaveModal,\n      toggle: this.toggleSave,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1609,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1611,\n        columnNumber: 21\n      }\n    }, t(\"policyAddOnCoverage:ConformationSaveModal.Header\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1612,\n        columnNumber: 21\n      }\n    }, t(\"generateQuote:Are you sure you want to Add\"), \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1613,\n        columnNumber: 71\n      }\n    }, this.state.tempdata.policyOption), \" \", t(\"generateQuote:Coverage?\")), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1615,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"primary\",\n      onClick: () => this.addToList(this.state.tempdata),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1616,\n        columnNumber: 25\n      }\n    }, t(\"policyAddOnCoverage:ConformationSaveModal.Approval\")), /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: this.toggleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 25\n      }\n    }, t(\"policyAddOnCoverage:ConformationSaveModal.Reject\")))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleDeleteModal,\n      toggle: this.toggleDelete,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1622,\n        columnNumber: 21\n      }\n    }, t(\"policyAddOnCoverage:ConformationDeleteModal.Header\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1623,\n        columnNumber: 21\n      }\n    }, t(\"generateQuote:Do you want to delete \"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1624,\n        columnNumber: 64\n      }\n    }, this.state.tempdata.policyOption), \" \", t(\"generateQuote:Coverage?\")), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1626,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"primary\",\n      onClick: () => this.deleteCoverage(this.state.tempdata),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 25\n      }\n    }, t(\"policyAddOnCoverage:ConformationDeleteModal.Approval\")), /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: this.toggleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1628,\n        columnNumber: 25\n      }\n    }, t(\"policyAddOnCoverage:ConformationDeleteModal.Reject\")))));\n  }\n\n}\n\nexport default withTranslation()(GenerateQuote);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/New Policy/GenerateQuote.js"],"names":["React","Component","Accordion","AccordionTab","Card","CardBody","Col","Row","Input","Button","BTN","Modal","ModalBody","ModalFooter","ModalHeader","api","APIConstant","AutoComplete","Calendar","InputTextarea","CommonConfig","Regex","DatePicker","moment","toast","useTranslation","withTranslation","Trans","number","Coverage","value","GenerateQuote","constructor","props","getPremiumAndCoverage","type","data","LiabilityType","Country","state","country","VesselType","vesselTypeName","PolicyId","policyId","post","then","res","success","totalpremiumThirdParty","PremiumAmount","premiumType","setState","AddOnCoverage","map","i","AddOnCoveragePremiumAmount","totalP","Number","total","totalAddOn","totalPremium","toFixed","liabilityCoveredAmount","CoveredAmount","policyPremium","catch","err","toggleLarge","modal","toggleAssumption","toggleTermsAndCondition","handleChange","e","target","name","checked","assumptionAndTerms","assumptionAndTermsError","refrred","refrredError","isEmpty","accountNameError","show","nameRegEx","RegExp","nameWithSpace","test","accountName","bankNameError","bankName","IBANError","alphaNumeric","length","IBAN","BICError","BIC","Back","history","push","pathname","Save","CoverageAlready","CoverageAlreadyList","message","getPolicyAddOnCoverage","toggleSave","toggleSaveModal","tempdata","toggleDelete","toggleDeleteModal","entityId","entityType","radioSelected","policyNumber","policyType","phone","language","policyHolder","email","showRefer","policyReferNotes","binder","subBinder","insuranceCompany","baseRateType","baseRate","excess","levy","adminFee","vesselTypeId","vesselClassId","vesselClassName","inceptionDate","premiumTypeError","premiumPolicyType","CoverageAvailable","entityBankDetailId","bankCountry","bankCountryError","countryList","bankExists","assumptionCount","assumptionArr","ButtonGenerateDisable","componentDidMount","window","scrollTo","match","params","Object","keys","Id","getPolicyHolder","userType","loggedInUserData","ContactType","LoginUserType","getLanguageData","getCurrencyData","getDropDownValues","console","log","PolicyNumber","PolicyType","Phone","DocLang","languageId","LanguageId","entityname","EmailId","IsReferred","status","Status","currency","Currency","VesselTypeName","CurrentPremium","VesselTypeId","VesselClassId","VesselClassName","EntityId","LiabilityCoveredAmount","InceptionDate","Binder","SubBinder","InsuranceCompany","BaseRateType","BaseRate","Excess","Levy","AdminFee","getPremiumPolicyType","getAssumption","getUserBankAccountDetails","getInsuranceCompany","getNotesbyEntityTypeAndEntityId","error","stringmaptype","orderby","path","dropdownbycode","countryData","filter","x","StringMapKey","formattedData","id","AddOnCoverageId","policyOption","AddOnCoverageName","premium","FeeAmount","AddOnCoverageFeeAmount","isAdded","getPolicyAddedCoverage","totalAddOns","PolicyAddOnCoverageId","IsDefault","CoverageAvailableArray","index2","findIndex","EntityType","BankExists","EntityBankDetailId","AccountName","BankName","get","getLanguage","languageList","getCurrency","currencyList","stringMapType","setStateName","orderBy","editLanguage","changeLanguage","editCurrency","changeCurrency","editPolicyType","changePolicyType","editVesselType","selectContainerType","languageData","list","Language","setTimeout","changePolicyData","openModal","onRadioBtnClick","radioType","selectType","field","condition","errorField","document","getElementById","className","innerHTML","SaveQuatation","RadioSelected","LoggedInUserId","loggedInUserId","addToListModal","addToList","CoverageAlreadyArray","index1","concat","deleteCoverageModal","deleteCoverage","apiData","listIndex","splice","render","t","i18n","SaveButton","CancelButton","BackButton","AddButton","DeleteButton","header","ct","fontSize","marginRight","NoteText","textAlign","color","backgroundColor","padding","width","float","display","policyTypeList","StringMapName","marginLeft","CurrncyCode","marginTop","marginBottom","sm","height","ca","overflow","AssumptionDescription","__html","maxWidth","cardholderName","cardNumber","cardType","expiryMonth","expiryYear","CardBIC","textDecorationLine","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Card, CardBody, Col, Row, Input, Button as BTN, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Calendar } from 'primereact/calendar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig, Regex } from '../../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { number } from 'prop-types';\n\nconst Coverage = [\n    { value: 252.26 },\n    { value: 80.00 },\n    { value: 20.00 },\n];\n\nclass GenerateQuote extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            policyId: '',\n            entityId: '',\n            entityType: 'Person',\n            radioSelected: \"bankPayment\",\n\n            policyNumber: '',\n            policyType: '',\n            phone: '',\n            language: '',\n            policyHolder: '',\n            country: '',\n            email: '',\n            refrred: false,\n            showRefer: false,\n            policyReferNotes: [],\n\n            binder: '',\n            subBinder: '',\n            insuranceCompany: '',\n            baseRateType: '',\n            baseRate: '',\n            excess: '',\n            levy: '',\n            adminFee: '',\n            total: 0,\n            totalAddOn: 0,\n\n            vesselTypeId: '',\n            vesselClassId: '',\n            vesselClassName: '',\n\n            inceptionDate: '',\n\n            premiumType: '',\n            premiumTypeError: true,\n            premiumPolicyType: [],\n\n            AddOnCoverage: [],\n            CoverageAvailable: [],\n            CoverageAlreadyList: [],\n            toggleSaveModal: false,\n            toggleDeleteModal: false,\n            tempdata: [],\n\n            entityBankDetailId: '',\n\n            accountName: '',\n            accountNameError: true,\n\n            bankName: '',\n            bankNameError: true,\n\n            bankCountry: '',\n            bankCountryError: true,\n            countryList: [],\n\n            IBAN: '',\n            IBANError: true,\n\n            BIC: '',\n            BICError: true,\n\n            bankExists: 0,\n\n            assumptionCount: '',\n            assumptionArr: [],\n\n            liabilityCoveredAmount: '00',\n            policyPremium: '00',\n            totalPremium: '00',\n\n            assumptionAndTerms: false,\n            assumptionAndTermsError: false,\n\n            ButtonGenerateDisable: false\n        }\n    }\n\n    componentDidMount() {\n        window.scrollTo(0,0);\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n            this.setState({ policyId: this.props.match.params.Id, premiumType: 'Comprehensive', premiumTypeError: false });\n            // setTimeout(() => {\n            this.getPolicyHolder();\n            // }, 150);\n        }\n        let userType = CommonConfig.loggedInUserData().ContactType;\n        this.setState({ LoginUserType: userType });\n        this.setState({ assumptionAndTerms: (userType == \"InternalStaff\") ? true : false })\n        this.getLanguageData();\n        this.getCurrencyData();\n        this.getDropDownValues('POLICYTYPE', 'policyTypeList', 'sortorder');\n        this.getDropDownValues('POLICYCOUNTRY', 'countryList', 'StringMapName');\n        // this.getDropDownValues('PREMIUMPOLICYTYPE', 'premiumPolicyType');\n    }\n\n    getPolicyHolder() {\n        try {\n            const data = { policyId: this.props.match.params.Id };\n            api.post('api/getPolicyHolderDetails', data).then(res => {\n                console.log(\"dataaaaaaaaa-o-o-o-o-o-o-o-o-o-o\", res);\n                if (res.success) {\n\n                    this.setState({\n                        policyId: res.data[0][0].PolicyId,\n                        policyNumber: res.data[0][0].PolicyNumber,\n                        policyType: res.data[0][0].PolicyType,\n                        phone: res.data[0][0].Phone,\n                        language: res.data[0][0].DocLang,\n                        languageId: res.data[0][0].LanguageId,\n                        policyHolder: res.data[0][0].entityname,\n                        email: res.data[0][0].EmailId,\n                        refrred: (res.data[0][0].IsReferred.data[0] == 0) ? false : true,\n                        showRefer: (res.data[0][0].IsReferred.data[0] == 0) ? false : true,\n                        status: res.data[0][0].Status,\n                        country: res.data[0][0].Country,\n                        currency: res.data[0][0].Currency,\n                        vesselTypeName: res.data[0][0].VesselTypeName,\n                        policyPremium: (res.data[0][0].CurrentPremium == null)? 0 :res.data[0][0].CurrentPremium.toFixed(2),\n                        vesselTypeId: res.data[0][0].VesselTypeId,\n                        vesselClassId: res.data[0][0].VesselClassId,\n                        vesselClassName: res.data[0][0].VesselClassName,\n                        entityId: res.data[0][0].EntityId,\n                        liabilityCoveredAmount: res.data[0][0].LiabilityCoveredAmount,\n                        inceptionDate: res.data[0][0].InceptionDate,\n                        binder: res.data[0][0].Binder,\n                        subBinder: res.data[0][0].SubBinder,\n                        insuranceCompany: res.data[0][0].InsuranceCompany,\n                        baseRateType: res.data[0][0].BaseRateType,\n                        baseRate: res.data[0][0].BaseRate,\n                        excess: res.data[0][0].Excess,\n                        levy: (res.data[0][0].Levy == null)? 0 :res.data[0][0].Levy.toFixed(2),\n                        adminFee: (res.data[0][0].AdminFee == null)? 0 :res.data[0][0].AdminFee.toFixed(2),\n                        total: res.data[0][0].CurrentPremium + res.data[0][0].Levy + res.data[0][0].AdminFee,\n                        // policyPremium: res.data[0].CurrentPremium,\n                        // premiumType: res.data[0].LiabilityType,\n                        // totalPremium: thirdTotalPremium\n                    });\n                    this.getPremiumPolicyType();                    \n                    this.getPolicyAddOnCoverage();\n                    this.getAssumption();\n                    this.getUserBankAccountDetails();\n                    this.getInsuranceCompany();\n                    this.getNotesbyEntityTypeAndEntityId();\n                    this.setState({\n                        ButtonGenerateDisable: this.state.status == 'Decline' ? true : false\n                    })\n                } else {\n                    console.log(\"else\");\n                }\n            }).catch(err => {\n                console.log(\"sss\", err);\n            });\n        } catch (error) {\n            console.log(\"ssss\", error);\n        }\n    }\n\n    getPremiumPolicyType() {\n        try {\n            const data = {\n                stringmaptype: 'PREMIUMPOLICYTYPE',\n                orderby: 'sortorder'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    console.log(this.state.country)\n                    let countryData = this.state.country == 'Spain' ? (res.data.filter(x => x.StringMapKey !== 'ThirdParty')) : (res.data.filter(x => x.StringMapKey !== 'Basica' && x.StringMapKey !== 'Extra'));\n\n\n                    this.setState({ premiumPolicyType: countryData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getPremiumAndCoverage = (type) => {\n        const data = {\n            LiabilityType: type,\n            Country: this.state.country,\n            VesselType: this.state.vesselTypeName,\n            PolicyId: this.state.policyId,\n        };\n        api.post('api/getPremiumAndCoverage', data).then(res => {\n\n            if (res.success) {\n                let totalpremiumThirdParty = res.data[0].PremiumAmount;\n\n                if (this.state.premiumType == 'ThirdParty') {\n                    this.setState({ totalpremiumThirdParty: res.data[0].PremiumAmount })\n                } else {\n                    {\n                        this.state.AddOnCoverage.map((value, i) => {\n                            totalpremiumThirdParty = totalpremiumThirdParty + value.AddOnCoveragePremiumAmount;\n                        })\n                    }\n                }\n                if (this.state.premiumType == 'Comprehensive') {\n                    let totalP = Number(this.state.total) + Number(this.state.totalAddOn);\n                    this.setState({ totalPremium: totalP });\n                } else {\n                    this.setState({ totalPremium: totalpremiumThirdParty.toFixed(2) });\n                }\n                this.setState({\n                    liabilityCoveredAmount: res.data[0].CoveredAmount,\n                    policyPremium: res.data[0].PremiumAmount.toFixed(2),\n\n                });\n            } else {\n\n            }\n        }).catch(err => {\n\n        });\n    }\n\n    getPolicyAddOnCoverage() {\n        let data = {\n            VesselTypeId: this.state.vesselTypeId\n        }\n\n        api.post('api/getPolicyAddOnCoverage', data).then(res => {\n            if (res.success) {\n                console.log('-p-o-op--iosd-sd-cs-cs-cfsd-',res.data);\n                \n                var formattedData = [];\n                for (var i = 0; i < res.data.length; i++) {\n                    formattedData.push({\n                        id: [i + 1],\n                        AddOnCoverageId: res.data[i].AddOnCoverageId,\n                        policyOption: res.data[i].AddOnCoverageName,\n                        premium: res.data[i].AddOnCoveragePremiumAmount,\n                        FeeAmount: res.data[i].AddOnCoverageFeeAmount,\n                        isAdded: false,\n                    })\n                }\n                this.setState({ CoverageAvailable: formattedData });\n                this.getPolicyAddedCoverage();\n            } else {\n            }\n        }).catch(err => {\n\n        });\n    }\n\n    getPolicyAddedCoverage() {\n        let data = {\n            PolicyId: this.state.policyId\n        }\n\n        api.post('api/getPolicyAddedCoverage', data).then(res => {            \n            if (res.success) {\n\n                let totalpremiumThirdParty = 0;\n                let totalAddOns = 0;\n\n                res.data.map((value, i) => {\n                    totalpremiumThirdParty = totalpremiumThirdParty + value.AddOnCoveragePremiumAmount;\n                    totalAddOns = totalAddOns + value.AddOnCoveragePremiumAmount;\n                })\n                let totalP = Number(this.state.total) + Number(totalAddOns);\n                var formattedData = [];\n                for (var i = 0; i < res.data.length; i++) {\n\n                    formattedData.push({\n                        PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n                        AddOnCoverageId: res.data[i].AddOnCoverageId,\n                        policyOption: res.data[i].AddOnCoverageName,\n                        premium: res.data[i].AddOnCoveragePremiumAmount,\n                        FeeAmount: res.data[i].AddOnCoverageFeeAmount,\n                        IsDefault: res.data[i].IsDefault.data[0],\n                        isAdded: true,\n                    })\n\n                    let CoverageAvailableArray = this.state.CoverageAvailable;\n                    let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n                    if (index2 != -1) {\n                        CoverageAvailableArray[index2].isAdded = true;\n                        this.setState({ CoverageAvailable: CoverageAvailableArray });\n                    }\n\n                }\n\n                this.setState({\n                    CoverageAlreadyList: formattedData,\n                    totalAddOn: totalAddOns.toFixed(2),\n                    totalPremium: totalP.toFixed(2)\n                });\n\n            } else {\n            }\n        }).catch(err => {\n\n        });\n    }\n\n    getAssumption() {\n        try {\n            const data = {\n                VesselTypeId: this.state.vesselTypeId\n            };\n            api.post(APIConstant.path.getAssumption, data).then(res => {\n                if (res.success) {\n\n                    this.setState({ assumptionCount: res.data.length, assumptionArr: res.data });\n\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getUserBankAccountDetails() {\n        try {\n            const data = { EntityId: this.state.entityId, EntityType: this.state.entityType };\n\n            api.post(APIConstant.path.getUserBankAccountDetails, data).then(res => {\n                if (res.data.length) {\n                    var BankExists = 1\n                    this.setState({ accountNameError: false, IBANError: false, BICError: false, bankNameError: false, bankCountryError: false })\n                }\n                console.log('-s-cv-fe-d-ad-', res);\n\n                if (res.success) {\n                    this.setState({\n                        entityBankDetailId: res.data[0].EntityBankDetailId,\n                        accountName: res.data[0].AccountName,\n                        IBAN: res.data[0].IBAN,\n                        BIC: res.data[0].BIC,\n                        bankName: res.data[0].BankName,\n                        bankCountry: res.data[0].Country,\n                        bankExists: BankExists,\n                    });\n                } else {\n                    console.log(\"else\");\n                }\n            }).catch(err => {\n                console.log(\"sss\", err);\n            });\n        } catch (error) {\n            console.log(\"ssss\", error);\n        }\n    }\n\n    getInsuranceCompany() {\n        try {\n            const data = { Country: this.state.country, VesselClassId: this.state.vesselClassId, InceptionDate: this.state.inceptionDate };\n            console.log(data);\n\n            api.post('api/getInsuranceCompany', data).then(res => {\n                console.log(\"dataaaaaaaaa\", res.data);\n                // if (res.data.length) {\n                //     var BankExists = 1\n                //     this.setState({accountNameError: false, IBANError: false, BICError: false, bankNameError:false, bankCountryError: false})\n                // }\n                // if (res.success) {\n                //     this.setState({\n                //         entityBankDetailId: res.data[0].EntityBankDetailId,\n                //         accountName: res.data[0].AccountName,\n                //         IBAN: res.data[0].IBAN,\n                //         BIC: res.data[0].BIC,\n                //         bankName: res.data[0].BankName,\n                //         bankCountry: res.data[0].Country,\n                //         bankExists: BankExists,\n                //     });\n                // } else {\n                //     console.log(\"else\");\n                // }\n            }).catch(err => {\n                console.log(\"sss\", err);\n            });\n        } catch (error) {\n            console.log(\"ssss\", error);\n        }\n    }\n\n    getNotesbyEntityTypeAndEntityId() {\n        try {\n            const data = { EntityId: this.state.policyId, EntityType: \"Policy\" };\n\n            api.post(APIConstant.path.getNotesbyEntityTypeAndEntityId, data).then(res => {\n                if (res.success) {\n                    console.log('-i-i-i-o-o-o-o', res);\n\n                    this.setState({\n                        policyReferNotes: res.data\n                    });\n                } else {\n                    console.log(\"else\");\n                }\n            }).catch(err => {\n                console.log(\"sss\", err);\n            });\n        } catch (error) {\n            console.log(\"ssss\", error);\n        }\n    }\n\n    getLanguageData() {\n        try {\n            api.get(APIConstant.path.getLanguage).then(res => {\n                console.log(res);\n\n                if (res.success) {\n                    this.setState({ languageList: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getCurrencyData() {\n        try {\n            api.get(APIConstant.path.getCurrency).then(res => {\n                console.log(res);\n\n                if (res.success) {\n                    this.setState({ currencyList: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getDropDownValues(stringMapType, setStateName, orderBy) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: orderBy\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    editLanguage() {\n        this.setState({ changeLanguage: !this.state.changeLanguage });\n    }\n\n    editCurrency() {\n        this.setState({ changeCurrency: !this.state.changeCurrency });\n    }\n\n    editPolicyType() {\n        this.setState({ changePolicyType: !this.state.changePolicyType });\n    }\n\n    editVesselType() {\n\n    }\n\n    selectContainerType(value, type) {\n        if (type === 'language') {\n            let languageData = this.state.languageList.filter((list) => {\n                return list.LanguageId == value;\n            });\n            this.setState({ languageId: value, language: languageData[0].Language, changeLanguage: false });\n        }\n\n        if (type === 'currency') {\n            this.setState({ currency: value, changeCurrency: false });\n        }\n\n        if (type === 'policyType') {\n            this.setState({ policyType: value, changePolicyType: false });\n        }\n\n        setTimeout(() => {\n            this.changePolicyData(type);\n        }, 200);\n    }\n\n    changePolicyData(type) {\n        console.log(this.state);\n        let data = '';\n        if (type === 'language') {\n            data = { PolicyId: this.props.match.params.id, type: type, DocLang: this.state.language, LanguageId: this.state.languageId };\n        }\n\n        if (type === 'currency') {\n            data = { PolicyId: this.props.match.params.id, type: type, Currency: this.state.currency };\n        }\n\n        if (type === 'policyType') {\n            data = { PolicyId: this.props.match.params.id, type: type, PolicyType: this.state.policyType };\n        }\n\n        api.post('api/changePolicyData', data).then(res => {\n            if (res.success) {\n                console.log(res);\n            } else {\n            }\n        }).catch(err => {\n\n        });\n    }\n\n    openModal(modal) {\n        if (modal == 'Assumption') {\n            this.setState({ toggleAssumption: !this.state.toggleAssumption });\n        } else if (modal == 'TermsAndCondition') {\n            this.setState({ toggleTermsAndCondition: !this.state.toggleTermsAndCondition });\n        }\n    }\n\n    toggleLarge = (modal) => {\n        if (modal == 'Assumption') {\n            this.setState({ toggleAssumption: false });\n        } else if (modal == 'TermsAndCondition') {\n            this.setState({ toggleTermsAndCondition: false });\n        }\n    }\n\n    onRadioBtnClick(radioType, radioSelected) {\n        console.log(this.state);\n\n        if (radioType === 'paymentMode') {\n            this.setState({ radioSelected: radioSelected });\n            if (radioSelected == \"bankPayment\") {\n                this.setState({\n                    accountNameError: true,\n                    bankNameError: true,\n                    bankCountryError: true,\n                    IBANError: true,\n                    BICError: true,\n                })\n            }else{\n                this.setState({\n                    accountNameError: false,\n                    bankNameError: false,\n                    bankCountryError: false,\n                    IBANError: false,\n                    BICError: false,\n                    accountName: '',\n                    bankName: '',\n                    bankCountry: '',\n                    IBAN: '',\n                    BIC: ''\n                })\n            }\n        }\n    }\n\n    handleChange = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.name === 'assumptionAndTerms') {\n            if (e.target.checked) {\n                this.setState({ assumptionAndTerms: e.target.checked, assumptionAndTermsError: false });\n            } else {\n                this.setState({ assumptionAndTerms: e.target.checked, assumptionAndTermsError: true });\n            }\n        }\n\n        if (e.target.name === 'refrred') {\n            if (e.target.checked) {\n                this.setState({ refrred: e.target.checked, refrredError: false });\n            } else {\n                this.setState({ refrred: e.target.checked, refrredError: true });\n            }\n        }\n\n        if (e.target.name === 'accountName') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ accountNameError: true });\n                this.show(\"accountName\", true, \"accountNameError\", \"Please enter Account Name \");\n            } else {\n                let nameRegEx = CommonConfig.RegExp.nameWithSpace;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ accountNameError: true });\n                    this.show(\"accountName\", true, \"accountNameError\", \"Please enter valid Account Name\");\n                } else {\n                    this.setState({ accountNameError: false, accountName: e.target.value });\n                    this.show(\"accountName\", false, \"accountNameError\", \"\");\n                }\n            }\n        }\n        if (e.target.name === 'bankName') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ bankNameError: true });\n                this.show(\"bankName\", true, \"bankNameError\", \"Please enter Bank Name\");\n            } else {\n                let nameRegEx = CommonConfig.RegExp.nameWithSpace;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ bankNameError: true });\n                    this.show(\"bankName\", true, \"bankNameError\", \"Please enter valid Bank Name\");\n                } else {\n                    this.setState({ bankNameError: false, bankName: e.target.value });\n                    this.show(\"bankName\", false, \"bankNameError\", \"\");\n                }\n            }\n        }\n        if (e.target.name === 'IBAN') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ IBANError: true });\n                this.show(\"IBAN\", true, \"IBANError\", \"Please enter IBAN Number\");\n            } else {\n                let nameRegEx = CommonConfig.RegExp.alphaNumeric;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ IBANError: true });\n                    this.show(\"IBAN\", true, \"IBANError\", \"Please enter valid IBAN Number\");\n                } else {\n                    if (e.target.value.length > 34) {\n                        this.setState({ IBANError: true, IBAN: this.state.IBAN });\n                        this.show(\"IBAN\", true, \"IBANError\", \"Please enter less than 34\");\n                    } else {\n                        this.setState({ IBANError: false, IBAN: e.target.value });\n                        this.show(\"IBAN\", false, \"IBANError\", \"\");\n                    }\n                }\n            }\n        }\n        if (e.target.name === 'BIC') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ BICError: true });\n                this.show(\"BIC\", true, \"BICError\", \"Please enter BIC Number\");\n            } else {\n                let nameRegEx = CommonConfig.RegExp.alphaNumeric;\n                let name = e.target.value;\n                if (!nameRegEx.test(name)) {\n                    this.setState({ BICError: true });\n                    this.show(\"BIC\", true, \"BICError\", \"Please enter valid BIC Number\");\n                } else {\n                    if (e.target.value.length < 8 || e.target.value.length > 11) {\n                        this.setState({ BICError: true, BIC: e.target.value });\n                        this.show(\"BIC\", true, \"BICError\", \"BIC number must be between 8 to 11 Characters\");\n                    } else {\n                        this.setState({ BICError: false, BIC: e.target.value });\n                        this.show(\"BIC\", false, \"BICError\", \"\");\n                    }\n                }\n            }\n        }\n    }\n\n    selectType(value, type) {\n        if (type === 'premiumType') {\n            if (CommonConfig.isEmpty(value.value)) {\n                this.setState({ premiumTypeError: true, premiumType: value.value });\n                this.show('premiumType', true, \"premiumTypeError\", \"Please select Policy Premium Type\");\n            } else {\n                this.setState({ premiumTypeError: false, premiumType: value.value });\n                this.show('premiumType', false, \"premiumTypeError\", \"\");\n                this.getPremiumAndCoverage(value.value);\n                // if (value.value == 'Comprehensive') {\n                //     this.getPolicyHolder();\n                // }\n            }\n        }\n        if (type === 'bankCountry') {\n            if (CommonConfig.isEmpty(value.value)) {\n                this.setState({ bankCountryError: true, bankCountry: value.value });\n                this.show(\"bankCountry\", true, \"bankCountryError\", \"Please select Country\");\n            } else {\n                this.setState({ bankCountryError: false, bankCountry: value.value });\n                this.show(\"bankCountry\", false, \"bankCountryError\", \"\");\n            }\n        }\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            document.getElementById(field).className = \"form-control is-invalid\";\n            document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            document.getElementById(field).className = \"form-control\";\n            document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    SaveQuatation() {\n        console.log(this.state);\n        if (!this.state.premiumTypeError && !this.state.accountNameError && !this.state.bankNameError && !this.state.bankCountryError && !this.state.IBANError && !this.state.BICError && this.state.assumptionAndTerms) {\n\n            let data = {\n                // GENERAL\n                LanguageId: 'en-GB',\n                Status: 'Active',\n                BankExists: this.state.bankExists,\n                // POLICY\n                PolicyId: this.state.policyId,\n                LiabilityType: this.state.premiumType,\n                LiabilityCoveredAmount: this.state.liabilityCoveredAmount,\n                CurrentPremium: this.state.policyPremium,\n                // EntityBankDetail\n                RadioSelected: this.state.radioSelected,\n                EntityBankDetailId: this.state.entityBankDetailId,\n                EntityType: this.state.entityType,\n                EntityId: this.state.entityId,\n                AccountName: this.state.accountName,\n                IBAN: this.state.IBAN,\n                BIC: this.state.BIC,\n                BankName: this.state.bankName,\n                Country: this.state.bankCountry,\n                LoggedInUserId: CommonConfig.loggedInUserId()\n            }\n\n            api.post('api/saveBankAndQuote', data).then(res => {\n\n                if (res.success) {\n                    toast.success('Quotation Generated successfully');\n                    this.props.history.push({\n                        pathname: '/PolicyDetails/' + this.state.policyId,\n                        state: {\n                            Id: this.state.policyId\n                        }\n                    });\n                } else {\n\n                }\n            })\n\n        } else {\n            if (this.state.premiumTypeError) {\n                toast.error(\"Please select Premium Policy Type\")\n                return;\n            }\n            if (this.state.accountNameError) {\n                toast.error(\"Please enter Bank Account Name\")\n                return;\n            }\n            if (this.state.bankNameError) {\n                toast.error(\"Please enter Bank Name\")\n                return;\n            }\n            if (this.state.bankCountryError) {\n                toast.error(\"Please select Bank Country\")\n                return;\n            }\n            if (this.state.IBANError) {\n                toast.error(\"Please enter IBN\")\n                return;\n            }\n            if (this.state.BICError) {\n                toast.error(\"Please enter BIC\")\n                return;\n            }\n            if (!this.state.assumptionAndTerms) {\n                toast.error(\"You must agree to Assumption And Terms & Conditions\")\n                return;\n            }\n        }\n    }\n\n    Back = () => {\n        this.props.history.push({\n            pathname: '/PolicyList',\n        });\n    }\n\n    addToListModal(data) {\n        this.setState({ tempdata: data })\n        this.setState({ toggleSaveModal: !this.state.toggleSaveModal });\n    }\n\n    addToList(data, field) {\n        let CoverageAlreadyArray = this.state.CoverageAlreadyList;\n        let index1 = CoverageAlreadyArray.findIndex(x => x.policyOption === data.policyOption);\n        if (index1 > -1) {\n            CoverageAlreadyArray[index1].isAdded = true;\n            this.setState({ CoverageAlreadyList: CoverageAlreadyArray })\n        } else {\n            var CoverageAlready = [\n                {\n                    PolicyAddOnCoverageId: null,\n                    AddOnCoverageId: data.AddOnCoverageId,\n                    policyOption: data.policyOption,\n                    premium: data.premium,\n                    FeeAmount: data.FeeAmount,\n                    isAdded: true,\n                }\n            ];\n\n            this.setState({ CoverageAlreadyList: this.state.CoverageAlreadyList.concat(CoverageAlready) });\n        }\n        let CoverageAvailableArray = this.state.CoverageAvailable;\n        let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n        CoverageAvailableArray[index2].isAdded = true;\n        this.setState({ CoverageAvailable: CoverageAvailableArray });\n        this.Save(CoverageAlready);\n    }\n\n    Save = (CoverageAlready) => {\n        let data = {\n            CoverageAlreadyList: CoverageAlready,\n            PolicyId: this.state.policyId,\n        }\n        api.post('api/addPolicyCovarage', data).then(res => {\n            if (res.data.success) {\n                toast.success(res.data.message);\n                this.getPolicyAddOnCoverage();\n                this.toggleSave();\n            } else {\n\n            }\n        }).catch(err => {\n        });\n    }\n\n    toggleSave = () => {\n        this.setState({ toggleSaveModal: false, tempdata: [] });\n    }\n\n    deleteCoverageModal(data) {\n        this.setState({ tempdata: data })\n        this.setState({ toggleDeleteModal: !this.state.toggleDeleteModal });\n        console.log(data);\n        \n    }\n\n    deleteCoverage(data) {\n        if (data.PolicyAddOnCoverageId) {\n           let apiData = { PolicyAddOnCoverageId: data.PolicyAddOnCoverageId }\n           api.post('api/deleteAddedCoverage', { apiData }).then(res => {\n              if (res.success) {\n                 // toast.success('Coverage Deleted Successfully');\n              } else {\n  \n              }\n           }).catch(err => {\n  \n           });\n        }\n        let CoverageAvailableArray = this.state.CoverageAvailable;\n        let index1 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n        CoverageAvailableArray[index1].isAdded = false;\n  \n        let listIndex = this.state.CoverageAlreadyList.findIndex(x => x.policyOption === data.policyOption);\n        this.state.CoverageAlreadyList.splice(listIndex, 1);\n  \n        this.setState({ CoverageAvailable: CoverageAvailableArray });\n        toast.success('Coverage Deleted Successfully');\n        this.setState({ tempdata: data })\n        this.getPolicyAddOnCoverage();\n        this.toggleDelete();\n    }\n\n    toggleDelete = () => {\n        this.setState({ toggleDeleteModal: false, tempdata: [] });\n    }\n\n    render() {\n        const { t, i18n } = this.props;\n        const SaveButton = t(\"buttons.Save\");\n        const CancelButton = t(\"buttons.Cancel\");\n        const BackButton = t(\"buttons.BackToPolicy\");\n        const AddButton = t(\"buttons.Add\");\n        const DeleteButton = t(\"buttons.Delete\");\n\n        var header = <div>\n            <Row>\n                {(this.state.showRefer) ?\n                    (<Col md=\"12\">\n                        <div className=\"policy-warning\">\n                            {this.state.policyReferNotes.map((ct, i) => {\n                                return (<div><span style={{ fontSize: 18 }}>*</span><span style={{ marginRight: 15 }}>{ct.NoteText}</span></div>)\n                            })\n                            }\n                        </div>\n                    </Col>\n                    ) : (null)}\n                {(this.state.status == 'Declined') ?\n                    (<Col md=\"12\" style={{ textAlign: \"center\", color: \"red\", fontSize: 15 }}>\n                        {t(\"generateQuote:PolicyisDeclinedbytheSystem\")}\n                </Col>\n                    ) : (null)}\n                <Col xs=\"12\" md=\"12\">\n                    <Row>\n                        <Col md=\"2\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:Policy\")}</p>\n                                <span>{this.state.policyNumber}</span>\n                            </div>\n                        </Col>\n                        <Col md=\"5\">\n                            <div className=\"policy-box\">\n                                <p>{this.state.vesselTypeName}\n                                    <span>\n                                        {(this.state.status != \"Active\" && this.state.status != '') ? (\n                                            <BTN color=\"primary\" onClick={() => this.editVesselType()} title=\"Change Vessel Type\">\n                                                <i className=\"fa fa-pencil\"></i>\n                                            </BTN>\n                                        ) : (null)}\n                                    </span>\n                                </p>\n                                <div className=\"qt-status\">\n                                    <p className=\"pl-status badge badge-primary\">{this.state.status}</p>\n                                    <p className=\"pl-status badge badge-warning\">UNPAID</p>\n                                    {(this.state.refrred) ?\n                                    (<h6 style={{ backgroundColor: \"#9e3434\", padding: \"2px 10px\", width: \"max-content\", float: \"left\", color: \"white\" }}>{t(\"generateQuote:Referred\")}</h6>)\n                                    : (null)}\n                                </div>\n                            </div>\n                        </Col>\n                        <Col md=\"3\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:Phone\")}</p>\n                                <span>{this.state.phone}</span>\n                            </div>\n                        </Col>\n                        <Col md=\"2\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:Claims\")}</p>\n                                <span>0</span>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md=\"4\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:PolicyHolder\")}</p>\n                                <span>{this.state.policyHolder}</span>\n                            </div>\n                        </Col>\n                        <Col md=\"4\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:Email\")}</p>\n                                <span>{this.state.email}</span>\n                            </div>\n                        </Col>\n                        <Col md=\"4\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:Country\")}</p>\n                                <span>{this.state.country}</span>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md=\"4\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:PolicyType\")}</p>\n                                <div className=\"pl-inner\">\n                                    {(this.state.changePolicyType) ? (\n                                        <Input type=\"select\" name=\"policyType\" id=\"policyType\" onChange={(e) => this.selectContainerType(e.target.value, 'policyType')} value={this.state.policyType} style={{ width: \"fit-content\", display: \"inline-block\" }}>\n                                            {this.state.policyTypeList.map((ct, i) => {\n                                                return (<option value={ct.StringMapName}>{ct.StringMapName}</option>)\n                                            })\n                                            }\n                                        </Input>\n                                    ) : (\n                                            <span>{this.state.policyType}</span>\n                                        )}\n                                    <BTN color=\"primary\" onClick={() => this.editPolicyType()} title=\"Change Policy Type\">\n                                        <i className=\"fa fa-pencil\"></i>\n                                    </BTN>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col md=\"4\">\n                            <div className=\"policy-box\">\n                                <p>\n                                {t(\"generateQuote:Language\")}\n                                    <BTN color=\"primary\" onClick={() => this.editLanguage()} title=\"Change Language\">\n                                        <i className=\"fa fa-pencil\"></i>\n                                    </BTN>\n                                </p>\n                                <div className=\"pl-inner\">\n                                    <label>\n                                    {t(\"generateQuote:Refer\")}\n                                        <Input type=\"checkbox\" name=\"refrred\" id=\"refrred\" onChange={(e) => this.handleChange(e)} value={this.state.refrred} checked={this.state.refrred == true ? true : false} value={this.state.refrred} style={{ marginLeft: \"10px\" }} disabled={this.state.showRefer}>\n                                        </Input>\n                                    </label>\n                                    {(this.state.changeLanguage) ? (\n                                        <Input type=\"select\" name=\"languageId\" id=\"languageId\" onChange={(e) => this.selectContainerType(e.target.value, 'language')} value={this.state.languageId}>\n                                            {this.state.languageList.map((ct, i) => {\n                                                return (<option value={ct.LanguageId}>{ct.Language}</option>)\n                                            })\n                                            }\n                                        </Input>\n                                    ) : (\n                                            <span>{this.state.language}</span>\n                                        )}\n                                </div>\n                            </div>\n                        </Col>\n                        <Col md=\"4\">\n                            <div className=\"policy-box\">\n                                <p>{t(\"generateQuote:Currency\")}</p>\n                                <div className=\"pl-inner\">\n                                    {(this.state.changeCurrency) ? (\n                                        <Input type=\"select\" name=\"currency\" id=\"currency\" onChange={(e) => this.selectContainerType(e.target.value, 'currency')} value={this.state.currency} style={{ width: \"fit-content\", display: \"inline-block\" }}>\n                                            {this.state.currencyList.map((ct, i) => {\n                                                return (<option value={ct.CurrncyCode}>{ct.CurrncyCode}</option>)\n                                            })\n                                            }\n                                        </Input>\n                                    ) : (\n                                            <span>{this.state.currency}</span>\n                                        )}\n                                    <BTN  color=\"primary\" onClick={() => this.editCurrency()} title=\"Change Currency\">\n                                        <i className=\"fa fa-pencil\"></i>\n                                    </BTN>\n                                </div>\n                            </div>\n                        </Col>                        \n                    </Row>\n                </Col>\n            </Row>\n        </div>;\n\n        return (\n            <div>\n                <Col style={{ marginTop: \"20px\" }}>\n                    <div className=\"input-box\">\n                        {header}\n                    </div>\n                    <div className=\"input-box\">\n                        <Row>\n                            <Col md=\"6\">\n                                <Card>\n                                    <CardBody style={{ backgroundColor: \"#f2f2f2\" }}>\n                                        <div className=\"input-box\">\n                                            <Row>\n                                                <Col md=\"2\">\n                                                    <b>{t(\"generateQuote:Binder\")}</b>\n                                                </Col>\n                                                <Col md=\"4\">\n                                                    {this.state.binder}\n                                                </Col>\n                                                {CommonConfig.isEmpty(this.state.subBinder) ? (null) :\n                                                    (<Col md=\"6\" style={{ display: \"inline-flex\" }}>\n                                                        <Col md=\"6\">\n                                                            <b>{t(\"generateQuote:Sub Binder\")}</b>\n                                                        </Col>\n                                                        <Col md=\"6\">\n                                                            {this.state.subBinder}\n                                                        </Col>\n\n                                                    </Col>)}\n                                            </Row>\n                                        </div>\n                                        <div className=\"input-box\">\n                                            <Row>\n                                                <Col md=\"4\">\n                                                    <b>{t(\"generateQuote:Insurance Company\")}</b>\n                                                </Col>\n                                                <Col md=\"8\">\n                                                    {this.state.insuranceCompany}\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                        <div className=\"input-box\" style={{ marginBottom: 50 }}>\n                                            <Row>\n                                                <Col md=\"3\">\n                                                    <b>{t(\"generateQuote:Excess\")}</b>\n                                                </Col>\n                                                <Col md=\"3\">\n                                                    {this.state.excess}\n                                                </Col>\n                                                <Col md=\"3\">\n                                                    <b>{t(\"generateQuote:Base Rate\")}</b>\n                                                </Col>\n                                                <Col md=\"3\">\n                                                    {this.state.baseRate}{(this.state.baseRateType == \"Rating\" ? '%' : (null))}\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                        <div className=\"input-box\">\n                                            <Row>\n                                                <Col md=\"2\">\n                                                </Col>\n                                                <Col md=\"3\">\n                                                    <label>{t(\"generateQuote:PolicyType\")}</label>\n                                                </Col>\n                                                <Col md=\"5\">\n                                                    <Input type=\"select\" name=\"premiumType\" id=\"premiumType\" onChange={(e) => this.selectType(e.target, 'premiumType')} value={this.state.premiumType}>\n                                                        <option value=''>{t(\"generateQuote:Select\")}</option>\n                                                        {this.state.premiumPolicyType.map((sm, i) => {\n                                                            return (<option value={sm.StringMapKey}>{sm.StringMapName}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"premiumTypeError\" className=\"error invalid-feedback\"></em>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                        <div className=\"input-box\">\n                                            <Row>\n                                                <Col md=\"2\">\n                                                </Col>\n                                                <Col md=\"5\">\n                                                    <h6>{t(\"generateQuote:Policy Premium\")}</h6>\n                                                </Col>\n                                                <Col md=\"3\" style={{ textAlign: \"right\" }}>\n                                                    <h6>{this.state.policyPremium}</h6>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                </Col>\n                                            </Row>\n                                        </div>\n\n                                        {(this.state.premiumType == 'Comprehensive') ? (\n                                            <div>\n                                                <div className=\"input-box\">\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                        <Col md=\"5\">\n                                                            <h6>{t(\"generateQuote:Levy\")}</h6>\n                                                        </Col>\n                                                        <Col md=\"3\" style={{ textAlign: \"right\" }}>\n                                                            <h6>{this.state.levy}</h6>\n                                                        </Col>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                    </Row>\n                                                </div>\n                                                <div className=\"input-box\">\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                        <Col md=\"5\">\n                                                            <h6>{t(\"generateQuote:Admin Fee\")}</h6>\n                                                        </Col>\n                                                        <Col md=\"3\" style={{ textAlign: \"right\" }}>\n                                                            <h6>{this.state.adminFee}</h6>\n                                                        </Col>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                    </Row>\n                                                </div>\n\n                                                <hr style={{ height: 1, backgroundColor: '#000000', width: \"70%\", marginBottom: 7, marginTop: -12 }} />\n                                                <div className=\"input-box\">\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                        <Col md=\"5\">\n                                                            <h5>{t(\"generateQuote:Total\")}</h5>\n                                                        </Col>\n                                                        <Col md=\"3\" style={{ textAlign: \"right\" }}>\n                                                            <h5>{(this.state.total).toFixed(2)}</h5>\n                                                        </Col>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                    </Row>\n                                                </div>\n                                            </div>\n                                        ) : null}\n                                        {(this.state.premiumType == 'Comprehensive') ? (\n                                            <div>\n                                                {this.state.CoverageAlreadyList.map((ca, i) => {\n                                                    if (ca.isAdded) {\n                                                        return (\n                                                            <Row>\n                                                                <Col md=\"2\">\n                                                                </Col>\n                                                                <Col md=\"5\">\n                                                                    <h6>{ca.policyOption}</h6>\n                                                                </Col>\n                                                                <Col md=\"3\" style={{ textAlign: \"right\" }}>\n                                                                    <h6>{ca.premium.toFixed(2)}</h6>\n                                                                </Col>\n                                                                <Col md=\"2\">\n                                                                    {(ca.IsDefault == 0) ?\n                                                                        (<BTN title={DeleteButton} className=\"btn-sm\" onClick={() => this.deleteCoverageModal(ca, 'CoverageAlready')} style={{ marginLeft: 5 }} color=\"danger\">\n                                                                            <i className=\"fa fa-trash\"></i>\n                                                                        </BTN>)\n                                                                        : (null)}\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n                                                })}\n\n                                                <hr style={{ height: 1, backgroundColor: '#000000', width: \"70%\", marginBottom: 7, marginTop: 0 }} />\n                                                <div className=\"input-box\">\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                        <Col md=\"5\">\n                                                            <h5>{t(\"generateQuote:Total Add Ons\")}</h5>\n                                                        </Col>\n                                                        <Col md=\"3\" style={{ textAlign: \"right\" }}>\n                                                            <h5>{this.state.totalAddOn}</h5>\n                                                        </Col>\n                                                        <Col md=\"2\">\n                                                        </Col>\n                                                    </Row>\n                                                </div>\n                                            </div>\n                                        ) : (null)}\n                                        <div className=\"input-box\">\n                                            <Row>\n                                                <Col md=\"2\">\n                                                </Col>\n                                                <Col md=\"5\">\n                                                    <h3>{t(\"generateQuote:Total Due\")}</h3>\n                                                </Col>\n                                                <Col md=\"3\" style={{ textAlign: \"right\" }}>\n                                                    <h3>{this.state.totalPremium}</h3>\n                                                </Col>\n                                                <Col md=\"2\">\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                            {(this.state.premiumType != 'ThirdParty') ? (\n                                <Col md=\"6\">\n                                    <Row>\n                                        <Col md=\"12\" style={{ textAlign: \"center\" }}>\n                                            <p><b>{t(\"generateQuote:Wait... you may want to get an add on policy for secured protection\")}</b></p>\n                                        </Col>\n                                    </Row>\n                                    <Card>\n                                        <CardBody style={{ backgroundColor: \"#f2f2f2\" }}>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                        <div style={{ marginTop: 10 }} className=\"input-box\">\n                                                            <table className=\"added-detail-table\" style={{ width: \"100%\" }}>\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>{t(\"policyAddOnCoverage:AvailableToPurchase.PolicyOption\")}</th>\n                                                                        <th>{t(\"policyAddOnCoverage:AvailableToPurchase.Premium\")}</th>\n                                                                        <th style={{ width: \"25%\" }}>{t(\"policyAddOnCoverage:AvailableToPurchase.Action\")}</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n\n                                                                    {this.state.CoverageAvailable.map((ca, i) => {\n                                                                        {\n                                                                            // console.log(this.state.CoverageAvailable)\n                                                                        }\n                                                                        if (!ca.isAdded) {\n                                                                            return (\n                                                                                <tr>\n                                                                                    <td>{ca.policyOption}</td>\n                                                                                    <td>{ca.premium}</td>\n                                                                                    <td>\n                                                                                        <BTN title={AddButton} color=\"primary\" icon=\"fa fa-plus\" onClick={() => this.addToListModal(ca, 'CoverageAvailable')} >\n                                                                                            <i className=\"fa fa-plus\"></i>\n                                                                                        </BTN>\n                                                                                    </td>\n                                                                                </tr>\n                                                                            )\n                                                                        }\n                                                                    }\n                                                                    )}\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ) : (null)}\n                        </Row>\n                    </div>\n                    <div className=\"input-box\">\n                        <Row>\n                            <Col md=\"6\">\n                                <Row>\n                                    <Col md=\"12\">\n                                        <p><b>{t(\"generateQuote:Assumptions\")}</b></p>\n                                        <div style={{ height: 130, overflow: \"scroll\" }}>\n                                            <ul>\n                                                {this.state.assumptionArr.map((type, i) => {\n                                                    return (<li>{type.AssumptionDescription}</li>)\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col md=\"6\">\n                                <Row>\n                                    <Col md=\"12\">\n                                        <p><b>{t(\"generateQuote:Terms & Conditions\")}</b></p>\n                                        <div style={{ height: 130, overflow: \"scroll\" }}>\n                                            <div dangerouslySetInnerHTML={{ __html: t(\"translation:termsAndCondition.terms\") }}></div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div className=\"input-box\">\n                        <Row>\n                            <Col md=\"3\" style={{ maxWidth: \"19%\" }}>\n                                <h4>{t(\"generateQuote:Payment Method *\")}</h4>\n                            </Col>\n                            <Col>\n                                <div className=\"input-box rc-box\">\n                                    <div className=\"rc-inline\">\n                                        <label>\n                                            <Input type=\"radio\" name=\"paymentMode\" checked={(this.state.radioSelected === 'bankPayment') ? true : false}\n                                                value={this.state.radioSelected} onChange={() => this.onRadioBtnClick('paymentMode', 'bankPayment')}\n                                            />\n                                            {t(\"generateQuote:Bank Payment\")}\n                                    </label>\n\n                                        <label >\n                                            <Input type=\"radio\" name=\"paymentMode\" checked={(this.state.radioSelected === 'cardPayment') ? true : false}\n                                                value={this.state.radioSelected} onChange={() => this.onRadioBtnClick('paymentMode', 'cardPayment')} />\n                                            {t(\"generateQuote:Debit/Credit Card\")}\n                                    </label>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div>\n                        {(this.state.radioSelected == \"bankPayment\") ?\n                            <Row>\n                                <Col md=\"12\">\n                                    <h5>{t(\"generateQuote:Enter Bank Information\")}</h5>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Card>\n                                        <CardBody style={{ backgroundColor: \"#f2f2f2\" }}>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:Account Name\")}</label>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <Input type=\"text\" name=\"accountName\" id=\"accountName\" onChange={(e) => this.handleChange(e)} value={this.state.accountName} />\n                                                        <em id=\"accountNameError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:Bank Name\")}</label>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <Input type=\"text\" name=\"bankName\" id=\"bankName\" onChange={(e) => this.handleChange(e)} value={this.state.bankName} />\n                                                        <em id=\"bankNameError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:Country\")}</label>\n                                                    </Col>\n                                                    <Col md=\"3\">\n                                                        <Input type=\"select\" name=\"bankCountry\" id=\"bankCountry\" onChange={(e) => this.selectType(e.target, 'bankCountry')} value={this.state.bankCountry}>\n                                                            <option value=''>{t(\"generateQuote:Select\")}</option>\n                                                            {this.state.countryList.map((type, i) => {\n                                                                return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                        <em id=\"bankCountryError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:IBAN\")}</label>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <Input type=\"text\" name=\"IBAN\" id=\"IBAN\" onChange={(e) => this.handleChange(e)} value={this.state.IBAN} />\n                                                        <em id=\"IBANError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:BIC\")}</label>\n                                                    </Col>\n                                                    <Col md=\"3\">\n                                                        <Input type=\"text\" name=\"BIC\" id=\"BIC\" onChange={(e) => this.handleChange(e)} value={this.state.BIC} />\n                                                        <em id=\"BICError\" className=\"error invalid-feedback\"></em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            : (null)}\n                        {(this.state.radioSelected == \"cardPayment\") ?\n                            <Row>\n                                <Col md=\"12\">\n                                    <h5>{t(\"generateQuote:Enter Card Detail\")}</h5>\n                                </Col>\n                                <Col md=\"9\">\n                                    <Card>\n                                        <CardBody style={{ backgroundColor: \"#f2f2f2\" }}>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:Cardholder Name\")}</label>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <Input type=\"text\" name=\"cardholderName\" id=\"cardholderName\" onChange={(e) => this.handleChange(e)} value={this.state.cardholderName} />\n                                                        <em className=\"error invalid-feedback\" >{t(\"generateQuote:Please enter cardholder name\")}</em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:Card Number\")}</label>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <Input type=\"text\" name=\"cardNumber\" id=\"cardNumber\" onChange={(e) => this.handleChange(e)} value={this.state.cardNumber} />\n                                                        <em className=\"error invalid-feedback\" >{t(\"generateQuote:Please enter card number\")}</em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:Card Type\")}</label>\n                                                    </Col>\n                                                    <Col md=\"3\">\n                                                        <Input type=\"select\" name=\"cardType\" id=\"cardType\" onChange={(e) => this.selectType(e.target, 'cardType')} value={this.state.cardType}>\n                                                            <option value=''>{t(\"generateQuote:Select\")}</option>\n                                                            {/* {this.state.policyTypeList.map((type, i) => {\n                                                                return (<option value={type.value}>{type.label}</option>)\n                                                            })\n                                                            } */}\n                                                        </Input>\n                                                        <em className=\"error invalid-feedback\" >{t(\"generateQuote:Please selct card type\")}</em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:Expiry\")}</label>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <Input type=\"select\" name=\"expiryMonth\" id=\"expiryMonth\" onChange={(e) => this.handleChange(e)} value={this.state.expiryMonth}>\n                                                            <option value=''>{t(\"generateQuote:Select\")}</option>\n                                                            {/* {this.state.policyTypeList.map((type, i) => {\n                                                            return (<option value={type.value}>{type.label}</option>)\n                                                        })\n                                                        } */}\n                                                        </Input>\n                                                        <em className=\"error invalid-feedback\" >{t(\"generateQuote:Please enter expiry month\")}</em>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <Input type=\"select\" name=\"expiryYear\" id=\"expiryYear\" onChange={(e) => this.handleChange(e)} value={this.state.expiryYear}>\n                                                            <option value=''>{t(\"generateQuote:Select\")}</option>\n                                                            {/* {this.state.policyTypeList.map((type, i) => {\n                                                            return (<option value={type.value}>{type.label}</option>)\n                                                        })\n                                                        } */}\n                                                        </Input>\n                                                        <em className=\"error invalid-feedback\" >{t(\"generateQuote:Please enter expiry Year\")}</em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <div className=\"input-box\">\n                                                <Row>\n                                                    <Col md=\"2\">\n                                                        <label>{t(\"generateQuote:CVV\")}</label>\n                                                    </Col>\n                                                    <Col md=\"2\">\n                                                        <Input type=\"text\" name=\"CardBIC\" id=\"CardBIC\" onChange={(e) => this.handleChange(e)} value={this.state.CardBIC} />\n                                                        <em className=\"error invalid-feedback\" >{t(\"generateQuote:Please enter BIC\")}</em>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            : (null)}\n                    </div>\n                    <div className=\"input-box\">\n                        <Row>\n                            <Col md=\"12\">\n                                <h4>{t(\"generateQuote:Documents Required to be Uploaded\")}</h4>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div className=\"input-box\">\n                        <Row>\n                            <Col md=\"2\">\n                                <h6>{t(\"generateQuote:Document 1\")}</h6>\n                            </Col>\n                            <Col md=\"2\">\n                                <h6>{t(\"generateQuote:Upload\")}</h6>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"2\">\n                                <h6>{t(\"generateQuote:Document 2\")}</h6>\n                            </Col>\n                            <Col md=\"2\">\n                                <h6>{t(\"generateQuote:Upload\")}</h6>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md=\"2\">\n                                <h6>{t(\"generateQuote:Document 3\")}</h6>\n                            </Col>\n                            <Col md=\"2\">\n                                <h6>{t(\"generateQuote:Upload\")}</h6>\n                            </Col>\n                        </Row>\n                    </div>\n                    {(this.state.LoginUserType == \"InternalStaff\") ? (null) :\n                        (<div className=\"input-box\">\n                            <Row>\n                                <Col md=\"12\">\n                                    <Input type=\"checkbox\" name=\"assumptionAndTerms\" id=\"assumptionAndTerms\" onChange={(e) => this.handleChange(e)} checked={this.state.assumptionAndTerms == true ? \"checked\" : \"\"} value={this.state.assumptionAndTerms} />\n                                    <span>{t(\"generateQuote:I agree to the\")} {this.state.assumptionCount == 0 ? 'Assumption' : (<a onClick={() => this.openModal('Assumption')} style={{ textDecorationLine: 'underline', cursor: 'pointer' }}>{t(\"generateQuote:Assumptions\")}</a>)} {t(\"generateQuote:as well as\")} <a onClick={() => this.openModal('TermsAndCondition')} style={{ textDecorationLine: 'underline', cursor: 'pointer' }}>{t(\"generateQuote:Terms & Conditions\")}</a></span>\n                                    {(this.state.assumptionAndTermsError)\n                                        ? <p style={{ color: 'red' }}>{t(\"generateQuote:You must agree to Assumption And Terms & Conditions\")}</p>\n                                        : (null)}\n                                </Col>\n                            </Row>\n                        </div>)}\n                    <div className=\"input-box\">\n                        <Row>\n                            <Col md=\"12\" style={{ textAlign: \"center\" }}>\n                                <BTN color=\"success\" onClick={() => this.Back()} style={{ marginRight: 10 }} >\n                                    <i className=\"fa fa-angle-left\" />\n                                    {t(\"generateQuote:Back\")}\n                                </BTN>\n                                <BTN color=\"success\" onClick={() => this.SaveQuatation()} disabled={this.state.ButtonGenerateDisable} >\n                                    <i className=\"fa fa-check\"></i>\n                                    {t(\"generateQuote:Save Quotation\")}\n                                </BTN>\n                            </Col>\n                        </Row>\n                    </div>\n                </Col>\n\n                <Modal isOpen={this.state.toggleAssumption} toggle={() => this.toggleLarge('Assumption')}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={() => this.toggleLarge('Assumption')}>{t(\"generateQuote:Assumption\")}</ModalHeader>\n                    <ModalBody>\n                        <ul>\n                            {this.state.assumptionArr.map((type, i) => {\n                                return (<li>{type.AssumptionDescription}</li>)\n                            })}\n                        </ul>\n                    </ModalBody>\n                    <ModalFooter>\n                        <button color=\"secondary\" onClick={() => this.toggleLarge('TermsAndCondition')}>{t(\"generateQuote:Select\")}Close</button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={this.state.toggleTermsAndCondition} toggle={() => this.toggleLarge('TermsAndCondition')}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={() => this.toggleLarge('TermsAndCondition')}>{t(\"generateQuote:Terms And Condition\")}</ModalHeader>\n                    <ModalBody>\n                        <div dangerouslySetInnerHTML={{ __html: t(\"translation:termsAndCondition.terms\") }}></div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <button color=\"secondary\" onClick={() => this.toggleLarge('TermsAndCondition')}>{t(\"generateQuote:Close\")}</button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={this.state.toggleSaveModal} toggle={this.toggleSave}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={this.toggleSave}>{t(\"policyAddOnCoverage:ConformationSaveModal.Header\")}</ModalHeader>\n                    <ModalBody>\n                    {t(\"generateQuote:Are you sure you want to Add\")} <b>{this.state.tempdata.policyOption}</b> {t(\"generateQuote:Coverage?\")}\n                    </ModalBody>\n                    <ModalFooter>\n                        <button color=\"primary\" onClick={() => this.addToList(this.state.tempdata)}>{t(\"policyAddOnCoverage:ConformationSaveModal.Approval\")}</button>\n                        <button color=\"secondary\" onClick={this.toggleSave}>{t(\"policyAddOnCoverage:ConformationSaveModal.Reject\")}</button>\n                    </ModalFooter>\n                </Modal>\n                <Modal isOpen={this.state.toggleDeleteModal} toggle={this.toggleDelete}\n                    className={'modal-lg ' + this.props.className}>\n                    <ModalHeader toggle={this.toggleDelete}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Header\")}</ModalHeader>\n                    <ModalBody>\n                    {t(\"generateQuote:Do you want to delete \")}<b>{this.state.tempdata.policyOption}</b> {t(\"generateQuote:Coverage?\")}\n                    </ModalBody>\n                    <ModalFooter>\n                        <button color=\"primary\" onClick={() => this.deleteCoverage(this.state.tempdata)}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Approval\")}</button>\n                        <button color=\"secondary\" onClick={this.toggleDelete}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Reject\")}</button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(GenerateQuote);"]},"metadata":{},"sourceType":"module"}