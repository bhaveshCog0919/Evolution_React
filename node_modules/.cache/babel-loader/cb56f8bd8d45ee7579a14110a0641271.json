{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/TESTPage.js\";\nimport React, { Component } from 'react';\nimport { Modal, Collapse, Button as BTN, ModalHeader, Card, CardHeader, CardBody, Col, Row, Input, Form } from 'reactstrap';\nimport { Button } from 'primereact/button';\nimport api from '../../utils/apiClient';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig } from '../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport APIConstant from '../../utils/constants';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport { off } from 'codemirror';\nimport { toast } from 'react-toastify';\nimport CKEditor from 'ckeditor4-react';\n\nclass TESTPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      custom: true,\n      messagetype: 'SMS',\n      policyCount: 0,\n      templateList: [],\n      templateId: '',\n      editMessageField: false,\n      DynamicTemplateList: [],\n      DynamicTemplateId: '',\n      templateNote: '',\n      updateTemplate: false,\n      loginId: CommonConfig.loggedInUserId()\n    };\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSmsEmailTemplate();\n    this.getSmsEmailCount();\n  }\n\n  sendSMSEMAIL() {\n    let data = {};\n    api.post('api/sendSMSEMAIL', data).then(res => {\n      if (res.success) {}\n    });\n  }\n\n  getDinamicField() {\n    let data = {\n      messagetype: this.state.messagetype,\n      templateId: this.state.templateId,\n      loginId: this.state.loginId\n    };\n    api.post('api/getDinamicField', data).then(res => {\n      debugger;\n\n      if (res.success) {\n        this.state.DynamicTemplateList = [];\n        res.data.forEach(element => {\n          var data = {\n            value: element.MessageTemplateId,\n            label: element.TamplateName\n          };\n          this.state.DynamicTemplateList.push(data);\n        });\n      }\n    });\n  }\n\n  getSmsEmailTemplate() {\n    let data = {\n      messagetype: this.state.messagetype,\n      // templateId: this.state.templateId,\n      loginId: this.state.loginId\n    };\n    api.post('api/getSmsEmailTemplate', data).then(res => {\n      debugger;\n\n      if (res.success) {\n        this.state.templateList = [];\n        res.data.forEach(element => {\n          var data = {\n            value: element.MessageTemplateId,\n            label: element.TamplateName\n          };\n          this.state.templateList.push(data);\n        });\n      }\n    });\n  }\n\n  getSmsEmailCount() {\n    let data = {\n      // messagetype: this.state.messagetype,\n      // templateId: this.state.templateId,\n      loginId: this.state.loginId\n    };\n    api.post('api/getSmsEmailCount', data).then(res => {\n      debugger;\n\n      if (res.success) {}\n    });\n  }\n\n  testRenewalSendEmail() {\n    let data = {\n      // messagetype: this.state.messagetype,\n      // templateId: this.state.templateId,\n      loginId: this.state.loginId\n    };\n    api.post('api/testRenewalSendEmail', data).then(res => {\n      debugger;\n\n      if (res.success) {}\n    });\n  }\n\n  onRadioBtnClick(radioType, radioSelected) {\n    this.setState({\n      [radioType]: radioSelected\n    });\n    this.getSmsEmailTemplate();\n    this.getDinamicField();\n  }\n\n  componentWillUpdate(nextProps) {}\n\n  editMessageField() {\n    this.setState({\n      editMessageField: !this.state.editMessageField\n    });\n    this.getDinamicField();\n  }\n\n  selectType(value, type) {\n    if (value === '' || value === undefined || value === null) {\n      this.setState({\n        [type]: ''\n      });\n    } else {\n      this.setState({\n        [type]: value.value\n      });\n    }\n  }\n\n  handleDetailsChange(evt) {\n    const data = evt.editor.getData();\n\n    if (CommonConfig.isEmpty(data)) {\n      this.setState({\n        templateNote: ''\n      });\n    } else {\n      this.setState({\n        templateNote: data\n      });\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Cognisun Testing Page\")), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginBottom: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Sent\",\n      onClick: () => this.testRenewalSendEmail(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 45\n      }\n    }, \"Test Renewal SendEmail\")))))))));\n  }\n\n}\n\nexport default withTranslation()(TESTPage);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/TESTPage.js"],"names":["React","Component","Modal","Collapse","Button","BTN","ModalHeader","Card","CardHeader","CardBody","Col","Row","Input","Form","api","withTranslation","DataTable","Column","MultiSelect","InputText","CommonConfig","DatePicker","moment","APIConstant","Select","off","toast","CKEditor","TESTPage","constructor","props","handleChange","e","setState","target","name","value","state","custom","messagetype","policyCount","templateList","templateId","editMessageField","DynamicTemplateList","DynamicTemplateId","templateNote","updateTemplate","loginId","loggedInUserId","onRadioBtnClick","bind","componentDidMount","getSmsEmailTemplate","getSmsEmailCount","sendSMSEMAIL","data","post","then","res","success","getDinamicField","forEach","element","MessageTemplateId","label","TamplateName","push","testRenewalSendEmail","radioType","radioSelected","componentWillUpdate","nextProps","selectType","type","undefined","handleDetailsChange","evt","editor","getData","isEmpty","render","t","header","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Collapse, Button as BTN, ModalHeader, Card, CardHeader, CardBody, Col, Row, Input, Form } from 'reactstrap';\r\nimport { Button } from 'primereact/button';\r\nimport api from '../../utils/apiClient';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport DatePicker from 'react-date-picker';\r\nimport moment from 'moment';\r\nimport APIConstant from '../../utils/constants';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.min.css';\r\nimport { off } from 'codemirror';\r\nimport { toast } from 'react-toastify';\r\nimport CKEditor from 'ckeditor4-react';\r\n\r\n\r\nclass TESTPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            custom: true,\r\n            messagetype: 'SMS',\r\n\r\n            policyCount: 0,\r\n\r\n            templateList: [],\r\n            templateId: '',\r\n\r\n            editMessageField:false,\r\n            \r\n            DynamicTemplateList:[],\r\n            DynamicTemplateId:'',\r\n\r\n            templateNote: '',\r\n\r\n            updateTemplate:false,\r\n\r\n            loginId: CommonConfig.loggedInUserId()\r\n\r\n        };\r\n        this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSmsEmailTemplate();\r\n        this.getSmsEmailCount();\r\n    }\r\n\r\n    sendSMSEMAIL(){\r\n        let data = {};\r\n        api.post('api/sendSMSEMAIL', data).then(res => {\r\n            if (res.success) {\r\n            }\r\n        });\r\n    }\r\n\r\n    getDinamicField() {\r\n        let data = {\r\n            messagetype: this.state.messagetype,\r\n            templateId: this.state.templateId,\r\n            loginId: this.state.loginId,\r\n        };\r\n        api.post('api/getDinamicField', data).then(res => {\r\n            debugger;\r\n            if (res.success) {\r\n                this.state.DynamicTemplateList = [];\r\n                res.data.forEach(element => {\r\n                    var data = {\r\n                        value: element.MessageTemplateId,\r\n                        label: element.TamplateName\r\n                    }\r\n                    this.state.DynamicTemplateList.push(data);\r\n                });\r\n            }\r\n        });\r\n     }\r\n\r\n    getSmsEmailTemplate() { \r\n        let data = {\r\n            messagetype: this.state.messagetype,\r\n            // templateId: this.state.templateId,\r\n            loginId: this.state.loginId,\r\n        };\r\n        api.post('api/getSmsEmailTemplate', data).then(res => {\r\n            debugger;\r\n            if (res.success) {\r\n                this.state.templateList=[];\r\n                res.data.forEach(element => {\r\n                    var data = {\r\n                        value:element.MessageTemplateId,\r\n                        label:element.TamplateName\r\n                    }\r\n                    this.state.templateList.push(data);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getSmsEmailCount() { \r\n        let data = {\r\n            // messagetype: this.state.messagetype,\r\n            // templateId: this.state.templateId,\r\n            loginId: this.state.loginId,\r\n        };\r\n        api.post('api/getSmsEmailCount', data).then(res => {\r\n            debugger;\r\n            if (res.success) {\r\n            }\r\n        });\r\n    }\r\n\r\n    testRenewalSendEmail() {\r\n        let data = {\r\n            // messagetype: this.state.messagetype,\r\n            // templateId: this.state.templateId,\r\n            loginId: this.state.loginId,\r\n        };\r\n        api.post('api/testRenewalSendEmail', data).then(res => {\r\n            debugger;\r\n            if (res.success) {\r\n            }\r\n        });\r\n    }\r\n\r\n    onRadioBtnClick(radioType, radioSelected) {\r\n        this.setState({ [radioType]: radioSelected });\r\n        this.getSmsEmailTemplate();\r\n        this.getDinamicField();\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n\r\n    }\r\n\r\n    editMessageField(){\r\n        this.setState({ editMessageField: !this.state.editMessageField});\r\n        this.getDinamicField();\r\n    }\r\n    selectType(value, type) {\r\n        if (value === '' || value === undefined || value === null) {\r\n            this.setState({ [type]: '' });\r\n        } else {\r\n            this.setState({ [type]: value.value });\r\n        }\r\n    }\r\n\r\n    handleDetailsChange(evt) {\r\n        const data = evt.editor.getData();\r\n        if (CommonConfig.isEmpty(data)) {\r\n            this.setState({  templateNote: '' });\r\n       } else {\r\n            this.setState({ templateNote: data });\r\n         }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        return (\r\n            <div className=\"input-box\" id=\"accordion\">\r\n                <Card className=\"mb-0\">\r\n                    <CardHeader id=\"headingOne\">\r\n                        <h5 className=\"m-0 p-0\">Cognisun Testing Page</h5>\r\n                    </CardHeader>\r\n                    <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                        <CardBody>\r\n                            <div className=\"filter-data\">\r\n                                <Row style={{marginBottom:'25px'}}>\r\n                                    <Col md='1'>\r\n                                        <div>\r\n                                            <BTN color=\"success\" title=\"Sent\" onClick={() => this.testRenewalSendEmail()}>Test Renewal SendEmail</BTN>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Collapse>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withTranslation()(TESTPage);"]},"metadata":{},"sourceType":"module"}