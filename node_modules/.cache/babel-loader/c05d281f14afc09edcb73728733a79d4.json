{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/MigrationReport.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass MigrationReport extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'fromDate') {\n        this.setState({\n          fromDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'toDate') {\n        this.setState({\n          toDate: e.target.value\n        });\n      }\n    };\n\n    let columns = [{\n      field: \"PolicyId\",\n      header: \"Policy Id\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"InceptionDate\",\n      header: \"Inception Date\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date    \",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"PolicyType\",\n      header: \"Policy Type\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '70px'\n      }\n    }, {\n      field: \"VesselClass\",\n      header: \"Vessel Class\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"VesselType\",\n      header: \"Vessel Type\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyCountry\",\n      header: \"Policy Country\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"Binder\",\n      header: \"Binder\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"RegistrationCountry\",\n      header: \"Registration Country\",\n      sortable: true,\n      filter: true,\n      id: 11,\n      style: {\n        'width': '70px'\n      }\n    }, {\n      field: \"MooringName\",\n      header: \"Mooring Name\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"MooringType\",\n      header: \"Mooring Type\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"Premium19\",\n      header: \"2019 Premium\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Premium20\",\n      header: \"2020 Premium\",\n      sortable: true,\n      filter: true,\n      id: 15,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"NetPrem\",\n      header: \"Net Prem\",\n      sortable: true,\n      filter: true,\n      id: 16,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Levy\",\n      header: \"Levy\",\n      sortable: true,\n      filter: true,\n      id: 17,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Admin\",\n      header: \"Admin\",\n      sortable: true,\n      filter: true,\n      id: 18,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"PremDiff\",\n      header: \"Prem Diff\",\n      sortable: true,\n      filter: true,\n      id: 19,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Stage\",\n      header: \"Stage\",\n      sortable: true,\n      filter: true,\n      id: 20,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"Comment\",\n      header: \"Comment\",\n      sortable: true,\n      filter: true,\n      id: 21,\n      style: {\n        'width': '100px'\n      }\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      fromDate: '',\n      toDate: '',\n      selected: {},\n      selectAll: 0\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.toggleRow = this.toggleRow.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {}\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  actionTemplate(rowData, column) {\n    console.log('rowData', rowData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  MigrationReportAPI() {\n    var data = {\n      fromDate: this.state.fromDate ? this.state.fromDate : '',\n      toDate: this.state.toDate ? this.state.toDate : ''\n    };\n    api.post('api/MigrationReportAPI', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[1].length;\n\n        if (dataLength > 0) {\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[1][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              PolicyId: tempData.PolicyId,\n              PolicyNumber: tempData.PolicyNumber,\n              ClientName: tempData.ClientName,\n              InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\n              RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\n              PolicyType: tempData.PolicyType,\n              VesselClass: tempData.VesselClassName,\n              VesselType: tempData.VesselTypeName,\n              PolicyCountry: tempData.Country,\n              Binder: tempData.UMRN,\n              RegistrationCountry: tempData.VesselRegistrationLocation,\n              MooringName: tempData.MooringName,\n              MooringType: tempData.MooringType,\n              Premium19: tempData.TotalDue2019,\n              Premium20: tempData.TotalDue2020,\n              NetPrem: tempData.NetPremium,\n              Levy: tempData.Levy,\n              Admin: tempData.AdminFee,\n              PremDiff: tempData.DifferenceTotalDue,\n              Stage: tempData.Stage,\n              Comment: tempData.Comments\n            });\n          }\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.data.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.MigrationReportAPI();\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, \"Migration Report\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 53\n      }\n    }, \"From Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"fromDate\",\n      name: \"fromDate\",\n      value: this.state.fromDate,\n      onChange: e => this.handleChange(e, 'fromDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 53\n      }\n    }, \"To Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"toDate\",\n      name: \"toDate\",\n      value: this.state.toDate,\n      onChange: e => this.handleChange(e, 'toDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 53\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 41\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 41\n      }\n    }, \" Search \"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Migration Report\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(MigrationReport);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/MigrationReport.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","MigrationReport","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","fromDate","toDate","columns","field","header","sortable","filter","id","style","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","selected","selectAll","colOptions","col","push","label","toggleRow","bind","export","componentDidMount","getDropDownValues","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","actionTemplate","rowData","column","console","log","MigrationReportAPI","formattedData","dataLength","i","tempData","PolicyId","PolicyNumber","ClientName","InceptionDate","format","RenewalDate","PolicyType","VesselClass","VesselClassName","VesselType","VesselTypeName","PolicyCountry","Country","Binder","UMRN","RegistrationCountry","VesselRegistrationLocation","MooringName","MooringType","Premium19","TotalDue2019","Premium20","TotalDue2020","NetPrem","NetPremium","Levy","Admin","AdminFee","PremDiff","DifferenceTotalDue","Stage","Comment","Comments","newSelected","Object","assign","toggleSelectAll","forEach","x","dt","exportCSV","filterData","show","condition","errorField","message","document","getElementById","className","innerHTML","render","t","map","body","filterMatchMode","columnToggleIcon","position","onColumnToggle","width","marginRight","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n\r\nclass MigrationReport extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        let columns = [\r\n            { field: \"PolicyId\", header: \"Policy Id\", sortable: true, filter: true, id: 1 ,style: { 'width': '100px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 2 ,style: { 'width': '60px' } },\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 3 ,style: { 'width': '100px' } },\r\n            { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 4 ,style: { 'width': '80px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date    \", sortable: true, filter: true, id: 5 ,style: { 'width': '80px' } },\r\n            { field: \"PolicyType\", header: \"Policy Type\", sortable: true, filter: true, id: 6 ,style: { 'width': '70px' } },\r\n            { field: \"VesselClass\", header: \"Vessel Class\", sortable: true, filter: true, id: 7 ,style: { 'width': '100px' } },\r\n            { field: \"VesselType\", header: \"Vessel Type\", sortable: true, filter: true, id: 8 ,style: { 'width': '100px' } },\r\n            { field: \"PolicyCountry\", header: \"Policy Country\", sortable: true, filter: true, id: 9 ,style: { 'width': '100px' } },\r\n            { field: \"Binder\", header: \"Binder\", sortable: true, filter: true, id: 10 ,style: { 'width': '100px' } },\r\n            { field: \"RegistrationCountry\", header: \"Registration Country\", sortable: true, filter: true, id: 11, style: { 'width': '70px' } },\r\n            { field: \"MooringName\", header: \"Mooring Name\", sortable: true, filter: true, id: 12, style: { 'width': '100px' } },\r\n            { field: \"MooringType\", header: \"Mooring Type\", sortable: true, filter: true, id: 13 , style: { 'width': '100px' } },\r\n            { field: \"Premium19\", header: \"2019 Premium\", sortable: true, filter: true, id: 14 , style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Premium20\", header: \"2020 Premium\", sortable: true, filter: true, id: 15 , style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"NetPrem\", header: \"Net Prem\", sortable: true, filter: true, id: 16 , style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Levy\", header: \"Levy\", sortable: true, filter: true, id: 17 , style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Admin\", header: \"Admin\", sortable: true, filter: true, id: 18 , style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"PremDiff\", header: \"Prem Diff\", sortable: true, filter: true, id: 19 , style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Stage\", header: \"Stage\", sortable: true, filter: true, id: 20 , style: { 'width': '100px' } },\r\n            { field: \"Comment\", header: \"Comment\", sortable: true, filter: true, id: 21 , style: { 'width': '100px' } },\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n            fromDate: '',\r\n            toDate: '',\r\n            selected: {},\r\n            selectAll: 0\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.toggleRow = this.toggleRow.bind(this);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        console.log('rowData', rowData);\r\n\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n\r\n    MigrationReportAPI() {\r\n        var data = {\r\n            fromDate: this.state.fromDate ? this.state.fromDate : '',\r\n            toDate: this.state.toDate ? this.state.toDate : ''\r\n        };\r\n        api.post('api/MigrationReportAPI', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                var dataLength = res.data[1].length;\r\n                if (dataLength > 0) {\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[1][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            PolicyId:tempData.PolicyId,\r\n                            PolicyNumber:tempData.PolicyNumber,\r\n                            ClientName:tempData.ClientName,\r\n                            InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\r\n                            RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\r\n                            PolicyType:tempData.PolicyType,\r\n                            VesselClass:tempData.VesselClassName,\r\n                            VesselType:tempData.VesselTypeName,\r\n                            PolicyCountry:tempData.Country,\r\n                            Binder:tempData.UMRN,\r\n                            RegistrationCountry:tempData.VesselRegistrationLocation,\r\n                            MooringName:tempData.MooringName,\r\n                            MooringType:tempData.MooringType,\r\n                            Premium19:tempData.TotalDue2019,\r\n                            Premium20:tempData.TotalDue2020,\r\n                            NetPrem:tempData.NetPremium,\r\n                            Levy:tempData.Levy,\r\n                            Admin:tempData.AdminFee,\r\n                            PremDiff:tempData.DifferenceTotalDue,\r\n                            Stage:tempData.Stage,\r\n                            Comment:tempData.Comments \r\n                        });\r\n                    }\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n\r\n        if (this.state.selectAll === 0) {\r\n            this.state.data.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.MigrationReportAPI();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n    }\r\n\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Migration Report</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        {/* <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                MigrationReport\r\n                                 </h5>\r\n                            </BTN>\r\n                        </CardHeader> */}\r\n                        <CardBody>\r\n                            <div className=\"filter-data\">\r\n                                <Row>\r\n\r\n                                    <Col md='4'>\r\n                                        <Row>\r\n                                            <Col md='6'>\r\n                                                <div className=\"input-box\">\r\n                                                    <label>From Date</label>\r\n                                                    <Input type=\"date\" id=\"fromDate\" name=\"fromDate\"\r\n                                                        value={this.state.fromDate}\r\n                                                        onChange={(e) => this.handleChange(e, 'fromDate')}\r\n                                                    ></Input>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col md='6'>\r\n                                                <div className=\"input-box\">\r\n                                                    <label>To Date</label>\r\n                                                    <Input type=\"date\" id=\"toDate\" name=\"toDate\"\r\n                                                        value={this.state.toDate}\r\n                                                        onChange={(e) => this.handleChange(e, 'toDate')}\r\n                                                    ></Input>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col md='2'>\r\n                                        <div>&nbsp;</div>\r\n                                        <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Migration Report\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(MigrationReport);"]},"metadata":{},"sourceType":"module"}