{"ast":null,"code":"import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Col,Row}from'reactstrap';import ContactDetails from'./ContactDetails';import{withTranslation}from'react-i18next';import SidebarNav from'../SidebarNav/SidebarNav';var AddContactManagement=/*#__PURE__*/function(_Component){_inherits(AddContactManagement,_Component);var _super=_createSuper(AddContactManagement);function AddContactManagement(props){var _this;_classCallCheck(this,AddContactManagement);_this=_super.call(this,props);_this.state={isContactEdit:false};if(props.match.params.id!=undefined&&props.match.params.entityType!=undefined){_this.state.isContactEdit=true;_this.state.entityId=props.match.params.id;_this.state.entityType=props.match.params.entityType;}return _this;}_createClass(AddContactManagement,[{key:\"render\",value:function render(){var _Object$assign;var t=this.props.t;var mandatoryFieldMsg=t(\"mandatoryFieldMsg\");return/*#__PURE__*/React.createElement(\"div\",{className:\"animated fadeIn\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\",className:\"\"},/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},mandatoryFieldMsg))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:5}},/*#__PURE__*/React.createElement(Col,{xs:\"12\",md:\"12\"},this.state.isContactEdit?/*#__PURE__*/React.createElement(SidebarNav,Object.assign((_Object$assign={NavPage:\"User\",NavID:this.props.match.params.id},_defineProperty(_Object$assign,\"NavPage\",\"User\"),_defineProperty(_Object$assign,\"contactEntityType\",this.props.match.params.entityType),_defineProperty(_Object$assign,\"contactEntityId\",this.props.match.params.id),_defineProperty(_Object$assign,\"contactName\",this.state.fullName),_Object$assign),this.props)):null,/*#__PURE__*/React.createElement(ContactDetails,this.props))));}}]);return AddContactManagement;}(Component);export default withTranslation()(AddContactManagement);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/AddContactManagement.js"],"names":["React","Component","Col","Row","ContactDetails","withTranslation","SidebarNav","AddContactManagement","props","state","isContactEdit","match","params","id","undefined","entityType","entityId","t","mandatoryFieldMsg","color","marginTop","fullName"],"mappings":"66BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,YAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,GAEMC,CAAAA,oB,4HAEJ,8BAAYC,KAAZ,CAAmB,sDACjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACXC,aAAa,CAAE,KADJ,CAAb,CAIA,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,EAAyBC,SAAzB,EAAsCN,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBG,UAAnB,EAAiCD,SAA1E,CAAoF,CAClF,MAAKL,KAAL,CAAWC,aAAX,CAA2B,IAA3B,CACA,MAAKD,KAAL,CAAWO,QAAX,CAAsBR,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAzC,CACA,MAAKJ,KAAL,CAAWM,UAAX,CAAwBP,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBG,UAA3C,CACD,CAXgB,aAYlB,C,wEAEQ,uBACCE,CAAAA,CADD,CACO,KAAKT,KADZ,CACCS,CADD,CAEP,GAAMC,CAAAA,iBAAiB,CAAGD,CAAC,CAAC,mBAAD,CAA3B,CAEA,mBACE,2BAAK,SAAS,CAAC,iBAAf,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,SAAS,CAAC,EAAvB,eACE,4BAAM,KAAK,CAAE,CAACE,KAAK,CAAE,KAAR,CAAb,EAA8BD,iBAA9B,CADF,CADF,CADF,cAOE,oBAAC,GAAD,EAAK,KAAK,CAAE,CAACE,SAAS,CAAE,CAAZ,CAAZ,eACE,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,IAAhB,EAIQ,KAAKX,KAAL,CAAWC,aAAZ,cACC,oBAAC,UAAD,gCAAY,OAAO,CAAC,MAApB,CAA2B,KAAK,CAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1D,2CACQ,MADR,qDAEmB,KAAKL,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBG,UAF3C,mDAGuC,KAAKP,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAH/D,+CAImC,KAAKJ,KAAL,CAAWY,QAJ9C,kBAI4D,KAAKb,KAJjE,EADD,CAMG,IAVV,cAaE,oBAAC,cAAD,CAAoB,KAAKA,KAAzB,CAbF,CADF,CAPF,CADF,CA4BD,C,kCAhDgCP,S,EAmDnC,cAAeI,CAAAA,eAAe,GAAGE,oBAAH,CAA9B","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport ContactDetails from './ContactDetails';\nimport { withTranslation } from 'react-i18next';\nimport SidebarNav from '../SidebarNav/SidebarNav';\n\nclass AddContactManagement extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isContactEdit: false\n    };\n\n    if(props.match.params.id != undefined && props.match.params.entityType != undefined){\n      this.state.isContactEdit = true;\n      this.state.entityId = props.match.params.id;\n      this.state.entityType = props.match.params.entityType;\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const mandatoryFieldMsg = t(\"mandatoryFieldMsg\");\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col md=\"12\" className=\"\">\n            <span style={{color: \"red\"}}>{mandatoryFieldMsg}</span>\n          </Col>\n        </Row>\n\n        <Row style={{marginTop: 5}}>\n          <Col xs=\"12\" md=\"12\">\n            {/* <Row>\n              <Col xs=\"12\" md=\"12\"> */}\n                {/* <AddContactNav {...this.props} /> */}\n                {(this.state.isContactEdit)? (\n                  <SidebarNav NavPage=\"User\" NavID={this.props.match.params.id}\n                  NavPage=\"User\"\n                  contactEntityType={this.props.match.params.entityType}\n                                        contactEntityId={this.props.match.params.id}\n                                        contactName={this.state.fullName} {...this.props} />\n                ): (null)}\n              {/* </Col>\n            </Row> */}\n            <ContactDetails {...this.props} />\n          </Col>\n\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(AddContactManagement);\n"]},"metadata":{},"sourceType":"module"}