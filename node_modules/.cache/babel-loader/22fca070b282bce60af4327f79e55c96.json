{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Dashboard/DashboardPolicyList.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, InputGroup, Button as BTN, Card, CardHeader, CardBody, Collapse, Form } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport APIConstant from '../../utils/constants';\nimport { CommonConfig } from '../../utils/constants';\nimport { apiBase } from '../../utils/config';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { registerHelper } from 'codemirror';\nimport { relativeTimeThreshold } from 'moment';\nimport moment from 'moment';\n\nclass DashboardPolicyList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.policyList.length ? l : this.state.policyList.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.policyList.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    let columns = [{\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      id: 0\n    }, {\n      body: this.formatPolicyDetail.bind(this),\n      field: \"PolicyData\",\n      header: \"Policy No/Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      body: this.formatContactDetail.bind(this),\n      field: \"ClientDetails\",\n      header: \"Client/Contacts\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      body: this.formatVesselData.bind(this),\n      field: \"VesselDetails\",\n      header: \"Vessel Class/Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"InsuranceCompanyName\",\n      header: \"Insurer\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      body: this.formatPremiun.bind(this),\n      header: \"Sum Insured/Premium\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      body: this.formatDate.bind(this),\n      field: \"InceptionDate\",\n      header: \"Inception/Renewal\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      field: \"Department\",\n      header: \"Department\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      field: \"Status\",\n      header: \"Status\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 8\n    }];\n    this.state = {\n      cols: columns,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      policyStage: this.props.match.params.mode,\n      referredPolicyCount: '',\n      policyList: []\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getPolicyList(this.props.match.params.mode);\n  }\n\n  getPolicyList(stage) {\n    let data = {\n      PolicyStage: stage,\n      TeamType: 'Renewal',\n      CurrentUser: CommonConfig.loggedInUserData().ContactType\n    };\n    api.post('api/getPolicyListByStage', data).then(res => {\n      if (res.success) {\n        console.log(\"getPolicyListByStage\", res.data);\n        let firstPage = res.data.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < res.data.length ? this.state.rowsPerPage : res.data.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + res.data.length + ' records';\n        this.setState({\n          policyList: res.data,\n          policyCount: res.data.length,\n          str: str,\n          policyStage: stage\n        });\n      } else {\n        console.log(\"Else\");\n      }\n    }).catch(err => {\n      console.log(\"errr\", err);\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-warning\",\n      onClick: () => this.edit(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  edit(rowData) {\n    this.props.history.push({\n      pathname: '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1',\n      state: {\n        PolicyId: rowData.PolicyId,\n        tab: 1\n      }\n    });\n  }\n\n  formatPolicyDetail(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, rowData.PolicyType), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, rowData.PolicyNumber));\n  }\n\n  formatContactDetail(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, rowData.Name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, CommonConfig.formatPhoneNumber(rowData.CountryCode + rowData.PhoneNumber)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, rowData.Email));\n  }\n\n  formatVesselData(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, rowData.VesselClassName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, rowData.VesselTypeName));\n  }\n\n  formatPremiun(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, rowData.SumInsured), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, rowData.CurrentPremium));\n  }\n\n  formatDate(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, moment(rowData.InceptionDate).format(CommonConfig.dateFormat.dateOnly)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, moment(rowData.RenewalDate).format(CommonConfig.dateFormat.dateOnly)));\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 20\n        }\n      });\n    });\n\n    if (this.props.isIdleTimeOut) {\n      this.props.history.push('/');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, this.state.policyStage, \" (\", this.state.policyCount, \")\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.state.policyStage == 'Pending' ? \"dashbordSelectorSelect\" : '',\n      style: {\n        marginRight: 15,\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.getPolicyList('Pending'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 236\n      }\n    }, \"Pending\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: this.state.policyStage == 'Referred' ? \"dashbordSelectorSelect\" : '',\n      style: {\n        marginRight: 15,\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.getPolicyList('Referred'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 236\n      }\n    }, \"Referred\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: this.state.policyStage == 'In Progress' ? \"dashbordSelectorSelect\" : '',\n      style: {\n        marginRight: 15,\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.getPolicyList('In Progress'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 242\n      }\n    }, \"In Progress\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: this.state.policyStage == 'Completed' ? \"dashbordSelectorSelect\" : '',\n      style: {\n        marginRight: 15,\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.getPolicyList('Completed'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 238\n      }\n    }, \"Completed\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: this.state.policyStage == 'Lapsed Or Canceled' ? \"dashbordSelectorSelect\" : '',\n      style: {\n        marginRight: 15,\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.getPolicyList('Lapsed Or Canceled'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 256\n      }\n    }, \"Lapsed Or Canceled\")))), /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.policyList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.policyList.length,\n      exportFilename: \"StringMap List\",\n      currentPageReportTemplate: this.state.str,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default DashboardPolicyList;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Dashboard/DashboardPolicyList.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","InputGroup","BTN","Card","CardHeader","CardBody","Collapse","Form","api","APIConstant","CommonConfig","apiBase","useTranslation","withTranslation","Trans","registerHelper","relativeTimeThreshold","moment","DashboardPolicyList","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","policyList","length","str","setState","selectedPage","rowsPerPage","columns","body","actionTemplate","bind","header","sortable","filter","id","formatPolicyDetail","field","filterMatchMode","formatContactDetail","formatVesselData","formatPremiun","formatDate","cols","rowsPerPageOptions","dataTableConfig","policyStage","match","params","mode","referredPolicyCount","colOptions","col","push","label","value","componentDidMount","getPolicyList","stage","data","PolicyStage","TeamType","CurrentUser","loggedInUserData","ContactType","post","then","res","success","console","log","policyCount","catch","err","rowData","column","edit","marginRight","position","history","pathname","PolicyId","tab","PolicyType","PolicyNumber","Name","formatPhoneNumber","CountryCode","PhoneNumber","Email","VesselClassName","VesselTypeName","SumInsured","CurrentPremium","InceptionDate","format","dateFormat","dateOnly","RenewalDate","render","t","map","i","isIdleTimeOut","textAlign","textDecoration","cursor","el","dt","globalFilter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,kDAAP;AACA,OAAO,yCAAP;AACA,OAAO,2BAAP;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,GAArD,EAA0DC,GAA1D,EAA+DC,KAA/D,EAAsEC,UAAtE,EAAkFR,MAAM,IAAIS,GAA5F,EAAiGC,IAAjG,EAAuGC,UAAvG,EAAmHC,QAAnH,EAA6HC,QAA7H,EAAuIC,IAAvI,QAAmJ,YAAnJ;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,qBAAT,QAAsC,QAAtC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,mBAAN,SAAkC/B,SAAlC,CAA4C;AACxCgC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0EnBC,aA1EmB,GA0EFC,CAAD,IAAO;AACnB,UAAIC,SAAS,GAAGD,CAAC,CAACE,KAAF,GAAU,CAA1B;AACA,UAAIC,CAAC,GAAGH,CAAC,CAACI,IAAF,IAAUJ,CAAC,CAACK,IAAF,GAAS,CAAnB,CAAR;AACA,UAAIC,QAAQ,GAAIH,CAAC,GAAG,KAAKI,KAAL,CAAWC,UAAX,CAAsBC,MAA3B,GAAqCN,CAArC,GAAyC,KAAKI,KAAL,CAAWC,UAAX,CAAsBC,MAA9E;AACA,UAAIC,GAAG,GAAGT,SAAS,GAAG,MAAZ,GAAqBK,QAArB,GAAgC,UAAhC,GAA6C,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAnE,GAA4E,UAAtF;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEZ,CAAC,CAACE,KAAlB;AAAyBQ,QAAAA,GAAG,EAAEA,GAA9B;AAAmCG,QAAAA,WAAW,EAAEb,CAAC,CAACI;AAAlD,OAAd;AACH,KAhFkB;;AAGf,QAAIU,OAAO,GAAG,CACV;AAAEC,MAAAA,IAAI,EAAE,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAR;AAAwCC,MAAAA,MAAM,EAAE,QAAhD;AAA0DC,MAAAA,QAAQ,EAAE,KAApE;AAA2EC,MAAAA,MAAM,EAAE,KAAnF;AAA0FC,MAAAA,EAAE,EAAE;AAA9F,KADU,EAEV;AAAEN,MAAAA,IAAI,EAAE,KAAKO,kBAAL,CAAwBL,IAAxB,CAA6B,IAA7B,CAAR;AAA4CM,MAAAA,KAAK,EAAE,YAAnD;AAAiEL,MAAAA,MAAM,EAAE,gBAAzE;AAA2FC,MAAAA,QAAQ,EAAE,IAArG;AAA2GC,MAAAA,MAAM,EAAE,IAAnH;AAAyHI,MAAAA,eAAe,EAAE,UAA1I;AAAsJH,MAAAA,EAAE,EAAE;AAA1J,KAFU,EAGV;AAAEN,MAAAA,IAAI,EAAE,KAAKU,mBAAL,CAAyBR,IAAzB,CAA8B,IAA9B,CAAR;AAA6CM,MAAAA,KAAK,EAAE,eAApD;AAAqEL,MAAAA,MAAM,EAAE,iBAA7E;AAAgGC,MAAAA,QAAQ,EAAE,IAA1G;AAAgHC,MAAAA,MAAM,EAAE,IAAxH;AAA8HI,MAAAA,eAAe,EAAE,UAA/I;AAA2JH,MAAAA,EAAE,EAAE;AAA/J,KAHU,EAIV;AAAEN,MAAAA,IAAI,EAAE,KAAKW,gBAAL,CAAsBT,IAAtB,CAA2B,IAA3B,CAAR;AAA0CM,MAAAA,KAAK,EAAE,eAAjD;AAAkEL,MAAAA,MAAM,EAAE,mBAA1E;AAA+FC,MAAAA,QAAQ,EAAE,IAAzG;AAA+GC,MAAAA,MAAM,EAAE,IAAvH;AAA6HI,MAAAA,eAAe,EAAE,UAA9I;AAA0JH,MAAAA,EAAE,EAAE;AAA9J,KAJU,EAKV;AAAEE,MAAAA,KAAK,EAAE,sBAAT;AAAiCL,MAAAA,MAAM,EAAE,SAAzC;AAAoDC,MAAAA,QAAQ,EAAE,IAA9D;AAAoEC,MAAAA,MAAM,EAAE,IAA5E;AAAkFI,MAAAA,eAAe,EAAE,UAAnG;AAA+GH,MAAAA,EAAE,EAAE;AAAnH,KALU,EAMV;AAAEN,MAAAA,IAAI,EAAE,KAAKY,aAAL,CAAmBV,IAAnB,CAAwB,IAAxB,CAAR;AAAuCC,MAAAA,MAAM,EAAE,qBAA/C;AAAsEC,MAAAA,QAAQ,EAAE,IAAhF;AAAsFC,MAAAA,MAAM,EAAE,IAA9F;AAAoGI,MAAAA,eAAe,EAAE,UAArH;AAAiIH,MAAAA,EAAE,EAAE;AAArI,KANU,EAOV;AAAEN,MAAAA,IAAI,EAAE,KAAKa,UAAL,CAAgBX,IAAhB,CAAqB,IAArB,CAAR;AAAoCM,MAAAA,KAAK,EAAE,eAA3C;AAA4DL,MAAAA,MAAM,EAAE,mBAApE;AAAyFC,MAAAA,QAAQ,EAAE,IAAnG;AAAyGC,MAAAA,MAAM,EAAE,IAAjH;AAAuHI,MAAAA,eAAe,EAAE,UAAxI;AAAoJH,MAAAA,EAAE,EAAE;AAAxJ,KAPU,EAQV;AAAEE,MAAAA,KAAK,EAAE,YAAT;AAAuBL,MAAAA,MAAM,EAAE,YAA/B;AAA6CC,MAAAA,QAAQ,EAAE,IAAvD;AAA6DC,MAAAA,MAAM,EAAE,IAArE;AAA2EI,MAAAA,eAAe,EAAE,UAA5F;AAAwGH,MAAAA,EAAE,EAAE;AAA5G,KARU,EASV;AAAEE,MAAAA,KAAK,EAAE,QAAT;AAAmBL,MAAAA,MAAM,EAAE,QAA3B;AAAqCC,MAAAA,QAAQ,EAAE,IAA/C;AAAqDC,MAAAA,MAAM,EAAE,IAA7D;AAAmEI,MAAAA,eAAe,EAAE,UAApF;AAAgGH,MAAAA,EAAE,EAAE;AAApG,KATU,CAAd;AAaA,SAAKd,KAAL,GAAa;AACTsB,MAAAA,IAAI,EAAEf,OADG;AAETgB,MAAAA,kBAAkB,EAAE1C,YAAY,CAAC2C,eAAb,CAA6BD,kBAFxC;AAGTjB,MAAAA,WAAW,EAAEzB,YAAY,CAAC2C,eAAb,CAA6BlB,WAHjC;AAITmB,MAAAA,WAAW,EAAE,KAAKlC,KAAL,CAAWmC,KAAX,CAAiBC,MAAjB,CAAwBC,IAJ5B;AAKTC,MAAAA,mBAAmB,EAAE,EALZ;AAMT5B,MAAAA,UAAU,EAAE;AANH,KAAb;AAQA,SAAK6B,UAAL,GAAkB,EAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgBxB,OAAhB,EAAyB;AACrB,WAAKuB,UAAL,CAAgBE,IAAhB,CAAqB;AAAEC,QAAAA,KAAK,EAAEF,GAAG,CAACpB,MAAb;AAAqBuB,QAAAA,KAAK,EAAEH;AAA5B,OAArB;AACH;AACJ;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,aAAL,CAAmB,KAAK7C,KAAL,CAAWmC,KAAX,CAAiBC,MAAjB,CAAwBC,IAA3C;AACH;;AAEDQ,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,QAAIC,IAAI,GAAG;AACPC,MAAAA,WAAW,EAAEF,KADN;AAEPG,MAAAA,QAAQ,EAAE,SAFH;AAGPC,MAAAA,WAAW,EAAE5D,YAAY,CAAC6D,gBAAb,GAAgCC;AAHtC,KAAX;AAKAhE,IAAAA,GAAG,CAACiE,IAAJ,CAAS,0BAAT,EAAqCN,IAArC,EAA2CO,IAA3C,CAAgDC,GAAG,IAAI;AACnD,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,GAAG,CAACR,IAAxC;AACA,YAAI5C,SAAS,GAAIoD,GAAG,CAACR,IAAJ,CAASpC,MAAV,GAAoB,GAApB,GAA0B,GAA1C;AACA,YAAIH,QAAQ,GAAI,KAAKC,KAAL,CAAWM,WAAX,GAAyBwC,GAAG,CAACR,IAAJ,CAASpC,MAAnC,GAA6C,KAAKF,KAAL,CAAWM,WAAxD,GAAsEwC,GAAG,CAACR,IAAJ,CAASpC,MAA9F;AACA,YAAIC,GAAG,GAAGT,SAAS,GAAG,MAAZ,GAAqBK,QAArB,GAAgC,UAAhC,GAA6C+C,GAAG,CAACR,IAAJ,CAASpC,MAAtD,GAA+D,UAAzE;AACA,aAAKE,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAE6C,GAAG,CAACR,IAAlB;AAAwBY,UAAAA,WAAW,EAAEJ,GAAG,CAACR,IAAJ,CAASpC,MAA9C;AAAsDC,UAAAA,GAAG,EAAEA,GAA3D;AAAgEsB,UAAAA,WAAW,EAAEY;AAA7E,SAAd;AACH,OAND,MAMO;AACHW,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACJ,KAVD,EAUGE,KAVH,CAUSC,GAAG,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,GAApB;AACH,KAZD;AAaH;;AAED3C,EAAAA,cAAc,CAAC4C,OAAD,EAAUC,MAAV,EAAkB;AAC5B,wBAAO;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,WAA3B;AAAuC,MAAA,SAAS,EAAC,kBAAjD;AAAoE,MAAA,OAAO,EAAE,MAAM,KAAKC,IAAL,CAAUF,OAAV,CAAnF;AACI,MAAA,KAAK,EAAE;AAAEG,QAAAA,WAAW,EAAE;AAAf,OADX;AACoC,MAAA,OAAO,EAAC,MAD5C;AACmD,MAAA,cAAc,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAMH;;AAEDF,EAAAA,IAAI,CAACF,OAAD,EAAU;AACV,SAAK9D,KAAL,CAAWmE,OAAX,CAAmB1B,IAAnB,CAAwB;AACpB2B,MAAAA,QAAQ,EAAE,0BAA0BN,OAAO,CAACO,QAAlC,GAA6C,MADnC;AAEpB5D,MAAAA,KAAK,EAAE;AACH4D,QAAAA,QAAQ,EAAEP,OAAO,CAACO,QADf;AAEHC,QAAAA,GAAG,EAAE;AAFF;AAFa,KAAxB;AAOH;;AAUD9C,EAAAA,kBAAkB,CAACsC,OAAD,EAAU;AACxB,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACS,UAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIT,OAAO,CAACU,YAAZ,CAFJ,CADJ;AAMH;;AAED7C,EAAAA,mBAAmB,CAACmC,OAAD,EAAU;AACzB,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACW,IAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAInF,YAAY,CAACoF,iBAAb,CAA+BZ,OAAO,CAACa,WAAR,GAAsBb,OAAO,CAACc,WAA7D,CAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAId,OAAO,CAACe,KAAZ,CAHJ,CADJ;AAOH;;AAEDjD,EAAAA,gBAAgB,CAACkC,OAAD,EAAU;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACgB,eAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIhB,OAAO,CAACiB,cAAZ,CAFJ,CADJ;AAMH;;AAEDlD,EAAAA,aAAa,CAACiC,OAAD,EAAU;AACnB,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACkB,UAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIlB,OAAO,CAACmB,cAAZ,CAFJ,CADJ;AAMH;;AAEDnD,EAAAA,UAAU,CAACgC,OAAD,EAAU;AAChB,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIjE,MAAM,CAACiE,OAAO,CAACoB,aAAT,CAAN,CAA8BC,MAA9B,CAAqC7F,YAAY,CAAC8F,UAAb,CAAwBC,QAA7D,CAAJ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIxF,MAAM,CAACiE,OAAO,CAACwB,WAAT,CAAN,CAA4BH,MAA5B,CAAmC7F,YAAY,CAAC8F,UAAb,CAAwBC,QAA3D,CAAJ,CAFJ,CADJ;AAMH;;AAEDE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA;AAAF,QAAQ,KAAKxF,KAAnB;AAEA,QAAIgB,OAAO,GAAG,KAAKP,KAAL,CAAWsB,IAAX,CAAgB0D,GAAhB,CAAoB,CAACjD,GAAD,EAAMkD,CAAN,KAAY;AAC1C,0BAAO,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAElD,GAAG,CAACf,KAAnB;AAA0B,QAAA,MAAM,EAAEe,GAAG,CAACpB,MAAtC;AAA8C,QAAA,IAAI,EAAEoB,GAAG,CAACvB,IAAxD;AAA8D,QAAA,QAAQ,EAAEuB,GAAG,CAACnB,QAA5E;AAAsF,QAAA,MAAM,EAAEmB,GAAG,CAAClB,MAAlG;AAA0G,QAAA,eAAe,EAAC,UAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFa,CAAd;;AAIA,QAAI,KAAKtB,KAAL,CAAW2F,aAAf,EAA8B;AAC1B,WAAK3F,KAAL,CAAWmE,OAAX,CAAmB1B,IAAnB,CAAwB,GAAxB;AACH;;AACD,wBAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKhC,KAAL,CAAWyB,WAAhB,QAA+B,KAAKzB,KAAL,CAAWkD,WAA1C,MADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,GAAT;AAAa,MAAA,KAAK,EAAE;AAACiC,QAAAA,SAAS,EAAE;AAAZ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAI,KAAKnF,KAAL,CAAWyB,WAAX,IAA0B,SAA1B,GAAoC,wBAApC,GAA6D,EAAhF;AAAoF,MAAA,KAAK,EAAI;AAAC+B,QAAAA,WAAW,EAAC,EAAb;AAAiB4B,QAAAA,cAAc,EAAE,WAAjC;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAA7F;AAAiK,MAAA,OAAO,EAAE,MAAM,KAAKjD,aAAL,CAAmB,SAAnB,CAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA/M,CADJ,eAEI;AAAM,MAAA,SAAS,EAAI,KAAKpC,KAAL,CAAWyB,WAAX,IAA0B,UAA1B,GAAqC,wBAArC,GAA8D,EAAjF;AAAqF,MAAA,KAAK,EAAI;AAAC+B,QAAAA,WAAW,EAAC,EAAb;AAAiB4B,QAAAA,cAAc,EAAE,WAAjC;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAA9F;AAAgK,MAAA,OAAO,EAAE,MAAM,KAAKjD,aAAL,CAAmB,UAAnB,CAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA/M,CAFJ,eAGI;AAAM,MAAA,SAAS,EAAI,KAAKpC,KAAL,CAAWyB,WAAX,IAA0B,aAA1B,GAAwC,wBAAxC,GAAiE,EAApF;AAAwF,MAAA,KAAK,EAAI;AAAC+B,QAAAA,WAAW,EAAC,EAAb;AAAiB4B,QAAAA,cAAc,EAAE,WAAjC;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAAjG;AAAmK,MAAA,OAAO,EAAE,MAAM,KAAKjD,aAAL,CAAmB,aAAnB,CAAlL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAArN,CAHJ,eAII;AAAM,MAAA,SAAS,EAAI,KAAKpC,KAAL,CAAWyB,WAAX,IAA0B,WAA1B,GAAsC,wBAAtC,GAA+D,EAAlF;AAAsF,MAAA,KAAK,EAAI;AAAC+B,QAAAA,WAAW,EAAC,EAAb;AAAiB4B,QAAAA,cAAc,EAAE,WAAjC;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAA/F;AAAiK,MAAA,OAAO,EAAE,MAAM,KAAKjD,aAAL,CAAmB,WAAnB,CAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjN,CAJJ,eAKI;AAAM,MAAA,SAAS,EAAI,KAAKpC,KAAL,CAAWyB,WAAX,IAA0B,oBAA1B,GAA+C,wBAA/C,GAAwE,EAA3F;AAA+F,MAAA,KAAK,EAAI;AAAC+B,QAAAA,WAAW,EAAC,EAAb;AAAiB4B,QAAAA,cAAc,EAAE,WAAjC;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAAxG;AAA0K,MAAA,OAAO,EAAE,MAAM,KAAKjD,aAAL,CAAmB,oBAAnB,CAAzL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAnO,CALJ,CALJ,CADJ,eAcI,oBAAC,SAAD;AACI,MAAA,GAAG,EAAGkD,EAAD,IAAQ,KAAKC,EAAL,GAAUD,EAD3B;AAEI,MAAA,KAAK,EAAE,KAAKtF,KAAL,CAAWC,UAFtB;AAGI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWK,YAHtB;AAII,MAAA,MAAM,EAAGZ,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB,CAJnB;AAKI,MAAA,SAAS,EAAE,IALf;AAMI,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWM,WANrB;AAOI,MAAA,YAAY,EAAE,KAAKN,KAAL,CAAWC,UAAX,CAAsBC,MAPxC;AAQI,MAAA,cAAc,EAAC,gBARnB;AASI,MAAA,yBAAyB,EAAE,KAAKF,KAAL,CAAWG,GAT1C;AAUI,MAAA,iBAAiB,EAAC,sGAVtB;AAWI,MAAA,kBAAkB,EAAE,KAAKH,KAAL,CAAWuB,kBAXnC;AAYI,MAAA,YAAY,EAAE,KAAKvB,KAAL,CAAWwF,YAZ7B;AAaI,MAAA,YAAY,EAAC,kBAbjB;AAcI,MAAA,UAAU,EAAE,IAdhB;AAeI,MAAA,gBAAgB,EAAE,IAftB;AAgBI,MAAA,gBAAgB,EAAC,KAhBrB;AAiBI,MAAA,UAAU,EAAE,IAjBhB;AAkBI,MAAA,YAAY,EAAC,OAlBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBKjF,OAnBL,CAdJ,CAFJ,CAFJ;AA2CH;;AAvLuC;;AA0L5C,eAAelB,mBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, InputGroup, Button as BTN, Card, CardHeader, CardBody, Collapse, Form } from 'reactstrap';\r\nimport api from '../../utils/apiClient';\r\nimport APIConstant from '../../utils/constants';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { apiBase } from '../../utils/config';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { registerHelper } from 'codemirror';\r\nimport { relativeTimeThreshold } from 'moment';\r\nimport moment from 'moment';\r\n\r\nclass DashboardPolicyList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, id: 0 },\r\n            { body: this.formatPolicyDetail.bind(this), field: \"PolicyData\", header: \"Policy No/Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { body: this.formatContactDetail.bind(this), field: \"ClientDetails\", header: \"Client/Contacts\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { body: this.formatVesselData.bind(this), field: \"VesselDetails\", header: \"Vessel Class/Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"InsuranceCompanyName\", header: \"Insurer\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { body: this.formatPremiun.bind(this), header: \"Sum Insured/Premium\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { body: this.formatDate.bind(this), field: \"InceptionDate\", header: \"Inception/Renewal\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { field: \"Department\", header: \"Department\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { field: \"Status\", header: \"Status\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\r\n        ];\r\n\r\n\r\n        this.state = {\r\n            cols: columns,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            policyStage: this.props.match.params.mode,\r\n            referredPolicyCount: '',\r\n            policyList: [],\r\n        };\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPolicyList(this.props.match.params.mode);\r\n    }\r\n\r\n    getPolicyList(stage) {\r\n        let data = {\r\n            PolicyStage: stage,\r\n            TeamType: 'Renewal',\r\n            CurrentUser: CommonConfig.loggedInUserData().ContactType\r\n        }\r\n        api.post('api/getPolicyListByStage', data).then(res => {\r\n            if (res.success) {\r\n                console.log(\"getPolicyListByStage\", res.data);\r\n                let firstPage = (res.data.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < res.data.length) ? this.state.rowsPerPage : res.data.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + res.data.length + ' records';\r\n                this.setState({ policyList: res.data, policyCount: res.data.length, str: str, policyStage: stage });\r\n            } else {\r\n                console.log(\"Else\");\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"errr\", err)\r\n        })\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div className=\"policy-list-data\">\r\n            <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.edit(rowData)}\r\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\r\n            </Button>\r\n            {/* <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }}></Button> */}\r\n        </div>;\r\n    }\r\n\r\n    edit(rowData) {\r\n        this.props.history.push({\r\n            pathname: '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1',\r\n            state: {\r\n                PolicyId: rowData.PolicyId,\r\n                tab: 1\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.policyList.length) ? l : this.state.policyList.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.policyList.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    formatPolicyDetail(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.PolicyType}</p>\r\n                <p>{rowData.PolicyNumber}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatContactDetail(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Name}</p>\r\n                <p>{CommonConfig.formatPhoneNumber(rowData.CountryCode + rowData.PhoneNumber)}</p>\r\n                <p>{rowData.Email}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatVesselData(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.VesselClassName}</p>\r\n                <p>{rowData.VesselTypeName}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatPremiun(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.SumInsured}</p>\r\n                <p>{rowData.CurrentPremium}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatDate(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{moment(rowData.InceptionDate).format(CommonConfig.dateFormat.dateOnly)}</p>\r\n                <p>{moment(rowData.RenewalDate).format(CommonConfig.dateFormat.dateOnly)}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const { t } = this.props;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n\r\n        if (this.props.isIdleTimeOut) {\r\n            this.props.history.push('/')\r\n        }\r\n        return (\r\n\r\n            <div className=\"animated fadeIn\">\r\n\r\n                <div className=\"table-custom\">\r\n                    <Row>\r\n                        <Col md='3'>\r\n                            <h2>{this.state.policyStage} ({this.state.policyCount})</h2>\r\n                        </Col>\r\n                        <Col md='4'></Col>\r\n                        <Col md= '5' style={{textAlign: \"right\"}}>\r\n                            <span className = {this.state.policyStage == 'Pending'?\"dashbordSelectorSelect\":''} style = {{marginRight:15, textDecoration: \"underline\", cursor: \"pointer\", }} onClick={() => this.getPolicyList('Pending')}><b>Pending</b></span>\r\n                            <span className = {this.state.policyStage == 'Referred'?\"dashbordSelectorSelect\":''} style = {{marginRight:15, textDecoration: \"underline\", cursor: \"pointer\"}} onClick={() => this.getPolicyList('Referred')}><b>Referred</b></span>\r\n                            <span className = {this.state.policyStage == 'In Progress'?\"dashbordSelectorSelect\":''} style = {{marginRight:15, textDecoration: \"underline\", cursor: \"pointer\"}} onClick={() => this.getPolicyList('In Progress')}><b>In Progress</b></span>\r\n                            <span className = {this.state.policyStage == 'Completed'?\"dashbordSelectorSelect\":''} style = {{marginRight:15, textDecoration: \"underline\", cursor: \"pointer\"}} onClick={() => this.getPolicyList('Completed')}><b>Completed</b></span>\r\n                            <span className = {this.state.policyStage == 'Lapsed Or Canceled'?\"dashbordSelectorSelect\":''} style = {{marginRight:15, textDecoration: \"underline\", cursor: \"pointer\"}} onClick={() => this.getPolicyList('Lapsed Or Canceled')}><b>Lapsed Or Canceled</b></span>\r\n                        </Col>\r\n                    </Row>\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.policyList}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.policyList.length}\r\n                        exportFilename=\"StringMap List\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage=\"No records found\"\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollable={true}\r\n                        scrollHeight=\"340px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardPolicyList;\r\n"]},"metadata":{},"sourceType":"module"}