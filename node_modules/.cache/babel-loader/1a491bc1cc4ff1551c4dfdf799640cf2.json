{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/ContactDetails.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport DatePicker from 'react-date-picker';\nimport { Button, Col, Container, Form, Input, InputGroupAddon, InputGroupText, Row, InputGroup, Modal, ModalBody, ModalFooter, ModalHeader, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { withTranslation } from 'react-i18next';\nimport api from '../../utils/apiClient';\nimport APIConstant, { CommonConfig } from '../../utils/constants';\nimport { apiBase } from '../../utils/config';\nimport { postalCodes } from '../../utils/postalCodes';\n\nconst userDefaultImg = require('../../assets/img/defaultProfile.png');\n\nclass ContactDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.chooseFile = () => {\n      document.getElementById('profileimage').click();\n    };\n\n    this.selectImage = event => {\n      if (event.target.files && event.target.files[0]) {\n        this.setState({\n          userImgData: event.target.files[0]\n        });\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          this.setState({\n            userImg: e.target.result\n          });\n        };\n\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        t\n      } = this.props; // debugger;\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'companyname') {\n        if (this.state.isCompany === 'Company' && CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            comapnynameError: true\n          });\n          this.show(\"companyname\", true, \"comapnynameError\", t(\"contactDetails:CompanyName.error_blank\"));\n        } else if (e.target.value.length > 100) {\n          this.setState({\n            comapnynameError: true,\n            companyname: this.state.companyname\n          });\n          this.show(\"companyname\", true, \"comapnynameError\", t(\"contactDetails:CompanyName.error_maxLength\"));\n        } else {\n          this.setState({\n            companyname: e.target.value,\n            comapnynameError: false\n          });\n          this.show(\"companyname\", false, \"comapnynameError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'forename') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            forenameError: true\n          });\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_blank\"));\n        } else {\n          let nameRegEx = CommonConfig.RegExp.nameWithSpace; // /^[a-zA-Z]+[a-zA-Z-']*$/; // /^[a-zA-Z]+[a-zA-Z-\\s']*$/\n\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              forenameError: true\n            });\n            this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_pattern\"));\n          } else if (e.target.value.length > 25) {\n            this.setState({\n              forenameError: true\n            });\n            this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_maxLength\"));\n          } else if (e.target.value.length < 3) {\n            this.setState({\n              forenameError: true\n            });\n            this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_minLength\"));\n          } else {\n            this.setState({\n              forenameError: false,\n              forename: e.target.value,\n              salutation: e.target.value,\n              salutationError: false\n            });\n            this.show(\"forename\", false, \"forenameError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'surname') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            surnameError: true\n          });\n          this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_blank\"));\n        } else {\n          let nameRegEx = CommonConfig.RegExp.nameWithSpace; // /^[a-zA-Z]+[a-zA-Z-']*$/;\n\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              surnameError: true\n            });\n            this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_pattern\"));\n          } else if (e.target.value.length > 25) {\n            this.setState({\n              surnameError: true\n            });\n            this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_maxLength\"));\n          } else if (e.target.value.length < 3) {\n            this.setState({\n              surnameError: true\n            });\n            this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_minLength\"));\n          } else {\n            this.setState({\n              surnameError: false,\n              surname: e.target.value\n            });\n            this.show(\"surname\", false, \"surnameError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'salutation') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            salutationError: true\n          });\n          this.show(\"salutation\", true, \"salutationError\", t(\"contactDetails:Salutation.error_blank\"));\n        } else {\n          let nameRegEx = CommonConfig.RegExp.nameWithSpace; // /^[a-zA-Z]+[a-zA-Z-'.]*$/;\n\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              salutationError: true\n            });\n            this.show(\"salutation\", true, \"salutationError\", t(\"contactDetails:Salutation.error_pattern\")); // } else if (e.target.value.length > 5 || e.target.value.length < 2) {\n          } else if (e.target.value.length > 100) {\n            this.setState({\n              salutationError: true\n            });\n            this.show(\"salutation\", true, \"salutationError\", t(\"contactDetails:Salutation.error_blank\"));\n          } else {\n            this.setState({\n              salutationError: false,\n              salutation: e.target.value\n            });\n            this.show(\"salutation\", false, \"salutationError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'passportno') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            passportnoError: true\n          });\n          this.show(\"passportno\", false, \"passportnoError\", \"\"); // this.show(\"passportno\", true, \"passportnoError\", t(\"contactDetails:PassportNumber.error_blank\"));\n        } else if (e.target.value.length !== 9) {\n          this.setState({\n            passportnoError: true\n          });\n          this.show(\"passportno\", true, \"passportnoError\", t(\"contactDetails:PassportNumber.error_pattern\"));\n        } else {\n          // var passportRegEx = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/ig;\n          // var passport = e.target.value;\n          // if (!passportRegEx.test(passport)) {\n          //   this.setState({ passportnoError: true });\n          //   this.show(\"passportno\", true, \"passportnoError\", t(\"contactDetails:PassportNumber.error_pattern\"));\n          // } else {\n          this.setState({\n            passportnoError: false,\n            passportno: e.target.value\n          });\n          this.show(\"passportno\", false, \"passportnoError\", \"\"); // }\n        }\n      }\n\n      if (e.target.name === 'companyIdentifier') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            companyIdentifierError: true\n          }); // this.show(\"companyIdentifier\", true, \"companyIdentifierError\", t(\"contactDetails:CompanyIdentifier.error_blank\"));\n\n          this.show(\"companyIdentifier\", false, \"companyIdentifierError\", \"\");\n        } else {\n          // if(passportRegEx.test(passport)){\n          //   this.setState({ companyIdentifierError: true });\n          //   this.show(\"companyIdentifier\", true);\n          // }else{\n          if (e.target.value.length > 100) {\n            this.setState({\n              companyIdentifierError: true\n            });\n            this.show(\"companyIdentifier\", true, \"companyIdentifierError\", t(\"contactDetails:CompanyIdentifier.error_maxLength\"));\n          } else {\n            this.setState({\n              companyIdentifierError: false,\n              companyIdentifier: e.target.value\n            });\n            this.show(\"companyIdentifier\", false, \"companyIdentifierError\", \"\");\n          } // }\n\n        }\n      }\n\n      if (e.target.name === 'addrline1') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            addrline1Error: true\n          });\n          this.show(\"addrline1\", true, \"line1Error\", t(\"contactDetails:Line1.error_blank\"));\n        } else {\n          if (e.target.value.length > 150) {\n            this.setState({\n              addrline1Error: true\n            });\n            this.show(\"addrline1\", true, \"line1Error\", t(\"contactDetails:Line1.error_maxLength\"));\n          } else {\n            this.setState({\n              addrline1Error: false,\n              addrline1: e.target.value\n            });\n            this.show(\"addrline1\", false, \"line1Error\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'addrline2') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            addrline2Error: false\n          });\n          this.show(\"addrline2\", false, \"line2Error\", \"\");\n        } else {\n          if (e.target.value.length > 150) {\n            this.setState({\n              addrline2Error: true\n            });\n            this.show(\"addrline2\", true, \"line2Error\", t(\"contactDetails:Line2.error_maxLength\"));\n          } else {\n            this.show(\"addrline2\", false, \"line2Error\", \"\");\n            this.setState({\n              addrline2: e.target.value,\n              addrline2Error: false\n            });\n          }\n        }\n      }\n\n      if (e.target.name === 'addrline3') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            addrline3Error: false\n          });\n          this.show(\"addrline3\", false, \"line3Error\", \"\");\n        } else {\n          if (e.target.value.length > 150) {\n            this.setState({\n              addrline3Error: true\n            });\n            this.show(\"addrline3\", true, \"line3Error\", t(\"contactDetails:Line3.error_maxLength\"));\n          } else {\n            this.show(\"addrline3\", false, \"line3Error\", \"\");\n            this.setState({\n              addrline3: e.target.value,\n              addrline3Error: false\n            });\n          }\n        }\n      }\n\n      if (e.target.name === 'postalcode') {\n        // if (CommonConfig.isEmpty(e.target.value)) {\n        //   this.setState({ postalcodeError: true });\n        //   this.show(\"postalcode\", true, \"postalcodeError\", t(\"contactDetails:PostalCode.error_blank\"));\n        // } else {\n        this.setState({\n          postalcode: e.target.value,\n          postalcodeError: false\n        });\n        this.show(\"postalcode\", false, \"postalcodeError\", \"\"); //--- old code\n        // if (this.state.addrCountryShown !== undefined && this.state.addrCountryShown !== '' && this.state.addrCountryShown !== {} && this.state.addrCountryShown !== null) {\n        //   let country = postalCodes.find(x => x.Country === this.state.addrCountryShown.stringmapname);\n        //   var postalCodeRegEx = country.Regex;\n        //   // var postalCodeRegEx = /(?:^[AC-FHKNPRTV-Y][0-9]{2}|D6W)[ -]?[0-9AC-FHKNPRTV-Y]{4}$/;\n        //   var postalCodeValue = e.target.value;\n        //   if (!postalCodeRegEx.test(postalCodeValue)) {\n        //     this.setState({ postalcodeError: true });\n        //     this.show(\"postalcode\", true);\n        //   } else {\n        //     this.setState({ postalcode: e.target.value, postalcodeError: false });\n        //     this.show(\"postalcode\", false);\n        //   }\n        // } else {\n        //   this.setState({ postalcodeError: true });\n        //   toast.error('Please select country first');\n        // }\n        //---old code\n\n        if (this.state.addrCountry && this.state.addrCountry.value !== undefined && this.state.addrCountry.value !== '' && this.state.addrCountry !== {} && this.state.addrCountry.value !== null) {\n          // let selectedAddrCountry = this.state.countryCodeArray.find(x => x.CountryName === this.state.addrCountry.label);\n          // let country = postalCodes.find(x => x.ISO === selectedAddrCountry.CountryShortForm);\n          // var postalCodeRegEx = country.Regex;\n          // var postalCodeValue = e.target.value;\n          // if (!postalCodeRegEx.test(postalCodeValue)) {\n          //   this.setState({ postalcodeError: true });\n          //   this.show(\"postalcode\", true, \"postalcodeError\", t(\"contactDetails:PostalCode.error_blank\"));\n          // } else {\n          this.setState({\n            postalcode: e.target.value,\n            postalcodeError: false\n          });\n          this.show(\"postalcode\", false, \"postalcodeError\", \"\"); // }\n        } else {\n          this.setState({\n            postalcodeError: true\n          });\n          toast.error('Please select country first');\n        } // }\n\n      }\n\n      if (e.target.name === 'phoneAreaCode') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            phoneAreaCodeError: false\n          });\n          this.show(\"phoneAreaCode\", false, \"areaCodeError\", \"\");\n        } else {\n          let numberRegEx = CommonConfig.RegExp.number; // /^[0-9]+$/;\n\n          let areaCode = e.target.value;\n\n          if (e.target.value.length > 5) {\n            this.setState({\n              phoneAreaCodeError: true\n            });\n            this.show(\"phoneAreaCode\", true, \"areaCodeError\", t(\"contactDetails:AreaCode.error_blank\"));\n          } else if (!numberRegEx.test(areaCode)) {\n            this.setState({\n              phoneAreaCodeError: true,\n              phoneAreaCode: this.state.phoneAreaCode\n            });\n            this.show(\"phoneAreaCode\", true, \"areaCodeError\", t(\"contactDetails:AreaCode.error_blank\"));\n          } else {\n            this.setState({\n              phoneAreaCode: e.target.value,\n              phoneAreaCodeError: false\n            });\n            this.show(\"phoneAreaCode\", false, \"areaCodeError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'phoneNumber') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            phoneNumberError: true\n          });\n          this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_blank\"));\n        } else {\n          let numberRegEx = CommonConfig.RegExp.number; // /^[0-9]+$/;\n\n          let phone = e.target.value;\n\n          if (!numberRegEx.test(phone)) {\n            this.setState({\n              phoneNumberError: true,\n              phoneNumber: this.state.phoneNumber\n            });\n            this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_pattern\"));\n          } else if (e.target.value.length < 6) {\n            this.setState({\n              phoneNumberError: true\n            });\n            this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_minLength\"));\n          } else if (e.target.value.length > 15) {\n            this.setState({\n              phoneNumberError: true\n            });\n            this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_maxLength\"));\n          } else {\n            this.setState({\n              phoneNumber: e.target.value,\n              phoneNumberError: false\n            });\n            this.show(\"phoneNumber\", false, \"phoneNumberError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'email') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            emailError: true\n          });\n          this.show(\"email\", true, \"emailError\", t(\"contactDetails:Email.error_blank\"));\n        } else {\n          var emailRegEx = CommonConfig.RegExp.email; // /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n          if (!emailRegEx.test(e.target.value)) {\n            this.setState({\n              emailError: true\n            });\n            this.show(\"email\", true, \"emailError\", t(\"contactDetails:Email.error_blank\"));\n          } else {\n            this.setState({\n              email: e.target.value,\n              emailError: false\n            });\n            this.show(\"email\", false, \"emailError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'note') {\n        if (CommonConfig.isEmpty(e.target.value)) {// this.setState({ noteError: true });\n          // this.show(\"note\", true);\n        } else {\n          this.setState({\n            note: e.target.value,\n            noteError: false\n          }); // this.show(\"note\", false);\n        }\n      }\n\n      if (e.target.name === 'bankcode') {\n        if (CommonConfig.isEmpty(e.target.value)) {// this.setState({ bankcodeError: true });\n          // this.show(\"bankcode\", true);\n        } else {\n          this.setState({\n            bankcode: e.target.value,\n            bankcodeError: false\n          });\n          this.show(\"bankcode\", false, \"bankcodeError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'commission') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            commissionError: true\n          });\n          this.show(\"commission\", true, \"commissionError\", t(\"contactDetails:CommossionRate.error_blank\"));\n        } else {\n          let numberRegEx = CommonConfig.RegExp.decimalWithOne; // /^[0-9]+$/;\n\n          let commossion = e.target.value;\n\n          if (!numberRegEx.test(commossion)) {\n            this.setState({\n              commissionError: true\n            });\n            this.show(\"commission\", true, \"commissionError\", t(\"contactDetails:CommossionRate.error_pattern\"));\n          } else if (commossion > 100) {\n            this.setState({\n              commissionError: true\n            });\n            this.show(\"commission\", true, \"commissionError\", t(\"contactDetails:CommossionRate.error_pattern\"));\n          } else {\n            this.setState({\n              commission: e.target.value,\n              commissionError: false\n            });\n            this.show(\"commission\", false, \"commissionError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'ans1') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            ans1Error: true\n          });\n          this.show(\"ans1\", true, \"ans1Error\", t(\"contactDetails:Answer1.error_blank\"));\n        } else {\n          this.setState({\n            ans1Error: false,\n            ans1: e.target.value\n          });\n          this.show(\"ans1\", false, \"ans1Error\", \"\");\n        }\n      }\n\n      if (e.target.name === 'ans2') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            ans2Error: true\n          });\n          this.show(\"ans2\", true, \"ans2Error\", t(\"contactDetails:Answer2.error_blank\"));\n        } else {\n          this.setState({\n            ans2Error: false,\n            ans2: e.target.value\n          });\n          this.show(\"ans2\", false, \"ans2Error\", \"\");\n        }\n      }\n\n      if (e.target.name === 'ans3') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            ans3Error: true\n          });\n          this.show(\"ans3\", true, \"ans3Error\", t(\"contactDetails:Answer3.error_blank\"));\n        } else {\n          this.setState({\n            ans3Error: false,\n            ans3: e.target.value\n          });\n          this.show(\"ans3\", false, \"ans3Error\", \"\");\n        }\n      }\n\n      if (e.target.name === 'ext') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            ext: e.target.value,\n            extError: false\n          });\n          this.show(\"ext\", false);\n        } else {\n          var numberRegEx = /^[0-9]+$/;\n          let ext = e.target.value;\n\n          if (e.target.value.length > 3) {\n            this.setState({\n              extError: true\n            });\n            this.show(\"ext\", true);\n          } else if (!numberRegEx.test(ext)) {\n            this.setState({\n              extError: true\n            });\n            this.show(\"ext\", true);\n          } else {\n            this.setState({\n              ext: e.target.value,\n              extError: false\n            });\n            this.show(\"ext\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'username') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            usernameError: true\n          });\n          this.show(\"username\", true, \"usernameError\", t(\"contactDetails:UserName.error_blank\"));\n        } else {\n          this.setState({\n            usernameError: false,\n            username: e.target.value\n          });\n          this.show(\"username\", false, \"usernameError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'confirmPassword') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            confirmPasswordError: true\n          });\n          this.show(\"confirmPassword\", true, \"confirmPasswordError\", t(\"contactDetails:ConfirmPassword.error_blank\"));\n        } else {\n          if (CommonConfig.isEmpty(this.state.password)) {\n            this.setState({\n              confirmPasswordError: true\n            });\n            this.show(\"confirmPassword\", true, \"confirmPasswordError\", t(\"contactDetails:ConfirmPassword.error_blank\"));\n          } else if (this.state.password !== e.target.value) {\n            this.setState({\n              confirmPasswordError: true\n            });\n            this.show(\"confirmPassword\", true, \"confirmPasswordError\", t(\"contactDetails:ConfirmPassword.error_blank\"));\n          } else {\n            this.setState({\n              confirmPasswordError: false,\n              confirmPassword: e.target.value\n            });\n            this.show(\"confirmPassword\", false, \"confirmPasswordError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'changedContactCode') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            contactCodeError: true\n          });\n          this.show(\"changedContactCode\", true);\n        } else {\n          // if (e.target.value.length > 50 || e.target.value.length < 3) {\n          //   this.setState({ contactCodeError: true });\n          //   this.show(\"changedContactCode\", true);\n          // } else {\n          this.setState({\n            contactCodeError: false,\n            changedContactCode: e.target.value\n          });\n          this.show(\"changedContactCode\", false); // }\n        }\n      }\n\n      if (e.target.name === 'dob') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            dobError: true\n          });\n          this.show(\"dob\", true, \"DOBError\", t(\"contactDetails:DOB.error_blank\"));\n        } else if (moment(e.target.value).format('YYYY-MM-DD') > moment().subtract(12, 'years').format('YYYY-MM-DD')) {\n          this.setState({\n            dobError: true\n          });\n          this.show(\"dob\", true, \"DOBError\", t(\"contactDetails:DOB.error_maxLength\"));\n        } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().subtract(100, 'years').format('YYYY-MM-DD')) {\n          this.setState({\n            dobError: true\n          });\n          this.show(\"dob\", true, \"DOBError\", t(\"contactDetails:DOB.error_minLength\"));\n        } else {\n          this.setState({\n            dobError: false,\n            dob: e.target.value\n          });\n          this.show(\"dob\", false, \"DOBError\", \"\");\n        }\n      }\n    };\n\n    this.setValues = e => {\n      const {\n        t\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'forename') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            forenameError: true\n          });\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_blank\"));\n        } else {\n          let nameRegEx = /^[a-zA-Z]+[a-zA-Z-']*$/; // /^[a-zA-Z]+[a-zA-Z-\\s']*$/\n\n          let name = e.target.value;\n\n          if (!nameRegEx.test(name)) {\n            this.setState({\n              forenameError: true,\n              forename: this.state.forename\n            });\n            this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_pattern\"));\n          } else if (e.target.value.length > 50) {\n            this.setState({\n              forenameError: true,\n              forename: this.state.forename\n            });\n            this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_maxLength\"));\n          } else if (e.target.value.length < 3) {\n            this.setState({\n              forenameError: true,\n              forename: e.target.value\n            });\n            this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_minLength\"));\n          } else {\n            this.setState({\n              forenameError: false,\n              forename: e.target.value,\n              salutation: e.target.value,\n              salutationError: false\n            });\n            this.show(\"forename\", false, \"forenameError\", \"\");\n            this.show(\"salutation\", false, \"salutationError\", \"\");\n          }\n        }\n      }\n    };\n\n    this.reset = type => {\n      const {\n        t\n      } = this.props;\n\n      if (type === 'phoneModal') {\n        // if (this.state.addrCountry !== '' && this.state.addrCountry !== null && this.state.addrCountry !== undefined) {\n        //   let selectedCountry = this.state.countryCodeArray.find(x => x.countryid === this.state.addrCountry);\n        //   this.setState({ countrycode: selectedCountry.countrycode, countryflag: selectedCountry.countryflag });\n        // }\n        if (this.state.landLineSelected) this.show(\"phoneAreaCode\", false, \"areaCodeError\", \"\");\n        this.show(\"phoneNumber\", false, \"phoneNumberError\", \"\");\n\n        if (this.state.addrCountry.value !== '' && this.state.addrCountry.value !== null && this.state.addrCountry.value !== undefined) {\n          let selectedCountry = this.state.countryCodeArray.find(x => x.CountryName === this.state.addrCountry.label);\n          this.setState({\n            countrycode: selectedCountry.CountryCode,\n            countryflag: selectedCountry.CountryFlag,\n            selectedCountry: selectedCountry.CountryName\n          });\n        }\n\n        this.setState({\n          visiblePhoneModal: false,\n          phonetype: 'Business',\n          phoneTypeError: false,\n          phoneModalTitle: 'Add Phone',\n          phoneAreaCode: '',\n          phoneAreaCodeError: false,\n          phoneNumber: '',\n          phoneNumberError: true,\n          isEditPhone: false,\n          countrycodeError: false,\n          extError: false,\n          ext: '',\n          landLineSelected: false,\n          extSelected: false,\n          landLineLabel: 'EnterLandLine',\n          extensionLabel: t('contactDetails:EnterExt')\n        });\n      } else if (type === 'emailModal') {\n        this.setState({\n          visibleEmailmodal: false,\n          isEditEmail: false,\n          emailtype: 'Work',\n          emailTypeError: false,\n          email: '',\n          emailError: true,\n          emailModalTitle: 'Add Email'\n        });\n        this.show(\"email\", false, \"emailError\", \"\");\n      } else if (type === 'contactDetails') {\n        this.setState({\n          personid: '',\n          organizationid: '',\n          securityuserid: '',\n          radioSelected: 'oktocontact',\n          isEdit: false,\n          contactcode: 0,\n          selectedContactType: '',\n          selectedContactName: '',\n          isCompany: '',\n          gender: '',\n          userImg: '',\n          userImgData: '',\n          companyname: '',\n          comapnynameError: true,\n          title: '',\n          titleError: true,\n          forename: '',\n          forenameError: true,\n          surname: '',\n          surnameError: true,\n          salutation: '',\n          salutationError: true,\n          passportno: '',\n          passportnoError: true,\n          country: '',\n          countryShown: '',\n          filteredCountriesSingle: null,\n          countryError: true,\n          companyIdentifier: '',\n          companyIdentifierError: true,\n          businesstype: '',\n          businesstypeShown: '',\n          filteredBusinessSingle: null,\n          businessTypeError: true,\n          dob: '',\n          dobError: true,\n          addressid: '',\n          addrCountry: '',\n          addrCountryShown: '',\n          filteredAddressCountriesSingle: null,\n          addrCountryError: true,\n          addrline1: '',\n          addrline1Error: true,\n          addrline2: '',\n          addrline3: '',\n          city: '',\n          cityError: true,\n          state: '',\n          stateShown: '',\n          filteredStateSingle: null,\n          stateError: true,\n          postalcode: '',\n          postalcodeError: true,\n          phoneList: [],\n          primaryPhone: '',\n          visiblePhoneModal: false,\n          isEditPhone: false,\n          phoneID: 0,\n          phoneModalTitle: 'Add Phone',\n          phonetype: 'Business',\n          phoneTypeError: false,\n          phoneAreaCode: '',\n          phoneAreaCodeError: false,\n          phoneNumber: '',\n          phoneNumberError: true,\n          countrycode: '',\n          countrycodeError: true,\n          landLineLabel: 'EnterLandLine',\n          landLineSelected: false,\n          extensionLabel: t('contactDetails:EnterExt'),\n          extSelected: false,\n          ext: '',\n          extError: false,\n          emailList: [],\n          primaryEmail: '',\n          visibleEmailmodal: false,\n          isEditEmail: false,\n          emailID: 0,\n          emailModalTitle: 'Add Email',\n          emailtype: 'Work',\n          emailTypeError: false,\n          email: '',\n          emailError: true,\n          docdeliverySelected: '',\n          note: '',\n          noteError: false,\n          bankcode: '',\n          bankcodeError: false,\n          commission: '',\n          commissionError: false,\n          binder: '',\n          allowLogin: 'no',\n          username: '',\n          usernameError: false,\n          password: '',\n          passwordError: false,\n          isShowPassword: false,\n          confirmPassword: '',\n          confirmPasswordError: false,\n          isShowConfirmPassword: false,\n          selectedSecurityQuestions: [],\n          que1: '',\n          ans1: '',\n          ans1Error: true,\n          que2: '',\n          ans2: '',\n          ans2Error: true,\n          que3: '',\n          ans3: '',\n          ans3Error: true,\n          varifyAuthority: ''\n        });\n        this.getContactModes();\n      }\n    };\n\n    this.addToList = type => {\n      const {\n        t\n      } = this.props;\n\n      if (type === 'phoneList') {\n        if (this.state.phoneAreaCodeError || this.state.phoneTypeError || this.state.phoneNumberError || this.state.countrycodeError || this.state.extError) {\n          if (this.state.phoneAreaCodeError) this.show(\"phoneAreaCode\", true, \"areaCodeError\", t(\"contactDetails:AreaCode.error_blank\"));\n          if (this.state.phoneTypeError) this.show(\"phonetype\", true, \"phoneTypeError\", t(\"contactDetails:PhoneType.error\"));\n          if (this.state.phoneNumberError) this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_blank\"));\n          if (this.state.countrycodeError) this.show(\"countrycode\", true, \"countrycodeError\", t(\"contactDetails:CountryCode.error\"));\n          if (this.state.extError) this.show(\"ext\", true, \"\", \"\");\n        } else {\n          this.setState({\n            landLineLabel: 'EnterLandLine',\n            extensionLabel: t('contactDetails:EnterExt')\n          });\n          let isExist = this.state.phoneList.findIndex(x => x.phonetype === this.state.phonetype && x.phonenumber === this.state.phoneNumber && x.countrycode === this.state.countrycode && x.id !== this.state.phoneID);\n\n          if (isExist > -1) {\n            toast.error(t(\"contactDetails:PhoneAlreadyExist\"));\n            return;\n          }\n\n          if (this.state.isEditPhone) {\n            let phoneArray = this.state.phoneList;\n            let index = this.state.phoneList.findIndex(x => x.id === this.state.phoneID); // var index = this.state.phoneList.findIndex(x => x.id === this.state.phoneID || x.phoneid === this.state.phoneID);\n\n            phoneArray[index].phonetype = this.state.phonetype;\n            phoneArray[index].areacode = this.state.phoneAreaCode;\n            phoneArray[index].phonenumber = this.state.phoneNumber;\n            phoneArray[index].countrycode = this.state.countrycode;\n            phoneArray[index].ext = this.state.ext;\n            this.setState({\n              phoneList: phoneArray\n            });\n          } else {\n            var phoneArray = [{\n              id: this.state.phoneList.length,\n              phoneid: '',\n              phonetype: this.state.phonetype,\n              areacode: this.state.phoneAreaCode,\n              phonenumber: this.state.phoneNumber,\n              countrycode: this.state.countrycode,\n              ext: this.state.ext,\n              ispreferred: this.state.phoneList.length === 0 ? true : false,\n              isDeleted: false\n            }];\n            this.setState({\n              phoneList: this.state.phoneList.concat(phoneArray)\n            });\n          }\n\n          this.reset('phoneModal');\n        }\n      } else if (type === 'emailList') {\n        if (this.state.emailTypeError || this.state.emailError) {\n          if (this.state.emailTypeError) this.show(\"emailtype\", true, \"emailTypeError\", t(\"contactDetails:EmailType.error\"));\n          if (this.state.emailError) this.show(\"email\", true, \"emailError\", t(\"contactDetails:Email.error_blank\"));\n        } else {\n          // debugger;\n          let isExist = this.state.emailList.findIndex(x => x.emailtype === this.state.emailtype && x.email === this.state.email && x.id !== this.state.emailID);\n\n          if (isExist > -1) {\n            toast.error(t(\"contactDetails:EmailAlreadyExist\"));\n            return;\n          }\n\n          if (this.state.isEditEmail) {\n            let emailArray = this.state.emailList;\n            let index = this.state.emailList.findIndex(x => x.id === this.state.emailID); // var index = this.state.emailList.findIndex(x => x.id === this.state.emailID || x.emailid === this.state.emailID);\n\n            var el = document.getElementById('emailtype');\n            var emailtype = el.options[el.selectedIndex].innerHTML;\n            emailArray[index].emailtype = emailtype;\n            emailArray[index].email = this.state.email;\n            this.setState({\n              emailList: emailArray\n            });\n          } else {\n            var emailArray = [{\n              id: this.state.emailList.length,\n              emailid: '',\n              emailtype: this.state.emailtype,\n              email: this.state.email,\n              ispreferred: this.state.emailList.length === 0 ? true : false,\n              isDeleted: false\n            }];\n            this.setState({\n              emailList: this.state.emailList.concat(emailArray)\n            });\n          }\n\n          let allEmail = this.state.emailList.concat(emailArray);\n          let preferredEmail = allEmail.find(x => x.ispreferred === true); // this.setState({ username: this.state.email });\n\n          this.setState({\n            username: preferredEmail.email\n          });\n          this.reset('emailModal');\n        }\n      } else if (type === 'contactcode') {\n        this.setState({\n          contactcode: this.state.changedContactCode\n        });\n        this.toggle('contactcode');\n      }\n    };\n\n    this.makePrimary = (value, type) => {\n      if (type === 'phone') {\n        let phoneArray = this.state.phoneList; // let index = phoneArray.findIndex(x => x.id === value.id || x.phoneid === value.phoneid);\n\n        let index = phoneArray.findIndex(x => x.id === value.id);\n\n        for (let i = 0; i < phoneArray.length; i++) {\n          phoneArray[i].ispreferred = false;\n        }\n\n        phoneArray[index].ispreferred = true;\n        phoneArray.sort((x, y) => {\n          return y.ispreferred - x.ispreferred; // return (x.ispreferred === y.ispreferred) ? 0 : x.ispreferred ? -1 : 1;\n        });\n        this.setState({\n          phoneList: phoneArray\n        });\n      } else if (type === 'email') {\n        let emailArray = this.state.emailList; // let index = emailArray.findIndex(x => x.id === value.id || x.emailid === value.emailid);\n\n        let index = emailArray.findIndex(x => x.id === value.id);\n\n        for (let i = 0; i < emailArray.length; i++) {\n          emailArray[i].ispreferred = false;\n        }\n\n        emailArray[index].ispreferred = true;\n        emailArray.sort((x, y) => {\n          return y.ispreferred - x.ispreferred; // return (x.ispreferred === y.ispreferred) ? 0 : x.ispreferred ? -1 : 1;\n        });\n        this.setState({\n          emailList: emailArray,\n          username: value.email\n        });\n      }\n    };\n\n    this.edit = (value, type) => {\n      // debugger;\n      const {\n        t\n      } = this.props;\n\n      if (type === 'phone') {\n        let selectedCountry = this.state.countryCodeArray.find(x => x.CountryCode === value.countrycode);\n        this.setState({\n          isEditPhone: true,\n          phonetype: value.phonetype,\n          phoneTypeError: false,\n          countryflag: selectedCountry.CountryFlag,\n          phoneModalTitle: 'Edit Phone',\n          countrycode: value.countrycode,\n          countrycodeError: false,\n          selectedCountry: selectedCountry.CountryName,\n          phoneAreaCode: value.areacode,\n          phoneAreaCodeError: false,\n          ext: value.ext,\n          phoneNumber: value.phonenumber,\n          phoneNumberError: false,\n          phoneID: value.id,\n          landLineSelected: value.areacode !== '' && value.areacode !== null && value.areacode !== undefined ? true : false,\n          landLineLabel: value.areacode !== '' && value.areacode !== null && value.areacode !== undefined ? 'HideLandLine' : 'EnterLandLine' //visiblePhoneModal: true\n\n        }); // if (value.areacode !== '' && value.areacode !== null && value.areacode !== undefined) {\n        //   this.setState({ landLineSelected: true, landLineLabel: 'Hide Land Line' });\n        // }\n\n        if (value.ext !== '' && value.ext !== undefined && value.ext !== null) {\n          this.setState({\n            extSelected: true,\n            extensionLabel: 'Hide Ext'\n          });\n        }\n\n        this.show('phonetype', false, \"phoneTypeError\", \"\");\n        this.show('phoneNumber', false, \"phoneNumberError\", \"\");\n      } else if (type === 'email') {\n        this.setState({\n          isEditEmail: true,\n          emailtype: value.emailtype,\n          emailTypeError: false,\n          emailModalTitle: 'Edit Email',\n          email: value.email,\n          emailError: false,\n          emailID: value.id //visibleEmailmodal: true,\n\n        });\n        this.show('emailtype', false, \"emailTypeError\", \"\");\n        this.show('email', false, \"emailError\", \"\");\n      }\n    };\n\n    this.confirmDelete = (value, type) => {\n      if (type === 'phone') {\n        this.setState({\n          isDeletePhone: true,\n          valueForDelete: value\n        });\n      } else if (type === 'email') {\n        this.setState({\n          isDeleteEmail: true,\n          valueForDelete: value\n        });\n      }\n    };\n\n    this.delete = (value, type) => {\n      if (type === 'phone') {\n        let phoneArray = this.state.phoneList; // let index = phoneArray.findIndex(x => x.phoneid === value.phoneid || x.id === value.id);\n\n        let index = phoneArray.findIndex(x => x.id === value.id);\n        phoneArray[index].isDeleted = true; // phoneArray.splice(index, 1);\n\n        this.setState({\n          phoneList: phoneArray,\n          isDeletePhone: false,\n          valueForDelete: ''\n        });\n      } else if (type === 'email') {\n        let emailArray = this.state.emailList; // var index = emailArray.findIndex(x => x.id === value.id || x.emailid === value.emailid);\n\n        let index = emailArray.findIndex(x => x.id === value.id); // emailArray.splice(index, 1);\n\n        emailArray[index].isDeleted = true;\n        this.setState({\n          emailList: emailArray,\n          isDeleteEmail: false,\n          valueForDelete: ''\n        });\n      }\n    };\n\n    this.checked = (isChecked, value) => {\n      let arr = this.state.contactModes;\n      let i = arr.findIndex(x => x.StringMapKey === value.StringMapKey);\n      arr[i].isSelected = isChecked;\n      this.setState({\n        contactModes: arr\n      });\n    };\n\n    this.handleSecurityQuestion = (data, queNo) => {\n      const {\n        t\n      } = this.props;\n      let quesionexist = this.state.selectedSecurityQuestions.findIndex(x => x.label === queNo);\n\n      if (quesionexist > -1) {\n        this.state.selectedSecurityQuestions.splice(quesionexist, 1);\n      }\n\n      if (data.target.value === '') {\n        if (queNo === 'que1') this.show('que1', true, \"que1Error\", \"\");\n        if (queNo === 'que2') this.show('que2', true, \"que2Error\", \"\");\n        if (queNo === 'que3') this.show('que3', true, \"que3Error\", \"\");\n      } else {\n        let check = this.state.selectedSecurityQuestions.findIndex(x => x.value === data.target.value);\n\n        if (check === -1) {\n          if (queNo === 'que1') {\n            // this.setState({ que1: data });\n            this.setState({\n              que1: data.target.value\n            });\n            this.show('que1', false, \"que1Error\", \"\");\n          } else if (queNo === 'que2') {\n            // this.setState({ que2: data });\n            this.setState({\n              que2: data.target.value\n            });\n            this.show('que2', false, \"que2Error\", \"\");\n          } else if (queNo === 'que3') {\n            // this.setState({ que3: data });\n            this.setState({\n              que3: data.target.value\n            });\n            this.show('que3', false, \"que3Error\", \"\");\n          }\n\n          var arr = [{\n            label: queNo,\n            value: data.target.value\n          }];\n          this.setState({\n            selectedSecurityQuestions: this.state.selectedSecurityQuestions.concat(arr)\n          });\n        } else {\n          toast.warn(t(\"contactDetails:QuestaionAlreadySelected\"));\n        }\n      }\n    };\n\n    this.formatPhone = ph => {\n      let phone;\n\n      if (ph.countrycode && ph.countrycode !== '' && ph.countrycode !== undefined && ph.countrycode !== null) {\n        if (ph.areacode && ph.areacode !== '' && ph.areacode !== undefined && ph.areacode !== null) {\n          phone = ph.countrycode + ' ' + ph.areacode + ' ' + CommonConfig.formatPhoneNumber(ph.phonenumber);\n        } else {\n          phone = ph.countrycode + ' ' + CommonConfig.formatPhoneNumber(ph.phonenumber);\n        }\n      } else {\n        if (ph.areacode && ph.areacode !== '' && ph.areacode !== undefined && ph.areacode !== null) {\n          phone = ph.areacode + ' ' + CommonConfig.formatPhoneNumber(ph.phonenumber);\n        } else {\n          phone = CommonConfig.formatPhoneNumber(ph.phonenumber);\n        }\n      }\n\n      return phone;\n    };\n\n    this.goBack = () => {\n      // console.log(\"goBack\", this.state.);\n      debugger;\n      var id = this.props.match.params.id ? this.props.match.params.id : this.state.resID;\n      var entityType = this.props.match.params.entityType ? this.props.match.params.entityType : this.state.entityType;\n      this.props.history.push({\n        pathname: '/viewContactDetails/' + id + '/' + entityType,\n        state: {\n          isAdded: !this.state.isEdit\n        }\n      }); // this.props.history.push('/contactList');\n    };\n\n    this.getType = (type, value) => {\n      if (type === 'phone') {\n        // var phonetype = this.state.phoneTypes.find(x => x.StringMapKey === value.phonetype);\n        // return phonetype.StringMapName;\n        return value.phonetype;\n      } else if (type === 'email') {\n        // var emailtype = this.state.emailTypes.find(x => x.StringMapKey === value.emailtype);\n        // return emailtype.StringMapName;\n        return value.emailtype;\n      }\n    };\n\n    this.saveContact = () => {\n      debugger;\n      const {\n        t\n      } = this.props;\n\n      try {\n        if (this.state.title === '' && this.state.selectedContactType != 'InsuranceCompany' && (this.state.isCompany != 'Company' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) {\n          toast.error(t(\"contactDetails:Title.error\"));\n          return;\n        }\n\n        if (this.state.selectedContactType === '') {\n          toast.error(t(\"contactDetails:ContactType.error\"));\n          return;\n        }\n\n        if (this.state.isCompany === '') {\n          toast.error(t(\"contactDetails:isCompanyError\"));\n          return;\n        }\n\n        if (this.state.companyname === '' && this.state.isCompany === 'Company') {\n          toast.error(t(\"contactDetails:CompanyName.error_blank\"));\n          return;\n        }\n\n        if ((this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client') && this.state.title === '') {\n          toast.error(t(\"contactDetails:Title.error\"));\n          return;\n        }\n\n        if ((this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client') && this.state.forename === '') {\n          toast.error(t(\"contactDetails:FirstName.error_blank\"));\n          return;\n        }\n\n        if ((this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client') && this.state.surname === '') {\n          toast.error(t(\"contactDetails:LastName.error_blank\"));\n          return;\n        }\n\n        if ((this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client') && this.state.salutation === '') {\n          toast.error(t(\"contactDetails:Salutation.error_blank\"));\n          return;\n        }\n\n        if (this.state.passportno !== '' && (this.state.country.value === undefined || this.state.country.value === '')) {\n          toast.error(t(\"contactDetails:PassportCountry.error_blank\"));\n          return;\n        } // if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.passportno === '') {\n        //   toast.error(t(\"contactDetails:PassportNumber.error_pattern\"));\n        //   return;\n        // }\n        // if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.country === '') {\n        //   toast.error(t(\"contactDetails:PassportCountry.error_blank\"));\n        //   return;\n        // }\n        // if (this.state.isCompany === 'Company' && this.state.companyIdentifier === '') {\n        //   toast.error(t(\"contactDetails:CompanyIdentifier.error_blank\"));\n        //   return;\n        // }\n\n\n        if ((this.state.businesstype === '' || this.state.businesstype === undefined || this.state.businesstype === null) && (this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) {\n          toast.error(t(\"contactDetails:BusinessType.error_blank\"));\n          return;\n        }\n\n        if ((this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client') && this.state.gender === '') {\n          toast.error(t(\"contactDetails:GenderError\"));\n          return;\n        } // Dob Error\n        // if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && !this.state.isInternalStaff && (this.state.dob === '' || this.state.dob === null || this.state.dob === undefined || this.state.dob === 'null' || this.state.dob === 'undefined' || this.state.dob === \"Invalid date\")) {\n        //   toast.error(t(\"contactDetails:DOB.error_blank\"));\n        //   return;\n        // }\n\n\n        if (this.state.dob === '' || this.state.dob === null || this.state.dob === undefined || this.state.dob === 'null' || this.state.dob === 'undefined' || this.state.dob === \"Invalid date\") {\n          this.state.dob = '0000-00-00';\n        }\n\n        if (!this.state.isInternalStaff && (this.state.addrCountry === '' || this.state.addrCountry === null || this.state.addrCountry === undefined || this.state.addrCountry === 'null' || this.state.addrCountry === 'undefined')) {\n          toast.error(t(\"contactDetails:Country.error\"));\n          return;\n        }\n\n        if (!this.state.isInternalStaff && (this.state.addrCountry.value === '' || this.state.addrCountry.value === undefined || this.state.addrCountry.value === null || this.state.addrCountry.value === 'null' || this.state.addrCountry.value === 'undefined')) {\n          toast.error(t(\"contactDetails:Country.error\"));\n          return;\n        }\n\n        if (!this.state.isInternalStaff && this.state.addrline1 === '') {\n          toast.error(t(\"contactDetails:Line1.error_blank\"));\n          return;\n        }\n\n        if (!this.state.isInternalStaff && this.state.state === '') {\n          toast.error(t(\"contactDetails:County.error\"));\n          return;\n        } // if (this.state.city === '' && this.state.cityShown === '') {\n        //   toast.error(t(\"contactDetails:Town.error\"));\n        //   return;\n        // }\n        // if (this.state.postalcode === '') {\n        //   toast.error(t(\"contactDetails:PostalCode.error_blank\"));\n        //   return;\n        // }\n\n\n        let phoneList = this.state.phoneList.filter(x => x.isDeleted === false);\n\n        if (!phoneList.length) {\n          toast.error(t(\"contactDetails:PhonesError\"));\n          return;\n        }\n\n        let emailList = this.state.emailList.filter(x => x.isDeleted === false);\n\n        if (!emailList.length) {\n          toast.error(t(\"contactDetails:EmailsError\"));\n          return;\n        }\n\n        if (!this.state.isInternalStaff && !this.state.docdeliverySelected) {\n          toast.error(t(\"contactDetails:DocumentDelivery.Error\"));\n          return;\n        }\n\n        if (!this.state.isEdit && this.state.allowLogin === 'yes' && (this.state.username === '' || this.state.username === null || this.state.username === undefined)) {\n          toast.error(t(\"contactDetails:UserName.error_blank\"));\n          return;\n        }\n\n        if (!this.state.isEdit && this.state.allowLogin === 'yes' && (this.state.password === '' || this.state.password === null || this.state.password === undefined)) {\n          toast.error(t(\"contactDetails:Password.error_blank\"));\n          return;\n        }\n\n        if (!this.state.isEdit && this.state.allowLogin === 'yes' && (this.state.confirmPassword === '' || this.state.confirmPassword === null || this.state.confirmPassword === undefined)) {\n          toast.error(t(\"contactDetails:ConfirmPassword.error_blank\"));\n          return;\n        } // if (this.state.allowLogin === 'yes' && (this.state.que1 === '' || this.state.que1 === null || this.state.que1 === undefined)) {\n        //   toast.error(t(\"contactDetails:Question1.error\"));\n        //   return;\n        // }\n        // if (this.state.allowLogin === 'yes' && (this.state.ans1 === '' || this.state.ans1 === null || this.state.ans1 === undefined)) {\n        //   toast.error(t(\"contactDetails:Answer1.error\"));\n        //   return;\n        // }\n        // if (this.state.allowLogin === 'yes' && (this.state.que2 === '' || this.state.que2 === null || this.state.que2 === undefined)) {\n        //   toast.error(t(\"contactDetails:Question1.error\"));\n        //   return;\n        // }\n        // if (this.state.allowLogin === 'yes' && (this.state.ans2 === '' || this.state.ans2 === null || this.state.ans2 === undefined)) {\n        //   toast.error(t(\"contactDetails:Answer2.error\"));\n        //   return;\n        // }\n        // if (this.state.allowLogin === 'yes' && (this.state.que3 === '' || this.state.que3 === null || this.state.que3 === undefined)) {\n        //   toast.error(t(\"contactDetails:Question3.error\"));\n        //   return;\n        // }\n        // if (this.state.allowLogin === 'yes' && (this.state.ans3 === '' || this.state.ans3 === null || this.state.ans3 === undefined)) {\n        //   toast.error(t(\"contactDetails:Answer3.error\"));\n        //   return;\n        // }\n        // if (this.state.allowLogin === 'yes' && !this.checkUniqueQuestions()) {\n        //   toast.error(t(\"contactDetails:UniqueQuestion\"));\n        //   return;\n        // }\n\n\n        if (this.state.commission === '' && (this.state.selectedContactName === 'SubAgent' || this.state.selectedContactName === 'ServiceCenter' || this.state.selectedContactName === 'Sub-Agent' || this.state.selectedContactName === 'Service-Center')) {\n          toast.error(t(\"Please enter commission rate\"));\n          return;\n        }\n\n        const contactDetailsForm = new FormData();\n        var company, allowLogin;\n\n        if (this.state.selectedContactName === 'InsuranceCompany' || this.state.selectedContactName === 'Surveyor') {\n          company = 'Company';\n          allowLogin = 'no';\n        } else {\n          company = this.state.isCompany;\n          allowLogin = this.state.allowLogin;\n        }\n\n        contactDetailsForm.append('personid', this.state.personid);\n        contactDetailsForm.append('NewUser', this.state.newuser);\n        contactDetailsForm.append('organizationid', this.state.organizationid);\n        contactDetailsForm.append('addressid', this.state.addressid);\n        contactDetailsForm.append('languageid', this.state.selectedLanguage);\n        contactDetailsForm.append('isEdit', this.state.isEdit);\n        contactDetailsForm.append('contacttype', this.state.selectedContactType); // contactDetailsForm.append('isCompany', this.state.isCompany);\n\n        contactDetailsForm.append('isCompany', company);\n        contactDetailsForm.append('contactcode', this.state.contactcode);\n\n        if (this.state.companyname != null && this.state.companyname != 'null' && this.state.companyname != 'undefined' && this.state.companyname != undefined) {\n          contactDetailsForm.append('companyname', this.state.companyname.trim());\n        } else {\n          contactDetailsForm.append('companyname', this.state.companyname);\n        }\n\n        contactDetailsForm.append('title', this.state.title);\n        contactDetailsForm.append('forename', this.state.forename.trim());\n        contactDetailsForm.append('surname', this.state.surname.trim());\n        contactDetailsForm.append('salutation', this.state.salutation.trim());\n        contactDetailsForm.append('dob', this.state.dob);\n        contactDetailsForm.append('gender', this.state.gender);\n        contactDetailsForm.append('companyidentifier', this.state.companyIdentifier ? this.state.companyIdentifier.trim() : '');\n        contactDetailsForm.append('passportno', this.state.passportno.trim()); // contactDetailsForm.append('passportcountry', this.state.country);\n\n        contactDetailsForm.append('passportcountry', CommonConfig.isEmpty(this.state.country.value) ? '' : this.state.country.value);\n        contactDetailsForm.append('businesstype', this.state.businesstype); // contactDetailsForm.append('businesstype', (this.state.businesstype !== '' && this.state.businesstype !== undefined && this.state.businesstype !== null) ? this.state.businesstype : this.state.businesstypeShown);\n        // contactDetailsForm.append('country', this.state.addrCountry);\n\n        contactDetailsForm.append('country', this.state.addrCountry.value);\n        contactDetailsForm.append('addrline1', this.state.addrline1);\n        contactDetailsForm.append('addrline2', this.state.addrline2);\n        contactDetailsForm.append('addrline3', this.state.addrline3);\n        contactDetailsForm.append('city', CommonConfig.isEmpty(this.state.city) ? this.state.cityShown : this.state.city);\n        contactDetailsForm.append('state', this.state.state);\n        contactDetailsForm.append('postalcode', this.state.postalcode);\n        contactDetailsForm.append('phoneList', JSON.stringify(this.state.phoneList));\n        contactDetailsForm.append('emailList', JSON.stringify(this.state.emailList));\n        contactDetailsForm.append('isoktocontact', this.state.radioSelected);\n        contactDetailsForm.append('contactmode', JSON.stringify(this.state.contactModes));\n        contactDetailsForm.append('documentdelivery', this.state.docdeliverySelected);\n        contactDetailsForm.append('note', this.state.note);\n        contactDetailsForm.append('centralbankcode', this.state.bankcode);\n        contactDetailsForm.append('commissionrate', this.state.commission);\n        contactDetailsForm.append('binderid', this.state.binder);\n        contactDetailsForm.append('CommissionPayableOn', this.state.CommissionPayable); // contactDetailsForm.append('allowtologin', this.state.allowLogin);\n\n        contactDetailsForm.append('allowtologin', allowLogin); // contactDetailsForm.append('securityuserid', this.state.securityuserid);\n\n        contactDetailsForm.append('username', this.state.username);\n        contactDetailsForm.append('password', this.state.password); // contactDetailsForm.append('confirmPassword', this.state.confirmPassword);\n\n        let questionArray = [];\n\n        if (this.state.allowLogin === 'yes') {\n          questionArray = [{\n            securityQuestionID: this.state.securityquestionid1,\n            que: this.state.que1,\n            ans: this.state.ans1\n          }, {\n            securityQuestionID: this.state.securityquestionid2,\n            que: this.state.que2,\n            ans: this.state.ans2\n          }, {\n            securityQuestionID: this.state.securityquestionid3,\n            que: this.state.que3,\n            ans: this.state.ans3\n          }];\n        }\n\n        contactDetailsForm.append('questionArray', JSON.stringify(questionArray));\n        contactDetailsForm.append('question1', this.state.que1);\n        contactDetailsForm.append('answer1', this.state.ans1);\n        contactDetailsForm.append('question2', this.state.que2);\n        contactDetailsForm.append('answer2', this.state.ans2);\n        contactDetailsForm.append('question3', this.state.que3);\n        contactDetailsForm.append('answer3', this.state.ans3);\n        contactDetailsForm.append('userauthenticity', this.state.varifyAuthority);\n        contactDetailsForm.append('bankcode', this.state.bankcode);\n        contactDetailsForm.append('commission', this.state.commission);\n        contactDetailsForm.append('loggedInUserId', CommonConfig.loggedInUserId());\n\n        if (!CommonConfig.isEmpty(this.state.userImgData)) {\n          // var imgData = {\n          //   uri: this.state.image2.uri,\n          //   type: \"image/jpeg\", // or photo.type\n          //   name: \"providergallary\"\n          // }\n          contactDetailsForm.append('profileImage', this.state.userImgData, this.state.userImgData.name);\n        } // \n\n\n        api.post('api/addContactDetails', contactDetailsForm).then(res => {\n          if (res.success) {\n            if (res.data.success) {\n              toast.success(res.data.message);\n\n              if (this.state.selectedContactType === 'Client' && !this.state.isEdit) {\n                this.setState({\n                  showPolicyModal: true,\n                  resID: res.data.data.id,\n                  entityType: res.data.data.entityType\n                });\n              } else {\n                this.props.history.push({\n                  pathname: '/viewContactDetails/' + res.data.data.id + '/' + res.data.data.entityType,\n                  state: {\n                    isAdded: !this.state.isEdit\n                  }\n                });\n                this.reset('contactDetails');\n              } // this.props.history.push('/contactList');\n\n            } else {\n              toast.error(res.data.message);\n            }\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (error) {\n        console.log(\"Asfdaf\", error);\n      }\n    };\n\n    this.filterSingle = (event, type) => {\n      if (type === 'passportcountry') {\n        // if(event.query === undefined || event.query === '' || event.query === null){\n        //   this.setState({ filteredCountriesSingle: this.state.countryArray });\n        // }else{\n        let results = this.state.countryArray.filter(country => {\n          return country.label.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n        this.setState({\n          filteredCountriesSingle: results\n        }); // }\n      } else if (type === 'addresscountry') {\n        let results = this.state.countryArray.filter(country => {\n          return country.label.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n        this.setState({\n          filteredAddressCountriesSingle: results,\n          stateShown: ''\n        });\n      } else if (type === 'businesstype') {\n        let results = this.state.BusinessArray.filter(business => {\n          return business.label.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n        this.setState({\n          filteredBusinessSingle: results\n        });\n      } else if (type === 'addrstate') {\n        // if(this.state.stateArray.length){\n        let results = this.state.stateArray.filter(st => {\n          return st.label.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n        this.setState({\n          filteredStateSingle: results\n        }); // }else{\n        //   toast.error('Please select country first');\n        // }\n      } else if (type === 'city') {\n        // if(this.state.cityArray.length){\n        let results = this.state.cityArray.filter(city => {\n          return city.label.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n        this.setState({\n          filteredCitySingle: results\n        }); // }else{\n        //   toast.error('Please select country and state first');\n        // }\n      }\n    };\n\n    this.handlePasswordChange = e => {\n      const {\n        t\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'password') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            passwordError: true,\n            case1: false,\n            case2: false,\n            case3: false,\n            case4: false,\n            case5: false,\n            case6: false\n          });\n          this.show(\"password\", true, \"passwordError\", t(\"contactDetails:Password.error_blank\"));\n        } else {\n          var myInput = document.getElementById(\"password\"); // Validate lowercase letters\n\n          var lowerCaseLetters = /[a-z]/g;\n\n          if (myInput.value.match(lowerCaseLetters)) {\n            this.setState({\n              case2: true\n            });\n          } else {\n            this.setState({\n              case2: false\n            });\n          } // Validate capital letters\n\n\n          var upperCaseLetters = /[A-Z]/g;\n\n          if (myInput.value.match(upperCaseLetters)) {\n            this.setState({\n              case1: true\n            });\n          } else {\n            this.setState({\n              case1: false\n            });\n          } // Validate numbers\n\n\n          var numbers = /[0-9]/g;\n\n          if (myInput.value.match(numbers)) {\n            this.setState({\n              case4: true\n            });\n          } else {\n            this.setState({\n              case4: false\n            });\n          } //Validate Special Characters\n\n\n          var spcs = /[!@#$%^&*(),.?\":{}|<>_+-='~`]/g;\n\n          if (myInput.value.match(spcs)) {\n            this.setState({\n              case3: true\n            });\n          } else {\n            this.setState({\n              case3: false\n            });\n          } // Validate length\n\n\n          if (myInput.value.length === 8) {\n            this.setState({\n              case5: true,\n              case6: true\n            });\n          } else if (myInput.value.length > 15) {\n            this.setState({\n              case6: false\n            });\n          } else if (myInput.value.length < 8) {\n            this.setState({\n              case5: false\n            });\n          } else {\n            this.setState({\n              case5: true,\n              case6: true\n            });\n          } //password regex\n\n\n          let passwordRegEx = CommonConfig.RegExp.password; // /^(?=.*[0-9])(?=.*[!@#$%^&*.])[a-zA-Z0-9!@#$%^&*.]{8,}$/;\n\n          let password = e.target.value;\n\n          if (!passwordRegEx.test(password)) {\n            this.setState({\n              passwordError: true\n            });\n            this.show(\"password\", true, \"passwordError\", t(\"contactDetails:Password.error_blank\"));\n          } else {\n            this.setState({\n              passwordError: false,\n              password: e.target.value\n            });\n            this.show(\"password\", false, \"passwordError\", \"\");\n          }\n        }\n      }\n    };\n\n    this.handleDobChange = e => {\n      console.log(\"ijijij\", e); // const { t } = this.props;\n\n      if (e === null || e === undefined) {}\n\n      this.setState({\n        dob: e\n      });\n    };\n\n    this.close = type => {\n      if (type === 'policyModal') {\n        this.goBack();\n        this.reset('contactDetails');\n      }\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n    this.state = {\n      personid: '',\n      organizationid: '',\n      securityuserid: '',\n      selectedLanguage: props.i18n.language,\n      radioSelected: 'oktocontact',\n      isEdit: false,\n      contactcode: 0,\n      changedContactCode: '',\n      contactCodeLabel: 'Edit Contact Code',\n      isContactCodeEdit: false,\n      contactCodeError: false,\n      contactType: [],\n      selectedContactType: 'Client',\n      selectedContactName: '',\n      companyArray: [{\n        label: 'Individual',\n        value: 'Individual',\n        image: 'icon-user'\n      }, {\n        label: 'Company',\n        value: 'Company',\n        image: 'fa fa-building'\n      }],\n      isCompany: 'Individual',\n      genderArray: [{\n        label: 'Male',\n        value: 'Male',\n        image: 'fa fa-male'\n      }, {\n        label: 'Female',\n        value: 'Female',\n        image: 'fa fa-female'\n      }],\n      gender: '',\n      userImg: '',\n      userImgData: '',\n      companyname: '',\n      comapnynameError: true,\n      title: '',\n      titleArray: [],\n      titleError: true,\n      forename: '',\n      forenameError: true,\n      surname: '',\n      surnameError: true,\n      salutation: '',\n      salutationError: true,\n      passportno: '',\n      passportnoError: true,\n      countryArray: [],\n      countryArrayCopy: [],\n      countryCodeArray: [],\n      filteredCountriesSingle: null,\n      country: '',\n      countryShown: '',\n      countryError: true,\n      companyIdentifier: '',\n      companyIdentifierError: true,\n      businesstype: '',\n      businesstypeShown: '',\n      businessTypeError: true,\n      BusinessArray: [],\n      filteredBusinessSingle: null,\n      dob: '',\n      dobError: true,\n      addressid: '',\n      addrCountry: '',\n      addrCountryShown: '',\n      filteredAddressCountriesSingle: null,\n      addrCountryError: true,\n      addrline1: '',\n      addrline1Error: true,\n      addrline2: '',\n      addrline2Error: false,\n      addrline3: '',\n      addrline3Error: false,\n      city: '',\n      cityShown: '',\n      filteredCitySingle: null,\n      cityError: true,\n      cityArray: [],\n      state: '',\n      stateShown: '',\n      filteredStateSingle: null,\n      stateError: true,\n      stateArray: [],\n      stateArrayCopy: [],\n      postalcode: '',\n      postalcodeError: true,\n      phoneList: [],\n      primaryPhone: '',\n      visiblePhoneModal: false,\n      phoneTypes: [],\n      isEditPhone: false,\n      phoneID: 0,\n      phoneModalTitle: 'Add Phone',\n      phonetype: 'Business',\n      phoneTypeError: false,\n      phoneAreaCode: '',\n      phoneAreaCodeError: false,\n      phoneNumber: '',\n      phoneNumberError: true,\n      countrycode: '',\n      countryflag: '',\n      selectedCountry: '',\n      countrycodeError: true,\n      landLineLabel: 'EnterLandLine',\n      landLineSelected: false,\n      extensionLabel: 'Enter Ext',\n      extSelected: false,\n      ext: '',\n      extError: false,\n      emailList: [],\n      primaryEmail: '',\n      visibleEmailmodal: false,\n      emailTypes: [],\n      isEditEmail: false,\n      emailID: 0,\n      emailModalTitle: 'Add Email',\n      emailtype: 'Work',\n      emailTypeError: false,\n      email: '',\n      emailError: true,\n      contactModes: [],\n      contactModesList: [],\n      docdeliverySelected: '',\n      docDelivery: [],\n      note: '',\n      noteError: false,\n      bankcode: '',\n      bankcodeError: false,\n      commission: '',\n      commissionError: false,\n      CommissionPayable: 'New Business',\n      CommissionPayableError: false,\n      CommissionPayables: [],\n      binder: '',\n      binderArray: [],\n      allowLogin: 'no',\n      username: '',\n      usernameError: false,\n      password: '',\n      passwordError: false,\n      isShowPassword: false,\n      confirmPassword: '',\n      confirmPasswordError: false,\n      isShowConfirmPassword: false,\n      case1: false,\n      case2: false,\n      case3: false,\n      case4: false,\n      case5: false,\n      case6: true,\n      showRules: false,\n      securityQuestionArray: [],\n      selectedSecurityQuestions: [],\n      que1: '',\n      ans1: '',\n      isShowAns1: false,\n      securityquestionid1: '',\n      ans1Error: true,\n      que2: '',\n      ans2: '',\n      isShowAns2: false,\n      securityquestionid2: '',\n      ans2Error: true,\n      que3: '',\n      ans3: '',\n      isShowAns3: false,\n      securityquestionid3: '',\n      ans3Error: true,\n      varifyAuthority: '',\n      isDeletePhone: false,\n      isDeleteEmail: false,\n      valueForDelete: '',\n      showPolicyModal: false,\n      resID: '',\n      isInternalStaff: false,\n      newuser: 'no'\n    };\n  }\n\n  componentDidMount() {\n    let el = document.getElementsByTagName('body');\n    el[0].classList.remove('modal-open');\n    this.getContactTypes();\n    this.getTitle();\n    this.getCountry();\n    this.getEmailType(\"EMAILTYPE\");\n    this.getCOMMISSIONPAYABLE(\"COMMISSIONPAYABLE\");\n    this.getPhoneType();\n    this.getBusinessTypes(); // this.getDropDownValues('BUSINESSTYPE', 'BusinessArray', 'StringMapKey');\n\n    this.getContactModes();\n    this.getBinder();\n    this.getSecurityQuestions();\n\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.getContactDetails(this.props.match.params.id, this.props.match.params.entityType);\n    } else {\n      this.getContactCode();\n    }\n  }\n\n  getContactDetails(id, entityType) {\n    try {\n      let data = {\n        id: id,\n        entityType: entityType,\n        languageId: this.props.i18n.language //this.state.selectedLanguage\n\n      };\n      api.post('api/getContactDetailsByTypeAndID', data).then(res => {\n        console.log(\"dfsgsrfg\", res);\n\n        if (res.success) {\n          var phones = [];\n          var emails = [];\n          var contactModes = this.state.contactModesList;\n          var profileImage;\n          let sortedPhoneData = res.data.phoneData.sort((x, y) => {\n            return y.IsPreferred.data[0] - x.IsPreferred.data[0];\n          });\n          let sortedEmailData = res.data.emailData.sort((x, y) => {\n            return y.IsPreferred.data[0] - x.IsPreferred.data[0];\n          });\n\n          for (let i = 0; i < sortedPhoneData.length; i++) {\n            phones.push({\n              id: i,\n              phoneid: sortedPhoneData[i].PhoneId,\n              phonetype: sortedPhoneData[i].PhoneType,\n              areacode: sortedPhoneData[i].AreaCode,\n              countrycode: sortedPhoneData[i].CountryCode,\n              phonenumber: sortedPhoneData[i].PhoneNumber,\n              ext: sortedPhoneData[i].Ext,\n              ispreferred: sortedPhoneData[i].IsPreferred.data[0] === 1 ? true : false,\n              isDeleted: false\n            });\n          }\n\n          for (let j = 0; j < sortedEmailData.length; j++) {\n            emails.push({\n              id: j,\n              emailid: sortedEmailData[j].EmailId,\n              emailtype: sortedEmailData[j].EmailType,\n              email: sortedEmailData[j].Email,\n              ispreferred: sortedEmailData[j].IsPreferred.data[0] === 1 ? true : false,\n              isDeleted: false\n            });\n          }\n\n          for (let a = 0; a < contactModes.length; a++) {\n            for (let k = 0; k < res.data.contactModes.length; k++) {\n              if (res.data.contactModes[k].contactmodename == contactModes[a].StringMapName) {\n                contactModes[a].ContactModeId = res.data.contactModes[k].ContactModeId;\n                contactModes[a].StringMapId = res.data.contactModes[k].ContactModeType;\n                contactModes[a].StringMapKey = res.data.contactModes[k].ContactModeType;\n                contactModes[a].StringMapName = res.data.contactModes[k].contactmodename;\n                contactModes[a].isSelected = res.data.contactModes[k].Status === 'Active' ? true : false;\n              }\n            }\n          } // if (res.data.personData[0].SecurityUserId && res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null && res.data.personData[0].SecurityUserId !== '') {\n          //   this.setState({\n          //     allowLogin: 'yes',\n          //     username: res.data.personData[0].LoginId,\n          //     password: res.data.personData[0].Password,\n          //     case1: true,\n          //     case2: true,\n          //     case3: true,\n          //     case4: true,\n          //     case5: true,\n          //     case6: true\n          //   });\n          //   console.log(res.data.questionData.length());\n          //   if(res.data.questionData.length() != 0){\n          //     this.setState({\n          //       securityquestionid1: res.data.questionData[0].UserSecurityQuestionId,\n          //       securityquestionid2: res.data.questionData[1].UserSecurityQuestionId,\n          //       securityquestionid3: res.data.questionData[2].UserSecurityQuestionId,\n          //       que1: res.data.questionData[0].Question,\n          //       que2: res.data.questionData[1].Question,\n          //       que3: res.data.questionData[2].Question,\n          //       ans1: res.data.questionData[0].Answer,\n          //       ans2: res.data.questionData[1].Answer,\n          //       ans3: res.data.questionData[2].Answer\n          //     });\n          //   }\n          //   // for(let k = 0; k < res.data.questionData.length; k++){\n          //   // }\n          // }\n\n\n          if (res.data.personData[0].PicturePath !== '' && res.data.personData[0].PicturePath !== undefined && res.data.personData[0].PicturePath !== null) {\n            profileImage = apiBase + res.data.personData[0].PicturePath;\n          }\n\n          if (!CommonConfig.isEmpty(res.data.addressData[0].Country)) {\n            this.getStates(res.data.addressData[0].Country);\n          }\n\n          if (!CommonConfig.isEmpty(res.data.addressData[0].State)) {\n            this.getCity(res.data.addressData[0].State);\n          }\n\n          if (entityType.toString().toLowerCase() === 'person') {\n            this.setState({\n              isEdit: true,\n              personid: res.data.personData[0].PersonId,\n              contactcode: res.data.personData[0].ContactCode,\n              selectedContactType: res.data.personData[0].ContactType,\n              selectedContactName: res.data.personData[0].contactTypeName,\n              commission: res.data.personData[0].CommissionRate,\n              bankcode: res.data.personData[0].CentralBankCode,\n              isInternalStaff: res.data.personData[0].ContactType == \"InternalStaff\" ? true : false,\n              isCompany: 'Individual',\n              userImg: profileImage,\n              companyname: res.data.personData[0].CompanyName,\n              comapnynameError: res.data.personData[0].CompanyName !== undefined && res.data.personData[0].CompanyName !== null ? false : true,\n              title: res.data.personData[0].Title,\n              titleError: res.data.personData[0].Title !== undefined && res.data.personData[0].Title !== null ? false : true,\n              forename: res.data.personData[0].Forename,\n              forenameError: res.data.personData[0].Forename !== undefined && res.data.personData[0].Forename !== null ? false : true,\n              surname: res.data.personData[0].Surname,\n              surnameError: res.data.personData[0].Surname !== undefined && res.data.personData[0].Surname !== null ? false : true,\n              salutation: res.data.personData[0].Salutation,\n              salutationError: res.data.personData[0].Salutation !== undefined && res.data.personData[0].Salutation !== null ? false : true,\n              gender: res.data.personData[0].Gender,\n              passportno: res.data.personData[0].PassportNumber,\n              passportnoError: res.data.personData[0].PassportNumber !== undefined && res.data.personData[0].PassportNumber !== null ? false : true,\n              // country: res.data.personData[0].PassportCountry,\n              // countryShown: (res.data.personData[0].passportcountryName !== undefined && res.data.personData[0].passportcountryName !== null && res.data.personData[0].passportcountryName !== '') ? res.data.personData[0].passportcountryName : '',\n              country: {\n                label: res.data.personData[0].passportcountryName,\n                value: res.data.personData[0].PassportCountry\n              },\n              countryError: res.data.personData[0].PassportCountry !== undefined && res.data.personData[0].PassportCountry !== null ? false : true,\n              dob: CommonConfig.isEmpty(res.data.personData[0].DOB) || res.data.personData[0].DOB == '0000-00-00' || res.data.personData[0].DOB == \"Invalid date\" ? '' : moment(res.data.personData[0].DOB).format('YYYY-MM-DD'),\n              //new Date(res.data.personData[0].DOB), //\n              dobError: res.data.personData[0].DOB !== undefined && res.data.personData[0].DOB !== null ? false : true,\n              businesstype: res.data.personData[0].BusinessType,\n              // businesstypeShown: (res.data.personData[0].businesstypeName !== undefined && res.data.personData[0].businesstypeName !== null && res.data.personData[0].businesstypeName !== '') ? res.data.personData[0].businesstypeName : '',\n              // businesstype: { label: res.data.personData[0].businesstypeName, value: res.data.personData[0].BusinessType },\n              businessTypeError: res.data.personData[0].BusinessType !== undefined && res.data.personData[0].BusinessType !== null ? false : true,\n              addressid: res.data.addressData[0].Addressid,\n              // addrCountry: res.data.addressData[0].Country,\n              // addrCountryShown: (res.data.addressData[0].countryname !== undefined && res.data.addressData[0].countryname !== null && res.data.addressData[0].countryname !== '') ? res.data.addressData[0].countryname : '',\n              addrCountry: {\n                label: res.data.addressData[0].countryname,\n                value: res.data.addressData[0].Country\n              },\n              addrCountryError: CommonConfig.isEmpty(res.data.addressData[0].Country) ? true : false,\n              addrline1: res.data.addressData[0].AddrLine1,\n              addrline1Error: res.data.addressData[0].AddrLine1 !== undefined && res.data.addressData[0].AddrLine1 !== null ? false : true,\n              addrline2: res.data.addressData[0].AddrLine2,\n              addrline3: res.data.addressData[0].AddrLine3,\n              state: res.data.addressData[0].State,\n              stateShown: res.data.addressData[0].statename !== undefined && res.data.addressData[0].statename !== null && res.data.addressData[0].statename !== '' ? res.data.addressData[0].statename : '',\n              stateError: res.data.addressData[0].State !== undefined && res.data.addressData[0].State !== null ? false : true,\n              city: res.data.addressData[0].City,\n              cityShown: res.data.addressData[0].City,\n              cityError: res.data.addressData[0].City !== undefined && res.data.addressData[0].City !== null ? false : true,\n              postalcode: res.data.addressData[0].PostalCode,\n              postalcodeError: res.data.addressData[0].PostalCode !== undefined && res.data.addressData[0].PostalCode !== null ? false : true,\n              phoneList: phones,\n              emailList: emails,\n              radioSelected: res.data.personData[0].IsOkToContact.data[0] === 1 ? 'oktocontact' : 'donotcontact',\n              contactModes: contactModes,\n              docdeliverySelected: res.data.personData[0].DocumentDelivery,\n              note: res.data.personData[0].Note,\n              CommissionPayable: res.data.personData[0].CommissionPayableOn,\n              allowLogin: res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null && res.data.personData[0].SecurityUserId !== '' ? 'yes' : 'no',\n              securityuserid: res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null ? res.data.personData[0].SecurityUserId : ''\n            });\n          } else if (entityType.toString().toLowerCase() === 'organization') {\n            this.setState({\n              isEdit: true,\n              organizationid: res.data.personData[0].OrganizationId,\n              contactcode: res.data.personData[0].ContactCode,\n              selectedContactType: res.data.personData[0].ContactType,\n              selectedContactName: res.data.personData[0].contactTypeName,\n              isCompany: 'Company',\n              commission: res.data.personData[0].CommissionRate,\n              userImg: profileImage,\n              CommissionPayable: res.data.personData[0].CommissionPayableOn,\n              companyIdentifier: res.data.personData[0].CompanyIdentifier,\n              companyIdentifierError: CommonConfig.isEmpty(res.data.personData[0].CompanyIdentifier) ? true : false,\n              companyname: res.data.personData[0].OrganizationName,\n              comapnynameError: res.data.personData[0].OrganizationName !== undefined && res.data.personData[0].OrganizationName !== null ? false : true,\n              businesstype: res.data.personData[0].BusinessType,\n              // businesstypeShown: (res.data.personData[0].businesstypeName !== undefined && res.data.personData[0].businesstypeName !== null && res.data.personData[0].businesstypeName !== '') ? res.data.personData[0].businesstypeName : '',\n              //businesstype: { label: res.data.personData[0].businesstypeName, value: res.data.personData[0].BusinessType },\n              businessTypeError: res.data.personData[0].BusinessType !== undefined && res.data.personData[0].BusinessType !== null ? false : true,\n              addressid: res.data.addressData[0].Addressid,\n              // addrCountry: res.data.addressData[0].Country,\n              // addrCountryShown: (res.data.addressData[0].countryname !== undefined && res.data.addressData[0].countryname !== null && res.data.addressData[0].countryname !== '') ? res.data.addressData[0].countryname : '',\n              addrCountry: {\n                label: res.data.addressData[0].countryname,\n                value: res.data.addressData[0].Country\n              },\n              addrCountryError: res.data.addressData[0].Country !== null && res.data.addressData[0].Country !== undefined ? false : true,\n              addrline1: res.data.addressData[0].AddrLine1,\n              addrline1Error: res.data.addressData[0].AddrLine1 !== undefined && res.data.addressData[0].AddrLine1 !== null ? false : true,\n              addrline2: res.data.addressData[0].AddrLine2,\n              addrline3: res.data.addressData[0].AddrLine3,\n              state: res.data.addressData[0].State,\n              stateShown: res.data.addressData[0].statename !== undefined && res.data.addressData[0].statename !== null && res.data.addressData[0].statename !== '' ? res.data.addressData[0].statename : '',\n              stateError: res.data.addressData[0].State !== undefined && res.data.addressData[0].State !== null ? false : true,\n              city: res.data.addressData[0].City,\n              cityShown: res.data.addressData[0].City,\n              cityError: res.data.addressData[0].City !== undefined && res.data.addressData[0].City !== null ? false : true,\n              postalcode: res.data.addressData[0].PostalCode,\n              postalcodeError: res.data.addressData[0].PostalCode !== undefined && res.data.addressData[0].PostalCode !== null ? false : true,\n              phoneList: phones,\n              emailList: emails,\n              radioSelected: res.data.personData[0].IsOkToContact.data[0] === 1 ? 'oktocontact' : 'donotcontact',\n              contactModes: contactModes,\n              docdeliverySelected: res.data.personData[0].DocumentDelivery,\n              note: res.data.personData[0].Note,\n              allowLogin: res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null && res.data.personData[0].SecurityUserId !== '' ? 'yes' : 'no',\n              securityuserid: res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null ? res.data.personData[0].SecurityUserId : '',\n              // companyname: res.data.personData[0].CompanyName?res.data.personData[0].CompanyName:'',\n              // comapnynameError: false,\n              title: res.data.personData[0].Title ? res.data.personData[0].Title : '',\n              titleError: false,\n              forename: res.data.personData[0].Forename ? res.data.personData[0].Forename : '',\n              forenameError: false,\n              surname: res.data.personData[0].Surname ? res.data.personData[0].Surname : '',\n              surnameError: false,\n              salutation: res.data.personData[0].Salutation ? res.data.personData[0].Salutation : '',\n              salutationError: false,\n              gender: res.data.personData[0].Gender ? res.data.personData[0].Gender : '',\n              passportno: res.data.personData[0].PassportNumber ? res.data.personData[0].PassportNumber : '',\n              passportnoError: false,\n              dob: CommonConfig.isEmpty(res.data.personData[0].DOB) || res.data.personData[0].DOB == '0000-00-00' || res.data.personData[0].DOB == \"Invalid date\" ? '' : moment(res.data.personData[0].DOB).format('YYYY-MM-DD'),\n              dobError: false,\n              country: {\n                label: res.data.personData[0].passportcountryName,\n                value: res.data.personData[0].PassportCountry\n              },\n              countryError: res.data.personData[0].PassportCountry !== undefined && res.data.personData[0].PassportCountry !== null ? false : true\n            });\n          } else {}\n\n          if (this.state.selectedContactType == 'SubAgent' || this.state.selectedContactType == 'ServiceCenter') {\n            // this.getEmailType(\"EMAILTYPEAGENT\");\n            this.getEmailType(\"BROKERMAILTYPE\");\n          } else {\n            this.getEmailType(\"EMAILTYPE\");\n          }\n        } else {\n          console.log(\"error in get data\");\n        }\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getContactCode() {\n    try {\n      api.get('api/generateContactCode').then(res => {\n        if (res.success) {\n          this.setState({\n            contactcode: Number(res.data.ContactCode) + 1\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getContactTypes() {\n    try {\n      const data = {\n        stringmaptype: 'CONTACTTYPE',\n        // orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            contactType: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getTitle() {\n    try {\n      const data = {\n        stringmaptype: 'TITLE',\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            titleArray: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getCountry() {\n    try {\n      const data = {\n        stringmaptype: 'COUNTRY',\n        // orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          let formattedArray = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedArray.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].StringMapKey\n            });\n          } // this.setState({ countryArray: res.data });\n\n\n          this.setState({\n            countryArray: formattedArray,\n            countryArrayCopy: res.data\n          });\n        } else {}\n      }).catch(err => {});\n      api.get('api/getCountry').then(res => {\n        if (res.success) {\n          this.setState({\n            countryCodeArray: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getCOMMISSIONPAYABLE(type) {\n    try {\n      const data = {\n        stringmaptype: type,\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            CommissionPayables: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getEmailType(type) {\n    try {\n      const data = {\n        stringmaptype: type,\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage,\n        ContactType: this.state.selectedContactType\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            emailTypes: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getPhoneType() {\n    try {\n      const data = {\n        stringmaptype: 'PHONETYPE',\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            phoneTypes: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getCity(state) {\n    try {\n      let selectedState = this.state.stateArrayCopy.find(x => x.StringMapKey === state);\n      const data = {\n        parent_id: selectedState.StringMapId,\n        // orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            cityArray: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getStates(country) {\n    try {\n      let selectedCountry = this.state.countryArrayCopy.find(x => x.StringMapKey === country);\n      const data = {\n        parent_id: selectedCountry.StringMapId,\n        // orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            stateArray: res.data,\n            stateArrayCopy: res.data,\n            city: ''\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    } // this.getCity();\n\n  } // getBusinessTypes() {\n  //   try {\n  //     api.get('api/getBusinessTypes').then(res => {\n  //       if (res.success) {\n  //         let formatArr = [];\n  //         for (let i = 0; i < res.data.length; i++) {\n  //           formatArr.push({ label: res.data[i].label, value: res.data[i].label });\n  //         }\n  //         this.setState({ BusinessArray: formatArr });\n  //       }\n  //     }).catch(err => {\n  //     });\n  //   } catch (err) {\n  //   }\n  // }\n\n\n  getBusinessTypes(stringMapType, setStateName, sortorder) {\n    try {\n      const data = {\n        stringmaptype: 'BUSINESSTYPE',\n        orderby: 'StringMapKey'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          let formatArr = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formatArr.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].StringMapKey\n            });\n          }\n\n          this.setState({\n            BusinessArray: formatArr\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getContactModes() {\n    try {\n      const data = {\n        stringmaptype: 'CONTACTMODE',\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var formattedArray = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedArray.push({\n              ContactModeId: '',\n              StringMapId: res.data[i].StringMapId,\n              StringMapName: res.data[i].StringMapName,\n              StringMapKey: res.data[i].StringMapKey,\n              isSelected: false\n            });\n          } // this.setState({ contactModes: res.data });\n\n\n          this.setState({\n            contactModes: formattedArray\n          });\n          this.setState({\n            contactModesList: formattedArray\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getBinder() {}\n\n  getSecurityQuestions() {\n    try {\n      const data = {\n        stringmaptype: 'SECURITYQUESTION',\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          // var Questions = [];\n          // res.data.map((ques, i) => {\n          //   Questions.push({label: ques.stringmapname, })\n          // })\n          this.setState({\n            securityQuestionArray: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  toggle(type) {\n    const {\n      t\n    } = this.props;\n\n    if (type === 'landline') {\n      if (this.state.landLineSelected) {\n        this.setState({\n          landLineLabel: 'EnterLandLine'\n        });\n      } else {\n        this.setState({\n          landLineLabel: 'HideLandLine'\n        });\n      }\n\n      this.setState({\n        landLineSelected: !this.state.landLineSelected,\n        phoneAreaCode: '',\n        phoneAreaCodeError: false\n      }); // this.show('phoneAreaCode', false);\n    } else if (type === 'ext') {\n      if (this.state.extSelected) {\n        this.setState({\n          extensionLabel: t('contactDetails:EnterExt')\n        });\n      } else {\n        this.setState({\n          extensionLabel: t('contactDetails:HideExt')\n        });\n      }\n\n      this.setState({\n        extSelected: !this.state.extSelected,\n        ext: '',\n        extError: false\n      }); // this.show(\"ext\", false);\n    } else if (type === 'password') {\n      this.setState({\n        isShowPassword: !this.state.isShowPassword\n      });\n    } else if (type === 'confirmPassword') {\n      this.setState({\n        isShowConfirmPassword: !this.state.isShowConfirmPassword\n      });\n    } else if (type === 'contactcode') {\n      this.setState({\n        isContactCodeEdit: !this.state.isContactCodeEdit,\n        contactCodeError: false,\n        changedContactCode: this.state.contactcode\n      });\n    } else if (type === 'ans1') {\n      this.setState({\n        isShowAns1: !this.state.isShowAns1\n      });\n    } else if (type === 'ans2') {\n      this.setState({\n        isShowAns2: !this.state.isShowAns2\n      });\n    } else if (type === 'ans3') {\n      this.setState({\n        isShowAns3: !this.state.isShowAns3\n      });\n    } else if (type === 'rules') {\n      this.setState({\n        showRules: !this.state.showRules\n      });\n    } else if (type === 'dob') {\n      document.getElementById('dob').click();\n    }\n  }\n\n  onRadioBtnClick(radioType, radioSelected) {\n    if (radioType === 'contactPreference') {\n      if (radioSelected === 'donotcontact') {\n        let arr = this.state.contactModes;\n        arr.forEach(val => {\n          val.isSelected = false;\n        });\n        this.setState({\n          contactModes: arr\n        });\n      }\n\n      this.setState({\n        radioSelected: radioSelected\n      });\n    } else if (radioType === 'docdelivery') {\n      // if(radioSelected === 'both'){\n      //   var docArray = [{label: 'email', value: 'email'}, {label: 'post', value: 'post'}];\n      //   this.setState({ docDelivery: docArray });\n      // }else{\n      //   var docArray = [{label: radioSelected, value: radioSelected}];\n      // this.setState({ docDelivery: docArray });\n      // }\n      this.setState({\n        docdeliverySelected: radioSelected\n      });\n    } else if (radioType === 'allowLogin') {\n      this.setState({\n        allowLogin: radioSelected\n      });\n\n      if (radioSelected === 'yes' && this.state.emailList.length) {\n        var email = this.state.emailList.find(x => x.ispreferred === true);\n        this.setState({\n          username: email.email\n        });\n      } else {\n        this.setState({\n          username: ''\n        });\n      }\n    } else if (radioType === 'newuser') {\n      this.setState({\n        newuser: radioSelected\n      });\n\n      if (radioSelected === 'yes' && this.state.emailList.length) {\n        var email = this.state.emailList.find(x => x.ispreferred === true);\n        this.setState({\n          username: email.email\n        });\n      } else {\n        this.setState({\n          username: ''\n        });\n      }\n    } else if (radioType === 'varifyauthority') {\n      this.setState({\n        varifyAuthority: radioSelected\n      });\n    }\n  }\n\n  countydata(e) {\n    debugger;\n    this.setState({\n      stateShown: e.value\n    });\n\n    if (e.value.StringMapKey) {\n      this.setState({\n        state: e.value.StringMapKey\n      });\n    } else {\n      this.setState({\n        state: e.value\n      });\n    }\n\n    this.getCity(e.value);\n  }\n\n  selectType(value, type) {\n    const {\n      t\n    } = this.props;\n    console.log(\"selectType\", value);\n    console.log(\"selectType\", type);\n\n    if (type === 'contact') {\n      debugger;\n      this.setState({\n        selectedContactType: value\n      });\n\n      if (value !== '' && value !== null && value !== undefined) {\n        this.show(\"contacttype\", false, \"contactTypeError\", \"\"); // --- code change after database fields changed\n\n        this.setState({\n          selectedContactName: value\n        });\n\n        if (value === 'InsuranceCompany') {\n          this.setState({\n            isCompany: 'Company',\n            allowLogin: 'no'\n          });\n        } else {\n          this.setState({\n            isCompany: 'Individual',\n            allowLogin: 'no'\n          });\n        }\n\n        if (value === 'InternalStaff') {\n          this.setState({\n            isInternalStaff: true\n          });\n        } else {\n          this.setState({\n            isInternalStaff: false\n          });\n        }\n\n        if (value == 'SubAgent' || value == 'ServiceCenter') {\n          // this.getEmailType(\"EMAILTYPEAGENT\");\n          this.getEmailType(\"BROKERMAILTYPE\");\n        } else {\n          this.getEmailType(\"EMAILTYPE\");\n        } // --- code change after database fields changed\n        // if (value === 'Surveyor') {\n        //   this.setState({ isCompany: 'Individual', allowLogin: 'no' });\n        // }\n        // let contactType = this.state.contactType.find(x => x.StringMapKey === value);\n        // this.setState({ selectedContactName: contactType.StringMapName });\n        // if (contactType.StringMapName === 'Insurance Company') {\n        //   this.setState({ isCompany: 'Company', allowLogin: 'no' });\n        // } else if (contactType.stringmapname === 'Surveyors') {\n        //   this.setState({ allowLogin: 'no' });\n        // } else {\n        //   this.setState({ allowLogin: 'no' });\n        // }\n\n      } else {\n        this.setState({\n          selectedContactName: '',\n          allowLogin: 'no'\n        });\n        this.show(\"contacttype\", true, \"contactTypeError\", t(\"contactDetails:ContactType.error\"));\n      }\n    } else if (type === 'company') {\n      this.setState({\n        comapnynameError: false\n      });\n      this.show(\"companyname\", false, \"comapnynameError\", \"\");\n\n      if (this.state.selectedContactType === 'InsuranceCompany') {\n        this.setState({\n          isCompany: 'Company'\n        });\n      } else if (this.state.selectedContactType === 'InternalStaff') {\n        this.setState({\n          isCompany: 'Individual'\n        });\n      } else {\n        this.setState({\n          isCompany: value\n        });\n      }\n\n      if (value === 'Company' && this.state.selectedContactType != 'Client') {\n        this.setState({\n          title: '',\n          gender: '',\n          forename: '',\n          surname: '',\n          salutation: '',\n          dob: ''\n        });\n      }\n    } else if (type === 'title') {\n      this.setState({\n        title: value\n      }); // let titleName = this.state.titleArray.find(x => x.stringmapid === value);\n\n      if (value === '') {\n        this.setState({\n          gender: '',\n          titleError: true\n        });\n        this.show(\"title\", true, \"titleError\", t(\"contactDetails:Title.error\")); // } else if (titleName.stringmapid === 'Mr.') {\n      } else if (value === 'Mr.') {\n        this.setState({\n          gender: 'Male',\n          titleError: false\n        });\n        this.show(\"title\", false, \"titleError\", \"\");\n      } else if (value === 'Dr.') {\n        this.setState({\n          gender: '',\n          titleError: false\n        });\n        this.show(\"title\", false, \"titleError\", \"\");\n      } else {\n        this.setState({\n          gender: 'Female',\n          titleError: false\n        });\n        this.show(\"title\", false, \"titleError\", \"\");\n      }\n    } else if (type === 'country') {\n      this.setState({\n        country: value\n      });\n    } else if (type === 'gender') {\n      if (this.state.title === 'Mr.') {\n        this.setState({\n          gender: 'Male'\n        });\n      } else if (this.state.title === 'Mrs.' || this.state.title === 'Miss') {\n        this.setState({\n          gender: 'Female'\n        });\n      } else {\n        this.setState({\n          gender: value\n        });\n      }\n    } else if (type === 'phonetype') {\n      if (value === '') {\n        this.setState({\n          phoneTypeError: true,\n          phonetype: value\n        });\n        this.show(\"phonetype\", true, \"phoneTypeError\", t(\"contactDetails:PhoneType.error\"));\n      } else {\n        this.setState({\n          phonetype: value,\n          phoneTypeError: false\n        });\n        this.show(\"phonetype\", false, \"phoneTypeError\", \"\");\n      }\n    } else if (type === 'emailtype') {\n      if (value === '') {\n        this.setState({\n          emailTypeError: true,\n          emailtype: value\n        });\n        this.show(\"emailtype\", true, \"emailTypeError\", t(\"contactDetails:EmailType.error\"));\n      } else {\n        this.setState({\n          emailtype: value,\n          emailTypeError: false\n        });\n        this.show(\"emailtype\", false, \"emailTypeError\", \"\");\n      }\n    } else if (type === 'addrCountry') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          addrCountry: value,\n          state: '',\n          stateShown: '',\n          cityShown: '',\n          city: '',\n          countrycode: '',\n          countrycodeError: true,\n          stateError: true,\n          cityError: true,\n          countryflag: ''\n        }); // this.show('addrCountry', true, \"addrCountryError\", t(\"contactDetails:Country.error\"));\n      } else {\n        this.show('addrCountry', false, \"addrCountryError\", \"\"); // let selectedCountry = this.state.countryCodeArray.find(x => x.CountryId === value.value);\n\n        let selectedCountry = this.state.countryCodeArray.find(x => x.CountryName === value.label);\n        this.setState({\n          addrCountry: value,\n          state: '',\n          stateShown: '',\n          cityShown: '',\n          city: '',\n          selectedCountry: selectedCountry !== undefined ? selectedCountry.CountryName : '',\n          countrycode: selectedCountry !== undefined ? selectedCountry.CountryCode : '',\n          countrycodeError: false,\n          stateError: true,\n          cityError: true,\n          countryflag: selectedCountry !== undefined ? selectedCountry.CountryFlag : ''\n        });\n        this.getStates(value.value); //get county/provines by country selection\n      } // let selectedCountry = this.state.countryArray.find(x => x.countryid === value);\n      // if (value === '' || value === undefined || value === null) {\n      //   this.setState({ addrCountry: value, state: '', city: '', countrycode: '', countrycodeError: true });\n      // } else {\n      //   this.setState({ addrCountry: value, state: '', city: '', countrycode: selectedCountry.countrycode, countrycodeError: false });\n      //   this.getStates(value); //get county/provines by country selection\n      // }\n\n    } else if (type === 'addrstate') {\n      if (value === '') {//\n      } else {\n        this.setState({\n          state: value,\n          city: ''\n        });\n        this.getCity(value);\n      }\n    } else if (type === 'addrcity') {\n      if (value === '') {//\n      } else {\n        this.setState({\n          city: value\n        });\n      }\n    } else if (type === 'countrycode') {\n      let selectedCountry = this.state.countryCodeArray.find(x => x.CountryCode === value);\n\n      if (value === '') {\n        this.setState({\n          countrycodeError: true,\n          countrycode: value,\n          countryflag: '',\n          selectedCountry: ''\n        });\n        this.show('countrycode', true, \"countrycodeError\", t(\"contactDetails:CountryCode.error\"));\n      } else {\n        this.setState({\n          countrycode: value,\n          countryflag: selectedCountry.CountryFlag,\n          countrycodeError: false,\n          selectedCountry: selectedCountry.CountryName\n        });\n        this.show('countrycode', false, \"countrycodeError\", \"\");\n      }\n    } else if (type === 'businesstype') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          businessTypeError: true,\n          businesstype: value\n        }); // this.show('businesstype', true, \"businessTypeError\", \"Please select\");\n      } else {\n        this.setState({\n          businesstype: value,\n          businessTypeError: false\n        }); // this.show('businesstype', false, \"businessTypeError\", \"\");\n      }\n    } else if (type === 'state') {\n      this.setState({\n        state: value\n      });\n      this.getCity(value);\n    } else if (type === 'city') {\n      this.setState({\n        city: value\n      });\n    } else if (type === 'CommissionPayable') {\n      if (value === '') {\n        this.setState({\n          CommissionPayableError: true,\n          CommissionPayable: value\n        });\n        this.show(\"CommissionPayable\", true, \"CommissionPayableError\", t(\"contactDetails:CommissionPayable.error\"));\n      } else {\n        this.setState({\n          CommissionPayable: value,\n          CommissionPayableError: false\n        });\n        this.show(\"CommissionPayable\", false, \"CommissionPayableError\", \"\");\n      }\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n      document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      document.getElementById(field).className = \"form-control\";\n      document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  checkUniqueQuestions() {\n    if (this.state.allowLogin === 'no') {\n      return true;\n    } else {\n      if (this.state.isEdit) {\n        if (CommonConfig.isEmpty(this.state.securityuserid)) {\n          if (this.state.selectedSecurityQuestions.length < 3) {\n            return false;\n          } else if (this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3) {\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          if (this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n      } else {\n        if (this.state.selectedSecurityQuestions.length < 3) {\n          return false;\n        } else if (this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    } // if(this.state.selectedSecurityQuestions.length < 3){\n    //   return false;\n    // }else if(this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3){\n    //   return false;\n    // }else{\n    //   return true;\n    // }\n\n  }\n\n  validate() {\n    const {\n      t\n    } = this.props;\n    let errCount = 0;\n\n    if (CommonConfig.isEmpty(this.state.selectedContactType)) {\n      toast.error(t(\"contactDetails:ContactType.error\"));\n      errCount++;\n    }\n  }\n\n  countryCodeTemplate(option) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2400,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: option.countryflag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2401,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: 'right',\n        margin: '.5em .25em 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2402,\n        columnNumber: 9\n      }\n    }, option.countrycode));\n  }\n\n  goToPolicy() {\n    this.props.history.push({\n      pathname: '/CreatePolicy/' + this.state.resID,\n      state: {\n        Id: this.state.resID\n      }\n    });\n    this.reset('contactDetails');\n  } // validateCountry = (e) => {\n  //   if(e.value === '' || e.value === undefined || e.value === null){\n  //     this.show('addrCountry', true);\n  //   }else{\n  //     this.setState({ addrCountryShown: e.value });\n  //     this.show('addrCountry', false);\n  //   }\n  // }\n\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const SaveButton = t(\"buttons.Save\");\n    const AddButton = t(\"buttons.Add\");\n    const EditButton = t(\"buttons.Edit\");\n    const DeleteButton = t(\"buttons.Delete\");\n    const CloseButton = t(\"buttons.Close\");\n    const BackButton = t(\"buttons.Back\");\n    const UpdateButton = t(\"buttons.Update\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2525,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2526,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2528,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      encType: \"multipart/form-data\",\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2534,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2537,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2538,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      style: {\n        marginRight: 20,\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2562,\n        columnNumber: 19\n      }\n    }, t(\"contactDetails:Contact#\"), \" \", this.state.contactcode))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2570,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2571,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2572,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.userImg && this.state.userImg !== '' ? this.state.userImg : userDefaultImg,\n      alt: \"user_profile_image\",\n      width: \"100%\",\n      height: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2573,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: t(\"contactDetails:ChangePicture\"),\n      outline: true,\n      color: \"secondary\",\n      onClick: () => this.chooseFile(),\n      style: {\n        marginLeft: 10,\n        bottom: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2574,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2576,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"profileimage\",\n      name: \"file\",\n      accept: \"image/*\",\n      style: {\n        display: 'none'\n      },\n      onChange: e => this.selectImage(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2579,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2583,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2584,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2585,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2586,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2587,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:ContactType.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"contacttype\",\n      id: \"contacttype\" // onBlur={(e) => this.selectType(e.target.value, 'contact')}\n      ,\n      onChange: e => this.selectType(e.target.value, 'contact'),\n      value: this.state.selectedContactType,\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2588,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2593,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:ContactType.defaultValue\")), this.state.contactType.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2595,\n          columnNumber: 37\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"contactTypeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2599,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2604,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2605,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2607,\n        columnNumber: 25\n      }\n    }, this.state.companyArray.map((company, i) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        name: \"iscompany\",\n        className: \"\",\n        key: i,\n        onClick: () => this.selectType(company.value, 'company') //active={t(\"contactDetails:\"+this.state.isCompany+\"\")}\n        ,\n        color: this.state.isCompany === company.value ? 'primary' : 'secondary',\n        style: i === this.state.companyArray.length ? {\n          marginLeft: 10\n        } : {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2609,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: company.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2611,\n          columnNumber: 31\n        }\n      }), t(\"contactDetails:\" + company.label + \"\"), this.state.isCompany === company.value ? /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-check icon-rt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2613,\n          columnNumber: 75\n        }\n      }) : null);\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2621,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2622,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2623,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:CompanyName.label\"), this.state.isCompany === 'Company' ? '*' : null), /*#__PURE__*/React.createElement(Input, {\n      name: \"companyname\",\n      type: \"text\",\n      id: \"companyname\",\n      className: \"\",\n      placeholder: t(\"contactDetails:CompanyName.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.companyname // onBlur={e => this.handleChange(e)} \n      ,\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2627,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"comapnynameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2633,\n        columnNumber: 25\n      }\n    })))), this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2640,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2641,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2642,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:Name\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2645,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2646,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2647,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:Title.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"title\",\n      id: \"title\" // onBlur={(e) => this.selectType(e.target.value, 'title')}\n      ,\n      onChange: e => this.selectType(e.target.value, 'title'),\n      value: this.state.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2648,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2652,\n        columnNumber: 29\n      }\n    }, t(\"contactDetails:Title.defaultValue\")), this.state.titleArray.map((title, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: title.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2654,\n          columnNumber: 39\n        }\n      }, title.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"titleError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2658,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2663,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2664,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2665,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:FirstName.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"forename\",\n      id: \"forename\",\n      placeholder: t(\"contactDetails:FirstName.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.forename // onBlur={(e) => this.setValues(e)} \n      ,\n      className: \"\",\n      autoComplete: \"of\",\n      maxLength: \"26\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2666,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"forenameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2671,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2676,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2677,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2678,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:LastName.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"surname\",\n      id: \"surname\",\n      placeholder: t(\"contactDetails:LastName.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.surname // onBlur={(e) => this.handleChange(e)} \n      ,\n      className: \"\",\n      autoComplete: \"of\",\n      maxLength: \"26\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2679,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"surnameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2684,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2689,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2690,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2691,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:Salutation.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"salutation\",\n      id: \"salutation\",\n      placeholder: t(\"contactDetails:Salutation.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.salutation // onBlur={(e) => this.handleChange(e)} \n      ,\n      className: \"\",\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2692,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"salutationError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2697,\n        columnNumber: 27\n      }\n    })))) : null, this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2706,\n        columnNumber: 21\n      }\n    }, this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2708,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2709,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2710,\n        columnNumber: 29\n      }\n    }, t(\"contactDetails:PassportNumber.label\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"passportno\",\n      id: \"passportno\",\n      placeholder: t(\"contactDetails:PassportNumber.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.passportno // onBlur={(e) => this.handleChange(e)} \n      ,\n      className: \"\",\n      autoComplete: \"of\",\n      maxLength: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2711,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"passportnoError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2716,\n        columnNumber: 29\n      }\n    }))), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2723,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2724,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2725,\n        columnNumber: 29\n      }\n    }, t(\"contactDetails:PassportCountry.label\")), /*#__PURE__*/React.createElement(Select, {\n      options: this.state.countryArray,\n      value: this.state.country,\n      onChange: data => this.selectType(data, 'country'),\n      placeholder: t(\"contactDetails:PassportCountry.label\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2733,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2748,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2749,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2750,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:BusinessType.label\"), \"*\"), /*#__PURE__*/React.createElement(AutoComplete, {\n      value: this.state.businesstype,\n      suggestions: this.state.filteredBusinessSingle,\n      completeMethod: e => this.filterSingle(e, 'businesstype'),\n      field: \"label\",\n      size: 25,\n      placeholder: t(\"contactDetails:BusinessType.label\"),\n      minLength: 1,\n      onChange: e => this.setState({\n        businesstype: e.value\n      }),\n      name: \"businesstype\",\n      id: \"businesstype\",\n      className: \"\",\n      onSelect: e => this.selectType(e.value.value, 'businesstype'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2751,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"businessTypeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2761,\n        columnNumber: 27\n      }\n    })))) : this.state.isCompany === 'Company' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2767,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2768,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2769,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2770,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:CompanyIdentifier.label\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"companyIdentifier\",\n      id: \"companyIdentifier\",\n      onBlur: e => this.handleChange(e),\n      placeholder: t(\"contactDetails:CompanyIdentifier.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.companyIdentifier,\n      className: \"\",\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2771,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"companyIdentifierError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2775,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2780,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2781,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2782,\n        columnNumber: 27\n      }\n    }, t(\"contactDetails:BusinessType.label\")), /*#__PURE__*/React.createElement(AutoComplete, {\n      value: this.state.businesstype,\n      suggestions: this.state.filteredBusinessSingle,\n      completeMethod: e => this.filterSingle(e, 'businesstype'),\n      field: \"label\",\n      size: 25,\n      placeholder: t(\"contactDetails:BusinessType.label\"),\n      minLength: 1,\n      onChange: e => this.setState({\n        businesstype: e.value\n      }),\n      name: \"businesstype\",\n      id: \"businesstype\",\n      className: \"\",\n      onSelect: e => this.selectType(e.value.value, 'businesstype'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2783,\n        columnNumber: 27\n      }\n    })))) : null)), this.state.isCompany === 'Individual' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client' || this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client' ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2803,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2804,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2805,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2806,\n        columnNumber: 23\n      }\n    }, t(\"contactDetails:Gender\"), \"*\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2807,\n        columnNumber: 23\n      }\n    }, this.state.genderArray.map((gender, i) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        key: i,\n        onClick: () => this.selectType(gender.value, 'gender') // active={this.state.gender}\n        ,\n        color: this.state.gender === gender.label ? 'primary' : 'secondary',\n        style: i === this.state.genderArray.length ? {\n          marginLeft: 10\n        } : {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2809,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: gender.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2811,\n          columnNumber: 29\n        }\n      }), t(\"contactDetails:\" + gender.label + \"\"), this.state.gender === gender.label ? /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-check icon-rt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2813,\n          columnNumber: 69\n        }\n      }) : null);\n    })))), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2821,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2822,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2823,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:DOB.label\")), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2824,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"dob\",\n      id: \"dob\",\n      placeholder: \"Date of Birth\" // onBlur={(e) => this.handleChange(e)}\n      ,\n      onChange: e => this.handleChange(e),\n      value: this.state.dob,\n      min: moment().subtract(100, 'years').format('YYYY-MM-DD'),\n      max: moment().subtract(12, 'years').format('YYYY-MM-DD'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2825,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"DOBError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2831,\n        columnNumber: 27\n      }\n    }))))) : null, this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2853,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2854,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2855,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:Address\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2858,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2859,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2860,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2861,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:Country.label\"), \"*\"), /*#__PURE__*/React.createElement(Select, {\n      options: this.state.countryArray,\n      onChange: data => this.selectType(data, 'addrCountry') // onBlur={(data) => this.selectType(data, 'addrCountry')}\n      // onChange={(data) => this.setState({ addrCountry: data })}\n      ,\n      value: this.state.addrCountry,\n      className: \"\",\n      id: \"addrCountry\",\n      placeholder: t(\"contactDetails:Country.label\"),\n      name: \"addrCountry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2869,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"addrCountryError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2876,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2888,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2889,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2890,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2891,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:Line1.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"addrline1\",\n      type: \"text\",\n      id: \"addrline1\",\n      className: \"\",\n      placeholder: t(\"contactDetails:Line1.placeholder\") // onBlur={e => this.handleChange(e)} \n      ,\n      autoComplete: \"of\",\n      onChange: e => this.handleChange(e),\n      value: this.state.addrline1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2892,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"line1Error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2898,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2904,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2905,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2906,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2907,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:Line2.label\")), /*#__PURE__*/React.createElement(Input, {\n      name: \"addrline2\",\n      type: \"text\",\n      id: \"addrline2\",\n      className: \"\",\n      placeholder: t(\"contactDetails:Line2.placeholder\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.addrline2 // onBlur={e => this.handleChange(e)}\n      ,\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2908,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"line2Error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2914,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2919,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2920,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2921,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2922,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:Line3.label\")), /*#__PURE__*/React.createElement(Input, {\n      name: \"addrline3\",\n      type: \"text\",\n      id: \"addrline3\",\n      className: \"\",\n      placeholder: t(\"contactDetails:Line3.placeholder\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.addrline3 //  onBlur={e => this.handleChange(e)} \n      ,\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2923,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"line3Error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2929,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2934,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2935,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2936,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2937,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:County.label\"), \"*\"), /*#__PURE__*/React.createElement(AutoComplete, {\n      value: this.state.state,\n      suggestions: this.state.filteredStateSingle,\n      completeMethod: e => this.filterSingle(e, 'addrstate'),\n      field: \"label\",\n      size: 15,\n      placeholder: t(\"contactDetails:County.placeholder\"),\n      minLength: 1,\n      onChange: e => this.countydata(e),\n      name: \"addrstate\",\n      id: \"addrstate\",\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2954,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2963,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2964,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2965,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:Town.label\")), /*#__PURE__*/React.createElement(AutoComplete, {\n      value: this.state.cityShown,\n      suggestions: this.state.filteredCitySingle,\n      completeMethod: e => this.filterSingle(e, 'city'),\n      field: \"label\",\n      size: 25,\n      placeholder: t(\"contactDetails:Town.placeholder\"),\n      minLength: 1,\n      onChange: e => this.setState({\n        cityShown: e.value\n      }),\n      onSelect: e => this.selectType(e.value.StringMapName, 'city'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2966,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2984,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2985,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2986,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:PostalCode.label\")), /*#__PURE__*/React.createElement(Input, {\n      name: \"postalcode\",\n      type: \"text\",\n      id: \"postalcode\",\n      className: \"\",\n      maxLength: \"8\",\n      placeholder: t(\"contactDetails:PostalCode.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.postalcode //  onBlur={e => this.handleChange(e)} \n      ,\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2987,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"postalcodeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2993,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3002,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3003,\n        columnNumber: 17\n      }\n    }, t(\"contactDetails:PhoneHeader\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3006,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3007,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3008,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3009,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:PhoneType.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"phonetype\",\n      id: \"phonetype\" // onBlur={(e) => this.selectType(e.target.value, 'phonetype')}\n      ,\n      onChange: e => this.selectType(e.target.value, 'phonetype'),\n      value: this.state.phonetype,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3010,\n        columnNumber: 21\n      }\n    }, this.state.phoneTypes.map((phonetype, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: phonetype.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3016,\n          columnNumber: 33\n        }\n      }, phonetype.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"phoneTypeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3020,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3025,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3026,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3027,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:CountryCode.label\"), \"*\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3032,\n        columnNumber: 21\n      }\n    }, this.state.countryflag !== '' ? /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3034,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3035,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.countryflag,\n      title: this.state.selectedCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3036,\n        columnNumber: 29\n      }\n    }))) : null, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"countrycode\",\n      id: \"countrycode\" // onBlur={(e) => this.selectType(e.target.value, 'countrycode')}\n      ,\n      onChange: e => this.selectType(e.target.value, 'countrycode'),\n      value: this.state.countrycode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3041,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3045,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:CountryCode.defaultValue\")), this.state.countryCodeArray.map((country, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: country.CountryCode,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3047,\n          columnNumber: 35\n        }\n      }, \"(\", country.CountryCode, \") \", country.CountryName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"countrycodeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3054,\n        columnNumber: 23\n      }\n    })))), this.state.landLineSelected ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3061,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3062,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3063,\n        columnNumber: 23\n      }\n    }, t(\"contactDetails:AreaCode.label\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"phoneAreaCode\",\n      id: \"phoneAreaCode\",\n      placeholder: t(\"contactDetails:AreaCode.placeholder\"),\n      onChange: e => this.handleChange(e) // onBlur={(e) => this.handleChange(e)}\n      ,\n      value: this.state.phoneAreaCode,\n      autoComplete: \"of\",\n      className: \"\",\n      maxLength: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3064,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"areaCodeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3069,\n        columnNumber: 23\n      }\n    }))) : null, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3074,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3075,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3076,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:Phone.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"phoneNumber\",\n      id: \"phoneNumber\",\n      placeholder: t(\"contactDetails:Phone.placeholder\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.phoneNumber,\n      className: \"\" // onBlur={(e) => this.handleChange(e)} \n      ,\n      autoComplete: \"of\",\n      maxLength: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3077,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"phoneNumberError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3082,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3097,\n        columnNumber: 17\n      }\n    }, this.state.isEditPhone ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3100,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: UpdateButton,\n      color: \"primary\",\n      onClick: () => this.addToList('phoneList'),\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3102,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      title: CloseButton,\n      color: \"secondary\",\n      onClick: () => this.reset('phoneModal'),\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3106,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggle('landline'),\n      className: \"px-0\",\n      color: \"link\",\n      style: {\n        marginRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3109,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:\" + this.state.landLineLabel + \"\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3114,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: AddButton,\n      color: \"primary\",\n      onClick: () => this.addToList('phoneList'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3116,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: 5\n      },\n      color: \"link\",\n      className: \"px-0\",\n      onClick: () => this.toggle('landline'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3119,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:\" + this.state.landLineLabel + \"\"))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3145,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3147,\n        columnNumber: 23\n      }\n    }, this.state.phoneList.map((ph, i) => {\n      if (!ph.isDeleted) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3151,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3152,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3153,\n            columnNumber: 35\n          }\n        }, this.getType('phone', ph))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3158,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3159,\n            columnNumber: 35\n          }\n        }, this.formatPhone(ph))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3170,\n            columnNumber: 33\n          }\n        }, ph.ispreferred ? /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3172,\n            columnNumber: 37\n          }\n        }, t(\"contactDetails:PhonePrimary\")) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3173,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"link\",\n          onClick: () => this.makePrimary(ph, 'phone'),\n          className: \"px-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3174,\n            columnNumber: 39\n          }\n        }, t(\"contactDetails:PhoneMakePrimary\")))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3179,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3180,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          title: EditButton,\n          onClick: () => this.edit(ph, 'phone'),\n          style: {\n            marginRight: 5\n          },\n          color: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3181,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-pencil\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3182,\n            columnNumber: 39\n          }\n        })), !ph.ispreferred ? /*#__PURE__*/React.createElement(Button, {\n          title: DeleteButton,\n          onClick: () => this.confirmDelete(ph, 'phone'),\n          style: {\n            marginLeft: 5\n          },\n          color: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3185,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3186,\n            columnNumber: 41\n          }\n        })) : null)));\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3239,\n        columnNumber: 17\n      }\n    }, t(\"contactDetails:EmailHeader\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3249,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3254,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3255,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:EmailType.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"emailtype\",\n      id: \"emailtype\" //  onBlur={(e) => this.selectType(e.target.value, 'emailtype')}\n      ,\n      onChange: e => this.selectType(e.target.value, 'emailtype'),\n      value: this.state.emailtype,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3256,\n        columnNumber: 21\n      }\n    }, this.state.emailTypes.map((emailtype, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: emailtype.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3261,\n          columnNumber: 33\n        }\n      }, emailtype.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"emailTypeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3265,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3271,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3276,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3277,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:Email.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: t(\"contactDetails:Email.placeholder\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.email,\n      autoComplete: \"of\" // onBlur={(e) => this.handleChange(e)}\n      ,\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3278,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"emailError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3283,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3289,\n        columnNumber: 17\n      }\n    }, this.state.isEditEmail ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3292,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: UpdateButton,\n      color: \"primary\",\n      onClick: () => this.addToList('emailList'),\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3293,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3294,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      title: CloseButton,\n      color: \"secondary\",\n      onClick: () => this.reset('emailModal'),\n      style: {\n        marginLeft: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3297,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3298,\n        columnNumber: 27\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3303,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: AddButton,\n      color: \"primary\",\n      onClick: () => this.addToList('emailList'),\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3305,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3314,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3315,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3316,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3317,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3318,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3320,\n        columnNumber: 23\n      }\n    }, this.state.emailList.map((email, i) => {\n      if (!email.isDeleted) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3324,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3325,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3326,\n            columnNumber: 35\n          }\n        }, this.getType('email', email))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3331,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3332,\n            columnNumber: 35\n          }\n        }, email.email)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3337,\n            columnNumber: 33\n          }\n        }, email.ispreferred ? /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3339,\n            columnNumber: 37\n          }\n        }, t(\"contactDetails:EmailPrimary\")) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3340,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"link\",\n          className: \"px-0\",\n          onClick: () => this.makePrimary(email, 'email'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3341,\n            columnNumber: 39\n          }\n        }, t(\"contactDetails:EmailMakePrimary\")))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3346,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3347,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          title: EditButton,\n          color: \"primary\",\n          onClick: () => this.edit(email, 'email'),\n          style: {\n            marginRight: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3348,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-pencil\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3349,\n            columnNumber: 39\n          }\n        })), !email.ispreferred ? /*#__PURE__*/React.createElement(Button, {\n          title: DeleteButton,\n          color: \"danger\",\n          onClick: () => this.confirmDelete(email, 'email'),\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3352,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3353,\n            columnNumber: 41\n          }\n        })) : null)));\n      }\n    })))))), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3411,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3412,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box rc-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3413,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3414,\n        columnNumber: 23\n      }\n    }, t(\"contactDetails:ContactPreference\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3415,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3416,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"contactPreference\",\n      checked: this.state.radioSelected === 'oktocontact' ? true : false,\n      value: this.state.radioSelected,\n      onChange: () => this.onRadioBtnClick('contactPreference', 'oktocontact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3417,\n        columnNumber: 27\n      }\n    }), t(\"contactDetails:OktoContact\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3423,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"contactPreference\",\n      checked: this.state.radioSelected === 'donotcontact' ? true : false,\n      value: this.state.radioSelected,\n      onChange: () => this.onRadioBtnClick('contactPreference', 'donotcontact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3424,\n        columnNumber: 27\n      }\n    }), t(\"contactDetails:DonotContact\"))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3432,\n        columnNumber: 19\n      }\n    }, this.state.radioSelected === 'donotcontact' ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3435,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3436,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:ContactMode\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3437,\n        columnNumber: 25\n      }\n    }, this.state.contactModes.map((cm, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3440,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"contactmode\",\n        value: cm.StringMapKey,\n        checked: cm.isSelected,\n        onChange: e => this.checked(e.target.checked, cm)\n        /*disabled={this.state.radioSelected === 'donotcontact' ? true : false}*/\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3441,\n          columnNumber: 33\n        }\n      }), cm.StringMapName);\n    }))))), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3457,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3458,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box rc-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3459,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3460,\n        columnNumber: 23\n      }\n    }, t(\"contactDetails:DocumentDelivery.label\"), \"*\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3461,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3462,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"docdelivery\",\n      checked: this.state.docdeliverySelected === 'email' ? true : false,\n      value: this.state.docdeliverySelected,\n      onChange: () => this.onRadioBtnClick('docdelivery', 'email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3463,\n        columnNumber: 27\n      }\n    }), t(\"contactDetails:DocumentDelivery.Email\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3468,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"docdelivery\",\n      checked: this.state.docdeliverySelected === 'post' ? true : false,\n      value: this.state.docdeliverySelected,\n      onChange: () => this.onRadioBtnClick('docdelivery', 'post'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3469,\n        columnNumber: 27\n      }\n    }), t(\"contactDetails:DocumentDelivery.Post\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3474,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"docdelivery\",\n      checked: this.state.docdeliverySelected === 'both' ? true : false,\n      value: this.state.docdeliverySelected,\n      onChange: () => this.onRadioBtnClick('docdelivery', 'both'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3475,\n        columnNumber: 27\n      }\n    }), t(\"contactDetails:DocumentDelivery.Both\")))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3486,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3487,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3488,\n        columnNumber: 19\n      }\n    }, t(\"contactDetails:Notes.label\")), /*#__PURE__*/React.createElement(Input, {\n      name: \"note\",\n      type: \"textarea\",\n      id: \"note\",\n      className: \"\",\n      onChange: e => this.handleChange(e),\n      value: this.state.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3489,\n        columnNumber: 19\n      }\n    }))), this.state.selectedContactName === 'ServiceCenter' || this.state.selectedContactName === 'Service-Center' || this.state.selectedContactName === 'Service Center' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3494,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3495,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3496,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3497,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3498,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:CommissionPayable.label\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"CommissionPayable\",\n      id: \"CommissionPayable\",\n      onChange: e => this.selectType(e.target.value, 'CommissionPayable'),\n      value: this.state.CommissionPayable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3499,\n        columnNumber: 26\n      }\n    }, this.state.CommissionPayables.map((CommissionPayable, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: CommissionPayable.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3502,\n          columnNumber: 37\n        }\n      }, CommissionPayable.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"CommissionPayableError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3506,\n        columnNumber: 25\n      }\n    }))))) : null, this.state.selectedContactName === 'SubAgent' || this.state.selectedContactName === 'ServiceCenter' || this.state.selectedContactName === 'Sub-Agent' || this.state.selectedContactName === 'Service-Center' || this.state.selectedContactName === 'Service Center' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3515,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3516,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3517,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3518,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3519,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:CentralBankCode.label\")), /*#__PURE__*/React.createElement(Input, {\n      name: \"bankcode\",\n      type: \"text\",\n      id: \"bankcode\",\n      className: \"\",\n      onChange: e => this.handleChange(e) // onBlur={e => this.handleChange(e)}\n      ,\n      value: this.state.bankcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3520,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"bankcodeError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3525,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3528,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3529,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3530,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:commissionRate.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"commission\",\n      type: \"text\",\n      id: \"commission\",\n      className: \"\",\n      onChange: e => this.handleChange(e) // onBlur={e => this.handleChange(e)} \n      ,\n      value: this.state.commission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3531,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"commissionError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3536,\n        columnNumber: 25\n      }\n    }))))) : null, this.state.selectedContactName === 'InsuranceCompany' || this.state.selectedContactName === 'Surveyor' ? null : /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3586,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3587,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3588,\n        columnNumber: 23\n      }\n    }, t(\"contactDetails:NewUser.label\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3589,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3590,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"newuser\",\n      checked: this.state.newuser === 'no' ? true : false,\n      value: this.state.newuser,\n      onClick: () => this.onRadioBtnClick('newuser', 'no'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3591,\n        columnNumber: 27\n      }\n    }), t(\"contactDetails:NewUser.No\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3596,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      name: \"newuser\",\n      checked: this.state.newuser === 'yes' ? true : false,\n      value: this.state.allowLonewusergin,\n      onClick: () => this.onRadioBtnClick('newuser', 'yes'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3597,\n        columnNumber: 27\n      }\n    }), t(\"contactDetails:NewUser.Yes\"))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"text-center\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3878,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3879,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"final-save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3880,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.saveContact(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3881,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3882,\n        columnNumber: 23\n      }\n    }), SaveButton), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3885,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3886,\n        columnNumber: 23\n      }\n    }), BackButton))))), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.setState({\n        isDeletePhone: false\n      }),\n      isOpen: this.state.isDeletePhone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3896,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.setState({\n        isDeletePhone: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3897,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3898,\n        columnNumber: 17\n      }\n    }, t(\"contactDetails:DeletePhone.label\"))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3901,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3902,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3903,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3904,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:DeletePhone.message\"), \" \", this.state.valueForDelete.phonenumber, \" ?\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3909,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.setState({\n        isDeletePhone: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3910,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3911,\n        columnNumber: 19\n      }\n    }), t(\"contactDetails:DeletePhone.No\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.delete(this.state.valueForDelete, 'phone'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3914,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3915,\n        columnNumber: 19\n      }\n    }), t(\"contactDetails:DeletePhone.Yes\")))), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.setState({\n        isDeleteEmail: false\n      }),\n      isOpen: this.state.isDeleteEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3921,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.setState({\n        isDeleteEmail: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3922,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3923,\n        columnNumber: 17\n      }\n    }, t(\"contactDetails:DeleteEmail.label\"))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3926,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3927,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3928,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3929,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:DeleteEmail.message\"), \" \", this.state.valueForDelete.email, \" ?\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3934,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.setState({\n        isDeleteEmail: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3935,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3936,\n        columnNumber: 19\n      }\n    }), t(\"contactDetails:DeleteEmail.No\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.delete(this.state.valueForDelete, 'email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3939,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3940,\n        columnNumber: 19\n      }\n    }), t(\"contactDetails:DeleteEmail.Yes\")))), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.reset('phoneModal'),\n      isOpen: this.state.visiblePhoneModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3946,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.reset('phoneModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3947,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3948,\n        columnNumber: 17\n      }\n    }, this.state.phoneModalTitle)), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3951,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3952,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3953,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3954,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3955,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3956,\n        columnNumber: 25\n      }\n    }, \"Phone Type\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3958,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"phonetype\",\n      id: \"phonetype\",\n      onChange: e => this.selectType(e.target.value, 'phonetype'),\n      value: this.state.phonetype,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3959,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3960,\n        columnNumber: 27\n      }\n    }, \"Select\"), this.state.phoneTypes.map((phonetype, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: phonetype.stringmapname,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3962,\n          columnNumber: 37\n        }\n      }, phonetype.stringmapname);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3966,\n        columnNumber: 25\n      }\n    }, \"Please select phone type\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3970,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3971,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3972,\n        columnNumber: 25\n      }\n    }, \"Area Code\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3974,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"phoneAreaCode\",\n      id: \"phoneAreaCode\",\n      placeholder: \"Area Code\",\n      onChange: e => this.handleChange(e),\n      value: this.state.phoneAreaCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3975,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3976,\n        columnNumber: 25\n      }\n    }, \"Please enter valid area code\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3980,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3981,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3982,\n        columnNumber: 25\n      }\n    }, \"Phone\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3984,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"phoneNumber\",\n      id: \"phoneNumber\",\n      placeholder: \"Phone Number\",\n      onChange: e => this.handleChange(e),\n      value: this.state.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3985,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3986,\n        columnNumber: 25\n      }\n    }, \"Please enter valid Phone Number\")))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3993,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.reset('phoneModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3994,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3995,\n        columnNumber: 19\n      }\n    }), CloseButton), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.addToList('phoneList'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3998,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3999,\n        columnNumber: 19\n      }\n    }), this.state.isEditPhone ? EditButton : AddButton))), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.reset('emailModal'),\n      isOpen: this.state.visibleEmailmodal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4005,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.reset('emailModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4006,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4007,\n        columnNumber: 17\n      }\n    }, this.state.emailModalTitle)), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4010,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4011,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4012,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4013,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4014,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4015,\n        columnNumber: 25\n      }\n    }, \"Email Type\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4017,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"emailtype\",\n      id: \"emailtype\",\n      onChange: e => this.selectType(e.target.value, 'emailtype'),\n      value: this.state.emailtype,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4018,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4019,\n        columnNumber: 27\n      }\n    }, \"Select\"), this.state.emailTypes.map((emailtype, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: emailtype.stringmapname,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4021,\n          columnNumber: 37\n        }\n      }, emailtype.stringmapname);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4025,\n        columnNumber: 25\n      }\n    }, \"Please select email type\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4029,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4030,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4031,\n        columnNumber: 25\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4033,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      onChange: e => this.handleChange(e),\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4034,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4035,\n        columnNumber: 25\n      }\n    }, \"Please enter valid email\")))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4042,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.reset('emailModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4043,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4044,\n        columnNumber: 19\n      }\n    }), CloseButton), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.addToList('emailList'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4047,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4048,\n        columnNumber: 19\n      }\n    }), this.state.isEditEmail ? EditButton : AddButton))), /*#__PURE__*/React.createElement(Modal // toggle={() => this.reset('policyModal')} \n    , {\n      isOpen: this.state.showPolicyModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4054,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.close('policyModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4058,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4059,\n        columnNumber: 17\n      }\n    }, t(\"contactDetails:SetupPolicy.header\"))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4062,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4063,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4064,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4065,\n        columnNumber: 21\n      }\n    }, t(\"contactDetails:SetupPolicy.message\"))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4070,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.close('policyModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4071,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4072,\n        columnNumber: 19\n      }\n    }), t(\"contactDetails:SetupPolicy.No\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.goToPolicy(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4075,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4076,\n        columnNumber: 19\n      }\n    }), t(\"contactDetails:SetupPolicy.Yes\")))))));\n  }\n\n}\n\nexport default withTranslation()(ContactDetails);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/ContactDetails.js"],"names":["React","Component","Select","DatePicker","Button","Col","Container","Form","Input","InputGroupAddon","InputGroupText","Row","InputGroup","Modal","ModalBody","ModalFooter","ModalHeader","Popover","PopoverBody","PopoverHeader","toast","moment","AutoComplete","withTranslation","api","APIConstant","CommonConfig","apiBase","postalCodes","userDefaultImg","require","ContactDetails","constructor","props","chooseFile","document","getElementById","click","selectImage","event","target","files","setState","userImgData","reader","FileReader","onload","e","userImg","result","readAsDataURL","handleChange","t","name","value","state","isCompany","isEmpty","comapnynameError","show","length","companyname","forenameError","nameRegEx","RegExp","nameWithSpace","test","forename","salutation","salutationError","surnameError","surname","passportnoError","passportno","companyIdentifierError","companyIdentifier","addrline1Error","addrline1","addrline2Error","addrline2","addrline3Error","addrline3","postalcode","postalcodeError","addrCountry","undefined","error","phoneAreaCodeError","numberRegEx","number","areaCode","phoneAreaCode","phoneNumberError","phone","phoneNumber","emailError","emailRegEx","email","note","noteError","bankcode","bankcodeError","commissionError","decimalWithOne","commossion","commission","ans1Error","ans1","ans2Error","ans2","ans3Error","ans3","ext","extError","usernameError","username","confirmPasswordError","password","confirmPassword","contactCodeError","changedContactCode","dobError","format","subtract","dob","setValues","reset","type","landLineSelected","selectedCountry","countryCodeArray","find","x","CountryName","label","countrycode","CountryCode","countryflag","CountryFlag","visiblePhoneModal","phonetype","phoneTypeError","phoneModalTitle","isEditPhone","countrycodeError","extSelected","landLineLabel","extensionLabel","visibleEmailmodal","isEditEmail","emailtype","emailTypeError","emailModalTitle","personid","organizationid","securityuserid","radioSelected","isEdit","contactcode","selectedContactType","selectedContactName","gender","title","titleError","country","countryShown","filteredCountriesSingle","countryError","businesstype","businesstypeShown","filteredBusinessSingle","businessTypeError","addressid","addrCountryShown","filteredAddressCountriesSingle","addrCountryError","city","cityError","stateShown","filteredStateSingle","stateError","phoneList","primaryPhone","phoneID","emailList","primaryEmail","emailID","docdeliverySelected","binder","allowLogin","passwordError","isShowPassword","isShowConfirmPassword","selectedSecurityQuestions","que1","que2","que3","varifyAuthority","getContactModes","addToList","isExist","findIndex","phonenumber","id","phoneArray","index","areacode","phoneid","ispreferred","isDeleted","concat","emailArray","el","options","selectedIndex","innerHTML","emailid","allEmail","preferredEmail","toggle","makePrimary","i","sort","y","edit","confirmDelete","isDeletePhone","valueForDelete","isDeleteEmail","delete","checked","isChecked","arr","contactModes","StringMapKey","isSelected","handleSecurityQuestion","data","queNo","quesionexist","splice","check","warn","formatPhone","ph","formatPhoneNumber","goBack","match","params","resID","entityType","history","push","pathname","isAdded","getType","saveContact","isInternalStaff","filter","contactDetailsForm","FormData","company","append","newuser","selectedLanguage","trim","cityShown","JSON","stringify","CommissionPayable","questionArray","securityQuestionID","securityquestionid1","que","ans","securityquestionid2","securityquestionid3","loggedInUserId","post","then","res","success","message","showPolicyModal","catch","err","console","log","filterSingle","results","countryArray","toLowerCase","startsWith","query","BusinessArray","business","stateArray","st","cityArray","filteredCitySingle","handlePasswordChange","case1","case2","case3","case4","case5","case6","myInput","lowerCaseLetters","upperCaseLetters","numbers","spcs","passwordRegEx","handleDobChange","close","bind","onRadioBtnClick","i18n","language","contactCodeLabel","isContactCodeEdit","contactType","companyArray","image","genderArray","titleArray","countryArrayCopy","stateArrayCopy","phoneTypes","emailTypes","contactModesList","docDelivery","CommissionPayableError","CommissionPayables","binderArray","showRules","securityQuestionArray","isShowAns1","isShowAns2","isShowAns3","componentDidMount","getElementsByTagName","classList","remove","getContactTypes","getTitle","getCountry","getEmailType","getCOMMISSIONPAYABLE","getPhoneType","getBusinessTypes","getBinder","getSecurityQuestions","Object","keys","getContactDetails","getContactCode","languageId","phones","emails","profileImage","sortedPhoneData","phoneData","IsPreferred","sortedEmailData","emailData","PhoneId","PhoneType","AreaCode","PhoneNumber","Ext","j","EmailId","EmailType","Email","a","k","contactmodename","StringMapName","ContactModeId","StringMapId","ContactModeType","Status","personData","PicturePath","addressData","Country","getStates","State","getCity","toString","PersonId","ContactCode","ContactType","contactTypeName","CommissionRate","CentralBankCode","CompanyName","Title","Forename","Surname","Salutation","Gender","PassportNumber","passportcountryName","PassportCountry","DOB","BusinessType","Addressid","countryname","AddrLine1","AddrLine2","AddrLine3","statename","City","PostalCode","IsOkToContact","DocumentDelivery","Note","CommissionPayableOn","SecurityUserId","OrganizationId","CompanyIdentifier","OrganizationName","get","Number","stringmaptype","languageid","path","dropdownbycode","orderby","formattedArray","selectedState","parent_id","stringMapType","setStateName","sortorder","formatArr","radioType","forEach","val","countydata","selectType","field","condition","errorField","className","checkUniqueQuestions","validate","errCount","countryCodeTemplate","option","float","margin","goToPolicy","Id","render","SaveButton","AddButton","EditButton","DeleteButton","CloseButton","BackButton","UpdateButton","marginTop","marginRight","fontSize","marginLeft","bottom","display","map","ct","cm","allowLonewusergin","stringmapname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.min.css';\r\nimport DatePicker from 'react-date-picker';\r\nimport {\r\n  Button, Col, Container, Form, Input, InputGroupAddon, InputGroupText, Row, InputGroup,\r\n  Modal, ModalBody, ModalFooter, ModalHeader, Popover, PopoverBody, PopoverHeader\r\n} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport api from '../../utils/apiClient';\r\nimport APIConstant, { CommonConfig } from '../../utils/constants';\r\nimport { apiBase } from '../../utils/config';\r\nimport { postalCodes } from '../../utils/postalCodes';\r\n\r\nconst userDefaultImg = require('../../assets/img/defaultProfile.png');\r\n\r\nclass ContactDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      personid: '',\r\n      organizationid: '',\r\n      securityuserid: '',\r\n      selectedLanguage: props.i18n.language,\r\n\r\n      radioSelected: 'oktocontact',\r\n      isEdit: false,\r\n\r\n      contactcode: 0,\r\n      changedContactCode: '',\r\n      contactCodeLabel: 'Edit Contact Code',\r\n      isContactCodeEdit: false,\r\n      contactCodeError: false,\r\n\r\n      contactType: [],\r\n      selectedContactType: 'Client',\r\n      selectedContactName: '',\r\n\r\n      companyArray: [\r\n        { label: 'Individual', value: 'Individual', image: 'icon-user' },\r\n        { label: 'Company', value: 'Company', image: 'fa fa-building' }\r\n      ],\r\n      isCompany: 'Individual',\r\n\r\n      genderArray: [\r\n        { label: 'Male', value: 'Male', image: 'fa fa-male' },\r\n        { label: 'Female', value: 'Female', image: 'fa fa-female' }\r\n      ],\r\n      gender: '',\r\n\r\n      userImg: '',\r\n      userImgData: '',\r\n\r\n      companyname: '',\r\n      comapnynameError: true,\r\n\r\n      title: '',\r\n      titleArray: [],\r\n      titleError: true,\r\n      forename: '',\r\n      forenameError: true,\r\n      surname: '',\r\n      surnameError: true,\r\n      salutation: '',\r\n      salutationError: true,\r\n\r\n      passportno: '',\r\n      passportnoError: true,\r\n      countryArray: [],\r\n      countryArrayCopy: [],\r\n      countryCodeArray: [],\r\n      filteredCountriesSingle: null,\r\n      country: '',\r\n      countryShown: '',\r\n      countryError: true,\r\n\r\n      companyIdentifier: '',\r\n      companyIdentifierError: true,\r\n\r\n      businesstype: '',\r\n      businesstypeShown: '',\r\n      businessTypeError: true,\r\n      BusinessArray: [],\r\n      filteredBusinessSingle: null,\r\n      dob: '',\r\n      dobError: true,\r\n\r\n      addressid: '',\r\n      addrCountry: '',\r\n      addrCountryShown: '',\r\n      filteredAddressCountriesSingle: null,\r\n      addrCountryError: true,\r\n      addrline1: '',\r\n      addrline1Error: true,\r\n      addrline2: '',\r\n      addrline2Error: false,\r\n      addrline3: '',\r\n      addrline3Error: false,\r\n      city: '',\r\n      cityShown: '',\r\n      filteredCitySingle: null,\r\n      cityError: true,\r\n      cityArray: [],\r\n      state: '',\r\n      stateShown: '',\r\n      filteredStateSingle: null,\r\n      stateError: true,\r\n      stateArray: [],\r\n      stateArrayCopy: [],\r\n      postalcode: '',\r\n      postalcodeError: true,\r\n\r\n      phoneList: [],\r\n      primaryPhone: '',\r\n      visiblePhoneModal: false,\r\n      phoneTypes: [],\r\n      isEditPhone: false,\r\n      phoneID: 0,\r\n      phoneModalTitle: 'Add Phone',\r\n      phonetype: 'Business',\r\n      phoneTypeError: false,\r\n      phoneAreaCode: '',\r\n      phoneAreaCodeError: false,\r\n      phoneNumber: '',\r\n      phoneNumberError: true,\r\n      countrycode: '',\r\n      countryflag: '',\r\n      selectedCountry: '',\r\n      countrycodeError: true,\r\n      landLineLabel: 'EnterLandLine',\r\n      landLineSelected: false,\r\n      extensionLabel: 'Enter Ext',\r\n      extSelected: false,\r\n      ext: '',\r\n      extError: false,\r\n\r\n      emailList: [],\r\n      primaryEmail: '',\r\n      visibleEmailmodal: false,\r\n      emailTypes: [],\r\n      isEditEmail: false,\r\n      emailID: 0,\r\n      emailModalTitle: 'Add Email',\r\n      emailtype: 'Work',\r\n      emailTypeError: false,\r\n      email: '',\r\n      emailError: true,\r\n\r\n      contactModes: [],\r\n      contactModesList: [],\r\n\r\n      docdeliverySelected: '',\r\n      docDelivery: [],\r\n\r\n      note: '',\r\n      noteError: false,\r\n\r\n      bankcode: '',\r\n      bankcodeError: false,\r\n\r\n      commission: '',\r\n      commissionError: false,\r\n\r\n      CommissionPayable: 'New Business',\r\n      CommissionPayableError: false,\r\n      CommissionPayables: [],\r\n      \r\n      binder: '',\r\n      binderArray: [],\r\n\r\n      allowLogin: 'no',\r\n\r\n      username: '',\r\n      usernameError: false,\r\n      password: '',\r\n      passwordError: false,\r\n      isShowPassword: false,\r\n      confirmPassword: '',\r\n      confirmPasswordError: false,\r\n      isShowConfirmPassword: false,\r\n      case1: false,\r\n      case2: false,\r\n      case3: false,\r\n      case4: false,\r\n      case5: false,\r\n      case6: true,\r\n      showRules: false,\r\n\r\n      securityQuestionArray: [],\r\n      selectedSecurityQuestions: [],\r\n      que1: '',\r\n      ans1: '',\r\n      isShowAns1: false,\r\n      securityquestionid1: '',\r\n      ans1Error: true,\r\n      que2: '',\r\n      ans2: '',\r\n      isShowAns2: false,\r\n      securityquestionid2: '',\r\n      ans2Error: true,\r\n      que3: '',\r\n      ans3: '',\r\n      isShowAns3: false,\r\n      securityquestionid3: '',\r\n      ans3Error: true,\r\n\r\n      varifyAuthority: '',\r\n\r\n      isDeletePhone: false,\r\n      isDeleteEmail: false,\r\n      valueForDelete: '',\r\n\r\n      showPolicyModal: false,\r\n      resID: '',\r\n\r\n      isInternalStaff: false,\r\n\r\n\r\n      newuser: 'no'\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let el = document.getElementsByTagName('body');\r\n    el[0].classList.remove('modal-open');\r\n\r\n    this.getContactTypes();\r\n    this.getTitle();\r\n      this.getCountry();\r\n    this.getEmailType(\"EMAILTYPE\");\r\n    this.getCOMMISSIONPAYABLE(\"COMMISSIONPAYABLE\");\r\n    this.getPhoneType();\r\n    this.getBusinessTypes();\r\n    // this.getDropDownValues('BUSINESSTYPE', 'BusinessArray', 'StringMapKey');\r\n    this.getContactModes();\r\n    this.getBinder();\r\n    this.getSecurityQuestions();\r\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n      this.getContactDetails(this.props.match.params.id, this.props.match.params.entityType);\r\n    } else {\r\n      this.getContactCode();\r\n    }\r\n  }\r\n\r\n  getContactDetails(id, entityType) {\r\n\r\n    try {\r\n      let data = {\r\n        id: id,\r\n        entityType: entityType,\r\n        languageId: this.props.i18n.language //this.state.selectedLanguage\r\n      }\r\n      api.post('api/getContactDetailsByTypeAndID', data).then(res => {\r\n        console.log(\"dfsgsrfg\", res);\r\n        if (res.success) {\r\n          var phones = [];\r\n          var emails = [];\r\n          var contactModes = this.state.contactModesList;\r\n          var profileImage;\r\n\r\n          let sortedPhoneData = res.data.phoneData.sort((x, y) => {\r\n            return y.IsPreferred.data[0] - x.IsPreferred.data[0]\r\n          });\r\n\r\n          let sortedEmailData = res.data.emailData.sort((x, y) => {\r\n            return y.IsPreferred.data[0] - x.IsPreferred.data[0]\r\n          });\r\n\r\n          for (let i = 0; i < sortedPhoneData.length; i++) {\r\n            phones.push({\r\n              id: i,\r\n              phoneid: sortedPhoneData[i].PhoneId,\r\n              phonetype: sortedPhoneData[i].PhoneType,\r\n              areacode: sortedPhoneData[i].AreaCode,\r\n              countrycode: sortedPhoneData[i].CountryCode,\r\n              phonenumber: sortedPhoneData[i].PhoneNumber,\r\n              ext: sortedPhoneData[i].Ext,\r\n              ispreferred: (sortedPhoneData[i].IsPreferred.data[0] === 1) ? true : false,\r\n              isDeleted: false\r\n            });\r\n          }\r\n\r\n          for (let j = 0; j < sortedEmailData.length; j++) {\r\n            emails.push({\r\n              id: j,\r\n              emailid: sortedEmailData[j].EmailId,\r\n              emailtype: sortedEmailData[j].EmailType,\r\n              email: sortedEmailData[j].Email,\r\n              ispreferred: (sortedEmailData[j].IsPreferred.data[0] === 1) ? true : false,\r\n              isDeleted: false\r\n            });\r\n          }\r\n\r\n            for(let a = 0; a < contactModes.length; a++){\r\n              for (let k = 0; k < res.data.contactModes.length; k++) {\r\n              if(res.data.contactModes[k].contactmodename == contactModes[a].StringMapName){\r\n                contactModes[a].ContactModeId= res.data.contactModes[k].ContactModeId;\r\n                contactModes[a].StringMapId= res.data.contactModes[k].ContactModeType;\r\n                contactModes[a].StringMapKey= res.data.contactModes[k].ContactModeType;\r\n                contactModes[a].StringMapName= res.data.contactModes[k].contactmodename;\r\n                contactModes[a].isSelected=(res.data.contactModes[k].Status === 'Active') ? true : false;\r\n              }\r\n            }\r\n          }\r\n\r\n          // if (res.data.personData[0].SecurityUserId && res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null && res.data.personData[0].SecurityUserId !== '') {\r\n\r\n          //   this.setState({\r\n          //     allowLogin: 'yes',\r\n          //     username: res.data.personData[0].LoginId,\r\n          //     password: res.data.personData[0].Password,\r\n          //     case1: true,\r\n          //     case2: true,\r\n          //     case3: true,\r\n          //     case4: true,\r\n          //     case5: true,\r\n          //     case6: true\r\n          //   });\r\n          //   console.log(res.data.questionData.length());\r\n\r\n          //   if(res.data.questionData.length() != 0){\r\n          //     this.setState({\r\n          //       securityquestionid1: res.data.questionData[0].UserSecurityQuestionId,\r\n          //       securityquestionid2: res.data.questionData[1].UserSecurityQuestionId,\r\n          //       securityquestionid3: res.data.questionData[2].UserSecurityQuestionId,\r\n          //       que1: res.data.questionData[0].Question,\r\n          //       que2: res.data.questionData[1].Question,\r\n          //       que3: res.data.questionData[2].Question,\r\n          //       ans1: res.data.questionData[0].Answer,\r\n          //       ans2: res.data.questionData[1].Answer,\r\n          //       ans3: res.data.questionData[2].Answer\r\n          //     });\r\n          //   }\r\n          //   // for(let k = 0; k < res.data.questionData.length; k++){\r\n\r\n          //   // }\r\n          // }\r\n\r\n          if (res.data.personData[0].PicturePath !== '' && res.data.personData[0].PicturePath !== undefined && res.data.personData[0].PicturePath !== null) {\r\n            profileImage = apiBase + res.data.personData[0].PicturePath;\r\n          }\r\n\r\n          if (!CommonConfig.isEmpty(res.data.addressData[0].Country)) {\r\n            this.getStates(res.data.addressData[0].Country);\r\n          }\r\n\r\n          if (!CommonConfig.isEmpty(res.data.addressData[0].State)) {\r\n            this.getCity(res.data.addressData[0].State);\r\n          }\r\n\r\n          if (entityType.toString().toLowerCase() === 'person') {\r\n            this.setState({\r\n              isEdit: true,\r\n              personid: res.data.personData[0].PersonId,\r\n              contactcode: res.data.personData[0].ContactCode,\r\n              selectedContactType: res.data.personData[0].ContactType,\r\n              selectedContactName: res.data.personData[0].contactTypeName,\r\n              commission: res.data.personData[0].CommissionRate,\r\n              bankcode: res.data.personData[0].CentralBankCode,\r\n              isInternalStaff: (res.data.personData[0].ContactType == \"InternalStaff\") ? true : false,\r\n              isCompany: 'Individual',\r\n              userImg: profileImage,\r\n              companyname: res.data.personData[0].CompanyName,\r\n              comapnynameError: (res.data.personData[0].CompanyName !== undefined && res.data.personData[0].CompanyName !== null) ? false : true,\r\n              title: res.data.personData[0].Title,\r\n              titleError: (res.data.personData[0].Title !== undefined && res.data.personData[0].Title !== null) ? false : true,\r\n              forename: res.data.personData[0].Forename,\r\n              forenameError: (res.data.personData[0].Forename !== undefined && res.data.personData[0].Forename !== null) ? false : true,\r\n              surname: res.data.personData[0].Surname,\r\n              surnameError: (res.data.personData[0].Surname !== undefined && res.data.personData[0].Surname !== null) ? false : true,\r\n              salutation: res.data.personData[0].Salutation,\r\n              salutationError: (res.data.personData[0].Salutation !== undefined && res.data.personData[0].Salutation !== null) ? false : true,\r\n              gender: res.data.personData[0].Gender,\r\n              passportno: res.data.personData[0].PassportNumber,\r\n              passportnoError: (res.data.personData[0].PassportNumber !== undefined && res.data.personData[0].PassportNumber !== null) ? false : true,\r\n              // country: res.data.personData[0].PassportCountry,\r\n              // countryShown: (res.data.personData[0].passportcountryName !== undefined && res.data.personData[0].passportcountryName !== null && res.data.personData[0].passportcountryName !== '') ? res.data.personData[0].passportcountryName : '',\r\n              country: { label: res.data.personData[0].passportcountryName, value: res.data.personData[0].PassportCountry },\r\n              countryError: (res.data.personData[0].PassportCountry !== undefined && res.data.personData[0].PassportCountry !== null) ? false : true,\r\n              dob: CommonConfig.isEmpty(res.data.personData[0].DOB)||res.data.personData[0].DOB=='0000-00-00'|| res.data.personData[0].DOB == \"Invalid date\" ?'':moment(res.data.personData[0].DOB).format('YYYY-MM-DD'), //new Date(res.data.personData[0].DOB), //\r\n              dobError: (res.data.personData[0].DOB !== undefined && res.data.personData[0].DOB !== null) ? false : true,\r\n              businesstype: res.data.personData[0].BusinessType,\r\n              // businesstypeShown: (res.data.personData[0].businesstypeName !== undefined && res.data.personData[0].businesstypeName !== null && res.data.personData[0].businesstypeName !== '') ? res.data.personData[0].businesstypeName : '',\r\n              // businesstype: { label: res.data.personData[0].businesstypeName, value: res.data.personData[0].BusinessType },\r\n              businessTypeError: (res.data.personData[0].BusinessType !== undefined && res.data.personData[0].BusinessType !== null) ? false : true,\r\n              addressid: res.data.addressData[0].Addressid,\r\n              // addrCountry: res.data.addressData[0].Country,\r\n              // addrCountryShown: (res.data.addressData[0].countryname !== undefined && res.data.addressData[0].countryname !== null && res.data.addressData[0].countryname !== '') ? res.data.addressData[0].countryname : '',\r\n              addrCountry: { label: res.data.addressData[0].countryname, value: res.data.addressData[0].Country },\r\n              addrCountryError: (CommonConfig.isEmpty(res.data.addressData[0].Country)) ? true : false,\r\n              addrline1: res.data.addressData[0].AddrLine1,\r\n              addrline1Error: (res.data.addressData[0].AddrLine1 !== undefined && res.data.addressData[0].AddrLine1 !== null) ? false : true,\r\n              addrline2: res.data.addressData[0].AddrLine2,\r\n              addrline3: res.data.addressData[0].AddrLine3,\r\n              state: res.data.addressData[0].State,\r\n              stateShown: (res.data.addressData[0].statename !== undefined && res.data.addressData[0].statename !== null && res.data.addressData[0].statename !== '') ? res.data.addressData[0].statename : '',\r\n              stateError: (res.data.addressData[0].State !== undefined && res.data.addressData[0].State !== null) ? false : true,\r\n              city: res.data.addressData[0].City,\r\n              cityShown: res.data.addressData[0].City,\r\n              cityError: (res.data.addressData[0].City !== undefined && res.data.addressData[0].City !== null) ? false : true,\r\n              postalcode: res.data.addressData[0].PostalCode,\r\n              postalcodeError: (res.data.addressData[0].PostalCode !== undefined && res.data.addressData[0].PostalCode !== null) ? false : true,\r\n              \r\n              phoneList: phones,\r\n              emailList: emails,\r\n              radioSelected: (res.data.personData[0].IsOkToContact.data[0] === 1) ? 'oktocontact' : 'donotcontact',\r\n              contactModes: contactModes,\r\n              docdeliverySelected: res.data.personData[0].DocumentDelivery,\r\n              note: res.data.personData[0].Note,\r\n              CommissionPayable: res.data.personData[0].CommissionPayableOn,\r\n              allowLogin: (res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null && res.data.personData[0].SecurityUserId !== '') ? 'yes' : 'no',\r\n              securityuserid: (res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null) ? res.data.personData[0].SecurityUserId : ''\r\n            });\r\n          } else if (entityType.toString().toLowerCase() === 'organization') {\r\n         \r\n            this.setState({\r\n              isEdit: true,\r\n              organizationid: res.data.personData[0].OrganizationId,\r\n              contactcode: res.data.personData[0].ContactCode,\r\n              selectedContactType: res.data.personData[0].ContactType,\r\n              selectedContactName: res.data.personData[0].contactTypeName,\r\n              isCompany: 'Company',\r\n              commission: res.data.personData[0].CommissionRate,\r\n              userImg: profileImage,\r\n              CommissionPayable: res.data.personData[0].CommissionPayableOn,\r\n              companyIdentifier: res.data.personData[0].CompanyIdentifier,\r\n              companyIdentifierError: CommonConfig.isEmpty(res.data.personData[0].CompanyIdentifier) ? true : false,\r\n              companyname: res.data.personData[0].OrganizationName,\r\n              comapnynameError: (res.data.personData[0].OrganizationName !== undefined && res.data.personData[0].OrganizationName !== null) ? false : true,\r\n              businesstype: res.data.personData[0].BusinessType,\r\n              // businesstypeShown: (res.data.personData[0].businesstypeName !== undefined && res.data.personData[0].businesstypeName !== null && res.data.personData[0].businesstypeName !== '') ? res.data.personData[0].businesstypeName : '',\r\n              //businesstype: { label: res.data.personData[0].businesstypeName, value: res.data.personData[0].BusinessType },\r\n              businessTypeError: (res.data.personData[0].BusinessType !== undefined && res.data.personData[0].BusinessType !== null) ? false : true,\r\n              addressid: res.data.addressData[0].Addressid,\r\n              // addrCountry: res.data.addressData[0].Country,\r\n              // addrCountryShown: (res.data.addressData[0].countryname !== undefined && res.data.addressData[0].countryname !== null && res.data.addressData[0].countryname !== '') ? res.data.addressData[0].countryname : '',\r\n              addrCountry: { label: res.data.addressData[0].countryname, value: res.data.addressData[0].Country },\r\n              addrCountryError: (res.data.addressData[0].Country !== null && res.data.addressData[0].Country !== undefined) ? false : true,\r\n              addrline1: res.data.addressData[0].AddrLine1,\r\n              addrline1Error: (res.data.addressData[0].AddrLine1 !== undefined && res.data.addressData[0].AddrLine1 !== null) ? false : true,\r\n              addrline2: res.data.addressData[0].AddrLine2,\r\n              addrline3: res.data.addressData[0].AddrLine3,\r\n              state: res.data.addressData[0].State,\r\n              stateShown: (res.data.addressData[0].statename !== undefined && res.data.addressData[0].statename !== null && res.data.addressData[0].statename !== '') ? res.data.addressData[0].statename : '',\r\n              stateError: (res.data.addressData[0].State !== undefined && res.data.addressData[0].State !== null) ? false : true,\r\n              city: res.data.addressData[0].City,\r\n              cityShown: res.data.addressData[0].City,\r\n              cityError: (res.data.addressData[0].City !== undefined && res.data.addressData[0].City !== null) ? false : true,\r\n              postalcode: res.data.addressData[0].PostalCode,\r\n              postalcodeError: (res.data.addressData[0].PostalCode !== undefined && res.data.addressData[0].PostalCode !== null) ? false : true,\r\n              phoneList: phones,\r\n              emailList: emails,\r\n              radioSelected: (res.data.personData[0].IsOkToContact.data[0] === 1) ? 'oktocontact' : 'donotcontact',\r\n              contactModes: contactModes,\r\n              docdeliverySelected: res.data.personData[0].DocumentDelivery,\r\n              note: res.data.personData[0].Note,\r\n              allowLogin: (res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null && res.data.personData[0].SecurityUserId !== '') ? 'yes' : 'no',\r\n              securityuserid: (res.data.personData[0].SecurityUserId !== undefined && res.data.personData[0].SecurityUserId !== null) ? res.data.personData[0].SecurityUserId : '',\r\n              // companyname: res.data.personData[0].CompanyName?res.data.personData[0].CompanyName:'',\r\n              // comapnynameError: false,\r\n              title: res.data.personData[0].Title?res.data.personData[0].Title:'',\r\n              titleError: false,\r\n              forename: res.data.personData[0].Forename?res.data.personData[0].Forename:'',\r\n              forenameError: false,\r\n              surname: res.data.personData[0].Surname?res.data.personData[0].Surname:'',\r\n              surnameError: false,\r\n              salutation: res.data.personData[0].Salutation?res.data.personData[0].Salutation:'',\r\n              salutationError: false,\r\n              gender: res.data.personData[0].Gender?res.data.personData[0].Gender:'',\r\n              passportno: res.data.personData[0].PassportNumber?res.data.personData[0].PassportNumber:'',\r\n              passportnoError: false,\r\n              dob: CommonConfig.isEmpty(res.data.personData[0].DOB)||res.data.personData[0].DOB=='0000-00-00'|| res.data.personData[0].DOB == \"Invalid date\" ?'':moment(res.data.personData[0].DOB).format('YYYY-MM-DD'), \r\n              dobError: false,\r\n              country: { label: res.data.personData[0].passportcountryName, value: res.data.personData[0].PassportCountry },\r\n              countryError: (res.data.personData[0].PassportCountry !== undefined && res.data.personData[0].PassportCountry !== null) ? false : true,\r\n            })\r\n          } else {\r\n\r\n          }\r\n          if (this.state.selectedContactType == 'SubAgent' || this.state.selectedContactType == 'ServiceCenter') {\r\n            // this.getEmailType(\"EMAILTYPEAGENT\");\r\n            this.getEmailType(\"BROKERMAILTYPE\");\r\n          } else {\r\n            this.getEmailType(\"EMAILTYPE\");\r\n          }\r\n        } else {\r\n          console.log(\"error in get data\");\r\n        }\r\n      }).catch(err => {\r\n\r\n      });\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  getContactCode() {\r\n    try {\r\n      api.get('api/generateContactCode').then(res => {\r\n        if (res.success) {\r\n          this.setState({ contactcode: Number(res.data.ContactCode) + 1 });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getContactTypes() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'CONTACTTYPE',\r\n        // orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ contactType: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getTitle() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'TITLE',\r\n        orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ titleArray: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getCountry() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'COUNTRY',\r\n        // orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          let formattedArray = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            formattedArray.push({ label: res.data[i].StringMapName, value: res.data[i].StringMapKey });\r\n          }\r\n          // this.setState({ countryArray: res.data });\r\n          this.setState({ countryArray: formattedArray, countryArrayCopy: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n\r\n      });\r\n\r\n      api.get('api/getCountry').then(res => {\r\n        if (res.success) {\r\n          this.setState({ countryCodeArray: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getCOMMISSIONPAYABLE(type) {\r\n    try {\r\n      const data = {\r\n        stringmaptype: type,\r\n        orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ CommissionPayables: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getEmailType(type) {\r\n    try {\r\n      const data = {\r\n        stringmaptype: type,\r\n        orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage,\r\n        ContactType:this.state.selectedContactType\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ emailTypes: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getPhoneType() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'PHONETYPE',\r\n        orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ phoneTypes: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getCity(state) {\r\n    try {\r\n      let selectedState = this.state.stateArrayCopy.find(x => x.StringMapKey === state);\r\n      const data = {\r\n        parent_id: selectedState.StringMapId,\r\n        // orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ cityArray: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getStates(country) {\r\n    try {\r\n      let selectedCountry = this.state.countryArrayCopy.find(x => x.StringMapKey === country);\r\n\r\n      const data = {\r\n        parent_id: selectedCountry.StringMapId,\r\n        // orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          this.setState({ stateArray: res.data, stateArrayCopy: res.data, city: '' });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n    // this.getCity();\r\n  }\r\n\r\n  // getBusinessTypes() {\r\n  //   try {\r\n  //     api.get('api/getBusinessTypes').then(res => {\r\n  //       if (res.success) {\r\n  //         let formatArr = [];\r\n  //         for (let i = 0; i < res.data.length; i++) {\r\n  //           formatArr.push({ label: res.data[i].label, value: res.data[i].label });\r\n  //         }\r\n  //         this.setState({ BusinessArray: formatArr });\r\n  //       }\r\n  //     }).catch(err => {\r\n\r\n  //     });\r\n  //   } catch (err) {\r\n\r\n  //   }\r\n  // }\r\n\r\n  getBusinessTypes(stringMapType, setStateName, sortorder) {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'BUSINESSTYPE',\r\n        orderby: 'StringMapKey'\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          let formatArr = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            formatArr.push({ label: res.data[i].StringMapName, value: res.data[i].StringMapKey });\r\n          }\r\n          this.setState({ BusinessArray: formatArr });\r\n\r\n        } else {\r\n        }\r\n      }).catch(err => {\r\n      });\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  getContactModes() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'CONTACTMODE',\r\n        orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          var formattedArray = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            formattedArray.push({\r\n              ContactModeId: '', StringMapId: res.data[i].StringMapId,\r\n              StringMapName: res.data[i].StringMapName, StringMapKey: res.data[i].StringMapKey, isSelected: false\r\n            });\r\n          }\r\n          // this.setState({ contactModes: res.data });\r\n          this.setState({ contactModes: formattedArray });\r\n          this.setState({ contactModesList: formattedArray });\r\n          \r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  getBinder() {\r\n\r\n  }\r\n\r\n  getSecurityQuestions() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'SECURITYQUESTION',\r\n        orderby: 'SortOrder',\r\n        languageid: this.state.selectedLanguage\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          // var Questions = [];\r\n          // res.data.map((ques, i) => {\r\n          //   Questions.push({label: ques.stringmapname, })\r\n          // })\r\n          this.setState({ securityQuestionArray: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"err\", error);\r\n    }\r\n  }\r\n\r\n  toggle(type) {\r\n    const { t } = this.props;\r\n    if (type === 'landline') {\r\n      if (this.state.landLineSelected) {\r\n        this.setState({ landLineLabel: 'EnterLandLine' });\r\n      } else {\r\n        this.setState({ landLineLabel: 'HideLandLine' });\r\n      }\r\n      this.setState({ landLineSelected: !this.state.landLineSelected, phoneAreaCode: '', phoneAreaCodeError: false });\r\n      // this.show('phoneAreaCode', false);\r\n    } else if (type === 'ext') {\r\n      if (this.state.extSelected) {\r\n        this.setState({ extensionLabel: t('contactDetails:EnterExt') });\r\n      } else {\r\n        this.setState({ extensionLabel: t('contactDetails:HideExt') });\r\n      }\r\n      this.setState({ extSelected: !this.state.extSelected, ext: '', extError: false });\r\n      // this.show(\"ext\", false);\r\n    } else if (type === 'password') {\r\n      this.setState({ isShowPassword: !this.state.isShowPassword });\r\n    } else if (type === 'confirmPassword') {\r\n      this.setState({ isShowConfirmPassword: !this.state.isShowConfirmPassword });\r\n    } else if (type === 'contactcode') {\r\n      this.setState({ isContactCodeEdit: !this.state.isContactCodeEdit, contactCodeError: false, changedContactCode: this.state.contactcode });\r\n    } else if (type === 'ans1') {\r\n      this.setState({ isShowAns1: !this.state.isShowAns1 });\r\n    } else if (type === 'ans2') {\r\n      this.setState({ isShowAns2: !this.state.isShowAns2 });\r\n    } else if (type === 'ans3') {\r\n      this.setState({ isShowAns3: !this.state.isShowAns3 });\r\n    } else if (type === 'rules') {\r\n      this.setState({ showRules: !this.state.showRules });\r\n    } else if (type === 'dob') {\r\n      document.getElementById('dob').click();\r\n    }\r\n  }\r\n\r\n  onRadioBtnClick(radioType, radioSelected) {\r\n    if (radioType === 'contactPreference') {\r\n      if (radioSelected === 'donotcontact') {\r\n        let arr = this.state.contactModes;\r\n        arr.forEach(val => {\r\n          val.isSelected = false;\r\n        });\r\n        this.setState({ contactModes: arr });\r\n      }\r\n      this.setState({ radioSelected: radioSelected });\r\n    } else if (radioType === 'docdelivery') {\r\n      // if(radioSelected === 'both'){\r\n      //   var docArray = [{label: 'email', value: 'email'}, {label: 'post', value: 'post'}];\r\n      //   this.setState({ docDelivery: docArray });\r\n      // }else{\r\n      //   var docArray = [{label: radioSelected, value: radioSelected}];\r\n      // this.setState({ docDelivery: docArray });\r\n      // }\r\n      this.setState({ docdeliverySelected: radioSelected });\r\n    } else if (radioType === 'allowLogin') {\r\n      this.setState({ allowLogin: radioSelected });\r\n      if (radioSelected === 'yes' && this.state.emailList.length) {\r\n        var email = this.state.emailList.find(x => x.ispreferred === true);\r\n        this.setState({ username: email.email });\r\n      } else {\r\n        this.setState({ username: '' });\r\n      }\r\n    }\r\n    else if (radioType === 'newuser') {\r\n      this.setState({ newuser: radioSelected });\r\n      if (radioSelected === 'yes' && this.state.emailList.length) {\r\n        var email = this.state.emailList.find(x => x.ispreferred === true);\r\n        this.setState({ username: email.email });\r\n      } else {\r\n        this.setState({ username: '' });\r\n      }\r\n    }\r\n    else if (radioType === 'varifyauthority') {\r\n      this.setState({ varifyAuthority: radioSelected });\r\n    }\r\n  }\r\n\r\n  countydata(e) {\r\n    debugger\r\n    this.setState({ stateShown: e.value });\r\n    if (e.value.StringMapKey) {\r\n      this.setState({ state: e.value.StringMapKey });\r\n    }\r\n    else {\r\n      this.setState({ state: e.value });\r\n    }\r\n    this.getCity(e.value);\r\n  }\r\n\r\n  selectType(value, type) {\r\n    const { t } = this.props;\r\n    console.log(\"selectType\", value);\r\n    console.log(\"selectType\", type);\r\n    if (type === 'contact') {\r\n      debugger\r\n      this.setState({ selectedContactType: value });\r\n      if (value !== '' && value !== null && value !== undefined) {\r\n        this.show(\"contacttype\", false, \"contactTypeError\", \"\");\r\n        // --- code change after database fields changed\r\n        this.setState({ selectedContactName: value });\r\n        if (value === 'InsuranceCompany') {\r\n          this.setState({ isCompany: 'Company', allowLogin: 'no' });\r\n        } else {\r\n          this.setState({ isCompany: 'Individual', allowLogin: 'no' });\r\n        }\r\n\r\n        if (value === 'InternalStaff') {\r\n          this.setState({ isInternalStaff: true });\r\n        } else {\r\n          this.setState({ isInternalStaff: false });\r\n        }\r\n\r\n        if (value == 'SubAgent' || value == 'ServiceCenter') {\r\n          // this.getEmailType(\"EMAILTYPEAGENT\");\r\n          this.getEmailType(\"BROKERMAILTYPE\");\r\n        } else {\r\n          this.getEmailType(\"EMAILTYPE\");\r\n        }\r\n        // --- code change after database fields changed\r\n\r\n        // if (value === 'Surveyor') {\r\n        //   this.setState({ isCompany: 'Individual', allowLogin: 'no' });\r\n        // }\r\n        // let contactType = this.state.contactType.find(x => x.StringMapKey === value);\r\n        // this.setState({ selectedContactName: contactType.StringMapName });\r\n        // if (contactType.StringMapName === 'Insurance Company') {\r\n        //   this.setState({ isCompany: 'Company', allowLogin: 'no' });\r\n        // } else if (contactType.stringmapname === 'Surveyors') {\r\n        //   this.setState({ allowLogin: 'no' });\r\n        // } else {\r\n        //   this.setState({ allowLogin: 'no' });\r\n        // }\r\n      } else {\r\n        this.setState({ selectedContactName: '', allowLogin: 'no' });\r\n        this.show(\"contacttype\", true, \"contactTypeError\", t(\"contactDetails:ContactType.error\"));\r\n      }\r\n    } else if (type === 'company') {\r\n      this.setState({ comapnynameError: false });\r\n      this.show(\"companyname\", false, \"comapnynameError\", \"\");\r\n      if (this.state.selectedContactType === 'InsuranceCompany') {\r\n        this.setState({ isCompany: 'Company' });\r\n      } else if (this.state.selectedContactType === 'InternalStaff') {\r\n        this.setState({ isCompany: 'Individual' });\r\n      } else {\r\n        this.setState({ isCompany: value });\r\n      }\r\n      if (value === 'Company' && this.state.selectedContactType != 'Client') {\r\n        this.setState({ title: '', gender: '', forename: '', surname: '', salutation: '', dob: '' });\r\n      }\r\n    } else if (type === 'title') {\r\n      this.setState({ title: value });\r\n      // let titleName = this.state.titleArray.find(x => x.stringmapid === value);\r\n      if (value === '') {\r\n        this.setState({ gender: '', titleError: true });\r\n        this.show(\"title\", true, \"titleError\", t(\"contactDetails:Title.error\"));\r\n        // } else if (titleName.stringmapid === 'Mr.') {\r\n      } else if (value === 'Mr.') {\r\n        this.setState({ gender: 'Male', titleError: false });\r\n        this.show(\"title\", false, \"titleError\", \"\");\r\n      } else if (value === 'Dr.') {\r\n        this.setState({ gender: '', titleError: false });\r\n        this.show(\"title\", false, \"titleError\", \"\");\r\n      } else {\r\n        this.setState({ gender: 'Female', titleError: false });\r\n        this.show(\"title\", false, \"titleError\", \"\");\r\n      }\r\n    } else if (type === 'country') {\r\n      this.setState({ country: value });\r\n    } else if (type === 'gender') {\r\n      if (this.state.title === 'Mr.') {\r\n        this.setState({ gender: 'Male' });\r\n      } else if (this.state.title === 'Mrs.' || this.state.title === 'Miss') {\r\n        this.setState({ gender: 'Female' });\r\n      } else {\r\n        this.setState({ gender: value });\r\n      }\r\n    } else if (type === 'phonetype') {\r\n      if (value === '') {\r\n        this.setState({ phoneTypeError: true, phonetype: value });\r\n        this.show(\"phonetype\", true, \"phoneTypeError\", t(\"contactDetails:PhoneType.error\"));\r\n      } else {\r\n        this.setState({ phonetype: value, phoneTypeError: false });\r\n        this.show(\"phonetype\", false, \"phoneTypeError\", \"\");\r\n      }\r\n    } else if (type === 'emailtype') {\r\n      if (value === '') {\r\n        this.setState({ emailTypeError: true, emailtype: value });\r\n        this.show(\"emailtype\", true, \"emailTypeError\", t(\"contactDetails:EmailType.error\"));\r\n      } else {\r\n        this.setState({ emailtype: value, emailTypeError: false });\r\n        this.show(\"emailtype\", false, \"emailTypeError\", \"\");\r\n      }\r\n    } else if (type === 'addrCountry') {\r\n      if (value === '' || value === undefined || value === null) {\r\n        this.setState({\r\n          addrCountry: value, state: '', stateShown: '', cityShown: '', city: '',\r\n          countrycode: '', countrycodeError: true, stateError: true, cityError: true, countryflag: ''\r\n        });\r\n        // this.show('addrCountry', true, \"addrCountryError\", t(\"contactDetails:Country.error\"));\r\n      } else {\r\n        this.show('addrCountry', false, \"addrCountryError\", \"\");\r\n        // let selectedCountry = this.state.countryCodeArray.find(x => x.CountryId === value.value);\r\n        let selectedCountry = this.state.countryCodeArray.find(x => x.CountryName === value.label);\r\n        this.setState({\r\n          addrCountry: value, state: '', stateShown: '', cityShown: '', city: '',\r\n          selectedCountry: (selectedCountry !== undefined) ? selectedCountry.CountryName : '',\r\n          countrycode: (selectedCountry !== undefined) ? selectedCountry.CountryCode : '', countrycodeError: false, stateError: true,\r\n          cityError: true, countryflag: (selectedCountry !== undefined) ? selectedCountry.CountryFlag : ''\r\n        });\r\n        this.getStates(value.value); //get county/provines by country selection\r\n      }\r\n      // let selectedCountry = this.state.countryArray.find(x => x.countryid === value);\r\n      // if (value === '' || value === undefined || value === null) {\r\n      //   this.setState({ addrCountry: value, state: '', city: '', countrycode: '', countrycodeError: true });\r\n      // } else {\r\n      //   this.setState({ addrCountry: value, state: '', city: '', countrycode: selectedCountry.countrycode, countrycodeError: false });\r\n      //   this.getStates(value); //get county/provines by country selection\r\n      // }\r\n    } else if (type === 'addrstate') {\r\n      if (value === '') {\r\n        //\r\n      } else {\r\n        this.setState({ state: value, city: '' });\r\n        this.getCity(value);\r\n      }\r\n    } else if (type === 'addrcity') {\r\n      if (value === '') {\r\n        //\r\n      } else {\r\n        this.setState({ city: value });\r\n      }\r\n    } else if (type === 'countrycode') {\r\n      let selectedCountry = this.state.countryCodeArray.find(x => x.CountryCode === value);\r\n      if (value === '') {\r\n        this.setState({ countrycodeError: true, countrycode: value, countryflag: '', selectedCountry: '' });\r\n        this.show('countrycode', true, \"countrycodeError\", t(\"contactDetails:CountryCode.error\"));\r\n      } else {\r\n        this.setState({ countrycode: value, countryflag: selectedCountry.CountryFlag, countrycodeError: false, selectedCountry: selectedCountry.CountryName });\r\n        this.show('countrycode', false, \"countrycodeError\", \"\");\r\n      }\r\n    } else if (type === 'businesstype') {\r\n      if (value === '' || value === undefined || value === null) {\r\n        this.setState({ businessTypeError: true, businesstype: value });\r\n        // this.show('businesstype', true, \"businessTypeError\", \"Please select\");\r\n      } else {\r\n        this.setState({ businesstype: value, businessTypeError: false });\r\n        // this.show('businesstype', false, \"businessTypeError\", \"\");\r\n      }\r\n    } else if (type === 'state') {\r\n      this.setState({ state: value });\r\n      this.getCity(value);\r\n    } else if (type === 'city') {\r\n      this.setState({ city: value });\r\n    }\r\n\r\n    else if (type === 'CommissionPayable') {\r\n      if (value === '') {\r\n        this.setState({ CommissionPayableError: true, CommissionPayable: value });\r\n        this.show(\"CommissionPayable\", true, \"CommissionPayableError\", t(\"contactDetails:CommissionPayable.error\"));\r\n      } else {\r\n        this.setState({ CommissionPayable: value, CommissionPayableError: false });\r\n        this.show(\"CommissionPayable\", false, \"CommissionPayableError\", \"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  chooseFile = () => {\r\n    document.getElementById('profileimage').click();\r\n  }\r\n\r\n  selectImage = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.setState({ userImgData: event.target.files[0] });\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        this.setState({ userImg: e.target.result });\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { t } = this.props;\r\n    // debugger;\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === 'companyname') {\r\n      if (this.state.isCompany === 'Company' && CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ comapnynameError: true });\r\n        this.show(\"companyname\", true, \"comapnynameError\", t(\"contactDetails:CompanyName.error_blank\"));\r\n      } else if (e.target.value.length > 100) {\r\n        this.setState({ comapnynameError: true, companyname: this.state.companyname });\r\n        this.show(\"companyname\", true, \"comapnynameError\", t(\"contactDetails:CompanyName.error_maxLength\"));\r\n      } else {\r\n        this.setState({ companyname: e.target.value, comapnynameError: false });\r\n        this.show(\"companyname\", false, \"comapnynameError\", \"\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'forename') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ forenameError: true });\r\n        this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_blank\"));\r\n      } else {\r\n        let nameRegEx = CommonConfig.RegExp.nameWithSpace; // /^[a-zA-Z]+[a-zA-Z-']*$/; // /^[a-zA-Z]+[a-zA-Z-\\s']*$/\r\n        let name = e.target.value;\r\n        if (!nameRegEx.test(name)) {\r\n          this.setState({ forenameError: true });\r\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_pattern\"));\r\n        } else if (e.target.value.length > 25) {\r\n          this.setState({ forenameError: true });\r\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_maxLength\"));\r\n        } else if (e.target.value.length < 3) {\r\n          this.setState({ forenameError: true });\r\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_minLength\"));\r\n        } else {\r\n          this.setState({ forenameError: false, forename: e.target.value, salutation: e.target.value, salutationError: false });\r\n          this.show(\"forename\", false, \"forenameError\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'surname') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ surnameError: true });\r\n        this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_blank\"));\r\n      } else {\r\n        let nameRegEx = CommonConfig.RegExp.nameWithSpace; // /^[a-zA-Z]+[a-zA-Z-']*$/;\r\n        let name = e.target.value;\r\n        if (!nameRegEx.test(name)) {\r\n          this.setState({ surnameError: true });\r\n          this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_pattern\"));\r\n        } else if (e.target.value.length > 25) {\r\n          this.setState({ surnameError: true });\r\n          this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_maxLength\"));\r\n        } else if (e.target.value.length < 3) {\r\n          this.setState({ surnameError: true });\r\n          this.show(\"surname\", true, \"surnameError\", t(\"contactDetails:LastName.error_minLength\"));\r\n        } else {\r\n          this.setState({ surnameError: false, surname: e.target.value });\r\n          this.show(\"surname\", false, \"surnameError\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'salutation') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ salutationError: true });\r\n        this.show(\"salutation\", true, \"salutationError\", t(\"contactDetails:Salutation.error_blank\"));\r\n      } else {\r\n        let nameRegEx = CommonConfig.RegExp.nameWithSpace; // /^[a-zA-Z]+[a-zA-Z-'.]*$/;\r\n        let name = e.target.value;\r\n        if (!nameRegEx.test(name)) {\r\n          this.setState({ salutationError: true });\r\n          this.show(\"salutation\", true, \"salutationError\", t(\"contactDetails:Salutation.error_pattern\"));\r\n          // } else if (e.target.value.length > 5 || e.target.value.length < 2) {\r\n        } else if (e.target.value.length > 100) {\r\n          this.setState({ salutationError: true });\r\n          this.show(\"salutation\", true, \"salutationError\", t(\"contactDetails:Salutation.error_blank\"));\r\n        } else {\r\n          this.setState({ salutationError: false, salutation: e.target.value });\r\n          this.show(\"salutation\", false, \"salutationError\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'passportno') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ passportnoError: true });\r\n        this.show(\"passportno\", false, \"passportnoError\", \"\");\r\n        // this.show(\"passportno\", true, \"passportnoError\", t(\"contactDetails:PassportNumber.error_blank\"));\r\n      } else if (e.target.value.length !== 9) {\r\n        this.setState({ passportnoError: true });\r\n        this.show(\"passportno\", true, \"passportnoError\", t(\"contactDetails:PassportNumber.error_pattern\"));\r\n      } else {\r\n        // var passportRegEx = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/ig;\r\n        // var passport = e.target.value;\r\n        // if (!passportRegEx.test(passport)) {\r\n        //   this.setState({ passportnoError: true });\r\n        //   this.show(\"passportno\", true, \"passportnoError\", t(\"contactDetails:PassportNumber.error_pattern\"));\r\n        // } else {\r\n        this.setState({ passportnoError: false, passportno: e.target.value });\r\n        this.show(\"passportno\", false, \"passportnoError\", \"\");\r\n        // }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'companyIdentifier') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ companyIdentifierError: true });\r\n        // this.show(\"companyIdentifier\", true, \"companyIdentifierError\", t(\"contactDetails:CompanyIdentifier.error_blank\"));\r\n        this.show(\"companyIdentifier\", false, \"companyIdentifierError\", \"\");\r\n      } else {\r\n        // if(passportRegEx.test(passport)){\r\n        //   this.setState({ companyIdentifierError: true });\r\n        //   this.show(\"companyIdentifier\", true);\r\n        // }else{\r\n        if (e.target.value.length > 100) {\r\n          this.setState({ companyIdentifierError: true });\r\n          this.show(\"companyIdentifier\", true, \"companyIdentifierError\", t(\"contactDetails:CompanyIdentifier.error_maxLength\"));\r\n        } else {\r\n          this.setState({ companyIdentifierError: false, companyIdentifier: e.target.value });\r\n          this.show(\"companyIdentifier\", false, \"companyIdentifierError\", \"\");\r\n        }\r\n        // }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'addrline1') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ addrline1Error: true });\r\n        this.show(\"addrline1\", true, \"line1Error\", t(\"contactDetails:Line1.error_blank\"));\r\n      } else {\r\n        if (e.target.value.length > 150) {\r\n          this.setState({ addrline1Error: true });\r\n          this.show(\"addrline1\", true, \"line1Error\", t(\"contactDetails:Line1.error_maxLength\"));\r\n        } else {\r\n          this.setState({ addrline1Error: false, addrline1: e.target.value });\r\n          this.show(\"addrline1\", false, \"line1Error\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'addrline2') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ addrline2Error: false });\r\n        this.show(\"addrline2\", false, \"line2Error\", \"\");\r\n      } else {\r\n        if (e.target.value.length > 150) {\r\n          this.setState({ addrline2Error: true });\r\n          this.show(\"addrline2\", true, \"line2Error\", t(\"contactDetails:Line2.error_maxLength\"));\r\n        } else {\r\n          this.show(\"addrline2\", false, \"line2Error\", \"\");\r\n          this.setState({ addrline2: e.target.value, addrline2Error: false });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'addrline3') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ addrline3Error: false });\r\n        this.show(\"addrline3\", false, \"line3Error\", \"\");\r\n      } else {\r\n        if (e.target.value.length > 150) {\r\n          this.setState({ addrline3Error: true });\r\n          this.show(\"addrline3\", true, \"line3Error\", t(\"contactDetails:Line3.error_maxLength\"));\r\n        } else {\r\n          this.show(\"addrline3\", false, \"line3Error\", \"\");\r\n          this.setState({ addrline3: e.target.value, addrline3Error: false });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'postalcode') {\r\n      // if (CommonConfig.isEmpty(e.target.value)) {\r\n      //   this.setState({ postalcodeError: true });\r\n      //   this.show(\"postalcode\", true, \"postalcodeError\", t(\"contactDetails:PostalCode.error_blank\"));\r\n      // } else {\r\n      this.setState({ postalcode: e.target.value, postalcodeError: false });\r\n      this.show(\"postalcode\", false, \"postalcodeError\", \"\");\r\n      //--- old code\r\n      // if (this.state.addrCountryShown !== undefined && this.state.addrCountryShown !== '' && this.state.addrCountryShown !== {} && this.state.addrCountryShown !== null) {\r\n      //   let country = postalCodes.find(x => x.Country === this.state.addrCountryShown.stringmapname);\r\n      //   var postalCodeRegEx = country.Regex;\r\n      //   // var postalCodeRegEx = /(?:^[AC-FHKNPRTV-Y][0-9]{2}|D6W)[ -]?[0-9AC-FHKNPRTV-Y]{4}$/;\r\n      //   var postalCodeValue = e.target.value;\r\n      //   if (!postalCodeRegEx.test(postalCodeValue)) {\r\n      //     this.setState({ postalcodeError: true });\r\n      //     this.show(\"postalcode\", true);\r\n      //   } else {\r\n      //     this.setState({ postalcode: e.target.value, postalcodeError: false });\r\n      //     this.show(\"postalcode\", false);\r\n      //   }\r\n      // } else {\r\n      //   this.setState({ postalcodeError: true });\r\n      //   toast.error('Please select country first');\r\n      // }\r\n      //---old code\r\n\r\n      if (this.state.addrCountry && this.state.addrCountry.value !== undefined && this.state.addrCountry.value !== '' && this.state.addrCountry !== {} && this.state.addrCountry.value !== null) {\r\n        // let selectedAddrCountry = this.state.countryCodeArray.find(x => x.CountryName === this.state.addrCountry.label);\r\n\r\n        // let country = postalCodes.find(x => x.ISO === selectedAddrCountry.CountryShortForm);\r\n        // var postalCodeRegEx = country.Regex;\r\n        // var postalCodeValue = e.target.value;\r\n        // if (!postalCodeRegEx.test(postalCodeValue)) {\r\n        //   this.setState({ postalcodeError: true });\r\n        //   this.show(\"postalcode\", true, \"postalcodeError\", t(\"contactDetails:PostalCode.error_blank\"));\r\n        // } else {\r\n        this.setState({ postalcode: e.target.value, postalcodeError: false });\r\n        this.show(\"postalcode\", false, \"postalcodeError\", \"\");\r\n        // }\r\n      } else {\r\n        this.setState({ postalcodeError: true });\r\n        toast.error('Please select country first');\r\n      }\r\n      // }\r\n    }\r\n\r\n    if (e.target.name === 'phoneAreaCode') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ phoneAreaCodeError: false });\r\n        this.show(\"phoneAreaCode\", false, \"areaCodeError\", \"\");\r\n      } else {\r\n        let numberRegEx = CommonConfig.RegExp.number; // /^[0-9]+$/;\r\n        let areaCode = e.target.value;\r\n        if (e.target.value.length > 5) {\r\n          this.setState({ phoneAreaCodeError: true });\r\n          this.show(\"phoneAreaCode\", true, \"areaCodeError\", t(\"contactDetails:AreaCode.error_blank\"));\r\n        } else if (!numberRegEx.test(areaCode)) {\r\n          this.setState({ phoneAreaCodeError: true, phoneAreaCode: this.state.phoneAreaCode });\r\n          this.show(\"phoneAreaCode\", true, \"areaCodeError\", t(\"contactDetails:AreaCode.error_blank\"));\r\n        } else {\r\n          this.setState({ phoneAreaCode: e.target.value, phoneAreaCodeError: false });\r\n          this.show(\"phoneAreaCode\", false, \"areaCodeError\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'phoneNumber') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ phoneNumberError: true });\r\n        this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_blank\"));\r\n      } else {\r\n        let numberRegEx = CommonConfig.RegExp.number; // /^[0-9]+$/;\r\n        let phone = e.target.value;\r\n        if (!numberRegEx.test(phone)) {\r\n          this.setState({ phoneNumberError: true, phoneNumber: this.state.phoneNumber });\r\n          this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_pattern\"));\r\n        } else if (e.target.value.length < 6) {\r\n          this.setState({ phoneNumberError: true });\r\n          this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_minLength\"));\r\n        } else if (e.target.value.length > 15) {\r\n          this.setState({ phoneNumberError: true });\r\n          this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_maxLength\"));\r\n        } else {\r\n          this.setState({ phoneNumber: e.target.value, phoneNumberError: false });\r\n          this.show(\"phoneNumber\", false, \"phoneNumberError\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'email') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ emailError: true });\r\n        this.show(\"email\", true, \"emailError\", t(\"contactDetails:Email.error_blank\"));\r\n      } else {\r\n        var emailRegEx = CommonConfig.RegExp.email; // /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (!emailRegEx.test(e.target.value)) {\r\n          this.setState({ emailError: true });\r\n          this.show(\"email\", true, \"emailError\", t(\"contactDetails:Email.error_blank\"));\r\n        } else {\r\n          this.setState({ email: e.target.value, emailError: false });\r\n          this.show(\"email\", false, \"emailError\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'note') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        // this.setState({ noteError: true });\r\n        // this.show(\"note\", true);\r\n      } else {\r\n        this.setState({ note: e.target.value, noteError: false });\r\n        // this.show(\"note\", false);\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'bankcode') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        // this.setState({ bankcodeError: true });\r\n        // this.show(\"bankcode\", true);\r\n      } else {\r\n        this.setState({ bankcode: e.target.value, bankcodeError: false });\r\n        this.show(\"bankcode\", false, \"bankcodeError\", \"\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'commission') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ commissionError: true });\r\n        this.show(\"commission\", true, \"commissionError\", t(\"contactDetails:CommossionRate.error_blank\"));\r\n      } else {\r\n        let numberRegEx = CommonConfig.RegExp.decimalWithOne; // /^[0-9]+$/;\r\n        let commossion = e.target.value;\r\n        if (!numberRegEx.test(commossion)) {\r\n          this.setState({ commissionError: true });\r\n          this.show(\"commission\", true, \"commissionError\", t(\"contactDetails:CommossionRate.error_pattern\"));\r\n        } else\r\n          if (commossion > 100) {\r\n            this.setState({ commissionError: true });\r\n            this.show(\"commission\", true, \"commissionError\", t(\"contactDetails:CommossionRate.error_pattern\"));\r\n          } else {\r\n            this.setState({ commission: e.target.value, commissionError: false });\r\n            this.show(\"commission\", false, \"commissionError\", \"\");\r\n          }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'ans1') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ ans1Error: true });\r\n        this.show(\"ans1\", true, \"ans1Error\", t(\"contactDetails:Answer1.error_blank\"));\r\n      } else {\r\n        this.setState({ ans1Error: false, ans1: e.target.value });\r\n        this.show(\"ans1\", false, \"ans1Error\", \"\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'ans2') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ ans2Error: true });\r\n        this.show(\"ans2\", true, \"ans2Error\", t(\"contactDetails:Answer2.error_blank\"));\r\n      } else {\r\n        this.setState({ ans2Error: false, ans2: e.target.value });\r\n        this.show(\"ans2\", false, \"ans2Error\", \"\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'ans3') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ ans3Error: true });\r\n        this.show(\"ans3\", true, \"ans3Error\", t(\"contactDetails:Answer3.error_blank\"));\r\n      } else {\r\n        this.setState({ ans3Error: false, ans3: e.target.value });\r\n        this.show(\"ans3\", false, \"ans3Error\", \"\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'ext') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ ext: e.target.value, extError: false });\r\n        this.show(\"ext\", false);\r\n      } else {\r\n        var numberRegEx = /^[0-9]+$/;\r\n        let ext = e.target.value;\r\n        if (e.target.value.length > 3) {\r\n          this.setState({ extError: true });\r\n          this.show(\"ext\", true);\r\n        } else if (!numberRegEx.test(ext)) {\r\n          this.setState({ extError: true });\r\n          this.show(\"ext\", true);\r\n        } else {\r\n          this.setState({ ext: e.target.value, extError: false });\r\n          this.show(\"ext\", false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'username') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ usernameError: true });\r\n        this.show(\"username\", true, \"usernameError\", t(\"contactDetails:UserName.error_blank\"));\r\n      } else {\r\n        this.setState({ usernameError: false, username: e.target.value });\r\n        this.show(\"username\", false, \"usernameError\", \"\");\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'confirmPassword') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ confirmPasswordError: true });\r\n        this.show(\"confirmPassword\", true, \"confirmPasswordError\", t(\"contactDetails:ConfirmPassword.error_blank\"));\r\n      } else {\r\n        if (CommonConfig.isEmpty(this.state.password)) {\r\n          this.setState({ confirmPasswordError: true });\r\n          this.show(\"confirmPassword\", true, \"confirmPasswordError\", t(\"contactDetails:ConfirmPassword.error_blank\"));\r\n        } else if (this.state.password !== e.target.value) {\r\n          this.setState({ confirmPasswordError: true });\r\n          this.show(\"confirmPassword\", true, \"confirmPasswordError\", t(\"contactDetails:ConfirmPassword.error_blank\"));\r\n        } else {\r\n          this.setState({ confirmPasswordError: false, confirmPassword: e.target.value });\r\n          this.show(\"confirmPassword\", false, \"confirmPasswordError\", \"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'changedContactCode') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ contactCodeError: true });\r\n        this.show(\"changedContactCode\", true);\r\n      } else {\r\n        // if (e.target.value.length > 50 || e.target.value.length < 3) {\r\n        //   this.setState({ contactCodeError: true });\r\n        //   this.show(\"changedContactCode\", true);\r\n        // } else {\r\n        this.setState({ contactCodeError: false, changedContactCode: e.target.value });\r\n        this.show(\"changedContactCode\", false);\r\n        // }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'dob') {\r\n      if (CommonConfig.isEmpty(e.target.value)) {\r\n        this.setState({ dobError: true });\r\n        this.show(\"dob\", true, \"DOBError\", t(\"contactDetails:DOB.error_blank\"));\r\n      } else if (moment(e.target.value).format('YYYY-MM-DD') > moment().subtract(12, 'years').format('YYYY-MM-DD')) {\r\n        this.setState({ dobError: true });\r\n        this.show(\"dob\", true, \"DOBError\", t(\"contactDetails:DOB.error_maxLength\"));\r\n      } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().subtract(100, 'years').format('YYYY-MM-DD')) {\r\n        this.setState({ dobError: true });\r\n        this.show(\"dob\", true, \"DOBError\", t(\"contactDetails:DOB.error_minLength\"));\r\n      } else {\r\n        this.setState({ dobError: false, dob: e.target.value });\r\n        this.show(\"dob\", false, \"DOBError\", \"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  setValues = (e) => {\r\n    const { t } = this.props;\r\n\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === 'forename') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ forenameError: true });\r\n        this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_blank\"));\r\n      } else {\r\n        let nameRegEx = /^[a-zA-Z]+[a-zA-Z-']*$/; // /^[a-zA-Z]+[a-zA-Z-\\s']*$/\r\n        let name = e.target.value;\r\n        if (!nameRegEx.test(name)) {\r\n          this.setState({ forenameError: true, forename: this.state.forename });\r\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_pattern\"));\r\n        } else if (e.target.value.length > 50) {\r\n          this.setState({ forenameError: true, forename: this.state.forename });\r\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_maxLength\"));\r\n        } else if (e.target.value.length < 3) {\r\n          this.setState({ forenameError: true, forename: e.target.value });\r\n          this.show(\"forename\", true, \"forenameError\", t(\"contactDetails:FirstName.error_minLength\"));\r\n        } else {\r\n          this.setState({ forenameError: false, forename: e.target.value, salutation: e.target.value, salutationError: false });\r\n          this.show(\"forename\", false, \"forenameError\", \"\");\r\n          this.show(\"salutation\", false, \"salutationError\", \"\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  show(field, condition, errorField, message) {\r\n    if (condition) {\r\n      document.getElementById(field).className = \"form-control is-invalid\";\r\n      document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n    } else {\r\n      document.getElementById(field).className = \"form-control\";\r\n      document.getElementById(errorField).innerHTML = null;\r\n    }\r\n  }\r\n\r\n  reset = (type) => {\r\n    const { t } = this.props;\r\n    if (type === 'phoneModal') {\r\n      // if (this.state.addrCountry !== '' && this.state.addrCountry !== null && this.state.addrCountry !== undefined) {\r\n      //   let selectedCountry = this.state.countryCodeArray.find(x => x.countryid === this.state.addrCountry);\r\n      //   this.setState({ countrycode: selectedCountry.countrycode, countryflag: selectedCountry.countryflag });\r\n      // }\r\n      if (this.state.landLineSelected) this.show(\"phoneAreaCode\", false, \"areaCodeError\", \"\");\r\n      this.show(\"phoneNumber\", false, \"phoneNumberError\", \"\");\r\n\r\n      if (this.state.addrCountry.value !== '' && this.state.addrCountry.value !== null && this.state.addrCountry.value !== undefined) {\r\n        let selectedCountry = this.state.countryCodeArray.find(x => x.CountryName === this.state.addrCountry.label);\r\n        this.setState({ countrycode: selectedCountry.CountryCode, countryflag: selectedCountry.CountryFlag, selectedCountry: selectedCountry.CountryName });\r\n      }\r\n      this.setState({\r\n        visiblePhoneModal: false, phonetype: 'Business', phoneTypeError: false, phoneModalTitle: 'Add Phone',\r\n        phoneAreaCode: '', phoneAreaCodeError: false, phoneNumber: '', phoneNumberError: true,\r\n        isEditPhone: false, countrycodeError: false, extError: false, ext: '', landLineSelected: false,\r\n        extSelected: false, landLineLabel: 'EnterLandLine', extensionLabel: t('contactDetails:EnterExt')\r\n      });\r\n    } else if (type === 'emailModal') {\r\n      this.setState({\r\n        visibleEmailmodal: false, isEditEmail: false, emailtype: 'Work',\r\n        emailTypeError: false, email: '', emailError: true, emailModalTitle: 'Add Email'\r\n      });\r\n      this.show(\"email\", false, \"emailError\", \"\");\r\n    } else if (type === 'contactDetails') {\r\n      this.setState({\r\n        personid: '',\r\n        organizationid: '',\r\n        securityuserid: '',\r\n\r\n        radioSelected: 'oktocontact',\r\n        isEdit: false,\r\n\r\n        contactcode: 0,\r\n        selectedContactType: '',\r\n        selectedContactName: '',\r\n\r\n        isCompany: '',\r\n\r\n        gender: '',\r\n\r\n        userImg: '',\r\n        userImgData: '',\r\n\r\n        companyname: '',\r\n        comapnynameError: true,\r\n\r\n        title: '',\r\n        titleError: true,\r\n        forename: '',\r\n        forenameError: true,\r\n        surname: '',\r\n        surnameError: true,\r\n        salutation: '',\r\n        salutationError: true,\r\n\r\n        passportno: '',\r\n        passportnoError: true,\r\n        country: '',\r\n        countryShown: '',\r\n        filteredCountriesSingle: null,\r\n        countryError: true,\r\n\r\n        companyIdentifier: '',\r\n        companyIdentifierError: true,\r\n\r\n        businesstype: '',\r\n        businesstypeShown: '',\r\n        filteredBusinessSingle: null,\r\n        businessTypeError: true,\r\n        dob: '',\r\n        dobError: true,\r\n\r\n        addressid: '',\r\n        addrCountry: '',\r\n        addrCountryShown: '',\r\n        filteredAddressCountriesSingle: null,\r\n        addrCountryError: true,\r\n        addrline1: '',\r\n        addrline1Error: true,\r\n        addrline2: '',\r\n        addrline3: '',\r\n        city: '',\r\n        cityError: true,\r\n        state: '',\r\n        stateShown: '',\r\n        filteredStateSingle: null,\r\n        stateError: true,\r\n        postalcode: '',\r\n        postalcodeError: true,\r\n\r\n        phoneList: [],\r\n        primaryPhone: '',\r\n        visiblePhoneModal: false,\r\n        isEditPhone: false,\r\n        phoneID: 0,\r\n        phoneModalTitle: 'Add Phone',\r\n        phonetype: 'Business',\r\n        phoneTypeError: false,\r\n        phoneAreaCode: '',\r\n        phoneAreaCodeError: false,\r\n        phoneNumber: '',\r\n        phoneNumberError: true,\r\n        countrycode: '',\r\n        countrycodeError: true,\r\n        landLineLabel: 'EnterLandLine',\r\n        landLineSelected: false,\r\n        extensionLabel: t('contactDetails:EnterExt'),\r\n        extSelected: false,\r\n        ext: '',\r\n        extError: false,\r\n\r\n        emailList: [],\r\n        primaryEmail: '',\r\n        visibleEmailmodal: false,\r\n        isEditEmail: false,\r\n        emailID: 0,\r\n        emailModalTitle: 'Add Email',\r\n        emailtype: 'Work',\r\n        emailTypeError: false,\r\n        email: '',\r\n        emailError: true,\r\n\r\n        docdeliverySelected: '',\r\n\r\n        note: '',\r\n        noteError: false,\r\n\r\n        bankcode: '',\r\n        bankcodeError: false,\r\n\r\n        commission: '',\r\n        commissionError: false,\r\n\r\n        binder: '',\r\n\r\n        allowLogin: 'no',\r\n\r\n        username: '',\r\n        usernameError: false,\r\n        password: '',\r\n        passwordError: false,\r\n        isShowPassword: false,\r\n        confirmPassword: '',\r\n        confirmPasswordError: false,\r\n        isShowConfirmPassword: false,\r\n\r\n        selectedSecurityQuestions: [],\r\n        que1: '',\r\n        ans1: '',\r\n        ans1Error: true,\r\n        que2: '',\r\n        ans2: '',\r\n        ans2Error: true,\r\n        que3: '',\r\n        ans3: '',\r\n        ans3Error: true,\r\n\r\n        varifyAuthority: ''\r\n      });\r\n      this.getContactModes();\r\n    }\r\n  }\r\n\r\n  addToList = (type) => {\r\n    const { t } = this.props;\r\n\r\n    if (type === 'phoneList') {\r\n\r\n      if (this.state.phoneAreaCodeError || this.state.phoneTypeError || this.state.phoneNumberError || this.state.countrycodeError || this.state.extError) {\r\n\r\n        if (this.state.phoneAreaCodeError) this.show(\"phoneAreaCode\", true, \"areaCodeError\", t(\"contactDetails:AreaCode.error_blank\"));\r\n        if (this.state.phoneTypeError) this.show(\"phonetype\", true, \"phoneTypeError\", t(\"contactDetails:PhoneType.error\"));\r\n        if (this.state.phoneNumberError) this.show(\"phoneNumber\", true, \"phoneNumberError\", t(\"contactDetails:Phone.error_blank\"));\r\n        if (this.state.countrycodeError) this.show(\"countrycode\", true, \"countrycodeError\", t(\"contactDetails:CountryCode.error\"));\r\n        if (this.state.extError) this.show(\"ext\", true, \"\", \"\");\r\n\r\n      } else {\r\n\r\n        this.setState({ landLineLabel: 'EnterLandLine', extensionLabel: t('contactDetails:EnterExt') });\r\n        \r\n        let isExist = this.state.phoneList.findIndex(x => x.phonetype === this.state.phonetype\r\n          && x.phonenumber === this.state.phoneNumber\r\n          && x.countrycode === this.state.countrycode\r\n          && x.id !== this.state.phoneID);\r\n        if (isExist > -1) {\r\n          toast.error(t(\"contactDetails:PhoneAlreadyExist\"));\r\n          return;\r\n        }\r\n\r\n        if (this.state.isEditPhone) {\r\n          let phoneArray = this.state.phoneList;\r\n          let index = this.state.phoneList.findIndex(x => x.id === this.state.phoneID);\r\n          // var index = this.state.phoneList.findIndex(x => x.id === this.state.phoneID || x.phoneid === this.state.phoneID);\r\n\r\n          phoneArray[index].phonetype = this.state.phonetype;\r\n          phoneArray[index].areacode = this.state.phoneAreaCode;\r\n          phoneArray[index].phonenumber = this.state.phoneNumber;\r\n          phoneArray[index].countrycode = this.state.countrycode;\r\n          phoneArray[index].ext = this.state.ext;\r\n\r\n          this.setState({ phoneList: phoneArray });\r\n        } else {\r\n          var phoneArray = [\r\n            {\r\n              id: this.state.phoneList.length,\r\n              phoneid: '',\r\n              phonetype: this.state.phonetype,\r\n              areacode: this.state.phoneAreaCode,\r\n              phonenumber: this.state.phoneNumber,\r\n              countrycode: this.state.countrycode,\r\n              ext: this.state.ext,\r\n              ispreferred: (this.state.phoneList.length === 0) ? true : false,\r\n              isDeleted: false\r\n            }\r\n          ];\r\n          this.setState({ phoneList: this.state.phoneList.concat(phoneArray) });\r\n        }\r\n        this.reset('phoneModal');\r\n      }\r\n\r\n    } else if (type === 'emailList') {\r\n\r\n      if (this.state.emailTypeError || this.state.emailError) {\r\n\r\n        if (this.state.emailTypeError) this.show(\"emailtype\", true, \"emailTypeError\", t(\"contactDetails:EmailType.error\"));\r\n        if (this.state.emailError) this.show(\"email\", true, \"emailError\", t(\"contactDetails:Email.error_blank\"));\r\n\r\n      } else {\r\n\r\n// debugger;\r\n        let isExist = this.state.emailList.findIndex(x => x.emailtype === this.state.emailtype\r\n          && x.email === this.state.email\r\n          && x.id !== this.state.emailID);\r\n        if (isExist > -1) {\r\n          toast.error(t(\"contactDetails:EmailAlreadyExist\"));\r\n          return;\r\n        }\r\n\r\n        if (this.state.isEditEmail) {\r\n          let emailArray = this.state.emailList;\r\n\r\n          let index = this.state.emailList.findIndex(x => x.id === this.state.emailID);\r\n          // var index = this.state.emailList.findIndex(x => x.id === this.state.emailID || x.emailid === this.state.emailID);\r\n\r\n          var el = document.getElementById('emailtype');\r\n          var emailtype = el.options[el.selectedIndex].innerHTML;\r\n\r\n          emailArray[index].emailtype = emailtype;\r\n          emailArray[index].email = this.state.email;\r\n\r\n          this.setState({ emailList: emailArray });\r\n        } else {\r\n          var emailArray = [{\r\n            id: this.state.emailList.length,\r\n            emailid: '',\r\n            emailtype: this.state.emailtype,\r\n            email: this.state.email,\r\n            ispreferred: (this.state.emailList.length === 0) ? true : false,\r\n            isDeleted: false\r\n          }];\r\n          this.setState({ emailList: this.state.emailList.concat(emailArray) });\r\n        }\r\n\r\n        let allEmail = this.state.emailList.concat(emailArray);\r\n        let preferredEmail = allEmail.find(x => x.ispreferred === true);\r\n        // this.setState({ username: this.state.email });\r\n        this.setState({ username: preferredEmail.email });\r\n\r\n        this.reset('emailModal');\r\n      }\r\n    } else if (type === 'contactcode') {\r\n      this.setState({ contactcode: this.state.changedContactCode });\r\n      this.toggle('contactcode');\r\n    }\r\n  }\r\n\r\n  makePrimary = (value, type) => {\r\n    if (type === 'phone') {\r\n      let phoneArray = this.state.phoneList;\r\n      // let index = phoneArray.findIndex(x => x.id === value.id || x.phoneid === value.phoneid);\r\n      let index = phoneArray.findIndex(x => x.id === value.id);\r\n      for (let i = 0; i < phoneArray.length; i++) {\r\n        phoneArray[i].ispreferred = false;\r\n      }\r\n      phoneArray[index].ispreferred = true;\r\n\r\n      phoneArray.sort((x, y) => {\r\n        return y.ispreferred - x.ispreferred\r\n        // return (x.ispreferred === y.ispreferred) ? 0 : x.ispreferred ? -1 : 1;\r\n      });\r\n\r\n      this.setState({ phoneList: phoneArray });\r\n    } else if (type === 'email') {\r\n      let emailArray = this.state.emailList;\r\n      // let index = emailArray.findIndex(x => x.id === value.id || x.emailid === value.emailid);\r\n      let index = emailArray.findIndex(x => x.id === value.id);\r\n      for (let i = 0; i < emailArray.length; i++) {\r\n        emailArray[i].ispreferred = false;\r\n      }\r\n      emailArray[index].ispreferred = true;\r\n\r\n      emailArray.sort((x, y) => {\r\n        return y.ispreferred - x.ispreferred\r\n        // return (x.ispreferred === y.ispreferred) ? 0 : x.ispreferred ? -1 : 1;\r\n      });\r\n\r\n      this.setState({ emailList: emailArray, username: value.email });\r\n    }\r\n  }\r\n\r\n  edit = (value, type) => {\r\n    // debugger;\r\n    const { t } = this.props;\r\n    if (type === 'phone') {\r\n      let selectedCountry = this.state.countryCodeArray.find(x => x.CountryCode === value.countrycode);\r\n      this.setState({\r\n        isEditPhone: true, phonetype: value.phonetype, phoneTypeError: false, countryflag: selectedCountry.CountryFlag,\r\n        phoneModalTitle: 'Edit Phone', countrycode: value.countrycode, countrycodeError: false, selectedCountry: selectedCountry.CountryName,\r\n        phoneAreaCode: value.areacode, phoneAreaCodeError: false, ext: value.ext,\r\n        phoneNumber: value.phonenumber, phoneNumberError: false, phoneID: value.id,\r\n        landLineSelected: (value.areacode !== '' && value.areacode !== null && value.areacode !== undefined) ? true : false,\r\n        landLineLabel: (value.areacode !== '' && value.areacode !== null && value.areacode !== undefined) ? 'HideLandLine' : 'EnterLandLine',\r\n        //visiblePhoneModal: true\r\n      });\r\n      // if (value.areacode !== '' && value.areacode !== null && value.areacode !== undefined) {\r\n      //   this.setState({ landLineSelected: true, landLineLabel: 'Hide Land Line' });\r\n      // }\r\n      if (value.ext !== '' && value.ext !== undefined && value.ext !== null) {\r\n        this.setState({ extSelected: true, extensionLabel: 'Hide Ext' });\r\n      }\r\n      this.show('phonetype', false, \"phoneTypeError\", \"\");\r\n      this.show('phoneNumber', false, \"phoneNumberError\", \"\");\r\n    } else if (type === 'email') {\r\n      this.setState({\r\n        isEditEmail: true, emailtype: value.emailtype, emailTypeError: false,\r\n        emailModalTitle: 'Edit Email', email: value.email, emailError: false, emailID: value.id //visibleEmailmodal: true,\r\n      });\r\n      this.show('emailtype', false, \"emailTypeError\", \"\");\r\n      this.show('email', false, \"emailError\", \"\");\r\n    }\r\n  }\r\n\r\n  confirmDelete = (value, type) => {\r\n    if (type === 'phone') {\r\n      this.setState({ isDeletePhone: true, valueForDelete: value });\r\n    } else if (type === 'email') {\r\n      this.setState({ isDeleteEmail: true, valueForDelete: value });\r\n    }\r\n  }\r\n\r\n  delete = (value, type) => {\r\n    if (type === 'phone') {\r\n      let phoneArray = this.state.phoneList;\r\n      // let index = phoneArray.findIndex(x => x.phoneid === value.phoneid || x.id === value.id);\r\n      let index = phoneArray.findIndex(x => x.id === value.id);\r\n      phoneArray[index].isDeleted = true;\r\n      // phoneArray.splice(index, 1);\r\n      this.setState({ phoneList: phoneArray, isDeletePhone: false, valueForDelete: '' });\r\n    } else if (type === 'email') {\r\n      let emailArray = this.state.emailList;\r\n      // var index = emailArray.findIndex(x => x.id === value.id || x.emailid === value.emailid);\r\n      let index = emailArray.findIndex(x => x.id === value.id);\r\n      // emailArray.splice(index, 1);\r\n      emailArray[index].isDeleted = true;\r\n      this.setState({ emailList: emailArray, isDeleteEmail: false, valueForDelete: '' });\r\n    }\r\n  }\r\n\r\n  checked = (isChecked, value) => {\r\n    let arr = this.state.contactModes;\r\n    let i = arr.findIndex(x => x.StringMapKey === value.StringMapKey);\r\n    arr[i].isSelected = isChecked;\r\n    this.setState({ contactModes: arr });\r\n  }\r\n\r\n  handleSecurityQuestion = (data, queNo) => {\r\n    const { t } = this.props;\r\n\r\n    let quesionexist = this.state.selectedSecurityQuestions.findIndex(x => x.label === queNo);\r\n    if (quesionexist > -1) {\r\n      this.state.selectedSecurityQuestions.splice(quesionexist, 1);\r\n    }\r\n\r\n    if (data.target.value === '') {\r\n      if (queNo === 'que1') this.show('que1', true, \"que1Error\", \"\");\r\n      if (queNo === 'que2') this.show('que2', true, \"que2Error\", \"\");\r\n      if (queNo === 'que3') this.show('que3', true, \"que3Error\", \"\");\r\n    } else {\r\n      let check = this.state.selectedSecurityQuestions.findIndex(x => x.value === data.target.value);\r\n      if (check === -1) {\r\n        if (queNo === 'que1') {\r\n          // this.setState({ que1: data });\r\n          this.setState({ que1: data.target.value });\r\n          this.show('que1', false, \"que1Error\", \"\");\r\n        } else if (queNo === 'que2') {\r\n          // this.setState({ que2: data });\r\n          this.setState({ que2: data.target.value });\r\n          this.show('que2', false, \"que2Error\", \"\");\r\n        } else if (queNo === 'que3') {\r\n          // this.setState({ que3: data });\r\n          this.setState({ que3: data.target.value });\r\n          this.show('que3', false, \"que3Error\", \"\");\r\n        }\r\n        var arr = [{ label: queNo, value: data.target.value }];\r\n        this.setState({ selectedSecurityQuestions: this.state.selectedSecurityQuestions.concat(arr) });\r\n      } else {\r\n        toast.warn(t(\"contactDetails:QuestaionAlreadySelected\"));\r\n      }\r\n    }\r\n  }\r\n\r\n  formatPhone = (ph) => {\r\n    let phone;\r\n    if (ph.countrycode && ph.countrycode !== '' && ph.countrycode !== undefined && ph.countrycode !== null) {\r\n      if (ph.areacode && ph.areacode !== '' && ph.areacode !== undefined && ph.areacode !== null) {\r\n        phone = ph.countrycode + ' ' + ph.areacode + ' ' + CommonConfig.formatPhoneNumber(ph.phonenumber);\r\n      } else {\r\n        phone = ph.countrycode + ' ' + CommonConfig.formatPhoneNumber(ph.phonenumber);\r\n      }\r\n    } else {\r\n      if (ph.areacode && ph.areacode !== '' && ph.areacode !== undefined && ph.areacode !== null) {\r\n        phone = ph.areacode + ' ' + CommonConfig.formatPhoneNumber(ph.phonenumber);\r\n      } else {\r\n        phone = CommonConfig.formatPhoneNumber(ph.phonenumber);\r\n      }\r\n    }\r\n    return phone;\r\n  }\r\n\r\n  goBack = () => {\r\n    // console.log(\"goBack\", this.state.);\r\n    debugger;\r\n    var id = this.props.match.params.id?this.props.match.params.id:this.state.resID;\r\n    var entityType = this.props.match.params.entityType?this.props.match.params.entityType:this.state.entityType;\r\n    this.props.history.push({\r\n      pathname: '/viewContactDetails/' + id + '/' + entityType,\r\n      state: { isAdded: !this.state.isEdit }\r\n    });\r\n    // this.props.history.push('/contactList');\r\n  }\r\n\r\n  getType = (type, value) => {\r\n    if (type === 'phone') {\r\n      // var phonetype = this.state.phoneTypes.find(x => x.StringMapKey === value.phonetype);\r\n      // return phonetype.StringMapName;\r\n      return value.phonetype;\r\n    } else if (type === 'email') {\r\n      // var emailtype = this.state.emailTypes.find(x => x.StringMapKey === value.emailtype);\r\n      // return emailtype.StringMapName;\r\n      return value.emailtype;\r\n    }\r\n  }\r\n\r\n  checkUniqueQuestions() {\r\n    if (this.state.allowLogin === 'no') {\r\n      return true;\r\n    } else {\r\n      if (this.state.isEdit) {\r\n        if (CommonConfig.isEmpty(this.state.securityuserid)) {\r\n          if (this.state.selectedSecurityQuestions.length < 3) {\r\n            return false;\r\n          } else if (this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3) {\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        } else {\r\n          if (this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3) {\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        }\r\n      } else {\r\n        if (this.state.selectedSecurityQuestions.length < 3) {\r\n          return false;\r\n        } else if (this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    // if(this.state.selectedSecurityQuestions.length < 3){\r\n    //   return false;\r\n    // }else if(this.state.que1 === this.state.que2 || this.state.que1 === this.state.que3 || this.state.que2 === this.state.que3){\r\n    //   return false;\r\n    // }else{\r\n    //   return true;\r\n    // }\r\n  }\r\n\r\n  validate() {\r\n    const { t } = this.props;\r\n    let errCount = 0;\r\n    if (CommonConfig.isEmpty(this.state.selectedContactType)) {\r\n      toast.error(t(\"contactDetails:ContactType.error\"));\r\n      errCount++;\r\n    }\r\n  }\r\n\r\n  saveContact = () => {\r\n    debugger;\r\n    const { t } = this.props;\r\n    try {\r\n      if (this.state.title === '' && this.state.selectedContactType != 'InsuranceCompany' && (this.state.isCompany != 'Company'|| (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client'))) {\r\n        toast.error(t(\"contactDetails:Title.error\"));\r\n        return;\r\n      }\r\n      if (this.state.selectedContactType === '') {\r\n        toast.error(t(\"contactDetails:ContactType.error\"));\r\n        return;\r\n      }\r\n\r\n      if (this.state.isCompany === '') {\r\n        toast.error(t(\"contactDetails:isCompanyError\"));\r\n        return;\r\n      }\r\n      if (this.state.companyname === '' && this.state.isCompany === 'Company') {\r\n        toast.error(t(\"contactDetails:CompanyName.error_blank\"));\r\n        return;\r\n      }\r\n      if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.title === '') {\r\n        toast.error(t(\"contactDetails:Title.error\"));\r\n        return;\r\n      }\r\n      if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.forename === '') {\r\n        toast.error(t(\"contactDetails:FirstName.error_blank\"));\r\n        return;\r\n      }\r\n      if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.surname === '') {\r\n        toast.error(t(\"contactDetails:LastName.error_blank\"));\r\n        return;\r\n      }\r\n      if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.salutation === '') {\r\n        toast.error(t(\"contactDetails:Salutation.error_blank\"));\r\n        return;\r\n      }\r\n      if (this.state.passportno !== '' && (this.state.country.value === undefined || this.state.country.value === '')) {\r\n        toast.error(t(\"contactDetails:PassportCountry.error_blank\"));\r\n        return;\r\n      }\r\n      // if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.passportno === '') {\r\n      //   toast.error(t(\"contactDetails:PassportNumber.error_pattern\"));\r\n      //   return;\r\n      // }\r\n      // if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.country === '') {\r\n      //   toast.error(t(\"contactDetails:PassportCountry.error_blank\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.isCompany === 'Company' && this.state.companyIdentifier === '') {\r\n      //   toast.error(t(\"contactDetails:CompanyIdentifier.error_blank\"));\r\n      //   return;\r\n      // }\r\n      if ((this.state.businesstype === '' || this.state.businesstype === undefined || this.state.businesstype === null) && ((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client'))) {\r\n        toast.error(t(\"contactDetails:BusinessType.error_blank\"));\r\n        return;\r\n      }\r\n      if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && this.state.gender === '') {\r\n        toast.error(t(\"contactDetails:GenderError\"));\r\n        return;\r\n      }\r\n\r\n      // Dob Error\r\n      // if (((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) && !this.state.isInternalStaff && (this.state.dob === '' || this.state.dob === null || this.state.dob === undefined || this.state.dob === 'null' || this.state.dob === 'undefined' || this.state.dob === \"Invalid date\")) {\r\n      //   toast.error(t(\"contactDetails:DOB.error_blank\"));\r\n      //   return;\r\n      // }\r\n      if(this.state.dob === '' || this.state.dob === null || this.state.dob === undefined || this.state.dob === 'null' || this.state.dob === 'undefined' || this.state.dob === \"Invalid date\"){\r\n        this.state.dob = '0000-00-00';\r\n      }\r\n      if (!this.state.isInternalStaff && (this.state.addrCountry === '' || this.state.addrCountry === null || this.state.addrCountry === undefined || this.state.addrCountry === 'null' || this.state.addrCountry === 'undefined')) {\r\n        toast.error(t(\"contactDetails:Country.error\"));\r\n        return;\r\n      }\r\n      if (!this.state.isInternalStaff && (this.state.addrCountry.value === '' || this.state.addrCountry.value === undefined || this.state.addrCountry.value === null || this.state.addrCountry.value === 'null' || this.state.addrCountry.value === 'undefined')) {\r\n        toast.error(t(\"contactDetails:Country.error\"));\r\n        return;\r\n      }\r\n\r\n      if (!this.state.isInternalStaff && this.state.addrline1 === '') {\r\n        toast.error(t(\"contactDetails:Line1.error_blank\"));\r\n        return;\r\n      }\r\n      if (!this.state.isInternalStaff && this.state.state === '') {\r\n        toast.error(t(\"contactDetails:County.error\"));\r\n        return;\r\n      }\r\n      // if (this.state.city === '' && this.state.cityShown === '') {\r\n      //   toast.error(t(\"contactDetails:Town.error\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.postalcode === '') {\r\n      //   toast.error(t(\"contactDetails:PostalCode.error_blank\"));\r\n      //   return;\r\n      // }\r\n\r\n      let phoneList = this.state.phoneList.filter(x => x.isDeleted === false);\r\n      if (!phoneList.length) {\r\n        toast.error(t(\"contactDetails:PhonesError\"));\r\n        return;\r\n      }\r\n\r\n      let emailList = this.state.emailList.filter(x => x.isDeleted === false);\r\n      if (!emailList.length) {\r\n        toast.error(t(\"contactDetails:EmailsError\"));\r\n        return;\r\n      }\r\n      if (!this.state.isInternalStaff && !this.state.docdeliverySelected) {\r\n        toast.error(t(\"contactDetails:DocumentDelivery.Error\"));\r\n        return;\r\n      }\r\n      if (!this.state.isEdit && this.state.allowLogin === 'yes' && (this.state.username === '' || this.state.username === null || this.state.username === undefined)) {\r\n        toast.error(t(\"contactDetails:UserName.error_blank\"));\r\n        return;\r\n      }\r\n      if (!this.state.isEdit && this.state.allowLogin === 'yes' && (this.state.password === '' || this.state.password === null || this.state.password === undefined)) {\r\n        toast.error(t(\"contactDetails:Password.error_blank\"));\r\n        return;\r\n      }\r\n      if (!this.state.isEdit && this.state.allowLogin === 'yes' && (this.state.confirmPassword === '' || this.state.confirmPassword === null || this.state.confirmPassword === undefined)) {\r\n        toast.error(t(\"contactDetails:ConfirmPassword.error_blank\"));\r\n        return;\r\n      }\r\n      // if (this.state.allowLogin === 'yes' && (this.state.que1 === '' || this.state.que1 === null || this.state.que1 === undefined)) {\r\n      //   toast.error(t(\"contactDetails:Question1.error\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.allowLogin === 'yes' && (this.state.ans1 === '' || this.state.ans1 === null || this.state.ans1 === undefined)) {\r\n      //   toast.error(t(\"contactDetails:Answer1.error\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.allowLogin === 'yes' && (this.state.que2 === '' || this.state.que2 === null || this.state.que2 === undefined)) {\r\n      //   toast.error(t(\"contactDetails:Question1.error\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.allowLogin === 'yes' && (this.state.ans2 === '' || this.state.ans2 === null || this.state.ans2 === undefined)) {\r\n      //   toast.error(t(\"contactDetails:Answer2.error\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.allowLogin === 'yes' && (this.state.que3 === '' || this.state.que3 === null || this.state.que3 === undefined)) {\r\n      //   toast.error(t(\"contactDetails:Question3.error\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.allowLogin === 'yes' && (this.state.ans3 === '' || this.state.ans3 === null || this.state.ans3 === undefined)) {\r\n      //   toast.error(t(\"contactDetails:Answer3.error\"));\r\n      //   return;\r\n      // }\r\n      // if (this.state.allowLogin === 'yes' && !this.checkUniqueQuestions()) {\r\n      //   toast.error(t(\"contactDetails:UniqueQuestion\"));\r\n      //   return;\r\n      // }\r\n\r\n      if (this.state.commission === '' && (this.state.selectedContactName === 'SubAgent' || this.state.selectedContactName === 'ServiceCenter' || this.state.selectedContactName === 'Sub-Agent' || this.state.selectedContactName === 'Service-Center')) {\r\n        toast.error(t(\"Please enter commission rate\"));\r\n        return;\r\n      }\r\n\r\n      const contactDetailsForm = new FormData();\r\n\r\n      var company, allowLogin;\r\n      if (this.state.selectedContactName === 'InsuranceCompany' || this.state.selectedContactName === 'Surveyor') {\r\n        company = 'Company';\r\n        allowLogin = 'no';\r\n      } else {\r\n        company = this.state.isCompany;\r\n        allowLogin = this.state.allowLogin;\r\n      }\r\n      contactDetailsForm.append('personid', this.state.personid);\r\n      contactDetailsForm.append('NewUser', this.state.newuser);\r\n      contactDetailsForm.append('organizationid', this.state.organizationid);\r\n      contactDetailsForm.append('addressid', this.state.addressid);\r\n      contactDetailsForm.append('languageid', this.state.selectedLanguage);\r\n\r\n      contactDetailsForm.append('isEdit', this.state.isEdit);\r\n\r\n      contactDetailsForm.append('contacttype', this.state.selectedContactType);\r\n      // contactDetailsForm.append('isCompany', this.state.isCompany);\r\n      contactDetailsForm.append('isCompany', company);\r\n      contactDetailsForm.append('contactcode', this.state.contactcode);\r\n\r\n      if(this.state.companyname != null && this.state.companyname != 'null' && this.state.companyname != 'undefined' && this.state.companyname != undefined){\r\n        contactDetailsForm.append('companyname', this.state.companyname.trim());     \r\n      }\r\n      else{\r\n          contactDetailsForm.append('companyname', this.state.companyname);\r\n      }\r\n      contactDetailsForm.append('title', this.state.title);\r\n      \r\n      contactDetailsForm.append('forename', this.state.forename.trim());\r\n      contactDetailsForm.append('surname', this.state.surname.trim());\r\n      contactDetailsForm.append('salutation', this.state.salutation.trim());\r\n      contactDetailsForm.append('dob', this.state.dob);\r\n      contactDetailsForm.append('gender', this.state.gender);\r\n\r\n      contactDetailsForm.append('companyidentifier', this.state.companyIdentifier?this.state.companyIdentifier.trim():'');\r\n\r\n      contactDetailsForm.append('passportno', this.state.passportno.trim());\r\n      // contactDetailsForm.append('passportcountry', this.state.country);\r\n      contactDetailsForm.append('passportcountry', CommonConfig.isEmpty(this.state.country.value) ? '' : this.state.country.value);\r\n      contactDetailsForm.append('businesstype', this.state.businesstype);\r\n      // contactDetailsForm.append('businesstype', (this.state.businesstype !== '' && this.state.businesstype !== undefined && this.state.businesstype !== null) ? this.state.businesstype : this.state.businesstypeShown);\r\n\r\n      // contactDetailsForm.append('country', this.state.addrCountry);\r\n      contactDetailsForm.append('country', this.state.addrCountry.value);\r\n      contactDetailsForm.append('addrline1', this.state.addrline1);\r\n      contactDetailsForm.append('addrline2', this.state.addrline2);\r\n      contactDetailsForm.append('addrline3', this.state.addrline3);\r\n      contactDetailsForm.append('city', CommonConfig.isEmpty(this.state.city) ? this.state.cityShown : this.state.city);\r\n      contactDetailsForm.append('state', this.state.state);\r\n      contactDetailsForm.append('postalcode', this.state.postalcode);\r\n\r\n      contactDetailsForm.append('phoneList', JSON.stringify(this.state.phoneList));\r\n\r\n      contactDetailsForm.append('emailList', JSON.stringify(this.state.emailList));\r\n\r\n      contactDetailsForm.append('isoktocontact', this.state.radioSelected);\r\n      contactDetailsForm.append('contactmode', JSON.stringify(this.state.contactModes));\r\n      contactDetailsForm.append('documentdelivery', this.state.docdeliverySelected);\r\n      contactDetailsForm.append('note', this.state.note);\r\n\r\n      contactDetailsForm.append('centralbankcode', this.state.bankcode);\r\n      contactDetailsForm.append('commissionrate', this.state.commission);\r\n      contactDetailsForm.append('binderid', this.state.binder);\r\n      contactDetailsForm.append('CommissionPayableOn', this.state.CommissionPayable);\r\n      \r\n      // contactDetailsForm.append('allowtologin', this.state.allowLogin);\r\n      contactDetailsForm.append('allowtologin', allowLogin);\r\n\r\n      // contactDetailsForm.append('securityuserid', this.state.securityuserid);\r\n\r\n      contactDetailsForm.append('username', this.state.username);\r\n      contactDetailsForm.append('password', this.state.password);\r\n      // contactDetailsForm.append('confirmPassword', this.state.confirmPassword);\r\n\r\n      let questionArray = [];\r\n      if (this.state.allowLogin === 'yes') {\r\n        questionArray = [\r\n          { securityQuestionID: this.state.securityquestionid1, que: this.state.que1, ans: this.state.ans1 },\r\n          { securityQuestionID: this.state.securityquestionid2, que: this.state.que2, ans: this.state.ans2 },\r\n          { securityQuestionID: this.state.securityquestionid3, que: this.state.que3, ans: this.state.ans3 }\r\n        ];\r\n      }\r\n\r\n      contactDetailsForm.append('questionArray', JSON.stringify(questionArray));\r\n      contactDetailsForm.append('question1', this.state.que1);\r\n      contactDetailsForm.append('answer1', this.state.ans1);\r\n      contactDetailsForm.append('question2', this.state.que2);\r\n      contactDetailsForm.append('answer2', this.state.ans2);\r\n      contactDetailsForm.append('question3', this.state.que3);\r\n      contactDetailsForm.append('answer3', this.state.ans3);\r\n      contactDetailsForm.append('userauthenticity', this.state.varifyAuthority);\r\n      contactDetailsForm.append('bankcode', this.state.bankcode);\r\n      contactDetailsForm.append('commission', this.state.commission);\r\n\r\n      contactDetailsForm.append('loggedInUserId', CommonConfig.loggedInUserId());\r\n\r\n      if (!CommonConfig.isEmpty(this.state.userImgData)) {\r\n        // var imgData = {\r\n        //   uri: this.state.image2.uri,\r\n        //   type: \"image/jpeg\", // or photo.type\r\n        //   name: \"providergallary\"\r\n        // }\r\n        contactDetailsForm.append('profileImage', this.state.userImgData, this.state.userImgData.name);\r\n      }\r\n      // \r\n\r\n      api.post('api/addContactDetails', contactDetailsForm).then(res => {\r\n\r\n        if (res.success) {\r\n          if (res.data.success) {\r\n            toast.success(res.data.message);\r\n            if (this.state.selectedContactType === 'Client' && !this.state.isEdit) {\r\n              this.setState({ showPolicyModal: true, resID: res.data.data.id ,entityType:res.data.data.entityType });\r\n            } else {\r\n              this.props.history.push({\r\n                pathname: '/viewContactDetails/' + res.data.data.id + '/' + res.data.data.entityType,\r\n                state: { isAdded: !this.state.isEdit }\r\n              });\r\n              this.reset('contactDetails');\r\n            }\r\n            // this.props.history.push('/contactList');\r\n          } else {\r\n            toast.error(res.data.message);\r\n          }\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Asfdaf\", error);\r\n    }\r\n  }\r\n\r\n  filterSingle = (event, type) => {\r\n    if (type === 'passportcountry') {\r\n      // if(event.query === undefined || event.query === '' || event.query === null){\r\n      //   this.setState({ filteredCountriesSingle: this.state.countryArray });\r\n      // }else{\r\n      let results = this.state.countryArray.filter((country) => {\r\n        return country.label.toLowerCase().startsWith(event.query.toLowerCase());\r\n      });\r\n      this.setState({ filteredCountriesSingle: results });\r\n      // }\r\n    } else if (type === 'addresscountry') {\r\n      let results = this.state.countryArray.filter((country) => {\r\n        return country.label.toLowerCase().startsWith(event.query.toLowerCase());\r\n      });\r\n      this.setState({ filteredAddressCountriesSingle: results, stateShown: '' });\r\n    } else if (type === 'businesstype') {\r\n      let results = this.state.BusinessArray.filter((business) => {\r\n        return business.label.toLowerCase().startsWith(event.query.toLowerCase());\r\n      });\r\n      this.setState({ filteredBusinessSingle: results });\r\n    } else if (type === 'addrstate') {\r\n      // if(this.state.stateArray.length){\r\n      let results = this.state.stateArray.filter((st) => {\r\n        return st.label.toLowerCase().startsWith(event.query.toLowerCase());\r\n      });\r\n      this.setState({ filteredStateSingle: results });\r\n      // }else{\r\n      //   toast.error('Please select country first');\r\n      // }\r\n    } else if (type === 'city') {\r\n      // if(this.state.cityArray.length){\r\n      let results = this.state.cityArray.filter((city) => {\r\n        return city.label.toLowerCase().startsWith(event.query.toLowerCase());\r\n      });\r\n      this.setState({ filteredCitySingle: results });\r\n      // }else{\r\n      //   toast.error('Please select country and state first');\r\n      // }\r\n    }\r\n  }\r\n\r\n  countryCodeTemplate(option) {\r\n    return (\r\n      <div className=\"p-clearfix\">\r\n        <i className={option.countryflag}></i>\r\n        <span style={{ float: 'right', margin: '.5em .25em 0 0' }}>{option.countrycode}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handlePasswordChange = (e) => {\r\n    const { t } = this.props;\r\n\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === 'password') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({\r\n          passwordError: true, case1: false, case2: false, case3: false,\r\n          case4: false, case5: false, case6: false\r\n        });\r\n        this.show(\"password\", true, \"passwordError\", t(\"contactDetails:Password.error_blank\"));\r\n      } else {\r\n        var myInput = document.getElementById(\"password\");\r\n\r\n        // Validate lowercase letters\r\n        var lowerCaseLetters = /[a-z]/g;\r\n        if (myInput.value.match(lowerCaseLetters)) {\r\n          this.setState({ case2: true });\r\n        } else {\r\n          this.setState({ case2: false });\r\n        }\r\n\r\n        // Validate capital letters\r\n        var upperCaseLetters = /[A-Z]/g;\r\n        if (myInput.value.match(upperCaseLetters)) {\r\n          this.setState({ case1: true });\r\n        } else {\r\n          this.setState({ case1: false });\r\n        }\r\n\r\n        // Validate numbers\r\n        var numbers = /[0-9]/g;\r\n        if (myInput.value.match(numbers)) {\r\n          this.setState({ case4: true });\r\n        } else {\r\n          this.setState({ case4: false });\r\n        }\r\n\r\n        //Validate Special Characters\r\n        var spcs = /[!@#$%^&*(),.?\":{}|<>_+-='~`]/g;\r\n        if (myInput.value.match(spcs)) {\r\n          this.setState({ case3: true });\r\n        } else {\r\n          this.setState({ case3: false });\r\n        }\r\n\r\n        // Validate length\r\n        if (myInput.value.length === 8) {\r\n          this.setState({ case5: true, case6: true });\r\n        } else if (myInput.value.length > 15) {\r\n          this.setState({ case6: false });\r\n        } else if (myInput.value.length < 8) {\r\n          this.setState({ case5: false });\r\n        } else {\r\n          this.setState({ case5: true, case6: true });\r\n        }\r\n\r\n        //password regex\r\n        let passwordRegEx = CommonConfig.RegExp.password; // /^(?=.*[0-9])(?=.*[!@#$%^&*.])[a-zA-Z0-9!@#$%^&*.]{8,}$/;\r\n        let password = e.target.value;\r\n        if (!passwordRegEx.test(password)) {\r\n          this.setState({ passwordError: true });\r\n          this.show(\"password\", true, \"passwordError\", t(\"contactDetails:Password.error_blank\"));\r\n        } else {\r\n          this.setState({ passwordError: false, password: e.target.value });\r\n          this.show(\"password\", false, \"passwordError\", \"\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  goToPolicy() {\r\n    this.props.history.push({\r\n      pathname: '/CreatePolicy/' + this.state.resID,\r\n      state: {\r\n        Id: this.state.resID\r\n      }\r\n    });\r\n    this.reset('contactDetails');\r\n  }\r\n\r\n  // validateCountry = (e) => {\r\n  //   if(e.value === '' || e.value === undefined || e.value === null){\r\n  //     this.show('addrCountry', true);\r\n  //   }else{\r\n  //     this.setState({ addrCountryShown: e.value });\r\n  //     this.show('addrCountry', false);\r\n  //   }\r\n  // }\r\n\r\n  handleDobChange = (e) => {\r\n    console.log(\"ijijij\", e)\r\n    // const { t } = this.props;\r\n    if (e === null || e === undefined) {\r\n\r\n    }\r\n    this.setState({ dob: e });\r\n  }\r\n\r\n  close = (type) => {\r\n    if (type === 'policyModal') {\r\n      this.goBack();\r\n      this.reset('contactDetails');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const SaveButton = t(\"buttons.Save\");\r\n    const AddButton = t(\"buttons.Add\");\r\n    const EditButton = t(\"buttons.Edit\");\r\n    const DeleteButton = t(\"buttons.Delete\");\r\n    const CloseButton = t(\"buttons.Close\");\r\n    const BackButton = t(\"buttons.Back\");\r\n    const UpdateButton = t(\"buttons.Update\");\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"main-content\">\r\n\r\n          <Container>\r\n\r\n            {/* <div>\r\n              block for show errors\r\n            </div> */}\r\n\r\n            <Form encType=\"multipart/form-data\" autoComplete=\"of\">\r\n              {/* <form encType=\"multipart/form-data\"> */}\r\n\r\n              <Row style={{ marginTop: 5 }}>\r\n                <Col md=\"12\">\r\n                  {/* {(this.state.isContactCodeEdit) ? (\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:ContactCode\")}</label>\r\n                          <Input type=\"text\" name=\"changedContactCode\" className=\"\" id=\"changedContactCode\" onChange={(e) => this.handleChange(e)} value={this.state.changedContactCode} />\r\n                            <em className=\"error invalid-feedback\" >{t(\"contactDetails:ContactCodeError\")}</em>\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col md=\"3\">\r\n                        <div className=\"add-btn\">\r\n                          <Button title={SaveButton} color=\"primary\" onClick={() => this.addToList('contactcode')} style={{ marginRight: 10 }}>\r\n                            <i className=\"fa fa-check\"></i>\r\n                          </Button>\r\n                          <Button title={CloseButton} color=\"secondary\" onClick={() => this.toggle('contactcode')} style={{ marginLeft: 10 }}>\r\n                            <i className=\"fa fa-close\"></i>\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  ) : (\r\n                      <span> */}\r\n                  <b style={{ marginRight: 20, fontSize: 20 }}>{t(\"contactDetails:Contact#\")} {this.state.contactcode}</b>\r\n                  {/* <a href=\"javascript:void(0)\" onClick={() => this.toggle('contactcode')}>{t(\"contactDetails:EditContactCode\")}</a>\r\n                      </span>\r\n                    )\r\n                  } */}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row style={{ marginTop: 10 }}>\r\n                <Col md=\"2\">\r\n                  <div className=\"profile-img\">\r\n                    <img src={(this.state.userImg && this.state.userImg !== '') ? this.state.userImg : userDefaultImg} alt=\"user_profile_image\" width=\"100%\" height=\"auto\" />\r\n                    <Button title={t(\"contactDetails:ChangePicture\")} outline color=\"secondary\"\r\n                      onClick={() => this.chooseFile()} style={{ marginLeft: 10, bottom: 0 }}>\r\n                      <i className=\"fa fa-pencil\"></i>\r\n                    </Button>\r\n                    {/* <Input type=\"file\" id=\"file\" name=\"file\" accept=\"image/*\" style={{display: 'none'}} onClick={this.selectImage} /> */}\r\n                    <input type=\"file\" id=\"profileimage\" name=\"file\" accept=\"image/*\" style={{ display: 'none' }} onChange={(e) => this.selectImage(e)} />\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col md=\"10\">\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:ContactType.label\")}*</label>\r\n                        <Input type=\"select\" name=\"contacttype\" id=\"contacttype\"\r\n                          // onBlur={(e) => this.selectType(e.target.value, 'contact')}\r\n                          onChange={(e) => this.selectType(e.target.value, 'contact')}\r\n                          value={this.state.selectedContactType} className=\"\"\r\n                        >\r\n                          <option value=''>{t(\"contactDetails:ContactType.defaultValue\")}</option>\r\n                          {this.state.contactType.map((ct, i) => {\r\n                            return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                          })\r\n                          }\r\n                        </Input>\r\n                        <em className=\"error invalid-feedback\" id=\"contactTypeError\"></em>\r\n                        {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:ContactType.error\")}</em> */}\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"4\">\r\n                      <div className=\"add-btn\">\r\n                        {/* <label>Is Company: </label> */}\r\n                        <div className=\"button-group\">\r\n                          {this.state.companyArray.map((company, i) => {\r\n                            return (<Button name=\"iscompany\" className=\"\" key={i} onClick={() => this.selectType(company.value, 'company')} //active={t(\"contactDetails:\"+this.state.isCompany+\"\")}\r\n                              color={this.state.isCompany === company.value ? 'primary' : 'secondary'} style={(i === this.state.companyArray.length) ? { marginLeft: 10 } : { marginRight: 10 }}>\r\n                              <i className={company.image}></i>\r\n                              {t(\"contactDetails:\" + company.label + \"\")}\r\n                              {(this.state.isCompany === company.value) ? <i className=\"fa fa-check icon-rt\"></i> : null}\r\n                            </Button>);\r\n                          })}\r\n                        </div>\r\n\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"5\">\r\n                      <div className=\"input-box\">\r\n                        <label>\r\n                          {t(\"contactDetails:CompanyName.label\")}\r\n                          {(this.state.isCompany === 'Company') ? '*' : null}\r\n                        </label>\r\n                        <Input name=\"companyname\" type=\"text\" id=\"companyname\" className=\"\"\r\n                          placeholder={t(\"contactDetails:CompanyName.label\")}\r\n                          onChange={e => this.handleChange(e)} value={this.state.companyname}\r\n                          // onBlur={e => this.handleChange(e)} \r\n                          autoComplete=\"of\"\r\n                        />\r\n                        <em id=\"comapnynameError\" className=\"error invalid-feedback\" ></em>\r\n                        {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:CompanyName.error_blank\")}</em> */}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {(((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) ||(this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) ? (\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <label>{t(\"contactDetails:Name\")}</label>\r\n                      </Col>\r\n\r\n                      <Col md=\"2\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:Title.label\")}*</label>\r\n                          <Input type=\"select\" name=\"title\" id=\"title\"\r\n                            // onBlur={(e) => this.selectType(e.target.value, 'title')}\r\n                            onChange={(e) => this.selectType(e.target.value, 'title')} value={this.state.title}\r\n                          >\r\n                            <option value=''>{t(\"contactDetails:Title.defaultValue\")}</option>\r\n                            {this.state.titleArray.map((title, i) => {\r\n                              return (<option value={title.StringMapKey} key={i}>{title.StringMapName}</option>)\r\n                            })\r\n                            }\r\n                          </Input>\r\n                          <em id=\"titleError\" className=\"error invalid-feedback\" ></em>\r\n                          {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:Title.error\")}</em> */}\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col md=\"3\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:FirstName.label\")}*</label>\r\n                          <Input type=\"text\" name=\"forename\" id=\"forename\" placeholder={t(\"contactDetails:FirstName.label\")}\r\n                            onChange={(e) => this.handleChange(e)} value={this.state.forename}\r\n                            // onBlur={(e) => this.setValues(e)} \r\n                            className=\"\" autoComplete=\"of\" maxLength=\"26\"\r\n                          />\r\n                          <em id=\"forenameError\" className=\"error invalid-feedback\" ></em>\r\n                          {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:FirstName.error_blank\")}</em> */}\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col md=\"3\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:LastName.label\")}*</label>\r\n                          <Input type=\"text\" name=\"surname\" id=\"surname\" placeholder={t(\"contactDetails:LastName.label\")}\r\n                            onChange={(e) => this.handleChange(e)} value={this.state.surname}\r\n                            // onBlur={(e) => this.handleChange(e)} \r\n                            className=\"\" autoComplete=\"of\" maxLength=\"26\"\r\n                          />\r\n                          <em id=\"surnameError\" className=\"error invalid-feedback\" ></em>\r\n                          {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:LastName.error_blank\")}</em> */}\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col md=\"3\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:Salutation.label\")}*</label>\r\n                          <Input type=\"text\" name=\"salutation\" id=\"salutation\" placeholder={t(\"contactDetails:Salutation.label\")}\r\n                            onChange={(e) => this.handleChange(e)} value={this.state.salutation}\r\n                            // onBlur={(e) => this.handleChange(e)} \r\n                            className=\"\" autoComplete=\"of\"\r\n                          />\r\n                          <em id=\"salutationError\" className=\"error invalid-feedback\" ></em>\r\n                          {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:Salutation.error_blank\")}</em> */}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  ) : null\r\n                  }\r\n\r\n                  {(((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) ||(this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) ? (\r\n                    <Row>\r\n                      {(this.state.isInternalStaff) ? (null) : (\r\n                        <Col md=\"3\">\r\n                          <div className=\"input-box\">\r\n                            <label>{t(\"contactDetails:PassportNumber.label\")}</label>\r\n                            <Input type=\"text\" name=\"passportno\" id=\"passportno\" placeholder={t(\"contactDetails:PassportNumber.label\")}\r\n                              onChange={(e) => this.handleChange(e)} value={this.state.passportno}\r\n                              // onBlur={(e) => this.handleChange(e)} \r\n                              className=\"\" autoComplete=\"of\" maxLength=\"9\"\r\n                            />\r\n                            <em className=\"error invalid-feedback\" id=\"passportnoError\"></em>\r\n                            {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:PassportNumber.error_pattern\")}</em> */}\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n\r\n                      {(this.state.isInternalStaff) ? (null) : (\r\n                        <Col md=\"3\">\r\n                          <div className=\"input-box\">\r\n                            <label>{t(\"contactDetails:PassportCountry.label\")}</label>\r\n                            {/* <AutoComplete value={this.state.countryShown} suggestions={this.state.filteredCountriesSingle} \r\n                            completeMethod={(e) => this.filterSingle(e, 'passportcountry')} field=\"label\"\r\n                            size={20} placeholder={t(\"contactDetails:PassportCountry.label\")} minLength={1} \r\n                            onChange={(e) => this.setState({ countryShown: e.value })}\r\n                            onSelect={(e) => this.selectType(e.value.StringMapKey, 'country')}\r\n                            // onFocus={(e) => this.filterSingle(e, 'passportcountry')}\r\n                          /> */}\r\n                            <Select options={this.state.countryArray} value={this.state.country}\r\n                              onChange={(data) => this.selectType(data, 'country')}\r\n                              placeholder={t(\"contactDetails:PassportCountry.label\")}\r\n                            />\r\n                            {/* <Input type=\"select\" name=\"country\" id=\"country\" onChange={(e) => this.selectType(e.target.value, 'country')} value={this.state.country}>\r\n                            <option value=''>Select Country</option>\r\n                            {this.state.countryArray.map((country, i) => {\r\n                              return (<option value={country.StringMapKey}>{country.StringMapName}</option>)\r\n                            })\r\n                            }\r\n                          </Input> */}\r\n                          </div>\r\n                        </Col>\r\n                      )}\r\n\r\n                      <Col md=\"3\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:BusinessType.label\")}*</label>\r\n                          <AutoComplete value={this.state.businesstype} suggestions={this.state.filteredBusinessSingle}\r\n                            completeMethod={(e) => this.filterSingle(e, 'businesstype')} field=\"label\" size={25}\r\n                            placeholder={t(\"contactDetails:BusinessType.label\")} minLength={1} onChange={(e) => this.setState({ businesstype: e.value })}\r\n                            name=\"businesstype\" id=\"businesstype\" className=\"\" onSelect={(e) => this.selectType(e.value.value, 'businesstype')}\r\n                          />\r\n                          {/* <Select options={this.state.BusinessArray} value={this.state.businesstype} \r\n                            onChange={(data) => this.selectType(data, 'businesstype')} id=\"businesstype\"\r\n                            placeholder={t(\"contactDetails:BusinessType.label\")} className=\"\" name=\"businesstype\"\r\n                            // onBlur={(e) => this.selectType(e.target.value, 'businesstype')} \r\n                          /> */}\r\n                          <em className=\"error invalid-feedback\" id=\"businessTypeError\"></em>\r\n                        </div>\r\n                      </Col>\r\n\r\n                    </Row>\r\n                  ) : (this.state.isCompany === 'Company') ? (\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:CompanyIdentifier.label\")}</label>\r\n                          <Input type=\"text\" name=\"companyIdentifier\" id=\"companyIdentifier\" onBlur={(e) => this.handleChange(e)}\r\n                            placeholder={t(\"contactDetails:CompanyIdentifier.label\")} onChange={(e) => this.handleChange(e)}\r\n                            value={this.state.companyIdentifier} className=\"\" autoComplete=\"of\"\r\n                          />\r\n                          <em className=\"error invalid-feedback\" id=\"companyIdentifierError\"></em>\r\n                          {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:CompanyIdentifier.error_blank\")}</em> */}\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col md=\"3\">\r\n                        <div className=\"input-box\">\r\n                          <label>{t(\"contactDetails:BusinessType.label\")}</label>\r\n                          <AutoComplete value={this.state.businesstype} suggestions={this.state.filteredBusinessSingle}\r\n                            completeMethod={(e) => this.filterSingle(e, 'businesstype')} field=\"label\" size={25}\r\n                            placeholder={t(\"contactDetails:BusinessType.label\")} minLength={1} onChange={(e) => this.setState({ businesstype: e.value })}\r\n                            name=\"businesstype\" id=\"businesstype\" className=\"\" onSelect={(e) => this.selectType(e.value.value, 'businesstype')}\r\n                          />\r\n                          {/* <Select options={this.state.BusinessArray} value={this.state.businesstype}\r\n                            onChange={(data) => this.selectType(data, 'businesstype')} id=\"businesstype\"\r\n                            placeholder={t(\"contactDetails:BusinessType.label\")} className=\"\" name=\"businesstype\"\r\n                          // onBlur={(e) => this.selectType(e.target.value, 'businesstype')} \r\n                          /> */}\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  ) : null\r\n                  }\r\n\r\n                </Col>\r\n              </Row>\r\n\r\n              {(((this.state.isCompany === 'Individual') || (this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client'))||(this.state.isCompany === 'Company' && this.state.selectedContactType === 'Client')) ? (\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"input-box\">\r\n                      <label>{t(\"contactDetails:Gender\")}*</label>\r\n                      <div className=\"button-group\">\r\n                        {this.state.genderArray.map((gender, i) => {\r\n                          return (<Button key={i} onClick={() => this.selectType(gender.value, 'gender')} // active={this.state.gender}\r\n                            color={this.state.gender === gender.label ? 'primary' : 'secondary'} style={(i === this.state.genderArray.length) ? { marginLeft: 10 } : { marginRight: 10 }}>\r\n                            <i className={gender.image}></i>\r\n                            {t(\"contactDetails:\" + gender.label + \"\")}\r\n                            {(this.state.gender === gender.label) ? <i className=\"fa fa-check icon-rt\"></i> : null}\r\n                          </Button>);\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {(this.state.isInternalStaff) ? (null) : (\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:DOB.label\")}</label>\r\n                        <InputGroup>\r\n                          <Input type=\"date\" name=\"dob\" id=\"dob\" placeholder=\"Date of Birth\"\r\n                            // onBlur={(e) => this.handleChange(e)}\r\n                            onChange={(e) => this.handleChange(e)} value={this.state.dob}\r\n                            min={moment().subtract(100, 'years').format('YYYY-MM-DD')}\r\n                            max={moment().subtract(12, 'years').format('YYYY-MM-DD')}\r\n                          />\r\n                          <em className=\"error invalid-feedback\" id=\"DOBError\"></em>\r\n                          {/* <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"fa fa-calendar\" onClick={() => this.toggle('dob')} ></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon> */}\r\n                        </InputGroup>\r\n                        {/* <DatePicker name=\"dob\" onChange={e => this.handleDobChange(e)}\r\n                        value={this.state.dob} maxDate={moment().subtract(12, 'years').toDate()} minDate={moment().subtract(100, 'years').toDate()}\r\n                        className=\"\" calendarClassName=\"\" \r\n                      /> */}\r\n\r\n                        {/* <em className=\"error invalid-feedback\" id=\"DOBError\">{t(\"contactDetails:DOB.error\")}</em> */}\r\n                      </div>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              ) : null\r\n              }\r\n\r\n              {/* Address - START */}\r\n              {(this.state.isInternalStaff) ? (null) : (\r\n                <div>\r\n                  <div className=\"form-heading\">\r\n                    <h3>{t(\"contactDetails:Address\")}</h3>\r\n                  </div>\r\n\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:Country.label\")}*</label>\r\n                        {/* <AutoComplete value={this.state.addrCountryShown} suggestions={this.state.filteredAddressCountriesSingle}\r\n                      completeMethod={(e) => this.filterSingle(e, 'addresscountry')} field=\"label\" size={15}\r\n                      placeholder={t(\"contactDetails:Country.label\")} minLength={1} onChange={(e) => this.setState({ addrCountryShown: e.value })}\r\n                      name=\"addrCountry\" id=\"addrCountry\" className=\"\" onSelect={(e) => this.selectType(e.value.stringmapid, 'addrCountry')}\r\n                    /> */}\r\n                        {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:Country.error\")}</em> */}\r\n\r\n                        <Select options={this.state.countryArray}\r\n                          onChange={(data) => this.selectType(data, 'addrCountry')}\r\n                          // onBlur={(data) => this.selectType(data, 'addrCountry')}\r\n                          // onChange={(data) => this.setState({ addrCountry: data })}\r\n                          value={this.state.addrCountry} className=\"\" id=\"addrCountry\"\r\n                          placeholder={t(\"contactDetails:Country.label\")} name=\"addrCountry\"\r\n                        />\r\n                        <em className=\"error invalid-feedback\" id=\"addrCountryError\"></em>\r\n                        {/* <Input type=\"select\" name=\"addrCountry\" id=\"addrCountry\" onChange={(e) => this.selectType(e.target.value, 'addrCountry')} value={this.state.addrCountry}>\r\n                    <option value=''>Select Country</option>\r\n                    {this.state.countryArray.map((country, i) => {\r\n                      return (<option value={country.countryid}>{country.countryname}</option>)\r\n                    })\r\n                    }\r\n                  </Input> */}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:Line1.label\")}*</label>\r\n                        <Input name=\"addrline1\" type=\"text\" id=\"addrline1\" className=\"\"\r\n                          placeholder={t(\"contactDetails:Line1.placeholder\")}\r\n                          // onBlur={e => this.handleChange(e)} \r\n                          autoComplete=\"of\"\r\n                          onChange={e => this.handleChange(e)} value={this.state.addrline1}\r\n                        />\r\n                        <em className=\"error invalid-feedback\" id=\"line1Error\"></em>\r\n                        {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:Line1.error_blank\")}</em> */}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:Line2.label\")}</label>\r\n                        <Input name=\"addrline2\" type=\"text\" id=\"addrline2\" className=\"\"\r\n                          placeholder={t(\"contactDetails:Line2.placeholder\")} onChange={e => this.handleChange(e)}\r\n                          value={this.state.addrline2}\r\n                          // onBlur={e => this.handleChange(e)}\r\n                          autoComplete=\"of\"\r\n                        />\r\n                        <em className=\"error invalid-feedback\" id=\"line2Error\"></em>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:Line3.label\")}</label>\r\n                        <Input name=\"addrline3\" type=\"text\" id=\"addrline3\" className=\"\"\r\n                          placeholder={t(\"contactDetails:Line3.placeholder\")} onChange={e => this.handleChange(e)}\r\n                          value={this.state.addrline3}\r\n                          //  onBlur={e => this.handleChange(e)} \r\n                          autoComplete=\"of\"\r\n                        />\r\n                        <em className=\"error invalid-feedback\" id=\"line3Error\"></em>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md=\"2\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:County.label\")}*</label>\r\n                        {/* <Select options={this.state.stateArray}\r\n                    onChange={(data) => this.setState({ state: data })}\r\n                    value={this.state.state}\r\n                  /> */}\r\n                        {/* <Input type=\"select\" name=\"addrstate\" id=\"addrstate\" onChange={(e) => this.selectType(e.target.value, 'addrstate')} value={this.state.state}>\r\n                    <option value=''>Select County</option>\r\n                    {this.state.stateArray.map((state, i) => {\r\n                      return (<option value={state.stringmapid}>{state.stringmapname}</option>)\r\n                    })\r\n                    }\r\n                  </Input> */}\r\n                        {/* <AutoComplete value={this.state.stateShown} suggestions={this.state.filteredStateSingle}\r\n                          completeMethod={(e) => this.filterSingle(e, 'addrstate')} field=\"label\" size={15}\r\n                          placeholder={t(\"contactDetails:County.placeholder\")} minLength={1} onChange={(e) => this.setState({ stateShown: e.value })}\r\n                          name=\"addrstate\" id=\"addrstate\" className=\"\" onSelect={(e) => this.selectType(e.value.StringMapKey, 'state')}\r\n                        /> */}\r\n                        <AutoComplete value={this.state.state} suggestions={this.state.filteredStateSingle}\r\n                          completeMethod={(e) => this.filterSingle(e, 'addrstate')} field=\"label\" size={15}\r\n                          placeholder={t(\"contactDetails:County.placeholder\")} minLength={1}\r\n                          onChange={(e) => this.countydata(e)}\r\n                          name=\"addrstate\" id=\"addrstate\" className=\"\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:Town.label\")}</label>\r\n                        <AutoComplete value={this.state.cityShown} suggestions={this.state.filteredCitySingle} completeMethod={(e) => this.filterSingle(e, 'city')} field=\"label\"\r\n                          size={25} placeholder={t(\"contactDetails:Town.placeholder\")} minLength={1} onChange={(e) => this.setState({ cityShown: e.value })}\r\n                          onSelect={(e) => this.selectType(e.value.StringMapName, 'city')}\r\n                        />\r\n                        {/* <Select options={this.state.cityArray}\r\n                    onChange={(data) => this.setState({ city: data })}\r\n                    value={this.state.city}\r\n                  /> */}\r\n                        {/* <Input type=\"select\" name=\"addrcity\" id=\"addrcity\" onChange={(e) => this.selectType(e.target.value, 'addrcity')} value={this.state.city}>\r\n                    <option value=''>Select Town</option>\r\n                    {this.state.cityArray.map((city, i) => {\r\n                      return (<option value={city.stringmapid}>{city.stringmapname}</option>)\r\n                    })\r\n                    }\r\n                  </Input> */}\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"2\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:PostalCode.label\")}</label>\r\n                        <Input name=\"postalcode\" type=\"text\" id=\"postalcode\" className=\"\" maxLength=\"8\"\r\n                          placeholder={t(\"contactDetails:PostalCode.label\")} onChange={e => this.handleChange(e)}\r\n                          value={this.state.postalcode}\r\n                          //  onBlur={e => this.handleChange(e)} \r\n                          autoComplete=\"of\"\r\n                        />\r\n                        <em className=\"error invalid-feedback\" id=\"postalcodeError\"></em>\r\n                        {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:PostalCode.error_blank\")}</em> */}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              )}\r\n              {/* Address - END */}\r\n\r\n              <div className=\"form-heading\">\r\n                <h3>{t(\"contactDetails:PhoneHeader\")}</h3>\r\n              </div>\r\n\r\n              <Row>\r\n                <Col md=\"2\">\r\n                  <div className=\"input-box\">\r\n                    <label>{t(\"contactDetails:PhoneType.label\")}*</label>\r\n                    <Input type=\"select\" name=\"phonetype\" id=\"phonetype\"\r\n                      // onBlur={(e) => this.selectType(e.target.value, 'phonetype')}\r\n                      onChange={(e) => this.selectType(e.target.value, 'phonetype')} value={this.state.phonetype}\r\n                    >\r\n                      {/* <option value=''>{t(\"contactDetails:PhoneType.defaultValue\")}</option> */}\r\n                      {this.state.phoneTypes.map((phonetype, i) => {\r\n                        return (<option value={phonetype.StringMapKey} key={i}>{phonetype.StringMapName}</option>)\r\n                      })\r\n                      }\r\n                    </Input>\r\n                    <em className=\"error invalid-feedback\" id=\"phoneTypeError\"></em>\r\n                    {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:PhoneType.error\")}</em> */}\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col md=\"3\">\r\n                  <div className=\"input-box\">\r\n                    <label>{t(\"contactDetails:CountryCode.label\")}*</label>\r\n                    {/* <Dropdown value={this.state.countrycode} options={this.state.countryCodeArray} \r\n                    name=\"countrycode\" id=\"countrycode\" filter={false} showClear={false}\r\n                    onChange={(e) => this.selectType(e.target.value, 'countrycode')} itemTemplate={this.countryCodeTemplate}\r\n                  /> */}\r\n                    <InputGroup className=\"mb-3\">\r\n                      {(this.state.countryflag !== '') ? (\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className={this.state.countryflag} title={this.state.selectedCountry}></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                      ) : null\r\n                      }\r\n                      <Input type=\"select\" name=\"countrycode\" id=\"countrycode\"\r\n                        // onBlur={(e) => this.selectType(e.target.value, 'countrycode')}\r\n                        onChange={(e) => this.selectType(e.target.value, 'countrycode')} value={this.state.countrycode}\r\n                      >\r\n                        <option value=''>{t(\"contactDetails:CountryCode.defaultValue\")}</option>\r\n                        {this.state.countryCodeArray.map((country, i) => {\r\n                          return (<option value={country.CountryCode} key={i}>\r\n                            ({country.CountryCode}) {country.CountryName}\r\n                          </option>\r\n                          )\r\n                        })\r\n                        }\r\n                      </Input>\r\n                      <em className=\"error invalid-feedback\" id=\"countrycodeError\"></em>\r\n                      {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:CountryCode.error\")}</em> */}\r\n                    </InputGroup>\r\n                  </div>\r\n                </Col>\r\n\r\n                {(this.state.landLineSelected) ?\r\n                  <Col md=\"2\">\r\n                    <div className=\"input-box\">\r\n                      <label>{t(\"contactDetails:AreaCode.label\")}</label>\r\n                      <Input type=\"text\" name=\"phoneAreaCode\" id=\"phoneAreaCode\" placeholder={t(\"contactDetails:AreaCode.placeholder\")}\r\n                        onChange={(e) => this.handleChange(e)}\r\n                        // onBlur={(e) => this.handleChange(e)}\r\n                        value={this.state.phoneAreaCode} autoComplete=\"of\" className=\"\" maxLength=\"6\"\r\n                      />\r\n                      <em className=\"error invalid-feedback\" id=\"areaCodeError\"></em>\r\n                    </div>\r\n                  </Col> : null\r\n                }\r\n\r\n                <Col md=\"2\">\r\n                  <div className=\"input-box\">\r\n                    <label>{t(\"contactDetails:Phone.label\")}*</label>\r\n                    <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder={t(\"contactDetails:Phone.placeholder\")}\r\n                      onChange={(e) => this.handleChange(e)} value={this.state.phoneNumber} className=\"\"\r\n                      // onBlur={(e) => this.handleChange(e)} \r\n                      autoComplete=\"of\" maxLength=\"15\"\r\n                    />\r\n                    <em className=\"error invalid-feedback\" id=\"phoneNumberError\"></em>\r\n                    {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:Phone.error_blank\")}</em> */}\r\n                  </div>\r\n                </Col>\r\n\r\n                {/* {(this.state.extSelected) ?\r\n                <Col md=\"2\">\r\n                  <div className=\"input-box\">\r\n                    <label>Ext</label>\r\n                    <Input type=\"text\" name=\"ext\" id=\"ext\" className=\"\" placeholder=\"Ext\" onChange={(e) => this.handleChange(e)} value={this.state.ext} />\r\n                    <em className=\"error invalid-feedback\" >Please enter valid ext</em>\r\n                  </div>\r\n                </Col> : null\r\n              } */}\r\n\r\n                <Col md=\"3\">\r\n                  {(this.state.isEditPhone) ?\r\n                    (\r\n                      <div className=\"add-btn\">\r\n                        <Button title={UpdateButton} color=\"primary\" onClick={() => this.addToList('phoneList')} style={{ marginRight: 10 }}>\r\n                          <i className=\"fa fa-check\"></i>\r\n                          {/* {this.state.isEditEmail ? EditButton : AddButton} */}\r\n                        </Button>\r\n                        <Button title={CloseButton} color=\"secondary\" onClick={() => this.reset('phoneModal')} style={{ marginLeft: 10 }}>\r\n                          <i className=\"fa fa-close\"></i>\r\n                          {/* {CloseButton} */}\r\n                        </Button>\r\n                        <Button onClick={() => this.toggle('landline')} className=\"px-0\" color=\"link\" style={{ marginRight: 0 }}>\r\n                          {t(\"contactDetails:\" + this.state.landLineLabel + \"\")}\r\n                        </Button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"add-btn\">\r\n                        <Button title={AddButton} color=\"primary\" onClick={() => this.addToList('phoneList')}>\r\n                          <i className=\"fa fa-plus\"></i>\r\n                          {/* {this.state.isEditEmail ? EditButton : AddButton} */}\r\n                        </Button>\r\n                        <Button style={{ marginLeft: 5 }} color='link' className=\"px-0\" onClick={() => this.toggle('landline')}>\r\n                          {t(\"contactDetails:\" + this.state.landLineLabel + \"\")}\r\n                        </Button>\r\n                      </div>\r\n                    )\r\n                  }\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"button-group\">\r\n                    <a onClick={() => this.toggle('landline')} className=\"btn btn-primary\" href=\"javascript:void(0)\" style={{ marginRight: 10 }}>\r\n                      {this.state.landLineLabel}\r\n                    </a>\r\n                    <a onClick={() => this.toggle('ext')} href=\"javascript:void(0)\" style={{ marginLeft: 10 }}>\r\n                        {this.state.extensionLabel}\r\n                      </a>\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div style={{ marginTop: 10 }} className=\"input-box\">\r\n                    <table className=\"added-detail-table\">\r\n                      <thead></thead>\r\n\r\n                      <tbody>\r\n                        {this.state.phoneList.map((ph, i) => {\r\n                          if (!ph.isDeleted) {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>\r\n                                  <span>\r\n                                    {this.getType('phone', ph)}\r\n                                  </span>\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <span>\r\n                                    {this.formatPhone(ph)}\r\n                                  </span>\r\n                                </td>\r\n\r\n                                {/* <td style={{marginRight: 10}}>\r\n                                    <span>\r\n                                      {ph.ext}\r\n                                    </span>\r\n                                  </td> */}\r\n\r\n                                <td>\r\n                                  {(ph.ispreferred) ?\r\n                                    <span>{t(\"contactDetails:PhonePrimary\")}</span> :\r\n                                    <span>\r\n                                      <Button color=\"link\" onClick={() => this.makePrimary(ph, 'phone')} className=\"px-0\">{t(\"contactDetails:PhoneMakePrimary\")}</Button>\r\n                                    </span>\r\n                                  }\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <span>\r\n                                    <Button title={EditButton} onClick={() => this.edit(ph, 'phone')} style={{ marginRight: 5 }} color=\"primary\">\r\n                                      <i className=\"fa fa-pencil\"></i>\r\n                                    </Button>\r\n                                    {(!ph.ispreferred) ?\r\n                                      <Button title={DeleteButton} onClick={() => this.confirmDelete(ph, 'phone')} style={{ marginLeft: 5 }} color=\"danger\">\r\n                                        <i className=\"fa fa-trash\"></i>\r\n                                      </Button> :\r\n                                      null\r\n                                    }\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                            )\r\n                          }\r\n                        })\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                    {/* {this.state.phoneList.map((ph, i) => {\r\n                        if (!ph.isDeleted) {\r\n                          return (<div className=\"row\">\r\n                            <div className=\"col-md-2\">\r\n                              <p>{this.getType('phone', ph)}</p>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                              <span>{this.formatPhone(ph)}</span>\r\n                            </div>\r\n                            <div className=\"col-md-1\">\r\n                              <span>{ph.ext}</span>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                              {(ph.ispreferred) ?\r\n                                <p>Primary</p> :\r\n                                <a onClick={() => this.makePrimary(ph, 'phone')}>Make Primary</a>\r\n                              }\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                              <span>\r\n                                <Button onClick={() => this.edit(ph, 'phone')} style={{ marginRight: 5 }} color=\"primary\">\r\n                                  <i className=\"fa fa-pencil\"></i>\r\n                                </Button>\r\n                                {(!ph.ispreferred) ?\r\n                                  <Button onClick={() => this.delete(ph, 'phone')} style={{ marginLeft: 5 }} color=\"danger\">\r\n                                    <i className=\"fa fa-trash\"></i>\r\n                                  </Button> :\r\n                                  null\r\n                                }\r\n                              </span>\r\n                            </div>\r\n                          </div>)\r\n                        }\r\n                      })\r\n                      } */}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <div className=\"form-heading\">\r\n                <h3>{t(\"contactDetails:EmailHeader\")}</h3>\r\n              </div>\r\n\r\n              <Row>\r\n\r\n                {/* <Button className=\"pull-right\" color=\"primary\" onClick={() => this.setState({ visibleEmailmodal: true })}>\r\n                  <i className=\"fa fa-plus\"></i>\r\n                </Button>\r\n                <hr /> */}\r\n\r\n                <Col md=\"2\">\r\n                  {/* <Col>\r\n                  <label>Email Type</label>\r\n                </Col> */}\r\n                  {/* <Col> */}\r\n                  <div className=\"input-box\">\r\n                    <label>{t(\"contactDetails:EmailType.label\")}*</label>\r\n                    <Input type=\"select\" name=\"emailtype\" id=\"emailtype\"\r\n                      //  onBlur={(e) => this.selectType(e.target.value, 'emailtype')}\r\n                      onChange={(e) => this.selectType(e.target.value, 'emailtype')} value={this.state.emailtype}>\r\n                      {/* <option value=''>{t(\"contactDetails:EmailType.defaultValue\")}</option> */}\r\n                      {this.state.emailTypes.map((emailtype, i) => {\r\n                        return (<option value={emailtype.StringMapKey} key={i}>{emailtype.StringMapName}</option>)\r\n                      })\r\n                      }\r\n                    </Input>\r\n                    <em className=\"error invalid-feedback\" id=\"emailTypeError\"></em>\r\n                    {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:EmailType.error\")}</em> */}\r\n                  </div>\r\n                  {/* </Col> */}\r\n                </Col>\r\n\r\n                <Col md=\"4\">\r\n                  {/* <Col>\r\n                    <label>Email</label>\r\n                </Col> */}\r\n                  {/* <Col> */}\r\n                  <div className=\"input-box\">\r\n                    <label>{t(\"contactDetails:Email.label\")}*</label>\r\n                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder={t(\"contactDetails:Email.placeholder\")}\r\n                      onChange={(e) => this.handleChange(e)} value={this.state.email} autoComplete=\"of\"\r\n                      // onBlur={(e) => this.handleChange(e)}\r\n                      className=\"\"\r\n                    />\r\n                    <em className=\"error invalid-feedback\" id=\"emailError\"></em>\r\n                    {/* <em className=\"error invalid-feedback\" >{t(\"contactDetails:Email.error_blank\")}</em> */}\r\n                  </div>\r\n                  {/* </Col> */}\r\n                </Col>\r\n\r\n                <Col md=\"2\">\r\n                  {(this.state.isEditEmail) ?\r\n                    (\r\n                      <div className=\"add-btn\">\r\n                        <Button title={UpdateButton} color=\"primary\" onClick={() => this.addToList('emailList')} style={{ marginRight: 5 }}>\r\n                          <i className=\"fa fa-check\"></i>\r\n                          {/* {this.state.isEditEmail ? EditButton : AddButton} */}\r\n                        </Button>\r\n                        <Button title={CloseButton} color=\"secondary\" onClick={() => this.reset('emailModal')} style={{ marginLeft: 5 }}>\r\n                          <i className=\"fa fa-close\"></i>\r\n                          {/* {CloseButton} */}\r\n                        </Button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"add-btn\">\r\n                        <Button title={AddButton} color=\"primary\" onClick={() => this.addToList('emailList')} style={{ marginRight: 5 }}>\r\n                          <i className=\"fa fa-plus\"></i>\r\n                          {/* {this.state.isEditEmail ? EditButton : AddButton} */}\r\n                        </Button>\r\n                      </div>\r\n                    )\r\n                  }\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div style={{ marginTop: 10 }} className=\"input-box\">\r\n                    <table className=\"added-detail-table\">\r\n                      <thead></thead>\r\n\r\n                      <tbody>\r\n                        {this.state.emailList.map((email, i) => {\r\n                          if (!email.isDeleted) {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td>\r\n                                  <span>\r\n                                    {this.getType('email', email)}\r\n                                  </span>\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <span>\r\n                                    {email.email}\r\n                                  </span>\r\n                                </td>\r\n\r\n                                <td>\r\n                                  {(email.ispreferred) ?\r\n                                    <span>{t(\"contactDetails:EmailPrimary\")}</span> :\r\n                                    <span>\r\n                                      <Button color=\"link\" className=\"px-0\" onClick={() => this.makePrimary(email, 'email')}>{t(\"contactDetails:EmailMakePrimary\")}</Button>\r\n                                    </span>\r\n                                  }\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <span>\r\n                                    <Button title={EditButton} color=\"primary\" onClick={() => this.edit(email, 'email')} style={{ marginRight: 5 }}>\r\n                                      <i className=\"fa fa-pencil\"></i>\r\n                                    </Button>\r\n                                    {(!email.ispreferred) ?\r\n                                      <Button title={DeleteButton} color=\"danger\" onClick={() => this.confirmDelete(email, 'email')} style={{ marginLeft: 5 }}>\r\n                                        <i className=\"fa fa-trash\"></i>\r\n                                      </Button>\r\n                                      :\r\n                                      null\r\n                                    }\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                            )\r\n                          }\r\n                        })\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n\r\n                    {/* {this.state.emailList.map((email, i) => {\r\n                    if (!email.isDeleted) {\r\n                      return (<div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                          <p>{this.getType('email', email)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-5\">\r\n                          <p>{email.email}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3\">\r\n                          {(email.ispreferred) ?\r\n                            <p>Primary</p> :\r\n                            <a onClick={() => this.makePrimary(email, 'email')}>Make Primary</a>\r\n                          }\r\n                        </div>\r\n\r\n                        <div className=\"col-md-2\">\r\n                          <span>\r\n                            <Button color=\"primary\" onClick={() => this.edit(email, 'email')} style={{ marginRight: 5 }}>\r\n                              <i className=\"fa fa-pencil\"></i>\r\n                            </Button>\r\n                            {(!email.ispreferred) ?\r\n                              <Button color=\"danger\" onClick={() => this.delete(email, 'email')} style={{ marginLeft: 5 }}>\r\n                                <i className=\"fa fa-trash\"></i>\r\n                              </Button>\r\n                              :\r\n                              null\r\n                            }\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      )\r\n                    }\r\n                  })\r\n                  } */}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* Contact Preference & Contact Mode - START */}\r\n              {(this.state.isInternalStaff) ? (null) : (\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <div className=\"input-box rc-box\">\r\n                      <label>{t(\"contactDetails:ContactPreference\")}</label>\r\n                      <div className=\"rc-inline\">\r\n                        <label>\r\n                          <Input type=\"radio\" name=\"contactPreference\" checked={(this.state.radioSelected === 'oktocontact') ? true : false}\r\n                            value={this.state.radioSelected} onChange={() => this.onRadioBtnClick('contactPreference', 'oktocontact')}\r\n                          />\r\n                          {t(\"contactDetails:OktoContact\")}\r\n                        </label>\r\n\r\n                        <label>\r\n                          <Input type=\"radio\" name=\"contactPreference\" checked={(this.state.radioSelected === 'donotcontact') ? true : false}\r\n                            value={this.state.radioSelected} onChange={() => this.onRadioBtnClick('contactPreference', 'donotcontact')} />\r\n                          {t(\"contactDetails:DonotContact\")}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"6\">\r\n                    {(this.state.radioSelected === 'donotcontact')\r\n                      ? (null)\r\n                      : (<div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:ContactMode\")}</label>\r\n                        <div className=\"rc-inline\">\r\n                          {this.state.contactModes.map((cm, i) => {\r\n                            return (\r\n                              <label key={i}>\r\n                                <Input type='checkbox' name='contactmode' value={cm.StringMapKey} checked={cm.isSelected}\r\n                                  onChange={(e) => this.checked(e.target.checked, cm)} /*disabled={this.state.radioSelected === 'donotcontact' ? true : false}*/ />\r\n                                {cm.StringMapName}\r\n                              </label>\r\n                            )\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                      )}\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n              {/* Contact Preference & Contact Mode - END */}\r\n\r\n              {/* Document Delivery - START */}\r\n              {(this.state.isInternalStaff) ? (null) : (\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <div className=\"input-box rc-box\">\r\n                      <label>{t(\"contactDetails:DocumentDelivery.label\")}*</label>\r\n                      <div className=\"rc-inline\">\r\n                        <label>\r\n                          <Input type=\"radio\" name=\"docdelivery\" checked={(this.state.docdeliverySelected === 'email') ? true : false}\r\n                            value={this.state.docdeliverySelected} onChange={() => this.onRadioBtnClick('docdelivery', 'email')} />\r\n                          {t(\"contactDetails:DocumentDelivery.Email\")}\r\n                        </label>\r\n\r\n                        <label>\r\n                          <Input type=\"radio\" name=\"docdelivery\" checked={(this.state.docdeliverySelected === 'post') ? true : false}\r\n                            value={this.state.docdeliverySelected} onChange={() => this.onRadioBtnClick('docdelivery', 'post')} />\r\n                          {t(\"contactDetails:DocumentDelivery.Post\")}\r\n                        </label>\r\n\r\n                        <label>\r\n                          <Input type=\"radio\" name=\"docdelivery\" checked={(this.state.docdeliverySelected === 'both') ? true : false}\r\n                            value={this.state.docdeliverySelected} onChange={() => this.onRadioBtnClick('docdelivery', 'both')} />\r\n                          {t(\"contactDetails:DocumentDelivery.Both\")}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n              {/* Document Delivery - END */}\r\n\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <label>{t(\"contactDetails:Notes.label\")}</label>\r\n                  <Input name=\"note\" type=\"textarea\" id=\"note\" className=\"\" onChange={e => this.handleChange(e)} value={this.state.note} />\r\n                </Col>\r\n              </Row>\r\n\r\n              {( this.state.selectedContactName === 'ServiceCenter' || this.state.selectedContactName === 'Service-Center' || this.state.selectedContactName === 'Service Center') ? (\r\n                <div>\r\n                  <Row style={{ marginTop: 10 }}>\r\n                  <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:CommissionPayable.label\")}</label>\r\n                         <Input type=\"select\" name=\"CommissionPayable\" id=\"CommissionPayable\"\r\n                          onChange={(e) => this.selectType(e.target.value, 'CommissionPayable')} value={this.state.CommissionPayable}>\r\n                          {this.state.CommissionPayables.map((CommissionPayable, i) => {\r\n                            return (<option value={CommissionPayable.StringMapKey} key={i}>{CommissionPayable.StringMapName}</option>)\r\n                          })\r\n                      }\r\n                    </Input>\r\n                        <em className=\"error invalid-feedback\" id=\"CommissionPayableError\"></em>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              ) : null\r\n              }\r\n\r\n              {(this.state.selectedContactName === 'SubAgent' || this.state.selectedContactName === 'ServiceCenter' || this.state.selectedContactName === 'Sub-Agent' || this.state.selectedContactName === 'Service-Center' || this.state.selectedContactName === 'Service Center') ? (\r\n                <div>\r\n                  <Row style={{ marginTop: 10 }}>\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:CentralBankCode.label\")}</label>\r\n                        <Input name=\"bankcode\" type=\"text\" id=\"bankcode\" className=\"\"\r\n                          onChange={e => this.handleChange(e)}\r\n                          // onBlur={e => this.handleChange(e)}\r\n                          value={this.state.bankcode}\r\n                        />\r\n                        <em className=\"error invalid-feedback\" id=\"bankcodeError\"></em>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"input-box\">\r\n                        <label>{t(\"contactDetails:commissionRate.label\")}*</label>\r\n                        <Input name=\"commission\" type=\"text\" id=\"commission\" className=\"\"\r\n                          onChange={e => this.handleChange(e)}\r\n                          // onBlur={e => this.handleChange(e)} \r\n                          value={this.state.commission}\r\n                        />\r\n                        <em className=\"error invalid-feedback\" id=\"commissionError\"></em>\r\n                      </div>\r\n                    </Col>\r\n                  \r\n                  </Row>\r\n\r\n                  {/* <Row style={{ marginTop: 10 }}>\r\n                    <Col md=\"3\">\r\n                      <label>{t(\"contactDetails:Binder.label\")}</label>\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                      <AutoComplete value={this.state.binder} suggestions={this.state.binderArray}\r\n                        completeMethod={(e) => this.filterSingle(e, 'binder')} field=\"label\" size={25}\r\n                        placeholder={t(\"contactDetails:Binder.placeholder\")} minLength={1} onChange={(e) => this.setState({ binderShown: e.value })}\r\n                        name=\"binder\" id=\"binder\" className=\"\" onSelect={(e) => this.selectType(e, 'binder')}\r\n                      />\r\n                      <Select options={this.state.binderArray}\r\n                        onChange={(data) => this.setState({ binder: data })}\r\n                        value={this.state.binder}\r\n                      />\r\n                    </Col>\r\n                  </Row> */}\r\n                </div>\r\n              ) : null\r\n              }\r\n\r\n              {/* {(this.state.selectedContactName === 'InsuranceCompany' || this.state.selectedContactName === 'Surveyor') ?\r\n                null : (\r\n                  <Row style={{ marginTop: 10 }}>\r\n                    <Col md=\"4\">\r\n                      <label>{t(\"contactDetails:AllowedLogin.label\")}</label>\r\n                      <div className=\"rc-inline\">\r\n                        <label>\r\n                          <Input type=\"radio\" name=\"allowLogin\" checked={(this.state.allowLogin === 'no') ? true : false}\r\n                            value={this.state.allowLogin} onClick={() => this.onRadioBtnClick('allowLogin', 'no')} />\r\n                          {t(\"contactDetails:AllowedLogin.No\")}\r\n                      </label>\r\n\r\n                        <label >\r\n                          <Input type=\"radio\" name=\"allowLogin\" checked={(this.state.allowLogin === 'yes') ? true : false}\r\n                            value={this.state.allowLogin} onClick={() => this.onRadioBtnClick('allowLogin', 'yes')} />\r\n                          {t(\"contactDetails:AllowedLogin.Yes\")}\r\n                      </label>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                )\r\n              } */}\r\n              {(this.state.selectedContactName === 'InsuranceCompany' || this.state.selectedContactName === 'Surveyor') ?\r\n                null : (\r\n                  <Row style={{ marginTop: 10 }}>\r\n                    <Col md=\"4\">\r\n                      <label>{t(\"contactDetails:NewUser.label\")}</label>\r\n                      <div className=\"rc-inline\">\r\n                        <label>\r\n                          <Input type=\"radio\" name=\"newuser\" checked={(this.state.newuser === 'no') ? true : false}\r\n                            value={this.state.newuser} onClick={() => this.onRadioBtnClick('newuser', 'no')} />\r\n                          {t(\"contactDetails:NewUser.No\")}\r\n                        </label>\r\n\r\n                        <label >\r\n                          <Input type=\"radio\" name=\"newuser\" checked={(this.state.newuser === 'yes') ? true : false}\r\n                            value={this.state.allowLonewusergin} onClick={() => this.onRadioBtnClick('newuser', 'yes')} />\r\n                          {t(\"contactDetails:NewUser.Yes\")}\r\n                        </label>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                )\r\n              }\r\n\r\n              {/* {(this.state.allowLogin === 'yes') ? (\r\n\r\n<div>\r\n  {(this.state.isEdit && this.state.securityuserid !== '') ?\r\n    (\r\n      <div></div>\r\n    ) : (\r\n      <Row>\r\n        <Col md=\"3\">\r\n          <div className=\"input-box\">\r\n            <label>{t(\"contactDetails:UserName.label\")}</label>\r\n            <Input name=\"username\" type=\"text\" readOnly id=\"username\" className=\"\" autoComplete=\"of\"\r\n              placeholder={t(\"contactDetails:UserName.placeholder\")} onChange={e => this.handleChange(e)} value={this.state.username}\r\n         onBlur={e => this.handleChange(e)}\r\n            />\r\n            <em className=\"error invalid-feedback\" id=\"usernameError\"></em>\r\n           <em className=\"error invalid-feedback\" >{t(\"contactDetails:UserName.error_blank\")}</em> \r\n          </div>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <div className=\"input-box input-icon\">\r\n            <label>{t(\"contactDetails:Password.label\")}</label>\r\n            <i className=\"fa fa-info-circle\" title=\"Password Rules\" id=\"rules\" onClick={() => this.toggle('rules')} style={{ marginLeft: 5 }}></i>\r\n            <InputGroup>\r\n              <Input name=\"password\" type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                id=\"password\" className=\"\" placeholder={t(\"contactDetails:Password.placeholder\")}\r\n                onChange={e => this.handlePasswordChange(e)} value={this.state.password}\r\n                 onBlur={e => this.handlePasswordChange(e)} \r\n                maxLength=\"15\"\r\n              />\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className={this.state.isShowPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\r\n                    onClick={() => this.toggle('password')} title={this.state.isShowPassword ? t(\"contactDetails:Password.password_hide\") : t(\"contactDetails:Password.password_show\")}>\r\n                  </i>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <em className=\"error invalid-feedback\" id=\"passwordError\"></em>\r\n               <em className=\"error invalid-feedback\" >{t(\"contactDetails:Password.error_blank\")}</em> \r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n\r\n        <Popover placement=\"right\" isOpen={this.state.showRules} target=\"rules\" toggle={() => this.toggle('rules')}>\r\n          <PopoverHeader>{t(\"contactDetails:PasswordRules.label\")}</PopoverHeader>\r\n          <PopoverBody style={{ marginLeft: 10, marginRight: 10 }}>\r\n            <Row>{t(\"contactDetails:PasswordRules.uppercase\")}</Row>\r\n            <Row>{t(\"contactDetails:PasswordRules.lowercase\")}</Row>\r\n            <Row>{t(\"contactDetails:PasswordRules.minlength\")}</Row>\r\n            <Row>{t(\"contactDetails:PasswordRules.specialcharacter\")}</Row>\r\n            <Row>{t(\"contactDetails:PasswordRules.number\")}</Row>\r\n             <Row>{t(\"contactDetails:PasswordRules.maxlength\")}</Row> \r\n          </PopoverBody>\r\n        </Popover>\r\n\r\n        <Col md=\"3\">\r\n          <div className=\"input-box\">\r\n            <label>{t(\"contactDetails:ConfirmPassword.label\")}</label>\r\n            <InputGroup>\r\n              <Input name=\"confirmPassword\" type={this.state.isShowConfirmPassword ? \"text\" : \"password\"}\r\n                id=\"confirmPassword\" className=\"\" placeholder={t(\"contactDetails:ConfirmPassword.placeholder\")}\r\n                onChange={e => this.handleChange(e)} value={this.state.confirmPassword}\r\n                 onBlur={e => this.handleChange(e)} \r\n                maxLength=\"15\"\r\n              />\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className={this.state.isShowConfirmPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\r\n                    onClick={() => this.toggle('confirmPassword')} title={this.state.isShowConfirmPassword ? t(\"contactDetails:ConfirmPassword.password_hide\") : t(\"contactDetails:ConfirmPassword.password_show\")}>\r\n                  </i>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <em className=\"error invalid-feedback\" id=\"confirmPasswordError\"></em>\r\n               <em className=\"error invalid-feedback\" >{t(\"contactDetails:ConfirmPassword.error_blank\")}</em> \r\n            </InputGroup>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  <Row>\r\n  <Col md=\"12\">\r\n    <h4>Password Rules</h4>\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4\">\r\n        <p id=\"capital\" className=\"invalid\" style={this.state.case1 ? {color: 'green'} : {color: 'red'}}>\r\n          One capital (upperCaseLetters) required\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"col-md-4\">\r\n        <p id=\"letter\" className=\"invalid\" style={this.state.case2 ? {color: 'green'} : {color: 'red'}}>\r\n          One small (lowerCaseLetters) required\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"col-md-4\">\r\n        <p id=\"spc\" className=\"invalid\" style={this.state.case3 ? {color: 'green'} : {color: 'red'}}>\r\n          One special character required\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4\">\r\n        <p id=\"number\" className=\"invalid\" style={this.state.case4 ? {color: 'green'} : {color: 'red'}}>\r\n          One number required\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"col-md-4\">\r\n        <p id=\"minlength\" className=\"invalid\" style={this.state.case5 ? {color: 'green'} : {color: 'red'}}>\r\n          Minimum 8 characters required\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"col-md-4\">\r\n        <p id=\"maxlength\" className=\"invalid\" style={this.state.case6 ? {color: 'green'} : {color: 'red'}}>\r\n          Maximum 15 characters allowed\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </Col>\r\n</Row>\r\n\r\n  <Row>\r\n    <Col md=\"6\">\r\n      <div className=\"input-box\">\r\n        <label>{t(\"contactDetails:Question1.label\")}*</label>\r\n        <Input type=\"select\" name=\"que1\" id=\"que1\" onChange={(data) => this.handleSecurityQuestion(data, 'que1')} value={this.state.que1}>\r\n          <option value=''>{t(\"contactDetails:Question1.defaultValue\")}</option>\r\n          {this.state.securityQuestionArray.map((que, i) => {\r\n            return (<option value={que.StringMapKey} key={i}>{que.StringMapName}</option>)\r\n          })\r\n          }\r\n        </Input>\r\n        <em className=\"error invalid-feedback\" id=\"que1Error\">Please select question</em>\r\n      </div>\r\n    </Col>\r\n\r\n    <Col md=\"6\">\r\n      <div className=\"input-box\">\r\n        <label>{t(\"contactDetails:Answer1.label\")}*</label>\r\n        <InputGroup>\r\n          <Input name=\"ans1\" type={this.state.isShowAns1 ? \"text\" : \"password\"} id=\"ans1\"\r\n            className=\"\" onChange={e => this.handleChange(e)} value={this.state.ans1}\r\n            autoComplete=\"of\" maxLength=\"50\"\r\n            onBlur={e => this.handleChange(e)}\r\n          />\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>\r\n              <i className={this.state.isShowAns1 ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\r\n                onClick={() => this.toggle('ans1')} title={this.state.isShowAns1 ? t(\"contactDetails:Answer1.hide\") : t(\"contactDetails:Answer1.show\")}>\r\n              </i>\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <em className=\"error invalid-feedback\" id=\"ans1Error\"></em>\r\n        <em className=\"error invalid-feedback\" >{t(\"contactDetails:Answer1.error_blank\")}</em>\r\n        </InputGroup>\r\n      </div>\r\n    </Col>\r\n  </Row>\r\n\r\n  <Row>\r\n    <Col md=\"6\">\r\n      <div className=\"input-box\">\r\n        <label>{t(\"contactDetails:Question2.label\")}*</label>\r\n        <Input type=\"select\" name=\"que2\" id=\"que2\" onChange={(data) => this.handleSecurityQuestion(data, 'que2')} value={this.state.que2}>\r\n          <option value=''>{t(\"contactDetails:Question2.defaultValue\")}</option>\r\n          {this.state.securityQuestionArray.map((que, i) => {\r\n            return (<option value={que.StringMapKey} key={i}>{que.StringMapName}</option>)\r\n          })\r\n          }\r\n        </Input>\r\n        <em className=\"error invalid-feedback\" id=\"que2Error\">Please select question</em>\r\n      </div>\r\n    </Col>\r\n\r\n    <Col md=\"6\">\r\n      <div className=\"input-box\">\r\n        <label>{t(\"contactDetails:Answer2.label\")}*</label>\r\n        <InputGroup>\r\n          <Input name=\"ans2\" type={this.state.isShowAns2 ? \"text\" : \"password\"}\r\n            id=\"ans2\" className=\"\" onChange={e => this.handleChange(e)}\r\n            value={this.state.ans2} autoComplete=\"of\" maxLength=\"50\"\r\n          />\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>\r\n              <i className={this.state.isShowAns2 ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\r\n                onClick={() => this.toggle('ans2')} title={this.state.isShowAns2 ? t(\"contactDetails:Answer2.hide\") : t(\"contactDetails:Answer2.show\")}>\r\n              </i>\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <em className=\"error invalid-feedback\" id=\"ans2Error\"></em>\r\n           <em className=\"error invalid-feedback\" >{t(\"contactDetails:Answer2.error_blank\")}</em> \r\n        </InputGroup>\r\n      </div>\r\n    </Col>\r\n  </Row>\r\n\r\n  <Row>\r\n    <Col md=\"6\">\r\n      <div className=\"input-box\">\r\n        <label>{t(\"contactDetails:Question3.label\")}*</label>\r\n        <Input type=\"select\" name=\"que3\" id=\"que3\" onChange={(data) => this.handleSecurityQuestion(data, 'que3')} value={this.state.que3}>\r\n          <option value=''>{t(\"contactDetails:Question3.defaultValue\")}</option>\r\n          {this.state.securityQuestionArray.map((que, i) => {\r\n            return (<option value={que.StringMapKey} key={i}>{que.StringMapName}</option>)\r\n          })\r\n          }\r\n        </Input>\r\n        <em className=\"error invalid-feedback\" id=\"que3Error\">Please select question</em>\r\n      </div>\r\n    </Col>\r\n\r\n    <Col md=\"6\">\r\n      <div className=\"input-box\">\r\n        <label>{t(\"contactDetails:Answer3.label\")}*</label>\r\n        <InputGroup>\r\n          <Input name=\"ans3\" type={this.state.isShowAns3 ? \"text\" : \"password\"}\r\n            id=\"ans3\" className=\"\" onChange={e => this.handleChange(e)}\r\n            value={this.state.ans3} autoComplete=\"of\" maxLength=\"50\"\r\n          />\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>\r\n              <i className={this.state.isShowAns3 ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\r\n                onClick={() => this.toggle('ans3')} title={this.state.isShowAns3 ? t(\"contactDetails:Answer3.hide\") : t(\"contactDetails:Answer3.show\")}>\r\n              </i>\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <em className=\"error invalid-feedback\" id=\"ans3Error\"></em>\r\n           <em className=\"error invalid-feedback\" >{t(\"contactDetails:Answer3.error_blank\")}</em> \r\n        </InputGroup>\r\n      </div>\r\n    </Col>\r\n  </Row>\r\n\r\n   <Row style={{marginTop: 10}}>\r\n  <Col md=\"3\">\r\n    <label>Did you verify the user authenticity?</label>\r\n  </Col>\r\n  <Col md=\"9\">\r\n    <Row>\r\n      <Col md=\"3\">\r\n        <FormGroup>\r\n          <label>\r\n            <Input type=\"radio\" name=\"varifyauthority\" checked={(this.state.varifyAuthority === 'yes') ? true : false}\r\n              value={this.state.varifyAuthority} onClick={() => this.onRadioBtnClick('varifyauthority', 'yes')} />\r\n            Yes\r\n          </label>\r\n        </FormGroup>\r\n      </Col>\r\n\r\n      <Col md=\"3\">\r\n        <FormGroup>\r\n          <label >\r\n            <Input type=\"radio\" name=\"varifyauthority\" checked={(this.state.varifyAuthority === 'no') ? true : false}\r\n              value={this.state.varifyAuthority} onClick={() => this.onRadioBtnClick('varifyauthority', 'no')} />\r\n            No\r\n          </label>\r\n        </FormGroup>\r\n      </Col>\r\n    </Row>\r\n  </Col>\r\n</Row> \r\n</div>\r\n) : null\r\n} */}\r\n\r\n              <Row className=\"text-center\" style={{ marginTop: 10 }}>\r\n                <Col>\r\n                  <div className=\"final-save\">\r\n                    <Button color=\"success\" onClick={() => this.saveContact()}>\r\n                      <i className=\"fa fa-check\"></i>\r\n                      {SaveButton}\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={() => this.goBack()}>\r\n                      <i className=\"fa fa-angle-left\"></i>\r\n                      {BackButton}\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n            </Form>\r\n            {/* </form> */}\r\n\r\n            <Modal toggle={() => this.setState({ isDeletePhone: false })} isOpen={this.state.isDeletePhone}>\r\n              <ModalHeader toggle={() => this.setState({ isDeletePhone: false })}>\r\n                <h3>{t(\"contactDetails:DeletePhone.label\")}</h3>\r\n              </ModalHeader>\r\n\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <p>{t(\"contactDetails:DeletePhone.message\")} {this.state.valueForDelete.phonenumber} ?</p>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => this.setState({ isDeletePhone: false })}>\r\n                  <i className=\"fa fa-close\"></i>\r\n                  {t(\"contactDetails:DeletePhone.No\")}\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => this.delete(this.state.valueForDelete, 'phone')}>\r\n                  <i className=\"fa fa-check\"></i>\r\n                  {t(\"contactDetails:DeletePhone.Yes\")}\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal toggle={() => this.setState({ isDeleteEmail: false })} isOpen={this.state.isDeleteEmail}>\r\n              <ModalHeader toggle={() => this.setState({ isDeleteEmail: false })}>\r\n                <h3>{t(\"contactDetails:DeleteEmail.label\")}</h3>\r\n              </ModalHeader>\r\n\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <p>{t(\"contactDetails:DeleteEmail.message\")} {this.state.valueForDelete.email} ?</p>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => this.setState({ isDeleteEmail: false })}>\r\n                  <i className=\"fa fa-close\"></i>\r\n                  {t(\"contactDetails:DeleteEmail.No\")}\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => this.delete(this.state.valueForDelete, 'email')}>\r\n                  <i className=\"fa fa-check\"></i>\r\n                  {t(\"contactDetails:DeleteEmail.Yes\")}\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal toggle={() => this.reset('phoneModal')} isOpen={this.state.visiblePhoneModal}>\r\n              <ModalHeader toggle={() => this.reset('phoneModal')}>\r\n                <h3>{this.state.phoneModalTitle}</h3>\r\n              </ModalHeader>\r\n\r\n              <ModalBody>\r\n                <Form>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <Col>\r\n                        <label>Phone Type</label>\r\n                      </Col>\r\n                      <Col>\r\n                        <Input type=\"select\" name=\"phonetype\" id=\"phonetype\" onChange={(e) => this.selectType(e.target.value, 'phonetype')} value={this.state.phonetype}>\r\n                          <option value=''>Select</option>\r\n                          {this.state.phoneTypes.map((phonetype, i) => {\r\n                            return (<option value={phonetype.stringmapname} key={i}>{phonetype.stringmapname}</option>)\r\n                          })\r\n                          }\r\n                        </Input>\r\n                        <em className=\"error invalid-feedback\" >Please select phone type</em>\r\n                      </Col>\r\n                    </Col>\r\n\r\n                    <Col md=\"4\">\r\n                      <Col>\r\n                        <label>Area Code</label>\r\n                      </Col>\r\n                      <Col>\r\n                        <Input type=\"text\" name=\"phoneAreaCode\" id=\"phoneAreaCode\" placeholder=\"Area Code\" onChange={(e) => this.handleChange(e)} value={this.state.phoneAreaCode} />\r\n                        <em className=\"error invalid-feedback\" >Please enter valid area code</em>\r\n                      </Col>\r\n                    </Col>\r\n\r\n                    <Col md=\"4\">\r\n                      <Col>\r\n                        <label>Phone</label>\r\n                      </Col>\r\n                      <Col>\r\n                        <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder=\"Phone Number\" onChange={(e) => this.handleChange(e)} value={this.state.phoneNumber} />\r\n                        <em className=\"error invalid-feedback\" >Please enter valid Phone Number</em>\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => this.reset('phoneModal')}>\r\n                  <i className=\"fa fa-close\"></i>\r\n                  {CloseButton}\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => this.addToList('phoneList')}>\r\n                  <i className=\"fa fa-check\"></i>\r\n                  {this.state.isEditPhone ? EditButton : AddButton}\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal toggle={() => this.reset('emailModal')} isOpen={this.state.visibleEmailmodal}>\r\n              <ModalHeader toggle={() => this.reset('emailModal')}>\r\n                <h3>{this.state.emailModalTitle}</h3>\r\n              </ModalHeader>\r\n\r\n              <ModalBody>\r\n                <Form>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <Col>\r\n                        <label>Email Type</label>\r\n                      </Col>\r\n                      <Col>\r\n                        <Input type=\"select\" name=\"emailtype\" id=\"emailtype\" onChange={(e) => this.selectType(e.target.value, 'emailtype')} value={this.state.emailtype}>\r\n                          <option value=''>Select</option>\r\n                          {this.state.emailTypes.map((emailtype, i) => {\r\n                            return (<option value={emailtype.stringmapname} key={i}>{emailtype.stringmapname}</option>)\r\n                          })\r\n                          }\r\n                        </Input>\r\n                        <em className=\"error invalid-feedback\" >Please select email type</em>\r\n                      </Col>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\">\r\n                      <Col>\r\n                        <label>Email</label>\r\n                      </Col>\r\n                      <Col>\r\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={(e) => this.handleChange(e)} value={this.state.email} />\r\n                        <em className=\"error invalid-feedback\" >Please enter valid email</em>\r\n                      </Col>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => this.reset('emailModal')}>\r\n                  <i className=\"fa fa-close\"></i>\r\n                  {CloseButton}\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => this.addToList('emailList')}>\r\n                  <i className=\"fa fa-check\"></i>\r\n                  {this.state.isEditEmail ? EditButton : AddButton}\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal\r\n              // toggle={() => this.reset('policyModal')} \r\n              isOpen={this.state.showPolicyModal}\r\n            >\r\n              <ModalHeader toggle={() => this.close('policyModal')}>\r\n                <h3>{t(\"contactDetails:SetupPolicy.header\")}</h3>\r\n              </ModalHeader>\r\n\r\n              <ModalBody>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <p>{t(\"contactDetails:SetupPolicy.message\")}</p>\r\n                  </Col>\r\n                </Row>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => this.close('policyModal')}>\r\n                  <i className=\"fa fa-close\"></i>\r\n                  {t(\"contactDetails:SetupPolicy.No\")}\r\n                </Button>\r\n                <Button color=\"primary\" onClick={() => this.goToPolicy()}>\r\n                  <i className=\"fa fa-check\"></i>\r\n                  {t(\"contactDetails:SetupPolicy.Yes\")}\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ContactDetails);\r\n"]},"metadata":{},"sourceType":"module"}