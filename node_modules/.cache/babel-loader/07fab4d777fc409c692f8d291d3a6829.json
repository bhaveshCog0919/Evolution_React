{"ast":null,"code":"import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Collapse,Button as BTN,Card,CardHeader,CardBody,Col,Row,Input}from'reactstrap';import{Button}from'primereact/button';import api from'../../utils/apiClient';import{withTranslation}from'react-i18next';import{DataTable}from'primereact/datatable';import{Column}from'primereact/column';import{MultiSelect}from'primereact/multiselect';import{InputText}from'primereact/inputtext';import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{CommonConfig}from'../../utils/constants';import DatePicker from'react-date-picker';import moment from'moment';import APIConstant from'../../utils/constants';import Select from'react-select';import'react-select/dist/react-select.min.css';var PolicyDetails=/*#__PURE__*/function(_Component){_inherits(PolicyDetails,_Component);var _super=_createSuper(PolicyDetails);function PolicyDetails(props){var _this;_classCallCheck(this,PolicyDetails);_this=_super.call(this,props);_this.getPageString=function(e){var firstPage=e.first+1;var l=e.rows*(e.page+1);var lastPage=l<_this.state.arr.length?l:_this.state.arr.length;var str=firstPage+' to '+lastPage+' out of '+_this.state.arr.length+' records';_this.setState({selectedPage:e.first,str:str,rowsPerPage:e.rows});};_this.toggleLargeAdd=function(){_this.setState({toggleModalAdd:false});};_this.toggleCustom=function(tab){var prevState=_this.state.custom;var state=prevState.map(function(x,index){return tab===index?!x:false;});_this.setState({custom:state});};_this.redirectToNewPolicy=function(){var splitData=_this.props.location.pathname.split(\"/\");if(splitData[2]!==undefined&&splitData[3]!==undefined){_this.props.history.push({pathname:'/CreatePolicy/'+splitData[2],state:{id:splitData[2]}});}else{_this.props.history.push({pathname:'/NewPolicy/',state:{}});}};var columns=[// { field: \"SrNo\", header: \"Sr No.\", sortable: true, filter: true, id: 0 },\n// { field: \"Type\", header: \"Type.\", sortable: true, filter: true, id: 1 },\n// { field: \"PolicyNo\", header: \"Policy No.\", sortable: true, filter: true, id: 2 },\n// { field: \"BoatType\", header: \"Outstanding Amount\", sortable: true, filter: true, id: 3 },\n// { field: \"Status\", header: \"Status\", sortable: true, filter: true, id: 4 },\n// { field: \"Department\", header: \"Department\", sortable: true, filter: true, id: 4 },\n// { field: \"Vessel\", header: \"Vessel\", sortable: true, filter: true, id: 5 },\n// { field: \"Value\", header: \"Value.\", sortable: true, filter: true, id: 6 },\n// { field: \"Premiun\", header: \"Premiun\", sortable: true, filter: true, id: 7 },\n// { field: \"Created\", header: \"Created\", sortable: true, filter: true, id: 8 },\n// { field: \"Renewal\", header: \"Renewal\", sortable: true, filter: true, id: 9 },\n// { field: \"Updated\", header: \"Updated\", sortable: true, filter: true, id: 10 },\n// { field: \"LastUpdatedBy\", header: \"Last Updated By\", sortable: true, filter: true, id: 11 },\n// { field: \"CreatedBy\", header: \"Created by\", sortable: true, filter: true, id: 12 },\n// { field: \"Currency\", header: \"Currency\", sortable: true, filter: true, id: 13 },\n// { field: \"Client\", header: \"Client\", sortable: true, filter: true, id: 14 },\n// { field: \"Country\", header: \"Country\", sortable: true, filter: true, id: 15 },\n{body:_this.actionTemplate.bind(_assertThisInitialized(_this)),header:\"Action\",sortable:false,filter:false,id:0},{body:_this.formatPolicyDetail.bind(_assertThisInitialized(_this)),field:\"PolicyData\",header:\"Policy No/Type\",sortable:true,filter:true,filterMatchMode:'contains',id:1},{body:_this.formatContactDetail.bind(_assertThisInitialized(_this)),field:\"ClientDetails\",header:\"Client/Contacts\",sortable:true,filter:true,filterMatchMode:'contains',id:2},{body:_this.formatVesselData.bind(_assertThisInitialized(_this)),field:\"VesselDetails\",header:\"Vessel Class/Type\",sortable:true,filter:true,filterMatchMode:'contains',id:3},{field:\"InsuranceCompanyName\",header:\"Insurer\",sortable:true,filter:true,filterMatchMode:'contains',id:4},{body:_this.formatPremiun.bind(_assertThisInitialized(_this)),header:\"Sum Insured/Premium\",sortable:true,filter:true,filterMatchMode:'contains',id:5},{body:_this.formatDate.bind(_assertThisInitialized(_this)),field:\"InceptionDate\",header:\"Inception/Renewal\",sortable:true,filter:true,filterMatchMode:'contains',id:6},{field:\"Department\",header:\"Department\",sortable:true,filter:true,filterMatchMode:'contains',id:7},{field:\"Status\",header:\"Status\",sortable:true,filter:true,filterMatchMode:'contains',id:8}];_this.state={toggleModalAdd:false,contactShown:'',cols:columns,clientArray:[],client:'',phoneArray:[],phone:'',str:'',emailArray:[],email:'',policyNumberArray:[],policyNumber:'',binderArray:[],binder:'',subBinderArray:[],subBinder:'',policyStartFromDate:'',policyStartToDate:'',policyRenewalFromDate:'',policyRenewalToDate:'',agentserviceCenter:'',sumInsuredfrom:'',sumInsuredTo:'',arr:[],selectedPage:0,filteredcontactsSingle:null,contactArray:[],rowsPerPageOptions:CommonConfig.dataTableConfig.rowsPerPageOptions,rowsPerPage:CommonConfig.dataTableConfig.rowsPerPage,custom:false,isExpand:false,countryList:[],country:'',languageArray:[],currencyArray:[],policyStatusList:[],policyStatus:'',policyTypeArray:[],policyType:'',vesselClassArray:[],vesselClassCopy:[],vesselClass:'',vesselType:'',vesselTypeArray:[]};_this.colOptions=[];for(var _i=0,_columns=columns;_i<_columns.length;_i++){var col=_columns[_i];_this.colOptions.push({label:col.header,value:col});}_this.onColumnToggle=_this.onColumnToggle.bind(_assertThisInitialized(_this));_this.actionTemplate=_this.actionTemplate.bind(_assertThisInitialized(_this));_this.export=_this.export.bind(_assertThisInitialized(_this));return _this;}_createClass(PolicyDetails,[{key:\"onColumnToggle\",value:function onColumnToggle(event){var valueInOrder=event.value.sort(function(x,y){return x.id-y.id;});this.setState({cols:valueInOrder});}},{key:\"edit\",value:function edit(rowData){this.props.history.push({pathname:'/PolicyDetailsMerged/'+rowData.PolicyId+'/1/1',state:{PolicyId:rowData.PolicyId,tab:1}});}},{key:\"formatPolicyDetail\",value:function formatPolicyDetail(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.PolicyType),/*#__PURE__*/React.createElement(\"p\",null,rowData.PolicyNumber));}},{key:\"formatContactDetail\",value:function formatContactDetail(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.Name),/*#__PURE__*/React.createElement(\"p\",null,CommonConfig.formatPhoneNumber(rowData.CountryCode+rowData.PhoneNumber)),/*#__PURE__*/React.createElement(\"p\",null,rowData.Email));}},{key:\"formatVesselData\",value:function formatVesselData(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.VesselClassName),/*#__PURE__*/React.createElement(\"p\",null,rowData.VesselTypeName));}},{key:\"formatPremiun\",value:function formatPremiun(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.SumInsured),/*#__PURE__*/React.createElement(\"p\",null,rowData.CurrentPremium));}},{key:\"formatDate\",value:function formatDate(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.InceptionDate),/*#__PURE__*/React.createElement(\"p\",null,rowData.RenewalDate));}},{key:\"actionTemplate\",value:function actionTemplate(rowData,column){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-warning\",onClick:function onClick(){return _this2.edit(rowData);},style:{marginRight:'.5em'},tooltip:\"View\",tooltipOptions:{position:'bottom'}}));}},{key:\"export\",value:function _export(){this.dt.exportCSV();}},{key:\"componentDidMount\",value:function componentDidMount(){this.getDropDownValues('COUNTRY','countryList');this.getDropDownValues('POLICYSTATUS','policyStatusList');this.getDropDownValues('POLICYTYPE','policyTypeArray');this.getLanguage();this.getCurrency();this.getVesselClass();this.getPolicyList(0);this.getPolicyClientName();this.getAllEmailList();this.getAllcontactList();this.getAllpolicyNumber();this.getAllBinder();}},{key:\"componentWillUpdate\",value:function componentWillUpdate(nextProps){var _this3=this;if(nextProps.match.isExact!==this.props.match.isExact){setTimeout(function(){_this3.getPolicyList(0);},100);}}},{key:\"getPolicyClientName\",value:function getPolicyClientName(){var _this4=this;try{api.post(APIConstant.path.getPolicyClientName).then(function(res){if(res.success){var formattedData=[];var i;for(i=0;i<res.data.data.length;i++){formattedData.push({value:res.data.data[i].EntityId,label:res.data.data[i].FullName});}_this4.setState({clientArray:formattedData});}else{}}).catch(function(err){console.log('error',err);});}catch(error){console.log('error',error);}}},{key:\"getAllEmailList\",value:function getAllEmailList(){var _this5=this;try{api.post(APIConstant.path.getAllEmailList).then(function(res){if(res.success){var formattedData=[];var i;for(i=0;i<res.data.data.length;i++){formattedData.push({value:res.data.data[i].Email,label:res.data.data[i].Email});}console.log('formattedData',formattedData);_this5.setState({emailArray:formattedData});}else{}}).catch(function(err){console.log('error',err);});}catch(error){console.log('error',error);}}},{key:\"getAllcontactList\",value:function getAllcontactList(){var _this6=this;try{api.post(APIConstant.path.getAllcontactList).then(function(res){if(res.success){var formattedData=[];var i;for(i=0;i<res.data.data.length;i++){formattedData.push({value:res.data.data[i].PhoneNumber,label:res.data.data[i].PhoneNumber});}console.log('formattedData',formattedData);_this6.setState({phoneArray:formattedData});}else{}}).catch(function(err){console.log('error',err);});}catch(error){console.log('error',error);}}},{key:\"getAllpolicyNumber\",value:function getAllpolicyNumber(){var _this7=this;try{api.post(APIConstant.path.getAllpolicyNumber).then(function(res){if(res.success){var formattedData=[];var i;for(i=0;i<res.data.data.length;i++){formattedData.push({value:res.data.data[i].PolicyNumber,label:res.data.data[i].PolicyNumber});}console.log('formattedData',formattedData);_this7.setState({policyNumberArray:formattedData});}else{}}).catch(function(err){console.log('error',err);});}catch(error){console.log('error',error);}}},{key:\"getAllBinder\",value:function getAllBinder(){var _this8=this;try{var data={};api.post(APIConstant.path.getAllBinder,data).then(function(res){if(res.success){console.log('res.datares.data',res.data.res);var formattedData=[];var i;for(i=0;i<res.data.res.length;i++){formattedData.push({value:res.data.res[i].BinderId,label:res.data.res[i].UMRN});}_this8.setState({binderArray:formattedData});}else{console.log('getBinderData_error');}}).catch(function(err){console.log('getBinderData_error',err);});}catch(error){console.log('getBinderData_error',error);}}},{key:\"getSubBinderByBinderId\",value:function getSubBinderByBinderId(id){var _this9=this;debugger;try{var data={BinderId:id};api.post(APIConstant.path.getSubBinderByBinderId,data).then(function(res){if(res.success){console.log('res.datares.data',res.data.res);var formattedData=[];var i;for(i=0;i<res.data.res.length;i++){formattedData.push({value:res.data.res[i].SubBinderId,label:res.data.res[i].Title});}_this9.setState({subBinderArray:formattedData});}else{console.log('getBinderData_error');}}).catch(function(err){console.log('getBinderData_error',err);});}catch(error){console.log('getBinderData_error',error);}}},{key:\"getLanguage\",value:function getLanguage(){var _this10=this;try{api.get(APIConstant.path.getLanguage).then(function(res){if(res.success){_this10.setState({languageArray:res.data});}else{}}).catch(function(err){});}catch(error){console.log(\"error...\",error);}}},{key:\"getCurrency\",value:function getCurrency(){var _this11=this;try{api.get(APIConstant.path.getCurrency).then(function(res){if(res.success){_this11.setState({currencyArray:res.data});}else{}}).catch(function(err){});}catch(error){console.log(\"error...\",error);}}},{key:\"getVesselClass\",value:function getVesselClass(){var _this12=this;try{api.get(APIConstant.path.getVesselClass).then(function(res){if(res.success){var formattedArray=[];for(var i=0;i<res.data.length;i++){formattedArray.push({label:res.data[i].VesselClassName,value:res.data[i].VesselClassId});}_this12.setState({vesselClassArray:formattedArray,vesselClassCopy:res.data});}else{}}).catch(function(err){});}catch(error){console.log(\"error...\",error);}}},{key:\"getVesselType\",value:function getVesselType(id){var _this13=this;try{var data={VesselClassId:id};api.post(APIConstant.path.getVesselType,data).then(function(res){if(res.success){console.log('-o-p-o-o-p-o-p-p-o',res.data);var formattedData=[];for(var i=0;i<res.data.length;i++){formattedData.push({label:res.data[i].VesselTypeName,value:res.data[i].VesselTypeId});}_this13.setState({vesselTypeArray:formattedData});}else{}}).catch(function(err){});}catch(error){}}},{key:\"getPolicyList\",value:function getPolicyList(IsAdvance){var _this14=this;try{var data={};var splitData=this.props.location.pathname.split(\"/\");if(splitData[2]!==undefined&&splitData[3]!==undefined){data={entityId:splitData[2]||'',entityType:splitData[3]||'',isAdvance:0};}else{data={isAdvance:IsAdvance};}console.log('0o-0o-o-kl0k-0k-0k-0k-0k-0k-0kj',data);api.post('api/getPolicyList',data).then(function(res){if(res.success){var formattedData=[];for(var i=0;i<res.data.length;i++){// console.log(\"getPolicyList > \", res.data[i]);\nformattedData.push({SrNo:i+1,Name:res.data[i].Name,CountryCode:res.data[i].CountryCode,PhoneNumber:res.data[i].PhoneNumber,Email:res.data[i].Email,PolicyId:res.data[i].PolicyId,PolicyType:res.data[i].PolicyType,PolicyNumber:res.data[i].PolicyNumber,Status:res.data[i].Status,Department:res.data[i].Department,InsuranceCompanyName:res.data[i].InsuranceCompanyName,Vessel:res.data[i].VesselName,Value:res.data[i].SumInsured,VesselClassName:res.data[i].VesselClassName,VesselTypeName:res.data[i].VesselTypeName,SumInsured:res.data[i].SumInsured,CurrentPremium:res.data[i].CurrentPremium,InceptionDate:moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),RenewalDate:CommonConfig.isEmpty(res.data[i].RenewalDate)?'':moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),Premium:\"\",Created:moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),Renewal:moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),Updated:moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),LastUpdatedBy:\"\",CreatedBy:res.data[i].CreatedBy,LastUpdated:\"\",Currency:res.data[i].Currency,Client:res.data[i].EntityType==='person'?res.data[i].Forename+''+res.data[i].SurName:\"\",Country:res.data[i].Country,ClientDetails:res.data[i].Name+\"\"+CommonConfig.formatPhoneNumber(res.data[i].CountryCode+res.data[i].PhoneNumber)+\"\"+res.data[i].Email,PolicyData:res.data[i].PolicyType+\"\"+res.data[i].PolicyNumber,VesselDetails:res.data[i].VesselClassName+\"\"+res.data[i].VesselTypeName});}var firstPage=formattedData.length?'1':'0';var lastPage=_this14.state.rowsPerPage<formattedData.length?_this14.state.rowsPerPage:formattedData.length;var str=firstPage+' to '+lastPage+' out of '+formattedData.length+' records';_this14.setState({arr:formattedData,str:str});}else{}}).catch(function(err){});}catch(err){}}},{key:\"filterSingle\",value:function filterSingle(e){var results=this.state.contactArray.filter(function(contact){return contact.label.toLowerCase().startsWith(e.query.toLowerCase());});this.setState({filteredcontactsSingle:results});}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName){var _this15=this;try{var data={stringmaptype:stringMapType,orderby:'sortorder'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){_this15.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){console.log(\"error...\",error);}}},{key:\"gotoNextPage\",value:function gotoNextPage(){this.props.history.push('/newPolicy1');}},{key:\"selectType\",value:function selectType(value,type){if(type==='vesselclass'){if(value===''||value===null){// this.setState({ VesselClassError: true, vesselClass: value.value });\n// this.show('vesselclass', true);\n}else{this.setState({VesselClassError:false,vesselClass:value});// this.show('vesselclass', false);\nthis.getVesselType(value.value);}}if(type==='client'){if(value===''||value===undefined||value===null){this.setState({client:value});}else{this.setState({client:value.value});}}if(type==='binder'){if(value===''||value===undefined||value===null){this.setState({binder:value});}else{this.getSubBinderByBinderId(value);this.setState({binder:value.value});}}}},{key:\"filterData\",value:function filterData(){var date={};}},{key:\"render\",value:function render(){var _this16=this;var t=this.props.t;var header=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"1\"},/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.cols,options:this.colOptions,fixedPlaceholder:true,placeholder:CommonConfig.dataTableConfig.columnToggleIcon,tooltip:\"Show / Hide Column\",onChange:this.onColumnToggle,style:{width:'50px'}})),/*#__PURE__*/React.createElement(Col,{md:\"11\"},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-search\",style:{margin:'4px 4px 0 0'}}),/*#__PURE__*/React.createElement(InputText,{type:\"search\",onInput:function onInput(e){return _this16.setState({globalFilter:e.target.value});},placeholder:\"Global Search\",size:\"30\",style:{marginRight:10}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-external-link\",iconPos:\"left\",tooltip:\"Export as CSV\",tooltipOptions:{position:'left'},onClick:this.export,style:{marginRight:10}})))));var columns=this.state.cols.map(function(col,i){return/*#__PURE__*/React.createElement(Column,{key:i,field:col.field,header:col.header,body:col.body,sortable:col.sortable,filter:col.filter,filterMatchMode:col.filterMatchMode});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"basic-header\"},/*#__PURE__*/React.createElement(\"h1\",null,t(\"policyList:PolicyList\")),/*#__PURE__*/React.createElement(\"div\",{className:\"header-right-option\"},/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.cols,options:this.colOptions,fixedPlaceholder:true,placeholder:CommonConfig.dataTableConfig.columnToggleIcon,tooltip:\"Show / Hide Column\",onChange:this.onColumnToggle,style:{width:'50px'}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-plus\",tooltip:\"New Policy Setup\",tooltipOptions:{position:'bottom'},onClick:function onClick(){return _this16.redirectToNewPolicy();}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-external-link\",tooltip:\"Export as CSV\",tooltipOptions:{position:'bottom'},onClick:this.export,style:{marginRight:10}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"table-custom\"},/*#__PURE__*/React.createElement(DataTable,{ref:function ref(el){return _this16.dt=el;},value:this.state.arr,first:this.state.selectedPage,onPage:function onPage(e){return _this16.getPageString(e);},paginator:true,rows:this.state.rowsPerPage,totalRecords:this.state.arr.length,exportFilename:\"Policy List\",currentPageReportTemplate:this.state.str,scrollable:true,scrollHeight:\"340px\",paginatorTemplate:\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",rowsPerPageOptions:this.state.rowsPerPageOptions,globalFilter:this.state.globalFilter,emptyMessage:\"No records found\",responsive:true,resizableColumns:true,columnResizeMode:\"fit\"//stateKey=\"contactList\" stateStorage=\"local\" header={header} \n},columns)));}}]);return PolicyDetails;}(Component);export default withTranslation()(PolicyDetails);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/PolicyList.js"],"names":["React","Component","Collapse","Button","BTN","Card","CardHeader","CardBody","Col","Row","Input","api","withTranslation","DataTable","Column","MultiSelect","InputText","toast","CommonConfig","DatePicker","moment","APIConstant","Select","PolicyDetails","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","toggleLargeAdd","toggleModalAdd","toggleCustom","tab","prevState","custom","map","x","index","redirectToNewPolicy","splitData","location","pathname","split","undefined","history","push","id","columns","body","actionTemplate","bind","header","sortable","filter","formatPolicyDetail","field","filterMatchMode","formatContactDetail","formatVesselData","formatPremiun","formatDate","contactShown","cols","clientArray","client","phoneArray","phone","emailArray","email","policyNumberArray","policyNumber","binderArray","binder","subBinderArray","subBinder","policyStartFromDate","policyStartToDate","policyRenewalFromDate","policyRenewalToDate","agentserviceCenter","sumInsuredfrom","sumInsuredTo","filteredcontactsSingle","contactArray","rowsPerPageOptions","dataTableConfig","isExpand","countryList","country","languageArray","currencyArray","policyStatusList","policyStatus","policyTypeArray","policyType","vesselClassArray","vesselClassCopy","vesselClass","vesselType","vesselTypeArray","colOptions","col","label","value","onColumnToggle","export","event","valueInOrder","sort","y","rowData","PolicyId","PolicyType","PolicyNumber","Name","formatPhoneNumber","CountryCode","PhoneNumber","Email","VesselClassName","VesselTypeName","SumInsured","CurrentPremium","InceptionDate","RenewalDate","column","edit","marginRight","position","dt","exportCSV","getDropDownValues","getLanguage","getCurrency","getVesselClass","getPolicyList","getPolicyClientName","getAllEmailList","getAllcontactList","getAllpolicyNumber","getAllBinder","nextProps","match","isExact","setTimeout","post","path","then","res","success","formattedData","i","data","EntityId","FullName","catch","err","console","log","error","BinderId","UMRN","getSubBinderByBinderId","SubBinderId","Title","get","formattedArray","VesselClassId","getVesselType","VesselTypeId","IsAdvance","entityId","entityType","isAdvance","SrNo","Status","Department","InsuranceCompanyName","Vessel","VesselName","Value","format","dateFormat","forDatePicker","isEmpty","Premium","Created","dateOnly","Renewal","Updated","UpdatedOn","LastUpdatedBy","CreatedBy","LastUpdated","Currency","Client","EntityType","Forename","SurName","Country","ClientDetails","PolicyData","VesselDetails","results","contact","toLowerCase","startsWith","query","stringMapType","setStateName","stringmaptype","orderby","dropdownbycode","type","VesselClassError","date","t","columnToggleIcon","width","textAlign","margin","globalFilter","target","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Button as BTN, Card, CardHeader, CardBody, Col, Row, Input } from 'reactstrap';\nimport { Button } from 'primereact/button';\nimport api from '../../utils/apiClient';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CommonConfig } from '../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport APIConstant from '../../utils/constants';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\n\n\nclass PolicyDetails extends Component {\n    constructor(props) {\n        super(props);\n        let columns = [\n            // { field: \"SrNo\", header: \"Sr No.\", sortable: true, filter: true, id: 0 },\n            // { field: \"Type\", header: \"Type.\", sortable: true, filter: true, id: 1 },\n            // { field: \"PolicyNo\", header: \"Policy No.\", sortable: true, filter: true, id: 2 },\n            // { field: \"BoatType\", header: \"Outstanding Amount\", sortable: true, filter: true, id: 3 },\n            // { field: \"Status\", header: \"Status\", sortable: true, filter: true, id: 4 },\n            // { field: \"Department\", header: \"Department\", sortable: true, filter: true, id: 4 },\n            // { field: \"Vessel\", header: \"Vessel\", sortable: true, filter: true, id: 5 },\n            // { field: \"Value\", header: \"Value.\", sortable: true, filter: true, id: 6 },\n            // { field: \"Premiun\", header: \"Premiun\", sortable: true, filter: true, id: 7 },\n            // { field: \"Created\", header: \"Created\", sortable: true, filter: true, id: 8 },\n            // { field: \"Renewal\", header: \"Renewal\", sortable: true, filter: true, id: 9 },\n            // { field: \"Updated\", header: \"Updated\", sortable: true, filter: true, id: 10 },\n            // { field: \"LastUpdatedBy\", header: \"Last Updated By\", sortable: true, filter: true, id: 11 },\n            // { field: \"CreatedBy\", header: \"Created by\", sortable: true, filter: true, id: 12 },\n            // { field: \"Currency\", header: \"Currency\", sortable: true, filter: true, id: 13 },\n            // { field: \"Client\", header: \"Client\", sortable: true, filter: true, id: 14 },\n            // { field: \"Country\", header: \"Country\", sortable: true, filter: true, id: 15 },\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, id: 0 },\n            { body: this.formatPolicyDetail.bind(this), field: \"PolicyData\", header: \"Policy No/Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\n            { body: this.formatContactDetail.bind(this), field: \"ClientDetails\", header: \"Client/Contacts\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\n            { body: this.formatVesselData.bind(this), field: \"VesselDetails\", header: \"Vessel Class/Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\n            { field: \"InsuranceCompanyName\", header: \"Insurer\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\n            { body: this.formatPremiun.bind(this), header: \"Sum Insured/Premium\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\n            { body: this.formatDate.bind(this), field: \"InceptionDate\", header: \"Inception/Renewal\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\n            { field: \"Department\", header: \"Department\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\n            { field: \"Status\", header: \"Status\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\n        ];\n\n        this.state = {\n            toggleModalAdd: false,\n            contactShown: '',\n            cols: columns,\n            clientArray: [],\n            client: '',\n            phoneArray: [],\n            phone: '',\n            str: '',\n            emailArray: [],\n            email: '',\n            policyNumberArray: [],\n            policyNumber: '',\n            binderArray: [],\n            binder: '',\n            subBinderArray: [],\n            subBinder: '',\n            policyStartFromDate: '',\n            policyStartToDate: '',\n            policyRenewalFromDate: '',\n            policyRenewalToDate: '',\n            agentserviceCenter: '',\n            sumInsuredfrom: '',\n            sumInsuredTo: '',\n            arr: [],\n            selectedPage: 0,\n            filteredcontactsSingle: null,\n            contactArray: [],\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            custom: false,\n            isExpand: false,\n            countryList: [],\n            country: '',\n            languageArray: [],\n            currencyArray: [],\n            policyStatusList: [],\n            policyStatus: '',\n            policyTypeArray: [],\n            policyType: '',\n            vesselClassArray: [],\n            vesselClassCopy: [],\n            vesselClass: '',\n            vesselType: '',\n            vesselTypeArray: []\n        };\n\n        this.colOptions = [];\n        for (let col of columns) {\n            this.colOptions.push({ label: col.header, value: col });\n        }\n        this.onColumnToggle = this.onColumnToggle.bind(this);\n        this.actionTemplate = this.actionTemplate.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    onColumnToggle(event) {\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\n        this.setState({ cols: valueInOrder });\n    }\n\n    edit(rowData) {\n        this.props.history.push({\n            pathname: '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1',\n            state: {\n                PolicyId: rowData.PolicyId,\n                tab: 1\n            }\n        });\n    }\n\n    formatPolicyDetail(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.PolicyType}</p>\n                <p>{rowData.PolicyNumber}</p>\n            </div>\n        )\n    }\n\n    formatContactDetail(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.Name}</p>\n                <p>{CommonConfig.formatPhoneNumber(rowData.CountryCode + rowData.PhoneNumber)}</p>\n                <p>{rowData.Email}</p>\n            </div>\n        )\n    }\n\n    formatVesselData(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.VesselClassName}</p>\n                <p>{rowData.VesselTypeName}</p>\n            </div>\n        )\n    }\n\n    formatPremiun(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.SumInsured}</p>\n                <p>{rowData.CurrentPremium}</p>\n            </div>\n        )\n    }\n\n    formatDate(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.InceptionDate}</p>\n                <p>{rowData.RenewalDate}</p>\n            </div>\n        )\n    }\n\n    actionTemplate(rowData, column) {\n        return <div className=\"policy-list-data\">\n            <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.edit(rowData)}\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\n            </Button>\n            {/* <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }}></Button> */}\n        </div>;\n    }\n\n    export() {\n        this.dt.exportCSV();\n    }\n\n    componentDidMount() {\n        this.getDropDownValues('COUNTRY', 'countryList');\n        this.getDropDownValues('POLICYSTATUS', 'policyStatusList');\n        this.getDropDownValues('POLICYTYPE', 'policyTypeArray');\n        this.getLanguage();\n        this.getCurrency();\n        this.getVesselClass();\n        this.getPolicyList(0);\n        this.getPolicyClientName();\n        this.getAllEmailList();\n        this.getAllcontactList();\n        this.getAllpolicyNumber();\n        this.getAllBinder();\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.match.isExact !== this.props.match.isExact) {\n            setTimeout(() => {\n                this.getPolicyList(0);\n            }, 100);\n        }\n    }\n\n    getPolicyClientName() {\n        try {\n            api.post(APIConstant.path.getPolicyClientName).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].EntityId,\n                            label: res.data.data[i].FullName,\n                        });\n                    }\n                    this.setState({ clientArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllEmailList() {\n        try {\n            api.post(APIConstant.path.getAllEmailList).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].Email,\n                            label: res.data.data[i].Email,\n                        });\n                    }\n                    console.log('formattedData', formattedData);\n                    this.setState({ emailArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllcontactList() {\n        try {\n            api.post(APIConstant.path.getAllcontactList).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].PhoneNumber,\n                            label: res.data.data[i].PhoneNumber,\n                        });\n                    }\n                    console.log('formattedData', formattedData);\n                    this.setState({ phoneArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllpolicyNumber() {\n        try {\n            api.post(APIConstant.path.getAllpolicyNumber).then(res => {\n                if (res.success) {\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.data.length; i++) {\n                        formattedData.push({\n                            value: res.data.data[i].PolicyNumber,\n                            label: res.data.data[i].PolicyNumber,\n                        });\n                    }\n                    console.log('formattedData', formattedData);\n                    this.setState({ policyNumberArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error', err);\n\n            });\n        } catch (error) {\n            console.log('error', error);\n        }\n    }\n\n    getAllBinder() {\n        try {\n            let data = {};\n            api.post(APIConstant.path.getAllBinder, data).then(res => {\n                if (res.success) {\n                    console.log('res.datares.data', res.data.res);\n\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.res.length; i++) {\n                        formattedData.push({\n                            value: res.data.res[i].BinderId,\n                            label: res.data.res[i].UMRN,\n                        });\n                    }\n\n                    this.setState({ binderArray: formattedData });\n                } else {\n                    console.log('getBinderData_error');\n                }\n            }).catch(err => {\n                console.log('getBinderData_error', err);\n            });\n        } catch (error) {\n            console.log('getBinderData_error', error);\n        }\n    }\n\n    getSubBinderByBinderId(id) {\n        debugger\n        try {\n            let data = {\n                BinderId: id\n            };\n            api.post(APIConstant.path.getSubBinderByBinderId, data).then(res => {\n                if (res.success) {\n                    console.log('res.datares.data', res.data.res);\n\n                    let formattedData = [];\n                    let i;\n                    for (i = 0; i < res.data.res.length; i++) {\n                        formattedData.push({\n                            value: res.data.res[i].SubBinderId,\n                            label: res.data.res[i].Title,\n                        });\n                    }\n\n                    this.setState({ subBinderArray: formattedData });\n                } else {\n                    console.log('getBinderData_error');\n                }\n            }).catch(err => {\n                console.log('getBinderData_error', err);\n            });\n        } catch (error) {\n            console.log('getBinderData_error', error);\n        }\n    }\n\n    getLanguage() {\n        try {\n            api.get(APIConstant.path.getLanguage).then(res => {\n                if (res.success) {\n                    this.setState({ languageArray: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    getCurrency() {\n        try {\n            api.get(APIConstant.path.getCurrency).then(res => {\n                if (res.success) {\n                    this.setState({ currencyArray: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    getVesselClass() {\n        try {\n            api.get(APIConstant.path.getVesselClass).then(res => {\n                if (res.success) {\n                    let formattedArray = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        formattedArray.push({\n                            label: res.data[i].VesselClassName,\n                            value: res.data[i].VesselClassId\n                        });\n                    }\n                    this.setState({ vesselClassArray: formattedArray, vesselClassCopy: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n\n    }\n\n    getVesselType(id) {\n        try {\n            const data = {\n                VesselClassId: id\n            };\n            api.post(APIConstant.path.getVesselType, data).then(res => {\n                if (res.success) {\n                    console.log('-o-p-o-o-p-o-p-p-o', res.data);\n\n                    var formattedData = [];\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedData.push({\n                            label: res.data[i].VesselTypeName,\n                            value: res.data[i].VesselTypeId,\n                        });\n                    }\n                    this.setState({ vesselTypeArray: formattedData });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n\n    }\n\n    getPolicyList(IsAdvance) {\n        try {\n            let data = {};\n            var splitData = this.props.location.pathname.split(\"/\");\n            if (splitData[2] !== undefined && splitData[3] !== undefined) {\n                data = {\n                    entityId: splitData[2] || '',\n                    entityType: splitData[3] || '',\n                    isAdvance: 0,\n                };\n            } else {\n                data = {\n                    isAdvance: IsAdvance\n                }\n            }\n            console.log('0o-0o-o-kl0k-0k-0k-0k-0k-0k-0kj', data);\n\n            api.post('api/getPolicyList', data).then(res => {\n                if (res.success) {\n                    var formattedData = [];\n                    for (var i = 0; i < res.data.length; i++) {\n                        // console.log(\"getPolicyList > \", res.data[i]);\n                        formattedData.push({\n                            SrNo: i + 1,\n                            Name: res.data[i].Name,\n                            CountryCode: res.data[i].CountryCode,\n                            PhoneNumber: res.data[i].PhoneNumber,\n                            Email: res.data[i].Email,\n                            PolicyId: res.data[i].PolicyId,\n                            PolicyType: res.data[i].PolicyType,\n                            PolicyNumber: res.data[i].PolicyNumber,\n                            Status: res.data[i].Status,\n                            Department: res.data[i].Department,\n                            InsuranceCompanyName: res.data[i].InsuranceCompanyName,\n                            Vessel: res.data[i].VesselName,\n                            Value: res.data[i].SumInsured,\n                            VesselClassName: res.data[i].VesselClassName,\n                            VesselTypeName: res.data[i].VesselTypeName,\n                            SumInsured: res.data[i].SumInsured,\n                            CurrentPremium: res.data[i].CurrentPremium,\n                            InceptionDate: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.forDatePicker),\n                            RenewalDate: CommonConfig.isEmpty(res.data[i].RenewalDate) ? '' : moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.forDatePicker),\n                            Premium: \"\",\n                            Created: moment(res.data[i].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n                            Renewal: moment(res.data[i].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n                            Updated: moment(res.data[i].UpdatedOn).format(CommonConfig.dateFormat.dateOnly),\n                            LastUpdatedBy: \"\",\n                            CreatedBy: res.data[i].CreatedBy,\n                            LastUpdated: \"\",\n                            Currency: res.data[i].Currency,\n                            Client: res.data[i].EntityType === 'person' ? res.data[i].Forename + '' + res.data[i].SurName : \"\",\n                            Country: res.data[i].Country,\n                            ClientDetails: res.data[i].Name + \"\" + CommonConfig.formatPhoneNumber(res.data[i].CountryCode + res.data[i].PhoneNumber) + \"\" + res.data[i].Email,\n                            PolicyData: res.data[i].PolicyType + \"\" + res.data[i].PolicyNumber,\n                            VesselDetails: res.data[i].VesselClassName + \"\" + res.data[i].VesselTypeName,\n                        });\n                    }\n\n                    let firstPage = (formattedData.length) ? '1' : '0';\n                    let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\n                    let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n                    this.setState({ arr: formattedData, str: str });\n                } else {\n                }\n            }).catch(err => {\n\n            });\n        } catch (err) {\n\n        }\n    }\n\n    filterSingle(e) {\n        let results = this.state.contactArray.filter((contact) => {\n            return contact.label.toLowerCase().startsWith(e.query.toLowerCase());\n        });\n        this.setState({ filteredcontactsSingle: results });\n\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    getDropDownValues(stringMapType, setStateName) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: 'sortorder'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    toggleLargeAdd = () => {\n        this.setState({ toggleModalAdd: false });\n    }\n\n    gotoNextPage() {\n        this.props.history.push('/newPolicy1');\n    }\n\n    toggleCustom = (tab) => {\n        const prevState = this.state.custom;\n        const state = prevState.map((x, index) => tab === index ? !x : false);\n        this.setState({ custom: state });\n    }\n\n    selectType(value, type) {\n        if (type === 'vesselclass') {\n\n            if (value === '' || value === null) {\n                // this.setState({ VesselClassError: true, vesselClass: value.value });\n                // this.show('vesselclass', true);\n            } else {\n                this.setState({ VesselClassError: false, vesselClass: value });\n                // this.show('vesselclass', false);\n                this.getVesselType(value.value);\n            }\n        }\n        if (type === 'client') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ client: value });\n            } else {\n                this.setState({ client: value.value });\n            }\n        }\n        if (type === 'binder') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ binder: value });\n            } else {\n                this.getSubBinderByBinderId(value);\n                this.setState({ binder: value.value });\n            }\n        }\n    }\n\n    filterData() {\n        let date = {\n\n        }\n    }\n\n    redirectToNewPolicy = () => {\n        var splitData = this.props.location.pathname.split(\"/\");\n        if (splitData[2] !== undefined && splitData[3] !== undefined) {\n            this.props.history.push({\n                pathname: '/CreatePolicy/' + splitData[2],\n                state: {\n                    id: splitData[2]\n                }\n            });\n        } else {\n            this.props.history.push({\n                pathname: '/NewPolicy/',\n                state: {}\n            });\n        }\n    }\n\n    render() {\n        const { t } = this.props;\n        var header = <div>\n            <Row>\n                <Col md=\"1\">\n                    <MultiSelect value={this.state.cols} options={this.colOptions}\n                        fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\n                        onChange={this.onColumnToggle} style={{ width: '50px' }} />\n                </Col>\n                <Col md=\"11\">\n                    <div style={{ textAlign: 'right' }}>\n                        <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\n                        <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" size=\"30\" style={{ marginRight: 10 }} />\n\n                        <Button type=\"button\" icon=\"pi pi-external-link\" iconPos=\"left\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'left' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\n                    </div>\n                </Col>\n            </Row>\n        </div>;\n\n        let columns = this.state.cols.map((col, i) => {\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\n        });\n\n        return (\n            <div>\n                <div className=\"basic-header\">\n                    <h1>{t(\"policyList:PolicyList\")}</h1>\n\n                    <div className=\"header-right-option\">\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\n                        />\n\n                        <Button type=\"button\" icon=\"pi pi-plus\" tooltip=\"New Policy Setup\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.redirectToNewPolicy()}></Button>\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\n                    </div>\n                </div>\n                {/* <div className=\"input-box\" id=\"accordion\">\n                    <Card className=\"mb-0\">\n                        <CardHeader id=\"headingOne\">\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\n                                <h5 className=\"m-0 p-0\">\n                                    {t(\"policyList:SearchPolicy\")}\n                                    <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\n                                </h5>\n                            </BTN>\n                        </CardHeader>\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                            <CardBody>\n\n                                <Row>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Client.label\")}</label>\n                                            <Select name=\"client\" id=\"client\" options={this.state.clientArray} value={this.state.client} onChange={(data) => this.selectType(data, 'client')} placeholder=\"Select\" />\n                                            <em id=\"cruisingRangeError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Phone.label\")}</label>\n                                            <Select name=\"phone\" id=\"phone\" options={this.state.phoneArray} value={this.state.phone} onChange={(data) => this.selectType(data, 'phone')} placeholder=\"Select\" />\n                                            <em id=\"cruisingRangeError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Email.label\")}</label>\n                                            <Select name=\"email\" id=\"email\" options={this.state.emailArray} value={this.state.email} onChange={(data) => this.selectType(data, 'email')} placeholder=\"Select\" />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:PolicyNumber.label\")}</label>\n                                            <Select name=\"policyNumber\" id=\"policyNumber\" options={this.state.policyNumberArray} value={this.state.policyNumber} onChange={(data) => this.selectType(data, 'policyNumber')} placeholder=\"Select\" />\n                                            <em id=\"cruisingRangeError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Binder.label\")}</label>\n                                            <Select name=\"binder\" id=\"binder\" options={this.state.binderArray} value={this.state.binder} onChange={(data) => this.selectType(data, 'binder')} placeholder=\"Select\" />\n                                            <em id=\"cruisingRangeError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:SubBinder.label\")}</label>\n                                            <Select name=\"subBinder\" id=\"subBinder\" options={this.state.subBinderArray} value={this.state.subBinder} onChange={(data) => this.selectType(data, 'subBinder')} placeholder=\"Select\" />\n                                            <em id=\"cruisingRangeError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col md=\"5\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:PolicyStartDateFrom.label\")}</label>\n\n                                            <DatePicker name=\"dob\" value={this.state.dob} maxDate={moment().toDate()} minDate={moment().subtract(100, 'years').toDate()}\n                                            />\n\n                                            <span style={{ paddingRight: 5, paddingLeft: 5 }}>{t(\"policyList:PolicyStartDateFrom.tolabel\")}</span>\n\n                                            <DatePicker name=\"dob\"\n                                                value={this.state.dob} maxDate={moment().toDate()} minDate={moment().subtract(100, 'years').toDate()}\n                                            />\n                                        </div>\n                                    </Col>\n                                    <Col md=\"6\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:PolicyRenewalDateFrom.label\")}</label>\n\n                                            <DatePicker name=\"dob\"\n                                                value={this.state.dob} maxDate={moment().toDate()} minDate={moment().subtract(100, 'years').toDate()}\n                                            />\n\n                                            <span style={{ paddingRight: 5, paddingLeft: 5 }}>{t(\"policyList:PolicyRenewalDateFrom.tolabel\")}</span>\n\n                                            <DatePicker name=\"dob\" value={this.state.dob} maxDate={moment().toDate()} minDate={moment().subtract(100, 'years').toDate()}\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Country.label\")}</label>\n                                            <Select options={this.state.countryList} value={this.state.country}\n                                                // onChange={(data) => this.selectType(data, 'country')}\n                                                placeholder={t(\"policyList:Country.label\")}\n                                            />\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Language.label\")}</label>\n                                            <Input type=\"select\" name=\"language\" id=\"language\">\n                                                <option value=''>{t(\"policyList:Language.defaultValue\")}</option>\n                                                {this.state.languageArray.map((language, i) => {\n                                                    return (<option value={language.LanguageId} key={i}>{language.Language}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Currency.label\")}</label>\n                                            <Input type=\"select\" name=\"currency\" id=\"currency\">\n                                                <option value=''>{t(\"policyList:Currency.defaultValue\")}</option>\n                                                {this.state.currencyArray.map((currency, i) => {\n                                                    return (<option value={currency.CurrncyCode} key={i}>{currency.CurrncyCode}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:PolicyStatus.label\")}</label>\n                                            <Input type=\"select\" name=\"policystatus\" id=\"policystatus\" value={this.state.policyStatus}>\n                                                {this.state.policyStatusList.map((policyStatus, i) => {\n                                                    return (\n                                                        <option value={policyStatus.StringMapKey} key={i} selected={policyStatus.StringMapKey === 'Active' ? true : false}>\n                                                            {policyStatus.StringMapName}\n                                                        </option>\n                                                    )\n                                                })\n                                                }\n                                            </Input>\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:PolicyType.label\")}</label>\n                                            <Input type=\"select\" name=\"policytype\" id=\"policytype\">\n                                                <option value={this.state.policyType}>{t(\"policyList:PolicyType.defaultValue\")}</option>\n                                                {this.state.policyTypeArray.map((policytype, i) => {\n                                                    return (<option value={policytype.StringMapKey} key={i}>{policytype.StringMapName}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:VesselClass.label\")}</label>\n                                            <Select id=\"vesselclass\" name=\"vesselclass\" options={this.state.vesselClassArray} value={this.state.vesselClass}\n                                                onChange={(e) => this.selectType(e, 'vesselclass')}\n                                                placeholder={t(\"policyList:VesselClass.label\")}\n                                            />\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:VesselType.label\")}</label>\n                                            <Select id=\"vesselType\" name=\"vesselType\" options={this.state.vesselTypeArray} value={this.state.vesselType}\n                                                onChange={(e) => this.selectType(e, 'vesselType')}\n                                                placeholder={t(\"policyList:VesselType.label\")}\n                                            />\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:Agent/ServiceCenter.label\")}</label>\n                                            <Input type=\"text\" name=\"phonetype\" id=\"phonetype\"></Input>\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:SumInsuredFrom.label\")}</label>\n                                            <Input type=\"text\" name=\"phonetype\" id=\"phonetype\"></Input>\n                                        </div>\n                                    </Col>\n                                    <Col md=\"4\">\n                                        <div className=\"input-box\">\n                                            <label>{t(\"policyList:SumInsuredTo.label\")}</label>\n                                            <Input type=\"text\" name=\"phonetype\" id=\"phonetype\"></Input>\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <div style={{ width: \"100%\", textAlign: \"right\" }}>\n                                    <BTN color=\"success\" style={{ marginRight: '.5em', borderRadius: \"20px\" }} title=\"Go\" onClick={() => this.filterData()}> Go </BTN>\n                                </div>\n                            </CardBody>\n\n                        </Collapse>\n                    </Card>\n                </div> */}\n                <div className=\"table-custom\">\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\n                        paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.arr.length} exportFilename=\"Policy List\"\n                        currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\n                        responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n                    >\n                        {columns}\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(PolicyDetails);\n"]},"metadata":{},"sourceType":"module"}