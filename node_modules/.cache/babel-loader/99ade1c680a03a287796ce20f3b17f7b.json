{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-iterator-helpers\n\nvar $ = require('../internals/export');\n\nvar anObject = require('../internals/an-object');\n\nvar toPositiveInteger = require('../internals/to-positive-integer');\n\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\n\nvar IteratorProxy = createIteratorProxy(function (arg) {\n  if (!this.remaining--) {\n    this.done = true;\n    return;\n  }\n\n  var result = anObject(this.next.call(this.iterator, arg));\n  var done = this.done = !!result.done;\n  if (!done) return result.value;\n});\n$({\n  target: 'Iterator',\n  proto: true,\n  real: true\n}, {\n  take: function take(limit) {\n    return new IteratorProxy({\n      iterator: anObject(this),\n      remaining: toPositiveInteger(limit)\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}