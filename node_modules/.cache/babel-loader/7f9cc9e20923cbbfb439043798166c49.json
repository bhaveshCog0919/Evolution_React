{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Pages/ForgotPassword/ForgotPassword.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, CardBody, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\";\nimport api from \"../../../utils/apiClient\";\nimport APIConstant from \"../../../utils/constants\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nclass ForgotPassword extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === \"username\") {\n        if (e.target.value === \"\" || e.target.value === null) {\n          this.setState({\n            usernameError: true\n          });\n          this.show(\"username\", true);\n        } else {\n          this.setState({\n            usernameError: false,\n            username: e.target.value\n          });\n          this.show(\"username\", false);\n        }\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      usernameError: true\n    };\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  onForgot() {\n    if (this.state.usernameError === false) {\n      const form = {\n        'username': this.state.username\n      };\n      api.post(APIConstant.path.forgotpassword, form).then(res => {\n        if (res.success) {\n          toast.success(res.message);\n          this.props.history.push('/login');\n        } else {\n          toast.error(res.message);\n        }\n      }).catch(err => {\n        toast.error(err);\n      });\n    } else {\n      this.show(\"username\", this.state.usernameError);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      lg: \"7\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mx-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"ForgotPassword\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Reset Password Form\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      name: \"username\",\n      type: \"text\",\n      id: \"username\",\n      className: \"\",\n      placeholder: \"Username\",\n      autoComplete: \"username\",\n      onChange: e => this.handleChange(e),\n      value: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      className: \"px-4\",\n      onClick: () => this.onForgot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))))));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Pages/ForgotPassword/ForgotPassword.js"],"names":["React","Component","Button","Card","CardBody","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","api","APIConstant","ToastContainer","toast","ForgotPassword","constructor","props","context","handleChange","e","setState","target","name","value","usernameError","show","username","state","field","condition","document","getElementById","className","onForgot","form","post","path","forgotpassword","then","res","success","message","history","push","error","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\";\nimport api from \"../../../utils/apiClient\";\nimport APIConstant from \"../../../utils/constants\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nclass ForgotPassword extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      username: \"\",\n      usernameError: true\n    };\n  }\n\n  \n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    if (e.target.name === \"username\") {\n      if (e.target.value === \"\" || e.target.value === null) {\n        this.setState({\n          usernameError: true\n        });\n        this.show(\"username\", true);\n      } else {\n        this.setState({\n          usernameError: false,\n          username: e.target.value\n        });\n        this.show(\"username\", false);\n      }\n    }\n  };\n\n  show(field,condition)\n  {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    }\n    else\n    {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  onForgot() {\n    if(this.state.usernameError===false){\n      const form = {\n        'username': this.state.username\n      }\n\n      api.post(APIConstant.path.forgotpassword, form)\n      .then(res => {\n        if (res.success) {\n          toast.success(res.message)\n          this.props.history.push('/login')\n        }\n        else {\n          toast.error(res.message)\n       }\n      }).catch(err => {\n          toast.error(err)\n      })\n     }\n     else\n     {\n        this.show(\"username\",this.state.usernameError)\n     }\n  }\n\n  render() {\n    return (\n      <div>\n         <ToastContainer></ToastContainer>\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n              <Card className=\"mx-4\">\n                <CardBody className=\"p-4\">\n                  <Form>\n                    <h1>ForgotPassword</h1>\n                    <p className=\"text-muted\">Reset Password Form</p>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"icon-user\"></i>\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        name=\"username\"\n                        type=\"text\"\n                        id=\"username\"\n                        className=\"\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        onChange={e => this.handleChange(e)}\n                        value={this.state.username}\n                      />\n                    </InputGroup>\n                    <Button\n                      color=\"primary\"\n                      className=\"px-4\"\n                      onClick={() => this.onForgot()}\n                    >\n                      Submit\n                    </Button>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}