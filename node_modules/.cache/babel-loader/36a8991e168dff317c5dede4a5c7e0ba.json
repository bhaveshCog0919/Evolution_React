{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/Levy/Levy.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport APIConstant from '../../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport { CommonConfig } from '../../../utils/constants';\nimport { toast } from 'react-toastify';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport moment from 'moment';\n\nclass Levy extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.LevyList.length ? l : this.state.LevyList.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.LevyList.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.export = () => {\n      this.dt.exportCSV();\n    };\n\n    this.openModal = () => {\n      this.setState({\n        primary: true\n      });\n    };\n\n    this.edit = rowData => {\n      this.setState({\n        LevyId: rowData.LevyId,\n        country: rowData.country,\n        type: rowData.type,\n        rate1: rowData.rate1,\n        rateBasis1: rowData.rateBasis1,\n        rate2: rowData.rate2,\n        rateBasis2: rowData.rateBasis2,\n        amountInEUR: rowData.amountInEUR,\n        amountInGBP: rowData.amountInGBP,\n        effectiveDate: rowData.effectiveDate,\n        effectiveDateError: false,\n        countryError: false,\n        typeError: false,\n        rate1Error: false,\n        rateBasis1Error: false,\n        rate2Error: false,\n        rateBasis2Error: false,\n        amountInEURError: false,\n        amountInGBPError: false,\n        buttonName: 'Update',\n        heading: 'Update',\n        toastName: 'Updated',\n        primary: true\n      });\n    };\n\n    this.openDeleteModal = rowData => {\n      this.setState({\n        toggleModal: true,\n        LevyId: rowData.LevyId,\n        country: rowData.country\n      });\n    };\n\n    this.goToHistoryPage = rowData => {\n      console.log(\"rowData\", rowData);\n      var Id = rowData.LevyId;\n      this.props.history.push({\n        pathname: '/Master/LevyHistory/' + Id,\n        state: {\n          Id: Id\n        }\n      });\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false,\n        LevyId: '',\n        country: ''\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        country: '',\n        countryError: true,\n        type: '',\n        typeError: true,\n        rate1: '',\n        rate1Error: true,\n        rateBasis1: '',\n        rateBasis1Error: true,\n        rate2: '',\n        rate2Error: true,\n        rateBasis2: '',\n        rateBasis2Error: true,\n        amountInEUR: '',\n        amountInEURError: true,\n        amountInGBP: '',\n        amountInGBPError: true,\n        effectiveDate: moment().format(CommonConfig.dateFormat.YearMonthDay),\n        effectiveDateError: true,\n        LevyId: '',\n        // rowData: '',\n        heading: 'Add',\n        buttonName: 'Save',\n        toastName: 'Saved',\n        primary: false\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'rate1') {\n        if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\n          this.setState({\n            rate1Error: true\n          });\n          this.show(\"rate1\", true);\n        } else {\n          let rate1RegEx = CommonConfig.RegExp.percentageWithNegative;\n          let rate1 = e.target.value;\n\n          if (e.target.value > 100 || !rate1RegEx.test(rate1)) {\n            this.setState({\n              rate1Error: true\n            });\n            this.show(\"rate1\", true);\n          } else {\n            this.setState({\n              rate1Error: false,\n              rate1: e.target.value\n            });\n            this.show(\"rate1\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'rate2') {\n        if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\n          this.setState({\n            rate2Error: true\n          });\n          this.show(\"rate2\", true);\n        } else {\n          let rate2RegEx = CommonConfig.RegExp.percentageWithNegative;\n          let rate2 = e.target.value;\n\n          if (e.target.value > 100 || !rate2RegEx.test(rate2)) {\n            this.setState({\n              rate2Error: true\n            });\n            this.show(\"rate2\", true);\n          } else {\n            this.setState({\n              rate2Error: false,\n              rate2: e.target.value\n            });\n            this.show(\"rate2\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'amountInEUR') {\n        if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\n          this.setState({\n            amountInEURError: true\n          });\n          this.show(\"amountInEUR\", true);\n        } else {\n          let invSpace = CommonConfig.RegExp.decimalWithNegative;\n          let amountInEUR = e.target.value;\n\n          if (!invSpace.test(amountInEUR)) {\n            this.setState({\n              amountInEURError: true\n            });\n            this.show(\"amountInEUR\", true);\n          } else {\n            this.setState({\n              amountInEURError: false,\n              amountInEUR: e.target.value\n            });\n            this.show(\"amountInEUR\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'amountInGBP') {\n        if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\n          this.setState({\n            amountInGBPError: true\n          });\n          this.show(\"amountInGBP\", true);\n        } else {\n          let invSpace = CommonConfig.RegExp.decimalWithNegative;\n          let amountInGBP = e.target.value;\n\n          if (!invSpace.test(amountInGBP)) {\n            this.setState({\n              amountInGBPError: true\n            });\n            this.show(\"amountInGBP\", true);\n          } else {\n            this.setState({\n              amountInGBPError: false,\n              amountInGBP: e.target.value\n            });\n            this.show(\"amountInGBP\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'effectiveDate') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            effectiveDateError: true\n          });\n          this.show(\"effectiveDate\", true);\n        } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\n          this.setState({\n            effectiveDateError: true\n          });\n          this.show(\"effectiveDate\", true);\n        } else {\n          this.setState({\n            effectiveDateError: false,\n            effectiveDate: e.target.value\n          });\n          this.show(\"effectiveDate\", false);\n        }\n      }\n    };\n\n    const {\n      t\n    } = props;\n    let columns = [{\n      field: \"country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"type\",\n      header: \"Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"rate1\",\n      header: \"Rate1\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"rateBasis1\",\n      header: \"RateBasis1\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"rate2\",\n      header: \"Rate2\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"rateBasis2\",\n      header: \"RateBasis2\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      field: \"amountInEUR\",\n      header: \"AmountInEUR\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      field: \"amountInGBP\",\n      header: \"AmountInGBP\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 8\n    }];\n    this.state = {\n      LevyId: '',\n      country: '',\n      countryarr: [],\n      countryError: true,\n      type: '',\n      typeError: true,\n      typearr: [],\n      rate1: '',\n      rate1Error: true,\n      rateBasis1: '',\n      rateBasis1arr: [],\n      rateBasis1Error: true,\n      rate2: '',\n      rate2Error: true,\n      rateBasis2: '',\n      rateBasis2arr: [],\n      rateBasis2Error: true,\n      amountInEUR: '',\n      amountInEURError: true,\n      amountInGBP: '',\n      amountInGBPError: true,\n      effectivedate: 'Effective Date',\n      effectiveDate: moment().format('YYYY-MM-DD'),\n      effectiveDateError: true,\n      heading: 'Add',\n      buttonName: 'Save',\n      toastName: 'Saved',\n      toggleModal: false,\n      cols: columns,\n      LevyList: [],\n      rowData: '',\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      primary: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: t(\"masterLevy:DataTableHeaders.\" + col.header + \"\"),\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  componentDidMount() {\n    this.getLevyList();\n    this.getCountry();\n    this.getRateBasis1();\n    this.getRateBasis2();\n    this.getLevyType();\n  }\n\n  getCountry() {\n    try {\n      const data = {\n        stringmaptype: 'COUNTRY'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var country = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            country.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            countryarr: country\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getRateBasis1() {\n    try {\n      const data = {\n        stringmaptype: 'RATEBASIS'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var rateBasis1 = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            rateBasis1.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            rateBasis1arr: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getRateBasis2() {\n    try {\n      const data = {\n        stringmaptype: 'RATEBASIS'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var rateBasis2 = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            rateBasis2.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            rateBasis2arr: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getLevyType() {\n    try {\n      const data = {\n        stringmaptype: 'LEVYTYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var type = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            type.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            typearr: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getLevyList() {\n    try {\n      api.post('api/getLevy').then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (var i = 0; i < res.data.length; i++) {\n            // var Updated = (res.data[i].updatedon === undefined || res.data[i].updatedon === null || res.data[i].updatedon === \"\") ? (\"No Updates\") : (Moment(res.data[i].updatedon).format(CommonConfig.dateFormat.dateTime));\n            formattedData.push({\n              LevyId: res.data[i].LevyId,\n              country: res.data[i].Country,\n              type: res.data[i].Type,\n              rate1: res.data[i].Rate1,\n              rateBasis1: res.data[i].RateBasis1,\n              rate2: res.data[i].Rate2,\n              rateBasis2: res.data[i].RateBasis2,\n              amountInEUR: res.data[i].AmountEUR,\n              amountInGBP: res.data[i].AmountGBP,\n              effectiveDate: CommonConfig.isEmpty(res.data[i].StartDate) ? '' : moment().format('YYYY-MM-DD')\n            });\n            let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n            let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\n            this.setState({\n              LevyList: formattedData,\n              str: str\n            });\n          }\n        } else {\n          console.log(\" getLevy Else\");\n        }\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  Delete() {\n    const {\n      t\n    } = this.props;\n\n    try {\n      let data = {\n        LevyId: this.state.LevyId,\n        CreatedBy: CommonConfig.loggedInUserId()\n      };\n      api.post('api/deleteLevy', data).then(res => {\n        if (res.success) {\n          this.toggleLarge();\n          toast.success(t(\"masterLevy:Toast.Delete\"));\n          this.getLevyList();\n        }\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  Save() {\n    debugger; //console.log(\"this.state.LevyList...\", this.state.LevyList);\n\n    const {\n      t\n    } = this.props;\n\n    try {\n      if (this.state.countryError === true || this.state.typeError === true || this.state.effectiveDateError === true) {\n        this.show(\"country\", this.state.countryError);\n        this.show(\"type\", this.state.typeError);\n        this.show(\"effectiveDate\", this.state.effectiveDateError);\n      } else if (this.state.type === \"ONE RATE\" && (this.state.rate1Error === true || this.state.rateBasis1Error === true)) {\n        this.show(\"rate1\", this.state.rate1Error);\n        this.show(\"rateBasis1\", this.state.rateBasis1Error);\n      } else if (this.state.type === \"ADD TWO RATES\" && (this.state.rate1Error === true || this.state.rateBasis1Error === true || this.state.rate2Error === true || this.state.rateBasis2Error === true)) {\n        this.show(\"rate1\", this.state.rate1Error);\n        this.show(\"rateBasis1\", this.state.rateBasis1Error);\n        this.show(\"rate2\", this.state.rate2Error);\n        this.show(\"rateBasis2\", this.state.rateBasis2Error);\n      } else if (this.state.type === \"FIXED AMOUNT\" && (this.state.amountInEURError === true || this.state.amountInGBPError === true)) {\n        this.show(\"amountInEUR\", this.state.amountInEURError);\n        this.show(\"amountInGBP\", this.state.amountInGBPError);\n      } else {\n        let checkLevyCountry;\n\n        if (this.state.buttonName === \"Save\") {\n          checkLevyCountry = this.state.LevyList.filter(x => x.country === this.state.country);\n\n          if (checkLevyCountry.length) {\n            toast.error(t(\"masterLevy:Toast.error\"));\n            return null;\n          }\n        }\n\n        if (this.state.buttonName === \"Update\") {\n          let array = this.state.LevyList.filter(x => x.LevyId !== this.state.LevyId);\n          checkLevyCountry = array.filter(x => x.country === this.state.country);\n\n          if (checkLevyCountry.length) {\n            toast.error(t(\"masterLevy:Toast.error\"));\n            return null;\n          }\n        }\n\n        let data = {\n          LevyId: this.state.LevyId,\n          country: this.state.country,\n          type: this.state.type,\n          rate1: this.state.rate1,\n          rateBasis1: this.state.rateBasis1,\n          rate2: this.state.rate2,\n          rateBasis2: this.state.rateBasis2,\n          amountInEUR: this.state.amountInEUR,\n          amountInGBP: this.state.amountInGBP,\n          CreatedBy: CommonConfig.loggedInUserId(),\n          LanguageId: this.state.LanguageId,\n          effectiveDate: this.state.effectiveDate\n        };\n        api.post('api/addUpdateLevy', data).then(res => {\n          if (res.success) {\n            toast.success(t(\"masterLevy:Toast.\" + this.state.toastName + \"\"));\n            this.reset();\n            this.getLevyList();\n          }\n        });\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  actionTemplate(rowData, column) {\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-pencil\",\n      className: \"p-button-warning\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"buttons.Edit\"),\n      style: {\n        padding: 2\n      },\n      onClick: () => this.edit(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"buttons.Delete\"),\n      style: {\n        padding: 2\n      },\n      onClick: () => this.openDeleteModal(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-clock\",\n      className: \"p-button-primary\",\n      tooltip: \"Show History\",\n      onClick: () => this.goToHistoryPage(rowData),\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      style: {\n        padding: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  selectType(value, type) {\n    if (type === 'country') {\n      if (value === '' || value === null || value === undefined) {\n        this.setState({\n          countryError: true,\n          country: value\n        });\n        this.show('country', true);\n      } else {\n        this.setState({\n          countryError: false,\n          country: value\n        });\n        this.show('country', false);\n      }\n    }\n\n    if (type === 'type') {\n      if (value === '' || value === null || value === undefined) {\n        this.setState({\n          typeError: true,\n          type: value\n        });\n        this.show('type', true);\n      } else {\n        this.setState({\n          typeError: false,\n          type: value\n        });\n\n        if (value == 'ADD TWO RATES') {\n          this.setState({\n            rate1Error: true,\n            rateBasis1Error: true,\n            rate2Error: true,\n            rateBasis2Error: true\n          });\n        } else if (value == 'FIXED AMOUNT') {\n          this.setState({\n            amountInEURError: true,\n            amountInGBPError: true\n          });\n        } else if (value == 'ONE RATE') {\n          this.setState({\n            rate1Error: true,\n            rateBasis1Error: true\n          });\n        }\n\n        this.setState({\n          rate1: '',\n          rateBasis1: '',\n          rate2: '',\n          rateBasis2: '',\n          amountInEUR: '',\n          amountInGBP: ''\n        });\n        this.show('type', false);\n      }\n    }\n\n    if (type === 'rateBasis1') {\n      if (value === '' || value === null || value === undefined) {\n        this.setState({\n          rateBasis1Error: true,\n          rateBasis1: value\n        });\n        this.show('rateBasis1', true);\n      } else {\n        this.setState({\n          rateBasis1Error: false,\n          rateBasis1: value\n        });\n        this.show('rateBasis1', false);\n      }\n    }\n\n    if (type === 'rateBasis2') {\n      if (value === '' || value === null || value === undefined) {\n        this.setState({\n          rateBasis2Error: true,\n          rateBasis2: value\n        });\n        this.show('rateBasis2', true);\n      } else {\n        this.setState({\n          rateBasis2Error: false,\n          rateBasis2: value\n        });\n        this.show('rateBasis2', false);\n      }\n    }\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const mandatoryFieldMsg = t(\"mandatoryFieldMsg\");\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: t(\"masterLevy:DataTableHeaders.\" + col.header + \"\"),\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 21\n      }\n    }, t(\"masterLevy:Header\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: t(\"translation:labels.globalSearchLabel\"),\n      size: \"30\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: t(\"translation:labels.shoeHideColumnLabel\"),\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"masterLevy:AddLevy\"),\n      onClick: this.openModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: \"Export As CSV\",\n      onClick: this.export,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.LevyList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.LevyList.length,\n      exportFilename: t(\"masterLevy:LevyList\"),\n      currentPageReportTemplate: this.state.str // scrollable={true} scrollHeight=\"250px\"\n      ,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: t(\"translation:NoRecordsMsg\"),\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 21\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.primary,\n      toggle: this.reset,\n      className: 'modal-primary ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 21\n      }\n    }, t(\"masterLevy:ModalHeading.\" + this.state.heading + \"\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      action: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 37\n      }\n    }, mandatoryFieldMsg))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 41\n      }\n    }, t(\"masterLevy:Country.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"country\",\n      id: \"country\",\n      onChange: e => this.selectType(e.target.value, 'country'),\n      value: this.state.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:Country.defaultValue\")), this.state.countryarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 57\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 41\n      }\n    }, t(\"masterLevy:Country.error\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 41\n      }\n    }, this.state.effectivedate), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"effectiveDate\",\n      id: \"effectiveDate\",\n      onChange: e => this.handleChange(e),\n      value: this.state.effectiveDate,\n      min: moment().format('YYYY-MM-DD'),\n      max: moment().add(100, 'years').format('YYYY-MM-DD'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 41\n      }\n    }, \"Please enter effective date\")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 41\n      }\n    }, t(\"masterLevy:Type.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"type\",\n      id: \"type\",\n      onChange: e => this.selectType(e.target.value, 'type'),\n      value: this.state.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:Type.defaultValue\")), this.state.typearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 57\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 41\n      }\n    }, t(\"masterLevy:Type.error\"))))), this.state.type === 'ONE RATE' ? /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"rate1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:Rate1.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"rate1\",\n      id: \"rate1\",\n      placeholder: t(\"masterLevy:Rate1.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.rate1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:Rate1.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"rateBasis1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:RateBasis1.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"rateBasis1\",\n      id: \"rateBasis1\",\n      onChange: e => this.selectType(e.target.value, 'rateBasis1'),\n      value: this.state.rateBasis1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:RateBasis1.defaultValue\")), this.state.rateBasis1arr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 61\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:RateBasis1.error\"))))) : null, this.state.type === 'ADD TWO RATES' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"rate1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:Rate1.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"rate1\",\n      id: \"rate1\",\n      placeholder: t(\"masterLevy:Rate1.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.rate1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:Rate1.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"rateBasis1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:RateBasis1.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"rateBasis1\",\n      id: \"rateBasis1\",\n      onChange: e => this.selectType(e.target.value, 'rateBasis1'),\n      value: this.state.rateBasis1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 53\n      }\n    }, t(\"masterLevy:RateBasis1.defaultValue\")), this.state.rateBasis1arr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 65\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:RateBasis1.error\"))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"rate2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:Rate2.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"rate2\",\n      id: \"rate2\",\n      placeholder: t(\"masterLevy:Rate2.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.rate2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:Rate2.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"rateBasis2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:RateBasis2.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"rateBasis2\",\n      id: \"rateBasis2\",\n      onChange: e => this.selectType(e.target.value, 'rateBasis2'),\n      value: this.state.rateBasis2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 53\n      }\n    }, t(\"masterLevy:RateBasis2.defaultValue\")), this.state.rateBasis2arr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 65\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 49\n      }\n    }, t(\"masterLevy:RateBasis2.error\")))))) : null, this.state.type === 'FIXED AMOUNT' ? /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"eur\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:AmountInEUR.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"amountInEUR\",\n      id: \"amountInEUR\",\n      placeholder: t(\"masterLevy:AmountInEUR.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.amountInEUR,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:AmountInEUR.error_blank\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"gbp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:AmountInGBP.label\"), \"*\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"amountInGBP\",\n      id: \"amountInGBP\",\n      placeholder: t(\"masterLevy:AmountInGBP.label\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.amountInGBP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 45\n      }\n    }, t(\"masterLevy:AmountInGBP.error_blank\"))))) : null)), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.Save(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 74\n      }\n    }), \" \", t(\"buttons.\" + this.state.buttonName + \"\")), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 67\n      }\n    }), \" \", t(\"buttons.Cancel\")))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 21\n      }\n    }, t(\"masterLevy:Delete.label\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 21\n      }\n    }, \"Are you sure, You want to delete Levy for \", this.state.country, \"?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.Delete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 76\n      }\n    }), \" \", t(\"buttons.Yes\")), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 73\n      }\n    }), \" \", t(\"buttons.No\")))));\n  }\n\n}\n\nexport default withTranslation()(Levy);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/Levy/Levy.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","APIConstant","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","api","CommonConfig","toast","useTranslation","withTranslation","Trans","moment","Levy","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","LevyList","length","str","setState","selectedPage","rowsPerPage","export","dt","exportCSV","openModal","primary","edit","rowData","LevyId","country","type","rate1","rateBasis1","rate2","rateBasis2","amountInEUR","amountInGBP","effectiveDate","effectiveDateError","countryError","typeError","rate1Error","rateBasis1Error","rate2Error","rateBasis2Error","amountInEURError","amountInGBPError","buttonName","heading","toastName","openDeleteModal","toggleModal","goToHistoryPage","console","log","Id","history","push","pathname","toggleLarge","reset","format","dateFormat","YearMonthDay","handleChange","target","name","value","undefined","show","rate1RegEx","RegExp","percentageWithNegative","test","rate2RegEx","invSpace","decimalWithNegative","t","columns","field","header","sortable","filter","filterMatchMode","id","body","actionTemplate","bind","countryarr","typearr","rateBasis1arr","rateBasis2arr","effectivedate","cols","LanguageId","i18n","language","rowsPerPageOptions","dataTableConfig","globalFilter","colOptions","col","label","onColumnToggle","event","valueInOrder","sort","x","y","componentDidMount","getLevyList","getCountry","getRateBasis1","getRateBasis2","getLevyType","data","stringmaptype","post","path","dropdownbycode","then","res","success","i","StringMapName","Description","catch","err","error","formattedData","Country","Type","Rate1","RateBasis1","Rate2","RateBasis2","AmountEUR","AmountGBP","isEmpty","StartDate","Delete","CreatedBy","loggedInUserId","Save","checkLevyCountry","array","column","position","padding","selectType","condition","document","getElementById","className","render","mandatoryFieldMsg","map","textAlign","margin","marginRight","columnToggleIcon","width","el","color","marginTop","key","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport APIConstant from '../../../utils/constants';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport { toast } from 'react-toastify';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport moment from 'moment';\r\n\r\nclass Levy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { t } = props;\r\n        let columns = [\r\n            { field: \"country\", header: \"Country\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"type\", header: \"Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"rate1\", header: \"Rate1\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { field: \"rateBasis1\", header: \"RateBasis1\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"rate2\", header: \"Rate2\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { field: \"rateBasis2\", header: \"RateBasis2\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { field: \"amountInEUR\", header: \"AmountInEUR\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { field: \"amountInGBP\", header: \"AmountInGBP\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 8 }\r\n        ];\r\n\r\n        this.state = {\r\n            LevyId: '',\r\n            country: '',\r\n            countryarr: [],\r\n            countryError: true,\r\n            type: '',\r\n            typeError: true,\r\n            typearr: [],\r\n            rate1: '',\r\n            rate1Error: true,\r\n            rateBasis1: '',\r\n            rateBasis1arr: [],\r\n            rateBasis1Error: true,\r\n            rate2: '',\r\n            rate2Error: true,\r\n            rateBasis2: '',\r\n            rateBasis2arr: [],\r\n            rateBasis2Error: true,\r\n            amountInEUR: '',\r\n            amountInEURError: true,\r\n            amountInGBP: '',\r\n            amountInGBPError: true,\r\n            effectivedate: 'Effective Date',\r\n            effectiveDate: moment().format('YYYY-MM-DD'),\r\n            effectiveDateError: true,\r\n            heading: 'Add',\r\n            buttonName: 'Save',\r\n            toastName: 'Saved',\r\n            toggleModal: false,\r\n            cols: columns,\r\n            LevyList: [],\r\n            rowData: '',\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            primary: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: t(\"masterLevy:DataTableHeaders.\" + col.header + \"\"), value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLevyList();\r\n        this.getCountry();\r\n        this.getRateBasis1();\r\n        this.getRateBasis2();\r\n        this.getLevyType();\r\n    }\r\n\r\n    getCountry() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'COUNTRY',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var country = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        country.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ countryarr: country });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getRateBasis1() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'RATEBASIS',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var rateBasis1 = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        rateBasis1.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ rateBasis1arr: res.data });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getRateBasis2() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'RATEBASIS',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var rateBasis2 = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        rateBasis2.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ rateBasis2arr: res.data });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    getLevyType() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'LEVYTYPE',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var type = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        type.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ typearr: res.data });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.LevyList.length) ? l : this.state.LevyList.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.LevyList.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    getLevyList() {\r\n        try {\r\n            api.post('api/getLevy').then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        // var Updated = (res.data[i].updatedon === undefined || res.data[i].updatedon === null || res.data[i].updatedon === \"\") ? (\"No Updates\") : (Moment(res.data[i].updatedon).format(CommonConfig.dateFormat.dateTime));\r\n                        formattedData.push({\r\n                            LevyId: res.data[i].LevyId,\r\n                            country: res.data[i].Country,\r\n                            type: res.data[i].Type,\r\n                            rate1: res.data[i].Rate1,\r\n                            rateBasis1: res.data[i].RateBasis1,\r\n                            rate2: res.data[i].Rate2,\r\n                            rateBasis2: res.data[i].RateBasis2,\r\n                            amountInEUR: res.data[i].AmountEUR,\r\n                            amountInGBP: res.data[i].AmountGBP,\r\n                            effectiveDate: CommonConfig.isEmpty(res.data[i].StartDate) ? '' : moment().format('YYYY-MM-DD'),\r\n                        });\r\n                        let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                        let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n\r\n                        this.setState({ LevyList: formattedData, str: str });\r\n                    }\r\n                } else {\r\n                    console.log(\" getLevy Else\");\r\n                }\r\n            }).catch(err => {\r\n\r\n            });\r\n        } catch (error) {\r\n            console.log(\"err\", error);\r\n        }\r\n    }\r\n\r\n    export = () => {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            primary: true\r\n        })\r\n    }\r\n\r\n    edit = (rowData) => {\r\n        this.setState({\r\n            LevyId: rowData.LevyId,\r\n            country: rowData.country,\r\n            type: rowData.type,\r\n            rate1: rowData.rate1,\r\n            rateBasis1: rowData.rateBasis1,\r\n            rate2: rowData.rate2,\r\n            rateBasis2: rowData.rateBasis2,\r\n            amountInEUR: rowData.amountInEUR,\r\n            amountInGBP: rowData.amountInGBP,\r\n            effectiveDate: rowData.effectiveDate,\r\n            effectiveDateError: false,\r\n            countryError: false,\r\n            typeError: false,\r\n            rate1Error: false,\r\n            rateBasis1Error: false,\r\n            rate2Error: false,\r\n            rateBasis2Error: false,\r\n            amountInEURError: false,\r\n            amountInGBPError: false,\r\n            buttonName: 'Update',\r\n            heading: 'Update',\r\n            toastName: 'Updated',\r\n            primary: true\r\n        });\r\n    }\r\n\r\n    openDeleteModal = (rowData) => {\r\n        this.setState({\r\n            toggleModal: true,\r\n            LevyId: rowData.LevyId,\r\n            country: rowData.country,\r\n        });\r\n    }\r\n\r\n    goToHistoryPage = (rowData) => {\r\n        console.log(\"rowData\", rowData);\r\n        var Id = rowData.LevyId;\r\n        this.props.history.push({\r\n            pathname: '/Master/LevyHistory/' + Id,\r\n            state: {\r\n                Id: Id,\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleLarge = () => {\r\n        this.setState({\r\n            toggleModal: false,\r\n            LevyId: '',\r\n            country: ''\r\n        });\r\n    }\r\n\r\n    Delete() {\r\n        const { t } = this.props;\r\n        try {\r\n            let data = {\r\n                LevyId: this.state.LevyId,\r\n                CreatedBy: CommonConfig.loggedInUserId()\r\n            }\r\n            api.post('api/deleteLevy', data).then(res => {\r\n                if (res.success) {\r\n                    this.toggleLarge();\r\n                    toast.success(t(\"masterLevy:Toast.Delete\"));\r\n                    this.getLevyList();\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    Save() {\r\n        debugger\r\n        //console.log(\"this.state.LevyList...\", this.state.LevyList);\r\n        const { t } = this.props;\r\n        try {\r\n            if (this.state.countryError === true ||\r\n                this.state.typeError === true ||\r\n                this.state.effectiveDateError === true) {\r\n                this.show(\"country\", this.state.countryError);\r\n                this.show(\"type\", this.state.typeError);\r\n                this.show(\"effectiveDate\", this.state.effectiveDateError);\r\n            }\r\n            else if (this.state.type === \"ONE RATE\" && (this.state.rate1Error === true || this.state.rateBasis1Error === true)) {\r\n                this.show(\"rate1\", this.state.rate1Error);\r\n                this.show(\"rateBasis1\", this.state.rateBasis1Error);\r\n            } else if (this.state.type === \"ADD TWO RATES\" && (this.state.rate1Error === true || this.state.rateBasis1Error === true || this.state.rate2Error === true || this.state.rateBasis2Error === true)) {\r\n                this.show(\"rate1\", this.state.rate1Error);\r\n                this.show(\"rateBasis1\", this.state.rateBasis1Error);\r\n                this.show(\"rate2\", this.state.rate2Error);\r\n                this.show(\"rateBasis2\", this.state.rateBasis2Error);\r\n            } else if (this.state.type === \"FIXED AMOUNT\" && (this.state.amountInEURError === true || this.state.amountInGBPError === true)) {\r\n                this.show(\"amountInEUR\", this.state.amountInEURError);\r\n                this.show(\"amountInGBP\", this.state.amountInGBPError);\r\n            }\r\n            else {\r\n                let checkLevyCountry;\r\n                if (this.state.buttonName === \"Save\") {\r\n                    checkLevyCountry = this.state.LevyList.filter(x => x.country === this.state.country);\r\n                    if (checkLevyCountry.length) {\r\n                        toast.error(t(\"masterLevy:Toast.error\"));\r\n                        return null;\r\n                    }\r\n                }\r\n\r\n                if (this.state.buttonName === \"Update\") {\r\n                    let array = this.state.LevyList.filter(x => x.LevyId !== this.state.LevyId);\r\n                    checkLevyCountry = array.filter(x => x.country === (this.state.country));\r\n                    if (checkLevyCountry.length) {\r\n                        toast.error(t(\"masterLevy:Toast.error\"));\r\n                        return null;\r\n                    }\r\n                }\r\n\r\n                let data = {\r\n                    LevyId: this.state.LevyId,\r\n                    country: this.state.country,\r\n                    type: this.state.type,\r\n                    rate1: this.state.rate1,\r\n                    rateBasis1: this.state.rateBasis1,\r\n                    rate2: this.state.rate2,\r\n                    rateBasis2: this.state.rateBasis2,\r\n                    amountInEUR: this.state.amountInEUR,\r\n                    amountInGBP: this.state.amountInGBP,\r\n                    CreatedBy: CommonConfig.loggedInUserId(),\r\n                    LanguageId: this.state.LanguageId,\r\n                    effectiveDate: this.state.effectiveDate,\r\n                }\r\n                api.post('api/addUpdateLevy', data).then(res => {\r\n\r\n                    if (res.success) {\r\n                        toast.success(t(\"masterLevy:Toast.\" + this.state.toastName + \"\"));\r\n                        this.reset();\r\n                        this.getLevyList();\r\n                    }\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        const { t } = this.props;\r\n\r\n        return <div className=\"text-center\">\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\" tooltipOptions={{ position: 'bottom' }} tooltip={t(\"buttons.Edit\")} style={{ padding: 2 }}\r\n                onClick={() => this.edit(rowData)} />\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltipOptions={{ position: 'bottom' }} tooltip={t(\"buttons.Delete\")} style={{ padding: 2 }}\r\n                onClick={() => this.openDeleteModal(rowData)} />\r\n            <Button type=\"button\" icon=\"pi pi-clock\" className=\"p-button-primary\" tooltip=\"Show History\" onClick={() => this.goToHistoryPage(rowData)} tooltipOptions={{ position: 'bottom' }} style={{ padding: 2 }}></Button>\r\n        </div>;\r\n    }\r\n\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            country: '',\r\n            countryError: true,\r\n            type: '',\r\n            typeError: true,\r\n            rate1: '',\r\n            rate1Error: true,\r\n            rateBasis1: '',\r\n            rateBasis1Error: true,\r\n            rate2: '',\r\n            rate2Error: true,\r\n            rateBasis2: '',\r\n            rateBasis2Error: true,\r\n            amountInEUR: '',\r\n            amountInEURError: true,\r\n            amountInGBP: '',\r\n            amountInGBPError: true,\r\n            effectiveDate: moment().format(CommonConfig.dateFormat.YearMonthDay),\r\n            effectiveDateError: true,\r\n            LevyId: '',\r\n            // rowData: '',\r\n            heading: 'Add',\r\n            buttonName: 'Save',\r\n            toastName: 'Saved',\r\n            primary: false\r\n        })\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'country') {\r\n            if (value === '' || value === null || value === undefined) {\r\n                this.setState({ countryError: true, country: value });\r\n                this.show('country', true);\r\n            } else {\r\n                this.setState({ countryError: false, country: value });\r\n                this.show('country', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'type') {\r\n            if (value === '' || value === null || value === undefined) {\r\n                this.setState({ typeError: true, type: value });\r\n                this.show('type', true);\r\n            } else {\r\n                this.setState({ typeError: false, type: value });\r\n                if (value == 'ADD TWO RATES') {\r\n                    this.setState({ rate1Error: true, rateBasis1Error: true, rate2Error: true, rateBasis2Error: true });\r\n                } else if (value == 'FIXED AMOUNT') {\r\n                    this.setState({ amountInEURError: true, amountInGBPError: true });\r\n                } else if (value == 'ONE RATE') {\r\n                    this.setState({ rate1Error: true, rateBasis1Error: true });\r\n                }\r\n                this.setState({\r\n                    rate1: '', rateBasis1: '', rate2: '', rateBasis2: '', amountInEUR: '', amountInGBP: ''\r\n                });\r\n                this.show('type', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'rateBasis1') {\r\n            if (value === '' || value === null || value === undefined) {\r\n                this.setState({ rateBasis1Error: true, rateBasis1: value });\r\n                this.show('rateBasis1', true);\r\n            } else {\r\n                this.setState({ rateBasis1Error: false, rateBasis1: value });\r\n                this.show('rateBasis1', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'rateBasis2') {\r\n            if (value === '' || value === null || value === undefined) {\r\n                this.setState({ rateBasis2Error: true, rateBasis2: value });\r\n                this.show('rateBasis2', true);\r\n            } else {\r\n                this.setState({ rateBasis2Error: false, rateBasis2: value });\r\n                this.show('rateBasis2', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'rate1') {\r\n            if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\r\n                this.setState({ rate1Error: true });\r\n                this.show(\"rate1\", true);\r\n            } else {\r\n                let rate1RegEx = CommonConfig.RegExp.percentageWithNegative;\r\n                let rate1 = e.target.value;\r\n                if (e.target.value > 100 || !rate1RegEx.test(rate1)) {\r\n                    this.setState({ rate1Error: true });\r\n                    this.show(\"rate1\", true);\r\n                } else {\r\n                    this.setState({ rate1Error: false, rate1: e.target.value });\r\n                    this.show(\"rate1\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'rate2') {\r\n            if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\r\n                this.setState({ rate2Error: true });\r\n                this.show(\"rate2\", true);\r\n            } else {\r\n                let rate2RegEx = CommonConfig.RegExp.percentageWithNegative;\r\n                let rate2 = e.target.value;\r\n                if (e.target.value > 100 || !rate2RegEx.test(rate2)) {\r\n                    this.setState({ rate2Error: true });\r\n                    this.show(\"rate2\", true);\r\n                } else {\r\n                    this.setState({ rate2Error: false, rate2: e.target.value });\r\n                    this.show(\"rate2\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'amountInEUR') {\r\n            if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\r\n                this.setState({ amountInEURError: true });\r\n                this.show(\"amountInEUR\", true);\r\n            } else {\r\n                let invSpace = CommonConfig.RegExp.decimalWithNegative;\r\n                let amountInEUR = e.target.value;\r\n                if (!invSpace.test(amountInEUR)) {\r\n                    this.setState({ amountInEURError: true });\r\n                    this.show(\"amountInEUR\", true);\r\n                } else {\r\n                    this.setState({ amountInEURError: false, amountInEUR: e.target.value });\r\n                    this.show(\"amountInEUR\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'amountInGBP') {\r\n            if (e.target.value === '' || e.target.value === null || e.target.value === undefined) {\r\n                this.setState({ amountInGBPError: true });\r\n                this.show(\"amountInGBP\", true);\r\n            } else {\r\n                let invSpace = CommonConfig.RegExp.decimalWithNegative;\r\n                let amountInGBP = e.target.value;\r\n                if (!invSpace.test(amountInGBP)) {\r\n                    this.setState({ amountInGBPError: true });\r\n                    this.show(\"amountInGBP\", true);\r\n                } else {\r\n                    this.setState({ amountInGBPError: false, amountInGBP: e.target.value });\r\n                    this.show(\"amountInGBP\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'effectiveDate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ effectiveDateError: true });\r\n                this.show(\"effectiveDate\", true);\r\n            }  else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\r\n                this.setState({ effectiveDateError: true });\r\n                this.show(\"effectiveDate\", true);\r\n            } else {\r\n                this.setState({ effectiveDateError: false, effectiveDate: e.target.value });\r\n                this.show(\"effectiveDate\", false);\r\n            }\r\n        }\r\n    }\r\n\r\n    show(field, condition) {\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { t } = this.props;\r\n        const mandatoryFieldMsg = t(\"mandatoryFieldMsg\");\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={t(\"masterLevy:DataTableHeaders.\" + col.header + \"\")} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>{t(\"masterLevy:Header\")}</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <div style={{ textAlign: 'right' }}>\r\n                            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n                            <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder={t(\"translation:labels.globalSearchLabel\")} size=\"30\" style={{ marginRight: 10 }} />\r\n                        </div>\r\n\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip={t(\"translation:labels.shoeHideColumnLabel\")} tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-plus\" tooltipOptions={{ position: 'bottom' }} tooltip={t(\"masterLevy:AddLevy\")} onClick={this.openModal}></Button>\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltipOptions={{ position: 'bottom' }} tooltip=\"Export As CSV\" onClick={this.export}></Button>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-custom\">\r\n                    {/* <div className=\"header-right-option\"> */}\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.LevyList}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.LevyList.length}\r\n                        exportFilename={t(\"masterLevy:LevyList\")}\r\n                        currentPageReportTemplate={this.state.str}\r\n                        // scrollable={true} scrollHeight=\"250px\"\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage={t(\"translation:NoRecordsMsg\")}\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollable={true}\r\n                        scrollHeight=\"340px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n\r\n\r\n                <Modal isOpen={this.state.primary} toggle={this.reset}\r\n                    className={'modal-primary ' + this.props.className}>\r\n                    <ModalHeader toggle={this.reset}>{t(\"masterLevy:ModalHeading.\" + this.state.heading + \"\")}</ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <form className=\"form\" action=\"#\">\r\n\r\n                            <Row>\r\n                                <Col md=\"12\" className=\"text-right\">\r\n                                    <span style={{ color: \"red\" }}>{mandatoryFieldMsg}</span>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"6\">\r\n                                    <div className=\"input-box\">\r\n                                        <label for=\"country\">{t(\"masterLevy:Country.label\")}*</label>\r\n                                        <Input type=\"select\" name=\"country\" id=\"country\" onChange={(e) => this.selectType(e.target.value, 'country')} value={this.state.country}>\r\n                                            <option value=''>{t(\"masterLevy:Country.defaultValue\")}</option>\r\n                                            {this.state.countryarr.map((type, i) => {\r\n                                                return (<option value={type.key}>{type.label}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\" >{t(\"masterLevy:Country.error\")}</em>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"6\">\r\n                                    <div className=\"input-box\">\r\n                                        <label>{this.state.effectivedate}</label>\r\n                                        <Input type=\"date\" name=\"effectiveDate\" id=\"effectiveDate\" onChange={(e) => this.handleChange(e)} value={this.state.effectiveDate}\r\n                                            min={moment().format('YYYY-MM-DD')}\r\n                                            max={moment().add(100, 'years').format('YYYY-MM-DD')}\r\n                                        >\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\" >Please enter effective date</em>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"6\">\r\n                                    <div className=\"input-box\">\r\n                                        <label for=\"type\">{t(\"masterLevy:Type.label\")}*</label>\r\n                                        <Input type=\"select\" name=\"type\" id=\"type\" onChange={(e) => this.selectType(e.target.value, 'type')} value={this.state.type}>\r\n                                            <option value=''>{t(\"masterLevy:Type.defaultValue\")}</option>\r\n                                            {this.state.typearr.map((type, i) => {\r\n                                                return (<option value={type.value}>{type.label}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\" >{t(\"masterLevy:Type.error\")}</em>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {(this.state.type === 'ONE RATE') ? (\r\n                                <Row style={{ marginTop: \"10px\" }}>\r\n\r\n                                    <Col md=\"6\">\r\n                                        <div className=\"input-box\">\r\n                                            <label for=\"rate1\">{t(\"masterLevy:Rate1.label\")}*</label>\r\n                                            <Input type=\"text\" name=\"rate1\" id=\"rate1\" placeholder={t(\"masterLevy:Rate1.label\")} onChange={(e) => this.handleChange(e)} value={this.state.rate1}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >{t(\"masterLevy:Rate1.error_blank\")}</em>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n\r\n\r\n                                    <Col md=\"6\">\r\n                                        <div className=\"input-box\">\r\n                                            <label for=\"rateBasis1\">{t(\"masterLevy:RateBasis1.label\")}*</label>\r\n                                            <Input type=\"select\" name=\"rateBasis1\" id=\"rateBasis1\" onChange={(e) => this.selectType(e.target.value, 'rateBasis1')} value={this.state.rateBasis1}>\r\n                                                <option value=''>{t(\"masterLevy:RateBasis1.defaultValue\")}</option>\r\n                                                {this.state.rateBasis1arr.map((type, i) => {\r\n                                                    return (<option value={type.value}>{type.label}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >{t(\"masterLevy:RateBasis1.error\")}</em>\r\n                                        </div>\r\n                                    </Col>\r\n                                    {/* <Col md=\"4\"> */}\r\n\r\n                                </Row>\r\n                            ) : (\r\n                                    null\r\n                                )}\r\n\r\n                            {(this.state.type === 'ADD TWO RATES') ? (\r\n                                <div>\r\n                                    <Row style={{ marginTop: \"10px\" }}>\r\n                                        <Col md=\"6\">\r\n                                            <div className=\"input-box\">\r\n                                                <label for=\"rate1\">{t(\"masterLevy:Rate1.label\")}*</label>\r\n                                                <Input type=\"text\" name=\"rate1\" id=\"rate1\" placeholder={t(\"masterLevy:Rate1.label\")} onChange={(e) => this.handleChange(e)} value={this.state.rate1}>\r\n                                                </Input>\r\n                                                <em className=\"error invalid-feedback\">{t(\"masterLevy:Rate1.error_blank\")}</em>\r\n                                            </div>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md=\"6\">\r\n                                            <div className=\"input-box\">\r\n                                                <label for=\"rateBasis1\">{t(\"masterLevy:RateBasis1.label\")}*</label>\r\n                                                <Input type=\"select\" name=\"rateBasis1\" id=\"rateBasis1\" onChange={(e) => this.selectType(e.target.value, 'rateBasis1')} value={this.state.rateBasis1}>\r\n                                                    <option value=''>{t(\"masterLevy:RateBasis1.defaultValue\")}</option>\r\n                                                    {this.state.rateBasis1arr.map((type, i) => {\r\n                                                        return (<option value={type.value}>{type.label}</option>)\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                                <em className=\"error invalid-feedback\" >{t(\"masterLevy:RateBasis1.error\")}</em>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row style={{ marginTop: \"10px\" }}>\r\n                                        <Col md=\"6\">\r\n                                            <div className=\"input-box\">\r\n                                                <label for=\"rate2\">{t(\"masterLevy:Rate2.label\")}*</label>\r\n                                                <Input type=\"text\" name=\"rate2\" id=\"rate2\" placeholder={t(\"masterLevy:Rate2.label\")} onChange={(e) => this.handleChange(e)} value={this.state.rate2}>\r\n                                                </Input>\r\n                                                <em className=\"error invalid-feedback\" >{t(\"masterLevy:Rate2.error_blank\")}</em>\r\n                                            </div>\r\n                                        </Col>\r\n\r\n                                        <Col md=\"6\">\r\n                                            <div className=\"input-box\">\r\n                                                <label for=\"rateBasis2\">{t(\"masterLevy:RateBasis2.label\")}*</label>\r\n                                                <Input type=\"select\" name=\"rateBasis2\" id=\"rateBasis2\" onChange={(e) => this.selectType(e.target.value, 'rateBasis2')} value={this.state.rateBasis2}>\r\n\r\n                                                    <option value=''>{t(\"masterLevy:RateBasis2.defaultValue\")}</option>\r\n                                                    {this.state.rateBasis2arr.map((type, i) => {\r\n                                                        return (<option value={type.value}>{type.label}</option>)\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                                <em className=\"error invalid-feedback\">{t(\"masterLevy:RateBasis2.error\")}</em>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            ) : (\r\n                                    null\r\n                                )}\r\n\r\n                            {(this.state.type === 'FIXED AMOUNT') ? (\r\n                                <Row style={{ marginTop: \"10px\" }}>\r\n                                    <Col md=\"6\">\r\n                                        <div className=\"input-box\">\r\n                                            <label for=\"eur\">{t(\"masterLevy:AmountInEUR.label\")}*</label>\r\n                                            <Input type=\"text\" name=\"amountInEUR\" id=\"amountInEUR\" placeholder={t(\"masterLevy:AmountInEUR.label\")} onChange={(e) => this.handleChange(e)} value={this.state.amountInEUR}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >{t(\"masterLevy:AmountInEUR.error_blank\")}</em>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col md=\"6\">\r\n                                        <div className=\"input-box\">\r\n                                            <label for=\"gbp\">{t(\"masterLevy:AmountInGBP.label\")}*</label>\r\n                                            <Input type=\"text\" name=\"amountInGBP\" id=\"amountInGBP\" placeholder={t(\"masterLevy:AmountInGBP.label\")} onChange={(e) => this.handleChange(e)} value={this.state.amountInGBP}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >{t(\"masterLevy:AmountInGBP.error_blank\")}</em>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : (\r\n                                    null\r\n                                )}\r\n                        </form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.Save()}><i class=\"fa fa-check\"></i> {t(\"buttons.\" + this.state.buttonName + \"\")}</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={this.reset}><i class=\"fa fa-close\"></i> {t(\"buttons.Cancel\")}</BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLarge}>{t(\"masterLevy:Delete.label\")}</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure, You want to delete Levy for {this.state.country}?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.Delete()}><i class=\"fa fa-check\"></i> {t(\"buttons.Yes\")}</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-close\"></i> {t(\"buttons.No\")}</BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Levy);"]},"metadata":{},"sourceType":"module"}