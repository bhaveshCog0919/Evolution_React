{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/SidebarNav/BulkDocument.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport api from '../../utils/apiClient';\nimport APIConstant from '../../utils/constants';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { toast } from 'react-toastify';\nimport { Sidebar } from 'primereact/sidebar';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport { Button as BTN, Row, Col, Input, InputGroup, CardBody, Collapse, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { apiBase } from '../../utils/config';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { CommonConfig } from '../../utils/constants';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass BulkDocument extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.sortinggroup.length ? l : this.state.sortinggroup.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.sortinggroup.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    let columns = [{\n      field: \"SrNo\",\n      header: \"Sr No.\",\n      id: 0,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }, {\n      field: \"PolicyId\",\n      header: \"Policy Id\",\n      id: 1,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      id: 2,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }, {\n      field: \"ProcessType\",\n      header: \"Process Type\",\n      id: 3,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }, {\n      body: this.format_status.bind(this),\n      field: \"Status\",\n      header: \"Status\",\n      id: 4,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }, {\n      body: this.format_error.bind(this),\n      field: \"Error\",\n      header: \"Error\",\n      id: 5,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }, {\n      body: this.format_createddate_createdby.bind(this),\n      field: \"Process Time\",\n      header: \"Process Time\",\n      id: 6,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }, {\n      field: \"MissingDocumentlist\",\n      header: \"MissingDocumentlist\",\n      id: 7,\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains'\n    }]; // console.log(\"props\",props);\n\n    this.state = {\n      sortinggroup: [],\n      brand: null,\n      colors: null,\n      toggleModalDel: false,\n      toggleModalAdd: false,\n      cols: columns,\n      rowData: '',\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.getTimelineDetails();\n  }\n\n  getTimelineDetails() {\n    var formattedData = [];\n    let firstPage = formattedData.length ? '1' : '0';\n    let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n    let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n  }\n\n  getData() {\n    api.post(\"api/getgeneratebulkDocument\", '').then(res => {\n      if (res.success) {\n        console.log(\"res  getgeneratebulkDocument\", res);\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            SrNo: [i + 1],\n            PolicyId: res.data[i].PolicyId,\n            PolicyNumber: res.data[i].PolicyNumber,\n            ProcessType: res.data[i].ProcessType,\n            StatusGenerateDoc: res.data[i].StatusGenerateDoc,\n            ErrorGenerateDoc: res.data[i].ErrorGenerateDoc,\n            StatusRecalculate: res.data[i].StatusRecalculate,\n            ErrorRecalculate: res.data[i].ErrorRecalculate,\n            StatusBindPolicy: res.data[i].StatusBindPolicy,\n            ErrorBindPolicy: res.data[i].ErrorBindPolicy,\n            PhysicalDocumentVerficationStatus: res.data[i].PhysicalDocumentVerficationStatus,\n            DTProcessStart: res.data[i].DTProcessStart ? moment(res.data[i].DTProcessStart).format('YYYY-MM-DD hh:mm:ss a') : '',\n            DTProcessEnd: res.data[i].DTProcessEnd ? moment(res.data[i].DTProcessEnd).format('YYYY-MM-DD hh:mm:ss a') : '',\n            MissingDocumentlist: res.data[i].MissingDocumentlist\n          });\n        }\n\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          sortinggroup: formattedData,\n          str: str\n        });\n      } else {\n        console.log(\"no data\", res);\n      }\n    }).catch(err => {});\n  }\n\n  format_status(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Recalculate status:- \", rowData.StatusRecalculate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"BindPolicy status:- \", rowData.StatusBindPolicy), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Generate Documnet status:- \", rowData.StatusGenerateDoc), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Physical Documnet status:- \", rowData.PhysicalDocumentVerficationStatus));\n  }\n\n  format_error(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"Recalculate Error:- \", rowData.ErrorRecalculate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"BindPolicy Error:- \", rowData.ErrorBindPolicy), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Generate Documnet Error:- \", rowData.ErrorGenerateDoc));\n  }\n\n  recomputePremium() {\n    try {\n      api.post(\"api/getgeneratebulkDocument\", '', true).then(async res => {\n        console.log(\"res\", res); // toast.success(res.data.message);\n\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            console.log(\"res.data\", res.data[i]);\n            const data = {\n              PolicyId: res.data[i].PolicyId,\n              IsRenewal: 1,\n              CurrentUser: CommonConfig.loggedInUserId()\n            };\n            await api.post(\"api/bulkdocumentrecompute\", data).then(res1 => {\n              // debugger;   \n              console.log(\"dayta\", res1);\n            }).catch(err => {\n              console.log('err', err);\n            });\n          }\n\n          window.location.reload();\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  } // recomputePremium(){\n  //   const data = {IsRenewal: 1, CurrentUser: CommonConfig.loggedInUserId() };\n  //   api.post('api/bulkdocumentrecompute', data).then(res => {\n  //     console.log('ress', res);\n  //     // if (res.success) {\n  //     //   console.log('res',res);\n  //     // } else {\n  //     //   console.log('error');    \n  //     // }\n  //   }).catch(err => {\n  //     console.log('err', err);\n  //   });   \n  // }\n\n\n  format_createddate_createdby(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, \"Start Process:- \", rowData.DTProcessStart), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, \"End Process:- \", rowData.DTProcessEnd));\n  }\n\n  getDocumentList() {\n    try {\n      const data = {\n        entityType: this.state.NavPage,\n        entityId: this.state.NavID\n      };\n      api.post(\"api/getgeneratebulkDocument\", '', true).then(async res => {\n        console.log(\"res\", res); // toast.success(res.data.message);\n\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            console.log(\"res.data\", res.data[i]);\n            await api.post(\"api/generatebulkDocument\", res.data[i], true).then(res1 => {\n              // debugger;\n              if (res1.data.success) {\n                toast.success('Policy Number: ' + res.data[i].PolicyNumber + ': ' + res1.data.message);\n              } else {\n                toast.error('Policy Number: ' + res.data[i].PolicyNumber + ': ' + res1.data.message);\n              }\n            }).catch(err => {\n              console.log('err', err);\n            });\n          }\n\n          window.location.reload();\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  render() {\n    const {\n      t,\n      i18n\n    } = this.props;\n    const CancelButton = t(\"buttons.Cancel\");\n    const Generate = t(\"buttons.Generate\");\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    });\n    let columns = this.state.cols.map((col, i) => {\n      // return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} />;\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        selectionMode: col.selectionMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 5,\n        height: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      style: {\n        float: 'right'\n      },\n      onClick: () => this.getDocumentList(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, \"Generate Bulk Document\"), /*#__PURE__*/React.createElement(BTN, {\n      style: {\n        float: 'right',\n        marginRight: '5px'\n      },\n      onClick: () => this.recomputePremium(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, \"Recompute Premium and Bind Policy\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.sortinggroup,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.sortinggroup.length,\n      exportFilename: \"Task List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"250px\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"265px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(BulkDocument);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/SidebarNav/BulkDocument.js"],"names":["React","Component","DataTable","api","APIConstant","Column","MultiSelect","InputText","Button","toast","Sidebar","ScrollPanel","BTN","Row","Col","Input","InputGroup","CardBody","Collapse","Modal","ModalBody","ModalFooter","ModalHeader","apiBase","axios","moment","CommonConfig","useTranslation","withTranslation","Trans","BulkDocument","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","sortinggroup","length","str","setState","selectedPage","rowsPerPage","columns","field","header","id","sortable","filter","filterMatchMode","body","format_status","bind","format_error","format_createddate_createdby","brand","colors","toggleModalDel","toggleModalAdd","cols","rowData","rowsPerPageOptions","dataTableConfig","globalFilter","colOptions","col","push","label","value","componentDidMount","getData","getTimelineDetails","formattedData","post","then","res","success","console","log","i","data","SrNo","PolicyId","PolicyNumber","ProcessType","StatusGenerateDoc","ErrorGenerateDoc","StatusRecalculate","ErrorRecalculate","StatusBindPolicy","ErrorBindPolicy","PhysicalDocumentVerficationStatus","DTProcessStart","format","DTProcessEnd","MissingDocumentlist","catch","err","recomputePremium","IsRenewal","CurrentUser","loggedInUserId","res1","window","location","reload","error","getDocumentList","entityType","NavPage","entityId","NavID","message","render","t","i18n","CancelButton","Generate","map","selectionMode","style","margin","height","float","marginRight","el","dt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport api from '../../utils/apiClient'\r\nimport APIConstant from '../../utils/constants';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { toast } from 'react-toastify';\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { ScrollPanel } from 'primereact/scrollpanel';\r\nimport { Button as BTN, Row, Col, Input, InputGroup, CardBody, Collapse, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport { apiBase } from '../../utils/config';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\n\r\nclass BulkDocument extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let columns = [\r\n      { field: \"SrNo\", header: \"Sr No.\", id: 0 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n      { field: \"PolicyId\", header: \"Policy Id\", id: 1 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n      { field: \"PolicyNumber\", header: \"Policy Number\", id: 2 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n      { field: \"ProcessType\", header: \"Process Type\", id: 3 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n      {body: this.format_status.bind(this), field: \"Status\", header: \"Status\", id: 4 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n      {body: this.format_error.bind(this), field: \"Error\", header: \"Error\", id: 5 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n      {body: this.format_createddate_createdby.bind(this), field: \"Process Time\", header: \"Process Time\", id: 6 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n      { field: \"MissingDocumentlist\", header: \"MissingDocumentlist\", id: 7 , sortable: true, filter: true, filterMatchMode: 'contains'},\r\n    ];\r\n\r\n    // console.log(\"props\",props);\r\n\r\n    this.state = {\r\n      sortinggroup:[],\r\n      brand: null,\r\n      colors: null,\r\n      toggleModalDel: false,\r\n      toggleModalAdd: false,\r\n      cols: columns,\r\n      rowData: '',\r\n      selectedPage: 0,\r\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n      str: '',\r\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n      globalFilter: null,\r\n    };\r\n    this.colOptions = [];\r\n    for (let col of columns) {\r\n      this.colOptions.push({ label: col.header, value: col });\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidMount() {\r\n  this.getData();\r\n  this.getTimelineDetails();\r\n  }\r\n\r\n  getTimelineDetails() {\r\n    var formattedData = [];\r\n    let firstPage = (formattedData.length) ? '1' : '0';\r\n    let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n    let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n  }\r\n\r\n  getPageString = (e) => {\r\n    let firstPage = e.first + 1;\r\n    let l = e.rows * (e.page + 1);\r\n    let lastPage = (l < this.state.sortinggroup.length) ? l : this.state.sortinggroup.length\r\n    var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.sortinggroup.length + ' records';\r\n    this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n  }\r\n\r\n  getData(){\r\n    api.post(\"api/getgeneratebulkDocument\", '').then( res => {\r\n      if (res.success) {\r\n        console.log(\"res  getgeneratebulkDocument\",res);\r\n        \r\n        var formattedData = [];\r\n        for (var i = 0; i < res.data.length; i++) {\r\n          formattedData.push({\r\n            SrNo:[i + 1],\r\n            PolicyId:res.data[i].PolicyId,\r\n            PolicyNumber:res.data[i].PolicyNumber,\r\n            ProcessType:res.data[i].ProcessType,\r\n            StatusGenerateDoc:res.data[i].StatusGenerateDoc,\r\n            ErrorGenerateDoc:res.data[i].ErrorGenerateDoc,\r\n\r\n            StatusRecalculate:res.data[i].StatusRecalculate,\r\n            ErrorRecalculate:res.data[i].ErrorRecalculate,\r\n            StatusBindPolicy:res.data[i].StatusBindPolicy,\r\n            ErrorBindPolicy:res.data[i].ErrorBindPolicy,\r\n\r\n            PhysicalDocumentVerficationStatus:res.data[i].PhysicalDocumentVerficationStatus,\r\n            DTProcessStart:res.data[i].DTProcessStart ? moment(res.data[i].DTProcessStart).format('YYYY-MM-DD hh:mm:ss a') : '' ,\r\n            DTProcessEnd:res.data[i].DTProcessEnd ? moment(res.data[i].DTProcessEnd).format('YYYY-MM-DD hh:mm:ss a') : '' ,\r\n            MissingDocumentlist:res.data[i].MissingDocumentlist\r\n          })\r\n        }\r\n        let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n        let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n        this.setState({ sortinggroup: formattedData, str: str });\r\n      } else {\r\n        console.log(\"no data\",res);\r\n      }\r\n    }).catch(err => {\r\n\r\n      });\r\n  }\r\n\r\n  format_status(rowData) {\r\n    return (\r\n      <div className=\"policy-list-data\">\r\n        <p>Recalculate status:- {rowData.StatusRecalculate}</p>\r\n        <p>BindPolicy status:- {rowData.StatusBindPolicy}</p>\r\n        <p>Generate Documnet status:- {rowData.StatusGenerateDoc}</p>\r\n        <p>Physical Documnet status:- {rowData.PhysicalDocumentVerficationStatus}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  format_error(rowData) {\r\n    return (\r\n      <div className=\"policy-list-data\">\r\n        <p>Recalculate Error:- {rowData.ErrorRecalculate}</p>\r\n        <p>BindPolicy Error:- {rowData.ErrorBindPolicy}</p>\r\n        <p>Generate Documnet Error:- {rowData.ErrorGenerateDoc}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  recomputePremium(){\r\n    try {    \r\n      api.post(\"api/getgeneratebulkDocument\", '',true).then(async res => {\r\n        console.log(\"res\", res);\r\n        // toast.success(res.data.message);\r\n        if (res.success) {\r\n         for (var i = 0; i < res.data.length; i++) {\r\n            console.log(\"res.data\",res.data[i]);\r\n            const data = {PolicyId:res.data[i].PolicyId,IsRenewal: 1, CurrentUser: CommonConfig.loggedInUserId() };\r\n       await  api.post(\"api/bulkdocumentrecompute\", data).then(res1 => {\r\n         // debugger;   \r\n         console.log(\"dayta\",res1);\r\n           \r\n            }).catch(err => {\r\n              console.log('err',err);             \r\n            });\r\n  \r\n          }\r\n          window.location.reload();\r\n          } else {\r\n  \r\n        }\r\n      }).catch(err => {\r\n  \r\n      });\r\n    } catch (error) {\r\n  \r\n    }\r\n  }\r\n  // recomputePremium(){\r\n  //   const data = {IsRenewal: 1, CurrentUser: CommonConfig.loggedInUserId() };\r\n  //   api.post('api/bulkdocumentrecompute', data).then(res => {\r\n\r\n  //     console.log('ress', res);\r\n    \r\n  //     // if (res.success) {\r\n  //     //   console.log('res',res);\r\n  //     // } else {\r\n  //     //   console.log('error');    \r\n  //     // }\r\n  //   }).catch(err => {\r\n  //     console.log('err', err);\r\n  //   });   \r\n  // }\r\n\r\n  format_createddate_createdby(rowData) {\r\n    return (\r\n      <div className=\"policy-list-data\">\r\n        <p>Start Process:- {rowData.DTProcessStart}</p>\r\n        <p>End Process:- {rowData.DTProcessEnd}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n   getDocumentList() {\r\n    try {\r\n      const data = {\r\n        entityType: this.state.NavPage,\r\n        entityId: this.state.NavID\r\n      };\r\n      \r\n      api.post(\"api/getgeneratebulkDocument\", '',true).then(async res => {\r\n        console.log(\"res\", res);\r\n        // toast.success(res.data.message);\r\n        if (res.success) {\r\n         for (var i = 0; i < res.data.length; i++) {\r\n            console.log(\"res.data\",res.data[i]);\r\n            \r\n       await  api.post(\"api/generatebulkDocument\", res.data[i],true).then(res1 => {\r\n         // debugger;\r\n         if(res1.data.success){\r\n          toast.success('Policy Number: '+res.data[i].PolicyNumber+': '+res1.data.message);\r\n         }\r\n         else{\r\n          toast.error('Policy Number: '+res.data[i].PolicyNumber+': '+res1.data.message)\r\n         }\r\n             \r\n            }).catch(err => {\r\n              console.log('err',err);             \r\n            });\r\n\r\n          }\r\n          window.location.reload();\r\n          } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n\r\n      });\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { t, i18n } = this.props;\r\n    const CancelButton = t(\"buttons.Cancel\");\r\n    const Generate = t(\"buttons.Generate\");\r\n\r\n    var header =\r\n      <div>\r\n     \r\n      </div>;\r\n\r\nlet columns = this.state.cols.map((col, i) => {\r\n  // return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} />;\r\n  return<Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} selectionMode={col.selectionMode} style={col.style} />\r\n});\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n\r\n          <div style={{margin:5,height:'40px'}}>\r\n            <BTN style={{float:'right'}} onClick={() => this.getDocumentList()}>Generate Bulk Document</BTN>\r\n            <BTN style={{float:'right',marginRight:'5px'}} onClick={() => this.recomputePremium()}>Recompute Premium and Bind Policy</BTN>\r\n          </div>\r\n\r\n          <div className=\"table-custom\">\r\n          <DataTable ref={(el) => this.dt = el} value={this.state.sortinggroup} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n            paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.sortinggroup.length} exportFilename=\"Task List\"\r\n            currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"250px\"\r\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n            responsive={true} resizableColumns={true} columnResizeMode=\"fit\"\r\n            scrollable={true} scrollHeight=\"265px\">\r\n            {columns}\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(BulkDocument);"]},"metadata":{},"sourceType":"module"}