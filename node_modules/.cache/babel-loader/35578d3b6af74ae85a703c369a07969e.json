{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/utils/constants.js\";\nimport React from 'react';\nimport Cookies from \"js-cookie\";\nimport api from './apiClient';\nvar accentedCharacters = \"àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ\"; //=============PATH=================//\n\nexport default class APIConstant {}\nAPIConstant.path = {\n  login: 'api/login',\n  register: 'api/signup',\n  resetpassword: 'api/reset_password',\n  forgotpassword: 'api/forgot_password',\n  dropdownbycode: 'api/dropdownByCode',\n  dropdownbycodeforreason: 'api/dropdownByCodeForReason',\n  getcommondropdown: 'api/getCommonDropdown',\n  addContactDetails: 'api/addContactDetails',\n  getContact: 'api/getContact',\n  getLanguage: 'api/getLanguage',\n  getCurrency: 'api/getCurrency',\n  getVesselClass: 'api/getVesselClass',\n  getVesselType: 'api/getVesselType',\n  getDefaultAddonCoverage: 'api/getDefaultAddonCoverage',\n  getAssumption: 'api/getAssumption',\n  getUserBankAccountDetails: 'api/getUserBankAccountDetails',\n  getNotesbyEntityTypeAndEntityId: 'api/getNotesbyEntityTypeAndEntityId',\n  getActiveReferralNotes: 'api/getActiveReferralNotes',\n  getUserPolicyList: 'api/getUserPolicyList',\n  getPolicyClientName: 'api/getPolicyClientName',\n  getAllEmailList: 'api/getAllEmailList',\n  getAllcontactList: 'api/getAllcontactList',\n  getAllpolicyNumber: 'api/getAllpolicyNumber',\n  getpolicyNumberById: 'api/getpolicyNumberById',\n  getAllBinder: 'api/getAllBinder',\n  getSubBinderByBinderId: 'api/getSubBinderByBinderId',\n  isRenewalComutationActive: 'api/isRenewalComutationActive',\n  getNextPolicyNumer: 'api/getNextPolicyNumer',\n  checkPolicyNumberExists: 'api/checkPolicyNumberExists',\n  cancelPolicy: 'api/cancelPolicy',\n  isGenerateRenewal: 'api/isGenerateRenewal',\n  generateRenewal: 'api/generateRenewal',\n  confirmRenewal: 'api/confirmRenewal',\n  migratedData: 'api/migratedData',\n  getNextBinderDetails: 'api/getNextBinderDetails',\n  getVesselClassIdFromName: 'api/getVesselClassIdFromName',\n  getVesselTypeIdFromNameandClassId: 'api/getVesselTypeIdFromNameandClassId',\n  getMooringNameAndTypeSeperated: 'api/getMooringNameAndTypeSeperated',\n  setPremiumPolicyType: \"api/setPremiumPolicyType\",\n  getTPOType: \"api/getTPOType\",\n  getVesselClassByCountry: \"api/getVesselClassByCountry\",\n  getVesselTypeByCountry: \"api/getVesselTypeByCountry\",\n  getLaidUpAshoreModalData: \"api/getLaidUpAshoreModalData\",\n  saveLaidUpMidTerm: \"api/saveLaidUpMidTerm\",\n  getCancelPolicyModelData: \"api/getCancelPolicyModelData\",\n  autoBinderByCountry: \"api/autoBinderByCountry\",\n  //BinderRatingBands\n  getBinderRatingBinder: \"api/getBinderRatingBands\",\n  addUpdateBinderRatingBands: \"api/addUpdateBinderRatingBands\",\n  deleteRatingBinder: \"api/deleteBinderRatingBands\",\n  bulkInsertBinderRatingBands: \"api/bulkInsertBinderRatingBands\",\n  insertRatingBandsFromDetail: \"api/insertRatingBandsFromDetail\",\n  //Binder\n  getBinder: \"api/getBinderDetails\",\n  deleteBinder: \"api/deleteBinder\",\n  addUpdateBinder: \"api/addUpdateBinder\",\n  getInsuranceCompnay: \"api/getInsuranceCompnay\",\n  getSecurityGroup: \"api/getSecurityGroup\",\n  getBrokerList: \"api/getOrganazationData\",\n  getLastBinderCode: \"api/getlastbindercode\",\n  getselectedAuthorizeGroup: \"api/getselectedAuthorizeGroup\",\n  getBrokerData: \"api/getBrokerData\",\n  getBinderDataById: \"api/getBinderDataById\",\n  //Authirised Class\n  addUpdateAuthorizeClass: \"api/addUpdateAuthorizeClass\",\n  getAuthorizeClass: \"api/getAuthorizeClass\",\n  deleteAuthorizedClass: \"api/deleteAuthorizeClass\",\n  //Bounder For Risk Locator\n  getBounder: \"api/getBounderRisk\",\n  getRiskLocator: \"api/getRiskLocator\",\n  addBouder: \"api/addUpdateBounderRisk\",\n  addRiskLocator: \"api/addRiskLocator\",\n  deleteBounder: \"api/deleteBounderRisk\",\n  //Transaction\n  getTransaction: \"api/getTransaction\",\n  getNextBinderList: \"api/getNextBinderList\",\n  getSettlement: \"api/getSettlement\",\n  getSubBinders: \"api/getSubBinders\",\n  allEmail: \"api/getInbox\",\n  getAttachment: \"api/getAllAttachmentUnreadMail\",\n  addRemoveFlag: \"api/addRemoveFlag\",\n  deleteMessage: \"api/deleteMessage\",\n  getPolicyAutoComplete: \"api/getPolicyAutoComplete\",\n  getEmailTemplate: \"api/getEmailTemplate\",\n  getEmailBodyData: \"api/getEmailBodyData\",\n  sendMailBulk: \"api/sendMailBulk\",\n  sendReply: \"api/sendReply\",\n  forwordMail: \"api/forwordMail\",\n  sendReplyAll: \"api/sendReplyAll\",\n  addUpdateTags: \"api/addUpdateTags\",\n  //Claim\n  addUpdateClaim: \"api/addUpdateClaim\",\n  getClaimList: \"api/getClaimList\"\n};\nAPIConstant.requestKeys = {\n  login: {\n    username: 'username',\n    password: 'password'\n  }\n};\nAPIConstant.responseKeys = {\n  data: 'data',\n  settings: 'settings',\n  statusCode: 'code'\n};\n; //============Images================//\n//============Route Constants========//\n//============Common Configurations========//\n\nexport class CommonConfig {\n  // static appVerison = \"V1.2.1.2020.07.21.11.45.00\";\n  static formatPhoneNumber(str) {\n    //Filter only numbers from the input\n    // let cleaned = ('' + str).replace(/\\D/g, '');\n    //Check if the input is of correct length\n    // let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    // if (match) {\n    //   return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n    // };\n    if (str.length > 6) {\n      let formatted = str.substring(0, 2) + ' ' + str.substring(2, 5) + ' ' + str.substring(5, 6) + ' ' + str.substring(6, 10);\n      return formatted;\n    } else {\n      return str;\n    } // return null\n\n  }\n\n  static formatPhoneNumberWithAreaCode(str) {\n    //Filter only numbers from the input\n    // let cleaned = ('' + str).replace(/\\D/g, '');\n    //Check if the input is of correct length\n    // let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    // if (match) {\n    //   return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n    // };\n    if (str.length > 6) {\n      let formatted = str.substring(0, 2) + ' ' + str.substring(2, 5) + ' ' + str.substring(5, 6) + ' ' + str.substring(6, 10);\n      return formatted;\n    } else {\n      return str;\n    }\n  }\n\n  static formatMoney(amount, decimalCount = 2, decimal = \".\", thousands = \",\") {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = i.length > 3 ? i.length % 3 : 0;\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n}\nCommonConfig.appVerison = \"V1.2.3.2020.08.18.14.05.00\";\nCommonConfig.appRegion = \"Production\";\nCommonConfig.phpapi = 'https://evolutionpaymentprod.azurewebsites.net';\n\nCommonConfig.loggedInUserId = function () {\n  var loggedInUserData = '';\n\n  if (localStorage.getItem('loggedInUserData')) {\n    loggedInUserData = JSON.parse(localStorage.getItem('loggedInUserData')); // if (Cookies.get('loggedInUserData')) {\n    //     loggedInUserData = JSON.parse(Cookies.get('loggedInUserData'));\n\n    var EntityId = loggedInUserData.EntityId;\n\n    if (loggedInUserData.PersonId === \"\" || loggedInUserData.PersonId === undefined || loggedInUserData.PersonId === null) {\n      EntityId = loggedInUserData.OrganizationId;\n    } else {\n      EntityId = loggedInUserData.PersonId;\n    }\n\n    if (CommonConfig.isEmpty(EntityId)) {\n      return '999';\n    } else {\n      return EntityId;\n    }\n  } else {\n    return '999';\n  }\n};\n\nCommonConfig.getSysConfigByKey = function (key) {\n  try {\n    api.post('api/getSystemConfigByKey', {\n      key: key\n    }).then(res => {\n      if (res.success) {\n        // console.log('res.data[0].SysValue',res.data[0].SysValue)\n        // console.log(' bumber res.data[0].SysValue',Number(res.data[0].SysValue))\n        localStorage.setItem(key, res.data[0].SysValue);\n        return res.data[0].SysValue;\n      } else {\n        console.log(\"something error\");\n        return false;\n      }\n    }).catch(err => {\n      console.log(\"error\", err);\n      return false;\n    });\n  } catch (error) {\n    console.log(\"erroreeee\", error);\n    return false;\n  }\n};\n\nCommonConfig.loggedInUserData = function () {\n  if (localStorage.getItem('loggedInUserData')) {\n    return JSON.parse(localStorage.getItem('loggedInUserData'));\n  } // if (Cookies.get('loggedInUserData')) {\n  //     return JSON.parse(Cookies.get('loggedInUserData'));\n  // }\n  else {\n      return \"\";\n    }\n};\n\nCommonConfig.formatPhone = (CountryCode, AreaCode, PhoneNumber) => {\n  let phone;\n\n  if (CountryCode && CountryCode !== '' && CountryCode !== undefined && CountryCode !== null) {\n    if (AreaCode && AreaCode !== '' && AreaCode !== undefined && AreaCode !== null) {\n      phone = CountryCode + ' ' + AreaCode + ' ' + CommonConfig.formatPhoneNumber(PhoneNumber);\n    } else {\n      phone = CountryCode + ' ' + CommonConfig.formatPhoneNumber(PhoneNumber);\n    }\n  } else {\n    if (AreaCode && AreaCode !== '' && AreaCode !== undefined && AreaCode !== null) {\n      phone = AreaCode + ' ' + CommonConfig.formatPhoneNumber(PhoneNumber);\n    } else {\n      phone = CommonConfig.formatPhoneNumber(PhoneNumber);\n    }\n  }\n\n  return phone;\n};\n\nCommonConfig.randomStr = function (len, arr) {\n  var ans = '';\n\n  for (var i = len; i > 0; i--) {\n    ans += arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  return ans;\n};\n\nCommonConfig.isEmpty = function (value) {\n  if (value === undefined || value === null || value === '') {\n    return true;\n  } else {\n    if (typeof value === 'string') {\n      return value.trim() == \"\";\n    } else {\n      return false;\n    }\n  }\n};\n\nCommonConfig.ThirdPartyStringMapOnCountry = function (country) {\n  if (country == 'Spain') {\n    return 'THIRDPARTYLIABILITYSPAIN';\n  } else {\n    return 'THIRDPARTYLIABILITY';\n  }\n};\n\nCommonConfig.ShowHideLimitAdditionalFields = function (vessleClass) {\n  if (vessleClass == 'RIB' || vessleClass == 'Sports Boat' || vessleClass == 'Neumática/Semirígida' || vessleClass == 'Jet Ski') {\n    let condition = {\n      displayWater: 1,\n      displayRacing: 0,\n      displayCrew: 0\n    };\n    return condition;\n  } else if (vessleClass == 'Racing Yacht' || vessleClass == 'Dinghy') {\n    let condition = {\n      displayWater: 0,\n      displayRacing: 1,\n      displayCrew: 0\n    };\n    return condition;\n  } else if (vessleClass == 'Commercial Vessels') {\n    let condition = {\n      displayWater: 0,\n      displayRacing: 0,\n      displayCrew: 1\n    };\n    return condition;\n  } else {\n    let condition = {\n      displayWater: 0,\n      displayRacing: 0,\n      displayCrew: 0\n    };\n    return condition;\n  }\n};\n\nCommonConfig.GetFixedCrusingRange = function (boatUse, whereReg) {\n  var CrusingRange = '';\n\n  if (boatUse == 'Med Waters') {\n    if (whereReg == 'Ireland') {\n      CrusingRange = 'Inland & Coastal Waters of Ireland';\n    } else if (whereReg == 'Spain') {\n      CrusingRange = 'Coastal water of Spain Including Gibraltar (Excluding North Africa)';\n    } else if (whereReg == 'United Kingdom') {\n      CrusingRange = 'Mediterranean waters not east of 10 degrees east (Excluding North Africa)';\n    }\n  } else if (boatUse == 'Inland & Coastal UK') {\n    if (whereReg == 'Ireland') {\n      CrusingRange = 'Inland & Coastal Waters of Ireland';\n    } else if (whereReg == 'Spain') {\n      CrusingRange = 'Coastal water of Spain Including Gibraltar (Excluding North Africa)';\n    } else if (whereReg == 'United Kingdom') {\n      CrusingRange = 'Inland & Coastal Waters of UK';\n    }\n  }\n\n  return CrusingRange;\n};\n\nCommonConfig.getFixedVesselTypeFromVesselClassName = function (vessleClassName) {\n  var VesselType = '';\n\n  if (vessleClassName == 'Motor Cruisers') {\n    VesselType = 'Motorboat Coastal Waters';\n  } else if (vessleClassName == 'Yacht') {\n    VesselType = 'Cruising Yacht';\n  } else if (vessleClassName == 'Rib') {\n    VesselType = 'Rib';\n  } else if (vessleClassName == 'Sports Boat') {\n    VesselType = 'Sportsboat';\n  } else if (vessleClassName == 'MarineTradeVessel') {\n    VesselType = 'MarineTradeVessel';\n  } else if (vessleClassName == 'MultiVessel') {\n    VesselType = 'MultiVessel';\n  } else if (vessleClassName == 'Engineering Vessel') {\n    VesselType = 'Engineering Vessel';\n  }\n\n  return VesselType;\n};\n\nCommonConfig.ShowHideActionOnPolicyStatus = function (Status) {\n  var condition = '';\n\n  if (Status == 'Cancel' || Status == 'Lapsed') {\n    condition = 0;\n  } else {\n    condition = 1;\n  }\n\n  return condition;\n};\n\nCommonConfig.handleError = function (error, methodName, userMessageKey, severity) {};\n\nCommonConfig.dateFormat = {\n  dateTime: 'DD/MM/YYYY HH:mm',\n  dateOnly: 'DD/MM/YYYY',\n  YearMonthDay: 'YYYY-MM-DD',\n  forDatePicker: 'DD-MM-YYYY',\n  yearOnly: 'YYYY',\n  dbDateTime: 'YYYY-MM-DD HH:mm:ss',\n  timeOnly: 'HH:mm'\n};\nCommonConfig.dataTableConfig = {\n  rowsPerPage: 10,\n  rowsPerPageOptions: [5, 10, 20, 30, 50],\n  columnToggleIcon: /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-bars\",\n    __self: CommonConfig,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 27\n    }\n  })\n};\nCommonConfig.RegExp = {\n  percentage: /(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/,\n  percentageWithNegative: /^-?[0-9]{0,2}(\\.[0-9]{1,2})?$|^-?(100)(\\.[0]{1,2})?$/,\n  number: /^[0-9]+$/,\n  // nameWithoutSpace: /^[a-zA-Z]+[a-zA-Z-']*$/,\n  // nameWithSpace: /^[a-zA-Z]+[a-zA-Z-\\s']*$/,\n  nameWithoutSpace: /^[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF]+[a-zA-Z-\\u00C0-\\u024F\\u1E00-\\u1EFF']*$/,\n  nameWithSpace: /^[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF]+[a-zA-Z-\\u00C0-\\u024F\\u1E00-\\u1EFF\\s']*$/,\n  email: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n  password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n  // /^(?=.*[0-9])(?=.*[!@#$%^&*.])[a-zA-Z0-9!@#$%^&*.]{8,}$/,\n  decimal: /^[0-9]+(\\.[0-9][0-9])?$/,\n  decimalWithOne: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\n  decimalWithNegative: /^-?(?:\\d*\\.\\d{1,2}|\\d+)$/,\n\n  /*   /^-?[0-9]+(\\.[0-9][0-9])?$/  */\n  // alphaNumeric: /^[a-zA-Z0-9]+[a-zA-Z0-9-\\s']*$/,\n  alphaNumeric: /^[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF0-9]+[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF0-9-\\s']*$/,\n  year: /^[0-9]{4}$/,\n  allowAllWithSpace: /^(\\w.*)$/,\n  latlng: /^-?(\\d*\\.)?\\d+$/\n};\nCommonConfig.thousandSeparator = {\n  format: toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n};\nCommonConfig.googleMapApiDetails = {\n  apiKey: \"AIzaSyDDPVM-dsW-fpv1knIQw8ZFbAMq85Qpqtg\",\n  apiURL: \"https://maps.google.com/maps/api/js?v=3.exp&key=AIzaSyDDPVM-dsW-fpv1knIQw8ZFbAMq85Qpqtg&sensor=false\",\n  googleMapApiURL: \"https://maps.googleapis.com/maps/api/js?v=6.exp&libraries=geometry,drawing,places&key=AIzaSyDDPVM-dsW-fpv1knIQw8ZFbAMq85Qpqtg\"\n};","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/utils/constants.js"],"names":["React","Cookies","api","accentedCharacters","APIConstant","path","login","register","resetpassword","forgotpassword","dropdownbycode","dropdownbycodeforreason","getcommondropdown","addContactDetails","getContact","getLanguage","getCurrency","getVesselClass","getVesselType","getDefaultAddonCoverage","getAssumption","getUserBankAccountDetails","getNotesbyEntityTypeAndEntityId","getActiveReferralNotes","getUserPolicyList","getPolicyClientName","getAllEmailList","getAllcontactList","getAllpolicyNumber","getpolicyNumberById","getAllBinder","getSubBinderByBinderId","isRenewalComutationActive","getNextPolicyNumer","checkPolicyNumberExists","cancelPolicy","isGenerateRenewal","generateRenewal","confirmRenewal","migratedData","getNextBinderDetails","getVesselClassIdFromName","getVesselTypeIdFromNameandClassId","getMooringNameAndTypeSeperated","setPremiumPolicyType","getTPOType","getVesselClassByCountry","getVesselTypeByCountry","getLaidUpAshoreModalData","saveLaidUpMidTerm","getCancelPolicyModelData","autoBinderByCountry","getBinderRatingBinder","addUpdateBinderRatingBands","deleteRatingBinder","bulkInsertBinderRatingBands","insertRatingBandsFromDetail","getBinder","deleteBinder","addUpdateBinder","getInsuranceCompnay","getSecurityGroup","getBrokerList","getLastBinderCode","getselectedAuthorizeGroup","getBrokerData","getBinderDataById","addUpdateAuthorizeClass","getAuthorizeClass","deleteAuthorizedClass","getBounder","getRiskLocator","addBouder","addRiskLocator","deleteBounder","getTransaction","getNextBinderList","getSettlement","getSubBinders","allEmail","getAttachment","addRemoveFlag","deleteMessage","getPolicyAutoComplete","getEmailTemplate","getEmailBodyData","sendMailBulk","sendReply","forwordMail","sendReplyAll","addUpdateTags","addUpdateClaim","getClaimList","requestKeys","username","password","responseKeys","data","settings","statusCode","CommonConfig","formatPhoneNumber","str","length","formatted","substring","formatPhoneNumberWithAreaCode","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","substr","replace","slice","e","console","log","appVerison","appRegion","phpapi","loggedInUserId","loggedInUserData","localStorage","getItem","JSON","parse","EntityId","PersonId","undefined","OrganizationId","isEmpty","getSysConfigByKey","key","post","then","res","success","setItem","SysValue","catch","err","error","formatPhone","CountryCode","AreaCode","PhoneNumber","phone","randomStr","len","arr","ans","floor","random","value","trim","ThirdPartyStringMapOnCountry","country","ShowHideLimitAdditionalFields","vessleClass","condition","displayWater","displayRacing","displayCrew","GetFixedCrusingRange","boatUse","whereReg","CrusingRange","getFixedVesselTypeFromVesselClassName","vessleClassName","VesselType","ShowHideActionOnPolicyStatus","Status","handleError","methodName","userMessageKey","severity","dateFormat","dateTime","dateOnly","YearMonthDay","forDatePicker","yearOnly","dbDateTime","timeOnly","dataTableConfig","rowsPerPage","rowsPerPageOptions","columnToggleIcon","RegExp","percentage","percentageWithNegative","number","nameWithoutSpace","nameWithSpace","email","decimalWithOne","decimalWithNegative","alphaNumeric","year","allowAllWithSpace","latlng","thousandSeparator","format","googleMapApiDetails","apiKey","apiURL","googleMapApiURL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Cookies from \"js-cookie\";\nimport api from './apiClient';\nvar accentedCharacters = \"àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ\";\n\n//=============PATH=================//\nexport default class APIConstant {\n\n    static path = {\n        login: 'api/login',\n        register: 'api/signup',\n        resetpassword: 'api/reset_password',\n        forgotpassword: 'api/forgot_password',\n        dropdownbycode: 'api/dropdownByCode',\n        dropdownbycodeforreason: 'api/dropdownByCodeForReason',\n        getcommondropdown: 'api/getCommonDropdown',\n        addContactDetails: 'api/addContactDetails',\n        getContact: 'api/getContact',\n        getLanguage: 'api/getLanguage',\n        getCurrency: 'api/getCurrency',\n        getVesselClass: 'api/getVesselClass',\n        getVesselType: 'api/getVesselType',\n        getDefaultAddonCoverage: 'api/getDefaultAddonCoverage',\n        getAssumption: 'api/getAssumption',\n        getUserBankAccountDetails: 'api/getUserBankAccountDetails',\n        getNotesbyEntityTypeAndEntityId: 'api/getNotesbyEntityTypeAndEntityId',\n        getActiveReferralNotes: 'api/getActiveReferralNotes',\n        getUserPolicyList: 'api/getUserPolicyList',\n        getPolicyClientName: 'api/getPolicyClientName',\n        getAllEmailList: 'api/getAllEmailList',\n        getAllcontactList: 'api/getAllcontactList',\n        getAllpolicyNumber: 'api/getAllpolicyNumber',\n        getpolicyNumberById: 'api/getpolicyNumberById',\n        getAllBinder: 'api/getAllBinder',\n        getSubBinderByBinderId: 'api/getSubBinderByBinderId',\n        isRenewalComutationActive: 'api/isRenewalComutationActive',\n        getNextPolicyNumer: 'api/getNextPolicyNumer',\n        checkPolicyNumberExists: 'api/checkPolicyNumberExists',\n        cancelPolicy: 'api/cancelPolicy',\n        isGenerateRenewal: 'api/isGenerateRenewal',\n        generateRenewal: 'api/generateRenewal',\n        confirmRenewal: 'api/confirmRenewal',\n        migratedData: 'api/migratedData',\n        getNextBinderDetails: 'api/getNextBinderDetails',\n        getVesselClassIdFromName: 'api/getVesselClassIdFromName',\n        getVesselTypeIdFromNameandClassId: 'api/getVesselTypeIdFromNameandClassId',\n        getMooringNameAndTypeSeperated: 'api/getMooringNameAndTypeSeperated',\n        setPremiumPolicyType: \"api/setPremiumPolicyType\",\n        getTPOType: \"api/getTPOType\",\n        getVesselClassByCountry: \"api/getVesselClassByCountry\",\n        getVesselTypeByCountry: \"api/getVesselTypeByCountry\",\n        getLaidUpAshoreModalData: \"api/getLaidUpAshoreModalData\",\n        saveLaidUpMidTerm: \"api/saveLaidUpMidTerm\",\n        getCancelPolicyModelData: \"api/getCancelPolicyModelData\",\n        autoBinderByCountry: \"api/autoBinderByCountry\",\n        //BinderRatingBands\n        getBinderRatingBinder: \"api/getBinderRatingBands\",\n        addUpdateBinderRatingBands: \"api/addUpdateBinderRatingBands\",\n        deleteRatingBinder: \"api/deleteBinderRatingBands\",\n        bulkInsertBinderRatingBands: \"api/bulkInsertBinderRatingBands\",\n        insertRatingBandsFromDetail: \"api/insertRatingBandsFromDetail\",\n        //Binder\n        getBinder: \"api/getBinderDetails\",\n        deleteBinder: \"api/deleteBinder\",\n        addUpdateBinder: \"api/addUpdateBinder\",\n        getInsuranceCompnay: \"api/getInsuranceCompnay\",\n        getSecurityGroup: \"api/getSecurityGroup\",\n        getBrokerList: \"api/getOrganazationData\",\n        getLastBinderCode: \"api/getlastbindercode\",\n        getselectedAuthorizeGroup: \"api/getselectedAuthorizeGroup\",\n        getBrokerData: \"api/getBrokerData\",\n        getBinderDataById: \"api/getBinderDataById\",\n\n        //Authirised Class\n        addUpdateAuthorizeClass: \"api/addUpdateAuthorizeClass\",\n        getAuthorizeClass: \"api/getAuthorizeClass\",\n        deleteAuthorizedClass: \"api/deleteAuthorizeClass\",\n\n        //Bounder For Risk Locator\n        getBounder: \"api/getBounderRisk\",\n        getRiskLocator: \"api/getRiskLocator\",\n        addBouder: \"api/addUpdateBounderRisk\",\n        addRiskLocator: \"api/addRiskLocator\",\n        deleteBounder: \"api/deleteBounderRisk\",\n\n        //Transaction\n        getTransaction: \"api/getTransaction\",\n        getNextBinderList: \"api/getNextBinderList\",\n\n        getSettlement: \"api/getSettlement\",\n\n        getSubBinders: \"api/getSubBinders\",\n\n        allEmail: \"api/getInbox\",\n        getAttachment: \"api/getAllAttachmentUnreadMail\",\n        addRemoveFlag: \"api/addRemoveFlag\",\n        deleteMessage: \"api/deleteMessage\",\n        getPolicyAutoComplete: \"api/getPolicyAutoComplete\",\n        getEmailTemplate: \"api/getEmailTemplate\",\n        getEmailBodyData: \"api/getEmailBodyData\",\n        sendMailBulk: \"api/sendMailBulk\",\n        sendReply: \"api/sendReply\",\n        forwordMail: \"api/forwordMail\",\n        sendReplyAll: \"api/sendReplyAll\",\n        addUpdateTags: \"api/addUpdateTags\",\n\n        //Claim\n        addUpdateClaim: \"api/addUpdateClaim\",\n        getClaimList: \"api/getClaimList\"\n    }\n\n\n    static requestKeys = {\n        login: {\n            username: 'username',\n            password: 'password'\n        }\n    }\n\n    static responseKeys = {\n        data: 'data',\n        settings: 'settings',\n        statusCode: 'code'\n    }\n\n};\n\n//============Images================//\n\n\n\n//============Route Constants========//\n\n\n\n\n//============Common Configurations========//\n\nexport class CommonConfig {\n\n    // static appVerison = \"V1.2.1.2020.07.21.11.45.00\";\n    static appVerison = \"V1.2.3.2020.08.18.14.05.00\";\n    static appRegion = \"Production\";\n    static phpapi = 'https://evolutionpaymentprod.azurewebsites.net';\n    static loggedInUserId = function () {\n        var loggedInUserData = ''\n        if(localStorage.getItem('loggedInUserData')){\n            loggedInUserData = JSON.parse(localStorage.getItem('loggedInUserData'));\n        // if (Cookies.get('loggedInUserData')) {\n        //     loggedInUserData = JSON.parse(Cookies.get('loggedInUserData'));\n            var EntityId = loggedInUserData.EntityId;\n            if (loggedInUserData.PersonId === \"\" || loggedInUserData.PersonId === undefined || loggedInUserData.PersonId === null) {\n                EntityId = loggedInUserData.OrganizationId;\n            } else {\n                EntityId = loggedInUserData.PersonId;\n            }\n\n            if (CommonConfig.isEmpty(EntityId)) {\n                return '999';\n            } else {\n                return EntityId;\n            }\n        } else {\n            return '999';\n        }\n    }\n\n    static getSysConfigByKey = function (key) {\n        try {\n            api.post('api/getSystemConfigByKey', { key: key }).then(res => {\n                if (res.success) {\n                    // console.log('res.data[0].SysValue',res.data[0].SysValue)\n                    // console.log(' bumber res.data[0].SysValue',Number(res.data[0].SysValue))\n                    localStorage.setItem(key,  res.data[0].SysValue)\n                    return  res.data[0].SysValue\n                } else {\n                    console.log(\"something error\");\n                    return false\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n                return false\n            });\n        } catch (error) {\n            console.log(\"erroreeee\", error);\n            return false\n        }\n    }\n\n    static loggedInUserData = function () {\n        if (localStorage.getItem('loggedInUserData')) {\n            return JSON.parse(localStorage.getItem('loggedInUserData'));\n        }\n        // if (Cookies.get('loggedInUserData')) {\n        //     return JSON.parse(Cookies.get('loggedInUserData'));\n        // }\n        else {\n            return \"\"\n        }\n    }\n\n\n    static formatPhone = (CountryCode, AreaCode, PhoneNumber) => {\n        let phone;\n        if (CountryCode && CountryCode !== '' && CountryCode !== undefined && CountryCode !== null) {\n            if (AreaCode && AreaCode !== '' && AreaCode !== undefined && AreaCode !== null) {\n                phone = CountryCode + ' ' + AreaCode + ' ' + this.formatPhoneNumber(PhoneNumber);\n            } else {\n                phone = CountryCode + ' ' + this.formatPhoneNumber(PhoneNumber);\n            }\n        } else {\n            if (AreaCode && AreaCode !== '' && AreaCode !== undefined && AreaCode !== null) {\n                phone = AreaCode + ' ' + this.formatPhoneNumber(PhoneNumber);\n            } else {\n                phone = this.formatPhoneNumber(PhoneNumber);\n            }\n        }\n        return phone;\n    }\n\n    static formatPhoneNumber(str) {\n        //Filter only numbers from the input\n        // let cleaned = ('' + str).replace(/\\D/g, '');\n\n        //Check if the input is of correct length\n        // let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n\n        // if (match) {\n        //   return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n        // };\n\n        if (str.length > 6) {\n            let formatted = str.substring(0, 2) + ' ' + str.substring(2, 5) + ' ' + str.substring(5, 6) + ' ' + str.substring(6, 10);\n            return formatted;\n        } else {\n            return str;\n        }\n\n        // return null\n    };\n\n    static formatPhoneNumberWithAreaCode(str) {\n        //Filter only numbers from the input\n        // let cleaned = ('' + str).replace(/\\D/g, '');\n\n        //Check if the input is of correct length\n        // let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n\n        // if (match) {\n        //   return '(' + match[1] + ') ' + match[2] + '-' + match[3]\n        // };\n\n        if (str.length > 6) {\n            let formatted = str.substring(0, 2) + ' ' + str.substring(2, 5) + ' ' + str.substring(5, 6) + ' ' + str.substring(6, 10);\n            return formatted;\n        } else {\n            return str;\n        }\n    };\n\n    static formatMoney(amount, decimalCount = 2, decimal = \".\", thousands = \",\") {\n        try {\n            decimalCount = Math.abs(decimalCount);\n            decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n            const negativeSign = amount < 0 ? \"-\" : \"\";\n\n            let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n            let j = (i.length > 3) ? i.length % 3 : 0;\n\n            return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    static randomStr = function (len, arr) {\n        var ans = '';\n        for (var i = len; i > 0; i--) {\n            ans +=\n                arr[Math.floor(Math.random() * arr.length)];\n        }\n        return ans;\n    }\n\n    static isEmpty = function (value) {\n        if (value === undefined || value === null || value === '') {\n            return true;\n        } else {\n            if (typeof value === 'string') {\n                return value.trim() == \"\";\n            } else {\n                return false;\n            }\n        }\n    }\n\n    static ThirdPartyStringMapOnCountry = function (country) {\n        if (country == 'Spain') {\n            return 'THIRDPARTYLIABILITYSPAIN';\n        } else {\n            return 'THIRDPARTYLIABILITY';\n        }\n    }\n\n    static ShowHideLimitAdditionalFields = function (vessleClass) {\n        if (vessleClass == 'RIB' || vessleClass == 'Sports Boat' || vessleClass == 'Neumática/Semirígida' || vessleClass == 'Jet Ski') {\n            let condition = {\n                displayWater: 1,\n                displayRacing: 0,\n                displayCrew: 0\n            }\n            return condition;\n        } else if (vessleClass == 'Racing Yacht' || vessleClass == 'Dinghy') {\n            let condition = {\n                displayWater: 0,\n                displayRacing: 1,\n                displayCrew: 0\n            }\n            return condition;\n        } else if (vessleClass == 'Commercial Vessels') {\n            let condition = {\n                displayWater: 0,\n                displayRacing: 0,\n                displayCrew: 1\n            }\n            return condition;\n        } else {\n            let condition = {\n                displayWater: 0,\n                displayRacing: 0,\n                displayCrew: 0\n            }\n            return condition;\n        }\n    }\n\n    static GetFixedCrusingRange = function (boatUse, whereReg) {\n        var CrusingRange = '';\n        if (boatUse == 'Med Waters') {\n            if (whereReg == 'Ireland') {\n                CrusingRange = 'Inland & Coastal Waters of Ireland';\n            } else if (whereReg == 'Spain') {\n                CrusingRange = 'Coastal water of Spain Including Gibraltar (Excluding North Africa)';\n            } else if (whereReg == 'United Kingdom') {\n                CrusingRange = 'Mediterranean waters not east of 10 degrees east (Excluding North Africa)';\n            }\n        } else if (boatUse == 'Inland & Coastal UK') {\n            if (whereReg == 'Ireland') {\n                CrusingRange = 'Inland & Coastal Waters of Ireland';\n            } else if (whereReg == 'Spain') {\n                CrusingRange = 'Coastal water of Spain Including Gibraltar (Excluding North Africa)';\n            } else if (whereReg == 'United Kingdom') {\n                CrusingRange = 'Inland & Coastal Waters of UK';\n            }\n        }\n        return CrusingRange;\n    }\n\n    static getFixedVesselTypeFromVesselClassName = function (vessleClassName) {\n        var VesselType = '';\n        if (vessleClassName == 'Motor Cruisers') {\n            VesselType = 'Motorboat Coastal Waters';\n        } else if (vessleClassName == 'Yacht') {\n            VesselType = 'Cruising Yacht';\n        } else if (vessleClassName == 'Rib') {\n            VesselType = 'Rib';\n        } else if (vessleClassName == 'Sports Boat') {\n            VesselType = 'Sportsboat';\n        } else if (vessleClassName == 'MarineTradeVessel') {\n            VesselType = 'MarineTradeVessel';\n        } else if (vessleClassName == 'MultiVessel') {\n            VesselType = 'MultiVessel';\n        } else if (vessleClassName == 'Engineering Vessel') {\n            VesselType = 'Engineering Vessel';\n        }\n        return VesselType;\n    }\n\n    static ShowHideActionOnPolicyStatus = function (Status) {\n        var condition = '';\n        if (Status == 'Cancel' || Status == 'Lapsed') {\n            condition = 0;\n        } else {\n            condition = 1;\n        }\n        return condition;\n    }\n\n    static handleError = function (error, methodName, userMessageKey, severity) {\n\n    }\n\n    static dateFormat = {\n        dateTime: 'DD/MM/YYYY HH:mm',\n        dateOnly: 'DD/MM/YYYY',\n        YearMonthDay: 'YYYY-MM-DD',\n        forDatePicker: 'DD-MM-YYYY',\n        yearOnly: 'YYYY',\n        dbDateTime: 'YYYY-MM-DD HH:mm:ss',\n        timeOnly: 'HH:mm'\n    }\n\n    static dataTableConfig = {\n        rowsPerPage: 10,\n        rowsPerPageOptions: [5, 10, 20, 30, 50],\n        columnToggleIcon: <i className=\"fa fa-bars\"></i>\n    }\n\n    static RegExp = {\n\n        percentage: /(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/,\n        percentageWithNegative: /^-?[0-9]{0,2}(\\.[0-9]{1,2})?$|^-?(100)(\\.[0]{1,2})?$/,\n        number: /^[0-9]+$/,\n        // nameWithoutSpace: /^[a-zA-Z]+[a-zA-Z-']*$/,\n        // nameWithSpace: /^[a-zA-Z]+[a-zA-Z-\\s']*$/,\n        nameWithoutSpace: /^[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF]+[a-zA-Z-\\u00C0-\\u024F\\u1E00-\\u1EFF']*$/,\n        nameWithSpace: /^[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF]+[a-zA-Z-\\u00C0-\\u024F\\u1E00-\\u1EFF\\s']*$/,\n        email: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n        password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, // /^(?=.*[0-9])(?=.*[!@#$%^&*.])[a-zA-Z0-9!@#$%^&*.]{8,}$/,\n        decimal: /^[0-9]+(\\.[0-9][0-9])?$/,\n        decimalWithOne: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\n        decimalWithNegative: /^-?(?:\\d*\\.\\d{1,2}|\\d+)$/,  /*   /^-?[0-9]+(\\.[0-9][0-9])?$/  */\n        // alphaNumeric: /^[a-zA-Z0-9]+[a-zA-Z0-9-\\s']*$/,\n        alphaNumeric: /^[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF0-9]+[a-zA-Z\\u00C0-\\u024F\\u1E00-\\u1EFF0-9-\\s']*$/,\n        year: /^[0-9]{4}$/,\n        allowAllWithSpace: /^(\\w.*)$/,\n        latlng: /^-?(\\d*\\.)?\\d+$/,\n    }\n\n    static thousandSeparator = {\n        format: toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n\n    static googleMapApiDetails = {\n        apiKey: \"AIzaSyDDPVM-dsW-fpv1knIQw8ZFbAMq85Qpqtg\",\n        apiURL: \"https://maps.google.com/maps/api/js?v=3.exp&key=AIzaSyDDPVM-dsW-fpv1knIQw8ZFbAMq85Qpqtg&sensor=false\",\n        googleMapApiURL: \"https://maps.googleapis.com/maps/api/js?v=6.exp&libraries=geometry,drawing,places&key=AIzaSyDDPVM-dsW-fpv1knIQw8ZFbAMq85Qpqtg\"\n    }\n}"]},"metadata":{},"sourceType":"module"}