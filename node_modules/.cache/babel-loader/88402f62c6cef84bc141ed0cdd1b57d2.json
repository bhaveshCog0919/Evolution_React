{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/RatingBand.js\";\nimport React, { Component } from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { CommonConfig } from '../../../utils/constants';\nimport { BulkUpload } from './BulkUpload';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport userGuide from \"../../../assets/User Manual/Binder Bulk Upload Guide.pdf\";\n\nclass RatingBands extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.RatingBandsData.length ? l : this.state.RatingBandsData.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.RatingBandsData.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.openDeleteModal = rowData => {\n      debugger;\n      this.setState({\n        toggleModal: !this.state.toggleModal,\n        BinderRatingBandHistoryId: this.state.BinderRatingBandHistoryId,\n        BinderRatingBandFrom: this.state.rangeFrom,\n        BinderRatingBandTo: this.state.rangeTo,\n        BinderRatingBandVesselClass: this.state.Class,\n        BinderRatingBandEffectiveDate: moment(this.state.effectiveDate).format('DD-MM-YYYY')\n      });\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false // BinderRatingBandHistoryId: \"\",\n        // BinderRatingBandFrom: \"\",\n        // BinderRatingBandTo: \"\",\n        // BinderRatingBandVesselClass: \"\",\n\n      });\n    };\n\n    this.toggleUpdateLarge = () => {\n      this.setState({\n        toggleUpdateModal: false,\n        BinderRatingBandHistoryId: this.state.oldBinderRatingBandHistoryId ? this.state.oldBinderRatingBandHistoryId : this.state.BinderRatingBandHistoryId // BinderRatingBandHistoryId: \"\",\n        // BinderRatingBandFrom: \"\",\n        // BinderRatingBandTo: \"\",\n        // BinderRatingBandVesselClass: \"\",\n\n      });\n    };\n\n    this.selectType = (event, type) => {\n      let filterData = this.state.filter;\n\n      if (type == \"country\") {\n        if (event.value === '' || event.value === undefined || event.value === null) {\n          filterData.country = \"\";\n          filterData.countryid = \"\";\n          this.setState({\n            filter: filterData\n          });\n        } else {\n          let index = this.state.countrymaster.findIndex(x => x.value === event.value);\n          let data = this.state.countrymaster[index];\n          filterData.country = data.value;\n          filterData.countryid = data.value;\n          this.setState({\n            filter: filterData\n          });\n        }\n      } else if (type == \"vesseltype\") {\n        if (event.value === '' || event.value === undefined || event.value === null) {\n          filterData.vesseltype = \"\";\n          filterData.vesseltypeid = \"\";\n          this.setState({\n            filter: filterData\n          });\n        } else {\n          let index = this.state.vesseltypemaster.findIndex(x => x.value === event.value);\n          let data = this.state.vesseltypemaster[index];\n          filterData.vesseltype = data.label;\n          filterData.vesseltypeid = data.value;\n          this.setState({\n            filter: filterData\n          });\n        }\n      } else if (type == \"classname\") {\n        if (event.value === '' || event.value === undefined || event.value === null) {\n          filterData.classname = \"\";\n          filterData.classid = \"\";\n          this.setState({\n            filter: filterData\n          });\n        } else {\n          let index = this.state.classnamemaster.findIndex(x => x.value === event.value);\n          let data = this.state.classnamemaster[index];\n          filterData.classname = data.label;\n          filterData.classid = data.value;\n          this.setState({\n            filter: filterData\n          });\n        }\n\n        this.getVesselType(event.value);\n      } else if (type == \"currency\") {\n        this.setState({\n          currency: event.value\n        });\n      } else if (type == \"displayname\") {\n        if (event.value === '' || event.value === undefined || event.value === null) {// filterData.classname = \"\"\n          // filterData.classid = \"\"\n          // this.setState({ filter: filterData })\n        } else {\n          let index = this.state.displaynamemaster.findIndex(x => x.value === event.value);\n          let data = this.state.displaynamemaster[index];\n          filterData.displayname = data.label;\n          this.setState({\n            filter: filterData\n          });\n        }\n      } else if (type == \"rateOrAmount\") {\n        debugger;\n        this.setState({\n          rateOrAmount: event.value\n        });\n\n        if (event.value == \"Rate\") {\n          this.setState({\n            isRate: true,\n            RNABAmount: 0,\n            newBZABAmount: 0\n          });\n        } else {\n          this.setState({\n            isRate: false,\n            RNRate: 0,\n            newBZRate: 0\n          });\n        }\n      }\n    };\n\n    this.toggleAddUpdate = () => {\n      // var filterData = this.state.filter\n      // filterData.classname = ''\n      // filterData.vesseltype = ''\n      // filterData.classid = ''\n      // filterData.vesseltypeid = ''\n      // filterData.country = ''\n      // filterData.countryid = ''\n      // this.setState({ filter: filterData })\n      this.setState({\n        toogleAddUpdateRatingBandModal: false\n      });\n    };\n\n    this.toggleBulkUpload = () => {\n      if (this.state.BinderId == '') {\n        toast.error('To add Rating Band Please Create New binder or edit existing Binder');\n      } else {\n        this.setState({\n          toogleBulkUpload: !this.state.toogleBulkUpload\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      let decimalRegExp = CommonConfig.RegExp.decimalWithOne;\n\n      if (e.target.name === 'rangeFrom') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            rangeFromError: true\n          });\n          this.show(\"rangeFrom\", true);\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              rangeFromError: true\n            });\n            this.show(\"rangeFrom\", true);\n          } else {\n            this.setState({\n              rangeFromError: false,\n              rangeFrom: e.target.value\n            });\n            this.show(\"rangeFrom\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'rangeTo') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            rangeToError: true\n          });\n          this.show(\"rangeTo\", true);\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              rangeToError: true\n            });\n            this.show(\"rangeTo\", true);\n          } else {\n            this.setState({\n              rangeToError: false,\n              rangeTo: e.target.value\n            });\n            this.show(\"rangeTo\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'Excess') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            ExcessError: true\n          });\n          this.show(\"Excess\", true);\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              ExcessError: true\n            });\n            this.show(\"Excess\", true);\n          } else {\n            this.setState({\n              ExcessError: false,\n              Excess: e.target.value\n            });\n            this.show(\"Excess\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'RNRate') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            RNRateError: true\n          });\n          this.show(\"RNRate\", true);\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              RNRateError: true\n            });\n            this.show(\"RNRate\", true);\n          } else {\n            this.setState({\n              RNRateError: false,\n              RNRate: e.target.value\n            });\n            this.show(\"RNRate\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'RNABAmount') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            RNABAmountError: true\n          });\n          this.show(\"RNABAmount\", true);\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              RNABAmountError: true\n            });\n            this.show(\"RNABAmount\", true);\n          } else {\n            this.setState({\n              RNABAmountError: false,\n              RNABAmount: e.target.value\n            });\n            this.show(\"RNABAmount\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'newBZRate') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            newBZRateError: true\n          });\n          this.show(\"newBZRate\", true);\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              newBZRateError: true\n            });\n            this.show(\"newBZRate\", true);\n          } else {\n            this.setState({\n              newBZRateError: false,\n              newBZRate: e.target.value\n            });\n            this.show(\"newBZRate\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'newBZABAmount') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            newBZABAmountError: true\n          });\n          this.show(\"newBZABAmount\", true);\n        } else {\n          if (!decimalRegExp.test(e.target.value)) {\n            this.setState({\n              newBZABAmountError: true\n            });\n            this.show(\"newBZABAmount\", true);\n          } else {\n            this.setState({\n              newBZABAmountError: false,\n              newBZABAmount: e.target.value\n            });\n            this.show(\"newBZABAmount\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'effectiveDate') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            effectiveDateError: true\n          });\n          this.show(\"effectiveDate\", true);\n        } else {\n          this.setState({\n            effectiveDateError: false,\n            effectiveDate: e.target.value\n          });\n          this.show(\"effectiveDate\", false);\n        }\n      }\n\n      if (e.target.name === 'isHideRemoved') {\n        debugger;\n        this.setState({\n          isHideRemoved: e.target.checked,\n          RatingBandsDataAll: this.state.RatingBandsData\n        });\n\n        if (e.target.checked) {\n          let results = this.state.RatingBandsData.filter(RatingBands => {\n            return RatingBands.Status !== 'Inactive';\n          });\n          this.setState({\n            RatingBandsData: results\n          });\n        } else {\n          this.setState({\n            RatingBandsData: this.state.RatingBandsDataAll\n          });\n        }\n      }\n    };\n\n    let columns = [{\n      field: \"Class\",\n      header: \"Class\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"Type\",\n      header: \"Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"Country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"From\",\n      header: \"From\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"To\",\n      header: \"To\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"Excess\",\n      header: \"Excess\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      field: \"BaseRateRENP\",\n      header: \"Base Rate % - RENEWAL\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      field: \"BaseRateREN\",\n      header: \"Base Absolute Amount RENEWAL\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      field: \"BaseRateNewP\",\n      header: \"Base Rate % - NEW Business\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 8\n    }, {\n      field: \"BaseRateNew\",\n      header: \"Base Absolute Amount NEW Business\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 9\n    }, {\n      field: \"effectiveDateView\",\n      header: \"Effective Date\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 10\n    }, {\n      field: \"Qualifier\",\n      header: \"Qualifier\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 11\n    }, {\n      field: \"IsCurrent\",\n      header: \"Is Current\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 12\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 13\n    }];\n    let columns1 = [{\n      field: \"Row\",\n      header: \"Row\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"Country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"Class\",\n      header: \"CLASS\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"Type\",\n      header: \"TYPE\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"From\",\n      header: \"Value From\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"To\",\n      header: \"Value To\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      field: \"Excess\",\n      header: \"Excess\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      field: \"BaseRateNewP\",\n      header: \"Base Rate(%) - New Business\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      field: \"BaseRateNew\",\n      header: \"Absolute - New Business\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 8\n    }, {\n      field: \"BaseRateRENP\",\n      header: \"Base Rate(%) – Renewal\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 10\n    }, {\n      field: \"BaseRateREN\",\n      header: \"Absolute – Renewal\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 11\n    }, {\n      field: \"Status\",\n      header: \"Status\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 12\n    }, {\n      field: \"ErrorMessage\",\n      header: \"Error Message\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 13\n    }];\n    const orginial = this.setState; // this.state = JSON.parse(localStorage.getItem('ratingbandstate'))\n    //     ? JSON.parse(localStorage.getItem('ratingbandstate'))\n    //     : \n\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      cols1: columns1,\n      toogleAddUpdateRatingBandModal: false,\n      toogleBulkUpload: false,\n      filter: {\n        country: \"\",\n        countryid: \"\",\n        classname: \"\",\n        classid: \"\",\n        vesseltype: \"\",\n        vesseltypeid: \"\",\n        displayname: \"Current\"\n      },\n      BinderId: \"\",\n      //dev 1\n      UMRN: \"\",\n      Excess: \"\",\n      rangeFrom: \"\",\n      rangeTo: \"\",\n      RNRate: \"\",\n      RNABAmount: \"\",\n      newBZRate: \"\",\n      newBZABAmount: \"\",\n      displaynamemaster: [],\n      countrymaster: [],\n      countryError: false,\n      classnamemaster: [],\n      classnameError: false,\n      vesseltypemaster: [],\n      vesseltypeError: false,\n      RatingBandsData: [],\n      currency: \"\",\n      currencyError: false,\n      currencymaster: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      isRate: true,\n      rateOrAmount: \"Rate\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rangeFromError: true,\n      rangeToError: true,\n      ExcessError: true,\n      RNRateError: true,\n      RNABAmountError: true,\n      newBZRateError: true,\n      newBZABAmountError: true,\n      toggleUpdateModal: false,\n      isHideRemoved: false,\n      RatingBandsBulkUpload: [],\n      showBulkdt: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.colOptions1 = [];\n\n    for (let col1 of columns1) {\n      this.colOptions1.push({\n        label: col1.header,\n        value: col1\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.export = this.export.bind(this);\n    this.downloadUserGuide = this.downloadUserGuide.bind(this);\n    var handleCallBack = this.handleCallBack.bind(this);\n  }\n\n  downloadUserGuide() {\n    window.location.href = userGuide;\n  }\n\n  componentWillUnmount() {\n    localStorage.removeItem('ratingbandstate');\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  export() {\n    this.state.showBulkdt = true;\n    this.setState({\n      showBulkdt: true\n    });\n    setTimeout(() => {\n      setTimeout(() => {\n        this.state.showBulkdt = false;\n        this.setState({\n          showBulkdt: false\n        });\n      }, 500);\n      this.dt.exportCSV();\n    }, 500);\n  }\n\n  getVesselType(value) {\n    try {\n      const data = {\n        VesselClassId: value\n      };\n      api.post(APIConstant.path.getVesselType, data).then(res => {\n        if (res.success) {\n          console.log(\"VesselType....\", res.data);\n          var formattedData = [];\n\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].VesselTypeName,\n              value: res.data[i].VesselTypeId\n            });\n          }\n\n          this.setState({\n            vesseltypemaster: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getCurrency() {\n    try {\n      api.get(APIConstant.path.getCurrency).then(res => {\n        var formattedData = [];\n\n        if (res.success) {\n          console.log(\"Currency....\", res.data);\n\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].CurrncyCode,\n              value: res.data[i].CurrncyCode\n            });\n          }\n\n          this.setState({\n            currencymaster: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (err) {}\n  }\n\n  getVesselClass() {\n    try {\n      api.get(APIConstant.path.getVesselClass).then(res => {\n        console.log(\"getAuthorizeClass\", res);\n\n        if (res.success) {\n          console.log(\"VesselClass....\", res.data);\n          var formattedData = [];\n\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].VesselClassName,\n              value: res.data[i].VesselClassId\n            });\n          }\n\n          this.setState({\n            classnamemaster: formattedData\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (err) {}\n  }\n\n  getCountry() {\n    try {\n      const data = {\n        stringmaptype: 'COUNTRY',\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        console.log(\"===========Bounder Class Data\", res.data);\n        var formattedData = [];\n\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].StringMapKey\n            });\n          }\n\n          this.setState({\n            countrymaster: formattedData\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  editBand(e) {\n    debugger;\n    var filterData = this.state.filter;\n    filterData.classname = e.Class;\n    filterData.vesseltype = e.Type;\n    filterData.classid = e.VesselClassId;\n    filterData.vesseltypeid = e.VesselTypeId;\n    filterData.country = e.Country;\n    filterData.countryid = e.Country;\n    this.setState({\n      toogleAddUpdateRatingBandModal: true,\n      rangeFrom: e.From,\n      rangeTo: e.To,\n      Excess: e.Excess,\n      RNRate: e.BaseRateRENP,\n      RNABAmount: e.BaseRateREN,\n      newBZRate: e.BaseRateNewP,\n      newBZABAmount: e.BaseRateNew,\n      currency: e.Currency,\n      filter: filterData,\n      isEdit: true,\n      isView: false,\n      isAdd: false,\n      effectiveDate: moment(e.effectiveDate).format(\"YYYY-MM-DD\") > moment().format(\"YYYY-MM-DD\") ? moment(e.effectiveDate).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"),\n      rangeFromError: false,\n      rangeToError: false,\n      ExcessError: false,\n      RNRateError: false,\n      RNABAmountError: false,\n      newBZRateError: false,\n      newBZABAmountError: false,\n      isRate: e.isRate,\n      rateOrAmount: e.rateOrAmount,\n      BinderRatingBandHistoryId: e.id,\n      Class: e.Class,\n      Status: e.Status\n    });\n  }\n\n  viewBand(e) {\n    var filterData = this.state.filter;\n    filterData.classname = e.Class;\n    filterData.vesseltype = e.Type;\n    filterData.classid = e.VesselClassId;\n    filterData.vesseltypeid = e.VesselTypeId;\n    filterData.country = e.Country;\n    filterData.countryid = e.Country;\n    this.setState({\n      toogleAddUpdateRatingBandModal: true,\n      rangeFrom: e.From,\n      rangeTo: e.To,\n      Excess: e.Excess,\n      RNRate: e.BaseRateRENP,\n      RNABAmount: e.BaseRateREN,\n      newBZRate: e.BaseRateNewP,\n      newBZABAmount: e.BaseRateNew,\n      BinderRatingBandHistoryId: e.id,\n      currency: e.Currency,\n      filter: filterData,\n      isEdit: false,\n      isView: true,\n      isAdd: false,\n      effectiveDate: moment(e.effectiveDate).format(\"YYYY-MM-DD\"),\n      rangeFromError: false,\n      rangeToError: false,\n      ExcessError: false,\n      RNRateError: false,\n      RNABAmountError: false,\n      newBZRateError: false,\n      newBZABAmountError: false,\n      isRate: e.isRate,\n      rateOrAmount: e.rateOrAmount,\n      Status: e.Status\n    });\n  }\n\n  addBand() {\n    if (this.state.BinderId == '') {\n      toast.error('To add Rating Band Please Create New binder or edit existing Binder');\n    } else if (this.state.filter.classid == '') {\n      toast.error('Please Select Vessel Class');\n    } else if (this.state.filter.vesseltypeid == '') {\n      toast.error('Please Select Vessel Type');\n    } else if (this.state.filter.country == '') {\n      toast.error('Please Select Country');\n    } else {\n      this.setState({\n        toogleAddUpdateRatingBandModal: true,\n        rangeFrom: '',\n        rangeTo: '',\n        Excess: '',\n        RNRate: '',\n        RNABAmount: '',\n        newBZRate: '',\n        newBZABAmount: '',\n        BinderRatingBandHistoryId: '',\n        currency: '',\n        isEdit: false,\n        isView: false,\n        isAdd: true,\n        isRate: true,\n        rateOrAbsolute: \"Rate\",\n        effectiveDate: moment().format(\"YYYY-MM-DD\"),\n        rangeFromError: true,\n        rangeToError: true,\n        ExcessError: true,\n        RNRateError: true,\n        RNABAmountError: true,\n        newBZRateError: true,\n        newBZABAmountError: true\n      });\n    }\n  }\n\n  deleteBand() {\n    let data = {\n      \"BinderRatingBandHistoryId\": this.state.BinderRatingBandHistoryId,\n      \"UserId\": CommonConfig.loggedInUserId(),\n      \"IsDescard\": true,\n      \"Status\": \"Inactive\",\n      \"CurrentUser\": CommonConfig.loggedInUserId()\n    };\n    api.post(APIConstant.path.deleteRatingBinder, data).then(res => {\n      if (res.success) {\n        debugger; // if (res.data[0][0].ErrorMsg !== \"\") {\n        //     console.log(res.data[0][0])\n        //     toast.error(res.data[0][0].ErrorMsg);\n        // } else {\n\n        toast.success(\"Rating Band successfully deleted\"); // }\n\n        this.toggleLarge();\n        this.getRatingBinder(this.state.BinderId);\n        this.setState({\n          toogleAddUpdateRatingBandModal: false\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  valid() {\n    debugger;\n    let valid = false;\n\n    if (this.state.rangeFromError) {\n      toast.error('Please Enter Range From');\n    } else if (this.state.rangeToError) {\n      toast.error('Please Enter Range To');\n    } else if (this.state.ExcessError) {\n      toast.error('Please Enter Excess');\n    } else if (this.state.RNRateError && this.state.isRate == true) {\n      toast.error('Please Enter Renewal Rate (%)');\n    } // else if (parseInt(this.state.RNRate) == 0 && this.state.isRate == true) {\n    //     toast.error('Please Enter More than 0 Renewal Rate (%)');\n    // } \n    else if (this.state.RNABAmountError && this.state.isRate == false) {\n        toast.error('Please Enter Renewal Absolute Amount');\n      } // else if (parseInt(this.state.RNABAmount) == 0 && this.state.isRate == false) {\n      //     toast.error('Please Enter More than 0 Renewal Absolute Amount');\n      // } \n      else if (this.state.newBZRateError && this.state.isRate == true) {\n          toast.error('Please Enter New Business Rate (%)');\n        } //  else if (parseInt(this.state.newBZRate) == 0 && this.state.isRate == true) {\n        //     toast.error('Please Enter More than 0 New Business Rate (%)');\n        // } \n        else if (this.state.newBZABAmountError && this.state.isRate == false) {\n            toast.error('Please Enter New Business Absolute Amount');\n          } //  else if (parseInt(this.state.newBZABAmount) == 0 && this.state.isRate == false) {\n          //     toast.error('Please Enter More than 0 New Business Absolute Amount');\n          // }\n          else {\n              valid = true;\n            }\n\n    return valid;\n  }\n\n  updateRatingBand(results) {\n    debugger;\n    this.setState({\n      toggleUpdateModal: true,\n      BinderRatingBandHistoryId: results[0].id,\n      BinderRatingBandFrom: this.state.rangeFrom,\n      BinderRatingBandTo: this.state.rangeTo,\n      currentEffectiveDate: this.state.effectiveDate,\n      updateEffectiveDate: moment(results[0].effectiveDate).format('DD-MM-YYYY'),\n      effectiveDate: results[0].effectiveDate,\n      BinderRatingBandVesselClass: this.state.Class,\n      oldBinderRatingBandHistoryId: this.state.BinderRatingBandHistoryId,\n      isAdd: false,\n      isEdit: true\n    });\n  }\n\n  addUpdateRatingBand() {\n    // this.toggleUpdateLarge();\n    if (this.valid()) {\n      debugger;\n      let results = this.state.RatingBandsData.filter(RatingBands => {\n        return RatingBands.From == this.state.rangeFrom && RatingBands.To == this.state.rangeTo && RatingBands.effectiveDate == this.state.effectiveDate && RatingBands.id !== this.state.BinderRatingBandHistoryId && RatingBands.Status == 'Active';\n      });\n      let resultsData = this.state.RatingBandsData.filter(RatingBands => {\n        return RatingBands.From == this.state.rangeFrom && RatingBands.To == this.state.rangeTo && RatingBands.id === this.state.BinderRatingBandHistoryId;\n      });\n\n      if (results.length > 0) {\n        this.updateRatingBand(results);\n      } else {\n        var isAdd = this.state.isAdd;\n        var isEdit = this.state.isEdit;\n\n        if (resultsData.length > 0) {\n          if (this.state.effectiveDate !== resultsData[0].effectiveDate && this.state.isEdit) {\n            isAdd = true;\n            isEdit = false;\n          }\n        }\n\n        let data = {\n          \"BinderRatingBandHistoryId\": this.state.isEdit ? this.state.BinderRatingBandHistoryId : \"\",\n          \"BinderId\": this.state.BinderId,\n          \"UserId\": CommonConfig.loggedInUserId(),\n          \"VesselClassId\": this.state.filter.classid,\n          \"CurrencyId\": this.state.currency,\n          \"CountryId\": this.state.filter.countryid,\n          \"VesselTypeId\": this.state.filter.vesseltypeid,\n          \"Country\": this.state.filter.country,\n          \"RangeFrom\": this.state.rangeFrom.replace(\",\", \"\"),\n          \"RangeTo\": this.state.rangeTo.replace(\",\", \"\"),\n          \"Excess\": this.state.Excess,\n          \"RenewalRatePercent\": this.state.RNRate ? this.state.RNRate : 0,\n          \"RenewalRateAbsolute\": this.state.RNABAmount ? this.state.RNABAmount : 0,\n          \"NewBusinessRatePercent\": this.state.newBZRate ? this.state.newBZRate : 0,\n          \"NewBusinessRateAbsolute\": this.state.newBZABAmount ? this.state.newBZABAmount : 0,\n          \"StartDate\": this.state.effectiveDate,\n          \"IsAdd\": isAdd,\n          \"IsEdit\": isEdit,\n          \"IsDescard\": false,\n          \"CurrentUser\": CommonConfig.loggedInUserId(),\n          \"LanguageId\": this.state.LanguageId,\n          \"Status\": \"Active\"\n        };\n        api.post(APIConstant.path.addUpdateBinderRatingBands, data).then(res => {\n          console.log(res);\n\n          if (res.success) {\n            var filterData = this.state.filter; // filterData.classname = ''\n            // filterData.vesseltype = ''\n            // filterData.classid = ''\n            // filterData.vesseltypeid = ''\n            // filterData.country = ''\n            // filterData.countryid = ''\n            // this.setState({ filter: filterData })\n\n            toast.success(res.data.message);\n            this.getRatingBinder(this.state.BinderId);\n          } else {\n            toast.error(res.data.message);\n          }\n\n          this.addRatingBand();\n        }).catch(err => {\n          console.log(err);\n          this.addRatingBand();\n        });\n      }\n    }\n  }\n\n  getRatingBinder(BinderId) {\n    if (this.state.filter.classid != \"\" || this.state.filter.country != \"\") {\n      let data = {\n        \"BinderId\": BinderId,\n        \"UserId\": CommonConfig.loggedInUserId(),\n        \"VesselClassId\": this.state.filter.classid,\n        \"VesselTypeId\": this.state.filter.vesseltypeid,\n        \"Country\": this.state.filter.country,\n        \"DisplayName\": this.state.filter.displayname // \"isHideRemoved\": this.state.isHideRemoved\n\n      };\n      api.post(APIConstant.path.getBinderRatingBinder, data).then(res => {\n        debugger;\n        console.log(res);\n\n        if (res.success) {\n          console.log(\"===========Binder Rating Data\");\n          console.log(res.data);\n          this.setState({\n            RatingBandsBulkUpload: res.data[0].map((obj, key) => {\n              return {\n                Row: key + 1,\n                Class: obj.VesselClassName == undefined ? \"NA\" : obj.VesselClassName,\n                Type: obj.VesselTypeName == undefined ? \"NA\" : obj.VesselTypeName,\n                From: obj.RangeFrom,\n                To: obj.RangeTo,\n                Excess: obj.Excess,\n                BaseRateRENP: obj.RenewalRatePercent,\n                BaseRateREN: obj.RenewalRateAbsolute,\n                BaseRateNewP: obj.NewBusinessRatePercent,\n                BaseRateNew: obj.NewBusinessRateAbsolute,\n                Country: obj.Country,\n                Status: \"\",\n                ErrorMessage: \"\"\n              };\n            })\n          });\n          this.setState({\n            RatingBandsData: res.data[0].map(obj => {\n              return {\n                id: obj.BinderRatingBandHistoryId,\n                Class: obj.VesselClassName == undefined ? \"NA\" : obj.VesselClassName,\n                Type: obj.VesselTypeName == undefined ? \"NA\" : obj.VesselTypeName,\n                From: obj.RangeFrom.toLocaleString(),\n                To: obj.RangeTo.toLocaleString(),\n                Excess: obj.Excess,\n                BaseRateRENP: obj.RenewalRatePercent,\n                BaseRateREN: obj.RenewalRateAbsolute,\n                BaseRateNewP: obj.NewBusinessRatePercent,\n                BaseRateNew: obj.NewBusinessRateAbsolute,\n                VesselClassId: obj.VesselClassId,\n                VesselTypeId: obj.VesselTypeId,\n                Currency: obj.Currency,\n                Country: obj.Country,\n                UMRN: obj.UMRN,\n                isRate: obj.RenewalRatePercent > 0 && obj.NewBusinessRatePercent > 0 ? true : false,\n                rateOrAmount: obj.RenewalRatePercent > 0 && obj.NewBusinessRatePercent > 0 ? \"Rate\" : \"Amount\",\n                effectiveDate: moment(obj.StartDate).format(\"YYYY-MM-DD\"),\n                effectiveDateView: moment(obj.StartDate).format(\"DD-MM-YYYY\"),\n                Qualifier: obj.Qualifier,\n                IsCurrent: obj.IsCurrent,\n                ACTION: obj.ACTION,\n                Status: obj.Status\n              };\n            })\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      toast.error('Please Select Vessel Class or Country');\n    }\n  }\n\n  actionTemplate(rowData, column) {\n    // debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 16\n      }\n    }, rowData.ACTION == \"Edit\" ? /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-pencil\",\n      className: \"p-button-warning\",\n      onClick: () => this.editBand(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"Edit\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 17\n      }\n    }) : \"\", rowData.ACTION == \"View\" ? /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-primary\",\n      onClick: () => this.viewBand(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n  componentWillMount() {}\n\n  getBounderRisk(BinderId) {\n    let data = {\n      \"BinderId\": BinderId,\n      \"UserId\": CommonConfig.loggedInUserId()\n    };\n    api.post(APIConstant.path.getBounder, data).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        console.log(\"===========Bounder Class Data\", res.data); // console.log(res.data)\n\n        var formattedData = [];\n\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].Country,\n              value: res.data[i].Country\n            });\n          }\n\n          this.setState({\n            countrymaster: formattedData\n          });\n        } else {}\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getAuthorizeClass(BinderID) {\n    let data = {\n      \"BinderId\": BinderID\n    };\n    api.post(APIConstant.path.getAuthorizeClass, data).then(res => {\n      console.log(\"getAuthorizeClass\", res);\n      var formattedData = [];\n\n      if (res.success) {\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            label: res.data[i].VesselClassName,\n            value: res.data[i].VesselClassId\n          });\n        }\n\n        this.setState({\n          classnamemaster: formattedData\n        });\n      } else {}\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    var splitData = this.props.location.pathname.split(\"/\"); // if (splitData[3] !== undefined) {\n\n    if (!CommonConfig.isEmpty(splitData[3])) {\n      this.setState({\n        BinderId: splitData[3]\n      }); // this.getRatingBinder(splitData[3])\n\n      this.getAuthorizeClass(splitData[3]);\n      this.getBounderRisk(splitData[3]);\n      this.getBinderData(splitData[3]);\n    } // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n    //     this.setState({ BinderId: this.props.match.params.Id })\n    //     // this.getRatingBinder(this.props.match.params.Id)\n    //     this.getAuthorizeClass(this.props.match.params.Id)\n    //     this.getBounderRisk(this.props.match.params.Id)\n    //     this.getBinderData(this.props.match.params.Id)\n    // }\n    // this.getCountry()\n\n\n    this.getCurrency();\n    this.getDisplayName(); // this.getVesselClass()\n  }\n\n  getBinderData(binderId) {\n    try {\n      let data = {\n        \"binderId\": binderId\n      };\n      api.post(APIConstant.path.getBinderDataById, data).then(res => {\n        console.log(res);\n        var data = res.data[0];\n        this.setState({\n          UMRN: data.UMRN,\n          Currency: data.Currency\n        });\n        this.GetSelectedAuthorizeGroup(data.BinderId);\n        this.getNextBinderList();\n      }).catch(err => {});\n    } catch (err) {}\n  }\n\n  getDisplayName() {\n    try {\n      const data = {\n        stringmaptype: 'DISPLAYMODE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          console.log(\"displayname\", res.data);\n          var displayname = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            displayname.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            displaynamemaster: displayname\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  filterList() {}\n\n  addRatingBand() {\n    this.setState({\n      toogleAddUpdateRatingBandModal: !this.state.toogleAddUpdateRatingBandModal\n    });\n  }\n\n  handleCallBack(aBool) {\n    this.setState({\n      toogleBulkUpload: aBool\n    });\n    this.getRatingBinder(this.state.BinderId);\n  }\n\n  show(field, condition) {\n    console.log(\"show\", field);\n    console.log(\"show\", condition);\n\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    // console.log(\"Rating Band---\", this.state)\n    let columns1 = '';\n    let columns = '';\n\n    if (this.state.showBulkdt == true) {\n      columns1 = this.state.cols1.map((col, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col.field,\n          header: col.header,\n          body: col.body,\n          sortable: col.sortable,\n          filter: col.filter,\n          filterMatchMode: col.filterMatchMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 24\n          }\n        });\n      });\n    } else {\n      columns = this.state.cols.map((col, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col.field,\n          header: col.header,\n          body: col.body,\n          sortable: col.sortable,\n          filter: col.filter,\n          filterMatchMode: col.filterMatchMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 24\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"1.5\",\n      style: {\n        padding: \"0px 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 33\n      }\n    }, \"Class Name *\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"classname\",\n      id: \"classname\",\n      onChange: e => this.selectType(e.target, 'classname'),\n      value: this.state.filter.classid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 37\n      }\n    }, \"Select class name\"), this.state.classnamemaster.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        label: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 92\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 33\n      }\n    }, \"Please select ClassName\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"1.5\",\n      style: {\n        padding: \"0px 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 33\n      }\n    }, \"Vessel Type *\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"vesseltype\",\n      id: \"vesseltype\",\n      onChange: e => this.selectType(e.target, 'vesseltype'),\n      value: this.state.filter.vesseltypeid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 37\n      }\n    }, \"Select VesselType\"), this.state.vesseltypemaster.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        label: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 93\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 33\n      }\n    }, \"Please select VesselType\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"1.5\",\n      style: {\n        padding: \"0px 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 33\n      }\n    }, \"Country *\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"country\",\n      id: \"country\",\n      onChange: e => this.selectType(e.target, 'country'),\n      value: this.state.filter.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 37\n      }\n    }, \"Select Country\"), this.state.countrymaster.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        label: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 90\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 33\n      }\n    }, \"Please select Country\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"1.5\",\n      style: {\n        padding: \"0px 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 33\n      }\n    }, \"Display Name *\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"displayname\",\n      id: \"displayname\",\n      onChange: e => this.selectType(e.target, 'displayname'),\n      value: this.state.filter.displayname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 33\n      }\n    }, this.state.displaynamemaster.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.value,\n        label: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 94\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 33\n      }\n    }, \"Please select Country\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      style: {\n        marginRight: '.5em',\n        borderRadius: \"20px\"\n      },\n      onClick: () => this.getRatingBinder(this.state.BinderId),\n      title: \"Go\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 33\n      }\n    }, \" Go \"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option col-md-5\",\n      style: {\n        marginLeft: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isHideRemoved\",\n      id: \"isHideRemoved\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isHideRemoved,\n      checked: this.state.isHideRemoved == true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 21\n      }\n    }, \"Hide Removed\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltip: \"Add Rating Band\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.addBand(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Bulk Uploads\",\n      label: \"Bulk Uploads\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.toggleBulkUpload(),\n      style: {\n        margin: \"0px 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-question-circle\",\n      tooltip: \"Bulk Upload User Guide\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.downloadUserGuide,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 21\n      }\n    })), this.state.showBulkdt == true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.RatingBandsBulkUpload,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.RatingBandsBulkUpload.length,\n      exportFilename: \"Rating Band List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: this.state.paginatorTemplate,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 25\n      }\n    }, columns1)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.RatingBandsData,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.RatingBandsData.length,\n      exportFilename: \"Rating Band List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: this.state.paginatorTemplate,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 29\n      }\n    }, columns), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toogleAddUpdateRatingBandModal,\n      toggle: () => this.toggleAddUpdate(),\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleAddUpdate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 33\n      }\n    }, \"Add/Update RatingBands\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 45\n      }\n    }, \"Binder\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 45\n      }\n    }, this.state.UMRN)), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1172,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 45\n      }\n    }, \"Currency\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 45\n      }\n    }, this.state.Currency))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 45\n      }\n    }, \"Class Name\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 45\n      }\n    }, this.state.filter.classname)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1194,\n        columnNumber: 45\n      }\n    }, \"Vessel Type\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1197,\n        columnNumber: 45\n      }\n    }, this.state.filter.vesseltype)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1199,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 45\n      }\n    }, \"Country\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 45\n      }\n    }, this.state.filter.country))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1207,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 45\n      }\n    }, \"Range From*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      disabled: this.state.isEdit || this.state.isView,\n      name: \"rangeFrom\",\n      id: \"rangeFrom\",\n      placeholder: \"Range From\",\n      onChange: e => this.handleChange(e),\n      value: this.state.rangeFrom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 45\n      }\n    }, \"Please Enter Range From\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 45\n      }\n    }, \"To*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      disabled: this.state.isEdit || this.state.isView,\n      name: \"rangeTo\",\n      id: \"rangeTo\",\n      placeholder: \"Range To\",\n      onChange: e => this.handleChange(e),\n      value: this.state.rangeTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 45\n      }\n    }, \"Please Enter Range To \"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1227,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 45\n      }\n    }, \"Excess*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      disabled: this.state.isView,\n      name: \"Excess\",\n      id: \"Excess\",\n      onChange: e => this.handleChange(e),\n      value: this.state.Excess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1233,\n        columnNumber: 45\n      }\n    }, \"Please Enter Excess\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 45\n      }\n    }, \"Rate or Amount*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      disabled: this.state.isView,\n      name: \"rateOrAmount\",\n      id: \"rateOrAmount\",\n      onChange: e => this.selectType(e.target, 'rateOrAmount'),\n      value: this.state.rateOrAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Rate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 49\n      }\n    }, \"Rate(%)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 49\n      }\n    }, \"Absolute Amount\")))), this.state.isRate ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 45\n      }\n    }, \"Renewal Rate (%)*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      disabled: this.state.isView,\n      name: \"RNRate\",\n      id: \"RNRate\",\n      onChange: e => this.handleChange(e),\n      value: this.state.RNRate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 45\n      }\n    }, \"Please Enter Renewal Rate (%)\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 45\n      }\n    }, \"New Business Rate (%)*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      disabled: this.state.isView,\n      name: \"newBZRate\",\n      id: \"newBZRate\",\n      onChange: e => this.handleChange(e),\n      value: this.state.newBZRate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1263,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 45\n      }\n    }, \"Please Enter New Business Rate (%)\"))) : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1268,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 45\n      }\n    }, \"Renewal Absolute Amount*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1271,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      disabled: this.state.isView,\n      name: \"RNABAmount\",\n      id: \"RNABAmount\",\n      onChange: e => this.handleChange(e),\n      value: this.state.RNABAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 45\n      }\n    }, \"Please Enter Renewal Absolute Amount\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 45\n      }\n    }, \"New Business Absolute Amount*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      disabled: this.state.isView,\n      name: \"newBZABAmount\",\n      id: \"newBZABAmount\",\n      onChange: e => this.handleChange(e),\n      value: this.state.newBZABAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 45\n      }\n    }, \"Please Enter New Business Absolute Amount\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 45\n      }\n    }, \"Effective Date\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"effectiveDate\",\n      disabled: this.state.isView,\n      id: \"effectiveDate\",\n      onChange: e => this.handleChange(e),\n      value: this.state.effectiveDate,\n      min: moment().format('YYYY-MM-DD'),\n      max: moment().add(100, 'years').format('YYYY-MM-DD'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1296,\n        columnNumber: 45\n      }\n    }, \"Please Enter Valid Effective Date\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 33\n      }\n    }, this.state.isEdit || this.state.isAdd ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.addUpdateRatingBand(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 145\n      }\n    }), \" Save\") : \"\", this.state.isEdit && this.state.effectiveDate > moment().format('YYYY-MM-DD') ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"danger\",\n      onClick: () => this.openDeleteModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1302,\n        columnNumber: 121\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1302,\n        columnNumber: 180\n      }\n    }), \" Discard\") : \"\", /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.toggleAddUpdate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 97\n      }\n    }), \" Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toogleBulkUpload,\n      toggle: () => this.toggleBulkUpload(),\n      className: 'modal-lg ' + this.props.className,\n      style: {\n        maxWidth: \"1200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1307,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.toggleBulkUpload(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 33\n      }\n    }, \"Bulk Upload\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(BulkUpload, {\n      name: \"bhavik\",\n      BinderId: this.state.BinderId,\n      handleCallBack: this.handleCallBack.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 33\n      }\n    }, \"Delete Rating Band\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 33\n      }\n    }, \"Are you sure, You want to delete \", this.state.BinderRatingBandVesselClass, \" \", this.state.BinderRatingBandFrom, \" - \", this.state.BinderRatingBandTo, \" of \", this.state.BinderRatingBandEffectiveDate, \" Rating Band?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.deleteBand(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 92\n      }\n    }), \" Delete\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 85\n      }\n    }), \"Cancel\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleUpdateModal,\n      toggle: this.toggleUpdateLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleUpdateLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1331,\n        columnNumber: 33\n      }\n    }, \"Update Rating Band\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1332,\n        columnNumber: 33\n      }\n    }, \"We have already record of \", this.state.updateEffectiveDate, \" for \", this.state.BinderRatingBandFrom, \" - \", this.state.BinderRatingBandTo, \" Rating Band. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1333,\n        columnNumber: 181\n      }\n    }), \" Do You want to update \", this.state.BinderRatingBandVesselClass, \" \", this.state.BinderRatingBandFrom, \" - \", this.state.BinderRatingBandTo, \" Rating Band?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => {\n        this.addUpdateRatingBand();\n        this.toggleUpdateLarge();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 132\n      }\n    }), \" Yes\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleUpdateLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 91\n      }\n    }), \"No\")))));\n  }\n\n}\n\nexport default withTranslation()(RatingBands);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/RatingBand.js"],"names":["React","Component","Col","Row","Modal","ModalBody","ModalHeader","ModalFooter","Button","BTN","Input","withTranslation","DataTable","Column","MultiSelect","InputText","CommonConfig","BulkUpload","api","APIConstant","moment","toast","userGuide","RatingBands","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","RatingBandsData","length","str","setState","selectedPage","rowsPerPage","openDeleteModal","rowData","toggleModal","BinderRatingBandHistoryId","BinderRatingBandFrom","rangeFrom","BinderRatingBandTo","rangeTo","BinderRatingBandVesselClass","Class","BinderRatingBandEffectiveDate","effectiveDate","format","toggleLarge","toggleUpdateLarge","toggleUpdateModal","oldBinderRatingBandHistoryId","selectType","event","type","filterData","filter","value","undefined","country","countryid","index","countrymaster","findIndex","x","data","vesseltype","vesseltypeid","vesseltypemaster","label","classname","classid","classnamemaster","getVesselType","currency","displaynamemaster","displayname","rateOrAmount","isRate","RNABAmount","newBZABAmount","RNRate","newBZRate","toggleAddUpdate","toogleAddUpdateRatingBandModal","toggleBulkUpload","BinderId","error","toogleBulkUpload","handleChange","target","name","decimalRegExp","RegExp","decimalWithOne","rangeFromError","show","test","rangeToError","ExcessError","Excess","RNRateError","RNABAmountError","newBZRateError","newBZABAmountError","effectiveDateError","isHideRemoved","checked","RatingBandsDataAll","results","Status","columns","field","header","sortable","filterMatchMode","id","body","actionTemplate","bind","columns1","orginial","LanguageId","i18n","language","cols","cols1","UMRN","countryError","classnameError","vesseltypeError","currencyError","currencymaster","rowsPerPageOptions","dataTableConfig","globalFilter","paginatorTemplate","RatingBandsBulkUpload","showBulkdt","colOptions","col","push","colOptions1","col1","onColumnToggle","export","downloadUserGuide","handleCallBack","window","location","href","componentWillUnmount","localStorage","removeItem","valueInOrder","sort","y","setTimeout","dt","exportCSV","VesselClassId","post","path","then","res","success","console","log","formattedData","i","VesselTypeName","VesselTypeId","catch","err","getCurrency","get","CurrncyCode","getVesselClass","VesselClassName","getCountry","stringmaptype","orderby","dropdownbycode","StringMapName","StringMapKey","editBand","Type","Country","From","To","BaseRateRENP","BaseRateREN","BaseRateNewP","BaseRateNew","Currency","isEdit","isView","isAdd","viewBand","addBand","rateOrAbsolute","deleteBand","loggedInUserId","deleteRatingBinder","getRatingBinder","valid","updateRatingBand","currentEffectiveDate","updateEffectiveDate","addUpdateRatingBand","resultsData","replace","addUpdateBinderRatingBands","message","addRatingBand","getBinderRatingBinder","map","obj","key","RangeFrom","RangeTo","RenewalRatePercent","RenewalRateAbsolute","NewBusinessRatePercent","NewBusinessRateAbsolute","ErrorMessage","toLocaleString","StartDate","effectiveDateView","Qualifier","IsCurrent","ACTION","column","marginRight","position","componentWillMount","getBounderRisk","getBounder","getAuthorizeClass","BinderID","componentDidMount","splitData","pathname","split","isEmpty","getBinderData","getDisplayName","binderId","getBinderDataById","GetSelectedAuthorizeGroup","getNextBinderList","Description","filterList","aBool","condition","document","getElementById","className","render","padding","borderRadius","marginLeft","margin","columnToggleIcon","width","el","add","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport { BulkUpload } from './BulkUpload';\r\nimport api from '../../../utils/apiClient';\r\nimport APIConstant from '../../../utils/constants';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport userGuide from \"../../../assets/User Manual/Binder Bulk Upload Guide.pdf\"\r\n\r\nclass RatingBands extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"Class\", header: \"Class\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"Type\", header: \"Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"Country\", header: \"Country\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { field: \"From\", header: \"From\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"To\", header: \"To\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { field: \"Excess\", header: \"Excess\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { field: \"BaseRateRENP\", header: \"Base Rate % - RENEWAL\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { field: \"BaseRateREN\", header: \"Base Absolute Amount RENEWAL\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { field: \"BaseRateNewP\", header: \"Base Rate % - NEW Business\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\r\n            { field: \"BaseRateNew\", header: \"Base Absolute Amount NEW Business\", sortable: true, filter: true, filterMatchMode: 'contains', id: 9 },\r\n            { field: \"effectiveDateView\", header: \"Effective Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 10 },\r\n            { field: \"Qualifier\", header: \"Qualifier\", sortable: true, filter: true, filterMatchMode: 'contains', id: 11 },\r\n            { field: \"IsCurrent\", header: \"Is Current\", sortable: true, filter: true, filterMatchMode: 'contains', id: 12 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 13 }\r\n        ];\r\n\r\n        let columns1 = [\r\n            { field: \"Row\", header: \"Row\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"Country\", header: \"Country\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"Class\", header: \"CLASS\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { field: \"Type\", header: \"TYPE\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"From\", header: \"Value From\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { field: \"To\", header: \"Value To\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { field: \"Excess\", header: \"Excess\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { field: \"BaseRateNewP\", header: \"Base Rate(%) - New Business\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { field: \"BaseRateNew\", header: \"Absolute - New Business\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\r\n            { field: \"BaseRateRENP\", header: \"Base Rate(%) – Renewal\", sortable: true, filter: true, filterMatchMode: 'contains', id: 10 },\r\n            { field: \"BaseRateREN\", header: \"Absolute – Renewal\", sortable: true, filter: true, filterMatchMode: 'contains', id: 11 },\r\n            { field: \"Status\", header: \"Status\", sortable: true, filter: true, filterMatchMode: 'contains', id: 12 },\r\n            { field: \"ErrorMessage\", header: \"Error Message\", sortable: true, filter: true, filterMatchMode: 'contains', id: 13 },\r\n        ];\r\n\r\n        const orginial = this.setState;\r\n        // this.state = JSON.parse(localStorage.getItem('ratingbandstate'))\r\n        //     ? JSON.parse(localStorage.getItem('ratingbandstate'))\r\n        //     : \r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            cols1: columns1,\r\n            toogleAddUpdateRatingBandModal: false,\r\n            toogleBulkUpload: false,\r\n            filter: {\r\n                country: \"\",\r\n                countryid: \"\",\r\n                classname: \"\",\r\n                classid: \"\",\r\n                vesseltype: \"\",\r\n                vesseltypeid: \"\",\r\n                displayname: \"Current\"\r\n            },\r\n            BinderId: \"\",\r\n            //dev 1\r\n            UMRN: \"\",\r\n            Excess: \"\",\r\n            rangeFrom: \"\",\r\n            rangeTo: \"\",\r\n            RNRate: \"\",\r\n            RNABAmount: \"\",\r\n            newBZRate: \"\",\r\n            newBZABAmount: \"\",\r\n            displaynamemaster: [],\r\n            countrymaster: [],\r\n            countryError: false,\r\n            classnamemaster: [],\r\n            classnameError: false,\r\n            vesseltypemaster: [],\r\n            vesseltypeError: false,\r\n            RatingBandsData: [],\r\n            currency: \"\",\r\n            currencyError: false,\r\n            currencymaster: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            isRate: true,\r\n            rateOrAmount: \"Rate\",\r\n            paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\r\n            rangeFromError: true,\r\n            rangeToError: true,\r\n            ExcessError: true,\r\n            RNRateError: true,\r\n            RNABAmountError: true,\r\n            newBZRateError: true,\r\n            newBZABAmountError: true,\r\n            toggleUpdateModal: false,\r\n            isHideRemoved: false,\r\n            RatingBandsBulkUpload: [],\r\n            showBulkdt: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.colOptions1 = [];\r\n        for (let col1 of columns1) {\r\n            this.colOptions1.push({ label: col1.header, value: col1 });\r\n        }\r\n\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.downloadUserGuide = this.downloadUserGuide.bind(this);\r\n\r\n        var handleCallBack = this.handleCallBack.bind(this);\r\n    }\r\n\r\n    downloadUserGuide() {\r\n        window.location.href = userGuide;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.removeItem('ratingbandstate')\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.RatingBandsData.length) ? l : this.state.RatingBandsData.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.RatingBandsData.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    export() {\r\n        this.state.showBulkdt = true;\r\n        this.setState({ showBulkdt: true });\r\n        setTimeout(() => {\r\n            setTimeout(() => {\r\n                this.state.showBulkdt = false;\r\n                this.setState({ showBulkdt: false });\r\n            }, 500);\r\n            this.dt.exportCSV();\r\n        }, 500);\r\n    }\r\n\r\n    getVesselType(value) {\r\n        try {\r\n            const data = {\r\n                VesselClassId: value\r\n            };\r\n            api.post(APIConstant.path.getVesselType, data).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"VesselType....\", res.data);\r\n                    var formattedData = [];\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].VesselTypeName,\r\n                            value: res.data[i].VesselTypeId,\r\n                        });\r\n                    }\r\n                    this.setState({ vesseltypemaster: formattedData });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    getCurrency() {\r\n        try {\r\n            api.get(APIConstant.path.getCurrency).then(res => {\r\n                var formattedData = [];\r\n                if (res.success) {\r\n                    console.log(\"Currency....\", res.data);\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].CurrncyCode,\r\n                            value: res.data[i].CurrncyCode,\r\n                        });\r\n                    }\r\n                    this.setState({ currencymaster: formattedData });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n    getVesselClass() {\r\n        try {\r\n            api.get(APIConstant.path.getVesselClass).then(res => {\r\n                console.log(\"getAuthorizeClass\", res);\r\n                if (res.success) {\r\n                    console.log(\"VesselClass....\", res.data);\r\n                    var formattedData = [];\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].VesselClassName,\r\n                            value: res.data[i].VesselClassId,\r\n                        });\r\n                    }\r\n                    this.setState({ classnamemaster: formattedData });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n\r\n            });\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n    getCountry() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'COUNTRY',\r\n                orderby: 'sortorder'\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                console.log(\"===========Bounder Class Data\", res.data)\r\n                var formattedData = [];\r\n                if (res.success) {\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].StringMapKey,\r\n                        });\r\n                    }\r\n                    this.setState({ countrymaster: formattedData });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"err\", error);\r\n        }\r\n    }\r\n\r\n    editBand(e) {\r\n        debugger;\r\n        var filterData = this.state.filter\r\n        filterData.classname = e.Class\r\n        filterData.vesseltype = e.Type\r\n        filterData.classid = e.VesselClassId\r\n        filterData.vesseltypeid = e.VesselTypeId\r\n        filterData.country = e.Country\r\n        filterData.countryid = e.Country\r\n        this.setState({\r\n            toogleAddUpdateRatingBandModal: true,\r\n            rangeFrom: e.From,\r\n            rangeTo: e.To,\r\n            Excess: e.Excess,\r\n            RNRate: e.BaseRateRENP,\r\n            RNABAmount: e.BaseRateREN,\r\n            newBZRate: e.BaseRateNewP,\r\n            newBZABAmount: e.BaseRateNew,\r\n            currency: e.Currency,\r\n            filter: filterData,\r\n            isEdit: true,\r\n            isView: false,\r\n            isAdd: false,\r\n            effectiveDate: (moment(e.effectiveDate).format(\"YYYY-MM-DD\") > moment().format(\"YYYY-MM-DD\")) ? moment(e.effectiveDate).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"),\r\n            rangeFromError: false,\r\n            rangeToError: false,\r\n            ExcessError: false,\r\n            RNRateError: false,\r\n            RNABAmountError: false,\r\n            newBZRateError: false,\r\n            newBZABAmountError: false,\r\n            isRate: e.isRate,\r\n            rateOrAmount: e.rateOrAmount,\r\n            BinderRatingBandHistoryId: e.id,\r\n            Class: e.Class,\r\n            Status: e.Status\r\n        })\r\n    }\r\n\r\n    viewBand(e) {\r\n        var filterData = this.state.filter\r\n        filterData.classname = e.Class\r\n        filterData.vesseltype = e.Type\r\n        filterData.classid = e.VesselClassId\r\n        filterData.vesseltypeid = e.VesselTypeId\r\n        filterData.country = e.Country\r\n        filterData.countryid = e.Country\r\n        this.setState({\r\n            toogleAddUpdateRatingBandModal: true,\r\n            rangeFrom: e.From,\r\n            rangeTo: e.To,\r\n            Excess: e.Excess,\r\n            RNRate: e.BaseRateRENP,\r\n            RNABAmount: e.BaseRateREN,\r\n            newBZRate: e.BaseRateNewP,\r\n            newBZABAmount: e.BaseRateNew,\r\n            BinderRatingBandHistoryId: e.id,\r\n            currency: e.Currency,\r\n            filter: filterData,\r\n            isEdit: false,\r\n            isView: true,\r\n            isAdd: false,\r\n            effectiveDate: moment(e.effectiveDate).format(\"YYYY-MM-DD\"),\r\n            rangeFromError: false,\r\n            rangeToError: false,\r\n            ExcessError: false,\r\n            RNRateError: false,\r\n            RNABAmountError: false,\r\n            newBZRateError: false,\r\n            newBZABAmountError: false,\r\n            isRate: e.isRate,\r\n            rateOrAmount: e.rateOrAmount,\r\n            Status: e.Status\r\n        })\r\n    }\r\n\r\n    addBand() {\r\n        if (this.state.BinderId == '') {\r\n            toast.error('To add Rating Band Please Create New binder or edit existing Binder');\r\n        }\r\n        else if (this.state.filter.classid == '') {\r\n            toast.error('Please Select Vessel Class');\r\n        } else if (this.state.filter.vesseltypeid == '') {\r\n            toast.error('Please Select Vessel Type');\r\n        } else if (this.state.filter.country == '') {\r\n            toast.error('Please Select Country');\r\n        } else {\r\n            this.setState({\r\n                toogleAddUpdateRatingBandModal: true,\r\n                rangeFrom: '',\r\n                rangeTo: '',\r\n                Excess: '',\r\n                RNRate: '',\r\n                RNABAmount: '',\r\n                newBZRate: '',\r\n                newBZABAmount: '',\r\n                BinderRatingBandHistoryId: '',\r\n                currency: '',\r\n                isEdit: false,\r\n                isView: false,\r\n                isAdd: true,\r\n                isRate: true,\r\n                rateOrAbsolute: \"Rate\",\r\n                effectiveDate: moment().format(\"YYYY-MM-DD\"),\r\n                rangeFromError: true,\r\n                rangeToError: true,\r\n                ExcessError: true,\r\n                RNRateError: true,\r\n                RNABAmountError: true,\r\n                newBZRateError: true,\r\n                newBZABAmountError: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    openDeleteModal = (rowData) => {\r\n        debugger;\r\n        this.setState({\r\n            toggleModal: !this.state.toggleModal,\r\n            BinderRatingBandHistoryId: this.state.BinderRatingBandHistoryId,\r\n            BinderRatingBandFrom: this.state.rangeFrom,\r\n            BinderRatingBandTo: this.state.rangeTo,\r\n            BinderRatingBandVesselClass: this.state.Class,\r\n            BinderRatingBandEffectiveDate: moment(this.state.effectiveDate).format('DD-MM-YYYY')\r\n        });\r\n    }\r\n\r\n    toggleLarge = () => {\r\n        this.setState({\r\n            toggleModal: false,\r\n            // BinderRatingBandHistoryId: \"\",\r\n            // BinderRatingBandFrom: \"\",\r\n            // BinderRatingBandTo: \"\",\r\n            // BinderRatingBandVesselClass: \"\",\r\n        });\r\n    }\r\n\r\n    toggleUpdateLarge = () => {\r\n        this.setState({\r\n            toggleUpdateModal: false,\r\n            BinderRatingBandHistoryId: this.state.oldBinderRatingBandHistoryId ? this.state.oldBinderRatingBandHistoryId : this.state.BinderRatingBandHistoryId\r\n            // BinderRatingBandHistoryId: \"\",\r\n            // BinderRatingBandFrom: \"\",\r\n            // BinderRatingBandTo: \"\",\r\n            // BinderRatingBandVesselClass: \"\",\r\n        });\r\n    }\r\n\r\n    deleteBand() {\r\n        let data = {\r\n            \"BinderRatingBandHistoryId\": this.state.BinderRatingBandHistoryId,\r\n            \"UserId\": CommonConfig.loggedInUserId(),\r\n            \"IsDescard\": true,\r\n            \"Status\": \"Inactive\",\r\n            \"CurrentUser\": CommonConfig.loggedInUserId(),\r\n        }\r\n        api.post(APIConstant.path.deleteRatingBinder, data).then(res => {\r\n            if (res.success) {\r\n                debugger;\r\n                // if (res.data[0][0].ErrorMsg !== \"\") {\r\n                //     console.log(res.data[0][0])\r\n                //     toast.error(res.data[0][0].ErrorMsg);\r\n                // } else {\r\n                toast.success(\"Rating Band successfully deleted\");\r\n                // }\r\n                this.toggleLarge();\r\n                this.getRatingBinder(this.state.BinderId)\r\n                this.setState({ toogleAddUpdateRatingBandModal: false })\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    valid() {\r\n        debugger;\r\n        let valid = false;\r\n\r\n        if (this.state.rangeFromError) {\r\n            toast.error('Please Enter Range From');\r\n        } else if (this.state.rangeToError) {\r\n            toast.error('Please Enter Range To');\r\n        } else if (this.state.ExcessError) {\r\n            toast.error('Please Enter Excess');\r\n        } else if (this.state.RNRateError && this.state.isRate == true) {\r\n            toast.error('Please Enter Renewal Rate (%)');\r\n        }\r\n        // else if (parseInt(this.state.RNRate) == 0 && this.state.isRate == true) {\r\n        //     toast.error('Please Enter More than 0 Renewal Rate (%)');\r\n        // } \r\n        else if (this.state.RNABAmountError && this.state.isRate == false) {\r\n            toast.error('Please Enter Renewal Absolute Amount');\r\n        }\r\n        // else if (parseInt(this.state.RNABAmount) == 0 && this.state.isRate == false) {\r\n        //     toast.error('Please Enter More than 0 Renewal Absolute Amount');\r\n        // } \r\n        else if (this.state.newBZRateError && this.state.isRate == true) {\r\n            toast.error('Please Enter New Business Rate (%)');\r\n        }\r\n        //  else if (parseInt(this.state.newBZRate) == 0 && this.state.isRate == true) {\r\n        //     toast.error('Please Enter More than 0 New Business Rate (%)');\r\n        // } \r\n        else if (this.state.newBZABAmountError && this.state.isRate == false) {\r\n            toast.error('Please Enter New Business Absolute Amount');\r\n        }\r\n        //  else if (parseInt(this.state.newBZABAmount) == 0 && this.state.isRate == false) {\r\n        //     toast.error('Please Enter More than 0 New Business Absolute Amount');\r\n        // }\r\n        else {\r\n            valid = true;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n    updateRatingBand(results) {\r\n        debugger;\r\n        this.setState({\r\n            toggleUpdateModal: true,\r\n            BinderRatingBandHistoryId: results[0].id,\r\n            BinderRatingBandFrom: this.state.rangeFrom,\r\n            BinderRatingBandTo: this.state.rangeTo,\r\n            currentEffectiveDate: this.state.effectiveDate,\r\n            updateEffectiveDate: moment(results[0].effectiveDate).format('DD-MM-YYYY'),\r\n            effectiveDate: results[0].effectiveDate,\r\n            BinderRatingBandVesselClass: this.state.Class,\r\n            oldBinderRatingBandHistoryId: this.state.BinderRatingBandHistoryId,\r\n            isAdd: false,\r\n            isEdit: true,\r\n        });\r\n    }\r\n\r\n    addUpdateRatingBand() {\r\n        // this.toggleUpdateLarge();\r\n        if (this.valid()) {\r\n            debugger;\r\n\r\n            let results = this.state.RatingBandsData.filter((RatingBands) => {\r\n                return RatingBands.From == this.state.rangeFrom && RatingBands.To == this.state.rangeTo && RatingBands.effectiveDate == this.state.effectiveDate && RatingBands.id !== this.state.BinderRatingBandHistoryId && RatingBands.Status == 'Active';\r\n            });\r\n\r\n            let resultsData = this.state.RatingBandsData.filter((RatingBands) => {\r\n                return RatingBands.From == this.state.rangeFrom && RatingBands.To == this.state.rangeTo && RatingBands.id === this.state.BinderRatingBandHistoryId;\r\n            });\r\n\r\n            if (results.length > 0) {\r\n                this.updateRatingBand(results);\r\n            } else {\r\n\r\n                var isAdd = this.state.isAdd;\r\n                var isEdit = this.state.isEdit;\r\n\r\n                if (resultsData.length > 0) {\r\n                    if (this.state.effectiveDate !== resultsData[0].effectiveDate && this.state.isEdit) {\r\n                        isAdd = true;\r\n                        isEdit = false;\r\n                    }\r\n                }\r\n\r\n                let data = {\r\n                    \"BinderRatingBandHistoryId\": this.state.isEdit ? this.state.BinderRatingBandHistoryId : \"\",\r\n                    \"BinderId\": this.state.BinderId,\r\n                    \"UserId\": CommonConfig.loggedInUserId(),\r\n                    \"VesselClassId\": this.state.filter.classid,\r\n                    \"CurrencyId\": this.state.currency,\r\n                    \"CountryId\": this.state.filter.countryid,\r\n                    \"VesselTypeId\": this.state.filter.vesseltypeid,\r\n                    \"Country\": this.state.filter.country,\r\n                    \"RangeFrom\": this.state.rangeFrom.replace(\",\", \"\"),\r\n                    \"RangeTo\": this.state.rangeTo.replace(\",\", \"\"),\r\n                    \"Excess\": this.state.Excess,\r\n                    \"RenewalRatePercent\": (this.state.RNRate) ? this.state.RNRate : 0,\r\n                    \"RenewalRateAbsolute\": (this.state.RNABAmount) ? this.state.RNABAmount : 0,\r\n                    \"NewBusinessRatePercent\": (this.state.newBZRate) ? this.state.newBZRate : 0,\r\n                    \"NewBusinessRateAbsolute\": (this.state.newBZABAmount) ? this.state.newBZABAmount : 0,\r\n                    \"StartDate\": this.state.effectiveDate,\r\n                    \"IsAdd\": isAdd,\r\n                    \"IsEdit\": isEdit,\r\n                    \"IsDescard\": false,\r\n                    \"CurrentUser\": CommonConfig.loggedInUserId(),\r\n                    \"LanguageId\": this.state.LanguageId,\r\n                    \"Status\": \"Active\",\r\n                }\r\n\r\n                api.post(APIConstant.path.addUpdateBinderRatingBands, data).then(res => {\r\n                    console.log(res)\r\n                    if (res.success) {\r\n                        var filterData = this.state.filter\r\n                        // filterData.classname = ''\r\n                        // filterData.vesseltype = ''\r\n                        // filterData.classid = ''\r\n                        // filterData.vesseltypeid = ''\r\n                        // filterData.country = ''\r\n                        // filterData.countryid = ''\r\n                        // this.setState({ filter: filterData })\r\n                        toast.success(res.data.message);\r\n                        this.getRatingBinder(this.state.BinderId)\r\n                    } else {\r\n                        toast.error(res.data.message);\r\n                    }\r\n                    this.addRatingBand()\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    this.addRatingBand()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    getRatingBinder(BinderId) {\r\n\r\n        if (this.state.filter.classid != \"\" || this.state.filter.country != \"\") {\r\n            let data = {\r\n                \"BinderId\": BinderId,\r\n                \"UserId\": CommonConfig.loggedInUserId(),\r\n                \"VesselClassId\": this.state.filter.classid,\r\n                \"VesselTypeId\": this.state.filter.vesseltypeid,\r\n                \"Country\": this.state.filter.country,\r\n                \"DisplayName\": this.state.filter.displayname,\r\n                // \"isHideRemoved\": this.state.isHideRemoved\r\n            }\r\n            api.post(APIConstant.path.getBinderRatingBinder, data).then(res => {\r\n                debugger;\r\n                console.log(res)\r\n                if (res.success) {\r\n                    console.log(\"===========Binder Rating Data\")\r\n                    console.log(res.data);\r\n                    this.setState({\r\n                        RatingBandsBulkUpload: res.data[0].map((obj, key) => {\r\n                            return {\r\n                                Row: key + 1,\r\n                                Class: obj.VesselClassName == undefined ? \"NA\" : obj.VesselClassName,\r\n                                Type: obj.VesselTypeName == undefined ? \"NA\" : obj.VesselTypeName,\r\n                                From: obj.RangeFrom,\r\n                                To: obj.RangeTo,\r\n                                Excess: obj.Excess,\r\n                                BaseRateRENP: obj.RenewalRatePercent,\r\n                                BaseRateREN: obj.RenewalRateAbsolute,\r\n                                BaseRateNewP: obj.NewBusinessRatePercent,\r\n                                BaseRateNew: obj.NewBusinessRateAbsolute,\r\n                                Country: obj.Country,\r\n                                Status: \"\",\r\n                                ErrorMessage: \"\",\r\n                            }\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        RatingBandsData: res.data[0].map((obj) => {\r\n                            return {\r\n                                id: obj.BinderRatingBandHistoryId,\r\n                                Class: obj.VesselClassName == undefined ? \"NA\" : obj.VesselClassName,\r\n                                Type: obj.VesselTypeName == undefined ? \"NA\" : obj.VesselTypeName,\r\n                                From: obj.RangeFrom.toLocaleString(),\r\n                                To: obj.RangeTo.toLocaleString(),\r\n                                Excess: obj.Excess,\r\n                                BaseRateRENP: obj.RenewalRatePercent,\r\n                                BaseRateREN: obj.RenewalRateAbsolute,\r\n                                BaseRateNewP: obj.NewBusinessRatePercent,\r\n                                BaseRateNew: obj.NewBusinessRateAbsolute,\r\n                                VesselClassId: obj.VesselClassId,\r\n                                VesselTypeId: obj.VesselTypeId,\r\n                                Currency: obj.Currency,\r\n                                Country: obj.Country,\r\n                                UMRN: obj.UMRN,\r\n                                isRate: (obj.RenewalRatePercent > 0 && obj.NewBusinessRatePercent > 0) ? true : false,\r\n                                rateOrAmount: (obj.RenewalRatePercent > 0 && obj.NewBusinessRatePercent > 0) ? \"Rate\" : \"Amount\",\r\n                                effectiveDate: moment(obj.StartDate).format(\"YYYY-MM-DD\"),\r\n                                effectiveDateView: moment(obj.StartDate).format(\"DD-MM-YYYY\"),\r\n                                Qualifier: obj.Qualifier,\r\n                                IsCurrent: obj.IsCurrent,\r\n                                ACTION: obj.ACTION,\r\n                                Status: obj.Status\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            });\r\n        } else {\r\n            toast.error('Please Select Vessel Class or Country');\r\n        }\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        // debugger;\r\n        return <div>\r\n            {(rowData.ACTION == \"Edit\") ? (\r\n                <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\" onClick={() => this.editBand(rowData)}\r\n                    style={{ marginRight: '.5em' }} tooltip=\"Edit\" tooltipOptions={{ position: 'bottom' }}>\r\n                </Button>\r\n            ) : \"\"}\r\n            {(rowData.ACTION == \"View\") ? (\r\n                <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-primary\" onClick={() => this.viewBand(rowData)}\r\n                    style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\r\n                </Button>\r\n            ) : \"\"}\r\n            {/* <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={() => this.deleteBand(rowData)} tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }}></Button> */}\r\n            {/* <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" onClick={() => this.openDeleteModal(rowData)} tooltipOptions={{ position: 'bottom' }}></Button> */}\r\n        </div>;\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    getBounderRisk(BinderId) {\r\n        let data = {\r\n            \"BinderId\": BinderId,\r\n            \"UserId\": CommonConfig.loggedInUserId()\r\n        }\r\n        api.post(APIConstant.path.getBounder, data).then(res => {\r\n            console.log(res)\r\n            if (res.success) {\r\n                console.log(\"===========Bounder Class Data\", res.data)\r\n                // console.log(res.data)\r\n                var formattedData = [];\r\n                if (res.success) {\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].Country,\r\n                            value: res.data[i].Country,\r\n                        });\r\n                    }\r\n                    this.setState({ countrymaster: formattedData });\r\n                } else {\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    getAuthorizeClass(BinderID) {\r\n\r\n        let data = {\r\n            \"BinderId\": BinderID\r\n        }\r\n        api.post(APIConstant.path.getAuthorizeClass, data).then(res => {\r\n            console.log(\"getAuthorizeClass\", res)\r\n            var formattedData = [];\r\n            if (res.success) {\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    formattedData.push({\r\n                        label: res.data[i].VesselClassName,\r\n                        value: res.data[i].VesselClassId,\r\n                    });\r\n                }\r\n                this.setState({ classnamemaster: formattedData });\r\n            } else {\r\n            }\r\n\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        var splitData = this.props.location.pathname.split(\"/\");\r\n        // if (splitData[3] !== undefined) {\r\n\r\n        if (!CommonConfig.isEmpty(splitData[3])) {\r\n\r\n            this.setState({ BinderId: splitData[3] })\r\n            // this.getRatingBinder(splitData[3])\r\n            this.getAuthorizeClass(splitData[3])\r\n            this.getBounderRisk(splitData[3])\r\n            this.getBinderData(splitData[3])\r\n        }\r\n\r\n        // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n        //     this.setState({ BinderId: this.props.match.params.Id })\r\n        //     // this.getRatingBinder(this.props.match.params.Id)\r\n        //     this.getAuthorizeClass(this.props.match.params.Id)\r\n        //     this.getBounderRisk(this.props.match.params.Id)\r\n        //     this.getBinderData(this.props.match.params.Id)\r\n        // }\r\n        // this.getCountry()\r\n        this.getCurrency()\r\n        this.getDisplayName()\r\n        // this.getVesselClass()\r\n    }\r\n\r\n\r\n    getBinderData(binderId) {\r\n        try {\r\n            let data = { \"binderId\": binderId }\r\n            api.post(APIConstant.path.getBinderDataById, data).then(res => {\r\n                console.log(res);\r\n                var data = res.data[0];\r\n                this.setState({\r\n                    UMRN: data.UMRN,\r\n                    Currency: data.Currency,\r\n                })\r\n                this.GetSelectedAuthorizeGroup(data.BinderId)\r\n                this.getNextBinderList()\r\n\r\n            }).catch(err => {\r\n            });\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n    getDisplayName() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'DISPLAYMODE',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"displayname\", res.data);\r\n                    var displayname = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        displayname.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ displaynamemaster: displayname });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    filterList() {\r\n\r\n    }\r\n\r\n    selectType = (event, type) => {\r\n        let filterData = this.state.filter\r\n        if (type == \"country\") {\r\n            if (event.value === '' || event.value === undefined || event.value === null) {\r\n                filterData.country = \"\"\r\n                filterData.countryid = \"\"\r\n                this.setState({ filter: filterData })\r\n            } else {\r\n                let index = this.state.countrymaster.findIndex(x => x.value === event.value);\r\n                let data = this.state.countrymaster[index]\r\n                filterData.country = data.value\r\n                filterData.countryid = data.value\r\n                this.setState({ filter: filterData })\r\n            }\r\n        }\r\n        else if (type == \"vesseltype\") {\r\n            if (event.value === '' || event.value === undefined || event.value === null) {\r\n                filterData.vesseltype = \"\"\r\n                filterData.vesseltypeid = \"\"\r\n                this.setState({ filter: filterData })\r\n            } else {\r\n                let index = this.state.vesseltypemaster.findIndex(x => x.value === event.value);\r\n                let data = this.state.vesseltypemaster[index]\r\n                filterData.vesseltype = data.label\r\n                filterData.vesseltypeid = data.value\r\n                this.setState({ filter: filterData })\r\n            }\r\n        }\r\n        else if (type == \"classname\") {\r\n            if (event.value === '' || event.value === undefined || event.value === null) {\r\n                filterData.classname = \"\"\r\n                filterData.classid = \"\"\r\n                this.setState({ filter: filterData })\r\n            } else {\r\n                let index = this.state.classnamemaster.findIndex(x => x.value === event.value);\r\n                let data = this.state.classnamemaster[index]\r\n                filterData.classname = data.label\r\n                filterData.classid = data.value\r\n                this.setState({ filter: filterData })\r\n            }\r\n            this.getVesselType(event.value)\r\n\r\n        }\r\n        else if (type == \"currency\") {\r\n            this.setState({ currency: event.value })\r\n        }\r\n\r\n        else if (type == \"displayname\") {\r\n            if (event.value === '' || event.value === undefined || event.value === null) {\r\n                // filterData.classname = \"\"\r\n                // filterData.classid = \"\"\r\n                // this.setState({ filter: filterData })\r\n            } else {\r\n                let index = this.state.displaynamemaster.findIndex(x => x.value === event.value);\r\n                let data = this.state.displaynamemaster[index]\r\n                filterData.displayname = data.label\r\n                this.setState({ filter: filterData })\r\n            }\r\n\r\n        }\r\n\r\n        else if (type == \"rateOrAmount\") {\r\n            debugger;\r\n            this.setState({ rateOrAmount: event.value })\r\n            if (event.value == \"Rate\") {\r\n                this.setState({ isRate: true, RNABAmount: 0, newBZABAmount: 0 })\r\n            } else {\r\n                this.setState({ isRate: false, RNRate: 0, newBZRate: 0 })\r\n            }\r\n        }\r\n    }\r\n\r\n    addRatingBand() {\r\n        this.setState({ toogleAddUpdateRatingBandModal: !this.state.toogleAddUpdateRatingBandModal });\r\n    }\r\n\r\n    toggleAddUpdate = () => {\r\n        // var filterData = this.state.filter\r\n        // filterData.classname = ''\r\n        // filterData.vesseltype = ''\r\n        // filterData.classid = ''\r\n        // filterData.vesseltypeid = ''\r\n        // filterData.country = ''\r\n        // filterData.countryid = ''\r\n        // this.setState({ filter: filterData })\r\n        this.setState({ toogleAddUpdateRatingBandModal: false, });\r\n    }\r\n\r\n    toggleBulkUpload = () => {\r\n        if (this.state.BinderId == '') {\r\n            toast.error('To add Rating Band Please Create New binder or edit existing Binder');\r\n        } else {\r\n            this.setState({\r\n                toogleBulkUpload: !this.state.toogleBulkUpload\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleCallBack(aBool) {\r\n        this.setState({\r\n            toogleBulkUpload: aBool\r\n        });\r\n        this.getRatingBinder(this.state.BinderId)\r\n    }\r\n\r\n    show(field, condition) {\r\n        console.log(\"show\", field);\r\n        console.log(\"show\", condition);\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        let decimalRegExp = CommonConfig.RegExp.decimalWithOne;\r\n\r\n        if (e.target.name === 'rangeFrom') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ rangeFromError: true });\r\n                this.show(\"rangeFrom\", true);\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ rangeFromError: true });\r\n                    this.show(\"rangeFrom\", true);\r\n                } else {\r\n                    this.setState({ rangeFromError: false, rangeFrom: e.target.value });\r\n                    this.show(\"rangeFrom\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'rangeTo') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ rangeToError: true });\r\n                this.show(\"rangeTo\", true);\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ rangeToError: true });\r\n                    this.show(\"rangeTo\", true);\r\n                } else {\r\n                    this.setState({ rangeToError: false, rangeTo: e.target.value });\r\n                    this.show(\"rangeTo\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'Excess') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ ExcessError: true });\r\n                this.show(\"Excess\", true);\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ ExcessError: true });\r\n                    this.show(\"Excess\", true);\r\n                } else {\r\n                    this.setState({ ExcessError: false, Excess: e.target.value });\r\n                    this.show(\"Excess\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'RNRate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ RNRateError: true });\r\n                this.show(\"RNRate\", true);\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ RNRateError: true });\r\n                    this.show(\"RNRate\", true);\r\n                } else {\r\n                    this.setState({ RNRateError: false, RNRate: e.target.value });\r\n                    this.show(\"RNRate\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'RNABAmount') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ RNABAmountError: true });\r\n                this.show(\"RNABAmount\", true);\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ RNABAmountError: true });\r\n                    this.show(\"RNABAmount\", true);\r\n                } else {\r\n                    this.setState({ RNABAmountError: false, RNABAmount: e.target.value });\r\n                    this.show(\"RNABAmount\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'newBZRate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ newBZRateError: true });\r\n                this.show(\"newBZRate\", true);\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ newBZRateError: true });\r\n                    this.show(\"newBZRate\", true);\r\n                } else {\r\n                    this.setState({ newBZRateError: false, newBZRate: e.target.value });\r\n                    this.show(\"newBZRate\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'newBZABAmount') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ newBZABAmountError: true });\r\n                this.show(\"newBZABAmount\", true);\r\n            } else {\r\n                if (!decimalRegExp.test(e.target.value)) {\r\n                    this.setState({ newBZABAmountError: true });\r\n                    this.show(\"newBZABAmount\", true);\r\n                } else {\r\n                    this.setState({ newBZABAmountError: false, newBZABAmount: e.target.value });\r\n                    this.show(\"newBZABAmount\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'effectiveDate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ effectiveDateError: true });\r\n                this.show(\"effectiveDate\", true);\r\n            } else {\r\n                this.setState({ effectiveDateError: false, effectiveDate: e.target.value });\r\n                this.show(\"effectiveDate\", false);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'isHideRemoved') {\r\n            debugger;\r\n            this.setState({ isHideRemoved: e.target.checked, RatingBandsDataAll: this.state.RatingBandsData });\r\n            if (e.target.checked) {\r\n                let results = this.state.RatingBandsData.filter((RatingBands) => {\r\n                    return RatingBands.Status !== 'Inactive';\r\n                });\r\n                this.setState({ RatingBandsData: results })\r\n            } else {\r\n                this.setState({ RatingBandsData: this.state.RatingBandsDataAll })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"Rating Band---\", this.state)\r\n        let columns1 = '';\r\n        let columns = '';\r\n        if (this.state.showBulkdt == true) {\r\n            columns1 = this.state.cols1.map((col, i) => {\r\n                return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\r\n            });\r\n        } else {\r\n            columns = this.state.cols.map((col, i) => {\r\n                return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <div className=\"input-box col-md-12\">\r\n                        <Row>\r\n                            <Col md=\"1.5\" style={{ padding: \"0px 10px\" }}>\r\n                                <label>Class Name *</label>\r\n                            </Col>\r\n                            <Col md=\"2.5\">\r\n                                <Input type=\"select\" name=\"classname\" id=\"classname\" onChange={(e) => this.selectType(e.target, 'classname')} value={this.state.filter.classid}>\r\n                                    <option value=''>Select class name</option>\r\n                                    {this.state.classnamemaster.map((type, i) => { return (<option value={type.value} label={type.label}></option>) })}\r\n                                </Input>\r\n                                <em className=\"error invalid-feedback\" >Please select ClassName</em>\r\n                            </Col>\r\n                            <Col md=\"1.5\" style={{ padding: \"0px 10px\" }}>\r\n                                <label>Vessel Type *</label>\r\n                            </Col>\r\n                            <Col md=\"2.5\">\r\n                                <Input type=\"select\" name=\"vesseltype\" id=\"vesseltype\" onChange={(e) => this.selectType(e.target, 'vesseltype')} value={this.state.filter.vesseltypeid}>\r\n                                    <option value=''>Select VesselType</option>\r\n                                    {this.state.vesseltypemaster.map((type, i) => { return (<option value={type.value} label={type.label}>{type.label}</option>) })}\r\n                                </Input>\r\n                                <em className=\"error invalid-feedback\" >Please select VesselType</em>\r\n                            </Col>\r\n                            <Col md=\"1.5\" style={{ padding: \"0px 10px\" }}>\r\n                                <label>Country *</label>\r\n                            </Col>\r\n                            <Col md=\"2.5\">\r\n                                <Input type=\"select\" name=\"country\" id=\"country\" onChange={(e) => this.selectType(e.target, 'country')} value={this.state.filter.country}>\r\n                                    <option value='' >Select Country</option>\r\n                                    {this.state.countrymaster.map((type, i) => { return (<option value={type.value} label={type.label}>{type.label}</option>) })}\r\n                                </Input>\r\n                                <em className=\"error invalid-feedback\" >Please select Country</em>\r\n                            </Col>\r\n                            <Col md=\"1.5\" style={{ padding: \"0px 10px\" }}>\r\n                                <label>Display Name *</label>\r\n                            </Col>\r\n                            <Col md=\"2.5\">\r\n                                <Input type=\"select\" name=\"displayname\" id=\"displayname\" onChange={(e) => this.selectType(e.target, 'displayname')} value={this.state.filter.displayname}>\r\n                                    {this.state.displaynamemaster.map((type, i) => { return (<option value={type.value} label={type.label}>{type.label}</option>) })}\r\n                                </Input>\r\n                                <em className=\"error invalid-feedback\" >Please select Country</em>\r\n                            </Col>\r\n                            <Col md=\"1\">\r\n                                <BTN color=\"success\" style={{ marginRight: '.5em', borderRadius: \"20px\" }} onClick={() => this.getRatingBinder(this.state.BinderId)} title=\"Go\" > Go </BTN>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-right-option col-md-5\" style={{ marginLeft: \"auto\" }}>\r\n\r\n                    <Input type=\"checkbox\" name=\"isHideRemoved\" id=\"isHideRemoved\" onChange={(e) => this.handleChange(e)} value={this.state.isHideRemoved} checked={this.state.isHideRemoved == true} />\r\n                    <label>Hide Removed</label>\r\n\r\n                    <Button type=\"button\" icon=\"pi pi-plus\" tooltip=\"Add Rating Band\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.addBand()}></Button>\r\n                    <Button type=\"button\" tooltip=\"Bulk Uploads\" label=\"Bulk Uploads\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.toggleBulkUpload()} style={{ margin: \"0px 10px\" }}></Button>\r\n\r\n                    <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                        fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                        onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                    />\r\n                    {/* <Button type=\"button\" icon=\"pi pi-plus\" tooltip=\"Add RatingBands\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.addRatingBand()}></Button> */}\r\n                    <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n\r\n                    <Button type=\"button\" icon=\"pi pi-question-circle\" tooltip=\"Bulk Upload User Guide\" tooltipOptions={{ position: 'bottom' }} onClick={this.downloadUserGuide} style={{ marginRight: 10 }}></Button>\r\n\r\n                </div>\r\n\r\n                {(this.state.showBulkdt == true) ? (\r\n                    <div className=\"table-custom\">\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.RatingBandsBulkUpload} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                            paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.RatingBandsBulkUpload.length} exportFilename=\"Rating Band List\"\r\n\r\n                            currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\r\n                            paginatorTemplate={this.state.paginatorTemplate}\r\n                            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                            responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \r\n                        >\r\n                            {columns1}\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                ) : (\r\n                        <div className=\"table-custom\">\r\n                            <DataTable ref={(el) => this.dt = el} value={this.state.RatingBandsData} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                                paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.RatingBandsData.length} exportFilename=\"Rating Band List\"\r\n\r\n                                currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\r\n                                paginatorTemplate={this.state.paginatorTemplate}\r\n                                rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                                responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \r\n                            >\r\n                                {columns}\r\n                            </DataTable>\r\n                            <Modal isOpen={this.state.toogleAddUpdateRatingBandModal} toggle={() => this.toggleAddUpdate()}\r\n                                className={'modal-lg ' + this.props.className}>\r\n                                <ModalHeader toggle={() => this.toggleAddUpdate()}>Add/Update RatingBands</ModalHeader>\r\n                                <ModalBody>\r\n                                    <Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>Binder</label>\r\n                                        </Col>\r\n                                        <Col md=\"5\">\r\n                                            <label>{this.state.UMRN}</label>\r\n                                        </Col>\r\n                                        <Col md=\"1\">\r\n                                            <label>Currency</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <label>{this.state.Currency}</label>\r\n                                        </Col>\r\n                                        {/* <Col md=\"3\">\r\n                                    <Input type=\"select\" name=\"currency\" id=\"currency\" onChange={(e) => this.selectType(e.target, 'currency')} value={this.state.currency}>\r\n                                        <option value='' disabled={\"disabled\"}>Select Currency</option>\r\n                                        {this.state.currencymaster.map((type, i) => { return (<option value={type.value} label={type.label}>{type.label}</option>) })}\r\n                                    </Input>\r\n                                    <em className=\"error invalid-feedback\" >Please select Currency</em>\r\n                                </Col> */}\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md=\"2\">\r\n                                            <label>Class Name</label>\r\n                                        </Col>\r\n                                        <Col md=\"2\">\r\n                                            <label>{this.state.filter.classname}</label>\r\n                                        </Col>\r\n                                        <Col md=\"2\">\r\n                                            <label>Vessel Type</label>\r\n                                        </Col>\r\n                                        <Col md=\"2\">\r\n                                            <label>{this.state.filter.vesseltype}</label>\r\n                                        </Col>\r\n                                        <Col md=\"2\">\r\n                                            <label>Country</label>\r\n                                        </Col>\r\n                                        <Col md=\"2\">\r\n                                            <label>{this.state.filter.country}</label>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>Range From*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"text\" disabled={this.state.isEdit || this.state.isView} name=\"rangeFrom\" id=\"rangeFrom\" placeholder=\"Range From\"\r\n                                                onChange={(e) => this.handleChange(e)} value={this.state.rangeFrom}\r\n                                            />\r\n                                            <em className=\"error invalid-feedback\" >Please Enter Range From</em>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <label>To*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"text\" disabled={this.state.isEdit || this.state.isView} name=\"rangeTo\" id=\"rangeTo\" placeholder=\"Range To\"\r\n                                                onChange={(e) => this.handleChange(e)} value={this.state.rangeTo}\r\n                                            />\r\n                                            <em className=\"error invalid-feedback\" >Please Enter Range To </em>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>Excess*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"text\" disabled={this.state.isView} name=\"Excess\" id=\"Excess\" onChange={(e) => this.handleChange(e)} value={this.state.Excess}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >Please Enter Excess</em>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>Rate or Amount*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"select\" disabled={this.state.isView} name=\"rateOrAmount\" id=\"rateOrAmount\" onChange={(e) => this.selectType(e.target, 'rateOrAmount')} value={this.state.rateOrAmount}>\r\n                                                <option value='Rate'>Rate(%)</option>\r\n                                                <option value='Amount'>Absolute Amount</option>\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n\r\n                                    {(this.state.isRate) ? (<Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>Renewal Rate (%)*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"text\" disabled={this.state.isView} name=\"RNRate\" id=\"RNRate\" onChange={(e) => this.handleChange(e)} value={this.state.RNRate}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >Please Enter Renewal Rate (%)</em>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <label>New Business Rate (%)*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"text\" disabled={this.state.isView} name=\"newBZRate\" id=\"newBZRate\" onChange={(e) => this.handleChange(e)} value={this.state.newBZRate}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >Please Enter New Business Rate (%)</em>\r\n                                        </Col>\r\n                                    </Row>) : (<Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>Renewal Absolute Amount*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"text\" disabled={this.state.isView} name=\"RNABAmount\" id=\"RNABAmount\" onChange={(e) => this.handleChange(e)} value={this.state.RNABAmount}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >Please Enter Renewal Absolute Amount</em>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <label>New Business Absolute Amount*</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"text\" disabled={this.state.isView} name=\"newBZABAmount\" id=\"newBZABAmount\" onChange={(e) => this.handleChange(e)} value={this.state.newBZABAmount}>\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >Please Enter New Business Absolute Amount</em>\r\n                                        </Col>\r\n                                    </Row>)}\r\n\r\n                                    <Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>Effective Date</label>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <Input type=\"date\" name=\"effectiveDate\" disabled={this.state.isView} id=\"effectiveDate\" onChange={(e) => this.handleChange(e)} value={this.state.effectiveDate}\r\n                                                min={moment().format('YYYY-MM-DD')}\r\n                                                max={moment().add(100, 'years').format('YYYY-MM-DD')}\r\n                                            >\r\n                                            </Input>\r\n                                            <em className=\"error invalid-feedback\" >Please Enter Valid Effective Date</em>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    {(this.state.isEdit || this.state.isAdd) ? (<BTN color=\"success\" onClick={() => this.addUpdateRatingBand()}><i class=\"fa fa-check\"></i> Save</BTN>) : \"\"}\r\n                                    {(this.state.isEdit && this.state.effectiveDate > moment().format('YYYY-MM-DD')) ? (<BTN color=\"danger\" onClick={() => this.openDeleteModal()}><i class=\"fa fa-times\"></i> Discard</BTN>) : \"\"}\r\n                                    <BTN color=\"primary\" onClick={() => this.toggleAddUpdate()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={this.state.toogleBulkUpload} toggle={() => this.toggleBulkUpload()}\r\n                                className={'modal-lg ' + this.props.className} style={{ maxWidth: \"1200px\" }}>\r\n                                <ModalHeader toggle={() => this.toggleBulkUpload()}>Bulk Upload</ModalHeader>\r\n                                <ModalBody>\r\n                                    <BulkUpload name=\"bhavik\" BinderId={this.state.BinderId}\r\n                                        handleCallBack={this.handleCallBack.bind(this)}\r\n                                    ></BulkUpload>\r\n                                </ModalBody>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n                                className={'modal-lg ' + this.props.className}>\r\n                                <ModalHeader toggle={this.toggleLarge}>Delete Rating Band</ModalHeader>\r\n                                <ModalBody>\r\n                                    Are you sure, You want to delete {this.state.BinderRatingBandVesselClass} {this.state.BinderRatingBandFrom} - {this.state.BinderRatingBandTo} of {this.state.BinderRatingBandEffectiveDate} Rating Band?\r\n                    </ModalBody>\r\n                                <ModalFooter>\r\n                                    <BTN color=\"success\" onClick={() => this.deleteBand()}><i class=\"fa fa-check\"></i> Delete</BTN>{' '}\r\n                                    <BTN color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-close\"></i>Cancel</BTN>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n\r\n                            <Modal isOpen={this.state.toggleUpdateModal} toggle={this.toggleUpdateLarge}\r\n                                className={'modal-lg ' + this.props.className}>\r\n                                <ModalHeader toggle={this.toggleUpdateLarge}>Update Rating Band</ModalHeader>\r\n                                <ModalBody>\r\n                                    We have already record of {this.state.updateEffectiveDate} for {this.state.BinderRatingBandFrom} - {this.state.BinderRatingBandTo} Rating Band. <br /> Do You want to update {this.state.BinderRatingBandVesselClass} {this.state.BinderRatingBandFrom} - {this.state.BinderRatingBandTo} Rating Band?\r\n                    </ModalBody>\r\n                                <ModalFooter>\r\n                                    <BTN color=\"success\" onClick={() => { this.addUpdateRatingBand(); this.toggleUpdateLarge(); }}><i class=\"fa fa-check\"></i> Yes</BTN>{' '}\r\n                                    <BTN color=\"primary\" onClick={this.toggleUpdateLarge}><i class=\"fa fa-close\"></i>No</BTN>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n\r\n                        </div>\r\n\r\n                    )}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(RatingBands);"]},"metadata":{},"sourceType":"module"}