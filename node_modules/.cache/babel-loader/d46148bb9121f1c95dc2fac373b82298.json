{"ast":null,"code":"import axios from 'axios';\nimport i18n from \"i18next\";\nimport { apiBase } from './config';\nimport { getAccessToken } from './authenticate';\nconst instance = axios.create({\n  baseURL: apiBase // timeout: 60000\n\n});\nvar headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'JWT fefege...',\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"*\",\n  'X-Requested-With': 'XMLHttpRequest'\n}; //axios.defaults.headers.common['Authorization'] =sessionStorage.getItem(\"token\");\n\nconst request = (method, url, data, isSilent) => {\n  var loginUserLang = JSON.parse(localStorage.getItem('loggedInUserData')); // console.log(\"SDAf\", getAccessToken())\n\n  console.log(\"url\", url); // console.log(\"isSilent\", isSilent)\n\n  if (data == undefined || data == '') {\n    var setData = {\n      PreferLang: loginUserLang.PreferredLanguage == null ? 'en-IE' : loginUserLang.PreferredLanguage,\n      CurrentUserId: loginUserLang.EntityId == undefined || loginUserLang.EntityId == null ? 'System' : loginUserLang.EntityId\n    };\n    data = setData;\n  } else {\n    var pref = '';\n    data.PreferLang = pref;\n    data.CurrentUserId = pref; // var setData = {\n    //   PreferLang: (loginUserLang.PreferredLanguage == null ? 'en-IE' : loginUserLang.PreferredLanguage),\n    //   CurrentUserId:((loginUserLang.EntityId == undefined || loginUserLang.EntityId == null)? 'System': loginUserLang.EntityId)\n    // };\n    // data = setData;\n\n    console.log(\"loginUserLang\", loginUserLang);\n\n    if (loginUserLang != null) {\n      if (loginUserLang.PreferredLanguage == null) {\n        data.PreferLang = 'en-IE';\n      } else {\n        data.PreferLang = loginUserLang.PreferredLanguage;\n      }\n\n      if (loginUserLang.EntityId == undefined || loginUserLang.EntityId == null) {\n        data.CurrentUserId = 'System';\n      } else {\n        data.CurrentUserId = loginUserLang.EntityId;\n      }\n    }\n  }\n\n  console.log(\"data..\", data);\n  headers['accept-language'] = i18n.language;\n  headers['token'] = getAccessToken();\n  let isaSilent = isSilent === undefined ? false : isSilent; // instance.defaults.headers.common['Auth  orization'] = sessionStorage.getItem(\"token\");\n\n  if (url != 'api/getNotificationList' && url != 'api/getNotificationCount') {\n    if (typeof isaSilent === \"boolean\" && isaSilent !== true) {\n      let spinner = document.querySelector('.spinner');\n      let logo = document.querySelector('.logo-img');\n      spinner.classList.add('spinner-show');\n      logo.classList.add('spinner-show');\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    (() => {\n      if (method === 'get') {\n        return instance.request({\n          url,\n          method,\n          params: data,\n          headers: headers\n        });\n      } else {\n        return instance.request({\n          url,\n          method,\n          data,\n          headers: headers\n        });\n      }\n    })().then(res => {\n      // console.log(res);\n      let spinner = document.querySelector('.spinner');\n      let logo = document.querySelector('.logo-img');\n      resolve(res.data);\n      spinner.classList.remove('spinner-show');\n      logo.classList.remove('spinner-show');\n    }).catch(err => {\n      let spinner = document.querySelector('.spinner');\n      let logo = document.querySelector('.logo-img');\n      spinner.classList.remove('spinner-show');\n      logo.classList.remove('spinner-show');\n      reject(err.response);\n    });\n  });\n};\n\nexport default {\n  get: (endpoint, data, isSilent) => {\n    return request('get', endpoint, data, isSilent);\n  },\n  post: (endpoint, data, isSilent) => {\n    // return request('post', endpoint, JSON.stringify(data));\n    return request('post', endpoint, data, isSilent);\n  },\n  put: (endpoint, data, isSilent) => {\n    return request('put', endpoint, data, isSilent);\n  },\n  del: (endpoint, data, isSilent) => {\n    return request('delete', endpoint, data, isSilent);\n  }\n};","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/utils/apiClient.js"],"names":["axios","i18n","apiBase","getAccessToken","instance","create","baseURL","headers","request","method","url","data","isSilent","loginUserLang","JSON","parse","localStorage","getItem","console","log","undefined","setData","PreferLang","PreferredLanguage","CurrentUserId","EntityId","pref","language","isaSilent","spinner","document","querySelector","logo","classList","add","Promise","resolve","reject","params","then","res","remove","catch","err","response","get","endpoint","post","put","del"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEJ,OADmB,CAE5B;;AAF4B,CAAb,CAAjB;AAKA,IAAIK,OAAO,GAAG;AACZ,kBAAgB,kBADJ;AAEZ,mBAAiB,eAFL;AAGZ,iCAA8B,GAHlB;AAIZ,kCAA+B,GAJnB;AAKZ,sBAAoB;AALR,CAAd,C,CAQA;;AACA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,QAApB,KAAiC;AAC/C,MAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAApB,CAD+C,CAE/C;;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBT,GAAnB,EAH6C,CAI7C;;AACF,MAAGC,IAAI,IAAIS,SAAR,IAAqBT,IAAI,IAAI,EAAhC,EAAmC;AACjC,QAAIU,OAAO,GAAG;AACZC,MAAAA,UAAU,EAAGT,aAAa,CAACU,iBAAd,IAAmC,IAAnC,GAA0C,OAA1C,GAAoDV,aAAa,CAACU,iBADnE;AAEZC,MAAAA,aAAa,EAAGX,aAAa,CAACY,QAAd,IAA0BL,SAA1B,IAAuCP,aAAa,CAACY,QAAd,IAA0B,IAAlE,GAAyE,QAAzE,GAAmFZ,aAAa,CAACY;AAFpG,KAAd;AAKAd,IAAAA,IAAI,GAAGU,OAAP;AACD,GAPD,MAOK;AACH,QAAIK,IAAI,GAAC,EAAT;AACAf,IAAAA,IAAI,CAACW,UAAL,GAAkBI,IAAlB;AACAf,IAAAA,IAAI,CAACa,aAAL,GAAqBE,IAArB,CAHG,CAIH;AACA;AACA;AAEA;AACA;;AACFR,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,aAA7B;;AAEA,QAAGA,aAAa,IAAI,IAApB,EAAyB;AACvB,UAAGA,aAAa,CAACU,iBAAd,IAAmC,IAAtC,EAA2C;AAEzCZ,QAAAA,IAAI,CAACW,UAAL,GAAkB,OAAlB;AACD,OAHD,MAII;AACFX,QAAAA,IAAI,CAACW,UAAL,GAAkBT,aAAa,CAACU,iBAAhC;AACD;;AACD,UAAGV,aAAa,CAACY,QAAd,IAA0BL,SAA1B,IAAuCP,aAAa,CAACY,QAAd,IAA0B,IAApE,EAAyE;AACvEd,QAAAA,IAAI,CAACa,aAAL,GAAqB,QAArB;AACC,OAFH,MAGI;AACFb,QAAAA,IAAI,CAACa,aAAL,GAAqBX,aAAa,CAACY,QAAnC;AACC;AACJ;AACF;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBR,IAArB;AACEJ,EAAAA,OAAO,CAAC,iBAAD,CAAP,GAA6BN,IAAI,CAAC0B,QAAlC;AACApB,EAAAA,OAAO,CAAC,OAAD,CAAP,GAAmBJ,cAAc,EAAjC;AACA,MAAIyB,SAAS,GAAGhB,QAAQ,KAAKQ,SAAb,GAAyB,KAAzB,GAAiCR,QAAjD,CA3C+C,CA6C/C;;AACA,MAAIF,GAAG,IAAI,yBAAP,IAAoCA,GAAG,IAAI,0BAA/C,EAA0E;AACxE,QAAI,OAAOkB,SAAP,KAAqB,SAArB,IAAkCA,SAAS,KAAK,IAApD,EAA0D;AACxD,UAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAd;AACA,UAAIC,IAAI,GAAGF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAX;AACAF,MAAAA,OAAO,CAACI,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AACAF,MAAAA,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,cAAnB;AACD;AACF;;AAED,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,KAAC,MAAM;AACL,UAAI5B,MAAM,KAAK,KAAf,EAAsB;AACpB,eAAOL,QAAQ,CAACI,OAAT,CAAiB;AACtBE,UAAAA,GADsB;AACjBD,UAAAA,MADiB;AACT6B,UAAAA,MAAM,EAAE3B,IADC;AACKJ,UAAAA,OAAO,EAAEA;AADd,SAAjB,CAAP;AAGD,OAJD,MAIO;AACL,eAAOH,QAAQ,CAACI,OAAT,CAAiB;AACtBE,UAAAA,GADsB;AACjBD,UAAAA,MADiB;AACTE,UAAAA,IADS;AACHJ,UAAAA,OAAO,EAAEA;AADN,SAAjB,CAAP;AAGD;AACF,KAVD,IAWGgC,IAXH,CAWSC,GAAD,IAAS;AACb;AACA,UAAIX,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAd;AACA,UAAIC,IAAI,GAAGF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAX;AAEAK,MAAAA,OAAO,CAACI,GAAG,CAAC7B,IAAL,CAAP;AACAkB,MAAAA,OAAO,CAACI,SAAR,CAAkBQ,MAAlB,CAAyB,cAAzB;AACAT,MAAAA,IAAI,CAACC,SAAL,CAAeQ,MAAf,CAAsB,cAAtB;AACD,KAnBH,EAoBGC,KApBH,CAoBUC,GAAD,IAAS;AACd,UAAId,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAd;AACA,UAAIC,IAAI,GAAGF,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAX;AACAF,MAAAA,OAAO,CAACI,SAAR,CAAkBQ,MAAlB,CAAyB,cAAzB;AACAT,MAAAA,IAAI,CAACC,SAAL,CAAeQ,MAAf,CAAsB,cAAtB;AACAJ,MAAAA,MAAM,CAACM,GAAG,CAACC,QAAL,CAAN;AACD,KA1BH;AA4BD,GA7BM,CAAP;AA8BD,CArFD;;AAuFA,eAAe;AACbC,EAAAA,GAAG,EAAE,CAACC,QAAD,EAAWnC,IAAX,EAAiBC,QAAjB,KAA8B;AACjC,WAAOJ,OAAO,CAAC,KAAD,EAAQsC,QAAR,EAAkBnC,IAAlB,EAAwBC,QAAxB,CAAd;AACD,GAHY;AAIbmC,EAAAA,IAAI,EAAE,CAACD,QAAD,EAAWnC,IAAX,EAAiBC,QAAjB,KAA8B;AAClC;AACA,WAAOJ,OAAO,CAAC,MAAD,EAASsC,QAAT,EAAmBnC,IAAnB,EAAyBC,QAAzB,CAAd;AACD,GAPY;AAQboC,EAAAA,GAAG,EAAE,CAACF,QAAD,EAAWnC,IAAX,EAAiBC,QAAjB,KAA8B;AACjC,WAAOJ,OAAO,CAAC,KAAD,EAAQsC,QAAR,EAAkBnC,IAAlB,EAAwBC,QAAxB,CAAd;AACD,GAVY;AAWbqC,EAAAA,GAAG,EAAE,CAACH,QAAD,EAAWnC,IAAX,EAAiBC,QAAjB,KAA8B;AACjC,WAAOJ,OAAO,CAAC,QAAD,EAAWsC,QAAX,EAAqBnC,IAArB,EAA2BC,QAA3B,CAAd;AACD;AAbY,CAAf","sourcesContent":["import axios from 'axios';\nimport i18n from \"i18next\";\nimport { apiBase } from './config';\nimport { getAccessToken } from './authenticate';\n\nconst instance = axios.create({\n  baseURL: apiBase,\n  // timeout: 60000\n});\n\nvar headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'JWT fefege...',\n  \"Access-Control-Allow-Origin\":\"*\",\n  \"Access-Control-Allow-Headers\":\"*\",\n  'X-Requested-With': 'XMLHttpRequest'\n}\n\n//axios.defaults.headers.common['Authorization'] =sessionStorage.getItem(\"token\");\nconst request = (method, url, data, isSilent) => {\n  var loginUserLang = JSON.parse(localStorage.getItem('loggedInUserData'));\n  // console.log(\"SDAf\", getAccessToken())\n    console.log(\"url\", url)\n    // console.log(\"isSilent\", isSilent)\n  if(data == undefined || data == ''){\n    var setData = {\n      PreferLang: (loginUserLang.PreferredLanguage == null ? 'en-IE' : loginUserLang.PreferredLanguage),\n      CurrentUserId:((loginUserLang.EntityId == undefined || loginUserLang.EntityId == null)? 'System': loginUserLang.EntityId)\n\n    };\n    data = setData;\n  }else{\n    var pref='';\n    data.PreferLang = pref;\n    data.CurrentUserId = pref;\n    // var setData = {\n    //   PreferLang: (loginUserLang.PreferredLanguage == null ? 'en-IE' : loginUserLang.PreferredLanguage),\n    //   CurrentUserId:((loginUserLang.EntityId == undefined || loginUserLang.EntityId == null)? 'System': loginUserLang.EntityId)\n\n    // };\n    // data = setData;\n  console.log(\"loginUserLang\", loginUserLang);\n  \n  if(loginUserLang != null){\n    if(loginUserLang.PreferredLanguage == null){\n         \n      data.PreferLang = 'en-IE';\n    }\n    else{\n      data.PreferLang = loginUserLang.PreferredLanguage;\n    }\n    if(loginUserLang.EntityId == undefined || loginUserLang.EntityId == null){\n      data.CurrentUserId = 'System';  \n      }\n    else{\n      data.CurrentUserId = loginUserLang.EntityId;\n      }\n  }\n}\nconsole.log(\"data..\",data);\n  headers['accept-language'] = i18n.language;\n  headers['token'] = getAccessToken();\n  let isaSilent = isSilent === undefined ? false : isSilent\n\n  // instance.defaults.headers.common['Auth  orization'] = sessionStorage.getItem(\"token\");\n  if( url != 'api/getNotificationList' && url != 'api/getNotificationCount'){\n    if (typeof isaSilent === \"boolean\" && isaSilent !== true) {\n      let spinner = document.querySelector('.spinner');\n      let logo = document.querySelector('.logo-img');\n      spinner.classList.add('spinner-show');\n      logo.classList.add('spinner-show');\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    (() => {\n      if (method === 'get') {\n        return instance.request({\n          url, method, params: data, headers: headers\n        });\n      } else {\n        return instance.request({\n          url, method, data, headers: headers\n        });\n      }\n    })()\n      .then((res) => {\n        // console.log(res);\n        let spinner = document.querySelector('.spinner');\n        let logo = document.querySelector('.logo-img');\n\n        resolve(res.data);\n        spinner.classList.remove('spinner-show');\n        logo.classList.remove('spinner-show');\n      })\n      .catch((err) => {\n        let spinner = document.querySelector('.spinner');\n        let logo = document.querySelector('.logo-img');\n        spinner.classList.remove('spinner-show');\n        logo.classList.remove('spinner-show');\n        reject(err.response);\n      })\n      ;\n  });\n};\n\nexport default {\n  get: (endpoint, data, isSilent) => {\n    return request('get', endpoint, data, isSilent);\n  },\n  post: (endpoint, data, isSilent) => {\n    // return request('post', endpoint, JSON.stringify(data));\n    return request('post', endpoint, data, isSilent);\n  },\n  put: (endpoint, data, isSilent) => {\n    return request('put', endpoint, data, isSilent);\n  },\n  del: (endpoint, data, isSilent) => {\n    return request('delete', endpoint, data, isSilent);\n  },\n};\n\n\n"]},"metadata":{},"sourceType":"module"}