{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Claims/ClaimStage/ClaimStage.js\";\nimport React, { Component } from 'react';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport api from '../../../utils/apiClient';\nimport APIConstant, { CommonConfig } from '../../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport { InputText } from 'primereact/inputtext';\nimport moment from 'moment';\n\nclass ClaimStage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.claimsList.length ? l : this.state.claimsList.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.claimsList.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    let columns = [{\n      field: \"Class\",\n      header: \"Class\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"Type\",\n      header: \"Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"Country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"From\",\n      header: \"From\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"To\",\n      header: \"To\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"Excess\",\n      header: \"Excess\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 13\n    }];\n    this.state = {\n      claimsList: [],\n      cols: columns,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null\n    };\n    this.actionTemplate = this.actionTemplate.bind(this);\n  }\n\n  actionTemplate(rowData, column) {\n    // debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n  }\n\n  async componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    let columns = '';\n    columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-input-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.claimsList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.claimsList.length,\n      exportFilename: \"Claims List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: this.state.paginatorTemplate,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(ClaimStage);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Claims/ClaimStage/ClaimStage.js"],"names":["React","Component","TabView","TabPanel","Button","DataTable","Column","api","APIConstant","CommonConfig","withTranslation","InputText","moment","ClaimStage","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","claimsList","length","str","setState","selectedPage","rowsPerPage","columns","field","header","sortable","filter","filterMatchMode","id","body","actionTemplate","bind","cols","paginatorTemplate","rowsPerPageOptions","dataTableConfig","globalFilter","rowData","column","componentDidMount","componentWillUnmount","render","map","col","i","target","value","el","dt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport api from '../../../utils/apiClient';\nimport APIConstant, { CommonConfig } from '../../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport { InputText } from 'primereact/inputtext';\nimport moment from 'moment';\n\nclass ClaimStage extends Component {\n\n    constructor(props) {\n        super(props);\n        let columns = [\n            { field: \"Class\", header: \"Class\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\n            { field: \"Type\", header: \"Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\n            { field: \"Country\", header: \"Country\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\n            { field: \"From\", header: \"From\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\n            { field: \"To\", header: \"To\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\n            { field: \"Excess\", header: \"Excess\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 13 }\n        ];\n\n        this.state = {\n            claimsList: [],\n            cols: columns,\n            paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            globalFilter: null\n        };\n        this.actionTemplate = this.actionTemplate.bind(this);\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.claimsList.length) ? l : this.state.claimsList.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.claimsList.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    actionTemplate(rowData, column) {\n        // debugger;\n        return <div>\n\n        </div>;\n    }\n\n    async componentDidMount() {\n\n    }\n\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        let columns = '';\n        columns = this.state.cols.map((col, i) => {\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\n        });\n\n        return (\n            <div>\n                <div className=\"group float-right\">\n                    <span className=\"p-input-icon-left\">\n                        <i className=\"pi pi-search\" />\n                        <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" />\n                    </span>\n                </div>\n                <div className=\"table-custom\">\n                    <DataTable ref={(el) => this.dt = el} value={this.state.claimsList} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\n                        paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.claimsList.length} exportFilename=\"Claims List\"\n                        currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\n                        paginatorTemplate={this.state.paginatorTemplate}\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\n                        responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n                    >\n                        {columns}\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ClaimStage);"]},"metadata":{},"sourceType":"module"}