{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/Underwriting.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { Col, Row, Container, Form, Input, Card, CardBody, Collapse, Button as BTN, CardHeader } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport { toast } from 'react-toastify';\nimport { withTranslation } from 'react-i18next';\nimport APIConstant from '../../utils/constants';\nimport { CommonConfig } from '../../utils/constants';\nimport DatePicker from 'react-date-picker';\nimport moment from 'moment';\nimport { date } from 'yup';\nimport { number } from 'prop-types';\n\nclass Underwriting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === \"inceptionDate\") {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            inceptionDateError: true\n          });\n          this.show(\"inceptionDate\", true, \"inceptionDateError\", \"Please enter Inception Date\");\n        } // else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\n        //     this.setState({ inceptionDateError: true });\n        //     this.show(\"inceptionDate\", true, \"inceptionDateError\", \"Please enter valid Inception Date\");\n        // } \n        else {\n            // let renewalDate = moment(e.target.value).add(365, 'days').format('DD/MM/YYYY');   \n            console.log('renewalDate', e.target.value);\n            let renewalDate = moment(e.target.value).add(365, 'days').format('YYYY-MM-DD');\n            console.log('renewalDate', renewalDate);\n            this.setState({\n              inceptionDateError: false,\n              inceptionDate: e.target.value,\n              renewalDate: renewalDate,\n              renewalDateError: false\n            });\n            this.show(\"inceptionDate\", false, \"inceptionDateError\", \"\");\n          }\n      }\n\n      if (e.target.name === \"renewalDate\") {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            renewalDateError: true\n          });\n          this.show(\"renewalDate\", true, \"renewalDateError\", \"Please enter Renewal Date\");\n        } else {\n          this.setState({\n            renewalDateError: false,\n            renewalDate: e.target.value\n          });\n          this.show(\"renewalDate\", false, \"renewalDateError\", \"\");\n        }\n      }\n\n      if (e.target.name === \"lastBindDate\") {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            lastBindDateError: true\n          });\n          this.show(\"lastBindDate\", true, \"lastBindDateError\", \"Please enter Last Bind Date\");\n        } else {\n          this.setState({\n            lastBindDateError: false,\n            lastBindDate: e.target.value\n          });\n          this.show(\"lastBindDate\", false, \"lastBindDateError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'note') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            noteError: false,\n            note: e.target.value\n          });\n          this.show(\"note\", false);\n        } else {\n          if (!CommonConfig.RegExp.allowAllWithSpace.test(e.target.value) || e.target.value.length > 200) {\n            this.setState({\n              noteError: true\n            });\n            this.show(\"note\", true);\n          } else {\n            this.setState({\n              noteError: false,\n              note: e.target.value\n            });\n            this.show(\"note\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'isWaterSkiing') {\n        if (e.target.checked == true) {\n          this.setState({\n            waterSkiingLiability: this.state.waterSkiingLiabilityAmount\n          });\n        } else {\n          this.setState({\n            waterSkiingLiability: ''\n          });\n        }\n\n        this.setState({\n          isWaterSkiing: e.target.checked\n        });\n      }\n\n      if (e.target.name === 'isWaterToys') {\n        if (e.target.checked == true) {\n          this.setState({\n            waterToysLiability: this.state.waterToysLiabilityAmount\n          });\n        } else {\n          this.setState({\n            waterToysLiability: ''\n          });\n        }\n\n        this.setState({\n          isWaterToys: e.target.checked\n        });\n      }\n\n      if (e.target.name === 'isSailRacing') {\n        if (e.target.checked == true) {\n          this.setState({\n            sailRacingCoverage: this.state.sailRacingCoverageAmount\n          });\n        } else {\n          this.setState({\n            sailRacingCoverage: ''\n          });\n        }\n\n        this.setState({\n          isSailRacing: e.target.checked\n        });\n      }\n\n      if (e.target.name === 'sailRacingCoverage') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            sailRacingCoverageError: true,\n            sailRacingCoverage: e.target.value\n          });\n          this.show('sailRacingCoverage', true);\n        } else if (Number(e.target.value) > Number(this.state.maxPolicyAmount)) {\n          this.setState({\n            sailRacingCoverageError: true,\n            sailRacingCoverage: e.target.value\n          });\n          this.show('sailRacingCoverage', true);\n        } else {\n          this.setState({\n            sailRacingCoverageError: false,\n            sailRacingCoverage: e.target.value\n          });\n          this.show('sailRacingCoverage', false);\n        }\n      }\n\n      if (e.target.name === 'gross') {\n        if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.percentage.test(e.target.value) || e.target.value > 100) {\n          this.setState({\n            GrossError: true\n          });\n          this.show(\"gross\", true);\n        } else {\n          this.setState({\n            GrossError: false,\n            gross: e.target.value\n          });\n          this.show(\"gross\", false);\n        }\n      }\n      /*if (e.target.name === 'governmentLavysPercent') {\r\n          if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.percentage.test(e.target.value)) {\r\n              this.setState({ governmentLavysPercentError: true });\r\n              this.show(\"governmentLavysPercent\", true);\r\n          } else {\r\n              this.setState({ governmentLavysPercentError: false, governmentLavysPercent: e.target.value });\r\n              this.show(\"governmentLavysPercent\", false);\r\n          }\r\n      }*/\n      // if (e.target.name === 'excess') {\n      //     if (CommonConfig.isEmpty(e.target.value)) {\n      //         this.setState({ excessError: true, excess: e.target.value });\n      //         this.show('excess', true);\n      //     } else if (Number(e.target.value) > Number(this.state.maxPolicyAmount)) {\n      //         this.setState({ excessError: true, excess: e.target.value });\n      //         this.show('excess', true);\n      //     } else {\n      //         this.setState({ excessError: false, excess: e.target.value });\n      //         this.show('excess', false);\n      //     }\n      // }\n\n\n      if (e.target.name === 'excess') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            excessError: true\n          });\n          this.show(\"excess\", true, \"excessError\", \"Please enter Excess Amount\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\n          let decimalWithOne = e.target.value;\n\n          if (!decimalRegEx.test(decimalWithOne)) {\n            this.setState({\n              excessError: true\n            });\n            this.show(\"excess\", true, \"excessError\", \"Please enter valid Excess Amount\");\n          } else {\n            this.setState({\n              excessError: false,\n              excess: e.target.value\n            });\n            this.show(\"excess\", false, \"excessError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'adminFees') {\n        if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.decimalWithOne.test(e.target.value)) {\n          this.setState({\n            adminFeesError: true,\n            adminFees: e.target.value\n          });\n          this.show('adminFees', true, \"adminFeesError\", \"Please enter valid Admin Fees.\");\n        } else if (Number(e.target.value) > Number(this.state.maxPolicyAmount)) {\n          this.setState({\n            adminFeesError: true,\n            adminFees: e.target.value\n          });\n          this.show('adminFees', true, \"adminFeesError\", \"Admin Fees can not be more then Policy Amount.\");\n        } else {\n          this.setState({\n            adminFeesError: false,\n            adminFees: e.target.value\n          });\n          this.show('adminFees', false, \"adminFeesError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'underWriter') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            underWriterError: false,\n            underWriter: e.target.value\n          });\n          this.show('underWriter', false);\n        } else if (!CommonConfig.RegExp.decimalWithNegative.test(e.target.value)) {\n          this.setState({\n            underWriterError: true,\n            underWriter: e.target.value\n          });\n          this.show('underWriter', true);\n        } else {\n          this.setState({\n            underWriterError: false,\n            underWriter: e.target.value\n          });\n          this.show('underWriter', false);\n        }\n      }\n\n      if (e.target.name === \"MarineTradePremium\") {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            MarineTradePremiumError: true\n          });\n          this.show(\"MarineTradePremium\", true, \"MarineTradePremiumError\", \"Please enter Premium Amount\");\n        } else if (!CommonConfig.RegExp.decimalWithNegative.test(e.target.value)) {\n          this.setState({\n            MarineTradePremiumError: true,\n            MarineTradePremium: e.target.value\n          });\n          this.show('MarineTradePremium', true, \"MarineTradePremiumError\", \"Please enter valid Premium Amount\");\n        } else {\n          this.setState({\n            MarineTradePremiumError: false,\n            MarineTradePremium: e.target.value\n          });\n          this.show(\"MarineTradePremium\", false, \"MarineTradePremiumError\", \"\");\n        }\n      } // if (e.target.name === 'ratingTypeValue') {\n      //     if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.decimal.test(e.target.value)) {\n      //         this.setState({ ratingTypeValueError: true, ratingTypeValue: e.target.value });\n      //         // this.show('ratingTypeValue', true);\n      //     } else {\n      //         this.setState({ ratingTypeValueError: false, ratingTypeValue: e.target.value });\n      //         this.show('ratingTypeValue', false);\n      //     }\n      // }\n\n\n      if (e.target.name === 'ratingTypeValue') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            ratingTypeValueError: true\n          });\n          this.show(\"ratingTypeValue\", true, \"ratingTypeValueError\", \"Please enter Rate\");\n        } else {\n          let decimalRegEx = this.state.ratingTypeValueRegex;\n          let percentage = e.target.value;\n\n          if (!decimalRegEx.test(percentage)) {\n            this.setState({\n              ratingTypeValueError: true\n            });\n            this.show(\"ratingTypeValue\", true, \"ratingTypeValueError\", \"Please enter valid Rate\");\n          } else {\n            this.setState({\n              ratingTypeValueError: false,\n              ratingTypeValue: e.target.value\n            });\n            this.show(\"ratingTypeValue\", false, \"ratingTypeValueError\", \"\");\n          }\n        }\n      }\n\n      if (e.target.name === 'governmentLavysAmount') {\n        if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.decimalWithOne.test(e.target.value)) {\n          this.setState({\n            governmentLavysAmountError: true,\n            governmentLavysAmount: e.target.value\n          });\n          this.show('governmentLavysAmount', true, \"governmentLavysAmountError\", \"Please eneter Government Lavys Amount\");\n        } else {\n          this.setState({\n            governmentLavysAmountError: false,\n            governmentLavysAmount: e.target.value\n          });\n          this.show('governmentLavysAmount', false, \"governmentLavysAmount\", \"\");\n        }\n      }\n\n      if (e.target.name === 'currentNCBAmount') {\n        if (!CommonConfig.RegExp.decimalWithOne.test(e.target.value)) {\n          this.setState({\n            currentNCBAmountError: true\n          });\n          this.show(\"currentNCBAmount\", true);\n        } else {\n          this.setState({\n            currentNCBAmountError: false,\n            currentNCBAmount: e.target.value\n          });\n          this.show(\"currentNCBAmount\", false);\n        }\n      }\n\n      if (e.target.name === 'agency') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            agencyError: true\n          });\n          this.show(\"agency\", true, \"agencyError\", \"Please enter Agency Commission\");\n        } else {\n          let decimalRegEx = CommonConfig.RegExp.percentage;\n          let percentage = e.target.value;\n\n          if (!decimalRegEx.test(percentage)) {\n            this.setState({\n              agencyError: true\n            });\n            this.show(\"agency\", true, \"agencyError\", \"Please enter valid  Agency Commission\");\n          } else {\n            // var totalagency = (e.target.value * this.state.currentPremium) / 100;\n            var totalagency = e.target.value * this.state.PolicyCurrentPremium / 100;\n            var balance = parseFloat(this.state.gross) - parseFloat(e.target.value);\n            var balanceTotal = Number(this.state.totalgross) - totalagency;\n            totalagency = CommonConfig.isEmpty(totalagency) ? 0 : totalagency.toFixed(2);\n            balance = CommonConfig.isEmpty(balance) ? 0 : balance.toFixed(2);\n            balanceTotal = CommonConfig.isEmpty(balanceTotal) ? 0 : balanceTotal.toFixed(2);\n            this.setState({\n              agencyError: false,\n              agency: e.target.value,\n              agencyTotal: totalagency,\n              balance: balance,\n              balanceTotal: balanceTotal\n            });\n            this.show(\"agency\", false, \"agencyError\", \"\");\n          }\n        }\n      }\n    };\n\n    this.Save = () => {\n      try {\n        if (this.validate()) {\n          let binderResults = this.state.binders.filter(binderdata => {\n            var binderUMRN = binderdata.UMRN;\n            return binderUMRN == this.state.binder;\n          });\n          let subBinderResults = this.state.subBinders.filter(subbinderdata => {\n            var subBinderTitle = subbinderdata.Title;\n            return subBinderTitle == this.state.subBinder;\n          });\n          console.log('renewalDate', this.state.renewalDate);\n          let data = {\n            PolicyId: this.state.PolicyId,\n            PolicyUnderwritingId: this.state.PolicyUnderwritingId,\n            PolicyInsuredAmountId: this.state.PolicyInsuredAmountId,\n            BinderId: binderResults[0].BinderId,\n            SubBinderId: subBinderResults.length && subBinderResults !== undefined ? subBinderResults[0].SubBinderId : '',\n            InsuranceCompanyId: binderResults[0].InsuranceCompanyId,\n            Department: this.state.department,\n            SourceId: this.state.source,\n            InceptionDate: moment(this.state.inceptionDate).format(CommonConfig.dateFormat.dbDateTime),\n            RenewalDate: moment(this.state.renewalDate).format(CommonConfig.dateFormat.dbDateTime),\n            IsAwaitingDocument: this.state.awaitingDocuments === \"Yes\" ? true : false,\n            IsPremiumCredit: this.state.premiumCredits === \"Yes\" ? true : false,\n            MarineTradePremium: this.state.MarineTradePremium,\n            UnderwriterAmount: this.state.underWriter,\n            UnderwriterNote: this.state.note,\n            ThirdPartyLiabilityAmount: this.state.thirdPartyLiability,\n            WaterSkiingLiabilityAmount: this.state.waterSkiingLiability,\n            WaterToysLiabilityAmount: this.state.waterToysLiability,\n            SailRacingCoverageAmount: this.state.sailRacingCoverage,\n            RacingEventType: this.state.racingEventType,\n            CrewLiability: this.state.crewLiability,\n            GovtLevyType: this.state.governmentLavys,\n            GovtLevyPercent: this.state.governmentLavysPercent,\n            GovtLevyAmount: this.state.governmentLavysAmount,\n            GrossCommisionPercent: this.state.gross,\n            AgencyCommissionPercent: this.state.agency,\n            AdminFeeAmount: this.state.adminFees != undefined ? this.state.adminFees : '',\n            ExcessAmount: this.state.excess,\n            RatingType: this.state.ratingType,\n            RatingTypeAmount: this.state.ratingTypeValue,\n            CurrentNCBYears: this.state.currentNCBYears,\n            CurrentNCBAmount: this.state.currentNCBAmount,\n            PolicyGeneralId: this.state.PolicyGeneralId,\n            SortOrder: '1',\n            LanguageId: 'en-GB',\n            Status: \"Active\",\n            loggedInUserId: CommonConfig.loggedInUserId()\n          };\n          console.log('underwriting', data);\n          console.log(\"SavepolicyUnderwriting\", data);\n          api.post('api/policyUnderwriting', data).then(res => {\n            if (res.data.success) {\n              var firstRes = res.data;\n              let secondData = {\n                policyId: this.props.match.params.id,\n                CurrentUser: CommonConfig.loggedInUserId()\n              };\n              api.post('api/isPolicyReferred', secondData).then(res => {\n                if (res.success) {\n                  let fourthData = {\n                    policyId: this.props.match.params.id,\n                    IsRenewal: 0,\n                    CurrentUser: CommonConfig.loggedInUserId()\n                  };\n                  api.post('api/recomputePremium', fourthData).then(res => {\n                    if (res.success) {\n                      if (CommonConfig.isEmpty(res.data.returnValue)) {\n                        toast.success(firstRes.message);\n                        this.editEndorsements(\"view\");\n                        setTimeout(function () {\n                          window.location.reload();\n                        }, 1000);\n                      } else {\n                        toast.error(\"There was an error while calculating the premium. \" + res.data.returnValue);\n                      }\n                    } else {\n                      console.log('error');\n                    }\n                  }).catch(err => {});\n                }\n              }).catch(err => {\n                console.log(\"error\", err);\n              });\n            } else {}\n          }).catch(err => {\n            console.log(\"error\", err);\n          });\n        } else {\n          toast.error(\"Please enter/select all mandatory field.\");\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    this.toggleAll = toggleType => {\n      this.setState({\n        showRatingExcess: toggleType === 'expand' ? true : false,\n        showLimitsAdditionalCoverCommissionFeesandLevy: toggleType === 'expand' ? true : false,\n        showPolicyOptionsAdjustments: toggleType === 'expand' ? true : false,\n        showPolicyDates: toggleType === 'expand' ? true : false,\n        isExpand: toggleType === 'expand' ? true : false\n      });\n    };\n\n    this.toggle = type => {\n      if (type === 'PolicyDates') {\n        this.setState({\n          showPolicyDates: !this.state.showPolicyDates,\n          showPolicyOptionsAdjustments: this.state.isExpand ? this.state.showPolicyOptionsAdjustments : false,\n          showLimitsAdditionalCoverCommissionFeesandLevy: this.state.isExpand ? this.state.showLimitsAdditionalCoverCommissionFeesandLevy : false,\n          showRatingExcess: this.state.isExpand ? this.state.showRatingExcess : false\n        });\n      } else if (type === 'PolicyOptionsAdjustments') {\n        this.setState({\n          showPolicyDates: this.state.isExpand ? this.state.showPolicyDates : false,\n          showPolicyOptionsAdjustments: !this.state.showPolicyOptionsAdjustments,\n          showLimitsAdditionalCoverCommissionFeesandLevy: this.state.isExpand ? this.state.showLimitsAdditionalCoverCommissionFeesandLevy : false,\n          showRatingExcess: this.state.isExpand ? this.state.showRatingExcess : false\n        });\n      } else if (type === 'LimitsAdditionalCoverCommissionFeesandLevy') {\n        this.setState({\n          showPolicyDates: this.state.isExpand ? this.state.showPolicyDates : false,\n          showPolicyOptionsAdjustments: this.state.isExpand ? this.state.showPolicyOptionsAdjustments : false,\n          showLimitsAdditionalCoverCommissionFeesandLevy: !this.state.showLimitsAdditionalCoverCommissionFeesandLevy,\n          showRatingExcess: this.state.isExpand ? this.state.showRatingExcess : false\n        });\n      } else if (type === 'RatingExcess') {\n        this.setState({\n          showPolicyDates: this.state.isExpand ? this.state.showPolicyDates : false,\n          showPolicyOptionsAdjustments: this.state.isExpand ? this.state.showPolicyOptionsAdjustments : false,\n          showLimitsAdditionalCoverCommissionFeesandLevy: this.state.isExpand ? this.state.showLimitsAdditionalCoverCommissionFeesandLevy : false,\n          showRatingExcess: !this.state.showRatingExcess\n        });\n      }\n    };\n\n    this.showBinderDetails = () => {};\n\n    this.state = {\n      PolicyCountry: this.props.PolicyCountry,\n      PolicyId: this.props.match.params.id,\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      PolicyType: '',\n      departmentList: [],\n      sourceList: [],\n      sourceDisplay: false,\n      awaitingDocumentList: [],\n      premiumCreditList: [],\n      thirdPartyLiabilityList: [],\n      racingEventTypeList: [],\n      crewLiabilityList: [],\n      govtLevyList: [],\n      binders: [],\n      subBinders: [],\n      currentNCBNoofYearsList: [],\n      showPolicyDates: false,\n      showPolicyOptionsAdjustments: false,\n      showLimitsAdditionalCoverCommissionFeesandLevy: false,\n      showRatingExcess: false,\n      currentNCBYears: \"\",\n      currentNCBYearsError: true,\n      currentNCBAmount: 0,\n      currentNCBAmountError: true,\n      PolicyGeneralId: '',\n      amount: 100,\n      binder: '',\n      binderSuggestions: null,\n      selectBinderError: true,\n      subBinder: '',\n      subBinderError: false,\n      subbinderSuggestions: null,\n      insuranceComapny: '',\n      nextBinder: '',\n      nextInsuranceComapny: '',\n      isDisplayNext: 0,\n      department: '',\n      departmentError: false,\n      source: '',\n      sourceError: false,\n      awaitingDocuments: '',\n      awaitingDocumentsError: false,\n      premiumCredits: '',\n      premiumCreditsError: false,\n      liabilityType: '',\n      thirdPartyLiability: '',\n      thirdPartyLiabilityError: false,\n      isWaterSkiing: false,\n      waterSkiingLiability: '',\n      isWaterToys: false,\n      waterToysLiability: '',\n      isSailRacing: false,\n      sailRacingCoverage: '',\n      sailRacingCoverageError: false,\n      racingEventType: '',\n      racingEventTypeError: false,\n      crewLiability: '',\n      crewLiabilityError: false,\n      excess: '',\n      excessError: false,\n      inceptionDate: '',\n      inceptionDateError: true,\n      isInceptionEdit: false,\n      renewalDate: '',\n      renewalDateError: true,\n      isRenewalEdit: false,\n      lastBindDate: '',\n      defaultLastBindDate: '',\n      isLastBindEdit: false,\n      lastBindDateError: '',\n      yearBuilt: '',\n      lastSurveyDate: '',\n      surveyDueDate: '',\n      underWriter: '',\n      underWriterError: false,\n      note: '',\n      noteError: false,\n      gross: '',\n      grossError: false,\n      totalgross: '',\n      agency: '',\n      agencyError: false,\n      changeAgencyCommission: false,\n      agencyTotal: '',\n      balance: '',\n      balanceTotal: '',\n      governmentLavys: '',\n      governmentLavysError: false,\n      governmentLavysPercent: '',\n      governmentLavysPercentError: false,\n      governmentLavysAmount: '',\n      governmentLavysAmountError: false,\n      adminFees: '',\n      adminFeesError: false,\n      ratingType: '',\n      ratingTypeValue: '',\n      ratingTypeValueError: false,\n      ratingTypeValueRegex: '',\n      isEdit: false,\n      currentPremium: 0,\n      renewalPremium: 0,\n      policyStatus: '',\n      isExpand: false,\n      maxPolicyAmount: 0,\n      DisplayWater: 0,\n      DisplayRacing: 0,\n      DisplayCrew: 0,\n      CurrencySymbol: '',\n      MarineTradePremium: '',\n      MarineTradePremiumError: false,\n      PolicyCurrentPremium: 0\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.setState({\n        policyStatus: this.props.status,\n        CurrencySymbol: this.props.CurrencySymbol\n      });\n    }\n\n    console.log(\"componentDidMount\", this.props.CurrencySymbol);\n    var PolicyPremium = await this.getPolicyPremium();\n    this.getBinderData();\n    this.getDropDownValues('POLICYDEPARTMENT', 'departmentList', 'StringMapName'); // this.getDropDownValues('POLICYSOURCE', 'sourceList');\n\n    this.getDropDownValues('AWAITINGDOCUMENT', 'awaitingDocumentList', 'StringMapName');\n    this.getDropDownValues('PREMIUMCREDIT', 'premiumCreditList', 'StringMapName');\n    this.getDropDownValues('RACINGEVENTTYPE', 'racingEventTypeList', 'StringMapName');\n    this.getDropDownValues('CREWLIABILITY', 'crewLiabilityList', 'SortOrder');\n    this.getDropDownValues('GOVTLEVY', 'govtLevyList');\n    this.getDropDownValues('CURRENTNCBYEARS', 'currentNCBNoofYearsList');\n\n    if (this.state.PolicyCountry == \"Spain\") {\n      this.getDropDownValues('THIRDPARTYLIABILITYSPAIN', 'thirdPartyLiabilityList', 'SortOrder');\n    } else {\n      this.getDropDownValues('THIRDPARTYLIABILITY', 'thirdPartyLiabilityList', 'SortOrder');\n    }\n\n    this.getPolicyUnderwritingData();\n    this.getSysConfigValue();\n    this.setState({\n      awaitingDocuments: 'No',\n      IsPremiumCredit: 'No'\n    });\n    this.IsmigratedData();\n    this.isGenerateRenewal();\n  }\n\n  async getPolicyPremium() {\n    try {\n      let data = {\n        PolicyId: this.props.match.params.id,\n        LanguageId: this.state.LanguageId\n      };\n      var PolicyPremium = await api.post('api/getPolicyPremium', data).then(res => {\n        console.log(\"PolicyCurrentPremium\", res);\n\n        if (res.success) {\n          this.setState({\n            PolicyCurrentPremium: res.data[0][0].TotalPremium\n          });\n          return 1;\n        } else {\n          console.log(\"something error\");\n          return 1;\n        }\n      }).catch(err => {\n        console.log(\"error\", err);\n        return 1;\n      });\n      return PolicyPremium;\n    } catch (error) {\n      console.log(\"erroreeee\", error);\n    }\n  }\n\n  getSysConfigValue() {\n    try {\n      api.post('api/getSystemConfigByKey', {\n        key: 'PolicyVesselAmount'\n      }).then(res => {\n        if (res.success) {\n          this.setState({\n            maxPolicyAmount: res.data[0].SysValue\n          });\n        } else {\n          console.log(\"something error\");\n        }\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"erroreeee\", error);\n    }\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"errrr\", err);\n      });\n    } catch (error) {\n      console.log(\"asfsdg\", error);\n    }\n  }\n\n  getPolicyUnderwritingData() {\n    try {\n      let data = {\n        PolicyId: this.props.match.params.id,\n        LanguageId: this.state.LanguageId\n      }; //'bef076c0-2ea5-11ea-a563-fa163eb9754c' };\n\n      api.post('api/getPolicyUnderwritingData', data).then(res => {\n        debugger;\n        console.log(\"underwriting\", res.data);\n        console.log(\"PolicyCurrentPremium\", this.state.PolicyCurrentPremium);\n\n        if (res.success) {\n          let PolicyUnderwritingData = res.data[0];\n          let InceptionDate;\n\n          if (CommonConfig.isEmpty(PolicyUnderwritingData[0].InceptionDate)) {\n            InceptionDate = '';\n            this.setState({\n              inceptionDateError: true\n            });\n          } else {\n            let dt = moment(PolicyUnderwritingData[0].InceptionDate).format('YYYY-MM-DD');\n            InceptionDate = dt === 'Invalid date' ? '' : dt;\n            this.setState({\n              inceptionDateError: false\n            });\n          }\n\n          let SurveyDueDate;\n\n          if (CommonConfig.isEmpty(PolicyUnderwritingData[0].SurveyDueDate)) {\n            SurveyDueDate = '';\n          } else {\n            let dt = moment(PolicyUnderwritingData[0].SurveyDueDate).format('YYYY-MM-DD');\n            SurveyDueDate = dt === 'Invalid date' ? '' : new Date(dt);\n          }\n\n          let RenewalDate;\n\n          if (CommonConfig.isEmpty(PolicyUnderwritingData[0].RenewalDate)) {\n            RenewalDate = '';\n          } else {\n            let dt = moment(PolicyUnderwritingData[0].RenewalDate).format('YYYY-MM-DD');\n            RenewalDate = dt === 'Invalid date' ? '' : dt;\n          }\n\n          console.log('PolicyUnderwritingData[0].RenewalDate', PolicyUnderwritingData[0].RenewalDate);\n          let LastBindDate;\n\n          if (CommonConfig.isEmpty(PolicyUnderwritingData[0].LastBindDate)) {\n            LastBindDate = '';\n          } else {\n            let dt = moment(PolicyUnderwritingData[0].LastBindDate).format('YYYY-MM-DD');\n            LastBindDate = dt === 'Invalid date' ? '' : dt;\n          }\n\n          let vesselClass = PolicyUnderwritingData[0].VesselClassName;\n          let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(vesselClass);\n          this.setState({\n            DisplayWater: DisplayCondition.displayWater,\n            DisplayRacing: DisplayCondition.displayRacing,\n            DisplayCrew: DisplayCondition.displayCrew\n          });\n\n          if (vesselClass == 'Yacht' || vesselClass == 'Vela') {\n            let vesselType = PolicyUnderwritingData[0].VesselTypeName;\n            let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(vesselType);\n            this.setState({\n              DisplayWater: DisplayCondition.displayWater,\n              DisplayRacing: DisplayCondition.displayRacing,\n              DisplayCrew: DisplayCondition.displayCrew\n            });\n          } // Initialize Agency value\n          // let currentPremium = parseFloat(PolicyUnderwritingData[0].CurrentPremium);\n\n\n          console.log(\"PolicyCurrentPremium - IN\", this.state.PolicyCurrentPremium);\n          let currentPremium = parseFloat(this.state.PolicyCurrentPremium); // Changed on 15-05-2020 by Rajendra\n\n          let agencyPercent = PolicyUnderwritingData[0].AgencyCommissionPercent ? parseFloat(PolicyUnderwritingData[0].AgencyCommissionPercent) : 0;\n          let agencyAmount = agencyPercent * currentPremium / 100; // Initialize gross value\n\n          let gross = parseFloat(PolicyUnderwritingData[0].GrossCommisionPercent);\n          let totalgross = gross * currentPremium / 100; // Initialize balance value\n\n          let balance = parseFloat(gross) - parseFloat(agencyPercent);\n          let balanceTotal = parseFloat(totalgross) - parseFloat(agencyAmount); // let source = { label: PolicyUnderwritingData[0].SourceName, value: PolicyUnderwritingData[0].SourceId };\n\n          var source = PolicyUnderwritingData[0].SourceId;\n          console.log('(PolicyUnderwritingData[0].Department ===', PolicyUnderwritingData[0].Department === 'ServiceCenter' || PolicyUnderwritingData[0].Department === 'SubAgent');\n          console.log(PolicyUnderwritingData[0].Department);\n          this.setState({\n            PolicyNumber: PolicyUnderwritingData[0].PolicyNumber,\n            PolicyUnderwritingId: PolicyUnderwritingData[0].PolicyUnderwritingId,\n            PolicyInsuredAmountId: PolicyUnderwritingData[0].PolicyInsuredAmountId,\n            binder: PolicyUnderwritingData[0].UMRN,\n            subBinder: PolicyUnderwritingData[0].Title,\n            insuranceComapnyId: PolicyUnderwritingData[0].InsuranceComapnyId,\n            insuranceComapny: PolicyUnderwritingData[0].InsuranceCompanyName,\n            department: PolicyUnderwritingData[0].Department,\n            departmentName: PolicyUnderwritingData[0].DepartmentName,\n            departmentDisable: PolicyUnderwritingData[0].Title ? true : false,\n            source: source,\n            sourceDisable: PolicyUnderwritingData[0].Title ? true : false,\n            sourceName: PolicyUnderwritingData[0].SourceName,\n            sourceError: PolicyUnderwritingData[0].Department === 'ServiceCenter' || PolicyUnderwritingData[0].Department === 'SubAgent' ? CommonConfig.isEmpty(PolicyUnderwritingData[0].SourceName) : false,\n            awaitingDocuments: CommonConfig.isEmpty(PolicyUnderwritingData[0].IsAwaitingDocument) ? 'No' : PolicyUnderwritingData[0].IsAwaitingDocument.data[0] == 1 ? \"Yes\" : \"No\",\n            premiumCredits: CommonConfig.isEmpty(PolicyUnderwritingData[0].IsPremiumCredit) ? 'No' : PolicyUnderwritingData[0].IsPremiumCredit.data[0] == 1 ? \"Yes\" : \"No\",\n            liabilityType: PolicyUnderwritingData[0].LiabilityType,\n            PolicyInsuredAmount: PolicyUnderwritingData[0].InsuranceCompanyName,\n            thirdPartyLiability: PolicyUnderwritingData[0].ThirdPartyLiabilityAmount,\n            isWaterSkiing: CommonConfig.isEmpty(PolicyUnderwritingData[0].WaterSkiingLiabilityAmount) || PolicyUnderwritingData[0].WaterSkiingLiabilityAmount == 0 ? false : true,\n            waterSkiingLiability: PolicyUnderwritingData[0].WaterSkiingLiabilityAmount,\n            waterSkiingLiabilityAmount: PolicyUnderwritingData[0].WaterSkiingLiabilityAmount,\n            isWaterToys: CommonConfig.isEmpty(PolicyUnderwritingData[0].WaterToysLiabilityAmount) || PolicyUnderwritingData[0].WaterToysLiabilityAmount == 0 ? false : true,\n            waterToysLiability: PolicyUnderwritingData[0].WaterToysLiabilityAmount,\n            waterToysLiabilityAmount: PolicyUnderwritingData[0].WaterToysLiabilityAmount,\n            isSailRacing: CommonConfig.isEmpty(PolicyUnderwritingData[0].SailRacingCoverageAmount) || PolicyUnderwritingData[0].SailRacingCoverageAmount == 0 ? false : true,\n            sailRacingCoverage: PolicyUnderwritingData[0].SailRacingCoverageAmount,\n            sailRacingCoverageAmount: PolicyUnderwritingData[0].SailRacingCoverageAmount,\n            racingEventType: PolicyUnderwritingData[0].RacingEventType,\n            crewLiability: PolicyUnderwritingData[0].CrewLiability,\n            MarineTradePremium: PolicyUnderwritingData[0].MarineTradePremium ? PolicyUnderwritingData[0].MarineTradePremium : '',\n            // inceptionDate: moment(PolicyUnderwritingData[0].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\n            // renewalDate: moment(PolicyUnderwritingData[0].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\n            // lastBindDate: moment(PolicyUnderwritingData[0].LastBindDate).format(CommonConfig.dateFormat.dateOnly),\n            yearBuilt: PolicyUnderwritingData[0].YearBuilt,\n            lastSurveyDate: CommonConfig.isEmpty(moment(PolicyUnderwritingData[0].LastSurveyDate)) ? moment(PolicyUnderwritingData[0].LastSurveyDate).format(CommonConfig.dateFormat.dateOnly) : '',\n            surveyDueDate: SurveyDueDate,\n            defaultinceptionDate: InceptionDate,\n            inceptionDate: InceptionDate,\n            defaultrenewalDate: RenewalDate,\n            renewalDate: RenewalDate,\n            renewalDateError: CommonConfig.isEmpty(RenewalDate),\n            defaultLastBindDate: LastBindDate,\n            lastBindDate: LastBindDate,\n            underWriter: PolicyUnderwritingData[0].UnderwriterAmount,\n            currentPremium: PolicyUnderwritingData[0].CurrentPremium,\n            renewalPremium: PolicyUnderwritingData[0].RenewalPremium,\n            policyStatus: PolicyUnderwritingData[0].Status,\n            note: PolicyUnderwritingData[0].UnderwriterNote,\n            gross: gross.toFixed(2),\n            totalgross: totalgross.toFixed(2),\n            agency: agencyPercent.toFixed(2),\n            agencyTotal: agencyAmount.toFixed(2),\n            balance: balance.toFixed(2),\n            balanceTotal: balanceTotal.toFixed(2),\n            governmentLavys: PolicyUnderwritingData[0].GovtLevyType == \"CUSTOM\" ? 'CUSTOM' : 'DEFAULT',\n            governmentLavysPercent: PolicyUnderwritingData[0].GovtLevyPercent,\n            governmentLavysAmount: PolicyUnderwritingData[0].GovtLevyAmount,\n            adminFees: PolicyUnderwritingData[0].AdminFeeAmount,\n            excess: PolicyUnderwritingData[0].ExcessAmount,\n            subBinders: PolicyUnderwritingData[0].subBinderData,\n            ratingType: PolicyUnderwritingData[0].NonRatableRatingType,\n            ratingTypeValueRegex: PolicyUnderwritingData[0].NonRatableRatingType == 'Rating' ? CommonConfig.RegExp.percentage : CommonConfig.RegExp.decimalWithOne,\n            ratingTypeValue: PolicyUnderwritingData[0].NonRatableRateAmount,\n            PolicyType: PolicyUnderwritingData[0].PolicyType,\n            currentNCBAmount: CommonConfig.isEmpty(PolicyUnderwritingData[0].CurrentNCBAmount) ? '' : PolicyUnderwritingData[0].CurrentNCBAmount,\n            currentNCBYears: PolicyUnderwritingData[0].CurrentNCBYear,\n            PolicyGeneralId: PolicyUnderwritingData[0].PolicyGeneralId,\n            currentNCBAmountError: CommonConfig.isEmpty(PolicyUnderwritingData[0].CurrentNCBAmount) ? true : false,\n            currentNCBYearsError: CommonConfig.isEmpty(PolicyUnderwritingData[0].CurrentNCBYear) ? true : false,\n            // inceptionDateError: (PolicyUnderwritingData[0].InceptionDate != '' || PolicyUnderwritingData[0].InceptionDate != null || PolicyUnderwritingData[0].InceptionDate != undefined) ? false : true,\n            // selectBinderError: (PolicyUnderwritingData[0].BinderId != '' || PolicyUnderwritingData[0].BinderId != null || PolicyUnderwritingData[0].BinderId != undefined) ? false : true\n            selectBinderError: CommonConfig.isEmpty(PolicyUnderwritingData[0].BinderId) ? true : false\n          });\n          this.getOrganazationData(this.state.department);\n          this.getWaterSkiiAndWaterToys();\n        } else {\n          console.log('getPolicyUnderwritingData_error');\n        }\n      }).catch(err => {\n        console.log('getPolicyUnderwritingData_error', err);\n      });\n    } catch (error) {\n      console.log('getPolicyUnderwritingData_error', error);\n    }\n  }\n\n  getWaterSkiiAndWaterToys() {\n    api.post('api/getWaterSkiiAndWaterToys').then(res => {\n      if (res.success) {\n        this.setState({\n          waterSkiingLiabilityAmount: res.data[0].WaterSkiingLiability,\n          waterToysLiabilityAmount: res.data[0].WaterToysLiabiility\n        });\n\n        if (this.state.isWaterSkiing) {\n          this.setState({\n            waterSkiingLiability: res.data[0].WaterSkiingLiability\n          });\n        }\n\n        if (this.state.isWaterToys) {\n          this.setState({\n            waterToysLiability: res.data[0].WaterToysLiabiility\n          });\n        }\n      }\n    }).catch(err => {\n      console.log(\"error\", err);\n    });\n  }\n\n  getBinderData() {\n    try {\n      let data = {};\n      api.post('api/getBinder', data).then(res => {\n        if (res.success) {\n          this.setState({\n            binders: res.data\n          });\n        } else {\n          console.log('getBinderData_error');\n        }\n      }).catch(err => {\n        console.log('getBinderData_error', err);\n      });\n    } catch (error) {\n      console.log('getBinderData_error', error);\n    }\n  }\n\n  getSubBinderData(data) {\n    try {\n      api.post('api/getSubBinderData', data).then(res => {\n        if (res.success) {\n          this.setState({\n            subBinders: res.data\n          });\n        } else {\n          console.log('getBinderData_error');\n        }\n      }).catch(err => {\n        console.log('getBinderData_error', err);\n      });\n    } catch (error) {\n      console.log('getBinderData_error', error);\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  suggestBinder(event) {\n    let results = this.state.binders.filter(binderdata => {\n      var binderUMRN = binderdata.UMRN;\n      return binderUMRN.toLowerCase().startsWith(event.query.toLowerCase());\n    });\n    var binderresult = [];\n    results.forEach(res => {\n      binderresult.push(res.UMRN);\n    });\n    this.setState({\n      binderSuggestions: binderresult\n    });\n  }\n\n  suggestsubBinder(event) {\n    let results = this.state.subBinders.filter(subBinder => {\n      var subBinderTitle = subBinder.Title;\n      return subBinderTitle.toLowerCase().startsWith(event.query.toLowerCase());\n    });\n    var subBinderresult = [];\n    results.forEach(res => {\n      subBinderresult.push(res.Title);\n    });\n    this.setState({\n      subbinderSuggestions: subBinderresult\n    });\n  }\n\n  changeBinder(value) {\n    console.log(\"changeBinder >\", value);\n\n    if (CommonConfig.isEmpty(value)) {\n      this.setState({\n        selectBinderError: true,\n        binder: value\n      });\n      this.show('binder', true);\n    } else {\n      this.setState({\n        selectBinderError: false,\n        binder: value\n      });\n      this.show('binder', false);\n      let results = this.state.binders.filter(binderdata => {\n        var binderUMRN = binderdata.UMRN;\n        return binderUMRN == value;\n      });\n\n      if (results.length > 0) {\n        this.getSubBinderData(value); // var totalgross = (results[0].GrossCommission * this.state.amount) / 100;\n\n        var totalgross = results[0].GrossCommission * this.state.PolicyCurrentPremium / 100;\n        var balance = results[0].GrossCommission + this.state.agency;\n        var balanceTotal = totalgross + this.state.agencyTotal;\n        totalgross = CommonConfig.isEmpty(totalgross) ? 0 : totalgross.toFixed(2);\n        balance = CommonConfig.isEmpty(balance) ? 0 : balance.toFixed(2);\n        balanceTotal = CommonConfig.isEmpty(balanceTotal) ? 0 : balanceTotal.toFixed(2);\n        this.setState({\n          insuranceComapny: results[0].InsuranceCompanyName,\n          gross: results[0].GrossCommission,\n\n          /*subBinders: results[0].subBinderData,*/\n          adminFees: results[0].adminFees,\n          totalgross: totalgross,\n          balance: balance,\n          balanceTotal: balanceTotal\n        });\n      }\n    }\n  }\n\n  changesubBinder(value) {\n    if (CommonConfig.isEmpty(value)) {\n      this.setState({\n        subBinderError: true,\n        subBinder: value,\n        departmentDisable: false,\n        sourceDisable: false\n      });\n      this.show('subBinder', true);\n    } else {\n      let results = this.state.subBinders.filter(subbinderdata => {\n        var subBinderTitle = subbinderdata.Title;\n        return subBinderTitle == value;\n      });\n\n      if (results.length > 0) {\n        this.setState({\n          department: results[0].Type,\n          source: results[0].EntityId,\n          sourceName: results[0].EntityType,\n          departmentDisable: true,\n          sourceDisable: true\n        });\n      }\n    }\n  }\n\n  editAgencyCommission() {\n    this.setState({\n      changeAgencyCommission: !this.state.changeAgencyCommission\n    });\n  }\n\n  isGenerateRenewal() {\n    const data = {\n      policyId: this.props.match.params.id\n    };\n    api.post(APIConstant.path.isGenerateRenewal, data).then(async res => {\n      console.log('isGenerateRenewal', res.data[0].returnValue);\n\n      if (res.success) {\n        if (!CommonConfig.isEmpty(res.data[0].returnValue) && res.data[0].returnValue != 0) {\n          if (res.data[0].returnValue == 2) {\n            console.log('migratedData', 'before');\n            var IsmigratedData = await this.IsmigratedData();\n            console.log('migratedData after', IsmigratedData);\n\n            if (IsmigratedData == 0) {// console.log('migratedData', 0);\n              //   var nextBinder = await api.post(APIConstant.path.migratedData, data).then(res => {\n              //     if (res.success) {\n              //       if (res.data.returnValue == 0) {\n              //         console.log('migratedData', '01');\n              //       } else {\n              //         console.log('migratedData', '11');\n              //       }\n              //     } else {\n              //       console.log('error');\n              //     }\n              //   }).catch(err => {\n              //     console.log('error', err);\n              //   });\n              //   return nextBinder;\n            } else if (IsmigratedData == 1) {\n              let data1 = {\n                policyId: this.props.match.params.id\n              };\n              api.post(APIConstant.path.getNextBinderDetails, data1).then(res => {\n                if (res.success) {\n                  console.log('nextBinder', res);\n\n                  if (!CommonConfig.isEmpty(res.data[0].binderUMRN)) {\n                    this.setState({\n                      nextBinder: res.data[0].binderUMRN,\n                      nextInsuranceComapny: res.data[0].insuranceCompanyName,\n                      isDisplayNext: 1\n                    });\n                  } else {\n                    this.setState({\n                      isDisplayNext: 0\n                    });\n                  }\n                } else {\n                  console.log('error');\n                }\n              }).catch(err => {\n                console.log('error', err);\n              });\n            } else {}\n          }\n        }\n      } else {\n        console.log('error');\n      }\n    }).catch(err => {});\n  }\n\n  async IsmigratedData() {\n    let data = {\n      policyId: this.props.match.params.id\n    };\n    var isMigrated = await api.post(APIConstant.path.migratedData, data).then(res => {\n      if (res.success) {\n        console.log('migratedData', res.data[0]);\n        return res.data[0].returnValue;\n      } else {\n        console.log('error');\n        return -1;\n      }\n    }).catch(err => {\n      console.log('error', err);\n    });\n    return isMigrated;\n  }\n\n  selectType(value, type) {\n    if (type === 'department') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          departmentError: true,\n          department: value\n        });\n        this.show('department', true);\n      } else {\n        this.setState({\n          departmentError: false,\n          department: value\n        });\n        this.show('department', false);\n\n        if (value === 'ServiceCenter' || value === 'SubAgent') {\n          this.setState({\n            sourceDisplay: true,\n            sourceError: true\n          });\n          this.getOrganazationData(value);\n        } else {\n          this.setState({\n            sourceDisplay: false,\n            source: '',\n            sourceError: false,\n            sourceList: []\n          });\n          this.show('source', false);\n        }\n      }\n    }\n\n    if (type === 'source') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          sourceError: true,\n          source: value\n        });\n        this.show('source', true);\n      } else {\n        this.setState({\n          sourceError: false,\n          source: value.value\n        });\n        this.show('source', false);\n      }\n    }\n\n    if (type === 'awaitingDocuments') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          awaitingDocumentsError: true,\n          awaitingDocuments: value\n        });\n        this.show('awaitingDocuments', true);\n      } else {\n        this.setState({\n          awaitingDocumentsError: false,\n          awaitingDocuments: value\n        });\n        this.show('awaitingDocuments', false);\n      }\n    }\n\n    if (type === 'premiumCredits') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          premiumCreditsError: true,\n          premiumCredits: value\n        });\n        this.show('premiumCredits', true);\n      } else {\n        this.setState({\n          premiumCreditsError: false,\n          premiumCredits: value\n        });\n        this.show('premiumCredits', false);\n      }\n    }\n\n    if (type === 'thirdPartyLiability') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          thirdPartyLiabilityError: true,\n          thirdPartyLiability: value\n        });\n        this.show('thirdPartyLiability', true);\n      } else {\n        this.setState({\n          thirdPartyLiabilityError: false,\n          thirdPartyLiability: value\n        });\n        this.show('thirdPartyLiability', false);\n      }\n    }\n\n    if (type === 'racingEventType') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          racingEventTypeError: true,\n          racingEventType: value\n        });\n        this.show('racingEventType', true);\n      } else {\n        this.setState({\n          racingEventTypeError: false,\n          racingEventType: value\n        });\n        this.show('racingEventType', false);\n      }\n    }\n\n    if (type === 'crewLiability') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          crewLiabilityError: true,\n          crewLiability: value\n        });\n        this.show('crewLiability', true);\n      } else {\n        this.setState({\n          crewLiabilityError: false,\n          crewLiability: value\n        });\n        this.show('crewLiability', false);\n      }\n    }\n\n    if (type === 'governmentLavys') {\n      this.setState({\n        governmentLavys: value\n      });\n\n      if (value == \"DEFAULT\") {\n        let premium = this.state.currentPremium;\n\n        if (this.state.policyStatus == \"Active\") {\n          premium = this.state.renewalPremium == null ? 0 : this.state.renewalPremium;\n        }\n\n        let governmentLavysAmount = parseFloat(this.state.governmentLavysPercent) * parseFloat(premium) / 100;\n        this.setState({\n          governmentLavysAmount: governmentLavysAmount.toFixed(2)\n        });\n      } else if (value == \"CUSTOM\") {\n        this.setState({\n          governmentLavysAmount: 0\n        });\n      }\n    }\n\n    if (type === 'currentNCBYears') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          currentNCBYearsError: true,\n          currentNCBYears: value\n        });\n        this.show('currentNCBYears', true);\n      } else {\n        this.setState({\n          currentNCBYearsError: false,\n          currentNCBYears: value\n        });\n        this.show('currentNCBYears', false);\n      }\n    }\n  }\n\n  onRadioBtnClick(radioType, radioSelected) {\n    if (radioType === 'singleHandedSailing') {\n      this.setState({\n        singleHandedSailing: radioSelected\n      });\n    } else if (radioType === 'ratingType') {\n      if (radioSelected == 'Rating') {\n        this.setState({\n          ratingTypeValueRegex: CommonConfig.RegExp.percentage,\n          ratingTypeValue: ''\n        });\n      } else {\n        this.setState({\n          ratingTypeValueRegex: CommonConfig.RegExp.decimalWithOne,\n          ratingTypeValue: ''\n        });\n      }\n\n      this.setState({\n        ratingType: radioSelected\n      });\n    }\n  }\n\n  editEndorsements(task) {\n    console.log('renewalDate', this.state.inceptionDate);\n    console.log('renewalDate', this.state.renewalDate);\n\n    if (task === 'view') {\n      this.setState({\n        isEdit: false\n      });\n    } else {\n      // let inceptionDate = moment(this.state.inceptionDate, CommonConfig.dateFormat.dateOnly).format('YYYY-MM-DD');\n      // // let date = new Date(inceptionDate);\n      // let date = moment(inceptionDate).toISOString();\n      this.setState({\n        isEdit: true\n      }); //inceptionDate: (this.state.inceptionDate === '') ? new Date() :  new Date(date) });\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  goBack() {\n    this.getPolicyUnderwritingData();\n    this.setState({\n      isEdit: false\n    });\n  }\n\n  reset() {\n    this.setState({\n      PolicyNumber: '',\n      binder: '',\n      subBinder: '',\n      insuranceComapny: '',\n      department: '',\n      source: '',\n      awaitingDocuments: '',\n      premiumCredits: '',\n      documentLanguage: '',\n      thirdPartyLiability: '',\n      waterSkiingLiability: '',\n      waterToysLiability: '',\n      sailRacingCoverage: '',\n      racingEventType: '',\n      singleHandedSailing: 'yes',\n      crewLiability: '',\n      inceptionDate: '',\n      underWriter: '',\n      note: '',\n      gross: '',\n      totalgross: '',\n      agency: '',\n      agencyTotal: '',\n      balance: '',\n      balanceTotal: '',\n      governmentLavys: '',\n      governmentLavysPercent: '',\n      isEdit: false,\n      governmentLavysAmount: ''\n    });\n  }\n\n  validate() {\n    var errorCount = 0;\n\n    if (this.state.selectBinderError) {\n      errorCount += 1;\n      this.show(\"binder\", true);\n    }\n\n    if (this.state.subBinderError) {\n      errorCount += 1;\n      this.show(\"subBinder\", true);\n    }\n\n    if (this.state.departmentError) {\n      errorCount += 1;\n      this.show(\"department\", true);\n    }\n\n    if (this.state.sourceError) {\n      errorCount += 1;\n      this.show(\"source\", true);\n    } // if (this.state.awaitingDocumentsError) {\n    //     errorCount += 1;\n    //     this.show(\"awaitingDocuments\", true);\n    // }\n    // if (this.state.premiumCreditsError) {\n    //     errorCount += 1;\n    //     this.show(\"premiumCredits\", true);\n    // }\n\n\n    if (this.state.thirdPartyLiabilityError) {\n      errorCount += 1;\n      this.show(\"thirdPartyLiability\", true);\n    }\n\n    if (this.state.sailRacingCoverageError) {\n      errorCount += 1;\n      this.show(\"sailRacingCoverage\", true);\n    } // if (this.state.isSailRacing === true && this.state.racingEventType === '') {\n    //     errorCount += 1;\n    //     this.show(\"racingEventType\", true);\n    // }\n\n\n    if (this.state.racingEventTypeError) {\n      errorCount += 1;\n      this.show(\"racingEventType\", true);\n    }\n\n    if (this.state.crewLiabilityError) {\n      errorCount += 1;\n      this.show(\"crewLiability\", true);\n    }\n\n    if (this.state.excessError) {\n      errorCount += 1;\n      this.show(\"excess\", true);\n    }\n\n    if (this.state.ratingTypeValueError) {\n      errorCount += 1;\n      this.show(\"ratingTypeValue\", true);\n    }\n\n    if (this.state.inceptionDateError) {\n      errorCount += 1;\n    }\n\n    if (this.state.renewalDateError) {\n      errorCount += 1;\n      this.show(\"renewalDateError\", true);\n    }\n\n    if (this.state.underWriterError) {\n      errorCount += 1;\n      this.show(\"underWriter\", true);\n    } // if (this.state.noteError) {\n    //     errorCount += 1;\n    //     this.show(\"note\", true);\n    // }\n\n\n    if (this.state.grossError) {\n      errorCount += 1;\n      this.show(\"gross\", true);\n    } // if (this.state.governmentLavysError) {\n    //     errorCount += 1;\n    //     this.show(\"governmentLavys\", true);\n    // }\n    // if (this.state.governmentLavysPercentError) {\n    //     errorCount += 1;\n    //     this.show(\"governmentLavysPercent\", true);\n    // }\n\n\n    if (this.state.adminFeesError) {\n      errorCount += 1;\n      this.show(\"adminFees\", true);\n    }\n\n    if (this.state.currentNCBYearsError) {\n      errorCount += 1;\n      this.show(\"currentNCBYears\", true);\n    } // if (this.state.currentNCBAmountError) {\n    //     errorCount += 1;\n    //     this.show(\"currentNCBAmount\", true);\n    // }\n\n\n    if (errorCount == 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  editLastBindDate() {\n    this.setState({\n      isLastBindEdit: true,\n      lastBindDateError: false\n    });\n  }\n\n  editInceptionRenewalDate(InceptionOrRenewal) {\n    if (InceptionOrRenewal == 0) {\n      this.setState({\n        isInceptionEdit: true,\n        inceptionDateError: false\n      });\n    } else if (InceptionOrRenewal == 1) {\n      this.setState({\n        isRenewalEdit: true,\n        renewalDateError: false\n      });\n    }\n  }\n\n  saveLastBindDate() {\n    try {\n      if (this.state.lastBindDateError) {\n        toast.error('Please enter Last Binder Date.');\n        return false;\n      }\n\n      this.setState({\n        isLastBindEdit: false,\n        lastBindDateError: false\n      });\n      let data = {\n        PolicyId: this.state.PolicyId,\n        LastBindDate: this.state.lastBindDate,\n        loggedInUserId: CommonConfig.loggedInUserId()\n      };\n      api.post('api/updateLastBindDate', data).then(res => {\n        if (res.data.success) {\n          toast.success(res.message);\n          this.setState({\n            isLastBindEdit: false,\n            lastBindDateError: false\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  saveInceptionRenewalDate(InceptionOrRenewal) {\n    try {\n      if (InceptionOrRenewal == 0) {\n        if (this.state.inceptionDateError) {\n          toast.error('Please enter Inception Date.');\n          return false;\n        } // this.setState({ isInceptionEdit: false, inceptionDateError: false, isRenewalEdit: false, renewalDateError: false });\n\n      } else if (InceptionOrRenewal == 1) {\n        if (this.state.renewalDateError) {\n          toast.error('Please enter Renewal Date.');\n          return false;\n        } // this.setState({ isRenewalEdit: false, renewalDateError: false });   \n\n      }\n\n      let data = {\n        PolicyId: this.state.PolicyId,\n        InceptionDate: this.state.inceptionDate,\n        RenewalDate: this.state.renewalDate,\n        InceptionOrRenewal: InceptionOrRenewal,\n        loggedInUserId: CommonConfig.loggedInUserId()\n      };\n      api.post('api/updateInceptionOrRenewalDate', data).then(res => {\n        if (res.data.success) {\n          toast.success(res.message);\n          this.setState({\n            isInceptionEdit: false,\n            inceptionDateError: false,\n            isRenewalEdit: false,\n            renewalDateError: false\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  cancelLastBindDate() {\n    this.setState({\n      isLastBindEdit: false,\n      lastBindDateError: false,\n      lastBindDate: this.state.defaultLastBindDate\n    });\n  }\n\n  cancelInceptionRenewalDate(InceptionOrRenewal) {\n    if (InceptionOrRenewal == 0) {\n      this.setState({\n        isInceptionEdit: false,\n        inceptionDateError: false,\n        inceptionDate: this.state.defaultinceptionDate,\n        renewalDate: this.state.defaultrenewalDate\n      });\n    } else if (InceptionOrRenewal == 1) {\n      this.setState({\n        isRenewalEdit: false,\n        renewalDateError: false,\n        renewalDate: this.state.defaultrenewalDate\n      });\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const SaveButton = t(\"buttons.Save\");\n    const CancelButton = t(\"buttons.Cancel\");\n    const BackButton = t(\"buttons.BackToPolicy\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1459,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1460,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1461,\n        columnNumber: 21\n      }\n    }, CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) == 1 ? /*#__PURE__*/React.createElement(BTN, {\n      style: {\n        float: \"right\",\n        marginBottom: \"10px\"\n      },\n      color: \"primary\",\n      onClick: this.state.isEdit ? () => this.editEndorsements('view') : () => this.editEndorsements('edit'),\n      title: this.state.isEdit ? \"View\" : \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.isEdit ? \"fa fa-eye\" : \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 33\n      }\n    })) : null, /*#__PURE__*/React.createElement(BTN, {\n      style: {\n        float: \"right\",\n        marginRight: 5\n      },\n      color: \"primary\",\n      title: this.state.isExpand ? t(\"contactDetails:ViewPage.CollapseAll\") : t(\"contactDetails:ViewPage.ExpandAll\"),\n      onClick: this.state.isExpand ? () => this.toggleAll('collapse') : () => this.toggleAll('expand'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.isExpand ? \"fa fa-compress\" : \"fa fa-expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1473,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"PolicyDates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1477,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1478,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.toggle('PolicyDates'),\n      \"aria-expanded\": this.state.showPolicyDates,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1481,\n        columnNumber: 33\n      }\n    }, t(\"policyUnderwriting:PolicyDates#\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.showPolicyDates ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1484,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.showPolicyDates,\n      \"data-parent\": \"#PolicyDates\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1489,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1490,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1492,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1493,\n        columnNumber: 41\n      }\n    }, t(\"policyUnderwriting:Policy\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1494,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1498,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1499,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:UnderWritingPolicyNumber\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1501,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1502,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1503,\n        columnNumber: 65\n      }\n    }, this.state.PolicyNumber))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1511,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1512,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:Binder.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1514,\n        columnNumber: 57\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(AutoComplete, {\n      value: this.state.binder,\n      id: \"binder\",\n      onChange: e => this.setState({\n        binder: e.value\n      }, this.changeBinder(e.value)),\n      suggestions: this.state.binderSuggestions,\n      completeMethod: this.suggestBinder.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1519,\n        columnNumber: 69\n      }\n    }, t(\"policyUnderwriting:Binder.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1522,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 73\n      }\n    }, this.state.binder))))), this.state.isDisplayNext ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 65\n      }\n    }, \"Next Binder\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1541,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 69\n      }\n    }, this.state.nextBinder))))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1550,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1551,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1552,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1553,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:SubBinder.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1555,\n        columnNumber: 57\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1557,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(AutoComplete, {\n      id: \"subBinder\",\n      value: this.state.subBinder,\n      onChange: e => this.setState({\n        subBinder: e.value\n      }, this.changesubBinder(e.value)),\n      suggestions: this.state.subbinderSuggestions,\n      completeMethod: this.suggestsubBinder.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 69\n      }\n    }, t(\"policyUnderwriting:SubBinder.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1564,\n        columnNumber: 73\n      }\n    }, this.state.subBinder))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1571,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1573,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1574,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:InsuranceComapny.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1576,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1577,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1578,\n        columnNumber: 65\n      }\n    }, this.state.insuranceComapny))))), this.state.isDisplayNext ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1585,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1586,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 65\n      }\n    }, \"Next Insurance Company\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1591,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1592,\n        columnNumber: 69\n      }\n    }, this.state.nextInsuranceComapny))))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1599,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1600,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1601,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1602,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:Department.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 57\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1606,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"department\",\n      disabled: this.state.departmentDisable == true ? true : false,\n      id: \"department\",\n      onChange: e => this.selectType(e.target.value, 'department'),\n      value: this.state.department,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1607,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1608,\n        columnNumber: 73\n      }\n    }, t(\"policyUnderwriting:Department.defaultValue\")), this.state.departmentList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1610,\n          columnNumber: 85\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1614,\n        columnNumber: 69\n      }\n    }, t(\"policyUnderwriting:Department.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1618,\n        columnNumber: 73\n      }\n    }, this.state.departmentName))))), this.state.department == 'ServiceCenter' || this.state.department == 'SubAgent' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1626,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1628,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1629,\n        columnNumber: 65\n      }\n    }, t(\"policyUnderwriting:Source.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1631,\n        columnNumber: 61\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"source\",\n      id: \"source\",\n      options: this.state.sourceList,\n      value: this.state.source,\n      onChange: data => this.selectType(data, 'source'),\n      placeholder: t(\"policyUnderwriting:Source.defaultValue\"),\n      disabled: this.state.sourceDisable == true ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1634,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"sourceError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 73\n      }\n    }, t(\"policyUnderwriting:Source.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1650,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1651,\n        columnNumber: 77\n      }\n    }, this.state.sourceName))))) : null))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1664,\n        columnNumber: 41\n      }\n    }, t(\"policyUnderwriting:Dates\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1665,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1668,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:InceptionDate.label\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1672,\n        columnNumber: 57\n      }\n    }, this.state.isInceptionEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1674,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"inceptionDate\",\n      id: \"inceptionDate\",\n      placeholder: \"Inception Date\",\n      style: {\n        width: '50%',\n        display: \"inline-block\"\n      },\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      value: this.state.inceptionDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1675,\n        columnNumber: 69\n      }\n    }), this.state.inceptionDateError == true ? /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1689,\n        columnNumber: 73\n      }\n    }, t(\"policyUnderwriting:InceptionDate.error\")) : null, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveInceptionRenewalDate(0),\n      title: \"Save Bind Date\",\n      style: {\n        marginLeft: '10px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(BTN, {\n      color: \"danger\",\n      onClick: () => this.cancelInceptionRenewalDate(0),\n      title: \"Cancel Bind Date Change\",\n      style: {\n        marginLeft: '5px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1694,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1695,\n        columnNumber: 73\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1699,\n        columnNumber: 69\n      }\n    }, moment(this.state.inceptionDate).format('DD/MM/YYYY'), CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editInceptionRenewalDate(0),\n      title: \"Change Bind Date\",\n      style: {\n        marginLeft: '10px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1703,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1704,\n        columnNumber: 81\n      }\n    })) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1713,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1715,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:RenewDate\"), \"*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1718,\n        columnNumber: 57\n      }\n    }, this.state.isRenewalEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1720,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"renewalDate\",\n      id: \"renewalDate\",\n      placeholder: \"Renewal Date\",\n      style: {\n        width: '50%',\n        display: \"inline-block\"\n      },\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      value: this.state.renewalDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1721,\n        columnNumber: 69\n      }\n    }), this.state.renewalDateError == true ? /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1729,\n        columnNumber: 73\n      }\n    }, \"Please enter Renewal Date\") : null, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveInceptionRenewalDate(1),\n      title: \"Save Bind Date\",\n      style: {\n        marginLeft: '10px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1732,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1733,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(BTN, {\n      color: \"danger\",\n      onClick: () => this.cancelInceptionRenewalDate(1),\n      title: \"Cancel Bind Date Change\",\n      style: {\n        marginLeft: '5px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1735,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1736,\n        columnNumber: 73\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1741,\n        columnNumber: 69\n      }\n    }, moment(this.state.renewalDate).format('DD/MM/YYYY'), CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editInceptionRenewalDate(1),\n      title: \"Change Bind Date\",\n      style: {\n        marginLeft: '10px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1745,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1746,\n        columnNumber: 81\n      }\n    })) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1756,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1757,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:LastBindDate\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 57\n      }\n    }, this.state.isLastBindEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1763,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"lastBindDate\",\n      id: \"lastBindDate\",\n      placeholder: \"Last Bind Date\",\n      style: {\n        width: '50%',\n        display: \"inline-block\"\n      },\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      value: this.state.lastBindDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"lastBindDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1771,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.saveLastBindDate(),\n      title: \"Save Bind Date\",\n      style: {\n        marginLeft: '10px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1773,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(BTN, {\n      color: \"danger\",\n      onClick: () => this.cancelLastBindDate(),\n      title: \"Cancel Bind Date Change\",\n      style: {\n        marginLeft: '5px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1776,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1777,\n        columnNumber: 73\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1783,\n        columnNumber: 69\n      }\n    }, moment(this.state.lastBindDate).format('DD/MM/YYYY'), CommonConfig.isEmpty(this.state.lastBindDate) || !CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) ? null : /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editLastBindDate(),\n      title: \"Change Bind Date\",\n      style: {\n        marginLeft: '10px',\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1787,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1788,\n        columnNumber: 85\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1797,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1798,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1799,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1800,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:YearBuilt\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1802,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1804,\n        columnNumber: 65\n      }\n    }, this.state.yearBuilt))))), this.state.liabilityType != 'TPO' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1810,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1811,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1812,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1813,\n        columnNumber: 65\n      }\n    }, t(\"policyUnderwriting:SurveyDueDate\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1815,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1816,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1817,\n        columnNumber: 69\n      }\n    }, this.state.surveyDueDate ? moment(this.state.surveyDueDate).format('DD/MM/YYYY') : \"\"))))) : null)))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"PolicyOptionsAdjustments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1834,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1835,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.toggle('PolicyOptionsAdjustments'),\n      \"aria-expanded\": this.state.showPolicyOptionsAdjustments,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1838,\n        columnNumber: 33\n      }\n    }, t(\"policyUnderwriting:PolicyOptionsAdjustments#\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.showPolicyOptionsAdjustments ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1841,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.showPolicyOptionsAdjustments,\n      \"data-parent\": \"#PolicyOptionsAdjustments\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1846,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1847,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 33\n      }\n    }, this.state.PolicyType != 'MarineTrade' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1850,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 45\n      }\n    }, t(\"policyUnderwriting:PolicyOptions\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1852,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1853,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1854,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1856,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1857,\n        columnNumber: 65\n      }\n    }, t(\"policyUnderwriting:AwaitingDocuments.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1859,\n        columnNumber: 61\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1861,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"awaitingDocuments\",\n      id: \"awaitingDocuments\",\n      onChange: e => this.selectType(e.target.value, 'awaitingDocuments'),\n      value: this.state.awaitingDocuments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1862,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1863,\n        columnNumber: 77\n      }\n    }, t(\"policyUnderwriting:AwaitingDocuments.defaultValue\")), this.state.awaitingDocumentList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 89\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1869,\n        columnNumber: 73\n      }\n    }, t(\"policyUnderwriting:AwaitingDocuments.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1872,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1873,\n        columnNumber: 77\n      }\n    }, this.state.awaitingDocuments))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1880,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1881,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1882,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883,\n        columnNumber: 65\n      }\n    }, t(\"policyUnderwriting:PremiumCredits.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1885,\n        columnNumber: 61\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1887,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"premiumCredits\",\n      id: \"premiumCredits\",\n      onChange: e => this.selectType(e.target.value, 'premiumCredits'),\n      value: this.state.premiumCredits,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1888,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1889,\n        columnNumber: 77\n      }\n    }, t(\"policyUnderwriting:PremiumCredits.defaultValue\")), this.state.premiumCreditList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1891,\n          columnNumber: 89\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1895,\n        columnNumber: 73\n      }\n    }, t(\"policyUnderwriting:PremiumCredits.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1898,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1899,\n        columnNumber: 77\n      }\n    }, this.state.premiumCredits))))))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1908,\n        columnNumber: 45\n      }\n    }, \"Current NCB\"), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1909,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1910,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1911,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1912,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1913,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1914,\n        columnNumber: 65\n      }\n    }, t(\"policyGeneral:currentNCB.noofYears\"), \" *\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1916,\n        columnNumber: 61\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1918,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"currentNCBYears\",\n      id: \"currentNCBYears\",\n      onChange: e => this.selectType(e.target.value, 'currentNCBYears'),\n      value: this.state.currentNCBYears,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1919,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1920,\n        columnNumber: 77\n      }\n    }, t(\"policyGeneral:currentNCB.noofYearsDefaultValue\")), this.state.currentNCBNoofYearsList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1922,\n          columnNumber: 89\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1925,\n        columnNumber: 73\n      }\n    }, t(\"policyGeneral:currentNCB.noofYearsError\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1928,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1929,\n        columnNumber: 77\n      }\n    }, this.state.currentNCBYears))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1936,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1937,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1938,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1939,\n        columnNumber: 65\n      }\n    }, t(\"policyGeneral:currentNCB.NCBAmount\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1939,\n        columnNumber: 115\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1941,\n        columnNumber: 61\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1943,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      placeholder: t(\"policyGeneral:currentNCB.NCBAmountPlaceholder\"),\n      name: \"currentNCBAmount\",\n      id: \"currentNCBAmount\",\n      onChange: e => this.handleChange(e),\n      value: this.state.currentNCBAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1944,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1946,\n        columnNumber: 73\n      }\n    }, t(\"policyGeneral:currentNCB.NCBAmountError\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1949,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1950,\n        columnNumber: 77\n      }\n    }, this.state.currentNCBAmount)))))))) : null, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1961,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1962,\n        columnNumber: 41\n      }\n    }, t(\"policyUnderwriting:Adjustments\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1963,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1964,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1965,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1966,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1967,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1968,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:UnderWriter.label\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1968,\n        columnNumber: 113\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1970,\n        columnNumber: 57\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1972,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"underWriter\",\n      id: \"underWriter\",\n      onChange: e => this.handleChange(e),\n      value: this.state.underWriter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1973,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1975,\n        columnNumber: 69\n      }\n    }, t(\"policyUnderwriting:UnderWriter.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1978,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1979,\n        columnNumber: 73\n      }\n    }, this.state.underWriter))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1986,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1987,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1988,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1989,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:Note.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1991,\n        columnNumber: 57\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1993,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"note\",\n      id: \"note\",\n      onChange: e => this.handleChange(e),\n      maxLength: \"200\",\n      value: this.state.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1994,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1996,\n        columnNumber: 69\n      }\n    }, t(\"policyUnderwriting:Note.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1999,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2000,\n        columnNumber: 73\n      }\n    }, this.state.note))))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"LimitsAdditionalCoverCommissionFeesandLevy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2016,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2017,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2018,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.toggle('LimitsAdditionalCoverCommissionFeesandLevy'),\n      \"aria-expanded\": this.state.showLimitsAdditionalCoverCommissionFeesandLevy,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2019,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2020,\n        columnNumber: 33\n      }\n    }, t(\"policyUnderwriting:LimitsAdditionalCoverCommissionFeesandLevy#\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.showLimitsAdditionalCoverCommissionFeesandLevy ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2023,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.showLimitsAdditionalCoverCommissionFeesandLevy,\n      \"data-parent\": \"#LimitsAdditionalCoverCommissionFeesandLevy\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2028,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2029,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2030,\n        columnNumber: 33\n      }\n    }, this.state.PolicyType != 'MarineTrade' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2032,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2033,\n        columnNumber: 45\n      }\n    }, t(\"policyUnderwriting:LimitsAdditionalCover\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2034,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2035,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2036,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2037,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2038,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2039,\n        columnNumber: 65\n      }\n    }, t(\"policyUnderwriting:ThirdPartyLiability.label\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2039,\n        columnNumber: 125\n      }\n    }), \")*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2041,\n        columnNumber: 61\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2043,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"thirdPartyLiability\",\n      id: \"thirdPartyLiability\",\n      onChange: e => this.selectType(e.target.value, 'thirdPartyLiability'),\n      value: this.state.thirdPartyLiability,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2044,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2045,\n        columnNumber: 77\n      }\n    }, t(\"policyUnderwriting:ThirdPartyLiability.defaultValue\")), this.state.thirdPartyLiabilityList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2047,\n          columnNumber: 89\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2051,\n        columnNumber: 73\n      }\n    }, t(\"policyUnderwriting:ThirdPartyLiability.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2054,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2055,\n        columnNumber: 77\n      }\n    }, this.state.thirdPartyLiability))))), this.state.DisplayWater == 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2063,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2064,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2065,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2066,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2067,\n        columnNumber: 77\n      }\n    }, t(\"policyUnderwriting:WaterSkiingLiability.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2069,\n        columnNumber: 73\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2071,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isWaterSkiing\",\n      id: \"isWaterSkiing\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isWaterSkiing,\n      checked: this.state.isWaterSkiing == true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2072,\n        columnNumber: 85\n      }\n    }), this.state.isWaterSkiing ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2075,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2076,\n        columnNumber: 93\n      }\n    }, \"Amount: \", this.state.waterSkiingLiability)) : null) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2081,\n        columnNumber: 85\n      }\n    }, this.state.isWaterSkiing ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2083,\n        columnNumber: 93\n      }\n    }, \" \", this.state.waterSkiingLiability) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2091,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2092,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2093,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2094,\n        columnNumber: 77\n      }\n    }, t(\"policyUnderwriting:WaterToysLiabiility.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2096,\n        columnNumber: 73\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2098,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isWaterToys\",\n      id: \"isWaterToys\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isWaterToys,\n      checked: this.state.isWaterToys == true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099,\n        columnNumber: 85\n      }\n    }), this.state.isWaterToys ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2103,\n        columnNumber: 93\n      }\n    }, \"Amount: \", this.state.waterToysLiability)) : null) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2109,\n        columnNumber: 85\n      }\n    }, this.state.isWaterToys ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2111,\n        columnNumber: 93\n      }\n    }, this.state.waterToysLiability) : null))))) : null, this.state.DisplayRacing == 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2122,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2123,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2124,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2125,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2126,\n        columnNumber: 77\n      }\n    }, t(\"policyUnderwriting:SailRacingCoverage.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2128,\n        columnNumber: 73\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2130,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isSailRacing\",\n      id: \"isSailRacing\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isSailRacing,\n      checked: this.state.isSailRacing === true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2131,\n        columnNumber: 85\n      }\n    }), this.state.isSailRacing ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2134,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"sailRacingCoverage\",\n      id: \"sailRacingCoverage\",\n      onChange: e => this.handleChange(e),\n      value: this.state.sailRacingCoverage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2135,\n        columnNumber: 93\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2137,\n        columnNumber: 93\n      }\n    }, t(\"policyUnderwriting:SailRacingCoverage.error\"))) : null) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2142,\n        columnNumber: 85\n      }\n    }, this.state.isSailRacing ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2144,\n        columnNumber: 93\n      }\n    }, this.state.sailRacingCoverage) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2152,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2153,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2154,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2155,\n        columnNumber: 77\n      }\n    }, t(\"policyUnderwriting:RacingEventType.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2157,\n        columnNumber: 73\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2159,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"racingEventType\",\n      id: \"racingEventType\",\n      onChange: e => this.selectType(e.target.value, 'racingEventType'),\n      value: this.state.racingEventType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2160,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2161,\n        columnNumber: 89\n      }\n    }, t(\"policyUnderwriting:RacingEventType.defaultValue\")), this.state.racingEventTypeList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2163,\n          columnNumber: 101\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2167,\n        columnNumber: 85\n      }\n    }, t(\"policyUnderwriting:RacingEventType.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2170,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2171,\n        columnNumber: 89\n      }\n    }, this.state.racingEventType)))))) : null, this.state.DisplayCrew == 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2182,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2183,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2184,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2185,\n        columnNumber: 73\n      }\n    }, t(\"policyUnderwriting:CrewLiability.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2187,\n        columnNumber: 69\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2189,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"crewLiability\",\n      id: \"crewLiability\",\n      onChange: e => this.selectType(e.target.value, 'crewLiability'),\n      value: this.state.crewLiability,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2190,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2191,\n        columnNumber: 85\n      }\n    }, t(\"policyUnderwriting:CrewLiability.defaultValue\")), this.state.crewLiabilityList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2193,\n          columnNumber: 97\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2197,\n        columnNumber: 81\n      }\n    }, t(\"policyUnderwriting:CrewLiability.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2200,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2201,\n        columnNumber: 85\n      }\n    }, this.state.crewLiability))))) : null))) : null, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2234,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2235,\n        columnNumber: 41\n      }\n    }, t(\"policyUnderwriting:Commission\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2236,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2237,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2238,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2239,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2240,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2241,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:gross.label\"), \" %\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2243,\n        columnNumber: 57\n      }\n    }, this.state.isEdit && this.state.PolicyType === 'Vessel-Nonrated' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2246,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"gross\",\n      name: \"gross\",\n      id: \"gross\",\n      onChange: e => this.handleChange(e),\n      value: this.state.gross,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2249,\n        columnNumber: 69\n      }\n    })) : /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2253,\n        columnNumber: 69\n      }\n    }, this.state.gross)), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2259,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2260,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:GrossAmount\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2260,\n        columnNumber: 107\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2262,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2263,\n        columnNumber: 61\n      }\n    }, this.state.totalgross)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2268,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2269,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2270,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2271,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:agency.label\"), \" %\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2273,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2274,\n        columnNumber: 61\n      }\n    }, this.state.changeAgencyCommission ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2276,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"agency\",\n      id: \"agency\",\n      onChange: e => this.handleChange(e),\n      value: this.state.agency,\n      style: {\n        display: \"inline-block\",\n        width: \"70%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2277,\n        columnNumber: 73\n      }\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: \"70%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2281,\n        columnNumber: 73\n      }\n    }, this.state.agency), CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) == 1 ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.editAgencyCommission(),\n      title: \"Change Agency Commission\",\n      style: {\n        padding: \"1px 5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2284,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2285,\n        columnNumber: 73\n      }\n    })) : null)), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2291,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2292,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:AgencyAmount\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2292,\n        columnNumber: 108\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2294,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2295,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2296,\n        columnNumber: 65\n      }\n    }, this.state.agencyTotal))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2302,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2303,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2304,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2305,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:balance.label\"), \" %\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2307,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2308,\n        columnNumber: 61\n      }\n    }, this.state.balance)), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2310,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2311,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:BalanceAmount\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2311,\n        columnNumber: 109\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2313,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2314,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2315,\n        columnNumber: 65\n      }\n    }, this.state.balanceTotal))))))), this.state.PolicyType == 'MarineTrade' || this.state.PolicyType == 'MultiVessel' ? /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2323,\n        columnNumber: 131\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2324,\n        columnNumber: 49\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2326,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2327,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2328,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2329,\n        columnNumber: 69\n      }\n    }, this.state.PolicyType == 'MarineTrade' ? 'MarineTradePremium' : 'MultiVesselPremium')), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2331,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2332,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"MarineTradePremium\",\n      id: \"MarineTradePremium\",\n      onChange: e => this.handleChange(e),\n      value: this.state.MarineTradePremium,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2333,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"MarineTradePremiumError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2334,\n        columnNumber: 73\n      }\n    }))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2339,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2340,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2341,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2342,\n        columnNumber: 73\n      }\n    }, this.state.PolicyType == 'MarineTrade' ? 'MarineTradePremium' : 'MultiVesselPremium')), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2344,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2345,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2346,\n        columnNumber: 77\n      }\n    }, this.state.MarineTradePremium))))))) : null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2356,\n        columnNumber: 41\n      }\n    }, t(\"policyUnderwriting:FeesandLevy\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2358,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2359,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2360,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2361,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2362,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2363,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:GovtLevy.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2365,\n        columnNumber: 57\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2367,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"governmentLavys\",\n      id: \"governmentLavys\",\n      onChange: e => this.selectType(e.target.value, 'governmentLavys'),\n      value: this.state.governmentLavys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2368,\n        columnNumber: 69\n      }\n    }, this.state.govtLevyList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2371,\n          columnNumber: 85\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2375,\n        columnNumber: 69\n      }\n    }, t(\"policyUnderwriting:GovtLevy.error\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2378,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2379,\n        columnNumber: 73\n      }\n    }, this.state.governmentLavys))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2383,\n        columnNumber: 57\n      }\n    }, this.state.governmentLavys === \"DEFAULT\" ? /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2386,\n        columnNumber: 69\n      }\n    }, this.state.governmentLavysPercent, \"%\") : null), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2390,\n        columnNumber: 57\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2392,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      readOnly: this.state.governmentLavys === \"DEFAULT\" ? true : false,\n      type: \"text\",\n      name: \"governmentLavysAmount\",\n      id: \"governmentLavysAmount\",\n      onChange: e => this.handleChange(e),\n      value: this.state.governmentLavysAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2393,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"governmentLavysAmountError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2394,\n        columnNumber: 69\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2397,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2398,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2398,\n        columnNumber: 77\n      }\n    }), this.state.governmentLavysAmount))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2404,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2405,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2406,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2407,\n        columnNumber: 61\n      }\n    }, t(\"policyUnderwriting:AdminFee\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2407,\n        columnNumber: 104\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2409,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2410,\n        columnNumber: 61\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2412,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"adminFees\",\n      id: \"adminFees\",\n      onChange: e => this.handleChange(e),\n      value: this.state.adminFees,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2413,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"adminFeesError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2414,\n        columnNumber: 73\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2417,\n        columnNumber: 73\n      }\n    }, this.state.adminFees))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2421,\n        columnNumber: 57\n      }\n    }))))))))))), this.state.PolicyType != 'MarineTrade' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"RatingExcess\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2435,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2436,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2437,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.toggle('RatingExcess'),\n      \"aria-expanded\": this.state.showRatingExcess,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2438,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2439,\n        columnNumber: 37\n      }\n    }, t(\"policyUnderwriting:RatingExcess#\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.showRatingExcess ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2442,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.showRatingExcess,\n      \"data-parent\": \"#RatingExcess\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2447,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2448,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2449,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2450,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2451,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2452,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2453,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2454,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2455,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2456,\n        columnNumber: 65\n      }\n    }, t(\"policyUnderwriting:RatingType\"), \" *\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2458,\n        columnNumber: 61\n      }\n    }, this.state.isEdit && this.state.PolicyType === 'VesselNonrated' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2460,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2461,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2462,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      id: \"ratingType\",\n      name: \"ratingType\",\n      checked: this.state.ratingType === 'Rating' ? true : false,\n      value: this.state.ratingType,\n      onChange: () => this.onRadioBtnClick('ratingType', 'Rating'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2463,\n        columnNumber: 81\n      }\n    }), t(\"policyUnderwriting:Rating\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2469,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"radio\",\n      id: \"ratingType\",\n      name: \"ratingType\",\n      checked: this.state.ratingType === 'Absolute' ? true : false,\n      value: this.state.ratingType,\n      onChange: () => this.onRadioBtnClick('ratingType', 'Absolute'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2470,\n        columnNumber: 81\n      }\n    }), t(\"policyUnderwriting:Absolute\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2477,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2478,\n        columnNumber: 77\n      }\n    }, this.state.ratingType))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2482,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2483,\n        columnNumber: 65\n      }\n    }, this.state.ratingType)), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2485,\n        columnNumber: 61\n      }\n    }, this.state.isEdit && this.state.PolicyType === 'VesselNonrated' ? /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2487,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"ratingTypeValue\",\n      id: \"ratingTypeValue\",\n      onChange: e => this.handleChange(e),\n      value: this.state.ratingTypeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2488,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"ratingTypeValueError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2489,\n        columnNumber: 73\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2491,\n        columnNumber: 72\n      }\n    }, this.state.ratingTypeValue)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2496,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2497,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2498,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2499,\n        columnNumber: 65\n      }\n    }, t(\"policyUnderwriting:Excess.label\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2499,\n        columnNumber: 112\n      }\n    }), \") *\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2501,\n        columnNumber: 61\n      }\n    }, this.state.isEdit && this.state.PolicyType === 'VesselNonrated' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2503,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"excess\",\n      id: \"excess\",\n      onChange: e => this.handleChange(e),\n      value: this.state.excess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2504,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"excessError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2506,\n        columnNumber: 73\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2509,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2510,\n        columnNumber: 77\n      }\n    }, this.state.excess))))))))))))) : null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2526,\n        columnNumber: 17\n      }\n    }, this.state.isEdit ? /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2528,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2529,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        marginRight: \"10px\"\n      },\n      className: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2530,\n        columnNumber: 33\n      }\n    }), BackButton), /*#__PURE__*/React.createElement(BTN, {\n      style: {\n        marginLeft: \"10px\"\n      },\n      color: \"success\",\n      onClick: () => this.Save(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2534,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        marginRight: \"10px\"\n      },\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2535,\n        columnNumber: 33\n      }\n    }), SaveButton), /*#__PURE__*/React.createElement(BTN, {\n      style: {\n        marginLeft: \"10px\"\n      },\n      color: \"primary\",\n      onClick: () => this.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2539,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        marginRight: \"10px\"\n      },\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2540,\n        columnNumber: 33\n      }\n    }), CancelButton)) : null));\n  }\n\n}\n\nexport default withTranslation()(Underwriting);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/Underwriting.js"],"names":["React","Component","Select","AutoComplete","Col","Row","Container","Form","Input","Card","CardBody","Collapse","Button","BTN","CardHeader","api","toast","withTranslation","APIConstant","CommonConfig","DatePicker","moment","date","number","Underwriting","constructor","props","handleChange","e","setState","target","name","value","isEmpty","inceptionDateError","show","console","log","renewalDate","add","format","inceptionDate","renewalDateError","lastBindDateError","lastBindDate","noteError","note","RegExp","allowAllWithSpace","test","length","checked","waterSkiingLiability","state","waterSkiingLiabilityAmount","isWaterSkiing","waterToysLiability","waterToysLiabilityAmount","isWaterToys","sailRacingCoverage","sailRacingCoverageAmount","isSailRacing","sailRacingCoverageError","Number","maxPolicyAmount","percentage","GrossError","gross","excessError","decimalRegEx","decimalWithOne","excess","adminFeesError","adminFees","underWriterError","underWriter","decimalWithNegative","MarineTradePremiumError","MarineTradePremium","ratingTypeValueError","ratingTypeValueRegex","ratingTypeValue","governmentLavysAmountError","governmentLavysAmount","currentNCBAmountError","currentNCBAmount","agencyError","totalagency","PolicyCurrentPremium","balance","parseFloat","balanceTotal","totalgross","toFixed","agency","agencyTotal","Save","validate","binderResults","binders","filter","binderdata","binderUMRN","UMRN","binder","subBinderResults","subBinders","subbinderdata","subBinderTitle","Title","subBinder","data","PolicyId","PolicyUnderwritingId","PolicyInsuredAmountId","BinderId","SubBinderId","undefined","InsuranceCompanyId","Department","department","SourceId","source","InceptionDate","dateFormat","dbDateTime","RenewalDate","IsAwaitingDocument","awaitingDocuments","IsPremiumCredit","premiumCredits","UnderwriterAmount","UnderwriterNote","ThirdPartyLiabilityAmount","thirdPartyLiability","WaterSkiingLiabilityAmount","WaterToysLiabilityAmount","SailRacingCoverageAmount","RacingEventType","racingEventType","CrewLiability","crewLiability","GovtLevyType","governmentLavys","GovtLevyPercent","governmentLavysPercent","GovtLevyAmount","GrossCommisionPercent","AgencyCommissionPercent","AdminFeeAmount","ExcessAmount","RatingType","ratingType","RatingTypeAmount","CurrentNCBYears","currentNCBYears","CurrentNCBAmount","PolicyGeneralId","SortOrder","LanguageId","Status","loggedInUserId","post","then","res","success","firstRes","secondData","policyId","match","params","id","CurrentUser","fourthData","IsRenewal","returnValue","message","editEndorsements","setTimeout","window","location","reload","error","catch","err","toggleAll","toggleType","showRatingExcess","showLimitsAdditionalCoverCommissionFeesandLevy","showPolicyOptionsAdjustments","showPolicyDates","isExpand","toggle","type","showBinderDetails","PolicyCountry","i18n","language","PolicyType","departmentList","sourceList","sourceDisplay","awaitingDocumentList","premiumCreditList","thirdPartyLiabilityList","racingEventTypeList","crewLiabilityList","govtLevyList","currentNCBNoofYearsList","currentNCBYearsError","amount","binderSuggestions","selectBinderError","subBinderError","subbinderSuggestions","insuranceComapny","nextBinder","nextInsuranceComapny","isDisplayNext","departmentError","sourceError","awaitingDocumentsError","premiumCreditsError","liabilityType","thirdPartyLiabilityError","racingEventTypeError","crewLiabilityError","isInceptionEdit","isRenewalEdit","defaultLastBindDate","isLastBindEdit","yearBuilt","lastSurveyDate","surveyDueDate","grossError","changeAgencyCommission","governmentLavysError","governmentLavysPercentError","isEdit","currentPremium","renewalPremium","policyStatus","DisplayWater","DisplayRacing","DisplayCrew","CurrencySymbol","componentDidMount","Object","keys","status","PolicyPremium","getPolicyPremium","getBinderData","getDropDownValues","getPolicyUnderwritingData","getSysConfigValue","IsmigratedData","isGenerateRenewal","TotalPremium","key","SysValue","stringMapType","setStateName","orderBy","stringmaptype","orderby","path","dropdownbycode","PolicyUnderwritingData","dt","SurveyDueDate","Date","LastBindDate","vesselClass","VesselClassName","DisplayCondition","ShowHideLimitAdditionalFields","displayWater","displayRacing","displayCrew","vesselType","VesselTypeName","agencyPercent","agencyAmount","PolicyNumber","insuranceComapnyId","InsuranceComapnyId","InsuranceCompanyName","departmentName","DepartmentName","departmentDisable","sourceDisable","sourceName","SourceName","LiabilityType","PolicyInsuredAmount","YearBuilt","LastSurveyDate","dateOnly","defaultinceptionDate","defaultrenewalDate","CurrentPremium","RenewalPremium","subBinderData","NonRatableRatingType","NonRatableRateAmount","CurrentNCBYear","getOrganazationData","getWaterSkiiAndWaterToys","WaterSkiingLiability","WaterToysLiabiility","getSubBinderData","ContactType","formattedData","i","push","label","OrganizationName","OrganizationId","suggestBinder","event","results","toLowerCase","startsWith","query","binderresult","forEach","suggestsubBinder","subBinderresult","changeBinder","GrossCommission","changesubBinder","Type","EntityId","EntityType","editAgencyCommission","data1","getNextBinderDetails","insuranceCompanyName","isMigrated","migratedData","selectType","premium","onRadioBtnClick","radioType","radioSelected","singleHandedSailing","task","field","condition","errorField","document","getElementById","className","innerHTML","goBack","reset","documentLanguage","errorCount","editLastBindDate","editInceptionRenewalDate","InceptionOrRenewal","saveLastBindDate","saveInceptionRenewalDate","cancelLastBindDate","cancelInceptionRenewalDate","render","t","SaveButton","CancelButton","BackButton","ShowHideActionOnPolicyStatus","float","marginBottom","marginRight","width","bind","map","ct","StringMapKey","StringMapName","padding","display","marginLeft","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\nimport { Col, Row, Container, Form, Input, Card, CardBody, Collapse, Button as BTN, CardHeader } from 'reactstrap';\r\nimport api from '../../utils/apiClient';\r\nimport { toast } from 'react-toastify';\r\nimport { withTranslation } from 'react-i18next';\r\nimport APIConstant from '../../utils/constants';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport DatePicker from 'react-date-picker';\r\nimport moment from 'moment';\r\nimport { date } from 'yup';\r\nimport { number } from 'prop-types';\r\n\r\nclass Underwriting extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            PolicyCountry: this.props.PolicyCountry,\r\n            PolicyId: this.props.match.params.id,\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            PolicyType: '',\r\n            departmentList: [],\r\n            sourceList: [],\r\n            sourceDisplay: false,\r\n            awaitingDocumentList: [],\r\n            premiumCreditList: [],\r\n            thirdPartyLiabilityList: [],\r\n            racingEventTypeList: [],\r\n            crewLiabilityList: [],\r\n            govtLevyList: [],\r\n            binders: [],\r\n            subBinders: [],\r\n            currentNCBNoofYearsList: [],\r\n\r\n            showPolicyDates: false,\r\n            showPolicyOptionsAdjustments: false,\r\n            showLimitsAdditionalCoverCommissionFeesandLevy: false,\r\n            showRatingExcess: false,\r\n\r\n            currentNCBYears: \"\",\r\n            currentNCBYearsError: true,\r\n\r\n            currentNCBAmount: 0,\r\n            currentNCBAmountError: true,\r\n\r\n            PolicyGeneralId: '',\r\n\r\n            amount: 100,\r\n            binder: '',\r\n            binderSuggestions: null,\r\n            selectBinderError: true,\r\n            subBinder: '',\r\n            subBinderError: false,\r\n            subbinderSuggestions: null,\r\n            insuranceComapny: '',\r\n            nextBinder: '',\r\n            nextInsuranceComapny: '',\r\n            isDisplayNext: 0,\r\n            department: '',\r\n            departmentError: false,\r\n            source: '',\r\n            sourceError: false,\r\n            awaitingDocuments: '',\r\n            awaitingDocumentsError: false,\r\n            premiumCredits: '',\r\n            premiumCreditsError: false,\r\n            liabilityType: '',\r\n            thirdPartyLiability: '',\r\n            thirdPartyLiabilityError: false,\r\n            isWaterSkiing: false,\r\n            waterSkiingLiability: '',\r\n            isWaterToys: false,\r\n            waterToysLiability: '',\r\n            isSailRacing: false,\r\n            sailRacingCoverage: '',\r\n            sailRacingCoverageError: false,\r\n            racingEventType: '',\r\n            racingEventTypeError: false,\r\n            crewLiability: '',\r\n            crewLiabilityError: false,\r\n            excess: '',\r\n            excessError: false,\r\n            inceptionDate: '',\r\n            inceptionDateError: true,\r\n            isInceptionEdit: false,\r\n            renewalDate: '',\r\n            renewalDateError: true,\r\n            isRenewalEdit: false,\r\n            lastBindDate: '',\r\n            defaultLastBindDate: '',\r\n            isLastBindEdit: false,\r\n            lastBindDateError: '',\r\n            yearBuilt: '',\r\n            lastSurveyDate: '',\r\n            surveyDueDate: '',\r\n            underWriter: '',\r\n            underWriterError: false,\r\n            note: '',\r\n            noteError: false,\r\n            gross: '',\r\n            grossError: false,\r\n            totalgross: '',\r\n            agency: '',\r\n            agencyError: false,\r\n            changeAgencyCommission: false,\r\n            agencyTotal: '',\r\n            balance: '',\r\n            balanceTotal: '',\r\n            governmentLavys: '',\r\n            governmentLavysError: false,\r\n            governmentLavysPercent: '',\r\n            governmentLavysPercentError: false,\r\n            governmentLavysAmount: '',\r\n            governmentLavysAmountError: false,\r\n            adminFees: '',\r\n            adminFeesError: false,\r\n            ratingType: '',\r\n            ratingTypeValue: '',\r\n            ratingTypeValueError: false,\r\n\r\n            ratingTypeValueRegex: '',\r\n\r\n            isEdit: false,\r\n            currentPremium: 0,\r\n            renewalPremium: 0,\r\n            policyStatus: '',\r\n\r\n            isExpand: false,\r\n            maxPolicyAmount: 0,\r\n\r\n            DisplayWater: 0,\r\n            DisplayRacing: 0,\r\n            DisplayCrew: 0,\r\n            CurrencySymbol: '',\r\n\r\n            MarineTradePremium: '',\r\n            MarineTradePremiumError: false,\r\n\r\n            PolicyCurrentPremium: 0,\r\n\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n            this.setState({ policyStatus: this.props.status, CurrencySymbol: this.props.CurrencySymbol });\r\n        }\r\n        console.log(\"componentDidMount\", this.props.CurrencySymbol);\r\n        var PolicyPremium = await this.getPolicyPremium();\r\n        this.getBinderData();\r\n\r\n        this.getDropDownValues('POLICYDEPARTMENT', 'departmentList', 'StringMapName');\r\n        // this.getDropDownValues('POLICYSOURCE', 'sourceList');\r\n        this.getDropDownValues('AWAITINGDOCUMENT', 'awaitingDocumentList', 'StringMapName');\r\n        this.getDropDownValues('PREMIUMCREDIT', 'premiumCreditList', 'StringMapName');\r\n        this.getDropDownValues('RACINGEVENTTYPE', 'racingEventTypeList', 'StringMapName');\r\n        this.getDropDownValues('CREWLIABILITY', 'crewLiabilityList', 'SortOrder');\r\n        this.getDropDownValues('GOVTLEVY', 'govtLevyList');\r\n        this.getDropDownValues('CURRENTNCBYEARS', 'currentNCBNoofYearsList');\r\n\r\n        if (this.state.PolicyCountry == \"Spain\") {\r\n            this.getDropDownValues('THIRDPARTYLIABILITYSPAIN', 'thirdPartyLiabilityList', 'SortOrder');\r\n        } else {\r\n            this.getDropDownValues('THIRDPARTYLIABILITY', 'thirdPartyLiabilityList', 'SortOrder');\r\n        }\r\n\r\n        this.getPolicyUnderwritingData();\r\n        this.getSysConfigValue();\r\n        this.setState({ awaitingDocuments: 'No', IsPremiumCredit: 'No' });\r\n        this.IsmigratedData();\r\n        this.isGenerateRenewal();\r\n\r\n    }\r\n\r\n    async getPolicyPremium() {\r\n        try {\r\n            let data = {\r\n                PolicyId: this.props.match.params.id,\r\n                LanguageId: this.state.LanguageId\r\n            };\r\n            var PolicyPremium = await api.post('api/getPolicyPremium', data).then(res => {\r\n                console.log(\"PolicyCurrentPremium\", res);\r\n                if (res.success) {\r\n                    this.setState({ PolicyCurrentPremium: res.data[0][0].TotalPremium });\r\n                    return 1;\r\n                } else {\r\n                    console.log(\"something error\");\r\n                    return 1;\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n                return 1;\r\n            });\r\n            return PolicyPremium;\r\n        } catch (error) {\r\n            console.log(\"erroreeee\", error);\r\n        }\r\n    }\r\n\r\n    getSysConfigValue() {\r\n        try {\r\n            api.post('api/getSystemConfigByKey', { key: 'PolicyVesselAmount' }).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ maxPolicyAmount: res.data[0].SysValue });\r\n                } else {\r\n                    console.log(\"something error\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"erroreeee\", error);\r\n        }\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"errrr\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"asfsdg\", error);\r\n        }\r\n    }\r\n\r\n    getPolicyUnderwritingData() {\r\n        try {\r\n            let data = {\r\n                PolicyId: this.props.match.params.id,\r\n                LanguageId: this.state.LanguageId\r\n            }; //'bef076c0-2ea5-11ea-a563-fa163eb9754c' };\r\n            api.post('api/getPolicyUnderwritingData', data).then(res => {\r\n                debugger;\r\n                console.log(\"underwriting\", res.data);\r\n                console.log(\"PolicyCurrentPremium\", this.state.PolicyCurrentPremium);\r\n                if (res.success) {\r\n                    let PolicyUnderwritingData = res.data[0];\r\n\r\n                    let InceptionDate;\r\n                    if (CommonConfig.isEmpty(PolicyUnderwritingData[0].InceptionDate)) {\r\n                        InceptionDate = '';\r\n                        this.setState({ inceptionDateError: true });\r\n                    } else {\r\n                        let dt = moment(PolicyUnderwritingData[0].InceptionDate).format('YYYY-MM-DD');\r\n                        InceptionDate = (dt === 'Invalid date') ? '' : dt;\r\n                        this.setState({ inceptionDateError: false });\r\n                    }\r\n                    let SurveyDueDate;\r\n                    if (CommonConfig.isEmpty(PolicyUnderwritingData[0].SurveyDueDate)) {\r\n                        SurveyDueDate = '';\r\n                    } else {\r\n                        let dt = moment(PolicyUnderwritingData[0].SurveyDueDate).format('YYYY-MM-DD');\r\n                        SurveyDueDate = (dt === 'Invalid date') ? '' : new Date(dt);\r\n                    }\r\n\r\n                    let RenewalDate;\r\n                    if (CommonConfig.isEmpty(PolicyUnderwritingData[0].RenewalDate)) {\r\n                        RenewalDate = '';\r\n                    } else {\r\n                        let dt = moment(PolicyUnderwritingData[0].RenewalDate).format('YYYY-MM-DD');\r\n                        RenewalDate = (dt === 'Invalid date') ? '' : dt;\r\n                    }\r\n                    console.log('PolicyUnderwritingData[0].RenewalDate', PolicyUnderwritingData[0].RenewalDate);\r\n\r\n                    let LastBindDate;\r\n                    if (CommonConfig.isEmpty(PolicyUnderwritingData[0].LastBindDate)) {\r\n                        LastBindDate = '';\r\n                    } else {\r\n                        let dt = moment(PolicyUnderwritingData[0].LastBindDate).format('YYYY-MM-DD');\r\n                        LastBindDate = (dt === 'Invalid date') ? '' : dt;\r\n                    }\r\n\r\n                    let vesselClass = PolicyUnderwritingData[0].VesselClassName\r\n\r\n                    let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(vesselClass);\r\n                    this.setState({\r\n                        DisplayWater: DisplayCondition.displayWater,\r\n                        DisplayRacing: DisplayCondition.displayRacing,\r\n                        DisplayCrew: DisplayCondition.displayCrew\r\n                    })\r\n\r\n                    if (vesselClass == 'Yacht' || vesselClass == 'Vela') {\r\n\r\n                        let vesselType = PolicyUnderwritingData[0].VesselTypeName\r\n\r\n                        let DisplayCondition = CommonConfig.ShowHideLimitAdditionalFields(vesselType);\r\n                        this.setState({\r\n                            DisplayWater: DisplayCondition.displayWater,\r\n                            DisplayRacing: DisplayCondition.displayRacing,\r\n                            DisplayCrew: DisplayCondition.displayCrew\r\n                        })\r\n                    }\r\n\r\n                    // Initialize Agency value\r\n                    // let currentPremium = parseFloat(PolicyUnderwritingData[0].CurrentPremium);\r\n                    console.log(\"PolicyCurrentPremium - IN\", this.state.PolicyCurrentPremium);\r\n                    let currentPremium = parseFloat(this.state.PolicyCurrentPremium); // Changed on 15-05-2020 by Rajendra\r\n                    let agencyPercent = (PolicyUnderwritingData[0].AgencyCommissionPercent) ? parseFloat(PolicyUnderwritingData[0].AgencyCommissionPercent) : 0;\r\n                    let agencyAmount = (agencyPercent * currentPremium) / 100;\r\n\r\n                    // Initialize gross value\r\n                    let gross = parseFloat(PolicyUnderwritingData[0].GrossCommisionPercent);\r\n                    let totalgross = (gross * currentPremium) / 100;\r\n\r\n                    // Initialize balance value\r\n                    let balance = parseFloat(gross) - parseFloat(agencyPercent);\r\n                    let balanceTotal = parseFloat(totalgross) - parseFloat(agencyAmount);\r\n                    // let source = { label: PolicyUnderwritingData[0].SourceName, value: PolicyUnderwritingData[0].SourceId };\r\n                    var source = PolicyUnderwritingData[0].SourceId;\r\n                    console.log('(PolicyUnderwritingData[0].Department ===', (PolicyUnderwritingData[0].Department === 'ServiceCenter' || PolicyUnderwritingData[0].Department === 'SubAgent'));\r\n                    console.log(PolicyUnderwritingData[0].Department);\r\n\r\n                    this.setState({\r\n                        PolicyNumber: PolicyUnderwritingData[0].PolicyNumber,\r\n                        PolicyUnderwritingId: PolicyUnderwritingData[0].PolicyUnderwritingId,\r\n                        PolicyInsuredAmountId: PolicyUnderwritingData[0].PolicyInsuredAmountId,\r\n                        binder: PolicyUnderwritingData[0].UMRN,\r\n                        subBinder: PolicyUnderwritingData[0].Title,\r\n                        insuranceComapnyId: PolicyUnderwritingData[0].InsuranceComapnyId,\r\n                        insuranceComapny: PolicyUnderwritingData[0].InsuranceCompanyName,\r\n                        department: PolicyUnderwritingData[0].Department,\r\n                        departmentName: PolicyUnderwritingData[0].DepartmentName,\r\n                        departmentDisable: (PolicyUnderwritingData[0].Title) ? true : false,\r\n                        source: source,\r\n                        sourceDisable: (PolicyUnderwritingData[0].Title) ? true : false,\r\n                        sourceName: PolicyUnderwritingData[0].SourceName,\r\n                        sourceError: (PolicyUnderwritingData[0].Department === 'ServiceCenter' || PolicyUnderwritingData[0].Department === 'SubAgent') ? CommonConfig.isEmpty(PolicyUnderwritingData[0].SourceName) : false,\r\n                        awaitingDocuments: CommonConfig.isEmpty(PolicyUnderwritingData[0].IsAwaitingDocument) ? 'No' : PolicyUnderwritingData[0].IsAwaitingDocument.data[0] == 1 ? \"Yes\" : \"No\",\r\n                        premiumCredits: CommonConfig.isEmpty(PolicyUnderwritingData[0].IsPremiumCredit) ? 'No' : PolicyUnderwritingData[0].IsPremiumCredit.data[0] == 1 ? \"Yes\" : \"No\",\r\n                        liabilityType: PolicyUnderwritingData[0].LiabilityType,\r\n                        PolicyInsuredAmount: PolicyUnderwritingData[0].InsuranceCompanyName,\r\n                        thirdPartyLiability: PolicyUnderwritingData[0].ThirdPartyLiabilityAmount,\r\n                        isWaterSkiing: (CommonConfig.isEmpty(PolicyUnderwritingData[0].WaterSkiingLiabilityAmount) || PolicyUnderwritingData[0].WaterSkiingLiabilityAmount == 0) ? false : true,\r\n                        waterSkiingLiability: PolicyUnderwritingData[0].WaterSkiingLiabilityAmount,\r\n                        waterSkiingLiabilityAmount: PolicyUnderwritingData[0].WaterSkiingLiabilityAmount,\r\n                        isWaterToys: (CommonConfig.isEmpty(PolicyUnderwritingData[0].WaterToysLiabilityAmount) || PolicyUnderwritingData[0].WaterToysLiabilityAmount == 0) ? false : true,\r\n                        waterToysLiability: PolicyUnderwritingData[0].WaterToysLiabilityAmount,\r\n                        waterToysLiabilityAmount: PolicyUnderwritingData[0].WaterToysLiabilityAmount,\r\n                        isSailRacing: (CommonConfig.isEmpty(PolicyUnderwritingData[0].SailRacingCoverageAmount) || PolicyUnderwritingData[0].SailRacingCoverageAmount == 0) ? false : true,\r\n                        sailRacingCoverage: PolicyUnderwritingData[0].SailRacingCoverageAmount,\r\n                        sailRacingCoverageAmount: PolicyUnderwritingData[0].SailRacingCoverageAmount,\r\n                        racingEventType: PolicyUnderwritingData[0].RacingEventType,\r\n                        crewLiability: PolicyUnderwritingData[0].CrewLiability,\r\n                        MarineTradePremium: PolicyUnderwritingData[0].MarineTradePremium ? PolicyUnderwritingData[0].MarineTradePremium : '',\r\n                        // inceptionDate: moment(PolicyUnderwritingData[0].InceptionDate).format(CommonConfig.dateFormat.dateOnly),\r\n                        // renewalDate: moment(PolicyUnderwritingData[0].RenewalDate).format(CommonConfig.dateFormat.dateOnly),\r\n                        // lastBindDate: moment(PolicyUnderwritingData[0].LastBindDate).format(CommonConfig.dateFormat.dateOnly),\r\n                        yearBuilt: PolicyUnderwritingData[0].YearBuilt,\r\n                        lastSurveyDate: CommonConfig.isEmpty(moment(PolicyUnderwritingData[0].LastSurveyDate)) ? moment(PolicyUnderwritingData[0].LastSurveyDate).format(CommonConfig.dateFormat.dateOnly) : '',\r\n                        surveyDueDate: SurveyDueDate,\r\n                        defaultinceptionDate: InceptionDate,\r\n                        inceptionDate: InceptionDate,\r\n                        defaultrenewalDate: RenewalDate,\r\n                        renewalDate: RenewalDate,\r\n                        renewalDateError: CommonConfig.isEmpty(RenewalDate),\r\n                        defaultLastBindDate: LastBindDate,\r\n                        lastBindDate: LastBindDate,\r\n                        underWriter: PolicyUnderwritingData[0].UnderwriterAmount,\r\n                        currentPremium: PolicyUnderwritingData[0].CurrentPremium,\r\n                        renewalPremium: PolicyUnderwritingData[0].RenewalPremium,\r\n                        policyStatus: PolicyUnderwritingData[0].Status,\r\n\r\n                        note: PolicyUnderwritingData[0].UnderwriterNote,\r\n                        gross: gross.toFixed(2),\r\n                        totalgross: totalgross.toFixed(2),\r\n                        agency: agencyPercent.toFixed(2),\r\n                        agencyTotal: agencyAmount.toFixed(2),\r\n                        balance: balance.toFixed(2),\r\n                        balanceTotal: balanceTotal.toFixed(2),\r\n\r\n                        governmentLavys: (PolicyUnderwritingData[0].GovtLevyType == \"CUSTOM\") ? 'CUSTOM' : 'DEFAULT',\r\n                        governmentLavysPercent: PolicyUnderwritingData[0].GovtLevyPercent,\r\n                        governmentLavysAmount: PolicyUnderwritingData[0].GovtLevyAmount,\r\n                        adminFees: PolicyUnderwritingData[0].AdminFeeAmount,\r\n\r\n                        excess: PolicyUnderwritingData[0].ExcessAmount,\r\n                        subBinders: PolicyUnderwritingData[0].subBinderData,\r\n\r\n                        ratingType: PolicyUnderwritingData[0].NonRatableRatingType,\r\n                        ratingTypeValueRegex: (PolicyUnderwritingData[0].NonRatableRatingType == 'Rating') ? CommonConfig.RegExp.percentage : CommonConfig.RegExp.decimalWithOne,\r\n                        ratingTypeValue: PolicyUnderwritingData[0].NonRatableRateAmount,\r\n                        PolicyType: PolicyUnderwritingData[0].PolicyType,\r\n                        currentNCBAmount: (CommonConfig.isEmpty(PolicyUnderwritingData[0].CurrentNCBAmount) ? '' : PolicyUnderwritingData[0].CurrentNCBAmount),\r\n                        currentNCBYears: PolicyUnderwritingData[0].CurrentNCBYear,\r\n                        PolicyGeneralId: PolicyUnderwritingData[0].PolicyGeneralId,\r\n                        currentNCBAmountError: CommonConfig.isEmpty(PolicyUnderwritingData[0].CurrentNCBAmount) ? true : false,\r\n                        currentNCBYearsError: CommonConfig.isEmpty(PolicyUnderwritingData[0].CurrentNCBYear) ? true : false,\r\n                        // inceptionDateError: (PolicyUnderwritingData[0].InceptionDate != '' || PolicyUnderwritingData[0].InceptionDate != null || PolicyUnderwritingData[0].InceptionDate != undefined) ? false : true,\r\n                        // selectBinderError: (PolicyUnderwritingData[0].BinderId != '' || PolicyUnderwritingData[0].BinderId != null || PolicyUnderwritingData[0].BinderId != undefined) ? false : true\r\n                        selectBinderError: CommonConfig.isEmpty(PolicyUnderwritingData[0].BinderId) ? true : false\r\n                    });\r\n                    this.getOrganazationData(this.state.department);\r\n                    this.getWaterSkiiAndWaterToys();\r\n                } else {\r\n                    console.log('getPolicyUnderwritingData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getPolicyUnderwritingData_error', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getPolicyUnderwritingData_error', error);\r\n        }\r\n    }\r\n\r\n    getWaterSkiiAndWaterToys() {\r\n        api.post('api/getWaterSkiiAndWaterToys').then(res => {\r\n            if (res.success) {\r\n                this.setState({ waterSkiingLiabilityAmount: res.data[0].WaterSkiingLiability, waterToysLiabilityAmount: res.data[0].WaterToysLiabiility });\r\n\r\n                if (this.state.isWaterSkiing) {\r\n                    this.setState({ waterSkiingLiability: res.data[0].WaterSkiingLiability });\r\n                }\r\n                if (this.state.isWaterToys) {\r\n                    this.setState({ waterToysLiability: res.data[0].WaterToysLiabiility });\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"error\", err);\r\n        });\r\n    }\r\n\r\n    getBinderData() {\r\n        try {\r\n            let data = {};\r\n            api.post('api/getBinder', data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ binders: res.data });\r\n                } else {\r\n                    console.log('getBinderData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getBinderData_error', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getBinderData_error', error);\r\n        }\r\n    }\r\n\r\n    getSubBinderData(data) {\r\n        try {\r\n            api.post('api/getSubBinderData', data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ subBinders: res.data });\r\n                } else {\r\n                    console.log('getBinderData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getBinderData_error', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getBinderData_error', error);\r\n        }\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    suggestBinder(event) {\r\n        let results = this.state.binders.filter((binderdata) => {\r\n            var binderUMRN = binderdata.UMRN;\r\n            return binderUMRN.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n        var binderresult = [];\r\n        results.forEach(res => {\r\n            binderresult.push(res.UMRN);\r\n        });\r\n        this.setState({ binderSuggestions: binderresult });\r\n    }\r\n\r\n    suggestsubBinder(event) {\r\n        let results = this.state.subBinders.filter((subBinder) => {\r\n            var subBinderTitle = subBinder.Title;\r\n            return subBinderTitle.toLowerCase().startsWith(event.query.toLowerCase());\r\n        });\r\n        var subBinderresult = [];\r\n        results.forEach(res => {\r\n            subBinderresult.push(res.Title);\r\n        });\r\n        this.setState({ subbinderSuggestions: subBinderresult });\r\n    }\r\n\r\n    changeBinder(value) {\r\n        console.log(\"changeBinder >\", value);\r\n        if (CommonConfig.isEmpty(value)) {\r\n            this.setState({ selectBinderError: true, binder: value });\r\n            this.show('binder', true);\r\n        } else {\r\n            this.setState({ selectBinderError: false, binder: value });\r\n            this.show('binder', false);\r\n            let results = this.state.binders.filter((binderdata) => {\r\n                var binderUMRN = binderdata.UMRN;\r\n                return binderUMRN == value;\r\n            });\r\n            if (results.length > 0) {\r\n                this.getSubBinderData(value);\r\n                // var totalgross = (results[0].GrossCommission * this.state.amount) / 100;\r\n                var totalgross = (results[0].GrossCommission * this.state.PolicyCurrentPremium) / 100;\r\n                var balance = results[0].GrossCommission + this.state.agency;\r\n                var balanceTotal = totalgross + this.state.agencyTotal;\r\n                totalgross = CommonConfig.isEmpty(totalgross) ? 0 : totalgross.toFixed(2);\r\n                balance = CommonConfig.isEmpty(balance) ? 0 : balance.toFixed(2);\r\n                balanceTotal = CommonConfig.isEmpty(balanceTotal) ? 0 : balanceTotal.toFixed(2);\r\n                this.setState({ insuranceComapny: results[0].InsuranceCompanyName, gross: results[0].GrossCommission, /*subBinders: results[0].subBinderData,*/ adminFees: results[0].adminFees, totalgross: totalgross, balance: balance, balanceTotal: balanceTotal })\r\n            }\r\n        }\r\n    }\r\n\r\n    changesubBinder(value) {\r\n        if (CommonConfig.isEmpty(value)) {\r\n            this.setState({ subBinderError: true, subBinder: value, departmentDisable: false, sourceDisable: false });\r\n            this.show('subBinder', true);\r\n        } else {\r\n            let results = this.state.subBinders.filter((subbinderdata) => {\r\n                var subBinderTitle = subbinderdata.Title;\r\n                return subBinderTitle == value;\r\n            });\r\n            if (results.length > 0) {\r\n                this.setState({ department: results[0].Type, source: results[0].EntityId, sourceName: results[0].EntityType, departmentDisable: true, sourceDisable: true })\r\n            }\r\n        }\r\n    }\r\n\r\n    editAgencyCommission() {\r\n        this.setState({ changeAgencyCommission: !this.state.changeAgencyCommission });\r\n    }\r\n\r\n    isGenerateRenewal() {\r\n        const data = { policyId: this.props.match.params.id };\r\n        api.post(APIConstant.path.isGenerateRenewal, data).then(async res => {\r\n            console.log('isGenerateRenewal', res.data[0].returnValue);\r\n            if (res.success) {\r\n                if (!CommonConfig.isEmpty(res.data[0].returnValue) && res.data[0].returnValue != 0) {\r\n                    if (res.data[0].returnValue == 2) {\r\n                        console.log('migratedData', 'before');\r\n                        var IsmigratedData = await this.IsmigratedData();\r\n                        console.log('migratedData after', IsmigratedData);\r\n\r\n                        if (IsmigratedData == 0) {\r\n                            // console.log('migratedData', 0);\r\n                            //   var nextBinder = await api.post(APIConstant.path.migratedData, data).then(res => {\r\n                            //     if (res.success) {\r\n                            //       if (res.data.returnValue == 0) {\r\n                            //         console.log('migratedData', '01');\r\n                            //       } else {\r\n                            //         console.log('migratedData', '11');\r\n                            //       }\r\n\r\n                            //     } else {\r\n                            //       console.log('error');\r\n                            //     }\r\n                            //   }).catch(err => {\r\n                            //     console.log('error', err);\r\n                            //   });\r\n                            //   return nextBinder;\r\n                        } else if (IsmigratedData == 1) {\r\n                            let data1 = {\r\n                                policyId: this.props.match.params.id\r\n                            }\r\n                            api.post(APIConstant.path.getNextBinderDetails, data1).then(res => {\r\n                                if (res.success) {\r\n                                    console.log('nextBinder', res);\r\n                                    if (!CommonConfig.isEmpty(res.data[0].binderUMRN)) {\r\n                                        this.setState({ nextBinder: res.data[0].binderUMRN, nextInsuranceComapny: res.data[0].insuranceCompanyName, isDisplayNext: 1 });\r\n                                    } else {\r\n                                        this.setState({ isDisplayNext: 0 });\r\n                                    }\r\n                                } else {\r\n                                    console.log('error');\r\n                                }\r\n                            }).catch(err => {\r\n                                console.log('error', err);\r\n                            });\r\n                        }\r\n                        else {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                console.log('error');\r\n            }\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    async IsmigratedData() {\r\n        let data = {\r\n            policyId: this.props.match.params.id\r\n        }\r\n        var isMigrated = await api.post(APIConstant.path.migratedData, data).then(res => {\r\n            if (res.success) {\r\n                console.log('migratedData', res.data[0]);\r\n\r\n                return res.data[0].returnValue;\r\n            } else {\r\n                console.log('error');\r\n                return -1;\r\n            }\r\n        }).catch(err => {\r\n            console.log('error', err);\r\n        });\r\n        return isMigrated;\r\n    }\r\n\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'department') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ departmentError: true, department: value });\r\n                this.show('department', true);\r\n            } else {\r\n                this.setState({ departmentError: false, department: value });\r\n                this.show('department', false);\r\n                if (value === 'ServiceCenter' || value === 'SubAgent') {\r\n                    this.setState({ sourceDisplay: true, sourceError: true })\r\n                    this.getOrganazationData(value)\r\n                } else {\r\n                    this.setState({ sourceDisplay: false, source: '', sourceError: false, sourceList: [] });\r\n                    this.show('source', false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (type === 'source') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ sourceError: true, source: value });\r\n                this.show('source', true);\r\n            } else {\r\n                this.setState({ sourceError: false, source: value.value });\r\n                this.show('source', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'awaitingDocuments') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ awaitingDocumentsError: true, awaitingDocuments: value });\r\n                this.show('awaitingDocuments', true);\r\n            } else {\r\n                this.setState({ awaitingDocumentsError: false, awaitingDocuments: value });\r\n                this.show('awaitingDocuments', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'premiumCredits') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ premiumCreditsError: true, premiumCredits: value });\r\n                this.show('premiumCredits', true);\r\n            } else {\r\n                this.setState({ premiumCreditsError: false, premiumCredits: value });\r\n                this.show('premiumCredits', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'thirdPartyLiability') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ thirdPartyLiabilityError: true, thirdPartyLiability: value });\r\n                this.show('thirdPartyLiability', true);\r\n            } else {\r\n                this.setState({ thirdPartyLiabilityError: false, thirdPartyLiability: value });\r\n                this.show('thirdPartyLiability', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'racingEventType') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ racingEventTypeError: true, racingEventType: value });\r\n                this.show('racingEventType', true);\r\n            } else {\r\n                this.setState({ racingEventTypeError: false, racingEventType: value });\r\n                this.show('racingEventType', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'crewLiability') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ crewLiabilityError: true, crewLiability: value });\r\n                this.show('crewLiability', true);\r\n            } else {\r\n                this.setState({ crewLiabilityError: false, crewLiability: value });\r\n                this.show('crewLiability', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'governmentLavys') {\r\n            this.setState({ governmentLavys: value });\r\n            if (value == \"DEFAULT\") {\r\n                let premium = this.state.currentPremium;\r\n                if (this.state.policyStatus == \"Active\") {\r\n                    premium = (this.state.renewalPremium == null) ? 0 : this.state.renewalPremium;\r\n                }\r\n                let governmentLavysAmount = (parseFloat(this.state.governmentLavysPercent) * parseFloat(premium)) / 100;\r\n                this.setState({ governmentLavysAmount: governmentLavysAmount.toFixed(2) });\r\n            } else if (value == \"CUSTOM\") {\r\n                this.setState({ governmentLavysAmount: 0 });\r\n            }\r\n        }\r\n\r\n        if (type === 'currentNCBYears') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ currentNCBYearsError: true, currentNCBYears: value });\r\n                this.show('currentNCBYears', true);\r\n            } else {\r\n                this.setState({ currentNCBYearsError: false, currentNCBYears: value });\r\n                this.show('currentNCBYears', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n\r\n        if (e.target.name === \"inceptionDate\") {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ inceptionDateError: true });\r\n                this.show(\"inceptionDate\", true, \"inceptionDateError\", \"Please enter Inception Date\");\r\n            }\r\n            // else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\r\n            //     this.setState({ inceptionDateError: true });\r\n            //     this.show(\"inceptionDate\", true, \"inceptionDateError\", \"Please enter valid Inception Date\");\r\n            // } \r\n            else {\r\n                // let renewalDate = moment(e.target.value).add(365, 'days').format('DD/MM/YYYY');   \r\n                console.log('renewalDate', e.target.value);\r\n\r\n                let renewalDate = moment(e.target.value).add(365, 'days').format('YYYY-MM-DD');\r\n                console.log('renewalDate', renewalDate);\r\n\r\n                this.setState({ inceptionDateError: false, inceptionDate: e.target.value, renewalDate: renewalDate, renewalDateError: false });\r\n                this.show(\"inceptionDate\", false, \"inceptionDateError\", \"\");\r\n\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"renewalDate\") {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ renewalDateError: true });\r\n                this.show(\"renewalDate\", true, \"renewalDateError\", \"Please enter Renewal Date\");\r\n            } else {\r\n                this.setState({ renewalDateError: false, renewalDate: e.target.value });\r\n                this.show(\"renewalDate\", false, \"renewalDateError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"lastBindDate\") {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ lastBindDateError: true });\r\n                this.show(\"lastBindDate\", true, \"lastBindDateError\", \"Please enter Last Bind Date\");\r\n            } else {\r\n                this.setState({ lastBindDateError: false, lastBindDate: e.target.value });\r\n                this.show(\"lastBindDate\", false, \"lastBindDateError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'note') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ noteError: false, note: e.target.value });\r\n                this.show(\"note\", false);\r\n            } else {\r\n                if (!CommonConfig.RegExp.allowAllWithSpace.test(e.target.value) || e.target.value.length > 200) {\r\n                    this.setState({ noteError: true });\r\n                    this.show(\"note\", true);\r\n                } else {\r\n                    this.setState({ noteError: false, note: e.target.value });\r\n                    this.show(\"note\", false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'isWaterSkiing') {\r\n            if (e.target.checked == true) {\r\n                this.setState({ waterSkiingLiability: this.state.waterSkiingLiabilityAmount });\r\n            } else {\r\n                this.setState({ waterSkiingLiability: '' });\r\n            }\r\n            this.setState({ isWaterSkiing: e.target.checked });\r\n        }\r\n\r\n        if (e.target.name === 'isWaterToys') {\r\n            if (e.target.checked == true) {\r\n                this.setState({ waterToysLiability: this.state.waterToysLiabilityAmount });\r\n            } else {\r\n                this.setState({ waterToysLiability: '' });\r\n            }\r\n            this.setState({ isWaterToys: e.target.checked });\r\n        }\r\n\r\n        if (e.target.name === 'isSailRacing') {\r\n            if (e.target.checked == true) {\r\n                this.setState({ sailRacingCoverage: this.state.sailRacingCoverageAmount });\r\n            } else {\r\n                this.setState({ sailRacingCoverage: '' });\r\n            }\r\n            this.setState({ isSailRacing: e.target.checked });\r\n        }\r\n\r\n        if (e.target.name === 'sailRacingCoverage') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ sailRacingCoverageError: true, sailRacingCoverage: e.target.value });\r\n                this.show('sailRacingCoverage', true);\r\n            } else if (Number(e.target.value) > Number(this.state.maxPolicyAmount)) {\r\n                this.setState({ sailRacingCoverageError: true, sailRacingCoverage: e.target.value });\r\n                this.show('sailRacingCoverage', true);\r\n            } else {\r\n                this.setState({ sailRacingCoverageError: false, sailRacingCoverage: e.target.value });\r\n                this.show('sailRacingCoverage', false);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'gross') {\r\n            if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.percentage.test(e.target.value) || e.target.value > 100) {\r\n                this.setState({ GrossError: true });\r\n                this.show(\"gross\", true);\r\n            }\r\n            else {\r\n                this.setState({ GrossError: false, gross: e.target.value });\r\n                this.show(\"gross\", false);\r\n            }\r\n        }\r\n\r\n        /*if (e.target.name === 'governmentLavysPercent') {\r\n            if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.percentage.test(e.target.value)) {\r\n                this.setState({ governmentLavysPercentError: true });\r\n                this.show(\"governmentLavysPercent\", true);\r\n            } else {\r\n                this.setState({ governmentLavysPercentError: false, governmentLavysPercent: e.target.value });\r\n                this.show(\"governmentLavysPercent\", false);\r\n            }\r\n        }*/\r\n\r\n        // if (e.target.name === 'excess') {\r\n        //     if (CommonConfig.isEmpty(e.target.value)) {\r\n        //         this.setState({ excessError: true, excess: e.target.value });\r\n        //         this.show('excess', true);\r\n        //     } else if (Number(e.target.value) > Number(this.state.maxPolicyAmount)) {\r\n        //         this.setState({ excessError: true, excess: e.target.value });\r\n        //         this.show('excess', true);\r\n        //     } else {\r\n        //         this.setState({ excessError: false, excess: e.target.value });\r\n        //         this.show('excess', false);\r\n        //     }\r\n        // }\r\n\r\n        if (e.target.name === 'excess') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ excessError: true });\r\n                this.show(\"excess\", true, \"excessError\", \"Please enter Excess Amount\");\r\n            } else {\r\n                let decimalRegEx = CommonConfig.RegExp.decimalWithOne;\r\n                let decimalWithOne = e.target.value;\r\n                if (!decimalRegEx.test(decimalWithOne)) {\r\n                    this.setState({ excessError: true });\r\n                    this.show(\"excess\", true, \"excessError\", \"Please enter valid Excess Amount\");\r\n                } else {\r\n                    this.setState({ excessError: false, excess: e.target.value });\r\n                    this.show(\"excess\", false, \"excessError\", \"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'adminFees') {\r\n            if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.decimalWithOne.test(e.target.value)) {\r\n                this.setState({ adminFeesError: true, adminFees: e.target.value });\r\n                this.show('adminFees', true, \"adminFeesError\", \"Please enter valid Admin Fees.\");\r\n            } else if (Number(e.target.value) > Number(this.state.maxPolicyAmount)) {\r\n                this.setState({ adminFeesError: true, adminFees: e.target.value });\r\n                this.show('adminFees', true, \"adminFeesError\", \"Admin Fees can not be more then Policy Amount.\");\r\n            } else {\r\n                this.setState({ adminFeesError: false, adminFees: e.target.value });\r\n                this.show('adminFees', false, \"adminFeesError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'underWriter') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ underWriterError: false, underWriter: e.target.value });\r\n                this.show('underWriter', false);\r\n            } else if (!CommonConfig.RegExp.decimalWithNegative.test(e.target.value)) {\r\n                this.setState({ underWriterError: true, underWriter: e.target.value });\r\n                this.show('underWriter', true);\r\n            } else {\r\n                this.setState({ underWriterError: false, underWriter: e.target.value });\r\n                this.show('underWriter', false);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"MarineTradePremium\") {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ MarineTradePremiumError: true });\r\n                this.show(\"MarineTradePremium\", true, \"MarineTradePremiumError\", \"Please enter Premium Amount\");\r\n            } else if (!CommonConfig.RegExp.decimalWithNegative.test(e.target.value)) {\r\n                this.setState({ MarineTradePremiumError: true, MarineTradePremium: e.target.value });\r\n                this.show('MarineTradePremium', true, \"MarineTradePremiumError\", \"Please enter valid Premium Amount\");\r\n            } else {\r\n                this.setState({ MarineTradePremiumError: false, MarineTradePremium: e.target.value });\r\n                this.show(\"MarineTradePremium\", false, \"MarineTradePremiumError\", \"\");\r\n            }\r\n        }\r\n\r\n        // if (e.target.name === 'ratingTypeValue') {\r\n        //     if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.decimal.test(e.target.value)) {\r\n        //         this.setState({ ratingTypeValueError: true, ratingTypeValue: e.target.value });\r\n        //         // this.show('ratingTypeValue', true);\r\n        //     } else {\r\n        //         this.setState({ ratingTypeValueError: false, ratingTypeValue: e.target.value });\r\n        //         this.show('ratingTypeValue', false);\r\n        //     }\r\n        // }\r\n\r\n        if (e.target.name === 'ratingTypeValue') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ ratingTypeValueError: true });\r\n                this.show(\"ratingTypeValue\", true, \"ratingTypeValueError\", \"Please enter Rate\");\r\n            } else {\r\n                let decimalRegEx = this.state.ratingTypeValueRegex;\r\n                let percentage = e.target.value;\r\n                if (!decimalRegEx.test(percentage)) {\r\n                    this.setState({ ratingTypeValueError: true });\r\n                    this.show(\"ratingTypeValue\", true, \"ratingTypeValueError\", \"Please enter valid Rate\");\r\n                } else {\r\n                    this.setState({ ratingTypeValueError: false, ratingTypeValue: e.target.value });\r\n                    this.show(\"ratingTypeValue\", false, \"ratingTypeValueError\", \"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'governmentLavysAmount') {\r\n            if (CommonConfig.isEmpty(e.target.value) || !CommonConfig.RegExp.decimalWithOne.test(e.target.value)) {\r\n                this.setState({ governmentLavysAmountError: true, governmentLavysAmount: e.target.value });\r\n                this.show('governmentLavysAmount', true, \"governmentLavysAmountError\", \"Please eneter Government Lavys Amount\");\r\n            } else {\r\n                this.setState({ governmentLavysAmountError: false, governmentLavysAmount: e.target.value });\r\n                this.show('governmentLavysAmount', false, \"governmentLavysAmount\", \"\");\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'currentNCBAmount') {\r\n            if (!CommonConfig.RegExp.decimalWithOne.test(e.target.value)) {\r\n                this.setState({ currentNCBAmountError: true });\r\n                this.show(\"currentNCBAmount\", true);\r\n            } else {\r\n                this.setState({ currentNCBAmountError: false, currentNCBAmount: e.target.value });\r\n                this.show(\"currentNCBAmount\", false);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'agency') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ agencyError: true });\r\n                this.show(\"agency\", true, \"agencyError\", \"Please enter Agency Commission\");\r\n            } else {\r\n                let decimalRegEx = CommonConfig.RegExp.percentage;\r\n                let percentage = e.target.value;\r\n                if (!decimalRegEx.test(percentage)) {\r\n                    this.setState({ agencyError: true });\r\n                    this.show(\"agency\", true, \"agencyError\", \"Please enter valid  Agency Commission\");\r\n                } else {\r\n                    // var totalagency = (e.target.value * this.state.currentPremium) / 100;\r\n                    var totalagency = (e.target.value * this.state.PolicyCurrentPremium) / 100;\r\n                    var balance = parseFloat(this.state.gross) - parseFloat(e.target.value);\r\n                    var balanceTotal = Number(this.state.totalgross) - totalagency;\r\n                    totalagency = CommonConfig.isEmpty(totalagency) ? 0 : totalagency.toFixed(2);\r\n                    balance = CommonConfig.isEmpty(balance) ? 0 : balance.toFixed(2);\r\n                    balanceTotal = CommonConfig.isEmpty(balanceTotal) ? 0 : balanceTotal.toFixed(2);\r\n                    this.setState({ agencyError: false, agency: e.target.value, agencyTotal: totalagency, balance: balance, balanceTotal: balanceTotal })\r\n                    this.show(\"agency\", false, \"agencyError\", \"\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onRadioBtnClick(radioType, radioSelected) {\r\n        if (radioType === 'singleHandedSailing') {\r\n            this.setState({ singleHandedSailing: radioSelected });\r\n        } else if (radioType === 'ratingType') {\r\n            if (radioSelected == 'Rating') {\r\n                this.setState({ ratingTypeValueRegex: CommonConfig.RegExp.percentage, ratingTypeValue: '' })\r\n            } else {\r\n                this.setState({ ratingTypeValueRegex: CommonConfig.RegExp.decimalWithOne, ratingTypeValue: '' })\r\n            }\r\n            this.setState({ ratingType: radioSelected });\r\n        }\r\n    }\r\n\r\n    editEndorsements(task) {\r\n        console.log('renewalDate', this.state.inceptionDate);\r\n        console.log('renewalDate', this.state.renewalDate);\r\n        if (task === 'view') {\r\n            this.setState({ isEdit: false })\r\n        } else {\r\n            // let inceptionDate = moment(this.state.inceptionDate, CommonConfig.dateFormat.dateOnly).format('YYYY-MM-DD');\r\n            // // let date = new Date(inceptionDate);\r\n            // let date = moment(inceptionDate).toISOString();\r\n            this.setState({ isEdit: true, });//inceptionDate: (this.state.inceptionDate === '') ? new Date() :  new Date(date) });\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    goBack() {\r\n        this.getPolicyUnderwritingData();\r\n        this.setState({ isEdit: false })\r\n    }\r\n\r\n    reset() {\r\n        this.setState({\r\n            PolicyNumber: '', binder: '', subBinder: '', insuranceComapny: '', department: '',\r\n            source: '', awaitingDocuments: '', premiumCredits: '', documentLanguage: '', thirdPartyLiability: '',\r\n            waterSkiingLiability: '', waterToysLiability: '', sailRacingCoverage: '', racingEventType: '',\r\n            singleHandedSailing: 'yes', crewLiability: '', inceptionDate: '', underWriter: '', note: '',\r\n            gross: '', totalgross: '', agency: '', agencyTotal: '', balance: '', balanceTotal: '',\r\n            governmentLavys: '', governmentLavysPercent: '', isEdit: false, governmentLavysAmount: ''\r\n        })\r\n    }\r\n\r\n    validate() {\r\n        var errorCount = 0;\r\n\r\n        if (this.state.selectBinderError) {\r\n            errorCount += 1;\r\n            this.show(\"binder\", true);\r\n        }\r\n\r\n        if (this.state.subBinderError) {\r\n            errorCount += 1;\r\n            this.show(\"subBinder\", true);\r\n        }\r\n\r\n        if (this.state.departmentError) {\r\n            errorCount += 1;\r\n            this.show(\"department\", true);\r\n        }\r\n\r\n        if (this.state.sourceError) {\r\n            errorCount += 1;\r\n            this.show(\"source\", true);\r\n        }\r\n\r\n        // if (this.state.awaitingDocumentsError) {\r\n        //     errorCount += 1;\r\n        //     this.show(\"awaitingDocuments\", true);\r\n        // }\r\n\r\n        // if (this.state.premiumCreditsError) {\r\n        //     errorCount += 1;\r\n        //     this.show(\"premiumCredits\", true);\r\n        // }\r\n\r\n        if (this.state.thirdPartyLiabilityError) {\r\n            errorCount += 1;\r\n            this.show(\"thirdPartyLiability\", true);\r\n        }\r\n\r\n        if (this.state.sailRacingCoverageError) {\r\n            errorCount += 1;\r\n            this.show(\"sailRacingCoverage\", true);\r\n        }\r\n\r\n        // if (this.state.isSailRacing === true && this.state.racingEventType === '') {\r\n        //     errorCount += 1;\r\n        //     this.show(\"racingEventType\", true);\r\n        // }\r\n\r\n        if (this.state.racingEventTypeError) {\r\n            errorCount += 1;\r\n            this.show(\"racingEventType\", true);\r\n        }\r\n\r\n        if (this.state.crewLiabilityError) {\r\n            errorCount += 1;\r\n            this.show(\"crewLiability\", true);\r\n        }\r\n\r\n        if (this.state.excessError) {\r\n            errorCount += 1;\r\n            this.show(\"excess\", true);\r\n        }\r\n\r\n        if (this.state.ratingTypeValueError) {\r\n            errorCount += 1;\r\n            this.show(\"ratingTypeValue\", true);\r\n        }\r\n\r\n        if (this.state.inceptionDateError) {\r\n            errorCount += 1;\r\n        }\r\n        if (this.state.renewalDateError) {\r\n            errorCount += 1;\r\n            this.show(\"renewalDateError\", true);\r\n        }\r\n\r\n        if (this.state.underWriterError) {\r\n            errorCount += 1;\r\n            this.show(\"underWriter\", true);\r\n        }\r\n\r\n        // if (this.state.noteError) {\r\n        //     errorCount += 1;\r\n        //     this.show(\"note\", true);\r\n        // }\r\n\r\n        if (this.state.grossError) {\r\n            errorCount += 1;\r\n            this.show(\"gross\", true);\r\n        }\r\n\r\n        // if (this.state.governmentLavysError) {\r\n        //     errorCount += 1;\r\n        //     this.show(\"governmentLavys\", true);\r\n        // }\r\n\r\n        // if (this.state.governmentLavysPercentError) {\r\n        //     errorCount += 1;\r\n        //     this.show(\"governmentLavysPercent\", true);\r\n        // }\r\n\r\n        if (this.state.adminFeesError) {\r\n            errorCount += 1;\r\n            this.show(\"adminFees\", true);\r\n        }\r\n\r\n        if (this.state.currentNCBYearsError) {\r\n            errorCount += 1;\r\n            this.show(\"currentNCBYears\", true);\r\n        }\r\n\r\n        // if (this.state.currentNCBAmountError) {\r\n        //     errorCount += 1;\r\n        //     this.show(\"currentNCBAmount\", true);\r\n        // }\r\n\r\n        if (errorCount == 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    Save = () => {\r\n        try {\r\n            if (this.validate()) {\r\n\r\n                let binderResults = this.state.binders.filter((binderdata) => {\r\n                    var binderUMRN = binderdata.UMRN;\r\n                    return binderUMRN == this.state.binder;\r\n                });\r\n\r\n                let subBinderResults = this.state.subBinders.filter((subbinderdata) => {\r\n                    var subBinderTitle = subbinderdata.Title;\r\n                    return subBinderTitle == this.state.subBinder;\r\n                });\r\n                console.log('renewalDate', this.state.renewalDate);\r\n\r\n                let data = {\r\n                    PolicyId: this.state.PolicyId,\r\n                    PolicyUnderwritingId: this.state.PolicyUnderwritingId,\r\n                    PolicyInsuredAmountId: this.state.PolicyInsuredAmountId,\r\n                    BinderId: binderResults[0].BinderId,\r\n                    SubBinderId: (subBinderResults.length && subBinderResults !== undefined) ? subBinderResults[0].SubBinderId : '',\r\n                    InsuranceCompanyId: binderResults[0].InsuranceCompanyId,\r\n                    Department: this.state.department,\r\n                    SourceId: this.state.source,\r\n                    InceptionDate: moment(this.state.inceptionDate).format(CommonConfig.dateFormat.dbDateTime),\r\n                    RenewalDate: moment(this.state.renewalDate).format(CommonConfig.dateFormat.dbDateTime),\r\n                    IsAwaitingDocument: this.state.awaitingDocuments === \"Yes\" ? true : false,\r\n                    IsPremiumCredit: this.state.premiumCredits === \"Yes\" ? true : false,\r\n\r\n                    MarineTradePremium: this.state.MarineTradePremium,\r\n\r\n                    UnderwriterAmount: this.state.underWriter,\r\n                    UnderwriterNote: this.state.note,\r\n\r\n                    ThirdPartyLiabilityAmount: this.state.thirdPartyLiability,\r\n                    WaterSkiingLiabilityAmount: this.state.waterSkiingLiability,\r\n                    WaterToysLiabilityAmount: this.state.waterToysLiability,\r\n                    SailRacingCoverageAmount: this.state.sailRacingCoverage,\r\n                    RacingEventType: this.state.racingEventType,\r\n                    CrewLiability: this.state.crewLiability,\r\n\r\n                    GovtLevyType: this.state.governmentLavys,\r\n                    GovtLevyPercent: this.state.governmentLavysPercent,\r\n                    GovtLevyAmount: this.state.governmentLavysAmount,\r\n\r\n                    GrossCommisionPercent: this.state.gross,\r\n                    AgencyCommissionPercent: this.state.agency,\r\n\r\n                    AdminFeeAmount: (this.state.adminFees != undefined) ? this.state.adminFees : '',\r\n                    ExcessAmount: this.state.excess,\r\n\r\n                    RatingType: this.state.ratingType,\r\n                    RatingTypeAmount: this.state.ratingTypeValue,\r\n\r\n                    CurrentNCBYears: this.state.currentNCBYears,\r\n                    CurrentNCBAmount: this.state.currentNCBAmount,\r\n                    PolicyGeneralId: this.state.PolicyGeneralId,\r\n\r\n                    SortOrder: '1',\r\n                    LanguageId: 'en-GB',\r\n                    Status: \"Active\",\r\n                    loggedInUserId: CommonConfig.loggedInUserId()\r\n                };\r\n\r\n\r\n                console.log('underwriting', data);\r\n\r\n\r\n\r\n\r\n                console.log(\"SavepolicyUnderwriting\", data);\r\n\r\n                api.post('api/policyUnderwriting', data).then(res => {\r\n                    if (res.data.success) {\r\n                        var firstRes = res.data;\r\n                        let secondData = {\r\n                            policyId: this.props.match.params.id,\r\n                            CurrentUser: CommonConfig.loggedInUserId(),\r\n                        }\r\n                        api.post('api/isPolicyReferred', secondData).then(res => {\r\n                            if (res.success) {\r\n                                let fourthData = {\r\n                                    policyId: this.props.match.params.id,\r\n                                    IsRenewal: 0,\r\n                                    CurrentUser: CommonConfig.loggedInUserId()\r\n                                }\r\n\r\n                                api.post('api/recomputePremium', fourthData).then(res => {\r\n\r\n                                    if (res.success) {\r\n                                        if (CommonConfig.isEmpty(res.data.returnValue)) {\r\n                                            toast.success(firstRes.message);\r\n                                            this.editEndorsements(\"view\");\r\n                                            setTimeout(function () {\r\n                                                window.location.reload();\r\n                                            }, 1000);\r\n                                        }\r\n                                        else {\r\n                                            toast.error(\"There was an error while calculating the premium. \" + res.data.returnValue);\r\n                                        }\r\n                                    } else {\r\n                                        console.log('error');\r\n\r\n                                    }\r\n                                }).catch(err => {\r\n\r\n                                });\r\n                            }\r\n                        }).catch(err => {\r\n                            console.log(\"error\", err);\r\n                        });\r\n                    } else {\r\n\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(\"error\", err);\r\n                });\r\n\r\n            } else {\r\n                toast.error(\"Please enter/select all mandatory field.\");\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    toggleAll = (toggleType) => {\r\n        this.setState({\r\n            showRatingExcess: (toggleType === 'expand') ? true : false,\r\n            showLimitsAdditionalCoverCommissionFeesandLevy: (toggleType === 'expand') ? true : false,\r\n            showPolicyOptionsAdjustments: (toggleType === 'expand') ? true : false,\r\n            showPolicyDates: (toggleType === 'expand') ? true : false,\r\n            isExpand: (toggleType === 'expand') ? true : false\r\n        });\r\n    }\r\n\r\n    toggle = (type) => {\r\n        if (type === 'PolicyDates') {\r\n            this.setState({\r\n                showPolicyDates: !this.state.showPolicyDates,\r\n                showPolicyOptionsAdjustments: (this.state.isExpand) ? this.state.showPolicyOptionsAdjustments : false,\r\n                showLimitsAdditionalCoverCommissionFeesandLevy: (this.state.isExpand) ? this.state.showLimitsAdditionalCoverCommissionFeesandLevy : false,\r\n                showRatingExcess: (this.state.isExpand) ? this.state.showRatingExcess : false,\r\n            })\r\n        } else if (type === 'PolicyOptionsAdjustments') {\r\n            this.setState({\r\n                showPolicyDates: (this.state.isExpand) ? this.state.showPolicyDates : false,\r\n                showPolicyOptionsAdjustments: !this.state.showPolicyOptionsAdjustments,\r\n                showLimitsAdditionalCoverCommissionFeesandLevy: (this.state.isExpand) ? this.state.showLimitsAdditionalCoverCommissionFeesandLevy : false,\r\n                showRatingExcess: (this.state.isExpand) ? this.state.showRatingExcess : false,\r\n            })\r\n        } else if (type === 'LimitsAdditionalCoverCommissionFeesandLevy') {\r\n            this.setState({\r\n                showPolicyDates: (this.state.isExpand) ? this.state.showPolicyDates : false,\r\n                showPolicyOptionsAdjustments: (this.state.isExpand) ? this.state.showPolicyOptionsAdjustments : false,\r\n                showLimitsAdditionalCoverCommissionFeesandLevy: !this.state.showLimitsAdditionalCoverCommissionFeesandLevy,\r\n                showRatingExcess: (this.state.isExpand) ? this.state.showRatingExcess : false,\r\n            })\r\n        } else if (type === 'RatingExcess') {\r\n            this.setState({\r\n                showPolicyDates: (this.state.isExpand) ? this.state.showPolicyDates : false,\r\n                showPolicyOptionsAdjustments: (this.state.isExpand) ? this.state.showPolicyOptionsAdjustments : false,\r\n                showLimitsAdditionalCoverCommissionFeesandLevy: (this.state.isExpand) ? this.state.showLimitsAdditionalCoverCommissionFeesandLevy : false,\r\n                showRatingExcess: !this.state.showRatingExcess,\r\n            })\r\n        }\r\n    }\r\n\r\n    showBinderDetails = () => {\r\n\r\n    }\r\n\r\n    editLastBindDate() {\r\n        this.setState({ isLastBindEdit: true, lastBindDateError: false });\r\n    }\r\n    editInceptionRenewalDate(InceptionOrRenewal) {\r\n        if (InceptionOrRenewal == 0) {\r\n            this.setState({ isInceptionEdit: true, inceptionDateError: false })\r\n        } else if (InceptionOrRenewal == 1) {\r\n            this.setState({ isRenewalEdit: true, renewalDateError: false })\r\n        }\r\n    }\r\n\r\n    saveLastBindDate() {\r\n        try {\r\n\r\n            if (this.state.lastBindDateError) {\r\n                toast.error('Please enter Last Binder Date.');\r\n                return false;\r\n            }\r\n\r\n            this.setState({ isLastBindEdit: false, lastBindDateError: false });\r\n\r\n            let data = {\r\n                PolicyId: this.state.PolicyId,\r\n                LastBindDate: this.state.lastBindDate,\r\n                loggedInUserId: CommonConfig.loggedInUserId()\r\n            };\r\n            api.post('api/updateLastBindDate', data).then(res => {\r\n                if (res.data.success) {\r\n                    toast.success(res.message);\r\n                    this.setState({ isLastBindEdit: false, lastBindDateError: false });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    saveInceptionRenewalDate(InceptionOrRenewal) {\r\n        try {\r\n\r\n            if (InceptionOrRenewal == 0) {\r\n                if (this.state.inceptionDateError) {\r\n                    toast.error('Please enter Inception Date.');\r\n                    return false;\r\n                }\r\n                // this.setState({ isInceptionEdit: false, inceptionDateError: false, isRenewalEdit: false, renewalDateError: false });\r\n            } else if (InceptionOrRenewal == 1) {\r\n                if (this.state.renewalDateError) {\r\n                    toast.error('Please enter Renewal Date.');\r\n                    return false;\r\n                }\r\n                // this.setState({ isRenewalEdit: false, renewalDateError: false });   \r\n            }\r\n\r\n            let data = {\r\n                PolicyId: this.state.PolicyId,\r\n                InceptionDate: this.state.inceptionDate,\r\n                RenewalDate: this.state.renewalDate,\r\n                InceptionOrRenewal: InceptionOrRenewal,\r\n                loggedInUserId: CommonConfig.loggedInUserId()\r\n            };\r\n            api.post('api/updateInceptionOrRenewalDate', data).then(res => {\r\n                if (res.data.success) {\r\n                    toast.success(res.message);\r\n                    this.setState({ isInceptionEdit: false, inceptionDateError: false, isRenewalEdit: false, renewalDateError: false });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    cancelLastBindDate() {\r\n        this.setState({ isLastBindEdit: false, lastBindDateError: false, lastBindDate: this.state.defaultLastBindDate });\r\n    }\r\n\r\n    cancelInceptionRenewalDate(InceptionOrRenewal) {\r\n        if (InceptionOrRenewal == 0) {\r\n            this.setState({ isInceptionEdit: false, inceptionDateError: false, inceptionDate: this.state.defaultinceptionDate, renewalDate: this.state.defaultrenewalDate });\r\n        } else if (InceptionOrRenewal == 1) {\r\n            this.setState({ isRenewalEdit: false, renewalDateError: false, renewalDate: this.state.defaultrenewalDate });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const SaveButton = t(\"buttons.Save\");\r\n        const CancelButton = t(\"buttons.Cancel\");\r\n        const BackButton = t(\"buttons.BackToPolicy\");\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n\r\n                        {(CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) == 1)\r\n                            ? (<BTN style={{ float: \"right\", marginBottom: \"10px\" }} color=\"primary\"\r\n                                onClick={this.state.isEdit ? () => this.editEndorsements('view') : () => this.editEndorsements('edit')} title={this.state.isEdit ? \"View\" : \"Edit\"}>\r\n                                <i className={this.state.isEdit ? \"fa fa-eye\" : \"fa fa-pencil\"}></i>\r\n                            </BTN>)\r\n                            : (null)}\r\n\r\n                        <BTN style={{ float: \"right\", marginRight: 5 }} color=\"primary\" title={(this.state.isExpand) ? t(\"contactDetails:ViewPage.CollapseAll\") : t(\"contactDetails:ViewPage.ExpandAll\")}\r\n                            onClick={(this.state.isExpand) ? () => this.toggleAll('collapse') : () => this.toggleAll('expand')}\r\n                        >\r\n                            <i className={(this.state.isExpand) ? \"fa fa-compress\" : \"fa fa-expand\"}></i>\r\n                        </BTN>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"input-box\" id=\"PolicyDates\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggle('PolicyDates')} aria-expanded={this.state.showPolicyDates} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    {/* <i style={{marginRight: 5}} className=\"fa fa-address-card-o\"></i> */}\r\n                                    {t(\"policyUnderwriting:PolicyDates#\")}\r\n                                    <i style={{ float: 'right' }} className={this.state.showPolicyDates ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n\r\n                        <Collapse isOpen={this.state.showPolicyDates} data-parent=\"#PolicyDates\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <Row style={{ width: \"100%\" }}>\r\n                                    <Col md=\"6\">\r\n                                        <span>{t(\"policyUnderwriting:Policy\")}</span>\r\n                                        <Card>\r\n                                            <CardBody>\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:UnderWritingPolicyNumber\")}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            <div>\r\n                                                                <p>{this.state.PolicyNumber}</p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:Binder.label\")}*</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            {(this.state.isEdit) ? (\r\n                                                                <div>\r\n                                                                    <AutoComplete value={this.state.binder} id='binder' onChange={(e) => this.setState({ binder: e.value },\r\n                                                                        this.changeBinder(e.value))} suggestions={this.state.binderSuggestions} completeMethod={this.suggestBinder.bind(this)} />\r\n                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:Binder.error\")}</em>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        <p>{this.state.binder}</p>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                        {/* <Col md=\"1\">\r\n                                                            <BTN title='View' style={{ float: \"right\" }} color=\"primary\" onClick={() => this.showBinderDetails()}>\r\n                                                                <i className=\"fa fa-eye\"></i>\r\n                                                            </BTN>\r\n                                                        </Col> */}\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                {(this.state.isDisplayNext ? (\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"3\">\r\n                                                                <label>Next Binder</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                <div>\r\n                                                                    <p>{this.state.nextBinder}</p>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                ) : (null))}\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:SubBinder.label\")}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            {(this.state.isEdit) ? (\r\n                                                                <div>\r\n                                                                    <AutoComplete id='subBinder' value={this.state.subBinder} onChange={(e) => this.setState({ subBinder: e.value }, this.changesubBinder(e.value))}\r\n                                                                        suggestions={this.state.subbinderSuggestions} completeMethod={this.suggestsubBinder.bind(this)} />\r\n                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:SubBinder.error\")}</em>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        <p>{this.state.subBinder}</p>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:InsuranceComapny.label\")}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            <div>\r\n                                                                <p>{this.state.insuranceComapny}</p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                {(this.state.isDisplayNext ? (\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"3\">\r\n                                                                <label>Next Insurance Company</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                <div>\r\n                                                                    <p>{this.state.nextInsuranceComapny}</p>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                ) : (null))}\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:Department.label\")}*</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            {(this.state.isEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input type=\"select\" name=\"department\" disabled={this.state.departmentDisable == true ? true : false} id=\"department\" onChange={(e) => this.selectType(e.target.value, 'department')} value={this.state.department}>\r\n                                                                        <option value=''>{t(\"policyUnderwriting:Department.defaultValue\")}</option>\r\n                                                                        {this.state.departmentList.map((ct, i) => {\r\n                                                                            return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                        })\r\n                                                                        }\r\n                                                                    </Input>\r\n                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:Department.error\")}</em>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        <p>{this.state.departmentName}</p>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                {(this.state.department == 'ServiceCenter' || this.state.department == 'SubAgent') ? (\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"3\">\r\n                                                                <label>{t(\"policyUnderwriting:Source.label\")}*</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"9\">\r\n                                                                {(this.state.isEdit) ? (\r\n                                                                    <div>\r\n                                                                        <Select name=\"source\" id=\"source\" options={this.state.sourceList}\r\n                                                                            value={this.state.source} onChange={(data) => this.selectType(data, 'source')}\r\n                                                                            placeholder={t(\"policyUnderwriting:Source.defaultValue\")}\r\n                                                                            disabled={this.state.sourceDisable == true ? true : false} />\r\n                                                                        <em id=\"sourceError\" className=\"error invalid-feedback\">{t(\"policyUnderwriting:Source.error\")}</em>\r\n\r\n                                                                        {/* <Input type=\"select\" name=\"source\" disabled={this.state.sourceDisable == true ? true : false} id=\"source\" onChange={(e) => this.selectType(e.target.value, 'source')} value={this.state.source}>\r\n                                                                                        <option value=''>{t(\"policyUnderwriting:Source.defaultValue\")}</option>\r\n                                                                                        {this.state.sourceList.map((ct, i) => {\r\n                                                                                            return (<option value={ct.OrganizationId} key={i}>{ct.OrganizationName}</option>)\r\n                                                                                        })\r\n                                                                                        }\r\n                                                                                    </Input>\r\n                                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:Source.error\")}</em> */}\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.sourceName}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                ) : (null)}\r\n\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n\r\n                                    <Col md=\"6\">\r\n                                        <span>{t(\"policyUnderwriting:Dates\")}</span>\r\n                                        <Card>\r\n                                            <CardBody>\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:InceptionDate.label\")}*</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            {(this.state.isInceptionEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input type=\"date\" name=\"inceptionDate\" id=\"inceptionDate\"\r\n                                                                        placeholder=\"Inception Date\"\r\n                                                                        style={{ width: '50%', display: \"inline-block\" }}\r\n                                                                        onBlur={(e) => this.handleChange(e)}\r\n                                                                        onChange={(e) => this.handleChange(e)}\r\n                                                                        value={this.state.inceptionDate}\r\n                                                                    />\r\n                                                                    {/* <Input type=\"date\" name=\"inceptionDate\" id=\"inceptionDate\" placeholder=\"Inception Date\"\r\n                                                                        onBlur={(e) => this.handleChange(e)} onChange={(e) => this.handleChange(e)}\r\n                                                                       \r\n                                                                        value={this.state.inceptionDate} \r\n                                                                    /> */}\r\n                                                                    {/* // value={moment(this.state.inceptionDate).format('YYYY-MM-DD')} /*min={moment().format('YYYY-MM-DD')}*/}\r\n                                                                    {(this.state.inceptionDateError == true) ? (\r\n                                                                        <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:InceptionDate.error\")}</em>\r\n                                                                    ) : (null)}\r\n                                                                    <BTN color=\"success\" onClick={() => this.saveInceptionRenewalDate(0)} title=\"Save Bind Date\" style={{ marginLeft: '10px', padding: \"1px 5px\" }}>\r\n                                                                        <i className=\"fa fa-check\"></i>\r\n                                                                    </BTN>\r\n                                                                    <BTN color=\"danger\" onClick={() => this.cancelInceptionRenewalDate(0)} title=\"Cancel Bind Date Change\" style={{ marginLeft: '5px', padding: \"1px 5px\" }}>\r\n                                                                        <i className=\"fa fa-times\"></i>\r\n                                                                    </BTN>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        {moment(this.state.inceptionDate).format('DD/MM/YYYY')}\r\n                                                                        {/* <p>{(this.state.inceptionDate !== '' && this.state.inceptionDate !== 'Invalid date') ? moment(this.state.inceptionDate).format('DD/MM/YYYY') : ''}</p> */}\r\n                                                                        {CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) ? (\r\n                                                                            <BTN color=\"primary\" onClick={() => this.editInceptionRenewalDate(0)} title=\"Change Bind Date\" style={{ marginLeft: '10px', padding: \"1px 5px\" }}>\r\n                                                                                <i className=\"fa fa-pencil\"></i>\r\n                                                                            </BTN>\r\n                                                                        ) : (null)}\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:RenewDate\")}*</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            {(this.state.isRenewalEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input type=\"date\" name=\"renewalDate\" id=\"renewalDate\"\r\n                                                                        placeholder=\"Renewal Date\"\r\n                                                                        style={{ width: '50%', display: \"inline-block\" }}\r\n                                                                        onBlur={(e) => this.handleChange(e)}\r\n                                                                        onChange={(e) => this.handleChange(e)}\r\n                                                                        value={this.state.renewalDate}\r\n                                                                    />\r\n                                                                    {(this.state.renewalDateError == true) ? (\r\n                                                                        <em className=\"error invalid-feedback\" >Please enter Renewal Date</em>\r\n                                                                    ) : (null)}\r\n\r\n                                                                    <BTN color=\"success\" onClick={() => this.saveInceptionRenewalDate(1)} title=\"Save Bind Date\" style={{ marginLeft: '10px', padding: \"1px 5px\" }}>\r\n                                                                        <i className=\"fa fa-check\"></i>\r\n                                                                    </BTN>\r\n                                                                    <BTN color=\"danger\" onClick={() => this.cancelInceptionRenewalDate(1)} title=\"Cancel Bind Date Change\" style={{ marginLeft: '5px', padding: \"1px 5px\" }}>\r\n                                                                        <i className=\"fa fa-times\"></i>\r\n                                                                    </BTN>\r\n\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        {moment(this.state.renewalDate).format('DD/MM/YYYY')}\r\n                                                                        {/* <p>{this.state.renewalDate}</p> */}\r\n                                                                        {CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) ? (\r\n                                                                            <BTN color=\"primary\" onClick={() => this.editInceptionRenewalDate(1)} title=\"Change Bind Date\" style={{ marginLeft: '10px', padding: \"1px 5px\" }}>\r\n                                                                                <i className=\"fa fa-pencil\"></i>\r\n                                                                            </BTN>\r\n                                                                        ) : (null)}\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:LastBindDate\")}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n\r\n                                                            {(this.state.isLastBindEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input type=\"date\" name=\"lastBindDate\" id=\"lastBindDate\"\r\n                                                                        placeholder=\"Last Bind Date\"\r\n                                                                        style={{ width: '50%', display: \"inline-block\" }}\r\n                                                                        onBlur={(e) => this.handleChange(e)}\r\n                                                                        onChange={(e) => this.handleChange(e)}\r\n                                                                        value={this.state.lastBindDate}\r\n                                                                    />\r\n                                                                    <em id=\"lastBindDateError\" className=\"error invalid-feedback\" ></em>\r\n\r\n                                                                    <BTN color=\"success\" onClick={() => this.saveLastBindDate()} title=\"Save Bind Date\" style={{ marginLeft: '10px', padding: \"1px 5px\" }}>\r\n                                                                        <i className=\"fa fa-check\"></i>\r\n                                                                    </BTN>\r\n                                                                    <BTN color=\"danger\" onClick={() => this.cancelLastBindDate()} title=\"Cancel Bind Date Change\" style={{ marginLeft: '5px', padding: \"1px 5px\" }}>\r\n                                                                        <i className=\"fa fa-times\"></i>\r\n                                                                    </BTN>\r\n\r\n\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        {moment(this.state.lastBindDate).format('DD/MM/YYYY')}\r\n                                                                        {(CommonConfig.isEmpty(this.state.lastBindDate) || !CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus)) ?\r\n                                                                            (null) : (\r\n                                                                                <BTN color=\"primary\" onClick={() => this.editLastBindDate()} title=\"Change Bind Date\" style={{ marginLeft: '10px', padding: \"1px 5px\" }}>\r\n                                                                                    <i className=\"fa fa-pencil\"></i>\r\n                                                                                </BTN>\r\n                                                                            )}\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:YearBuilt\")}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            <div>\r\n                                                                <p>{this.state.yearBuilt}</p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                                {(this.state.liabilityType != 'TPO') ?\r\n                                                    (<div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"3\" style={{ padding: 0 }}>\r\n                                                                <label>{t(\"policyUnderwriting:SurveyDueDate\")}</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"9\">\r\n                                                                <div>\r\n                                                                    <p>{this.state.surveyDueDate ? moment(this.state.surveyDueDate).format('DD/MM/YYYY') : \"\"}</p>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>)\r\n                                                    : (null)}\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </CardBody>\r\n\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"PolicyOptionsAdjustments\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggle('PolicyOptionsAdjustments')} aria-expanded={this.state.showPolicyOptionsAdjustments} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    {/* <i style={{marginRight: 5}} className=\"fa fa-address-card-o\"></i> */}\r\n                                    {t(\"policyUnderwriting:PolicyOptionsAdjustments#\")}\r\n                                    <i style={{ float: 'right' }} className={this.state.showPolicyOptionsAdjustments ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n\r\n                        <Collapse isOpen={this.state.showPolicyOptionsAdjustments} data-parent=\"#PolicyOptionsAdjustments\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <Row style={{ width: \"100%\" }}>\r\n                                    {(this.state.PolicyType != 'MarineTrade') ?\r\n                                        (<Col md=\"6\">\r\n                                            <span>{t(\"policyUnderwriting:PolicyOptions\")}</span>\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{t(\"policyUnderwriting:AwaitingDocuments.label\")}</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit) ? (\r\n                                                                    <div>\r\n                                                                        <Input type=\"select\" name=\"awaitingDocuments\" id=\"awaitingDocuments\" onChange={(e) => this.selectType(e.target.value, 'awaitingDocuments')} value={this.state.awaitingDocuments}>\r\n                                                                            <option value=''>{t(\"policyUnderwriting:AwaitingDocuments.defaultValue\")}</option>\r\n                                                                            {this.state.awaitingDocumentList.map((ct, i) => {\r\n                                                                                return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                            })\r\n                                                                            }\r\n                                                                        </Input>\r\n                                                                        <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:AwaitingDocuments.error\")}</em>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.awaitingDocuments}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{t(\"policyUnderwriting:PremiumCredits.label\")}</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit) ? (\r\n                                                                    <div>\r\n                                                                        <Input type=\"select\" name=\"premiumCredits\" id=\"premiumCredits\" onChange={(e) => this.selectType(e.target.value, 'premiumCredits')} value={this.state.premiumCredits}>\r\n                                                                            <option value=''>{t(\"policyUnderwriting:PremiumCredits.defaultValue\")}</option>\r\n                                                                            {this.state.premiumCreditList.map((ct, i) => {\r\n                                                                                return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                            })\r\n                                                                            }\r\n                                                                        </Input>\r\n                                                                        <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:PremiumCredits.error\")}</em>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.premiumCredits}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                            </Card>\r\n\r\n                                            <span>Current NCB</span>\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{t(\"policyGeneral:currentNCB.noofYears\")} *</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit) ? (\r\n                                                                    <div>\r\n                                                                        <Input type=\"select\" name=\"currentNCBYears\" id=\"currentNCBYears\" onChange={(e) => this.selectType(e.target.value, 'currentNCBYears')} value={this.state.currentNCBYears}>\r\n                                                                            <option value=''>{t(\"policyGeneral:currentNCB.noofYearsDefaultValue\")}</option>\r\n                                                                            {this.state.currentNCBNoofYearsList.map((ct, i) => {\r\n                                                                                return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                            })}\r\n                                                                        </Input>\r\n                                                                        <em className=\"error invalid-feedback\" >{t(\"policyGeneral:currentNCB.noofYearsError\")}</em>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.currentNCBYears}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{t(\"policyGeneral:currentNCB.NCBAmount\")}({<i className={this.props.CurrencySymbol}></i>})</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit) ? (\r\n                                                                    <div>\r\n                                                                        <Input type=\"text\" placeholder={t(\"policyGeneral:currentNCB.NCBAmountPlaceholder\")} name=\"currentNCBAmount\" id=\"currentNCBAmount\" onChange={(e) => this.handleChange(e)} value={this.state.currentNCBAmount}>\r\n                                                                        </Input>\r\n                                                                        <em className=\"error invalid-feedback\" >{t(\"policyGeneral:currentNCB.NCBAmountError\")}</em>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.currentNCBAmount}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>)\r\n                                        : (null)}\r\n\r\n                                    <Col md=\"6\">\r\n                                        <span>{t(\"policyUnderwriting:Adjustments\")}</span>\r\n                                        <Card>\r\n                                            <CardBody>\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:UnderWriter.label\")}({<i className={this.props.CurrencySymbol}></i>})</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            {(this.state.isEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input type=\"text\" name=\"underWriter\" id=\"underWriter\" onChange={(e) => this.handleChange(e)} value={this.state.underWriter}>\r\n                                                                    </Input>\r\n                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:UnderWriter.error\")}</em>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        <p>{this.state.underWriter}</p>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:Note.label\")}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"9\">\r\n                                                            {(this.state.isEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input type=\"text\" name=\"note\" id=\"note\" onChange={(e) => this.handleChange(e)} maxLength=\"200\" value={this.state.note}>\r\n                                                                    </Input>\r\n                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:Note.error\")}</em>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        <p>{this.state.note}</p>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"LimitsAdditionalCoverCommissionFeesandLevy\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggle('LimitsAdditionalCoverCommissionFeesandLevy')} aria-expanded={this.state.showLimitsAdditionalCoverCommissionFeesandLevy} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    {/* <i style={{marginRight: 5}} className=\"fa fa-address-card-o\"></i> */}\r\n                                    {t(\"policyUnderwriting:LimitsAdditionalCoverCommissionFeesandLevy#\")}\r\n                                    <i style={{ float: 'right' }} className={this.state.showLimitsAdditionalCoverCommissionFeesandLevy ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n\r\n                        <Collapse isOpen={this.state.showLimitsAdditionalCoverCommissionFeesandLevy} data-parent=\"#LimitsAdditionalCoverCommissionFeesandLevy\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <Row style={{ width: \"100%\" }}>\r\n                                    {(this.state.PolicyType != 'MarineTrade') ?\r\n                                        (<Col md=\"6\">\r\n                                            <span>{t(\"policyUnderwriting:LimitsAdditionalCover\")}</span>\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{t(\"policyUnderwriting:ThirdPartyLiability.label\")}({<i className={this.props.CurrencySymbol}></i>})*</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit) ? (\r\n                                                                    <div>\r\n                                                                        <Input type=\"select\" name=\"thirdPartyLiability\" id=\"thirdPartyLiability\" onChange={(e) => this.selectType(e.target.value, 'thirdPartyLiability')} value={this.state.thirdPartyLiability}>\r\n                                                                            <option value=''>{t(\"policyUnderwriting:ThirdPartyLiability.defaultValue\")}</option>\r\n                                                                            {this.state.thirdPartyLiabilityList.map((ct, i) => {\r\n                                                                                return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                            })\r\n                                                                            }\r\n                                                                        </Input>\r\n                                                                        <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:ThirdPartyLiability.error\")}</em>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.thirdPartyLiability}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                    {(this.state.DisplayWater == 1) ?\r\n                                                        (\r\n                                                            <div>\r\n                                                                <div className=\"input-box\">\r\n                                                                    <Row>\r\n                                                                        <Col md=\"4\">\r\n                                                                            <label>{t(\"policyUnderwriting:WaterSkiingLiability.label\")}</label>\r\n                                                                        </Col>\r\n                                                                        <Col md=\"8\">\r\n                                                                            {(this.state.isEdit) ? (\r\n                                                                                <div>\r\n                                                                                    <Input type=\"checkbox\" name=\"isWaterSkiing\" id=\"isWaterSkiing\" onChange={(e) => this.handleChange(e)} value={this.state.isWaterSkiing} checked={this.state.isWaterSkiing == true} />\r\n\r\n                                                                                    {this.state.isWaterSkiing ? (\r\n                                                                                        <div>\r\n                                                                                            <p>Amount: {this.state.waterSkiingLiability}</p>\r\n                                                                                        </div>\r\n                                                                                    ) : (null)}\r\n                                                                                </div>\r\n                                                                            ) : (\r\n                                                                                    <div>\r\n                                                                                        {this.state.isWaterSkiing ? (\r\n                                                                                            <p> {this.state.waterSkiingLiability}</p>\r\n                                                                                        ) : (null)}\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"input-box\">\r\n                                                                    <Row>\r\n                                                                        <Col md=\"4\">\r\n                                                                            <label>{t(\"policyUnderwriting:WaterToysLiabiility.label\")}</label>\r\n                                                                        </Col>\r\n                                                                        <Col md=\"8\">\r\n                                                                            {(this.state.isEdit) ? (\r\n                                                                                <div>\r\n                                                                                    <Input type=\"checkbox\" name=\"isWaterToys\" id=\"isWaterToys\" onChange={(e) => this.handleChange(e)} value={this.state.isWaterToys} checked={this.state.isWaterToys == true} />\r\n\r\n                                                                                    {this.state.isWaterToys ? (\r\n                                                                                        <div>\r\n                                                                                            <p>Amount: {this.state.waterToysLiability}</p>\r\n                                                                                        </div>\r\n                                                                                    ) : (null)}\r\n                                                                                </div>\r\n\r\n                                                                            ) : (\r\n                                                                                    <div>\r\n                                                                                        {this.state.isWaterToys ? (\r\n                                                                                            <p>{this.state.waterToysLiability}</p>\r\n                                                                                        ) : (null)}\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ) : (null)}\r\n                                                    {(this.state.DisplayRacing == 1) ?\r\n                                                        (\r\n                                                            <div>\r\n                                                                <div className=\"input-box\">\r\n                                                                    <Row>\r\n                                                                        <Col md=\"4\">\r\n                                                                            <label>{t(\"policyUnderwriting:SailRacingCoverage.label\")}</label>\r\n                                                                        </Col>\r\n                                                                        <Col md=\"8\">\r\n                                                                            {(this.state.isEdit) ? (\r\n                                                                                <div>\r\n                                                                                    <Input type=\"checkbox\" name=\"isSailRacing\" id=\"isSailRacing\" onChange={(e) => this.handleChange(e)} value={this.state.isSailRacing} checked={this.state.isSailRacing === true} />\r\n\r\n                                                                                    {this.state.isSailRacing ? (\r\n                                                                                        <div>\r\n                                                                                            <Input type=\"text\" name=\"sailRacingCoverage\" id=\"sailRacingCoverage\" onChange={(e) => this.handleChange(e)} value={this.state.sailRacingCoverage}>\r\n                                                                                            </Input>\r\n                                                                                            <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:SailRacingCoverage.error\")}</em>\r\n                                                                                        </div>\r\n                                                                                    ) : (null)}\r\n                                                                                </div>\r\n                                                                            ) : (\r\n                                                                                    <div>\r\n                                                                                        {this.state.isSailRacing ? (\r\n                                                                                            <p>{this.state.sailRacingCoverage}</p>\r\n                                                                                        ) : (null)}\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"input-box\">\r\n                                                                    <Row>\r\n                                                                        <Col md=\"4\">\r\n                                                                            <label>{t(\"policyUnderwriting:RacingEventType.label\")}</label>\r\n                                                                        </Col>\r\n                                                                        <Col md=\"8\">\r\n                                                                            {(this.state.isEdit) ? (\r\n                                                                                <div>\r\n                                                                                    <Input type=\"select\" name=\"racingEventType\" id=\"racingEventType\" onChange={(e) => this.selectType(e.target.value, 'racingEventType')} value={this.state.racingEventType}>\r\n                                                                                        <option value=''>{t(\"policyUnderwriting:RacingEventType.defaultValue\")}</option>\r\n                                                                                        {this.state.racingEventTypeList.map((ct, i) => {\r\n                                                                                            return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                                        })\r\n                                                                                        }\r\n                                                                                    </Input>\r\n                                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:RacingEventType.error\")}</em>\r\n                                                                                </div>\r\n                                                                            ) : (\r\n                                                                                    <div>\r\n                                                                                        <p>{this.state.racingEventType}</p>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ) : (null)}\r\n\r\n                                                    {(this.state.DisplayCrew == 1) ?\r\n                                                        (\r\n                                                            <div className=\"input-box\">\r\n                                                                <Row>\r\n                                                                    <Col md=\"4\">\r\n                                                                        <label>{t(\"policyUnderwriting:CrewLiability.label\")}</label>\r\n                                                                    </Col>\r\n                                                                    <Col md=\"8\">\r\n                                                                        {(this.state.isEdit) ? (\r\n                                                                            <div>\r\n                                                                                <Input type=\"select\" name=\"crewLiability\" id=\"crewLiability\" onChange={(e) => this.selectType(e.target.value, 'crewLiability')} value={this.state.crewLiability}>\r\n                                                                                    <option value=''>{t(\"policyUnderwriting:CrewLiability.defaultValue\")}</option>\r\n                                                                                    {this.state.crewLiabilityList.map((ct, i) => {\r\n                                                                                        return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                                    })\r\n                                                                                    }\r\n                                                                                </Input>\r\n                                                                                <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:CrewLiability.error\")}</em>\r\n                                                                            </div>\r\n                                                                        ) : (\r\n                                                                                <div>\r\n                                                                                    <p>{this.state.crewLiability}</p>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        ) : (null)}\r\n\r\n                                                    {/* <div className=\"input-box\">\r\n                                                                <Row>\r\n                                                                    <Col md=\"4\">\r\n                                                                        <label>{t(\"policyUnderwriting:Excess.label\")}</label>\r\n                                                                    </Col>\r\n                                                                    <Col md=\"8\">\r\n                                                                        {(this.state.isEdit) ? (\r\n                                                                            <div>\r\n                                                                                <Input type=\"text\" name=\"excess\" id=\"excess\" onChange={(e) => this.handleChange(e)} value={this.state.excess}>\r\n                                                                                </Input>\r\n                                                                                <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:Excess.error\")}</em>\r\n                                                                            </div>\r\n                                                                        ) : (\r\n                                                                                <div>\r\n                                                                                    <p>{this.state.excess}</p>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </div> */}\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>)\r\n                                        : (null)}\r\n\r\n                                    <Col md=\"6\">\r\n                                        <span>{t(\"policyUnderwriting:Commission\")}</span>\r\n                                        <Card>\r\n                                            <CardBody>\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:gross.label\")} %</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"4\">\r\n\r\n                                                            {(this.state.isEdit && this.state.PolicyType === 'Vessel-Nonrated') ? (\r\n                                                                <div>\r\n                                                                    {/* % {this.state.gross} */}\r\n                                                                    {/* <label>% </label> */}\r\n                                                                    <Input type=\"gross\" name=\"gross\" id=\"gross\" onChange={(e) => this.handleChange(e)} value={this.state.gross}>\r\n                                                                    </Input>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <label>\r\n                                                                        {this.state.gross}\r\n                                                                    </label>\r\n                                                                )}\r\n                                                        </Col>\r\n\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:GrossAmount\")}({<i className={this.props.CurrencySymbol}></i>})</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"2\">\r\n                                                            <p>{this.state.totalgross}</p>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:agency.label\")} %</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"4\">\r\n                                                            <div className=\"pl-inner\">\r\n                                                                {(this.state.changeAgencyCommission) ? (\r\n                                                                    <span>\r\n                                                                        <Input type=\"text\" name=\"agency\" id=\"agency\" onChange={(e) => this.handleChange(e)} value={this.state.agency} style={{ display: \"inline-block\", width: \"70%\" }} />\r\n                                                                        {/* <em id=\"policyNumberError\" className=\"error invalid-feedback\"></em> */}\r\n                                                                    </span>\r\n                                                                ) : (\r\n                                                                        <span style={{ width: \"70%\" }}>{this.state.agency}</span>\r\n                                                                    )}\r\n                                                                {(CommonConfig.ShowHideActionOnPolicyStatus(this.state.policyStatus) == 1)\r\n                                                                    ? (<BTN color=\"primary\" onClick={() => this.editAgencyCommission()} title=\"Change Agency Commission\" style={{ padding: \"1px 5px\" }}>\r\n                                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                                    </BTN>)\r\n                                                                    : (null)}\r\n                                                            </div>\r\n                                                            {/* <label>{this.state.agency}</label> */}\r\n                                                        </Col>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:AgencyAmount\")}({<i className={this.props.CurrencySymbol}></i>})</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"2\">\r\n                                                            <div>\r\n                                                                <p>{this.state.agencyTotal}</p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:balance.label\")} %</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"4\">\r\n                                                            <label>{this.state.balance}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"3\">\r\n                                                            <label>{t(\"policyUnderwriting:BalanceAmount\")}({<i className={this.props.CurrencySymbol}></i>})</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"2\">\r\n                                                            <div>\r\n                                                                <p>{this.state.balanceTotal}</p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                        {\r\n                                            (this.state.PolicyType == 'MarineTrade' || this.state.PolicyType == 'MultiVessel') ? (<Card>\r\n                                                <CardBody>\r\n                                                    {(this.state.isEdit) ? (\r\n                                                        <div className=\"input-box\">\r\n                                                            <Row>\r\n                                                                <Col md=\"4\">\r\n                                                                    <label>{(this.state.PolicyType == 'MarineTrade') ? 'MarineTradePremium' : 'MultiVesselPremium'}</label>\r\n                                                                </Col>\r\n                                                                <Col md=\"4\">\r\n                                                                    <div>\r\n                                                                        <Input type=\"text\" name=\"MarineTradePremium\" id=\"MarineTradePremium\" onChange={(e) => this.handleChange(e)} value={this.state.MarineTradePremium}></Input>\r\n                                                                        <em id=\"MarineTradePremiumError\" className=\"error invalid-feedback\" ></em>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>) : (\r\n                                                            <div className=\"input-box\">\r\n                                                                <Row>\r\n                                                                    <Col md=\"4\">\r\n                                                                        <label>{(this.state.PolicyType == 'MarineTrade') ? 'MarineTradePremium' : 'MultiVesselPremium'}</label>\r\n                                                                    </Col>\r\n                                                                    <Col md=\"4\">\r\n                                                                        <div>\r\n                                                                            <p>{this.state.MarineTradePremium}</p>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        )}\r\n                                                </CardBody>\r\n                                            </Card>) : null\r\n                                        }\r\n                                        <span>{t(\"policyUnderwriting:FeesandLevy\")}</span>\r\n\r\n                                        <Card>\r\n                                            <CardBody>\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"2\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:GovtLevy.label\")}</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"5\">\r\n                                                            {(this.state.isEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input type=\"select\" name=\"governmentLavys\" id=\"governmentLavys\" onChange={(e) => this.selectType(e.target.value, 'governmentLavys')} value={this.state.governmentLavys}>\r\n                                                                        {/* <option value=''>{t(\"policyUnderwriting:GovtLevy.defaultValue\")}</option> */}\r\n                                                                        {this.state.govtLevyList.map((ct, i) => {\r\n                                                                            return (<option value={ct.StringMapKey} key={i}>{ct.StringMapName}</option>)\r\n                                                                        })\r\n                                                                        }\r\n                                                                    </Input>\r\n                                                                    <em className=\"error invalid-feedback\" >{t(\"policyUnderwriting:GovtLevy.error\")}</em>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        <p>{this.state.governmentLavys}</p>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                        <Col md=\"2\">\r\n                                                            {\r\n                                                                (this.state.governmentLavys === \"DEFAULT\") ? (\r\n                                                                    <label>{this.state.governmentLavysPercent}%</label>\r\n                                                                ) : (null)\r\n                                                            }\r\n                                                        </Col>\r\n                                                        <Col md=\"3\">\r\n                                                            {(this.state.isEdit) ? (\r\n                                                                <div>\r\n                                                                    <Input readOnly={(this.state.governmentLavys === \"DEFAULT\") ? (true) : (false)} type=\"text\" name=\"governmentLavysAmount\" id=\"governmentLavysAmount\" onChange={(e) => this.handleChange(e)} value={this.state.governmentLavysAmount}></Input>\r\n                                                                    <em id=\"governmentLavysAmountError\" className=\"error invalid-feedback\"></em>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                    <div>\r\n                                                                        <p>{<i className={this.props.CurrencySymbol}></i>}{this.state.governmentLavysAmount}</p>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                                <div className=\"input-box\">\r\n                                                    <Row>\r\n                                                        <Col md=\"2\" style={{ padding: 0 }}>\r\n                                                            <label>{t(\"policyUnderwriting:AdminFee\")}({<i className={this.props.CurrencySymbol}></i>})</label>\r\n                                                        </Col>\r\n                                                        <Col md=\"5\">\r\n                                                            <div>\r\n                                                                {(this.state.isEdit) ? (\r\n                                                                    <label>\r\n                                                                        <Input type=\"text\" name=\"adminFees\" id=\"adminFees\" onChange={(e) => this.handleChange(e)} value={this.state.adminFees}></Input>\r\n                                                                        <em id=\"adminFeesError\" className=\"error invalid-feedback\" ></em>\r\n                                                                    </label>\r\n                                                                ) : (\r\n                                                                        <p>{this.state.adminFees}</p>\r\n                                                                    )}\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                        <Col md=\"4\">\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                {(this.state.PolicyType != 'MarineTrade') ?\r\n                    (<div className=\"input-box\" id=\"RatingExcess\">\r\n                        <Card className=\"mb-0\">\r\n                            <CardHeader id=\"headingOne\">\r\n                                <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggle('RatingExcess')} aria-expanded={this.state.showRatingExcess} aria-controls=\"collapseOne\">\r\n                                    <h5 className=\"m-0 p-0\">\r\n                                        {/* <i style={{marginRight: 5}} className=\"fa fa-address-card-o\"></i> */}\r\n                                        {t(\"policyUnderwriting:RatingExcess#\")}\r\n                                        <i style={{ float: 'right' }} className={this.state.showRatingExcess ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\"}></i>\r\n                                    </h5>\r\n                                </BTN>\r\n                            </CardHeader>\r\n\r\n                            <Collapse isOpen={this.state.showRatingExcess} data-parent=\"#RatingExcess\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                                <CardBody>\r\n                                    <Row style={{ width: \"100%\" }}>\r\n                                        <Col md=\"12\">\r\n                                            <Card>\r\n                                                <CardBody>\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{t(\"policyUnderwriting:RatingType\")} *</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit && this.state.PolicyType === 'VesselNonrated') ? (\r\n                                                                    <div>\r\n                                                                        <div className=\"rc-inline\">\r\n                                                                            <label>\r\n                                                                                <Input type=\"radio\" id=\"ratingType\" name=\"ratingType\" checked={(this.state.ratingType === 'Rating') ? true : false}\r\n                                                                                    value={this.state.ratingType} onChange={() => this.onRadioBtnClick('ratingType', 'Rating')}\r\n                                                                                />\r\n                                                                                {t(\"policyUnderwriting:Rating\")}\r\n                                                                            </label>\r\n\r\n                                                                            <label >\r\n                                                                                <Input type=\"radio\" id=\"ratingType\" name=\"ratingType\" checked={(this.state.ratingType === 'Absolute') ? true : false}\r\n                                                                                    value={this.state.ratingType} onChange={() => this.onRadioBtnClick('ratingType', 'Absolute')} />\r\n                                                                                {t(\"policyUnderwriting:Absolute\")}\r\n                                                                            </label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.ratingType}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{this.state.ratingType}</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit && this.state.PolicyType === 'VesselNonrated') ? (\r\n                                                                    <label>\r\n                                                                        <Input type=\"text\" name=\"ratingTypeValue\" id=\"ratingTypeValue\" onChange={(e) => this.handleChange(e)} value={this.state.ratingTypeValue} />\r\n                                                                        <em id=\"ratingTypeValueError\" className=\"error invalid-feedback\"></em>\r\n                                                                    </label>)\r\n                                                                    : (<p>{this.state.ratingTypeValue}</p>)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"input-box\">\r\n                                                        <Row>\r\n                                                            <Col md=\"4\">\r\n                                                                <label>{t(\"policyUnderwriting:Excess.label\")}({<i className={this.props.CurrencySymbol}></i>}) *</label>\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                {(this.state.isEdit && this.state.PolicyType === 'VesselNonrated') ? (\r\n                                                                    <div>\r\n                                                                        <Input type=\"text\" name=\"excess\" id=\"excess\" onChange={(e) => this.handleChange(e)} value={this.state.excess}>\r\n                                                                        </Input>\r\n                                                                        <em id=\"excessError\" className=\"error invalid-feedback\"></em>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div>\r\n                                                                            <p>{this.state.excess}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                            </Collapse>\r\n                        </Card>\r\n                    </div>)\r\n                    : (null)}\r\n\r\n                <Row>\r\n                    {(this.state.isEdit) ? (\r\n                        <Col md=\"4\" style={{ margin: \"auto\" }}>\r\n                            <BTN color=\"primary\" onClick={() => this.goBack()}>\r\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-angle-left\"></i>\r\n                                {BackButton}\r\n                            </BTN>\r\n\r\n                            <BTN style={{ marginLeft: \"10px\" }} color=\"success\" onClick={() => this.Save()}>\r\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-check\"></i>\r\n                                {SaveButton}\r\n                            </BTN>\r\n\r\n                            <BTN style={{ marginLeft: \"10px\" }} color=\"primary\" onClick={() => this.goBack()}>\r\n                                <i style={{ marginRight: \"10px\" }} className=\"fa fa-times\"></i>\r\n                                {CancelButton}\r\n                            </BTN>\r\n                        </Col>\r\n                    ) : (null)}\r\n                </Row>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Underwriting);\r\n"]},"metadata":{},"sourceType":"module"}