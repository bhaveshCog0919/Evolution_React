{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/subAgentAutoStatementSummary.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, InputGroup, CardBody, Row, Col } from 'reactstrap';\nimport APIConstant from '../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport { apiBase } from '../../utils/config';\nimport axios from 'axios';\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\n\nclass SubAgentAutoStatementSummary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadData = rowdata => {\n      console.log(\"downloadData---rowdata\", rowdata);\n      var path = apiBase + \"SubAgentStatement/\" + rowdata.StatementReferenceName;\n      let filext = this.getFileExtension(rowdata.StatementReferenceName);\n      console.log(\"filext\", filext);\n      let fileName = rowdata.StatementReferenceName;\n\n      if (filext == undefined) {\n        fileName = rowdata.StatementReferenceName + \".\" + rowdata.type;\n      }\n\n      axios({\n        url: path,\n        method: 'GET',\n        responseType: 'blob' // important\n\n      }).then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fileName); //or any other extension\n\n        document.body.appendChild(link);\n        link.click();\n      });\n    };\n\n    this.getFileExtension = filename => {\n      return /[.]/.exec(filename) ? /[^.]+$/.exec(filename)[0] : undefined;\n    };\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'tillDate') {\n        this.setState({\n          tillDate: e.target.value,\n          tillDateError: false\n        });\n        this.show('tillDate', false, 'tillDateError', '');\n      }\n\n      if (e.target.name === 'newEntryDate') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            newEntryDateError: true\n          });\n          this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\n        } else {\n          this.setState({\n            newEntryDateError: false,\n            newEntryDate: e.target.value\n          });\n          this.show(\"newEntryDate\", false, \"newEntryDateError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'policyFrom') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyFrom: ''\n          });\n        } else {\n          this.setState({\n            policyFrom: e.target.value,\n            policyTo: ''\n          });\n          this.show('policyTo', false, 'policyToError', '');\n        }\n      }\n\n      if (e.target.name === 'policyTo') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyTo: ''\n          });\n        } else {\n          if (!CommonConfig.isEmpty(this.state.policyFrom)) {\n            var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.policyFrom);\n\n            if (!isToDateGreater) {\n              this.show('policyTo', true, 'policyToError', 'To date must be greater then From date.');\n            } else {\n              this.show('policyTo', false, 'policyToError', '');\n            }\n          } else {\n            this.show('policyTo', false, 'policyToError', '');\n          }\n\n          this.setState({\n            policyTo: e.target.value\n          });\n        }\n      }\n    };\n\n    let columns = [{\n      field: \"SubAgentName\",\n      header: \"Sub Agent Name\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"SubAgentCode\",\n      header: \"Sub Agent Code\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"ReportMonth\",\n      header: \"Month\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"ReportYear\",\n      header: \"Year\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"StatementReferenceName\",\n      header: \"Referance Name\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"CreatedOn\",\n      header: \"Generated On\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"SentDate\",\n      header: \"Sent On\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"Stage\",\n      header: \"Stage\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      body: this.linkdata.bind(this),\n      field: \"Action\",\n      header: \"Action\",\n      sortable: false,\n      filterMatchMode: 'contains',\n      filter: false,\n      style: {\n        'width': '160px'\n      },\n      id: 8\n    }];\n    let columns1 = [{\n      field: \"AgentName\",\n      header: \"Agent Name\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '80px'\n      }\n    }, // { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 3, style: { 'width': '80px' } },\n    {\n      field: \"TransactionDate\",\n      header: \"Transaction Date\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"TransactionType\",\n      header: \"Transaction Type\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '90px'\n      }\n    }, {\n      field: \"NetPremium\",\n      header: \"Net Premium\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Levy\",\n      header: \"Levy\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AdminFeeAmount\",\n      header: \"Admin Fee\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Gross\",\n      header: \"Gross Amount\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AgentCommissionAmount\",\n      header: \"Agent Commission Amount\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Amount Due to Yachtsman\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"DueDate\",\n      header: \"Due Date\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '80px'\n      }\n    } // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15, style: { 'width': '60px', 'textAlign': 'right' } },\n    ];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      cols1: columns1,\n      showcol2: false,\n      arr: [],\n      arr1: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      selected: {},\n      selectedPolicy: 0,\n      selectedAgent: '',\n      selectAll: 0,\n      isMonthYear: true,\n      newEntryDate: moment().format('YYYY-MM-DD'),\n      newEntryDateError: false,\n      paymentMode: '',\n      paymentModearr: [],\n      paymentModeError: false,\n      monthArray: [],\n      policyMonth: moment().format('M'),\n      policyMonthError: false,\n      yearArray: [],\n      policyYear: moment().format('YYYY'),\n      policyYearError: false,\n      policyFrom: '',\n      policyFromError: false,\n      policyTo: '',\n      policyToError: false,\n      note: '',\n      DebtorType: 'SubAgent',\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      tillDate: moment().format(\"YYYY-MM\"),\n      tillDateError: false,\n      isFilterTableShow: false,\n      custom: true,\n      tab2Title: \"Sub Agent Statements\"\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.colOptions1 = [];\n\n    for (let col of columns1) {\n      this.colOptions1.push({\n        label: col.header,\n        value: col\n      });\n    }\n  }\n\n  linkdata(rowData) {\n    var path = apiBase + \"SubAgentStatement/\" + rowData.StatementReferenceName;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BTN, {\n      color: \"warning\",\n      title: \"Search\",\n      onClick: () => this.viewSubAgentDetail(rowData.id),\n      style: {\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-eye\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 133\n      }\n    }), \" \"), rowData.StatementReferenceName.substring(rowData.StatementReferenceName.length - 4) == 'xlsx' ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      title: \"Search\",\n      style: {\n        marginRight: \"10px\"\n      },\n      onClick: () => this.downloadData(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 124\n      }\n    }), \" \") : null, rowData.Stage == \"Review\" ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"change to Release\",\n      onClick: () => this.changeStage(rowData.id, \"ReleaseAuto\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \" change to Release Auto \") : rowData.Stage == \"ReleaseAuto\" ? /*#__PURE__*/React.createElement(BTN, {\n      color: \"secondary\",\n      title: \"change to Review\",\n      onClick: () => this.changeStage(rowData.id, \"Review\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \" change to Review \") : null);\n  }\n\n  actionTemplate(rowData, column) {}\n\n  componentDidMount() {\n    let loginPerson = CommonConfig.loggedInUserData().LoginId;\n    this.setState({\n      loggingUserId: loginPerson\n    });\n    this.getDropdown();\n  }\n\n  getDropdown() {\n    // Get Month\n    let monthArray = [{\n      label: 'January',\n      value: 1\n    }, {\n      label: 'February',\n      value: 2\n    }, {\n      label: 'March',\n      value: 3\n    }, {\n      label: 'April',\n      value: 4\n    }, {\n      label: 'May',\n      value: 5\n    }, {\n      label: 'June',\n      value: 6\n    }, {\n      label: 'July',\n      value: 7\n    }, {\n      label: 'August',\n      value: 8\n    }, {\n      label: 'September',\n      value: 9\n    }, {\n      label: 'October',\n      value: 10\n    }, {\n      label: 'November',\n      value: 11\n    }, {\n      label: 'December',\n      value: 12\n    }];\n    this.setState({\n      monthArray: monthArray\n    }); // Get Year - Get last 10 year from current year\n\n    let startYear = moment().format('YYYY');\n    let yearArray = [];\n\n    for (let index = startYear; index >= parseInt(startYear) - 10; index--) {\n      yearArray.push({\n        label: index,\n        value: index\n      });\n    }\n\n    this.setState({\n      yearArray: yearArray\n    });\n  }\n\n  // export() {\n  //     // this.dt.exportCSV();\n  // }\n  customExport() {\n    debugger;\n    var data = {\n      id: this.state.selectedAgent\n    };\n    api.post('api/testExcel', data).then(res => {\n      console.log(\"testExcel\", res);\n\n      if (res.success) {}\n    });\n  }\n\n  filterData() {\n    console.log(\"this.state.policyMonth\", this.state.policyMonth);\n\n    if (CommonConfig.isEmpty(this.state.policyMonth) || CommonConfig.isEmpty(this.state.policyYear)) {\n      toast.error('Please select Month and Year.');\n      return false;\n    }\n\n    this.subagentstatement();\n  }\n\n  changeStage(id, stage) {\n    var data = {\n      id: id ? id : '',\n      stage: stage ? stage : '',\n      CurrentUserId: this.state.loggingUserId ? this.state.loggingUserId : ''\n    };\n    api.post('api/SubAgentAutoUpadateStage', data).then(res => {\n      console.log(\"autosubagentstatement\", res);\n\n      if (res.success) {\n        this.filterData();\n        toast.success('Stage changed successful');\n      }\n    });\n  }\n\n  subagentstatement() {\n    var data = {\n      policyMonth: this.state.policyMonth ? this.state.policyMonth : '',\n      policyYear: this.state.policyYear ? this.state.policyYear : ''\n    };\n    api.post('api/autosubagentstatement', data).then(res => {\n      console.log(\"autosubagentstatement\", res);\n\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        debugger;\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            formattedData.push({\n              id: tempData.SubAgentStatementHeaderId,\n              SubAgentName: tempData.SubAgentName,\n              SubAgentCode: tempData.AgentContactCode,\n              ReportMonth: tempData.ReportMonth,\n              ReportYear: tempData.ReportYear,\n              StatementReferenceName: tempData.StatementReferenceName,\n              CreatedOn: moment(tempData.CreatedOn).format('DD/MM/YYYY'),\n              SentDate: CommonConfig.isEmpty(tempData.SentDate) ? \"\" : moment(tempData.SentDate).format('DD/MM/YYYY'),\n              Stage: tempData.Stage\n            });\n          }\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str,\n          isFilterTableShow: true\n        });\n      }\n    });\n  }\n\n  viewSubAgentDetail(id) {\n    var data = {\n      id: id\n    };\n    api.post('api/viewAutoSubAgentStatement', data).then(res => {\n      console.log(\"viewAutoSubAgentStatement\", res);\n\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        debugger;\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          var NetPremium = 0;\n          var Levy = 0;\n          var PaidAmount = 0;\n          var Gross = 0;\n          var AdminFeeAmount = 0;\n          var AgentCommissionAmount = 0;\n          var YCommissionAmount = 0;\n\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            formattedData.push({\n              id: i,\n              AgentName: tempData.AgentName,\n              ClientName: tempData.ClientName,\n              PolicyNumber: tempData.PolicyNumber,\n              RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\n              TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\n              TransactionType: tempData.TransactionType,\n              AgentCommissionAmount: parseFloat(tempData.AgentCommissionAmount ? tempData.AgentCommissionAmount : 0).toFixed(2),\n              AdminFeeAmount: parseFloat(tempData.AdminFee ? tempData.AdminFee : 0).toFixed(2),\n              YCommissionAmount: parseFloat(tempData.AmountDueToYachtsman ? tempData.AmountDueToYachtsman : 0).toFixed(2),\n              DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\n              Gross: parseFloat(tempData.GrossAmount ? tempData.GrossAmount : 0).toFixed(2),\n              NetPremium: parseFloat(tempData.NetPremium ? tempData.NetPremium : 0).toFixed(2),\n              Levy: parseFloat(tempData.Levy ? tempData.Levy : 0).toFixed(2)\n            });\n            NetPremium = NetPremium + tempData.NetPremium;\n            Levy = Levy + tempData.Levy; // PaidAmount = PaidAmount + tempData.PaymentAmount;\n\n            Gross = Gross + tempData.GrossAmount;\n            AdminFeeAmount = AdminFeeAmount + tempData.AdminFee;\n            AgentCommissionAmount = AgentCommissionAmount + tempData.AgentCommissionAmount;\n            YCommissionAmount = YCommissionAmount + tempData.AmountDueToYachtsman;\n          }\n\n          formattedData.push({\n            Gross: parseFloat(Gross).toFixed(2),\n            NetPremium: parseFloat(NetPremium).toFixed(2),\n            Levy: parseFloat(Levy).toFixed(2),\n            // PaidAmount: parseFloat(PaidAmount).toFixed(2),\n            AdminFeeAmount: parseFloat(AdminFeeAmount).toFixed(2),\n            AgentCommissionAmount: parseFloat(AgentCommissionAmount).toFixed(2),\n            YCommissionAmount: parseFloat(YCommissionAmount).toFixed(2)\n          });\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr1: formattedData,\n          str: str,\n          isFilterTableShow: false,\n          selectedAgent: id\n        });\n      }\n    });\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'paymentMode') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          paymentModeError: true,\n          paymentMode: value\n        });\n        this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\n      } else {\n        this.setState({\n          paymentModeError: false,\n          paymentMode: value\n        });\n        this.show('paymentMode', false, \"paymentModeError\", \"\");\n      }\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        DebtorType: 'SubAgent'\n      });\n    }\n\n    if (type === 'policyMonth') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyMonth: ''\n        });\n      } else {\n        this.setState({\n          policyMonth: value.value\n        });\n      }\n    }\n\n    if (type === 'policyYear') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyYear: ''\n        });\n      } else {\n        this.setState({\n          policyYear: value.value\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = '';\n    let columns1 = ''; // if (this.state.agentinfo == '') {\n\n    columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 20\n        }\n      });\n    });\n\n    if (this.state.arr1.length > 0) {\n      columns1 = this.state.cols1.map((col1, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col1.field,\n          header: col1.header,\n          body: col1.body,\n          sortable: col1.sortable,\n          filter: col1.filter,\n          filterMatchMode: col1.filterMatchMode,\n          style: col1.style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 24\n          }\n        });\n      });\n    } else {\n      columns = this.state.cols.map((col, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col.field,\n          header: col.header,\n          body: col.body,\n          sortable: col.sortable,\n          filter: col.filter,\n          filterMatchMode: col.filterMatchMode,\n          style: col.style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 24\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }\n    }, \"Auto Sub Agent Statement\"), /*#__PURE__*/React.createElement(\"div\", {\n      md: \"3\",\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 33\n      }\n    }, \"Search Sub Agent\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"1.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 49\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyMonth\",\n      id: \"policyMonth\",\n      value: this.state.policyMonth,\n      onChange: e => this.selectType(e.target, 'policyMonth'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 53\n      }\n    }, \"Select Month\"), this.state.monthArray.map((month, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month.value,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 65\n        }\n      }, month.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyMonthError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 49\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyYear\",\n      id: \"policyYear\",\n      value: this.state.policyYear,\n      onChange: e => this.selectType(e.target, 'policyYear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 53\n      }\n    }, \"Select Year\"), this.state.yearArray.map((year, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: year.value,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 65\n        }\n      }, year.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyYearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2.5\",\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 45\n      }\n    }, \" Search \")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        isFilterTableShow: !this.state.isFilterTableShow\n      }),\n      \"aria-expanded\": this.state.isFilterTableShow,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 37\n      }\n    }, this.state.tab2Title), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.isFilterTableShow ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.isFilterTableShow,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Sub Agent Statement\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 33\n      }\n    }, columns))))), this.state.arr1.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr1,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Sub Agent Statement\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 25\n      }\n    }, columns1)) : null);\n  }\n\n}\n\nexport default withTranslation()(SubAgentAutoStatementSummary);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/subAgentAutoStatementSummary.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","InputGroup","CardBody","Row","Col","APIConstant","Modal","ModalBody","ModalHeader","ModalFooter","toast","apiBase","axios","SearchBox","SubAgentAutoStatementSummary","constructor","props","downloadData","rowdata","console","log","path","StatementReferenceName","filext","getFileExtension","fileName","undefined","type","url","method","responseType","then","response","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","filename","exec","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","tillDate","tillDateError","show","isEmpty","newEntryDateError","newEntryDate","policyFrom","policyTo","isToDateGreater","isSameOrAfter","columns","field","header","sortable","filter","id","style","linkdata","bind","filterMatchMode","columns1","LanguageId","i18n","language","cols","cols1","showcol2","arr1","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","selected","selectedPolicy","selectedAgent","selectAll","isMonthYear","format","paymentMode","paymentModearr","paymentModeError","monthArray","policyMonth","policyMonthError","yearArray","policyYear","policyYearError","policyFromError","policyToError","note","DebtorType","DebtorTypeError","agentinfo","agentinfoError","isFilterTableShow","custom","tab2Title","colOptions","col","push","label","colOptions1","rowData","viewSubAgentDetail","marginRight","substring","Stage","changeStage","actionTemplate","column","componentDidMount","loginPerson","loggedInUserData","LoginId","loggingUserId","getDropdown","startYear","index","parseInt","customExport","post","res","success","filterData","error","subagentstatement","stage","CurrentUserId","formattedData","dataLength","i","tempData","SubAgentStatementHeaderId","SubAgentName","SubAgentCode","AgentContactCode","ReportMonth","ReportYear","CreatedOn","SentDate","NetPremium","Levy","PaidAmount","Gross","AdminFeeAmount","AgentCommissionAmount","YCommissionAmount","AgentName","ClientName","PolicyNumber","RenewalDate","TransactionDate","TransactionType","parseFloat","toFixed","AdminFee","AmountDueToYachtsman","DueDate","GrossAmount","selectType","getOrganazationData","render","t","map","col1","columnToggleIcon","position","onColumnToggle","width","float","month","year","marginTop","el","dt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, InputGroup, CardBody, Row, Col } from 'reactstrap';\r\nimport APIConstant from '../../utils/constants';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { apiBase } from '../../utils/config';\r\nimport axios from 'axios';\r\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\r\n\r\nclass SubAgentAutoStatementSummary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"SubAgentName\", header: \"Sub Agent Name\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"SubAgentCode\", header: \"Sub Agent Code\", sortable: true, filter: true, id: 1, style: { 'width': '60px' } },\r\n            { field: \"ReportMonth\", header: \"Month\", sortable: true, filter: true, id: 2, style: { 'width': '60px' } },\r\n            { field: \"ReportYear\", header: \"Year\", sortable: true, filter: true, id: 3, style: { 'width': '60px' } },\r\n            { field: \"StatementReferenceName\", header: \"Referance Name\", sortable: true, filter: true, id: 4, style: { 'width': '100px' } },\r\n            { field: \"CreatedOn\", header: \"Generated On\", sortable: true, filter: true, id: 5, style: { 'width': '60px' } },\r\n            { field: \"SentDate\", header: \"Sent On\", sortable: true, filter: true, id: 6, style: { 'width': '60px' } },\r\n            { field: \"Stage\", header: \"Stage\", sortable: true, filter: true, id: 7, style: { 'width': '60px' } },\r\n            { body: this.linkdata.bind(this), field:\"Action\", header: \"Action\", sortable: false,filterMatchMode: 'contains', filter: false, style: { 'width': '160px' }, id: 8 }\r\n        ]\r\n\r\n        let columns1 = [\r\n            { field: \"AgentName\", header: \"Agent Name\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 1, style: { 'width': '60px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 2, style: { 'width': '80px' } },\r\n            // { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 3, style: { 'width': '80px' } },\r\n            { field: \"TransactionDate\", header: \"Transaction Date\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            { field: \"TransactionType\", header: \"Transaction Type\", sortable: true, filter: true, id: 5, style: { 'width': '90px' } },\r\n            { field: \"NetPremium\", header: \"Net Premium\", sortable: true, filter: true, id: 6, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Levy\", header: \"Levy\", sortable: true, filter: true, id: 7, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AdminFeeAmount\", header: \"Admin Fee\", sortable: true, filter: true, id: 8, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Gross\", header: \"Gross Amount\", sortable: true, filter: true, id: 9, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AgentCommissionAmount\", header: \"Agent Commission Amount\", sortable: true, filter: true, id: 12, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"YCommissionAmount\", header: \"Amount Due to Yachtsman\", sortable: true, filter: true, id: 13, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"DueDate\", header: \"Due Date\", sortable: true, filter: true, id: 14, style: { 'width': '80px' } },\r\n            // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15, style: { 'width': '60px', 'textAlign': 'right' } },\r\n        ];\r\n\r\n\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            cols1: columns1,\r\n            showcol2: false,\r\n            arr: [],\r\n            arr1: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            isMonthYear: true,\r\n            newEntryDate: moment().format('YYYY-MM-DD'),\r\n            newEntryDateError: false,\r\n            paymentMode: '',\r\n            paymentModearr: [],\r\n            paymentModeError: false,\r\n            monthArray: [],\r\n            policyMonth: moment().format('M'),\r\n            policyMonthError: false,\r\n            yearArray: [],\r\n            policyYear: moment().format('YYYY'),\r\n            policyYearError: false,\r\n            policyFrom: '',\r\n            policyFromError: false,\r\n            policyTo: '',\r\n            policyToError: false,\r\n            note: '',\r\n            DebtorType: 'SubAgent',\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            tillDate: moment().format(\"YYYY-MM\"),\r\n            tillDateError: false,\r\n            isFilterTableShow: false,\r\n            custom: true,\r\n            tab2Title: \"Sub Agent Statements\",\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.colOptions1 = [];\r\n        for (let col of columns1) {\r\n            this.colOptions1.push({ label: col.header, value: col });\r\n        }\r\n    }\r\n\r\n    linkdata(rowData) {\r\n        var path = apiBase + \"SubAgentStatement/\" + rowData.StatementReferenceName;\r\n        return (\r\n            <>\r\n            <BTN color= \"warning\" title=\"Search\" onClick={() => this.viewSubAgentDetail(rowData.id)} style={{marginRight: \"10px\"}}> <i class=\"fa fa-eye\"></i> </BTN>\r\n            {(rowData.StatementReferenceName).substring((rowData.StatementReferenceName).length - 4) == 'xlsx'?\r\n            <BTN color= \"primary\" title=\"Search\" style={{marginRight: \"10px\"}} onClick={() => this.downloadData(rowData)}> <i class=\"fa fa-download\"></i> </BTN>\r\n            :(null) }\r\n          {rowData.Stage == \"Review\" ? \r\n            <BTN color=\"success\" title=\"change to Release\" onClick={() => this.changeStage(rowData.id,\"ReleaseAuto\")}> change to Release Auto </BTN>\r\n           : (rowData.Stage == \"ReleaseAuto\" ?\r\n                <BTN color=\"secondary\" title=\"change to Review\" onClick={() => this.changeStage(rowData.id,\"Review\")}> change to Review </BTN>\r\n           : null)}\r\n            </>\r\n            )\r\n    }\r\n\r\n    downloadData = (rowdata) => {\r\n        console.log(\"downloadData---rowdata\", rowdata);\r\n        var path = apiBase + \"SubAgentStatement/\" + rowdata.StatementReferenceName;\r\n        let filext = this.getFileExtension(rowdata.StatementReferenceName);\r\n        console.log(\"filext\", filext);\r\n        let fileName = rowdata.StatementReferenceName;\r\n        if (filext == undefined) {\r\n          fileName = rowdata.StatementReferenceName + \".\" + rowdata.type\r\n        }\r\n    \r\n        axios({\r\n          url: path,\r\n          method: 'GET',\r\n          responseType: 'blob', // important\r\n        }).then((response) => {\r\n          const url = window.URL.createObjectURL(new Blob([response.data]));\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.setAttribute('download', fileName); //or any other extension\r\n          document.body.appendChild(link);\r\n          link.click();\r\n        });\r\n      }\r\n\r\n      getFileExtension = (filename) => {\r\n        return (/[.]/.exec(filename)) ? /[^.]+$/.exec(filename)[0] : undefined;\r\n      }\r\n\r\n    actionTemplate(rowData, column) {\r\n      }\r\n\r\n    componentDidMount() {\r\n        let loginPerson = CommonConfig.loggedInUserData().LoginId;\r\n        this.setState({loggingUserId: loginPerson})\r\n        this.getDropdown();\r\n    }\r\n\r\n    getDropdown() {\r\n\r\n        // Get Month\r\n        let monthArray = [\r\n            { label: 'January', value: 1 },\r\n            { label: 'February', value: 2 },\r\n            { label: 'March', value: 3 },\r\n            { label: 'April', value: 4 },\r\n            { label: 'May', value: 5 },\r\n            { label: 'June', value: 6 },\r\n            { label: 'July', value: 7 },\r\n            { label: 'August', value: 8 },\r\n            { label: 'September', value: 9 },\r\n            { label: 'October', value: 10 },\r\n            { label: 'November', value: 11 },\r\n            { label: 'December', value: 12 },\r\n        ];\r\n        this.setState({ monthArray: monthArray });\r\n\r\n        // Get Year - Get last 10 year from current year\r\n        let startYear = moment().format('YYYY');\r\n        let yearArray = [];\r\n        for (let index = startYear; index >= (parseInt(startYear) - 10); index--) {\r\n            yearArray.push({ label: index, value: index });\r\n        }\r\n        this.setState({ yearArray: yearArray });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    // export() {\r\n    //     // this.dt.exportCSV();\r\n    // }\r\n\r\n    customExport() {debugger\r\n        var data = {\r\n            id: this.state.selectedAgent\r\n        }\r\n        api.post('api/testExcel',data).then(res => {\r\n            console.log(\"testExcel\",res);\r\n            if (res.success) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    filterData() {\r\n        console.log(\"this.state.policyMonth\", this.state.policyMonth);\r\n        if (CommonConfig.isEmpty(this.state.policyMonth) || CommonConfig.isEmpty(this.state.policyYear)) {\r\n            toast.error('Please select Month and Year.');\r\n            return false;\r\n        }\r\n        this.subagentstatement();\r\n    }\r\n\r\n    changeStage(id, stage) {\r\n        \r\n        var data = {\r\n            id: id ? id : '',\r\n            stage: stage ? stage : '',\r\n            CurrentUserId: this.state.loggingUserId? this.state.loggingUserId : '',\r\n        };\r\n        api.post('api/SubAgentAutoUpadateStage', data).then(res => {\r\n            console.log(\"autosubagentstatement\",res);\r\n            if (res.success) {\r\n            this.filterData();\r\n            toast.success('Stage changed successful');\r\n            }\r\n        });        \r\n    }\r\n\r\n    subagentstatement() {\r\n        \r\n           var data = {\r\n               policyMonth: this.state.policyMonth ? this.state.policyMonth : '',\r\n               policyYear: this.state.policyYear ? this.state.policyYear : ''\r\n           };\r\n           api.post('api/autosubagentstatement', data).then(res => {\r\n               console.log(\"autosubagentstatement\",res);\r\n               if (res.success) {\r\n                   var formattedData = [];\r\n                   this.setState({\r\n                       selectedPage: 0\r\n                   });\r\n                   debugger\r\n                   var dataLength = res.data[0].length;\r\n                   if (dataLength > 0) {\r\n   \r\n                       for (let i = 0; i < dataLength; i++) {\r\n                           var tempData = res.data[0][i];\r\n                           formattedData.push({\r\n                               id: tempData.SubAgentStatementHeaderId,\r\n                               SubAgentName: tempData.SubAgentName,\r\n                               SubAgentCode: tempData.AgentContactCode,\r\n                               ReportMonth: tempData.ReportMonth,\r\n                               ReportYear: tempData.ReportYear,\r\n                               StatementReferenceName: tempData.StatementReferenceName,\r\n                               CreatedOn: moment(tempData.CreatedOn).format('DD/MM/YYYY'),\r\n                               SentDate: CommonConfig.isEmpty(tempData.SentDate)?\"\":moment(tempData.SentDate).format('DD/MM/YYYY'),\r\n                               Stage: tempData.Stage\r\n                           });\r\n                       }\r\n                   }\r\n   \r\n                   let firstPage = (formattedData.length) ? '1' : '0';\r\n                   let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                   let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                   this.setState({ arr: formattedData, str: str, isFilterTableShow: true });\r\n               }\r\n           });\r\n       }\r\n\r\n        viewSubAgentDetail(id) {\r\n            var data = {\r\n                id: id,\r\n            };\r\n            api.post('api/viewAutoSubAgentStatement', data).then(res => {\r\n                console.log(\"viewAutoSubAgentStatement\",res);\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    this.setState({\r\n                        selectedPage: 0\r\n                    });\r\n                    debugger\r\n                    var dataLength = res.data[0].length;\r\n                    if (dataLength > 0) {\r\n                        var NetPremium = 0;\r\n                        var Levy = 0;\r\n                        var PaidAmount = 0;\r\n                        var Gross = 0;\r\n                        var AdminFeeAmount = 0;\r\n                        var AgentCommissionAmount = 0;\r\n                        var YCommissionAmount = 0;\r\n                        for (let i = 0; i < dataLength; i++) {\r\n                            var tempData = res.data[0][i];\r\n                            formattedData.push({\r\n                                id: i,\r\n                                AgentName: tempData.AgentName,\r\n                                ClientName: tempData.ClientName,\r\n                                PolicyNumber: tempData.PolicyNumber,\r\n                                RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\r\n                                TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\r\n                                TransactionType: tempData.TransactionType,\r\n                                AgentCommissionAmount: parseFloat(tempData.AgentCommissionAmount ? tempData.AgentCommissionAmount : 0).toFixed(2),\r\n                                AdminFeeAmount: parseFloat(tempData.AdminFee ? tempData.AdminFee : 0).toFixed(2),\r\n                                YCommissionAmount: parseFloat(tempData.AmountDueToYachtsman ? tempData.AmountDueToYachtsman : 0).toFixed(2),\r\n                                DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\r\n                                Gross: parseFloat(tempData.GrossAmount ? tempData.GrossAmount : 0).toFixed(2),\r\n                                NetPremium: parseFloat(tempData.NetPremium ? tempData.NetPremium : 0).toFixed(2),\r\n                                Levy: parseFloat(tempData.Levy ? tempData.Levy : 0).toFixed(2),\r\n                                \r\n                            });\r\n                            NetPremium = NetPremium + tempData.NetPremium;\r\n                            Levy = Levy + tempData.Levy;\r\n                            // PaidAmount = PaidAmount + tempData.PaymentAmount;\r\n                            Gross = Gross + tempData.GrossAmount;\r\n                            AdminFeeAmount = AdminFeeAmount + tempData.AdminFee;\r\n                            AgentCommissionAmount = AgentCommissionAmount + tempData.AgentCommissionAmount;\r\n                            YCommissionAmount = YCommissionAmount + tempData.AmountDueToYachtsman;\r\n                        }\r\n                        formattedData.push({\r\n                            Gross: parseFloat(Gross).toFixed(2),\r\n                            NetPremium: parseFloat(NetPremium).toFixed(2),\r\n                            Levy: parseFloat(Levy).toFixed(2),\r\n                            // PaidAmount: parseFloat(PaidAmount).toFixed(2),\r\n                            AdminFeeAmount: parseFloat(AdminFeeAmount).toFixed(2),\r\n                            AgentCommissionAmount: parseFloat(AgentCommissionAmount).toFixed(2),\r\n                            YCommissionAmount: parseFloat(YCommissionAmount).toFixed(2)\r\n                        });\r\n                    }\r\n    \r\n                    let firstPage = (formattedData.length) ? '1' : '0';\r\n                    let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                    let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                    this.setState({ arr1: formattedData, str: str, isFilterTableShow: false, selectedAgent: id });\r\n                }\r\n            });\r\n        }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'tillDate') {\r\n            this.setState({ tillDate: e.target.value, tillDateError: false });\r\n            this.show('tillDate', false, 'tillDateError', '');\r\n\r\n        }\r\n        if (e.target.name === 'newEntryDate') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ newEntryDateError: true });\r\n                this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\r\n            } else {\r\n                this.setState({ newEntryDateError: false, newEntryDate: e.target.value });\r\n                this.show(\"newEntryDate\", false, \"newEntryDateError\", \"\");\r\n            }\r\n        }\r\n        if (e.target.name === 'policyFrom') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ policyFrom: '' });\r\n            } else {\r\n                this.setState({ policyFrom: e.target.value, policyTo: '' });\r\n                this.show('policyTo', false, 'policyToError', '');\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'policyTo') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ policyTo: '' });\r\n            } else {\r\n                if (!CommonConfig.isEmpty(this.state.policyFrom)) {\r\n                    var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.policyFrom);\r\n                    if (!isToDateGreater) {\r\n                        this.show('policyTo', true, 'policyToError', 'To date must be greater then From date.');\r\n                    } else {\r\n                        this.show('policyTo', false, 'policyToError', '');\r\n                    }\r\n                } else {\r\n                    this.show('policyTo', false, 'policyToError', '');\r\n                }\r\n                this.setState({ policyTo: e.target.value });\r\n            }\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n        if (type === 'paymentMode') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ paymentModeError: true, paymentMode: value });\r\n                this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\r\n            } else {\r\n                this.setState({ paymentModeError: false, paymentMode: value });\r\n                this.show('paymentMode', false, \"paymentModeError\", \"\");\r\n\r\n            }\r\n        }\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, DebtorType: 'SubAgent' });\r\n\r\n        }\r\n\r\n        if (type === 'policyMonth') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ policyMonth: '' });\r\n            } else {\r\n                this.setState({ policyMonth: value.value });\r\n            }\r\n        }\r\n\r\n        if (type === 'policyYear') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ policyYear: '' });\r\n            } else {\r\n                this.setState({ policyYear: value.value });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n        let columns = '';\r\n        let columns1 = '';\r\n        // if (this.state.agentinfo == '') {\r\n        columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n        if (this.state.arr1.length > 0) {\r\n            columns1 = this.state.cols1.map((col1, i) => {\r\n                return <Column key={i} field={col1.field} header={col1.header} body={col1.body} sortable={col1.sortable} filter={col1.filter} filterMatchMode={col1.filterMatchMode} style={col1.style}\r\n                />;\r\n            });\r\n        }\r\n        else {\r\n            columns = this.state.cols.map((col, i) => {\r\n                return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n                />;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Auto Sub Agent Statement</h1>\r\n                    <div md=\"3\" className=\"header-right-option\" >\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        {/* <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Search Sub Agent\r\n                            <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md=\"1.5\">\r\n\r\n                                            <div className=\"input-box\">\r\n                                                <label>Month</label>\r\n                                                <Input type=\"select\" name=\"policyMonth\" id=\"policyMonth\" value={this.state.policyMonth} onChange={(e) => this.selectType(e.target, 'policyMonth')}>\r\n                                                    <option value=\"\">Select Month</option>\r\n                                                    {this.state.monthArray.map((month, i) => {\r\n                                                        return (<option value={month.value} key={i}>{month.label}</option>)\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                                <em id=\"policyMonthError\" className=\"error invalid-feedback\"></em>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md=\"2\">\r\n                                            <div className=\"input-box\">\r\n                                                <label>Year</label>\r\n                                                <Input type=\"select\" name=\"policyYear\" id=\"policyYear\" value={this.state.policyYear} onChange={(e) => this.selectType(e.target, 'policyYear')}>\r\n                                                    <option value=\"\">Select Year</option>\r\n                                                    {this.state.yearArray.map((year, i) => {\r\n                                                        return (<option value={year.value} key={i}>{year.label}</option>)\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                                <em id=\"policyYearError\" className=\"error invalid-feedback\"></em>\r\n                                            </div>\r\n                                        </Col>\r\n\r\n                                        <Col md=\"2.5\" style={{ marginTop: '20px' }}>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n                {/* {this.state.showcol2 != true ? (<div className=\"table-custom\"> */}\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ isFilterTableShow: !this.state.isFilterTableShow })} aria-expanded={this.state.isFilterTableShow} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    <span>{this.state.tab2Title}</span>\r\n                                    <i style={{ float: 'right' }} className={this.state.isFilterTableShow ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.isFilterTableShow} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                                    paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Sub Agent Statement\"\r\n                                    currentPageReportTemplate={this.state.str}\r\n                                    scrollable={true}\r\n                                    paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                                    rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                                    responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                                    {columns}\r\n                                </DataTable>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n                {/* </div>\r\n                    ) : (<div className=\"table-custom\"> */}\r\n                {this.state.arr1.length > 0\r\n                    ? <div className=\"table-custom\">\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.arr1} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                            paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Sub Agent Statement\"\r\n                            currentPageReportTemplate={this.state.str}\r\n                            scrollable={true}\r\n                            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                            responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                            {columns1}\r\n                        </DataTable>\r\n                        {/* <BTN color=\"success\" title=\"Export as CSV\" onClick={() => this.customExport()}> Export as CSV </BTN> */}\r\n                    </div>\r\n                    : (null)}\r\n                {/* </div>)} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation()(SubAgentAutoStatementSummary);\r\n"]},"metadata":{},"sourceType":"module"}