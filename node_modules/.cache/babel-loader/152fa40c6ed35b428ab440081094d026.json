{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'primereact/datatable';import{Column}from'primereact/column';import'primereact/resources/themes/nova-light/theme.css';import'primereact/resources/primereact.min.css';import'primeicons/primeicons.css';import{Button}from'primereact/button';import{Modal,ModalHeader,ModalBody,Col,CardBody,Form,Row,Button as BTN,UncontrolledTooltip,Card,CardHeader,Collapse,Input}from'reactstrap';import{CommonConfig}from'../../utils/constants';import api from'../../utils/apiClient';import moment from'moment';import{toast}from'react-toastify';import APIConstant from'../../utils/constants';import{withTranslation}from'react-i18next';import ShowMoreText from'react-show-more-text';var Dashboard=/*#__PURE__*/function(_Component){_inherits(Dashboard,_Component);var _super=_createSuper(Dashboard);function Dashboard(props){var _this$state;var _this;_classCallCheck(this,Dashboard);_this=_super.call(this,props);_this.saveNotes=function(){if(_this.state.NotesTypeError===false&&_this.state.notesdescriptionError===false){var NotesForm=new FormData();NotesForm.append('notesType',_this.state.notesType);NotesForm.append('notesdescription',_this.state.notesdescription.trim());NotesForm.append('entityid',_this.state.NavID);NotesForm.append('entitytype','Policy');NotesForm.append('isflag',_this.state.isImportant);NotesForm.append('loggedInUserId',CommonConfig.loggedInUserId());NotesForm.append('languageId',_this.state.LanguageId);api.post('api/addNotes',NotesForm).then(function(res){if(res.success){_this.reset();toast.success('Notes added successfully');_this.getNoteList({PolicyId:_this.state.NavID});}else{}}).catch(function(err){});}else{_this.show(\"notesType\",_this.state.NotesTypeError);_this.show(\"notesdescription\",_this.state.notesdescriptionError);}};_this.resetNewBusiness=function(){var t=new Date(_this.state.rowInceptiondate);var renewalMonth=\"\";if(t.getMonth()+1<10){renewalMonth=\"0\"+(t.getMonth()+1);}else{renewalMonth=t.getMonth()+1;}var renewalValue=_this.state.renewalMonthList.filter(function(x){return x.StringMapKey==renewalMonth;});var finalRenewalDate={value:renewalMonth,label:renewalValue[0].StringMapName};_this.setState({notesdescription:'',notesdescriptionError:true,responseType:'',notesInceptionDate:moment(_this.state.InceptionDate).format('DD-MM-YYYY'),notesInceptionDate1:moment(_this.state.inceptionDate).format('YYYY-MM-DD'),reasonType:'',DateTime:'',renewalMonth:finalRenewalDate,contactMode:'',isImportant:0,isEditDate:false,isEditRenewalMonth:false});_this.show(\"notesdescription\",false);_this.setState({addNoteCollapse:false});};_this.saveNotesNewBusiness=function(){if(_this.state.notesdescriptionError===false){if(_this.state.responseType==\"\"){toast.error('Please Select Response Type');return;}if(_this.state.responseType==\"Not Interested\"){if(_this.state.reasonType==\"\"){toast.error('Please Select Reason Type');return;}}if(_this.state.contactMode==\"\"){toast.error('Please Select Contact mode');return;}if(_this.state.renewalMonth==\"\"){toast.error('Please Select Renewal Month');return;}var data={'EntityType':'Policy','EntityId':_this.state.NavID,'PolicyId':_this.state.NavID,'isflag':_this.state.isImportant,'Response':_this.state.responseType,'Reason':_this.state.reasonType,'NoteText':_this.state.notesdescription.trim(),'FollowUpDateTime':_this.state.DateTime,// 'RenewalMonth': this.state.renewalMonth,\n'InceptionDate':_this.state.notesInceptionDate1,'ContactMode':_this.state.contactMode,'CurrentUser':CommonConfig.loggedInUserData().EntityId};console.log(\"dataaaaaa..........\",data);api.post('api/saveFollowUpNote',data).then(function(res){console.log(\"dataaaaaa..........\",res);if(res.data.success){_this.resetNewBusiness();toast.success('Follow-Up note added successfully');_this.getNoteList({PolicyId:_this.state.currentPolicyId});}else{toast.error(res.data.msg);}}).catch(function(err){});}else{if(_this.state.responseType==''){_this.show(\"responseType\",true,\"responseTypeError\",\"Please Select Response\");}if(_this.state.contactMode==''){_this.show(\"contactMode\",true,\"contactModeError\",\"Please Select Contact mode\");}if(_this.state.renewalMonth==''){_this.show(\"renewalMonth\",true,\"renewalMonthError\",\"Please Select Renewal month\");}_this.show(\"notesType\",_this.state.NotesTypeError);_this.show(\"notesdescription\",_this.state.notesdescriptionError);}};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));if(e.target.name==='notesdescription'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({notesdescriptionError:true});_this.show(\"notesdescription\",true);}else{_this.setState({notesdescriptionError:false,notesdescription:e.target.value});_this.show(\"notesdescription\",false);}}if(e.target.name==='policyFrom'){if(e.target.value===''||e.target.value===null){_this.setState({policyFrom:''});}else{_this.setState({policyFrom:e.target.value,policyTo:''});_this.show('policyTo',false,'policyToError','');}}if(e.target.name==='policyTo'){if(e.target.value===''||e.target.value===null){_this.setState({policyTo:''});}else{if(!CommonConfig.isEmpty(_this.state.policyFrom)){var isToDateGreater=moment(e.target.value).isSameOrAfter(_this.state.policyFrom);if(!isToDateGreater){_this.show('policyTo',true,'policyToError','To date must be greater then From date.');}else{_this.show('policyTo',false,'policyToError','');}}else{_this.show('policyTo',false,'policyToError','');}_this.setState({policyTo:e.target.value});}}if(e.target.name==='inceptionDate'){if(CommonConfig.isEmpty(e.target.value)){_this.setState({inceptionDateError:true});_this.show(\"inceptionDate\",true,\"inceptionDateError\",\"Please enter Inception Date\");}else{var t=new Date(e.target.value);var renewalMonth=\"\";if(t.getMonth()+1<10){renewalMonth=\"0\"+(t.getMonth()+1);}else{renewalMonth=t.getMonth()+1;}var data=_this.state.renewalMonthList.filter(function(x){return x.StringMapKey==renewalMonth;});var inceptionDate=moment(e.target.value).format('DD-MM-YYYY');console.log(\"data.......\",e.target.value);var finalRenewalDate={value:renewalMonth,label:data[0].StringMapName};_this.setState({notesInceptionDate:inceptionDate,notesInceptionDate1:e.target.value,inceptionDateError:false,renewalMonth:finalRenewalDate});_this.show('inceptionDate',false,\"inceptionDateError\",\"\");}}};_this.reset=function(){_this.setState({notesdescription:'',notesdescriptionError:true,notesType:'',NotesTypeError:true,isImportant:0});_this.show(\"notesdescription\",false);_this.show('notesType',false);_this.setState({addNoteCollapse:false});};var columns=[{body:_this.actionTemplate.bind(_assertThisInitialized(_this)),header:\"Action\",sortable:false,filter:false,id:0},{body:_this.formatPolicyDetail.bind(_assertThisInitialized(_this)),field:\"PolicyData\",header:\"Policy No/Type\",sortable:true,filter:true,filterMatchMode:'contains',id:1},{body:_this.formatContactDetail.bind(_assertThisInitialized(_this)),field:\"ClientDetails\",header:\"Client/Contacts\",sortable:true,filter:true,filterMatchMode:'contains',id:2},{body:_this.formatVesselData.bind(_assertThisInitialized(_this)),field:\"VesselDetails\",header:\"Vessel\",sortable:true,filter:true,filterMatchMode:'contains',id:3},{field:\"InsuranceCompanyName\",header:\"Insurer\",sortable:true,filter:true,filterMatchMode:'contains',id:4},{body:_this.formatPremiun.bind(_assertThisInitialized(_this)),field:\"PremiumDetails\",header:\"SI/Premium\",sortable:true,filter:true,filterMatchMode:'contains',id:5},{body:_this.formatDate.bind(_assertThisInitialized(_this)),field:\"RenewalDate\",header:\"Renewal\",sortable:true,filter:true,filterMatchMode:'contains',id:6},{body:_this.departmentData.bind(_assertThisInitialized(_this)),field:\"DepartmentDetails\",header:\"Department\",sortable:true,filter:true,filterMatchMode:'contains',id:6},{body:_this.formatStage.bind(_assertThisInitialized(_this)),field:\"StageReferredData\",header:\"Stage/Referred To\",sortable:true,filter:true,filterMatchMode:'contains',id:7},{field:\"HandlerPerson\",header:\"Handler\",sortable:true,filter:true,filterMatchMode:'contains',id:8},{field:\"Status\",header:\"Status\",sortable:true,filter:true,filterMatchMode:'contains',id:9}];_this.state=(_this$state={LanguageId:props.i18n.language==='en'?'en-GB':props.i18n.language==='es'?'es-ES':props.i18n.language==='ie'?'en-IE':props.i18n.language,cols:columns,rowsPerPageOptions:CommonConfig.dataTableConfig.rowsPerPageOptions,rowsPerPage:CommonConfig.dataTableConfig.rowsPerPage,policyStage:_this.props.match.params.mode,policyCount:0,policyList:[],first:1,rows:10,StageCountData:[],openNotePopup:false,addNoteCollapse:false,policyNoteList:[],noteType:[],NavID:null,TeamType:CommonConfig.loggedInUserData().SecurityGroupName,isImportant:0,notesType:'',notesdescription:'',NotesTypeError:true,notesdescriptionError:true},_defineProperty(_this$state,\"addNoteCollapse\",false),_defineProperty(_this$state,\"CurrentUserid\",CommonConfig.loggedInUserData().EntityId),_defineProperty(_this$state,\"policyTypeArray\",[]),_defineProperty(_this$state,\"policyType\",'Vessel'),_defineProperty(_this$state,\"monthArray\",[]),_defineProperty(_this$state,\"policyMonth\",moment().format('M')),_defineProperty(_this$state,\"policyMonthError\",false),_defineProperty(_this$state,\"yearArray\",[]),_defineProperty(_this$state,\"policyYear\",moment().format('YYYY')),_defineProperty(_this$state,\"policyYearError\",false),_defineProperty(_this$state,\"isMonthYear\",true),_defineProperty(_this$state,\"policyFrom\",''),_defineProperty(_this$state,\"policyFromError\",false),_defineProperty(_this$state,\"policyTo\",''),_defineProperty(_this$state,\"policyToError\",false),_defineProperty(_this$state,\"ReasonArray\",[]),_defineProperty(_this$state,\"ResponseTypeArray\",[]),_defineProperty(_this$state,\"showReasonDD\",false),_defineProperty(_this$state,\"responseType\",''),_defineProperty(_this$state,\"responseTypeError\",false),_defineProperty(_this$state,\"reasonTypeError\",false),_defineProperty(_this$state,\"reasonType\",''),_defineProperty(_this$state,\"DateTime\",''),_defineProperty(_this$state,\"reasonsShow\",false),_defineProperty(_this$state,\"contactMode\",''),_defineProperty(_this$state,\"contactModeError\",false),_defineProperty(_this$state,\"contactModeList\",[]),_defineProperty(_this$state,\"renewalMonthList\",[]),_defineProperty(_this$state,\"renewalMonthError\",false),_defineProperty(_this$state,\"notesInceptionDate\",''),_defineProperty(_this$state,\"notesInceptionDate1\",''),_defineProperty(_this$state,\"isEditRenewalMonth\",false),_defineProperty(_this$state,\"isEditDate\",false),_defineProperty(_this$state,\"InceptionDate\",''),_defineProperty(_this$state,\"currentPolicyId\",''),_defineProperty(_this$state,\"rowInceptiondate\",''),_defineProperty(_this$state,\"BusinessTypeList\",[]),_defineProperty(_this$state,\"businessType\",'New Business'),_defineProperty(_this$state,\"meOrAll\",CommonConfig.loggedInUserData().SecurityGroupName=='New Business'?'Me':'All'),_defineProperty(_this$state,\"meOrAllList\",[{label:'Me',value:'Me'},{label:'All',value:'All'}]),_defineProperty(_this$state,\"SecurityGroupList\",[{label:'New Business',value:'New Business'},{label:'Renewal',value:'Renewal'},{label:'Underwriting',value:'Underwriting'}]),_defineProperty(_this$state,\"SecurityGroupName\",''),_defineProperty(_this$state,\"language\",'All'),_defineProperty(_this$state,\"languageList\",[]),_defineProperty(_this$state,\"languageError\",false),_defineProperty(_this$state,\"isSubAgent\",false),_this$state);_this.colOptions=[];for(var _i=0,_columns=columns;_i<_columns.length;_i++){var col=_columns[_i];_this.colOptions.push({label:col.header,value:col});}_this.onPage=_this.onPage.bind(_assertThisInitialized(_this));return _this;}_createClass(Dashboard,[{key:\"changePolicyDateView\",value:function changePolicyDateView(){this.setState({isMonthYear:!this.state.isMonthYear});}},{key:\"getPolicyStageCount\",value:function getPolicyStageCount(policyCount,policyData){var _this2=this;var data={TeamType:CommonConfig.loggedInUserData().SecurityGroupName=='Underwriting'?this.state.TeamType?this.state.TeamType:CommonConfig.loggedInUserData().SecurityGroupName:CommonConfig.loggedInUserData().SecurityGroupName,PolicyType:this.state.policyType,PolicyMonth:this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyMonth)?'':this.state.policyMonth:'',PolicyYear:this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyYear)?'':this.state.policyYear:'',PolicyFrom:!this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyFrom)?'':this.state.policyFrom:'',PolicyTo:!this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyTo)?'':this.state.policyTo:'',PolicyLanguage:this.state.language,IsSubAgent:this.state.isSubAgent?1:0,MeOrAll:this.state.meOrAll,CurrentUser:CommonConfig.loggedInUserData().EntityId,BusinessType:CommonConfig.loggedInUserData().SecurityGroupName=='Underwriting'?this.state.businessType:''};api.post('api/getPolicyStageCount',data).then(function(res){if(res.success){console.log(\"getPolicyStageCount\",res.data);if(policyCount==\"update\"){_this2.setState({StageCountData:res.data,policyStage:policyData});}else{_this2.setState({StageCountData:res.data,policyStage:_this2.props.match.params.mode==undefined?res.data[0].StringMapKey:_this2.props.match.params.mode});}//toDo: Count and Data\n//this.getPolicyList(this.props.match.params.mode == undefined ? res.data[0] : { 'StringMapKey': this.props.match.params.mode });\n}else{console.log(\"Else\");}}).catch(function(err){console.log(\"errr\",err);});}},{key:\"componentDidMount\",value:function componentDidMount(){var data={Count:0,StringMapKey:\"\"};if(CommonConfig.loggedInUserData().SecurityGroupName=='Renewal'){data.StringMapKey='Review';}else if(CommonConfig.loggedInUserData().SecurityGroupName=='New Business'){data.StringMapKey='Lead';}else if(CommonConfig.loggedInUserData().SecurityGroupName=='Underwriting'){data.StringMapKey='New Business';this.setState({SecurityGroupName:\"Underwriting\"});}this.getPolicyList(data);this.getPolicyStageCount('','');this.getNotesType();this.getLanguageList();this.getDropDownValues('POLICYTYPE','policyTypeArray');this.getDropDownValues('POLICYBUSINESSTYPE','BusinessTypeList');this.getDropDownValues('MONTH','renewalMonthList');this.getDropDownValues('CONTACTMODE','contactModeList');// this.getDropDownValues('FOLLOWUPREASON', 'ReasonArray');\nthis.getDropDownValues('FOLLOWUPRESPONSE','ResponseTypeArray');// Get Month\nvar monthArray=[{label:'January',value:1},{label:'February',value:2},{label:'March',value:3},{label:'April',value:4},{label:'May',value:5},{label:'June',value:6},{label:'July',value:7},{label:'August',value:8},{label:'September',value:9},{label:'October',value:10},{label:'November',value:11},{label:'December',value:12}];this.setState({monthArray:monthArray});// Get Year - Get last 10 year from current year\nvar startYear=moment().format('YYYY');var yearArray=[];for(var index=startYear;index>=parseInt(startYear)-10;index--){yearArray.push({label:index,value:index});}this.setState({yearArray:yearArray});}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName){var _this3=this;try{var data={stringmaptype:stringMapType,orderby:'sortorder'};if(stringMapType==\"MONTH\"){data={stringmaptype:stringMapType,orderby:'StringMapKey'};}api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){_this3.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){console.log(\"error...\",error);}}},{key:\"getDropDownReasonValues\",value:function(){var _getDropDownReasonValues=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response,setStateName){var _this4=this;var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;data={StingMapKey:response};_context.next=4;return api.post(APIConstant.path.dropdownbycodeforreason,data).then(function(res){if(res.success){console.log(\"ressssssssssssss/....\",res);_this4.setState({ReasonArray:res.data[0]});}else{}}).catch(function(err){});case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(\"error...\",_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));function getDropDownReasonValues(_x,_x2){return _getDropDownReasonValues.apply(this,arguments);}return getDropDownReasonValues;}()},{key:\"onPage\",value:function onPage(event){var firstPage=event.first+1;var l=event.rows*(event.page+1);var lastPage=l<this.state.policyList.length?l:this.state.policyList.length;var str=firstPage+' to '+lastPage+' out of '+this.state.policyList.length+' records';this.setState({selectedPage:event.first,str:str,rowsPerPage:event.rows});}},{key:\"getPolicyList\",value:function getPolicyList(stageData){var _this5=this;this.state.policyList=[];var PolicyStage=stageData.StringMapKey;var data={PolicyStage:stageData.StringMapKey,TeamType:CommonConfig.loggedInUserData().SecurityGroupName=='Underwriting'?this.state.TeamType:CommonConfig.loggedInUserData().SecurityGroupName,CurrentUser:CommonConfig.loggedInUserData().EntityId,pPageIndex:this.state.first,pRowsPerPage:10000,policyType:this.state.policyType,PolicyMonth:this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyMonth)?'':this.state.policyMonth:'',PolicyYear:this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyYear)?'':this.state.policyYear:'',PolicyFrom:!this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyFrom)?'':this.state.policyFrom:'',PolicyTo:!this.state.isMonthYear?CommonConfig.isEmpty(this.state.policyTo)?'':this.state.policyTo:'',PolicyLanguage:this.state.language,IsSubAgent:this.state.isSubAgent?1:0,MeOrAll:this.state.meOrAll,BusinessType:stageData.StringMapKey==undefined?'':stageData.StringMapKey};this.setState({savedData:data});api.post('api/getPolicyListByStage',data).then(function(res){console.log(\"getPolicyListByStage\",res.data);if(res.success){console.log(\"res....\",res);// this.getPolicyStageCount({ TeamType: CommonConfig.loggedInUserData().SecurityGroupName,\n//     PolicyType: this.state.policyType,\n//     PolicyMonth: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth) : '',\n//     PolicyYear: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear) : '',\n//     PolicyFrom: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom : '',\n//     PolicyTo: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo : ''});\nvar firstPage=res.data.length?'1':'0';var lastPage=_this5.state.rowsPerPage<res.data.length?_this5.state.rowsPerPage:res.data.length;var str=firstPage+' to '+lastPage+' out of '+res.data.length+' records';_this5.setState({policyList:res.data,str:str,policyCount:stageData.Count,first:_this5.state.first,policyStage:PolicyStage});_this5.getPolicyStageCount('update',PolicyStage);// this.setState({policyStage: stageData.StringMapKey });\n// let CountData = {\n//     PolicyStage: stageData.StringMapKey,\n//     TeamType: CommonConfig.loggedInUserData().SecurityGroupName,\n//     PolicyType: this.state.policyType,\n//     PolicyMonth: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth) : '',\n//     PolicyYear: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear) : '',\n//     PolicyFrom: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom : '',\n//     PolicyTo: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo : ''\n// }\n// api.post('api/getPolicyStageCount', CountData).then(resCount => {\n//     if (resCount.success) {\n//         console.log(\"getPolicyStageCount\", resCount.data);\n//         this.setState({ StageCountData: resCount.data, policyStage: this.props.match.params.mode == undefined ? resCount.data[0].StringMapKey : this.props.match.params.mode });                \n//     } else {\n//         console.log(\"Else\");\n//     }\n// });\n}else{console.log(\"Else\");}}).catch(function(err){console.log(\"errr\",err);});}},{key:\"goToLeadPage\",value:function goToLeadPage(){this.props.history.push({pathname:'/Master/LeadManagement'});}},{key:\"actionTemplate\",value:function actionTemplate(rowData,column){var _this6=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-warning\",onClick:function onClick(){return _this6.edit(rowData);},style:{marginRight:'.5em'},tooltip:\"View\",tooltipOptions:{position:'bottom'}}),this.getImageIcon(rowData));}},{key:\"edit\",value:function edit(rowData){window.open(window.location.origin+'/#'+'/PolicyDetailsMerged/'+rowData.PolicyId+'/1/1','_blank');// this.setLock(rowData);\n// window.open( window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1','_blank');\n}// openLock(rowData){\n//     if(rowData.LockedByPersonId == this.state.CurrentUserid ){\n//         this.releaseLock(rowData);\n//     }else{\n//         toast.warn(\"Only \" +rowData.LcokedByPerson +\" can unlock this Policy\");\n//     }\n//     console.log(\"lock realeased.....\")\n// }\n},{key:\"setLock\",value:function(){var _setLock=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rowData){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:data={'PolicyId':rowData.PolicyId};_context2.next=3;return api.post('api/setLock',data).then(function(res){if(res.success){if(res.data[0].returnValue==''){console.log(\"notes......\",res.data);window.open(window.location.origin+'/#'+'/PolicyDetailsMerged/'+rowData.PolicyId+'/1/1','_blank');}else{alert(res.data[0].retunValue);}}else{toast.warn(\"Something went Wrong.\");}}).catch(function(err){console.log(\"setLock err\",err);});case 3:case\"end\":return _context2.stop();}}},_callee2);}));function setLock(_x3){return _setLock.apply(this,arguments);}return setLock;}()},{key:\"getLanguageList\",value:function getLanguageList(){var _this7=this;var formattedLanguage=[];try{api.get(APIConstant.path.getLanguage).then(function(res){if(res.success){for(var i=0;i<res.data.length;i++){formattedLanguage.push({label:res.data[i].Language,value:res.data[i].Language});}_this7.setState({languageList:formattedLanguage});}else{}}).catch(function(err){console.log('error in languagelist',err);});}catch(err){console.log('error in languagelist',err);}}},{key:\"getImageIcon\",value:function getImageIcon(rowData){var _this8=this;var linkType='';if(rowData.LockedByPerson==''){linkType='NoLock';}else{if(rowData.IsCurrentUserUW==0&&rowData.IsSelfLocked==1){linkType='NormalSelfLock';}else if(rowData.IsCurrentUserUW==1&&rowData.IsSelfLocked==1){linkType='UWSelfLock';}else if(rowData.IsCurrentUserUW==0&&rowData.IsSelfLocked==0){linkType='NormalOtherLock';}else if(rowData.IsCurrentUserUW==1&&rowData.IsSelfLocked==0){linkType='UWOtherLock';}}console.log('linkType',linkType);switch(linkType){case'NormalSelfLock':return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-user-circle-o\",\"aria-hidden\":\"true\",style:{fontSize:'25px'},id:\"NSL\"+rowData.policyNumber}),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"right\",target:\"NSL\"+rowData.policyNumber},\"locked By Me\"));case'UWSelfLock':return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-user-circle-o\",style:{fontSize:'25px'},\"aria-hidden\":\"true\",id:'USL'+rowData.policyNumber}),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"right\",target:\"USL\"+rowData.policyNumber},\"locked By Me\"));case'NormalOtherLock':return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-lock\",\"aria-hidden\":\"true\",style:{fontSize:'25px'},id:\"NOL\"+rowData.policyNumber}),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"right\",target:\"NOL\"+rowData.policyNumber},\"locked By\"+rowData.LockedByPerson));case'UWOtherLock':return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-lock\",onClick:function onClick(){return _this8.releaseLock(rowData);},style:{fontSize:'25px',cursor:'pointer'},\"aria-hidden\":\"true\",id:\"UWO\"+rowData.policyNumber},\" \"),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"right\",target:\"UWO\"+rowData.policyNumber},\"locked By\"+rowData.LockedByPerson));case'Nolock':return null;}}},{key:\"releaseLock\",value:function(){var _releaseLock=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(rowData){var _this9=this;var data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:data={'PolicyId':rowData.PolicyId,'ReleaseAll':0};_context5.next=3;return api.post('api/releaseLock',data).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(res){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(res.success){if(res.data[0][0].returnValue==''){setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _this9.reloadSearchResult({'StringMapKey':_this9.state.policyStage,'Count':_this9.state.policyCount},rowData);case 2:case\"end\":return _context3.stop();}}},_callee3);})),100);}else{toast.warn(res.data[0][0].returnValue);}}else{toast.error(\"SomeThing went wrong.\");}case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x5){return _ref.apply(this,arguments);};}()).catch(function(err){console.log(\"setLock err\",err);});case 3:case\"end\":return _context5.stop();}}},_callee5);}));function releaseLock(_x4){return _releaseLock.apply(this,arguments);}return releaseLock;}()},{key:\"reloadSearchResult\",value:function reloadSearchResult(stageData,rowData){var _this10=this;var data=this.state.savedData;var PolicyStage=stageData.StringMapKey;api.post('api/getPolicyListByStage',data).then(function(res){console.log(\"getPolicyListByStage\",res.data);if(res.success){var firstPage=res.data.length?'1':'0';var lastPage=_this10.state.rowsPerPage<res.data.length?_this10.state.rowsPerPage:res.data.length;var str=firstPage+' to '+lastPage+' out of '+res.data.length+' records';_this10.setState({policyList:res.data,str:str,policyCount:stageData.Count,first:_this10.state.first,policyStage:PolicyStage});_this10.getPolicyStageCount('update',PolicyStage);toast.success(\"Policy \"+rowData.PolicyNumber+\" unlocked Successfully\");}else{console.log(\"Else\");}}).catch(function(err){console.log(\"errr\",err);});}},{key:\"formatStage\",value:function formatStage(rowData){var _this11=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.Stage),/*#__PURE__*/React.createElement(\"p\",null,rowData.ReferredToPerson),/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"i\",{onClick:function onClick(){return _this11.getNoteList(rowData);},style:{fontSize:'25px',cursor:'pointer'},className:\"pi pi-comment\",href:\"#\",id:\"CommentTooltip\"+rowData.PolicyId}),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"bottom\",target:\"CommentTooltip\"+rowData.PolicyId},CommonConfig.isEmpty(rowData.Note)?rowData.Stage:rowData.Note)));}},{key:\"departmentData\",value:function departmentData(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.Department),rowData.Department==\"SubAgent\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",null,rowData.SubAgentName),/*#__PURE__*/React.createElement(\"p\",null,rowData.SubAgentPhone),/*#__PURE__*/React.createElement(\"p\",null,rowData.SubAgentEmail)):null);}},{key:\"formatPolicyDetail\",value:function formatPolicyDetail(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.PolicyType),/*#__PURE__*/React.createElement(\"p\",null,rowData.PolicyNumber),/*#__PURE__*/React.createElement(\"p\",null,rowData.DocLang));}},{key:\"formatContactDetail\",value:function formatContactDetail(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.NAME),rowData.AreaCode!=undefined&&rowData.AreaCode!=null&&rowData.AreaCode!=''?/*#__PURE__*/React.createElement(\"p\",null,rowData.CountryCode+' '+rowData.AreaCode+' '+rowData.PhoneNumber):/*#__PURE__*/React.createElement(\"p\",null,rowData.CountryCode+' '+rowData.PhoneNumber),/*#__PURE__*/React.createElement(\"p\",null,rowData.Email));}},{key:\"formatVesselData\",value:function formatVesselData(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.VesselClassName),/*#__PURE__*/React.createElement(\"p\",null,rowData.VesselTypeName));}},{key:\"formatPremiun\",value:function formatPremiun(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.PremiumDetails));}},{key:\"formatDate\",value:function formatDate(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.RenewalDate));}},{key:\"getNoteList\",value:function getNoteList(rowData){var _this12=this;// let date =moment(rowData.InceptionDate).getMonth();\nvar t='';if(rowData.InceptionDate!=undefined||rowData.InceptionDate!=null){t=new Date(rowData.InceptionDate);this.setState({rowInceptiondate:rowData.InceptionDate,notesInceptionDate:moment(rowData.InceptionDate).format('DD-MM-YYYY'),notesInceptionDate1:moment(rowData.InceptionDate).format('YYYY-MM-DD'),InceptionDate:rowData.InceptionDate});}else{t=new Date(this.state.rowInceptiondate);}var renewalMonth=\"\";if(t.getMonth()+1<10){renewalMonth=\"0\"+(t.getMonth()+1);}else{renewalMonth=t.getMonth()+1;}var renewalValue=this.state.renewalMonthList.filter(function(x){return x.StringMapKey==renewalMonth;});var finalRenewalDate={value:renewalMonth,label:renewalValue[0].StringMapName};this.setState({NavID:null,renewalMonth:finalRenewalDate,currentPolicyId:rowData.PolicyId});var data={'entityId':rowData.PolicyId,'entityType':'Policy','CurrentUser':CommonConfig.loggedInUserData().EntityId};// if (CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\") {\napi.post('api/getNewBusineesNotes',data).then(function(res){if(res.success){console.log(\" new business notes......\",res.data);_this12.setState({policyNoteList:res.data,openNotePopup:true,NavID:rowData.PolicyId});}else{toast.warn(\"No notes found for Policy.\");}}).catch(function(err){console.log(\"getNoteList err\",err);});// } else {\n//     api.post('api/getNotes', data).then(res => {\n//         if (res.success) {\n//             console.log(\"notes......\", res.data)\n//             this.setState({ policyNoteList: res.data, openNotePopup: true, NavID: rowData.PolicyId });\n//         } else {\n//             toast.warn(\"No notes found for Policy.\");\n//         }\n//     }).catch(err => {\n//         console.log(\"getNoteList err\", err);\n//     });\n// }\n}},{key:\"getNotesType\",value:function getNotesType(){var _this13=this;try{var data={stringmaptype:'NOTETYPE'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){_this13.setState({noteType:res.data});}else{}}).catch(function(err){});}catch(error){}}},{key:\"onSubAgentChange\",value:function onSubAgentChange(val){this.setState({isSubAgent:val});}},{key:\"selectType\",value:function selectType(value,type){var _this14=this;if(type==='notesType'){if(value===''||value===null){this.setState({NotesTypeError:true,notesType:value});this.show('notesType',true);}else{this.setState({NotesTypeError:false,notesType:value.value});this.show('notesType',false);}}if(type==='BusinessType'){if(value===''||value===null){this.setState({businessType:value});}else{this.setState({businessType:value.value});}}if(type==='policyMonth'){if(value===''||value===undefined||value===null){this.setState({policyMonth:''});}else{this.setState({policyMonth:value.value});}}if(type==='policyYear'){if(value===''||value===undefined||value===null){this.setState({policyYear:''});}else{this.setState({policyYear:value.value});}}if(type==='policyType'){if(value===''||value===undefined||value===null){this.setState({policyType:''});}else{this.setState({policyType:value.value});}}if(type==='language'){if(value===''||value===undefined||value===null){this.setState({language:''});}else{this.setState({language:value.value});}}if(type==='meOrAll'){if(value===''||value===undefined||value===null){this.setState({meOrAll:''});}else{this.setState({meOrAll:value.value});}}if(type==='responseType'){if(value===''||value===undefined||value===null){this.setState({responseType:'',responseTypeError:true,showReasonDD:false});this.show('responseType',true,\"responseTypeError\",\"Please select Response\");}else{this.getDropDownReasonValues(value.value,'ReasonArray');this.setState({responseType:value.value,responseTypeError:false});this.show('responseType',false,\"responseTypeError\",\"\");// this.getDropDownReasonValues(value.value, 'ReasonArray')\n// if(this.state.ReasonArray){\nif(value.value==\"Not Interested\"||value.value==\"Lost\"||value.value==\"Purge\"||value.value==\"Abandoned\"){this.setState({showReasonDD:true});}else{this.setState({showReasonDD:false});}}}if(type==='reasonType'){if(value===''||value===undefined||value===null){this.setState({reasonType:'',reasonTypeError:true});this.show('reasonType',true,\"reasonTypeError\",\"Please select Reason\");}else{this.setState({reasonType:value.value,reasonTypeError:false});this.show('reasonType',false,\"reasonTypeError\",\"\");}}if(type==='contactMode'){if(value.value==''||value.value==undefined||value.value==null){this.setState({contactMode:'',contactModeError:true});this.show('contactMode',true,\"contactModeError\",\"Please select Contact mode\");}else{this.setState({contactMode:value.value,contactModeError:false});this.show('contactMode',false,\"contactModeError\",\"\");}}if(type==='renewalMonth'){if(value.value==''||value.value==undefined||value.value==null){this.setState({renewalMonth:'',renewalMonthError:true});this.show('renewalMonth',true,\"renewalMonthError\",\"Please select Renewal month\");}else{var date=new Date();// let currentMonth = date.getMonth() + 1;\n// var firstDay;\n// let inceptionDate = new Date(moment(this.state.notesInceptionDate).format(\"DD-MM-YYYY\"));\n// let inceptionMonth = inceptionDate.getMonth() + 1 ;\n// let inceptionfirstDay = new Date(inceptionDate.getFullYear(), Number(value.value) - 1, 1);\nvar ShowMonth=value.value;console.log(ShowMonth);var curmonth=new Date().getMonth()+1;console.log(curmonth);if(ShowMonth<curmonth)var curyear=new Date().getFullYear()+1;else var curyear=new Date().getFullYear();console.log(\"curyear\",curyear);var inceptionDate=moment([parseInt(curyear),parseInt(value.value)-1]).format('DD-MM-YYYY');var inceptionDate1=moment([parseInt(curyear),parseInt(value.value)-1]).format('YYYY-MM-DD');// if(currentMonth > Number(value.value)){\n//     firstDay = new Date(date.getFullYear() + 1, Number(value.value) - 1, 1);\n// }\n// else{\n//     firstDay = new Date(date.getFullYear(), Number(value.value) - 1, 1);\n// }\n// if((Number(value.value) > inceptionMonth)){\n//     firstDay = new Date(inceptionDate.getFullYear(), Number(value.value) - 1, 1);\n//     console.log(\"in if\",moment(firstDay).format('DD-MM-YYYY'));\n// }\n// else{\n//     firstDay = new Date(inceptionDate.getFullYear() + 1, Number(value.value) - 1, 1);\n//     console.log(\"in else\",moment(firstDay).format('DD-MM-YYYY'));\n// }\nthis.setState({renewalMonth:value.value,renewalMonthError:true,notesInceptionDate:inceptionDate,notesInceptionDate1:inceptionDate1});this.show('renewalMonth',false,\"renewalMonthError\",\"\");}}if(type==='TeamType'){if(value===''||value===undefined||value===null){this.setState({TeamType:''});}else{this.setState({TeamType:value.value});var data={Count:0,StringMapKey:\"\"};if(value.value=='Renewal'){data.StringMapKey='Review';}else if(value.value=='New Business'){data.StringMapKey='Lead';}else if(value.value=='Underwriting'){data.StringMapKey='New Business';}setTimeout(function(){_this14.getPolicyList(data);// this.getPolicyStageCount('', '');\n_this14.getNotesType();_this14.getDropDownValues('POLICYTYPE','policyTypeArray');// this.getDropDownValues('FOLLOWUPREASON', 'ReasonArray');\n_this14.getDropDownValues('FOLLOWUPRESPONSE','ResponseTypeArray');},100);}}}},{key:\"editDate\",value:function editDate(task){if(task==\"view\"){this.setState({isEditDate:false});}else{this.setState({isEditDate:true});}}},{key:\"editRenewalMonth\",value:function editRenewalMonth(task){if(task=='view'){this.setState({isEditRenewalMonth:false});}else{this.setState({isEditRenewalMonth:true});}}},{key:\"Important\",value:function Important(){this.state.isImportant===0?this.setState({isImportant:1}):this.setState({isImportant:0});}},{key:\"show\",// show(field, condition) {\n//     if (condition) {\n//         document.getElementById(field).className = \"form-control is-invalid\";\n//     } else {\n//         document.getElementById(field).className = \"form-control\";\n//     }\n// }\nvalue:function show(field,condition,errorField,message){if(condition){if(document.getElementById(field))document.getElementById(field).className=\"form-control is-invalid\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML='<p>'+message+' </p>';}else{if(document.getElementById(field))document.getElementById(field).className=\"form-control\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML=null;}}},{key:\"render\",value:function render(){var _this15=this;var _this$props=this.props,t=_this$props.t,i18n=_this$props.i18n;var columns=this.state.cols.map(function(col,i){return/*#__PURE__*/React.createElement(Column,{key:i,field:col.field,header:col.header,body:col.body,sortable:col.sortable,filter:col.filter,filterMatchMode:col.filterMatchMode});});if(this.props.isIdleTimeOut){this.props.history.push('/');}return/*#__PURE__*/React.createElement(\"div\",{className:\"animated fadeIn\"},/*#__PURE__*/React.createElement(\"div\",{className:\"table-custom\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"h4\",null,this.state.policyStage,\" \")),CommonConfig.loggedInUserData().SecurityGroupName=='Underwriting'?/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,\"Select Dashboard\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"TeamType\",id:\"TeamType\",value:this.state.TeamType,onChange:function onChange(e){return _this15.selectType(e.target,'TeamType');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Team Type\"),this.state.SecurityGroupList.map(function(item,i){return/*#__PURE__*/React.createElement(\"option\",{value:item.value,key:i},item.label);}))):null,/*#__PURE__*/React.createElement(Col,{md:\"10\",style:{textAlign:\"right\"}},this.state.StageCountData.map(function(ct,i){return/*#__PURE__*/React.createElement(\"div\",{className:_this15.state.policyStage==ct.StringMapKey?\"dashbordSelectorSelect\":'',style:{display:'inline-block',marginRight:7,textDecoration:\"underline\",cursor:\"pointer\",fontSize:'15px'},onClick:function onClick(){return _this15.getPolicyList(ct);}},ct.StringMapKey,\"(\",ct.Count,\")\");}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:function onSubmit(e){return e.preventDefault();}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Policy Type\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"policyType\",id:\"policyType\",value:this.state.policyType,onChange:function onChange(e){return _this15.selectType(e.target,'policyType');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Policy Type\"),this.state.policyTypeArray.map(function(policyType,i){return/*#__PURE__*/React.createElement(\"option\",{value:policyType.StringMapKey,key:i},policyType.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"policyTypeError\",className:\"error invalid-feedback\"}))),this.state.TeamType=='Underwriting'?null:/*#__PURE__*/React.createElement(Col,{md:\"5\"},/*#__PURE__*/React.createElement(Row,null,this.state.isMonthYear?/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Month\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"policyMonth\",id:\"policyMonth\",value:this.state.policyMonth,onChange:function onChange(e){return _this15.selectType(e.target,'policyMonth');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Month\"),this.state.monthArray.map(function(month,i){return/*#__PURE__*/React.createElement(\"option\",{value:month.value,key:i},month.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"policyMonthError\",className:\"error invalid-feedback\"}))):/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"From\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"policyFrom\",id:\"policyFrom\",value:this.state.policyFrom,onBlur:function onBlur(e){return _this15.handleChange(e);},onChange:function onChange(e){return _this15.handleChange(e);}}),/*#__PURE__*/React.createElement(\"em\",{id:\"policyFromError\",className:\"error invalid-feedback\"}))),this.state.isMonthYear?/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Year\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"policyYear\",id:\"policyYear\",value:this.state.policyYear,onChange:function onChange(e){return _this15.selectType(e.target,'policyYear');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Year\"),this.state.yearArray.map(function(year,i){return/*#__PURE__*/React.createElement(\"option\",{value:year.value,key:i},year.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"policyYearError\",className:\"error invalid-feedback\"}))):/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"To\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"policyTo\",id:\"policyTo\",value:this.state.policyTo,onBlur:function onBlur(e){return _this15.handleChange(e);},onChange:function onChange(e){return _this15.handleChange(e);}}),/*#__PURE__*/React.createElement(\"em\",{id:\"policyToError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"4\",style:{alignSelf:'center'}},this.state.isMonthYear?/*#__PURE__*/React.createElement(\"label\",{style:{textDecoration:'underline'},onClick:function onClick(){return _this15.changePolicyDateView();}},\"Change to Date Range\"):/*#__PURE__*/React.createElement(\"label\",{style:{textDecoration:'underline'},onClick:function onClick(){return _this15.changePolicyDateView();}},\"Change to Month/Year\")))),/*#__PURE__*/React.createElement(Col,{md:\"1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Language\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"language\",id:\"language\",value:this.state.language,onChange:function onChange(e){return _this15.selectType(e.target,'language');}},/*#__PURE__*/React.createElement(\"option\",{value:\"All\"},\"All\"),this.state.languageList.map(function(x){return/*#__PURE__*/React.createElement(\"option\",{value:x.value},x.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Me or All\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"MeOrAll\",id:\"MeOrAll\",value:this.state.meOrAll,onChange:function onChange(e){return _this15.selectType(e.target,'meOrAll');}},this.state.meOrAllList.map(function(x){return/*#__PURE__*/React.createElement(\"option\",{value:x.value},x.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"8\",style:{marginTop:\"25px\"}},/*#__PURE__*/React.createElement(\"label\",null,\"Sub Agent\")),/*#__PURE__*/React.createElement(Col,{md:\"4\",style:{marginTop:\"25px\"}},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",name:\"isSubAgent\",id:\"isSubAgent\",checked:this.state.isSubAgent,onChange:function onChange(){return _this15.onSubAgentChange(!_this15.state.isSubAgent);},value:this.state.isSubAgent}))))),/*#__PURE__*/React.createElement(Col,{md:\"2\",className:\"text-left\",style:{alignSelf:'center'}},/*#__PURE__*/React.createElement(BTN,{type:\"submit\",color:\"success\",title:\"Go\",style:{marginRight:'5px'},onClick:function onClick(){return _this15.getPolicyList({'StringMapKey':_this15.state.policyStage,'Count':_this15.state.policyCount});}},\" Go \"),this.state.policyStage=='Lead'&&CommonConfig.loggedInUserData().SecurityGroupName==\"New Business\"?/*#__PURE__*/React.createElement(BTN,{type:\"button\",color:\"success\",title:\"New Lead\",onClick:function onClick(){return _this15.goToLeadPage();}},\" New Lead \"):null)))))),/*#__PURE__*/React.createElement(DataTable,{ref:function ref(el){return _this15.dt=el;},value:this.state.policyList,first:this.state.selectedPage,onPage:function onPage(e){return _this15.onPage(e);},paginator:true,rows:this.state.rowsPerPage,totalRecords:this.state.policyList.length,exportFilename:\"StringMap List\",currentPageReportTemplate:this.state.str,paginatorTemplate:\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",rowsPerPageOptions:this.state.rowsPerPageOptions,globalFilter:this.state.globalFilter,emptyMessage:\"No records found\",responsive:true,resizableColumns:true,columnResizeMode:\"fit\",scrollable:true,scrollHeight:\"340px\"},/*#__PURE__*/React.createElement(Column,{selectionMode:\"multiple\",style:{width:'3em'}}),columns)),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.openNotePopup,className:'modal-lg',style:{maxWidth:'70%'}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this15.setState({openNotePopup:false});}},\" Notes \"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Card,{className:\"mb-0\"},/*#__PURE__*/React.createElement(CardHeader,{id:\"headingOne\"},/*#__PURE__*/React.createElement(BTN,{block:true,color:\"link\",className:\"text-left m-0 p-0\",onClick:function onClick(){return _this15.setState({addNoteCollapse:!_this15.state.addNoteCollapse});},\"aria-expanded\":this.state.addNoteCollapse,\"aria-controls\":\"collapseOne\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"m-0 p-0\"},\" AddNotes \",/*#__PURE__*/React.createElement(\"i\",{style:{float:\"right\"},className:this.state.addNoteCollapse?\"fa fa-chevron-up\":\"fa fa-chevron-down\"}),\" \"))),/*#__PURE__*/React.createElement(Collapse,{isOpen:this.state.addNoteCollapse,\"data-parent\":\"#accordion\",id:\"collapseOne\",\"aria-labelledby\":\"headingOne\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit,style:{padding:10}},CommonConfig.loggedInUserData().SecurityGroupName==\"New Business\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"label\",null,\"Contact Mode\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"contactMode\",id:\"contactMode\",onChange:function onChange(e){return _this15.selectType(e.target,'contactMode');},value:this.state.contactMode},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select\"),this.state.contactModeList.map(function(x){return/*#__PURE__*/React.createElement(\"option\",{value:x.StringMapKey},x.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"contactModeError\",className:\"error invalid-feedback\"})),!this.state.isEditRenewalMonth?/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"label\",null,\" Renewal Month : \",CommonConfig.isEmpty(this.state.renewalMonth)!==true?this.state.renewalMonth.label:this.state.renewalMonth),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BTN,{style:{float:\"right\"},color:\"primary\",onClick:this.state.isEditRenewalMonth?function(){return _this15.editRenewalMonth(\"view\");}:function(){return _this15.editRenewalMonth(\"edit\");}},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-pencil\"})))):/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"label\",null,\" Renewal Month :\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"renewalMonth\",id:\"renewalMonth\",onChange:function onChange(e){return _this15.selectType(e.target,'renewalMonth');},value:this.state.renewalMonth.value},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select\"),this.state.renewalMonthList.map(function(x){return/*#__PURE__*/React.createElement(\"option\",{value:x.StringMapKey},x.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"renewalMonthError\",className:\"error invalid-feedback\"}))),!this.state.isEditDate?/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"label\",null,\"Inception date: \",this.state.notesInceptionDate),/*#__PURE__*/React.createElement(BTN,{style:{float:\"right\"},color:\"primary\",onClick:this.state.isEditDate?function(){return _this15.editDate(\"view\");}:function(){return _this15.editDate(\"edit\");}},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-pencil\"}))):/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"label\",null,\"Inception date: \",this.state.notesInceptionDate),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"inceptionDate\",id:\"inceptionDate\",placeholder:\"Inception Date\",style:{width:'80%',display:\"inline-block\"},onChange:function onChange(e){return _this15.handleChange(e,'inceptionDate');},value:this.state.notesInceptionDate1}),/*#__PURE__*/React.createElement(\"em\",{id:\"iceptionDateError\",className:\"error invalid-feedback\"})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box with-icon\"},/*#__PURE__*/React.createElement(\"label\",null,\"Response*\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"responseType\",id:\"responseType\",onChange:function onChange(e){return _this15.selectType(e.target,'responseType');},value:this.state.responseType},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select\"),this.state.ResponseTypeArray.map(function(ct,i){return/*#__PURE__*/React.createElement(\"option\",{value:ct.StringMapKey},ct.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"responseTypeError\",className:\"error invalid-feedback\"}))),this.state.showReasonDD?/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box with-icon\"},/*#__PURE__*/React.createElement(\"label\",null,\"Reason\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"reasonType\",id:\"reasonType\",onChange:function onChange(e){return _this15.selectType(e.target,'reasonType');},value:this.state.reasonType},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select\"),this.state.ReasonArray.map(function(ct,i){return/*#__PURE__*/React.createElement(\"option\",{value:ct.StringMapKey},ct.StringMapName);})))):null)):null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},CommonConfig.loggedInUserData().SecurityGroupName!=\"New Business\"?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box with-icon\"},/*#__PURE__*/React.createElement(\"label\",null,t(\"contactNotes:NotesType.label\"),\"*\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"notesType\",id:\"notesType\",onChange:function onChange(e){return _this15.selectType(e.target,'notesType');},value:this.state.notesType},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},t(\"contactNotes:NotesType.placeholder\")),this.state.noteType.map(function(ct,i){return/*#__PURE__*/React.createElement(\"option\",{value:ct.StringMapKey},ct.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{className:\"error invalid-feedback\"},t(\"contactNotes:NotesType.error_blank\"))):null,/*#__PURE__*/React.createElement(\"a\",{title:t(\"contactNotes:ImportantNotes\"),href:\"javascript:void(0)\",onClick:function onClick(){return _this15.Important();},style:{color:this.state.isImportant===0?'#aaaaaa':'#ff0000',fontSize:25}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-exclamation-circle\",\"aria-hidden\":\"true\"})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,t(\"contactNotes:Notes.label\"),\"*\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",name:\"notesdescription\",id:\"notesdescription\",placeholder:t(\"contactNotes:Notes.placeholder\"),value:this.state.notesdescription,onChange:function onChange(e){return _this15.handleChange(e);},autoResize:true}),/*#__PURE__*/React.createElement(\"em\",{className:\"error invalid-feedback\"},t(\"contactNotes:Notes.error_blank\"))))),CommonConfig.loggedInUserData().SecurityGroupName==\"New Business\"?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box with-icon\"},/*#__PURE__*/React.createElement(\"label\",null,\"Next Follow-Up Date & Time\"),/*#__PURE__*/React.createElement(Input,{type:\"datetime-local\",id:\"DateTime\",name:\"DateTime\",value:this.state.DateTime,onChange:function onChange(e){return _this15.handleChange(e,'DateTime');}})))):null,/*#__PURE__*/React.createElement(Row,{className:\"text-center\"},/*#__PURE__*/React.createElement(Col,null,this.state.isNoteEdit?CommonConfig.loggedInUserData().SecurityGroupName==\"New Business\"?/*#__PURE__*/React.createElement(\"div\",{className:\"pull-right\"},/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this15.saveNotesNewBusiness();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Update\"),' ',/*#__PURE__*/React.createElement(BTN,{color:\"primary\",onClick:function onClick(){return _this15.resetNewBusiness();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-angle-left\"}),\" Cancel\")):/*#__PURE__*/React.createElement(\"div\",{className:\"pull-right\"},/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this15.saveNotes();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Update\"),' ',/*#__PURE__*/React.createElement(BTN,{color:\"primary\",onClick:function onClick(){return _this15.reset();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-angle-left\"}),\" Cancel\")):CommonConfig.loggedInUserData().SecurityGroupName==\"New Business\"?/*#__PURE__*/React.createElement(\"div\",{className:\"pull-right\"},/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this15.saveNotesNewBusiness();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Save\"),' ',/*#__PURE__*/React.createElement(BTN,{color:\"primary\",onClick:function onClick(){return _this15.resetNewBusiness();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-angle-left\"}),\" Cancel\")):/*#__PURE__*/React.createElement(\"div\",{className:\"pull-right\"},/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this15.saveNotes();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Save\"),' ',/*#__PURE__*/React.createElement(BTN,{color:\"primary\",onClick:function onClick(){return _this15.reset();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-angle-left\"}),\" Cancel\"))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"added-note-outer\"},/*#__PURE__*/React.createElement(\"h4\",null,this.state.policyNoteList.length,\" notes\"),/*#__PURE__*/React.createElement(\"ul\",null,this.state.policyNoteList.map(function(notes,i){return/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"addednote-left\"},/*#__PURE__*/React.createElement(\"span\",{style:{color:notes.IsFlag.data[0]===0?'#aaaaaa':'#ff0000'}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-exclamation-circle\",\"aria-hidden\":\"true\"})),/*#__PURE__*/React.createElement(\"h3\",null,notes.NoteType),(notes.ContactMode==null||notes.ContactMode=='')&&(notes.RenewalMonth==null||notes.RenewalMonth=='')?null:/*#__PURE__*/React.createElement(Row,null,notes.ContactMode==null||notes.ContactMode==''?null:/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Contact Mode:\"),\" \",notes.ContactMode)),notes.RenewalMonth==null||notes.RenewalMonth==''?null:/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Renewal Month:\"),\" \",notes.RenewalMonth))),(notes.Response==null||notes.Response=='')&&(notes.Reason==null||notes.Reason=='')?null:/*#__PURE__*/React.createElement(Row,null,notes.Response==null||notes.Response==''?null:/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Response:\"),\" \",notes.Response)),/*#__PURE__*/React.createElement(Col,{md:\"6\"},notes.Reason==null||notes.Reason==''?null:/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Reason: \"),\" \",notes.Reason))),notes.FollowUpDateTime=='0000-00-00 00:00:00'||notes.FollowUpDateTime==null||notes.FollowUpDateTime==\"\"?null:/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Follow Up DateTime: \"),\" \",moment(notes.FollowUpDateTime).format(CommonConfig.dateFormat.dateTime)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ShowMoreText,{lines:2,more:\"Show more\",less:\"Show less\",anchorClass:\"\",onClick:_this15.executeOnClick,expanded:false},notes.NoteText)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Added By: \"),\" \"),/*#__PURE__*/React.createElement(\"span\",{className:\"date\",style:{marginRight:10}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-user\",\"aria-hidden\":\"true\"}),\" \",notes.CreatedByName),/*#__PURE__*/React.createElement(\"span\",{className:\"date\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-calendar\",\"aria-hidden\":\"true\"}),\" \",moment(notes.CreatedOn).format(CommonConfig.dateFormat.dateTime))),notes.UpdatedByName!=null?/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Updated By\")),/*#__PURE__*/React.createElement(\"span\",{className:\"date\",style:{marginRight:10}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-user\",\"aria-hidden\":\"true\"}),\" \",notes.UpdatedByName),/*#__PURE__*/React.createElement(\"span\",{className:\"date\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-calendar\",\"aria-hidden\":\"true\"}),\" \",moment(notes.UpdatedOn).format(CommonConfig.dateFormat.dateTime))):null)));}))))));}}]);return Dashboard;}(Component);export default withTranslation()(Dashboard);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Dashboard/Dashboard.js"],"names":["React","Component","DataTable","Column","Button","Modal","ModalHeader","ModalBody","Col","CardBody","Form","Row","BTN","UncontrolledTooltip","Card","CardHeader","Collapse","Input","CommonConfig","api","moment","toast","APIConstant","withTranslation","ShowMoreText","Dashboard","props","saveNotes","state","NotesTypeError","notesdescriptionError","NotesForm","FormData","append","notesType","notesdescription","trim","NavID","isImportant","loggedInUserId","LanguageId","post","then","res","success","reset","getNoteList","PolicyId","catch","err","show","resetNewBusiness","t","Date","rowInceptiondate","renewalMonth","getMonth","renewalValue","renewalMonthList","filter","x","StringMapKey","finalRenewalDate","value","label","StringMapName","setState","responseType","notesInceptionDate","InceptionDate","format","notesInceptionDate1","inceptionDate","reasonType","DateTime","contactMode","isEditDate","isEditRenewalMonth","addNoteCollapse","saveNotesNewBusiness","error","data","loggedInUserData","EntityId","console","log","currentPolicyId","msg","handleChange","e","target","name","isEmpty","policyFrom","policyTo","isToDateGreater","isSameOrAfter","inceptionDateError","columns","body","actionTemplate","bind","header","sortable","id","formatPolicyDetail","field","filterMatchMode","formatContactDetail","formatVesselData","formatPremiun","formatDate","departmentData","formatStage","i18n","language","cols","rowsPerPageOptions","dataTableConfig","rowsPerPage","policyStage","match","params","mode","policyCount","policyList","first","rows","StageCountData","openNotePopup","policyNoteList","noteType","TeamType","SecurityGroupName","colOptions","col","push","onPage","isMonthYear","policyData","PolicyType","policyType","PolicyMonth","policyMonth","PolicyYear","policyYear","PolicyFrom","PolicyTo","PolicyLanguage","IsSubAgent","isSubAgent","MeOrAll","meOrAll","CurrentUser","BusinessType","businessType","undefined","Count","getPolicyList","getPolicyStageCount","getNotesType","getLanguageList","getDropDownValues","monthArray","startYear","yearArray","index","parseInt","stringMapType","setStateName","stringmaptype","orderby","path","dropdownbycode","response","StingMapKey","dropdownbycodeforreason","ReasonArray","event","firstPage","l","page","lastPage","length","str","selectedPage","stageData","PolicyStage","pPageIndex","pRowsPerPage","savedData","history","pathname","rowData","column","edit","marginRight","position","getImageIcon","window","open","location","origin","returnValue","alert","retunValue","warn","formattedLanguage","get","getLanguage","i","Language","languageList","linkType","LockedByPerson","IsCurrentUserUW","IsSelfLocked","fontSize","policyNumber","releaseLock","cursor","setTimeout","reloadSearchResult","PolicyNumber","Stage","ReferredToPerson","Note","Department","SubAgentName","SubAgentPhone","SubAgentEmail","DocLang","NAME","AreaCode","CountryCode","PhoneNumber","Email","VesselClassName","VesselTypeName","PremiumDetails","RenewalDate","val","type","responseTypeError","showReasonDD","getDropDownReasonValues","reasonTypeError","contactModeError","renewalMonthError","date","ShowMonth","curmonth","curyear","getFullYear","inceptionDate1","task","condition","errorField","message","document","getElementById","className","innerHTML","map","isIdleTimeOut","selectType","SecurityGroupList","item","textAlign","ct","display","textDecoration","preventDefault","policyTypeArray","month","year","alignSelf","changePolicyDateView","meOrAllList","marginTop","onSubAgentChange","goToLeadPage","el","dt","globalFilter","width","maxWidth","float","handleSubmit","padding","contactModeList","editRenewalMonth","editDate","ResponseTypeArray","Important","color","isNoteEdit","notes","IsFlag","NoteType","ContactMode","RenewalMonth","Response","Reason","FollowUpDateTime","dateFormat","dateTime","executeOnClick","NoteText","CreatedByName","CreatedOn","UpdatedByName","UpdatedOn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalHeader, ModalBody, Col, CardBody, Form, Row, Button as BTN, UncontrolledTooltip, Card, CardHeader, Collapse, Input } from 'reactstrap';\nimport { CommonConfig } from '../../utils/constants';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport ShowMoreText from 'react-show-more-text';\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let columns = [\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, id: 0 },\n            { body: this.formatPolicyDetail.bind(this), field: \"PolicyData\", header: \"Policy No/Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\n            { body: this.formatContactDetail.bind(this), field: \"ClientDetails\", header: \"Client/Contacts\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\n            { body: this.formatVesselData.bind(this), field: \"VesselDetails\", header: \"Vessel\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\n            { field: \"InsuranceCompanyName\", header: \"Insurer\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\n            { body: this.formatPremiun.bind(this),field:\"PremiumDetails\", header: \"SI/Premium\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\n            { body: this.formatDate.bind(this), field: \"RenewalDate\", header: \"Renewal\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\n            { body: this.departmentData.bind(this), field: \"DepartmentDetails\", header: \"Department\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\n            { body: this.formatStage.bind(this),field: \"StageReferredData\", header: \"Stage/Referred To\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\n            { field: \"HandlerPerson\", header: \"Handler\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\n            { field: \"Status\", header: \"Status\", sortable: true, filter: true, filterMatchMode: 'contains', id: 9 },\n        ];\n\n        this.state = {\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\n            cols: columns,\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            policyStage: this.props.match.params.mode,\n            policyCount: 0,\n            policyList: [],\n            first: 1,\n            rows: 10,\n            StageCountData: [],\n            openNotePopup: false,\n            addNoteCollapse: false,\n            policyNoteList: [],\n            noteType: [],\n            NavID: null,\n            TeamType: CommonConfig.loggedInUserData().SecurityGroupName,\n            isImportant: 0,\n            notesType: '',\n            notesdescription: '',\n            NotesTypeError: true,\n            notesdescriptionError: true,\n            addNoteCollapse: false,\n            CurrentUserid: CommonConfig.loggedInUserData().EntityId,\n\n            policyTypeArray: [],\n            policyType: 'Vessel',\n            monthArray: [],\n            policyMonth: moment().format('M'),\n            policyMonthError: false,\n            yearArray: [],\n            policyYear: moment().format('YYYY'),\n            policyYearError: false,\n            isMonthYear: true,\n            policyFrom: '',\n            policyFromError: false,\n            policyTo: '',\n            policyToError: false,\n            ReasonArray: [],\n            ResponseTypeArray: [],\n            showReasonDD: false,\n            responseType: '',\n            responseTypeError:false,\n            reasonTypeError:false,\n            reasonType: '',\n            DateTime: '',\n            reasonsShow: false,\n            contactMode:'',\n            contactModeError: false,\n            contactModeList:[],\n            // renewalMonth:'',\n            renewalMonthList:[],\n            renewalMonthError: false,\n            notesInceptionDate: '',\n            notesInceptionDate1:'',\n            isEditRenewalMonth: false,\n            isEditDate: false,\n            InceptionDate:'',\n            currentPolicyId:'',\n            rowInceptiondate:'',\n            BusinessTypeList:[],\n            businessType:'New Business',\n            meOrAll:  CommonConfig.loggedInUserData().SecurityGroupName == 'New Business'  ? 'Me' : 'All',\n\n            meOrAllList:[\n                { label : 'Me' , value: 'Me'},\n                { label : 'All' , value: 'All'}\n            ],\n\n            SecurityGroupList: [\n                { label: 'New Business', value: 'New Business' },\n                { label: 'Renewal', value: 'Renewal' },\n                { label: 'Underwriting', value: 'Underwriting' },\n            ],\n            SecurityGroupName: '',\n            language: 'All',\n            languageList:[],\n            languageError: false,\n            isSubAgent: false,\n        };\n\n        this.colOptions = [];\n\n        for (let col of columns) {\n            this.colOptions.push({ label: col.header, value: col });\n        }\n        this.onPage = this.onPage.bind(this);\n    }\n\n    changePolicyDateView() {\n        this.setState({ isMonthYear: !this.state.isMonthYear });\n    }\n\n    getPolicyStageCount(policyCount, policyData) {\n        let data = {\n            TeamType: CommonConfig.loggedInUserData().SecurityGroupName == 'Underwriting' ? (this.state.TeamType ? this.state.TeamType : CommonConfig.loggedInUserData().SecurityGroupName) : CommonConfig.loggedInUserData().SecurityGroupName,\n            PolicyType: this.state.policyType,\n            PolicyMonth: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth) : '',\n            PolicyYear: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear) : '',\n            PolicyFrom: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom : '',\n            PolicyTo: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo : '',\n            PolicyLanguage: this.state.language,\n            IsSubAgent: this.state.isSubAgent ? 1 : 0,\n            MeOrAll: this.state.meOrAll,\n            CurrentUser: CommonConfig.loggedInUserData().EntityId,\n            BusinessType: CommonConfig.loggedInUserData().SecurityGroupName == 'Underwriting' ? this.state.businessType :'',\n\n        }\n        api.post('api/getPolicyStageCount', data).then(res => {\n            if (res.success) {\n                console.log(\"getPolicyStageCount\", res.data);\n\n                if (policyCount == \"update\") {\n                    this.setState({ StageCountData: res.data, policyStage: policyData });\n                } else {\n                    this.setState({ StageCountData: res.data, policyStage: this.props.match.params.mode == undefined ? res.data[0].StringMapKey : this.props.match.params.mode });\n                }\n\n                //toDo: Count and Data\n                //this.getPolicyList(this.props.match.params.mode == undefined ? res.data[0] : { 'StringMapKey': this.props.match.params.mode });\n            } else {\n                console.log(\"Else\");\n            }\n        }).catch(err => {\n            console.log(\"errr\", err)\n        })\n    }\n\n    componentDidMount() {\n        var data = {\n            Count: 0,\n            StringMapKey: \"\",\n        };\n        if(CommonConfig.loggedInUserData().SecurityGroupName == 'Renewal'){\n            data.StringMapKey = 'Review';\n        }\n        else if(CommonConfig.loggedInUserData().SecurityGroupName == 'New Business'){\n            data.StringMapKey = 'Lead';\n        }\n        else if(CommonConfig.loggedInUserData().SecurityGroupName == 'Underwriting'){\n            data.StringMapKey = 'New Business';\n            this.setState({SecurityGroupName: \"Underwriting\"});\n        }\n        this.getPolicyList(data);\n        this.getPolicyStageCount('', '');\n        this.getNotesType();\n        this.getLanguageList();\n        this.getDropDownValues('POLICYTYPE', 'policyTypeArray');\n        this.getDropDownValues('POLICYBUSINESSTYPE', 'BusinessTypeList');\n        this.getDropDownValues('MONTH', 'renewalMonthList',);\n        this.getDropDownValues('CONTACTMODE', 'contactModeList');\n        // this.getDropDownValues('FOLLOWUPREASON', 'ReasonArray');\n        this.getDropDownValues('FOLLOWUPRESPONSE', 'ResponseTypeArray');\n\n        // Get Month\n        let monthArray = [\n            { label: 'January', value: 1 },\n            { label: 'February', value: 2 },\n            { label: 'March', value: 3 },\n            { label: 'April', value: 4 },\n            { label: 'May', value: 5 },\n            { label: 'June', value: 6 },\n            { label: 'July', value: 7 },\n            { label: 'August', value: 8 },\n            { label: 'September', value: 9 },\n            { label: 'October', value: 10 },\n            { label: 'November', value: 11 },\n            { label: 'December', value: 12 },\n        ];\n        this.setState({ monthArray: monthArray });\n\n        // Get Year - Get last 10 year from current year\n        let startYear = moment().format('YYYY');\n        let yearArray = [];\n        for (let index = startYear; index >= (parseInt(startYear) - 10); index--) {\n            yearArray.push({ label: index, value: index });\n        }\n        this.setState({ yearArray: yearArray });\n    }\n\n    getDropDownValues(stringMapType, setStateName) {\n        try {\n            let data = {\n                stringmaptype: stringMapType,\n                orderby: 'sortorder'\n            };\n            if (stringMapType == \"MONTH\"){\n                 data = {\n                    stringmaptype: stringMapType,\n                    orderby: 'StringMapKey'\n                };  \n            }\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    async getDropDownReasonValues(response, setStateName) {\n        try {\n            const data = {\n                StingMapKey: response,\n            };\n            await api.post(APIConstant.path.dropdownbycodeforreason, data).then(res => {\n                if (res.success) {\n                    console.log(\"ressssssssssssss/....\", res)\n                    this.setState({ ReasonArray: res.data[0] });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    onPage(event) {\n        let firstPage = event.first + 1;\n        let l = event.rows * (event.page + 1);\n        let lastPage = (l < this.state.policyList.length) ? l : this.state.policyList.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.policyList.length + ' records';\n        this.setState({ selectedPage: event.first, str: str, rowsPerPage: event.rows });\n    }\n\n\n    getPolicyList(stageData) {\n        this.state.policyList = []\n        let PolicyStage = stageData.StringMapKey;\n        let data = {\n            PolicyStage: stageData.StringMapKey,\n            TeamType: CommonConfig.loggedInUserData().SecurityGroupName == 'Underwriting' ? this.state.TeamType : CommonConfig.loggedInUserData().SecurityGroupName,\n            CurrentUser: CommonConfig.loggedInUserData().EntityId,\n            pPageIndex: this.state.first,\n            pRowsPerPage: 10000,\n            policyType: this.state.policyType,\n            PolicyMonth: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth) : '',\n            PolicyYear: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear) : '',\n            PolicyFrom: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom : '',\n            PolicyTo: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo : '',\n            PolicyLanguage: this.state.language,\n            IsSubAgent:this.state.isSubAgent ? 1 : 0 ,\n            MeOrAll: this.state.meOrAll,\n            BusinessType: (stageData.StringMapKey == undefined) ? '' : stageData.StringMapKey,\n        }\n        this.setState({savedData: data});\n        api.post('api/getPolicyListByStage', data).then(res => {\n            console.log(\"getPolicyListByStage\", res.data);\n            if (res.success) {\n              console.log(\"res....\", res)\n                // this.getPolicyStageCount({ TeamType: CommonConfig.loggedInUserData().SecurityGroupName,\n                //     PolicyType: this.state.policyType,\n                //     PolicyMonth: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth) : '',\n                //     PolicyYear: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear) : '',\n                //     PolicyFrom: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom : '',\n                //     PolicyTo: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo : ''});\n                let firstPage = (res.data.length) ? '1' : '0';\n                let lastPage = (this.state.rowsPerPage < res.data.length) ? this.state.rowsPerPage : res.data.length;\n                let str = firstPage + ' to ' + lastPage + ' out of ' + res.data.length + ' records';\n                this.setState({ policyList: res.data, str: str, policyCount: stageData.Count, first: this.state.first, policyStage: PolicyStage });\n                this.getPolicyStageCount('update', PolicyStage);\n                // this.setState({policyStage: stageData.StringMapKey });\n\n\n\n                // let CountData = {\n                //     PolicyStage: stageData.StringMapKey,\n                //     TeamType: CommonConfig.loggedInUserData().SecurityGroupName,\n                //     PolicyType: this.state.policyType,\n                //     PolicyMonth: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyMonth) ? '' : this.state.policyMonth) : '',\n                //     PolicyYear: (this.state.isMonthYear) ? (CommonConfig.isEmpty(this.state.policyYear) ? '' : this.state.policyYear) : '',\n                //     PolicyFrom: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyFrom) ? '' : this.state.policyFrom : '',\n                //     PolicyTo: (!this.state.isMonthYear) ? CommonConfig.isEmpty(this.state.policyTo) ? '' : this.state.policyTo : ''\n                // }\n                // api.post('api/getPolicyStageCount', CountData).then(resCount => {\n                //     if (resCount.success) {\n                //         console.log(\"getPolicyStageCount\", resCount.data);\n                //         this.setState({ StageCountData: resCount.data, policyStage: this.props.match.params.mode == undefined ? resCount.data[0].StringMapKey : this.props.match.params.mode });                \n                //     } else {\n                //         console.log(\"Else\");\n                //     }\n                // });\n            } else {\n                console.log(\"Else\");\n            }\n        }).catch(err => {\n            console.log(\"errr\", err)\n        })\n    }\n\n    goToLeadPage(){\n        this.props.history.push({\n            pathname: '/Master/LeadManagement'    \n      });\n    }\n\n    actionTemplate(rowData, column) {\n        return <div className=\"policy-list-data\">\n            <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.edit(rowData)}\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\n            </Button>\n            {\n                this.getImageIcon(rowData)\n            }\n            {/* {rowData.LockedByPerson == \"\" ? null :\n                <Button type =\"button\" icon=\"fas fa-lock\"  \n                    tooltip={\"Locked By: \" + rowData.LockedByPerson }  tooltipOptions={{ position: 'bottom' }} >\n                </Button>\n            }\n            {(rowData.LockedByPerson != \"\" && this.state.SecurityGroupName == 'Underwriting')?\n                <Button type =\"button\" icon=\"fas fa-lock\"  onClick={() => this.releaseLock(rowData)} \n                    tooltip={\"Unlock Policy\" }  tooltipOptions={{ position: 'bottom' }} >\n                </Button>\n                : null\n            } */}\n        </div>;\n    }\n\n    edit(rowData) {\n\n        window.open( window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1','_blank');     \n                    \n        // this.setLock(rowData);\n        // window.open( window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1','_blank');\n    }\n\n    // openLock(rowData){\n    //     if(rowData.LockedByPersonId == this.state.CurrentUserid ){\n    //         this.releaseLock(rowData);\n    //     }else{\n    //         toast.warn(\"Only \" +rowData.LcokedByPerson +\" can unlock this Policy\");\n    //     }\n        \n    //     console.log(\"lock realeased.....\")\n    // }\n\n    async setLock(rowData){\n        let data = {\n            'PolicyId' : rowData.PolicyId\n        };\n        \n       await api.post('api/setLock', data).then(res => {\n            if (res.success) {\n                if(res.data[0].returnValue == ''){\n                    console.log(\"notes......\",res.data)\n                    window.open( window.location.origin + '/#' + '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1','_blank');\n                }else{\n                    alert(res.data[0].retunValue);\n                }\n            } else {\n                toast.warn(\"Something went Wrong.\");\n            }\n        }).catch(err => {\n            console.log(\"setLock err\", err);\n        });\n\n    }\n\n    getLanguageList() {\n        var formattedLanguage = [];\n        try {\n            api.get(APIConstant.path.getLanguage).then(res => {\n                if (res.success) {\n                    for (var i = 0; i < res.data.length; i++) {\n                        formattedLanguage.push({\n                            label: res.data[i].Language,\n                            value: res.data[i].Language,\n                        });\n                    }\n                    this.setState({ languageList: formattedLanguage });\n                } else {\n                }\n            }).catch(err => {\n                console.log('error in languagelist',err)\n            });\n        } catch (err) {\n            console.log('error in languagelist',err)\n        }\n    }\n\n\n    getImageIcon(rowData){\n        var linkType= '';\n        if(rowData.LockedByPerson ==''){\n            linkType= 'NoLock';\n        }else{\n            if(rowData.IsCurrentUserUW == 0 && rowData.IsSelfLocked ==1){\n                linkType= 'NormalSelfLock';\n            }else if(rowData.IsCurrentUserUW == 1 && rowData.IsSelfLocked ==1){\n                linkType= 'UWSelfLock';\n            }else if(rowData.IsCurrentUserUW == 0 && rowData.IsSelfLocked ==0){\n                linkType= 'NormalOtherLock';\n            }else if(rowData.IsCurrentUserUW ==1 && rowData.IsSelfLocked ==0){\n                linkType= 'UWOtherLock';\n            }\n        }\n        console.log('linkType',linkType)\n        \n        switch (linkType){\n            \n        case 'NormalSelfLock' : \n            return <span> \n                <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\" style={{ fontSize: '25px'}} id={\"NSL\"+rowData.policyNumber}></i>\n                    <UncontrolledTooltip placement=\"right\" target={\"NSL\"+rowData.policyNumber}>\n                        {\"locked By Me\"}\n                    </UncontrolledTooltip>\n                 </span>\n        case 'UWSelfLock':\n            return <span>\n                    <i class=\"fa fa-user-circle-o\" style={{ fontSize: '25px'}} aria-hidden=\"true\" id={'USL'+ rowData.policyNumber}></i>\n                    <UncontrolledTooltip placement=\"right\" target={\"USL\"+ rowData.policyNumber}>\n                        {\"locked By Me\"}\n                    </UncontrolledTooltip>\n                    </span>\n        case 'NormalOtherLock':\n            return <span>\n                <i class=\"fa fa-lock\" aria-hidden=\"true\" style={{ fontSize: '25px'}} id={\"NOL\"+ rowData.policyNumber}></i> \n                 <UncontrolledTooltip placement=\"right\" target={\"NOL\"+ rowData.policyNumber} >\n                        {\"locked By\" + rowData.LockedByPerson}\n                    </UncontrolledTooltip>\n                </span>\n        case 'UWOtherLock' :\n            return <span>\n                <i class=\"fa fa-lock\" onClick={()=>this.releaseLock(rowData)} style={{ fontSize: '25px' , cursor: 'pointer'}} aria-hidden=\"true\" id={\"UWO\"+ rowData.policyNumber}> </i>\n                {/* <img src= 'img' onClick={()=>this.releaseLock(rowData)} alt=\"UWO\" /> */}\n                    <UncontrolledTooltip placement=\"right\" target={\"UWO\"+ rowData.policyNumber} >\n                        {\"locked By\" + rowData.LockedByPerson}\n                    </UncontrolledTooltip>\n                    </span>\n        case 'Nolock':\n            return null;\n        }\n    }\n\n\n    async releaseLock(rowData){\n        let data = {\n            'PolicyId' : rowData.PolicyId,\n             'ReleaseAll': 0\n        };\n        \n         await api.post('api/releaseLock', data).then( async res => {\n            if (res.success) {\n                if(res.data[0][0].returnValue==''){\n                    setTimeout(async() => {\n                       await this.reloadSearchResult({'StringMapKey': this.state.policyStage, 'Count': this.state.policyCount }, rowData)\n                    }, 100);  \n                    \n                }else{\n                    toast.warn(res.data[0][0].returnValue);\n                }\n            } else {\n                toast.error(\"SomeThing went wrong.\");\n            }\n        }).catch(err => {\n            console.log(\"setLock err\", err);\n        });\n\n    }\n\n    reloadSearchResult(stageData , rowData){\n        let data = this.state.savedData\n        let PolicyStage = stageData.StringMapKey;\n        api.post('api/getPolicyListByStage', data).then(res => {\n            console.log(\"getPolicyListByStage\", res.data);\n            if (res.success) {\n\n                let firstPage = (res.data.length) ? '1' : '0';\n                let lastPage = (this.state.rowsPerPage < res.data.length) ? this.state.rowsPerPage : res.data.length;\n                let str = firstPage + ' to ' + lastPage + ' out of ' + res.data.length + ' records';\n                this.setState({ policyList: res.data, str: str, policyCount: stageData.Count, first: this.state.first, policyStage: PolicyStage });\n                this.getPolicyStageCount('update', PolicyStage);\n                toast.success(\"Policy \"+rowData.PolicyNumber+ \" unlocked Successfully\");\n            } else {\n                console.log(\"Else\");\n            }\n        }).catch(err => {\n            console.log(\"errr\", err)\n        })\n    }\n\n    formatStage(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.Stage}</p>\n                <p>{rowData.ReferredToPerson}</p>\n                <span>\n                    <i onClick={() => this.getNoteList(rowData)} style={{ fontSize: '25px', cursor: 'pointer' }} className=\"pi pi-comment\" href=\"#\" id={\"CommentTooltip\" + rowData.PolicyId}></i>\n                    <UncontrolledTooltip placement=\"bottom\" target={\"CommentTooltip\" + rowData.PolicyId}>\n                        {CommonConfig.isEmpty(rowData.Note) ? rowData.Stage : rowData.Note}\n                    </UncontrolledTooltip>\n                </span>\n            </div>\n        )\n    }\n\n    departmentData(rowData){\n        return(\n            <div className=\"policy-list-data\">\n                <p>{rowData.Department}</p>\n                {rowData.Department == \"SubAgent\"\n                ?<> \n                <p>{rowData.SubAgentName}</p>\n                    <p>{rowData.SubAgentPhone}</p>\n                    <p>{rowData.SubAgentEmail}</p>\n                </>\n                : null}\n            </div>\n        )\n    }\n\n    formatPolicyDetail(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.PolicyType}</p>\n                <p>{rowData.PolicyNumber}</p>\n                <p>{rowData.DocLang}</p>\n            </div>\n        )\n    }\n\n    formatContactDetail(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.NAME}</p>\n                {(rowData.AreaCode != undefined && rowData.AreaCode != null && rowData.AreaCode != '')?\n                <p>{rowData.CountryCode+' '+rowData.AreaCode+' '+rowData.PhoneNumber}</p>\n                : <p>{rowData.CountryCode+' '+rowData.PhoneNumber}</p> }\n                {/* <p>{CommonConfig.formatPhoneNumber(rowData.CountryCode + rowData.PhoneNumber)}</p> */}\n                <p>{rowData.Email}</p>\n            </div>\n        )\n    }\n\n    formatVesselData(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>{rowData.VesselClassName}</p>\n                <p>{rowData.VesselTypeName}</p>\n            </div>\n        )\n    }\n\n    formatPremiun(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                <p>\n                    {rowData.PremiumDetails}\n                </p>\n        {/* <p>{rowData.CurrentPremium} - {rowData.RenewalPremium} ( {rowData.PreiumDifferencePercentage}% )</p> */}\n                {/* <p>{rowData.PreiumDifference}</p> */}\n            </div>\n        )\n    }\n\n    formatDate(rowData) {\n        return (\n            <div className=\"policy-list-data\">\n                {/* <p>{moment(rowData.InceptionDate).format(CommonConfig.dateFormat.dateOnly)}</p> */}\n                {/* <p>{moment(rowData.RenewalDate).format(CommonConfig.dateFormat.dateOnly)}</p> */}\n                <p>{rowData.RenewalDate}</p>\n            </div>\n        )\n    }\n\n\n    getNoteList(rowData) {\n        // let date =moment(rowData.InceptionDate).getMonth();\n        var t ='';\n        if(rowData.InceptionDate != undefined || rowData.InceptionDate != null){\n            t = new Date(rowData.InceptionDate);\n            this.setState({rowInceptiondate: rowData.InceptionDate,\n                notesInceptionDate: moment(rowData.InceptionDate).format('DD-MM-YYYY'),\n                notesInceptionDate1: moment(rowData.InceptionDate).format('YYYY-MM-DD'),\n                InceptionDate: rowData.InceptionDate });\n        }else{\n            t = new Date(this.state.rowInceptiondate);\n        }\n\n        \n        var renewalMonth = \"\";\n        if(t.getMonth() + 1 < 10){\n            renewalMonth = \"0\"+ (t.getMonth() + 1);  \n        }  \n        else{\n            renewalMonth = (t.getMonth() + 1);\n        } \n        let renewalValue = this.state.renewalMonthList.filter(x=> x.StringMapKey == renewalMonth);\n        let finalRenewalDate = {\n            value : renewalMonth,\n            label : renewalValue[0].StringMapName\n        }\n    \n        this.setState({ NavID: null  , renewalMonth: finalRenewalDate, currentPolicyId: rowData.PolicyId});\n\n        const data = {\n            'entityId': rowData.PolicyId,\n            'entityType': 'Policy',\n            'CurrentUser': CommonConfig.loggedInUserData().EntityId\n        };\n\n        // if (CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\") {\n            api.post('api/getNewBusineesNotes', data).then(res => {\n                if (res.success) {\n                    console.log(\" new business notes......\", res.data)\n                    this.setState({ policyNoteList: res.data, openNotePopup: true, NavID: rowData.PolicyId });\n                } else {\n                    toast.warn(\"No notes found for Policy.\");\n                }\n            }).catch(err => {\n                console.log(\"getNoteList err\", err);\n            });\n        // } else {\n        //     api.post('api/getNotes', data).then(res => {\n        //         if (res.success) {\n        //             console.log(\"notes......\", res.data)\n        //             this.setState({ policyNoteList: res.data, openNotePopup: true, NavID: rowData.PolicyId });\n        //         } else {\n        //             toast.warn(\"No notes found for Policy.\");\n        //         }\n        //     }).catch(err => {\n        //         console.log(\"getNoteList err\", err);\n        //     });\n        // }\n    }\n\n\n    getNotesType() {\n        try {\n            const data = {\n                stringmaptype: 'NOTETYPE'\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ noteType: res.data });\n                } else {\n\n                }\n            }).catch(err => {\n\n            });\n        } catch (error) {\n\n        }\n    }\n\n    onSubAgentChange(val){\n        this.setState({isSubAgent: val});\n    }\n\n\n    selectType(value, type) {\n        if (type === 'notesType') {\n            if (value === '' || value === null) {\n                this.setState({ NotesTypeError: true, notesType: value });\n                this.show('notesType', true);\n            } else {\n                this.setState({ NotesTypeError: false, notesType: value.value });\n                this.show('notesType', false);\n            }\n        }\n\n        if (type === 'BusinessType') {\n           if (value === '' || value === null) {\n                this.setState({ businessType: value });\n            } else {\n                this.setState({ businessType: value.value});\n\n            }\n        }\n\n        if (type === 'policyMonth') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyMonth: '' });\n            } else {\n                this.setState({ policyMonth: value.value });\n            }\n        }\n\n        if (type === 'policyYear') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyYear: '' });\n            } else {\n                this.setState({ policyYear: value.value });\n            }\n        }\n\n        if (type === 'policyType') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ policyType: '' });\n            } else {\n                this.setState({ policyType: value.value });\n            }\n        }\n\n        \n        if (type === 'language') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ language: '' });\n            } else {\n                this.setState({ language: value.value });\n            }\n        }\n\n        if (type === 'meOrAll') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ meOrAll: '' });\n            } else {\n                this.setState({ meOrAll: value.value });\n            }\n        }\n\n        if (type === 'responseType') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ responseType: '', responseTypeError: true ,showReasonDD: false });\n                this.show('responseType', true ,\"responseTypeError\", \"Please select Response\")\n            } else {\n                this.getDropDownReasonValues(value.value, 'ReasonArray')\n                this.setState({ responseType: value.value , responseTypeError:false});\n                this.show('responseType', false ,\"responseTypeError\", \"\")\n\n                // this.getDropDownReasonValues(value.value, 'ReasonArray')\n                // if(this.state.ReasonArray){\n                if (value.value == \"Not Interested\" || value.value == \"Lost\" || value.value == \"Purge\"|| value.value == \"Abandoned\" ){\n                    this.setState({showReasonDD: true});\n                }else{\n                    this.setState({showReasonDD: false});\n                }\n            }\n        }\n        \n        if (type === 'reasonType') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ reasonType: '', reasonTypeError: true });\n                this.show('reasonType', true ,\"reasonTypeError\", \"Please select Reason\")\n            } else {\n                this.setState({ reasonType: value.value ,reasonTypeError:false});\n                this.show('reasonType', false ,\"reasonTypeError\", \"\");\n            }\n        }\n\n        if (type === 'contactMode') {\n            if (value.value == '' || value.value == undefined || value.value == null) {\n                this.setState({ contactMode: '', contactModeError: true });\n                this.show('contactMode', true, \"contactModeError\", \"Please select Contact mode\");\n            } else {\n                this.setState({ contactMode: value.value, contactModeError: false });\n                this.show('contactMode', false, \"contactModeError\", \"\");\n            }\n        }\n\n        if (type === 'renewalMonth') {\n            if (value.value == '' || value.value == undefined || value.value == null) {\n                this.setState({ renewalMonth: '', renewalMonthError:true });\n                this.show('renewalMonth', true, \"renewalMonthError\", \"Please select Renewal month\");\n            } else {\n                var date = new Date();\n                // let currentMonth = date.getMonth() + 1;\n                // var firstDay;\n                // let inceptionDate = new Date(moment(this.state.notesInceptionDate).format(\"DD-MM-YYYY\"));\n                // let inceptionMonth = inceptionDate.getMonth() + 1 ;\n                // let inceptionfirstDay = new Date(inceptionDate.getFullYear(), Number(value.value) - 1, 1);\n                var ShowMonth = value.value;\n                 console.log(ShowMonth);\n\n                var curmonth = new Date().getMonth() + 1;\n                console.log(curmonth);\n                if (ShowMonth < curmonth)\n        \n                    var curyear = new Date().getFullYear() + 1;\n                else\n                    var curyear = new Date().getFullYear();\n                console.log(\"curyear\", curyear);\n        \n                var inceptionDate = moment([parseInt(curyear), parseInt(value.value) - 1]).format('DD-MM-YYYY');\n                var inceptionDate1 = moment([parseInt(curyear), parseInt(value.value) - 1]).format('YYYY-MM-DD');\n                // if(currentMonth > Number(value.value)){\n                //     firstDay = new Date(date.getFullYear() + 1, Number(value.value) - 1, 1);\n                // }\n                // else{\n                //     firstDay = new Date(date.getFullYear(), Number(value.value) - 1, 1);\n                // }\n\n                // if((Number(value.value) > inceptionMonth)){\n                //     firstDay = new Date(inceptionDate.getFullYear(), Number(value.value) - 1, 1);\n                //     console.log(\"in if\",moment(firstDay).format('DD-MM-YYYY'));\n                // }\n                // else{\n                //     firstDay = new Date(inceptionDate.getFullYear() + 1, Number(value.value) - 1, 1);\n                //     console.log(\"in else\",moment(firstDay).format('DD-MM-YYYY'));\n                // }\n                this.setState({ renewalMonth: value.value, renewalMonthError:true , notesInceptionDate: inceptionDate,notesInceptionDate1: inceptionDate1});\n                this.show('renewalMonth', false, \"renewalMonthError\", \"\");\n\n            }\n        }\n\n        if (type === 'TeamType') {\n            if (value === '' || value === undefined || value === null) {\n                this.setState({ TeamType: '' });\n            } else {\n                this.setState({ TeamType: value.value });\n                var data = {\n                    Count: 0,\n                    StringMapKey: \"\",\n                }\n                if(value.value == 'Renewal'){\n                    data.StringMapKey = 'Review';\n                }\n                else if(value.value == 'New Business'){\n                    data.StringMapKey = 'Lead';\n                }\n                else if(value.value == 'Underwriting'){\n                    data.StringMapKey = 'New Business';\n                }\n                setTimeout(() => {\n                this.getPolicyList(data);\n                // this.getPolicyStageCount('', '');\n                this.getNotesType();\n                this.getDropDownValues('POLICYTYPE', 'policyTypeArray');\n                // this.getDropDownValues('FOLLOWUPREASON', 'ReasonArray');\n                this.getDropDownValues('FOLLOWUPRESPONSE', 'ResponseTypeArray');  \n                }, 100);\n\n            }\n        }\n    }\n\n    editDate(task) {\n        if (task == \"view\") {\n            this.setState({ isEditDate: false });\n        } else {\n            this.setState({ isEditDate: true });\n        }\n    }\n\n    editRenewalMonth(task){\n        if(task == 'view'){\n            this.setState({ isEditRenewalMonth : false});\n        } else {\n            this.setState({ isEditRenewalMonth: true });\n        }\n    }\n\n    Important() {\n        (this.state.isImportant === 0 ? this.setState({ isImportant: 1 }) : this.setState({ isImportant: 0 }))\n    }\n\n    saveNotes = () => {\n        if (\n            this.state.NotesTypeError === false &&\n            this.state.notesdescriptionError === false) {\n\n            const NotesForm = new FormData();\n            NotesForm.append('notesType', this.state.notesType);\n            NotesForm.append('notesdescription', this.state.notesdescription.trim());\n            NotesForm.append('entityid', this.state.NavID);\n            NotesForm.append('entitytype', 'Policy');\n            NotesForm.append('isflag', this.state.isImportant);\n            NotesForm.append('loggedInUserId', CommonConfig.loggedInUserId());\n            NotesForm.append('languageId', this.state.LanguageId);\n\n            api.post('api/addNotes', NotesForm).then(res => {\n                if (res.success) {\n                    this.reset();\n                    toast.success('Notes added successfully');\n                    this.getNoteList({ PolicyId: this.state.NavID });\n                } else {\n\n                }\n            }).catch(err => {\n            });\n        } else {\n            this.show(\"notesType\", this.state.NotesTypeError);\n            this.show(\"notesdescription\", this.state.notesdescriptionError);\n        }\n    }\n\n    resetNewBusiness = () => {\n        var t = new Date(this.state.rowInceptiondate);\n        \n        var renewalMonth = \"\";\n        if(t.getMonth() + 1 < 10){\n            renewalMonth = \"0\"+ (t.getMonth() + 1);  \n        }  \n        else{\n            renewalMonth = (t.getMonth() + 1);\n        } \n        let renewalValue = this.state.renewalMonthList.filter(x=> x.StringMapKey == renewalMonth);\n        let finalRenewalDate = {\n            value : renewalMonth,\n            label : renewalValue[0].StringMapName\n        }\n        this.setState({\n            notesdescription: '', notesdescriptionError: true,\n            responseType: '',\n            notesInceptionDate: moment(this.state.InceptionDate).format('DD-MM-YYYY'),\n            notesInceptionDate1: moment(this.state.inceptionDate).format('YYYY-MM-DD'),\n            reasonType: '',\n            DateTime: '',\n            renewalMonth: finalRenewalDate,\n            contactMode:'',\n            isImportant: 0,\n            isEditDate: false,\n            isEditRenewalMonth: false,\n\n        });\n\n        this.show(\"notesdescription\", false);\n\n        this.setState({ addNoteCollapse: false });\n    }\n\n    saveNotesNewBusiness = () => {\n        if (this.state.notesdescriptionError === false) {\n            if (this.state.responseType == \"\") {\n                toast.error('Please Select Response Type');\n                return\n            }\n\n            if (this.state.responseType == \"Not Interested\") {\n                if (this.state.reasonType == \"\") {\n                    toast.error('Please Select Reason Type');\n                    return\n                }\n            }\n\n            if (this.state.contactMode == \"\") {\n                toast.error('Please Select Contact mode');\n                return\n            }\n            \n            if (this.state.renewalMonth == \"\") {\n                toast.error('Please Select Renewal Month');\n                return\n            }\n            var data = {\n                'EntityType': 'Policy',\n                'EntityId': this.state.NavID,\n                'PolicyId': this.state.NavID,\n                'isflag': this.state.isImportant,\n                'Response': this.state.responseType,\n                'Reason': this.state.reasonType,\n                'NoteText': this.state.notesdescription.trim(),\n                'FollowUpDateTime': this.state.DateTime,\n                // 'RenewalMonth': this.state.renewalMonth,\n                'InceptionDate': this.state.notesInceptionDate1,\n                'ContactMode': this.state.contactMode,\n                'CurrentUser': CommonConfig.loggedInUserData().EntityId\n            }\n            console.log(\"dataaaaaa..........\",data)\n            api.post('api/saveFollowUpNote', data).then(res => {\n                console.log(\"dataaaaaa..........\",res)\n\n                if (res.data.success) {\n                    this.resetNewBusiness();\n                    toast.success('Follow-Up note added successfully');\n                    this.getNoteList({ PolicyId: this.state.currentPolicyId });\n                } else {\n                    toast.error(res.data.msg);\n                }\n            }).catch(err => {\n            });\n        } else {\n            if(this.state.responseType ==''){\n                this.show(\"responseType\", true, \"responseTypeError\" , \"Please Select Response\" )\n            }\n            if(this.state.contactMode ==''){\n                this.show(\"contactMode\", true, \"contactModeError\" , \"Please Select Contact mode\" )\n            }\n            if(this.state.renewalMonth ==''){\n                this.show(\"renewalMonth\", true, \"renewalMonthError\" , \"Please Select Renewal month\" )\n            }\n            this.show(\"notesType\", this.state.NotesTypeError);\n            this.show(\"notesdescription\", this.state.notesdescriptionError);\n        }\n    }\n\n    // show(field, condition) {\n    //     if (condition) {\n    //         document.getElementById(field).className = \"form-control is-invalid\";\n    //     } else {\n    //         document.getElementById(field).className = \"form-control\";\n    //     }\n    // }\n\n    \n    show(field, condition, errorField, message) {\n        if (condition) {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control is-invalid\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.name === 'notesdescription') {\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ notesdescriptionError: true });\n                this.show(\"notesdescription\", true);\n            } else {\n                this.setState({ notesdescriptionError: false, notesdescription: e.target.value });\n                this.show(\"notesdescription\", false);\n            }\n        }\n\n        if (e.target.name === 'policyFrom') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ policyFrom: '' });\n            } else {\n                this.setState({ policyFrom: e.target.value, policyTo: '' });\n                this.show('policyTo', false, 'policyToError', '');\n            }\n        }\n\n        if (e.target.name === 'policyTo') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ policyTo: '' });\n            } else {\n                if (!CommonConfig.isEmpty(this.state.policyFrom)) {\n                    var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.policyFrom);\n                    if (!isToDateGreater) {\n                        this.show('policyTo', true, 'policyToError', 'To date must be greater then From date.');\n                    } else {\n                        this.show('policyTo', false, 'policyToError', '');\n                    }\n                } else {\n                    this.show('policyTo', false, 'policyToError', '');\n                }\n                this.setState({ policyTo: e.target.value });\n            }\n        }\n        if(e.target.name === 'inceptionDate'){\n            if (CommonConfig.isEmpty(e.target.value)) {\n                this.setState({ inceptionDateError: true });\n                this.show(\"inceptionDate\", true, \"inceptionDateError\", \"Please enter Inception Date\");\n            }else {  \n                var t = new Date(e.target.value);\n                var renewalMonth = \"\";\n                if(t.getMonth() + 1 < 10){\n                    renewalMonth = \"0\"+ (t.getMonth() + 1);  \n                }  \n                else{\n                    renewalMonth = (t.getMonth() + 1);\n                } \n                let data = this.state.renewalMonthList.filter(x=> x.StringMapKey == renewalMonth);\n                var inceptionDate = moment(e.target.value).format('DD-MM-YYYY');                \n                console.log(\"data.......\",e.target.value);\n                let finalRenewalDate = {\n                    value : renewalMonth,\n                    label : data[0].StringMapName\n                }\n                this.setState({ notesInceptionDate: inceptionDate ,notesInceptionDate1: e.target.value, inceptionDateError: false ,renewalMonth: finalRenewalDate });\n                this.show('inceptionDate', false , \"inceptionDateError\", \"\");\n            }\n        }\n    }\n\n    reset = () => {\n        this.setState({\n            notesdescription: '', notesdescriptionError: true,\n            notesType: '', NotesTypeError: true,\n            isImportant: 0,\n        });\n        this.show(\"notesdescription\", false);\n        this.show('notesType', false);\n\n        this.setState({ addNoteCollapse: false });\n    }\n\n\n\n    render() {\n        const { t, i18n } = this.props;\n\n        let columns = this.state.cols.map((col, i) => {\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode}/>;\n        });\n\n        if (this.props.isIdleTimeOut) {\n            this.props.history.push('/')\n        }\n\n        return (\n            <div className=\"animated fadeIn\">\n                <div className=\"table-custom\">\n                    <Row>\n                        <Col md='2'>\n                            <h4>{this.state.policyStage} </h4>\n                            {/* <h4>{this.state.policyStage} ({this.state.policyCount})</h4> */}\n                        </Col>\n                        {CommonConfig.loggedInUserData().SecurityGroupName == 'Underwriting' ? <Col md='2'>\n                            <label>Select Dashboard</label>\n                            <Input type=\"select\" name=\"TeamType\" id=\"TeamType\" value={this.state.TeamType} onChange={(e) => this.selectType(e.target, 'TeamType')}>\n                                <option value=\"\">Select Team Type</option>\n                                {this.state.SecurityGroupList.map((item, i) => {\n                                    return (<option value={item.value} key={i}>{item.label}</option>)\n                                })\n                                }\n                            </Input>\n                        </Col> : null}\n                        <Col md='10' style={{ textAlign: \"right\" }}>\n                            {this.state.StageCountData.map((ct, i) => {\n                                return (<div className={this.state.policyStage == ct.StringMapKey ? \"dashbordSelectorSelect\" : ''} style={{ display: 'inline-block', marginRight: 7, textDecoration: \"underline\", cursor: \"pointer\", fontSize: '15px' }} onClick={() => this.getPolicyList(ct)}>{ct.StringMapKey}({ct.Count})</div>)\n                            })}\n                        </Col>\n                    </Row>\n                    <Row>\n\n                        <CardBody>\n                            <Form onSubmit={e => e.preventDefault()}>\n                                <div>\n                                    <Row>\n                                        <Col md=\"2\">\n                                            <div className=\"input-box\">\n                                                <label>Policy Type</label>\n                                                <Input type=\"select\" name=\"policyType\" id=\"policyType\" value={this.state.policyType} onChange={(e) => this.selectType(e.target, 'policyType')}>\n                                                    <option value=\"\">Select Policy Type</option>\n                                                    {this.state.policyTypeArray.map((policyType, i) => {\n                                                        return (<option value={policyType.StringMapKey} key={i}>{policyType.StringMapName}</option>)\n                                                    })\n                                                    }\n                                                </Input>\n                                                <em id=\"policyTypeError\" className=\"error invalid-feedback\"></em>\n                                            </div>\n                                        </Col>\n                                        {this.state.TeamType == 'Underwriting' ? null :\n                                        <Col md=\"5\">\n    \n                                            <Row>\n                                                {(this.state.isMonthYear) ? (\n                                                    <Col md=\"4\">\n                                                        <div className=\"input-box\">\n                                                            <label>Month</label>\n                                                            <Input type=\"select\" name=\"policyMonth\" id=\"policyMonth\" value={this.state.policyMonth} onChange={(e) => this.selectType(e.target, 'policyMonth')}>\n                                                                <option value=\"\">Select Month</option>\n                                                                {this.state.monthArray.map((month, i) => {\n                                                                    return (<option value={month.value} key={i}>{month.label}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"policyMonthError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                    </Col>\n                                                ) : (\n                                                        <Col md=\"4\">\n                                                            <div className=\"input-box\">\n                                                                <label>From</label>\n                                                                <Input type=\"date\" name=\"policyFrom\" id=\"policyFrom\"\n                                                                    value={this.state.policyFrom}\n                                                                    onBlur={(e) => this.handleChange(e)}\n                                                                    onChange={(e) => this.handleChange(e)} />\n                                                                <em id=\"policyFromError\" className=\"error invalid-feedback\"></em>\n                                                            </div>\n                                                        </Col>\n                                                    )}\n                                                {(this.state.isMonthYear) ? (\n                                                    <Col md=\"4\">\n                                                        <div className=\"input-box\">\n                                                            <label>Year</label>\n                                                            <Input type=\"select\" name=\"policyYear\" id=\"policyYear\" value={this.state.policyYear} onChange={(e) => this.selectType(e.target, 'policyYear')}>\n                                                                <option value=\"\">Select Year</option>\n                                                                {this.state.yearArray.map((year, i) => {\n                                                                    return (<option value={year.value} key={i}>{year.label}</option>)\n                                                                })\n                                                                }\n                                                            </Input>\n                                                            <em id=\"policyYearError\" className=\"error invalid-feedback\"></em>\n                                                        </div>\n                                                    </Col>\n                                                ) : (\n                                                        <Col md=\"4\">\n                                                            <div className=\"input-box\">\n                                                                <label>To</label>\n                                                                <Input type=\"date\" name=\"policyTo\" id=\"policyTo\"\n                                                                    value={this.state.policyTo}\n                                                                    onBlur={(e) => this.handleChange(e)}\n                                                                    onChange={(e) => this.handleChange(e)} />\n                                                                <em id=\"policyToError\" className=\"error invalid-feedback\"></em>\n                                                            </div>\n                                                        </Col>\n                                                    )}\n\n                                                <Col md=\"4\" style={{ alignSelf: 'center' }}>\n                                                    {(this.state.isMonthYear) ? (\n                                                        <label style={{ textDecoration: 'underline' }} onClick={() => this.changePolicyDateView()}>Change to Date Range</label>\n                                                    ) : (\n                                                            <label style={{ textDecoration: 'underline' }} onClick={() => this.changePolicyDateView()}>Change to Month/Year</label>\n                                                        )}\n                                                </Col>\n                                            </Row>\n                                        {/* } */}\n                                        </Col>\n                                    \n                                        }\n                                        <Col md=\"1\">\n                                            <div className=\"input-box\">\n                                                <label>Language</label>\n                                                <Input type=\"select\" name=\"language\" id=\"language\" value={this.state.language} onChange={(e) => this.selectType(e.target, 'language')}>\n                                                    <option value=\"All\">All</option>\n                                                    {this.state.languageList.map((x) => {\n                                                        return (<option value={x.value}>{x.label}</option>)\n                                                    })\n                                                    }\n                                                </Input>\n                                            </div>\n                                        </Col>\n                                        <Col md=\"1\">\n                                            <div className=\"input-box\">\n                                                <label>Me or All</label>\n                                                <Input type=\"select\" name=\"MeOrAll\" id=\"MeOrAll\" value={this.state.meOrAll} onChange={(e) => this.selectType(e.target, 'meOrAll')}>\n                                                    {this.state.meOrAllList.map((x) => {\n                                                        return (<option value={x.value}>{x.label}</option>)\n                                                    })\n                                                    }\n                                                </Input>\n                                            </div>\n                                        </Col>\n                                        <Col md=\"1\">\n                                            <div className='input-box'>\n                                                <Row>\n                                               <Col md=\"8\" style={{ marginTop:\"25px\"}}>\n                                                <label>Sub Agent</label></Col>\n                                                <Col md='4'  style={{ marginTop:\"25px\"}}>\n                                                <Input type=\"checkbox\" name=\"isSubAgent\" id=\"isSubAgent\" checked={this.state.isSubAgent} onChange={() => this.onSubAgentChange(!this.state.isSubAgent)} value={this.state.isSubAgent} />\n                                                </Col>\n\n                                                </Row>\n                                            </div>\n                                        </Col>\n                                        <Col md=\"2\" className=\"text-left\" style={{ alignSelf: 'center' }}>\n                                            <BTN type=\"submit\" color=\"success\" title=\"Go\" style={{ marginRight: '5px' }} onClick={() => this.getPolicyList({ 'StringMapKey': this.state.policyStage, 'Count': this.state.policyCount })}> Go </BTN>\n\n                                            {(this.state.policyStage == 'Lead' && CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\" ) ? \n                                                <BTN type=\"button\" color=\"success\" title=\"New Lead\" onClick={() => this.goToLeadPage()}> New Lead </BTN>\n                                                : null }\n                                        </Col>\n                                    </Row>\n                                    {/* <Row>\n                                        <Col md=\"5\">\n                                            <div className=\"input-box\">\n                                                <label>Me or All</label>\n                                                <Input type=\"select\" name=\"MeOrAll\" id=\"MeOrAll\" value={this.state.meOrAll} onChange={(e) => this.selectType(e.target, 'meOrAll')}>\n                                                    {this.state.meOrAllList.map((x) => {\n                                                        return (<option value={x.value}>{x.label}</option>)\n                                                    })\n                                                    }\n                                                </Input>\n                                            </div>\n                                        </Col>\n                                    </Row> */}\n                                </div>\n                            </Form>\n                        </CardBody>\n                    </Row>\n                    <DataTable\n                        ref={(el) => this.dt = el}\n                        value={this.state.policyList}\n                        first={this.state.selectedPage}\n                        onPage={(e) => this.onPage(e)}\n                        paginator={true}\n                        rows={this.state.rowsPerPage}\n                        totalRecords={this.state.policyList.length}\n                        exportFilename=\"StringMap List\"\n                        currentPageReportTemplate={this.state.str}\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\n                        globalFilter={this.state.globalFilter}\n                        emptyMessage=\"No records found\"\n                        responsive={true}\n                        resizableColumns={true}\n                        columnResizeMode=\"fit\"\n                        scrollable={true}\n                        scrollHeight=\"340px\">\n                        <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\n                        {columns}\n                    </DataTable>\n                </div>\n\n                <Modal isOpen={this.state.openNotePopup} className={'modal-lg'} style={{ maxWidth: '70%' }}>\n                    <ModalHeader toggle={() => this.setState({ openNotePopup: false })}> Notes </ModalHeader>\n\n                    <ModalBody>\n                        <Card className=\"mb-0\">\n                            <CardHeader id=\"headingOne\">\n                                <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ addNoteCollapse: !this.state.addNoteCollapse })} aria-expanded={this.state.addNoteCollapse} aria-controls=\"collapseOne\">\n                                    <h5 className=\"m-0 p-0\"> AddNotes <i style={{ float: \"right\" }} className={this.state.addNoteCollapse ? \"fa fa-chevron-up\" : \"fa fa-chevron-down\"}></i> </h5>\n                                </BTN>\n                            </CardHeader>\n\n                            <Collapse isOpen={this.state.addNoteCollapse} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                                <form onSubmit={this.handleSubmit} style={{ padding: 10 }}>\n                                    {CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\" ?\n                                        (<>\n                                        <Row>\n                                            <Col md='4'>\n                                                <label>Contact Mode</label>\n\n                                                    <Input type=\"select\" name =\"contactMode\" id=\"contactMode\" onChange={(e) => this.selectType(e.target,'contactMode')} value={this.state.contactMode}>\n                                                    <option value=''>Select</option>\n                                                    {this.state.contactModeList.map((x) => {\n                                                        return(<option value={x.StringMapKey}>{x.StringMapName}</option>)\n                                                    })\n                                                    }\n                                                    </Input>\n                                                    <em id=\"contactModeError\" className=\"error invalid-feedback\"></em>\n\n                                                {/* </div> */}\n                                            </Col>\n                                            {!this.state.isEditRenewalMonth ? \n                                            <Col md='4'>\n                                                <label> Renewal Month : {CommonConfig.isEmpty(this.state.renewalMonth) !== true ? this.state.renewalMonth.label : this.state.renewalMonth}</label>\n                                                <>\n                                                    <BTN style={{ float: \"right\" }} color=\"primary\"\n                                                        onClick={this.state.isEditRenewalMonth ? () => this.editRenewalMonth(\"view\") : () => this.editRenewalMonth(\"edit\")}\n                                                    >\n                                                    <i className=\"fa fa-pencil\"></i>\n                                                        \n                                                    </BTN>\n                                                    </>\n                                            </Col>\n                                            :\n                                            <Col md='4'>\n                                                <>\n                                                <label> Renewal Month :</label>\n\n                                                    <Input type=\"select\" name =\"renewalMonth\" id=\"renewalMonth\" onChange={(e) => this.selectType(e.target,'renewalMonth')} value={this.state.renewalMonth.value}>\n                                                    <option value=''>Select</option>\n                                                    {this.state.renewalMonthList.map((x) => {\n                                                        return(<option value={x.StringMapKey}>{x.StringMapName}</option>)\n                                                    })\n                                                    }    \n                                                    </Input>\n                                                    <em id=\"renewalMonthError\" className=\"error invalid-feedback\"></em>\n                                                {/* </div> */}\n                                                </>\n                                                 \n                                            </Col>\n                                            }\n                                            {!this.state.isEditDate?\n                                            <Col md='4'>\n                                                <label>Inception date: {this.state.notesInceptionDate}</label>\n                                                \n                                                <BTN style={{ float: \"right\" }} color=\"primary\"\n                                                    onClick={this.state.isEditDate ? () => this.editDate(\"view\") : () => this.editDate(\"edit\")}\n                                                >\n                                                <i className=\"fa fa-pencil\"></i>\n                                                </BTN>\n                                                \n                                            </Col>\n                                            :<Col md='4'>\n                                                <label>Inception date: {this.state.notesInceptionDate}</label>\n                                                <div>\n                                                    <Input type='date' name=\"inceptionDate\" id=\"inceptionDate\"\n                                                        placeholder=\"Inception Date\"\n                                                        style={{ width: '80%', display: \"inline-block\" }}\n                                                        onChange={(e) => this.handleChange(e ,'inceptionDate')}\n                                                        value={this.state.notesInceptionDate1}\n                                                    />\n                                                    <em id=\"iceptionDateError\" className=\"error invalid-feedback\"></em>\n                                                </div>\n\n                                                {/* <label>Inception date: </label>\n                                                <Input type=\"date\" id=\"inceptionDate\" name=\"inceptionDate\"\n                                                        value={moment(this.state.notesInceptionDate).format('DD-MM-YYYY')}\n                                                        onChange={(e) => this.handleChange(e, 'inceptionDate')}\n                                                >\n                                                </Input>\n                                                <em id=\"iceptionDateError\" className=\"error invalid-feedback\"></em> */}\n                                            </Col>\n                                            }\n                                        </Row>\n                                        <Row>\n                                            <Col md=\"3\">\n                                                <div className=\"input-box with-icon\">\n                                                    <label>Response*</label>\n                                                    <Input type=\"select\" name=\"responseType\" id=\"responseType\" onChange={(e) => this.selectType(e.target, 'responseType')} value={this.state.responseType}>\n                                                        <option value=''>Select</option>\n                                                        {this.state.ResponseTypeArray.map((ct, i) => {\n                                                            return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em id=\"responseTypeError\" className=\"error invalid-feedback\"></em>\n                                                </div>\n                                            </Col>\n                                            {this.state.showReasonDD ?\n                                                (<Col md=\"6\">\n                                                    <div className=\"input-box with-icon\">\n                                                        <label>Reason</label>\n                                                        <Input type=\"select\" name=\"reasonType\" id=\"reasonType\" onChange={(e) => this.selectType(e.target, 'reasonType')} value={this.state.reasonType}>\n                                                            <option value=''>Select</option>\n                                                            {this.state.ReasonArray.map((ct, i) => {\n                                                                return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                            })\n                                                            }\n                                                        </Input>\n                                                    </div>\n                                                </Col>) : (null)}\n                                        </Row>\n                                        </>) \n                                    : (null)}\n                                    <Row>\n                                        <Col md=\"6\">\n                                            {CommonConfig.loggedInUserData().SecurityGroupName != \"New Business\" ?\n                                                (<div className=\"input-box with-icon\">\n                                                    <label>{t(\"contactNotes:NotesType.label\")}*</label>\n                                                    <Input type=\"select\" name=\"notesType\" id=\"notesType\" onChange={(e) => this.selectType(e.target, 'notesType')} value={this.state.notesType}>\n                                                        <option value=''>{t(\"contactNotes:NotesType.placeholder\")}</option>\n                                                        {this.state.noteType.map((ct, i) => {\n                                                            return (<option value={ct.StringMapKey}>{ct.StringMapName}</option>)\n                                                        })\n                                                        }\n                                                    </Input>\n                                                    <em className=\"error invalid-feedback\">{t(\"contactNotes:NotesType.error_blank\")}</em>\n                                                </div>) : (null)}\n                                            <a title={t(\"contactNotes:ImportantNotes\")} href=\"javascript:void(0)\" onClick={() => this.Important()} style={{ color: this.state.isImportant === 0 ? '#aaaaaa' : '#ff0000', fontSize: 25 }}><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i></a>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md=\"12\">\n                                            <div className=\"input-box\">\n                                                <label>{t(\"contactNotes:Notes.label\")}*</label>\n                                                <Input type=\"textarea\" name=\"notesdescription\" id=\"notesdescription\" placeholder={t(\"contactNotes:Notes.placeholder\")} value={this.state.notesdescription} onChange={e => this.handleChange(e)} autoResize={true} />\n                                                <em className=\"error invalid-feedback\">{t(\"contactNotes:Notes.error_blank\")}</em>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    {CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\" ?\n                                        (<Row>\n                                            <Col md=\"6\">\n                                                <div className=\"input-box with-icon\">\n                                                    <label>Next Follow-Up Date & Time</label>\n                                                    <Input type=\"datetime-local\" id=\"DateTime\" name=\"DateTime\"\n                                                        value={this.state.DateTime}\n                                                        onChange={(e) => this.handleChange(e, 'DateTime')}>\n                                                    </Input>\n                                                </div>\n                                            </Col>\n                                        </Row>) : (null)}\n                                    <Row className=\"text-center\">\n                                        <Col>\n                                            {(this.state.isNoteEdit) ?\n                                                (CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\" ?\n                                                    (<div className=\"pull-right\">\n                                                        <BTN color=\"success\" onClick={() => this.saveNotesNewBusiness()}><i class=\"fa fa-check\"></i> Update</BTN>{' '}\n                                                        <BTN color=\"primary\" onClick={() => this.resetNewBusiness()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                                                    </div>)\n                                                    : (<div className=\"pull-right\">\n                                                        <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Update</BTN>{' '}\n                                                        <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                                                    </div>)\n                                                ) : (\n                                                    (CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\" ?\n                                                        (<div className=\"pull-right\">\n                                                            <BTN color=\"success\" onClick={() => this.saveNotesNewBusiness()}><i class=\"fa fa-check\"></i> Save</BTN>{' '}\n                                                            <BTN color=\"primary\" onClick={() => this.resetNewBusiness()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                                                        </div>) : (<div className=\"pull-right\">\n                                                            <BTN color=\"success\" onClick={() => this.saveNotes()}><i class=\"fa fa-check\"></i> Save</BTN>{' '}\n                                                            <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-angle-left\"></i> Cancel</BTN>\n                                                        </div>))\n                                                )\n                                            }\n                                        </Col>\n                                    </Row>\n                                </form>\n                            </Collapse>\n                        </Card>\n\n                        <div className=\"added-note-outer\">\n                            <h4>{this.state.policyNoteList.length} notes</h4>\n                            <ul>\n                                {\n                                    this.state.policyNoteList.map((notes, i) => {\n                                        return (\n                                            <li>\n                                                <div className=\"addednote-left\">\n                                                    <span style={{ color: notes.IsFlag.data[0] === 0 ? '#aaaaaa' : '#ff0000' }}><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i></span>\n                                                    <h3>{notes.NoteType}</h3>\n                                                    {(notes.ContactMode == null || notes.ContactMode == '') && (notes.RenewalMonth == null || notes.RenewalMonth == '' ) ? null:\n                                                     <Row>\n                                                       {notes.ContactMode == null || notes.ContactMode == ''? null :\n                                                       <Col md='6'>\n                                                         <p><b>Contact Mode:</b> {notes.ContactMode}</p> \n                                                       </Col>\n                                                       }\n                                                       {notes.RenewalMonth == null || notes.RenewalMonth == ''? null:\n                                                       <Col md='6'>\n                                                         <p><b>Renewal Month:</b> {notes.RenewalMonth}</p> \n                                                       </Col>\n                                                       }\n                                                     </Row>\n                                                     }\n                                                     {(notes.Response == null || notes.Response == '') && (notes.Reason == null || notes.Reason == '' ) ? null:\n                                                     <Row>\n                                                       {notes.Response == null || notes.Response == ''? null:\n                                                         <Col md=\"6\">\n                                                           <p><b>Response:</b> {notes.Response}</p> \n                                                         </Col>\n                                                       }\n                                                       <Col md='6'>\n                                                       {notes.Reason == null || notes.Reason == '' ? null: <p><b>Reason: </b> {notes.Reason}</p> }\n                                                       </Col>\n                                                     </Row>\n                                                     }\n                                                     {notes.FollowUpDateTime == '0000-00-00 00:00:00' || notes.FollowUpDateTime == null || notes.FollowUpDateTime == \"\" ? null :\n                                                       <Row>\n                                                         <Col>\n                                                           <p><b>Follow Up DateTime: </b> {moment(notes.FollowUpDateTime).format(CommonConfig.dateFormat.dateTime)}</p> \n                                                         </Col>\n                                                       </Row>\n                                                    }\n                                                    {/* {(CommonConfig.loggedInUserData().SecurityGroupName == \"New Business\") ?\n                                                        (<div>\n                                                            <Row>\n                                                                <Col md='6'>\n                                                                <p><b>Conatact Mode:</b> {notes.ContactMode}</p> \n                                                                </Col>\n                                                                <Col md='6'>\n                                                                <p><b>Renewal Month:</b> {notes.RenewalMonth}</p> \n                                                                </Col>\n\n                                                            </Row>\n                                                            <Row>\n                                                                <Col md=\"6\">\n                                                                <p><b>Response:</b> {notes.Response}</p> \n                                                                </Col>\n                                                                <Col md='6'>\n                                                                    {notes.Reason != null && notes.Reason != '' ? <p><b>Reason: </b> {notes.Reason}</p> : null}\n                                                                </Col>\n                                                            </Row>\n                                                            <Row>\n                                                            {notes.FollowUpDateTime == '0000-00-00 00:00:00' || notes.FollowUpDateTime != \"Invalid date\"|| notes.FollowUpDateTime != \"\" ? null :\n                                                              <Col>\n                                                              <p><b>Follow Up DateTime: </b> {moment(notes.FollowUpDateTime).format(CommonConfig.dateFormat.dateTime)}</p> \n                                                              </Col>\n                                                              }\n                                                            </Row>\n                                                        </div>) : (null)} */}\n                                                    <div><ShowMoreText\n                                                            lines={2}\n                                                            more='Show more'\n                                                            less='Show less'\n                                                            anchorClass=''\n                                                            onClick={this.executeOnClick}\n                                                            expanded={false}>\n                                                            {notes.NoteText}\n                                                        </ShowMoreText>\n                                                    </div>\n                                                    <Row>\n                                                        <Col md='6'>\n                                                            <p><b>Added By: </b> </p>\n                                                            <span className=\"date\" style={{ marginRight: 10 }}><i class=\"fa fa-user\" aria-hidden=\"true\"></i> {notes.CreatedByName}</span>\n                                                            <span className=\"date\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> {moment(notes.CreatedOn).format(CommonConfig.dateFormat.dateTime)}</span>\n                                                        </Col>\n                                                        {(notes.UpdatedByName != null) ? (\n                                                            <Col md='6'>\n                                                                <p><b>Updated By</b></p>\n                                                                <span className=\"date\" style={{ marginRight: 10 }}><i class=\"fa fa-user\" aria-hidden=\"true\"></i> {notes.UpdatedByName}</span>\n                                                                <span className=\"date\"><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> {moment(notes.UpdatedOn).format(CommonConfig.dateFormat.dateTime)}</span>\n                                                            </Col>\n                                                        ) : (null)}\n                                                    </Row>\n                                                </div>\n\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Dashboard);\n"]},"metadata":{},"sourceType":"module"}