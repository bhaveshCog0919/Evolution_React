{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/CashbookInOut.js\";\nimport React, { Component } from 'react';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass CashbookInOut extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'transactionDate') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            transactionDate: e.target.value,\n            transactionDateError: true\n          });\n          this.show('transactionDate', true, 'transactionDateError', 'Please select Month and Year');\n        } else {\n          this.setState({\n            transactionDate: e.target.value,\n            FromDate: e.target.value,\n            ToDate: e.target.value,\n            transactionDateError: false\n          });\n          this.show('transactionDate', false, 'transactionDateError', '');\n        }\n      }\n\n      if (e.target.name === 'FromDate') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            FromDate: e.target.value,\n            FromDateError: true\n          });\n          this.show('FromDate', true, 'FromDateError', 'Please select From date');\n        } else {\n          this.setState({\n            FromDate: e.target.value,\n            FromDateError: false\n          });\n          this.show('FromDate', false, 'FromDateError', '');\n        }\n      }\n\n      if (e.target.name === 'ToDate') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            ToDate: e.target.value,\n            ToDateError: true\n          });\n          this.show('ToDate', true, 'ToDateError', 'Please select To Date');\n        } else {\n          this.setState({\n            ToDate: e.target.value,\n            ToDateError: false\n          });\n          this.show('ToDate', false, 'ToDateError', '');\n        }\n      }\n\n      if (e.target.name === 'Year') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            Year: e.target.value,\n            YearError: true\n          });\n          this.show('Year', true, 'YearError', 'Please Enter Year');\n        } else {\n          this.setState({\n            Year: e.target.value,\n            YearError: false\n          });\n          this.show('Year', false, 'YearError', '');\n        }\n      }\n    };\n\n    let columns = [{\n      field: \"TransactionDate\",\n      header: \"Transaction Date\",\n      sortable: true,\n      filter: true,\n      id: 'TransactionDate'\n    }, {\n      field: \"TransactionInOut\",\n      header: \"IN/OUT\",\n      sortable: true,\n      filter: true,\n      id: 0\n    }, {\n      field: \"TransactionId\",\n      header: \"Transaction ID\",\n      sortable: true,\n      filter: true,\n      id: 1\n    }, {\n      field: \"PaymentMode\",\n      header: \"Payment Type\",\n      sortable: true,\n      filter: true,\n      id: 2\n    }, {\n      field: \"PaymentAmount\",\n      header: \"Payment Amount\",\n      sortable: true,\n      filter: true,\n      id: 3\n    }, {\n      field: \"AdminFeeAmount\",\n      header: \"Payment Admin Fee\",\n      sortable: true,\n      filter: true,\n      id: 4\n    }, // { field: \"BankCharge\", header: \"Payment Bank Charge - Does not apply\",  sortable: true, filter: true, id: 5 },\n    {\n      field: \"AgencyCommissionAmount\",\n      header: \"Payment Agency Commission\",\n      sortable: true,\n      filter: true,\n      id: 6\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Payment Yachtsman Commission\",\n      sortable: true,\n      filter: true,\n      id: 7\n    }, {\n      field: \"GovtLevyAmount\",\n      header: \"Payment Government Levy\",\n      sortable: true,\n      filter: true,\n      id: 8\n    }, {\n      field: \"DateCompleted\",\n      header: \"Payment Date Completed\",\n      sortable: true,\n      filter: true,\n      id: 10\n    }, {\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 11\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy ID\",\n      sortable: true,\n      filter: true,\n      id: 12\n    }, {\n      field: \"VesselClassName\",\n      header: \"Vessel Class\",\n      sortable: true,\n      filter: true,\n      id: 13\n    }, {\n      field: \"TransactionIdType\",\n      header: \"Transaction: #ID - Type\",\n      sortable: true,\n      filter: true,\n      id: 14\n    }, {\n      field: \"InsuranceCompany\",\n      header: \"Insurer\",\n      sortable: true,\n      filter: true,\n      id: 15\n    }, {\n      field: \"SubAgentId\",\n      header: \"Sub-Agent ID\",\n      sortable: true,\n      filter: true,\n      id: 16\n    }, {\n      field: \"SubAgentName\",\n      header: \"Sub-Agent Name and Company\",\n      sortable: true,\n      filter: true,\n      id: 17\n    }, {\n      field: \"Interest\",\n      header: \"PP Interest\",\n      sortable: true,\n      filter: true,\n      id: 18\n    }, {\n      field: \"PlanAmount\",\n      header: \"Payment Plan Amount\",\n      sortable: true,\n      filter: true,\n      id: 19\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      transactionDate: moment().format('YYYY-MM-DD'),\n      transactionDateError: false,\n      DateTypeList: [],\n      DateType: 'Custom',\n      DateTypeError: false,\n      FromDate: moment().format('YYYY-MM-DD'),\n      ToDate: moment().format('YYYY-MM-DD'),\n      FromDateError: false,\n      ToDateError: false,\n      MONTHList: [],\n      MONTH: '01',\n      MONTHError: false,\n      Year: '2020',\n      YearError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDropDownValues('CASEBOOKDATETYPE', 'DateTypeList', 'StringMapName');\n    this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\n    this.getCashbookDetails();\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getCashbookDetails() {\n    var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\n    var data = {\n      languageId: this.state.LanguageId,\n      transactionDate: this.state.transactionDate,\n      DateType: this.state.DateType,\n      FromDate: this.state.DateType == 'Month' ? startDate : this.state.FromDate,\n      ToDate: this.state.DateType == 'Month' ? moment(startDate).endOf('month').format('YYYY-MM-DD') : this.state.ToDate,\n      loggedInUserId: CommonConfig.loggedInUserId()\n    };\n    api.post('api/getCashbookDetails', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        console.log(\"getCashbookDetails-----i-i-i-i-\", res.data);\n\n        if (res.data[0].length) {\n          for (let i = 0; i < res.data[0].length; i++) {\n            var tempData = res.data[0][i];\n            formattedData.push({\n              TransactionInOut: tempData.TransactionInOut,\n              TransactionId: tempData.TransactionId,\n              PaymentMode: tempData.PaymentMode,\n              PaymentAmount: tempData.PaymentAmount,\n              AdminFeeAmount: tempData.AdminFeeAmount,\n              AgencyCommissionAmount: tempData.AgencyCommissionAmount,\n              YCommissionAmount: tempData.YCommissionAmount,\n              GovtLevyAmount: tempData.GovtLevyAmount,\n              TransactionDate: tempData.TransactionDate == \"0000-00-00 00:00:00\" || tempData.TransactionDate == null || tempData.TransactionDate == \"\" ? '' : moment(tempData.TransactionDate).format(CommonConfig.dateFormat.dateOnly),\n              DateCompleted: tempData.DateCompleted == \"0000-00-00 00:00:00\" || tempData.DateCompleted == null || tempData.DateCompleted == \"\" ? '' : moment(tempData.DateCompleted).format(CommonConfig.dateFormat.dateOnly),\n              ClientName: tempData.ClientName,\n              PolicyNumber: tempData.PolicyNumber,\n              VesselClassName: tempData.VesselClassName,\n              TransactionIdType: CommonConfig.isEmpty(tempData.TransactionId) ? '' : '#' + tempData.TransactionId + ' - ' + tempData.Description,\n              InsuranceCompany: tempData.InsuranceCompany,\n              SubAgentId: tempData.SubAgentId,\n              SubAgentName: tempData.SubAgentName,\n              Interest: tempData.Interest,\n              PlanAmount: tempData.PlanAmount\n            });\n          }\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  selectType(value, type) {\n    if (type === 'DateType') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          DateTypeError: true,\n          DateType: value\n        });\n        this.show('DateType', true, \"DateTypeError\", \"Please select Date Type\");\n      } else {\n        this.setState({\n          DateTypeError: false,\n          DateType: value\n        });\n        this.show('DateType', false, \"DateTypeError\", \"\");\n      }\n    }\n\n    if (type === 'MONTH') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          MONTHError: true,\n          MONTH: value\n        });\n        this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\n      } else {\n        this.setState({\n          MONTHError: false,\n          MONTH: value\n        });\n        this.show('MONTH', false, \"MONTHError\", \"\");\n      }\n    }\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    if (this.state.transactionDateError) {\n      toast.error(\"Please select date.\");\n      return false;\n    } else {\n      this.getCashbookDetails();\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: {\n          width: '200px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, \"Cashbook In/Out\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, \"Select Date Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"DateType\",\n      id: \"DateType\",\n      onChange: e => this.selectType(e.target.value, 'DateType'),\n      value: this.state.DateType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, this.state.DateTypeList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 49\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"DateTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }))), this.state.DateType == 'Month' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 60\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 33\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"MONTH\",\n      id: \"MONTH\",\n      onChange: e => this.selectType(e.target.value, 'MONTH'),\n      value: this.state.MONTH,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, this.state.MONTHList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 49\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"MONTHError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      min: \"1900\",\n      max: \"2099\",\n      id: \"Year\",\n      name: \"Year\",\n      value: this.state.Year,\n      onChange: e => this.handleChange(e, 'Year'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"YearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }))) : null, this.state.DateType == 'Custom' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 60\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }, \"From Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"FromDate\",\n      name: \"FromDate\",\n      value: this.state.FromDate,\n      onChange: e => this.handleChange(e, 'FromDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"FromDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 33\n      }\n    }, \"To Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"ToDate\",\n      name: \"ToDate\",\n      value: this.state.ToDate,\n      onChange: e => this.handleChange(e, 'ToDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"ToDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 33\n      }\n    }))) : null, this.state.DateType == 'Specific Date' ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 67\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 33\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"transactionDate\",\n      name: \"transactionDate\",\n      value: this.state.transactionDate,\n      onChange: e => this.handleChange(e, 'transactionDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"transactionDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }))) : null, /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 29\n      }\n    }, \" Search \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Premium Bordereaux\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(CashbookInOut);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/CashbookInOut.js"],"names":["React","Component","api","moment","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","CashbookInOut","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","undefined","transactionDate","transactionDateError","show","FromDate","ToDate","FromDateError","ToDateError","Year","YearError","columns","field","header","sortable","filter","id","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","format","DateTypeList","DateType","DateTypeError","MONTHList","MONTH","MONTHError","colOptions","col","push","label","export","bind","componentDidMount","getDropDownValues","getCashbookDetails","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","startDate","parseInt","languageId","endOf","loggedInUserId","formattedData","console","log","i","tempData","TransactionInOut","TransactionId","PaymentMode","PaymentAmount","AdminFeeAmount","AgencyCommissionAmount","YCommissionAmount","GovtLevyAmount","TransactionDate","dateFormat","dateOnly","DateCompleted","ClientName","PolicyNumber","VesselClassName","TransactionIdType","isEmpty","Description","InsuranceCompany","SubAgentId","SubAgentName","Interest","PlanAmount","selectType","type","dt","exportCSV","filterData","condition","errorField","message","document","getElementById","className","innerHTML","render","t","map","body","filterMatchMode","width","columnToggleIcon","onColumnToggle","position","marginRight","StringMapKey","StringMapName","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass CashbookInOut extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let columns = [\n              { field: \"TransactionDate\", header: \"Transaction Date\",  sortable: true, filter: true, id: 'TransactionDate' },\n            { field: \"TransactionInOut\", header: \"IN/OUT\",  sortable: true, filter: true, id: 0 },\n            { field: \"TransactionId\", header: \"Transaction ID\",  sortable: true, filter: true, id: 1 },\n            { field: \"PaymentMode\", header: \"Payment Type\",  sortable: true, filter: true, id: 2 },\n            { field: \"PaymentAmount\", header: \"Payment Amount\",  sortable: true, filter: true, id: 3 },\n            { field: \"AdminFeeAmount\", header: \"Payment Admin Fee\",  sortable: true, filter: true, id: 4 },\n            // { field: \"BankCharge\", header: \"Payment Bank Charge - Does not apply\",  sortable: true, filter: true, id: 5 },\n            { field: \"AgencyCommissionAmount\", header: \"Payment Agency Commission\",  sortable: true, filter: true, id: 6 },\n            { field: \"YCommissionAmount\", header: \"Payment Yachtsman Commission\",  sortable: true, filter: true, id: 7 },\n            { field: \"GovtLevyAmount\", header: \"Payment Government Levy\",  sortable: true, filter: true, id: 8 },\n            { field: \"DateCompleted\", header: \"Payment Date Completed\",  sortable: true, filter: true, id: 10 },\n            { field: \"ClientName\", header: \"Client\",  sortable: true, filter: true, id: 11 },\n            { field: \"PolicyNumber\", header: \"Policy ID\",  sortable: true, filter: true, id: 12 },\n            { field: \"VesselClassName\", header: \"Vessel Class\",  sortable: true, filter: true, id: 13 },\n            { field: \"TransactionIdType\", header: \"Transaction: #ID - Type\",  sortable: true, filter: true, id: 14 },\n            { field: \"InsuranceCompany\", header: \"Insurer\",  sortable: true, filter: true, id: 15 },\n            { field: \"SubAgentId\", header: \"Sub-Agent ID\",  sortable: true, filter: true, id: 16 },\n            { field: \"SubAgentName\", header: \"Sub-Agent Name and Company\",  sortable: true, filter: true, id: 17 },\n            { field: \"Interest\", header: \"PP Interest\",  sortable: true, filter: true, id: 18 },\n            { field: \"PlanAmount\", header: \"Payment Plan Amount\",  sortable: true, filter: true, id: 19 }\n        ];\n\n        this.state = {\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\n            cols: columns,\n            arr: [],\n            selectedPage: 0,\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            str: '',\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            globalFilter: null,\n            searchCollapse: false,\n            transactionDate: moment().format('YYYY-MM-DD'),\n            transactionDateError: false,\n            DateTypeList: [],\n            DateType:'Custom',\n            DateTypeError: false,\n            FromDate: moment().format('YYYY-MM-DD'),\n            ToDate: moment().format('YYYY-MM-DD'),\n            FromDateError: false,\n            ToDateError: false,\n            MONTHList: [],\n            MONTH:'01',\n            MONTHError:false,\n            Year:'2020',\n            YearError:false,\n        };\n\n        this.colOptions = [];\n        for (let col of columns) {\n            this.colOptions.push({ label: col.header, value: col });\n        }\n\n        this.export = this.export.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDropDownValues('CASEBOOKDATETYPE', 'DateTypeList', 'StringMapName');\n        this.getDropDownValues('MONTH', 'MONTHList', 'StringMapKey');\n        this.getCashbookDetails();\n    }\n\n    getDropDownValues(stringMapType, setStateName, orderBy) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: orderBy\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getCashbookDetails() {\n        var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\n        var data = {\n            languageId: this.state.LanguageId,\n            transactionDate: this.state.transactionDate,\n            DateType:this.state.DateType,\n            FromDate:this.state.DateType=='Month'?startDate:this.state.FromDate,\n            ToDate:this.state.DateType=='Month'?moment(startDate).endOf('month').format('YYYY-MM-DD'):this.state.ToDate,\n            loggedInUserId: CommonConfig.loggedInUserId()\n        };\n        api.post('api/getCashbookDetails', data).then(res => {\n            if (res.success) {\n                var formattedData = [];\n\n                console.log(\"getCashbookDetails-----i-i-i-i-\",res.data);\n\n                if (res.data[0].length) {\n                    \n                    \n                    for (let i = 0; i < res.data[0].length; i++) {\n                        var tempData = res.data[0][i];\n\n                        formattedData.push({\n                            TransactionInOut: tempData.TransactionInOut,\n                            TransactionId: tempData.TransactionId,\n                            PaymentMode: tempData.PaymentMode,\n                            PaymentAmount: tempData.PaymentAmount,\n                            AdminFeeAmount: tempData.AdminFeeAmount,\n                            AgencyCommissionAmount: tempData.AgencyCommissionAmount,\n                            YCommissionAmount: tempData.YCommissionAmount,\n                            GovtLevyAmount: tempData.GovtLevyAmount,\n                            TransactionDate: (tempData.TransactionDate == \"0000-00-00 00:00:00\" || tempData.TransactionDate == null || tempData.TransactionDate == \"\") ? '' : moment(tempData.TransactionDate).format(CommonConfig.dateFormat.dateOnly),\n                            DateCompleted: (tempData.DateCompleted == \"0000-00-00 00:00:00\" || tempData.DateCompleted == null || tempData.DateCompleted == \"\") ? '' : moment(tempData.DateCompleted).format(CommonConfig.dateFormat.dateOnly),\n                            ClientName: tempData.ClientName,\n                            PolicyNumber: tempData.PolicyNumber,\n                            VesselClassName: tempData.VesselClassName,\n                            TransactionIdType: CommonConfig.isEmpty(tempData.TransactionId) ? '' : ('#' + tempData.TransactionId + ' - ' + tempData.Description),\n                            InsuranceCompany: tempData.InsuranceCompany,\n                            SubAgentId: tempData.SubAgentId,\n                            SubAgentName: tempData.SubAgentName,\n                            Interest: tempData.Interest,\n                            PlanAmount: tempData.PlanAmount\n                        });\n                    }\n                    \n                }\n\n                let firstPage = (formattedData.length) ? '1' : '0';\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n                this.setState({ arr: formattedData, str: str });\n\n            }\n        });\n    }\n\n    selectType(value, type) {\n        if (type === 'DateType') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ DateTypeError: true, DateType: value });\n                this.show('DateType', true, \"DateTypeError\", \"Please select Date Type\");\n            } else {\n                this.setState({ DateTypeError: false, DateType: value });\n                this.show('DateType', false, \"DateTypeError\", \"\");\n\n            }\n        }\n        if (type === 'MONTH') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ MONTHError: true, MONTH: value });\n                this.show('MONTH', true, \"MONTHError\", \"Please select Date Type\");\n            } else {\n                this.setState({ MONTHError: false, MONTH: value });\n                this.show('MONTH', false, \"MONTHError\", \"\");\n\n            }\n        }\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    export() {\n        this.dt.exportCSV();\n    }\n\n    filterData() {\n        if (this.state.transactionDateError) {\n            toast.error(\"Please select date.\");\n            return false;\n        } else {\n            this.getCashbookDetails();\n        }\n    }\n\n    handleChange = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.name === 'transactionDate') {\n\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n                this.setState({ transactionDate: e.target.value, transactionDateError: true });\n                this.show('transactionDate', true, 'transactionDateError', 'Please select Month and Year');\n            } else {\n                this.setState({ transactionDate: e.target.value,FromDate: e.target.value,ToDate: e.target.value, transactionDateError: false });\n                this.show('transactionDate', false, 'transactionDateError', '');\n            }\n        }\n\n        if (e.target.name === 'FromDate') {\n\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n                this.setState({ FromDate: e.target.value, FromDateError: true });\n                this.show('FromDate', true, 'FromDateError', 'Please select From date');\n            } else {\n                this.setState({ FromDate: e.target.value, FromDateError: false });\n                this.show('FromDate', false, 'FromDateError', '');\n            }\n        }\n\n        if (e.target.name === 'ToDate') {\n\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n                this.setState({ ToDate: e.target.value, ToDateError: true });\n                this.show('ToDate', true, 'ToDateError', 'Please select To Date');\n            } else {\n                this.setState({ ToDate: e.target.value, ToDateError: false });\n                this.show('ToDate', false, 'ToDateError', '');\n            }\n        }\n        if (e.target.name === 'Year') {\n\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n                this.setState({ Year: e.target.value, YearError: true });\n                this.show('Year', true, 'YearError', 'Please Enter Year');\n            } else {\n                this.setState({ Year: e.target.value, YearError: false });\n                this.show('Year', false, 'YearError', '');\n            }\n        }\n\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control is-invalid\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    render() {\n        const { t } = this.props;\n        var header = null;\n\n        let columns = this.state.cols.map((col, i) => {\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={{ width: '200px' }}\n            />;\n        });\n        return (\n            <div>\n                <div className=\"basic-header\">\n                    <h1>Cashbook In/Out</h1>\n                    <div className=\"header-right-option\">\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\n                        />\n\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\n                    </div>\n                </div>\n\n                <div>\n                    <Row>\n                        <Col md='3'>\n                            <div className=\"input-box\">\n                                <label>Select Date Type</label>\n                                <Input type=\"select\" name=\"DateType\" id=\"DateType\" onChange={(e) => this.selectType(e.target.value, 'DateType')} value={this.state.DateType}>\n                                    {this.state.DateTypeList.map((type, i) => {\n                                        return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                    })\n                                    }\n                                </Input>\n                                <em id=\"DateTypeError\" className=\"error invalid-feedback\"></em>\n                            </div>\n                        </Col>\n                         {this.state.DateType == 'Month' ?(<Col md='3'>\n                            <div className=\"input-box\">\n                                <label>Month</label>\n                                <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\n                                    {this.state.MONTHList.map((type, i) => {\n                                        return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                    })\n                                    }\n                                </Input>\n                                <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\n                            </div>\n                            <div className=\"input-box\">\n                                <label>Year</label>\n                                <Input type=\"number\" min=\"1900\" max=\"2099\" id=\"Year\" name=\"Year\"\n                                    value={this.state.Year}\n                                    onChange={(e) => this.handleChange(e, 'Year')}\n                                ></Input>\n\n                                <em id=\"YearError\" className=\"error invalid-feedback\"></em>\n                            </div>\n                        </Col>):null} \n                        {this.state.DateType == 'Custom' ?(<Col md='3'>\n                            <div className=\"input-box\">\n                                <label>From Date</label>\n                                <Input type=\"date\" id=\"FromDate\" name=\"FromDate\"\n                                    value={this.state.FromDate}\n                                    onChange={(e) => this.handleChange(e, 'FromDate')}\n                                ></Input>\n\n                                <em id=\"FromDateError\" className=\"error invalid-feedback\"></em>\n                            </div>\n                            <div className=\"input-box\">\n                                <label>To Date</label>\n                                <Input type=\"date\" id=\"ToDate\" name=\"ToDate\"\n                                    value={this.state.ToDate}\n                                    onChange={(e) => this.handleChange(e, 'ToDate')}\n                                ></Input>\n\n                                <em id=\"ToDateError\" className=\"error invalid-feedback\"></em>\n                            </div>\n                        </Col>):null} \n                        {this.state.DateType == 'Specific Date' ?(<Col md='3'>\n                            <div className=\"input-box\">\n                                <label>Date</label>\n                                <Input type=\"date\" id=\"transactionDate\" name=\"transactionDate\"\n                                    value={this.state.transactionDate}\n                                    onChange={(e) => this.handleChange(e, 'transactionDate')}\n                                ></Input>\n\n                                <em id=\"transactionDateError\" className=\"error invalid-feedback\"></em>\n                            </div>\n                        </Col>):null} \n                        <Col md='5'>\n                            <div>&nbsp;</div>\n                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\n                        </Col>\n                    </Row>\n                </div>\n\n                <div className=\"table-custom\">\n                    {/* paginator={false}\n                    rows={this.state.rowsPerPage}\n                    first={this.state.selectedPage}\n                    onPage={(e) => this.getPageString(e)}\n                    paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\" */}\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr}\n                         header={header} totalRecords={this.state.arr.length} exportFilename=\"Premium Bordereaux\"\n                        currentPageReportTemplate={this.state.str}\n                        scrollable={true}\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\"\n                        >\n                        {columns}\n                    </DataTable>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default withTranslation()(CashbookInOut);\n"]},"metadata":{},"sourceType":"module"}