{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/NoClaimBonus/NoClaimBonusHistory.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN, InputGroup } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport { CommonConfig } from '../../../utils/constants';\nimport moment from 'moment';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport APIConstant from '../../../utils/constants';\n\nclass NoClaimBonusHistory extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      t\n    } = props;\n    let columns = [{\n      field: \"years\",\n      header: \"NoofYears\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"discount\",\n      header: \"DiscountRate\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"effectiveDate\",\n      header: \"Effective Date\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    } // { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 2 }\n    ];\n    this.state = {\n      noClaimBonusList: [],\n      cols: columns,\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      heading: 'Add',\n      buttonName: 'Save',\n      toastName: 'Saved',\n      rowData: '',\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      years: '',\n      discount: '',\n      primary: false,\n      toggleModal: false,\n      yearsError: true,\n      discountError: true,\n      NoClaimBonusId: '',\n      effectivedate: 'Effective Date',\n      effectiveDate: moment().format('YYYY-MM-DD'),\n      effectiveDateError: true\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this); // this.actionTemplate = this.actionTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.getNoClaimBonusHistory(this.props.match.params.Id);\n    }\n  }\n\n  getNoClaimBonusHistory(Id) {\n    var dataToSent = {\n      NoClaimBonusId: Id\n    };\n    api.post('api/getNoClaimBonusHistory', dataToSent).then(res => {\n      console.log('getNoClaimBonusHistory', res);\n      var formattedArr = [];\n\n      for (var i = 0; i < res.data.length; i++) {\n        formattedArr.push({\n          NoClaimBonusId: res.data[i].NoClaimBonusId,\n          years: res.data[i].YearCount,\n          discount: res.data[i].DiscountRate,\n          effectiveDate: CommonConfig.isEmpty(res.data[i].StartDate) ? '' : moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker)\n        });\n      }\n\n      console.log('formattedArr', formattedArr);\n      this.setState({\n        noClaimBonusList: formattedArr\n      });\n    });\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Vessel Class History\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.noClaimBonusList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.noClaimBonusList.length,\n      exportFilename: t(\"masterNoClaimBonus:NoClaimBonusList\"),\n      currentPageReportTemplate: this.state.str,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: t(\"translation:NoRecordsMsg\"),\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(NoClaimBonusHistory);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/NoClaimBonus/NoClaimBonusHistory.js"],"names":["React","Component","DataTable","Column","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","InputGroup","api","CommonConfig","moment","useTranslation","withTranslation","Trans","APIConstant","NoClaimBonusHistory","constructor","props","t","columns","field","header","sortable","filter","filterMatchMode","id","state","noClaimBonusList","cols","LanguageId","i18n","language","heading","buttonName","toastName","rowData","selectedPage","rowsPerPageOptions","dataTableConfig","str","rowsPerPage","globalFilter","years","discount","primary","toggleModal","yearsError","discountError","NoClaimBonusId","effectivedate","effectiveDate","format","effectiveDateError","colOptions","col","push","label","value","onColumnToggle","bind","componentDidMount","match","params","Object","keys","length","getNoClaimBonusHistory","Id","dataToSent","post","then","res","console","log","formattedArr","i","data","YearCount","DiscountRate","isEmpty","StartDate","dateFormat","forDatePicker","setState","event","valueInOrder","sort","x","y","show","condition","document","getElementById","className","render","map","body","el","dt","e","getPageString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN, InputGroup } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport moment from 'moment';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport APIConstant from '../../../utils/constants';\r\n\r\nclass NoClaimBonusHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { t } = props;\r\n        let columns = [\r\n            { field: \"years\", header: \"NoofYears\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"discount\", header: \"DiscountRate\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"effectiveDate\", header: \"Effective Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            // { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 2 }\r\n        ];\r\n\r\n        this.state = {\r\n            noClaimBonusList: [],\r\n            cols: columns,\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            heading: 'Add',\r\n            buttonName: 'Save',\r\n            toastName: 'Saved',\r\n            rowData: '',\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            years: '',\r\n            discount: '',\r\n            primary: false,\r\n            toggleModal: false,\r\n            yearsError: true,\r\n            discountError: true,\r\n            NoClaimBonusId: '',\r\n            effectivedate: 'Effective Date',\r\n            effectiveDate: moment().format('YYYY-MM-DD'),\r\n            effectiveDateError: true,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        // this.actionTemplate = this.actionTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n            this.getNoClaimBonusHistory(this.props.match.params.Id)\r\n        }\r\n    }\r\n\r\n    getNoClaimBonusHistory(Id) {\r\n        var dataToSent = {\r\n            NoClaimBonusId: Id,\r\n        }\r\n        api.post('api/getNoClaimBonusHistory', dataToSent).then(res => {\r\n            console.log('getNoClaimBonusHistory', res);\r\n            var formattedArr = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                formattedArr.push({\r\n                    NoClaimBonusId: res.data[i].NoClaimBonusId,\r\n                    years: res.data[i].YearCount,\r\n                    discount: res.data[i].DiscountRate,\r\n                    effectiveDate: CommonConfig.isEmpty(res.data[i].StartDate) ? '' : moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker),\r\n                });\r\n            }\r\n            console.log('formattedArr',formattedArr);            \r\n            this.setState({ noClaimBonusList: formattedArr })\r\n        })\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    show(field, condition) {\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Vessel Class History</h1>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.noClaimBonusList}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.noClaimBonusList.length}\r\n                        exportFilename={t(\"masterNoClaimBonus:NoClaimBonusList\")}\r\n                        currentPageReportTemplate={this.state.str}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage={t(\"translation:NoRecordsMsg\")}\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollable={true}\r\n                        scrollHeight=\"340px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NoClaimBonusHistory);"]},"metadata":{},"sourceType":"module"}