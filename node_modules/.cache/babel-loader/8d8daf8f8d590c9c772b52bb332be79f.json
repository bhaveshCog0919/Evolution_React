{"ast":null,"code":"import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nlet fileArray = ['translation', 'contactDetails', 'ExternalNotes', 'InternalNotes', 'Documents', 'Task', 'policyVessel', 'policyUnderwriting', 'policyGeneral', 'policyEndorsement', 'policyMooring', 'policyAddOnCoverage', 'policyAccount', 'policyTimeline', 'policyDetails', 'masterVesselClass', 'masterVesselType', 'masterMooringZone', 'masterMooringGuide', 'masterRiskQuestion', 'masterBinder', 'masterAssumption', 'masterEndorsement', 'masterLevy', 'masterNoClaimBonus', 'contactTask', 'policyList', 'policyDetails', 'contactNotes', 'generateQuote'];\ni18n // load translation using xhr -> see /public/locales\n// learn more: https://github.com/i18next/i18next-xhr-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  ns: fileArray,\n  defaultNS: 'translation',\n  fallbackLng: 'en',\n  debug: false,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/utils/i18n.js"],"names":["i18n","Backend","LanguageDetector","initReactI18next","fileArray","use","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,IAAIC,SAAS,GAAG,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,eAAlC,EAAmD,eAAnD,EAAoE,WAApE,EAAiF,MAAjF,EAAyF,cAAzF,EAAyG,oBAAzG,EAA+H,eAA/H,EAAiJ,mBAAjJ,EAAsK,eAAtK,EAAuL,qBAAvL,EAA8M,eAA9M,EAA+N,gBAA/N,EAAiP,eAAjP,EAAkQ,mBAAlQ,EAAuR,kBAAvR,EAA2S,mBAA3S,EAAgU,oBAAhU,EAAsV,oBAAtV,EAA4W,cAA5W,EAA4X,kBAA5X,EAAgZ,mBAAhZ,EAAqa,YAAra,EAAmb,oBAAnb,EAAyc,aAAzc,EAAwd,YAAxd,EAAue,eAAve,EAAwf,cAAxf,EAAygB,eAAzgB,CAAhB;AAEAJ,IAAI,CACF;AACA;AAFE,CAGDK,GAHH,CAGOJ,OAHP,EAIE;AACA;AALF,CAMGI,GANH,CAMOH,gBANP,EAOE;AAPF,CAQGG,GARH,CAQOF,gBARP,EASE;AACA;AAVF,CAWGG,IAXH,CAWQ;AACJC,EAAAA,EAAE,EAAEH,SADA;AAEJI,EAAAA,SAAS,EAAE,aAFP;AAIJC,EAAAA,WAAW,EAAE,IAJT;AAKJC,EAAAA,KAAK,EAAE,KALH;AAOJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AAPX,CAXR;AAuBA,eAAeZ,IAAf","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nlet fileArray = ['translation', 'contactDetails', 'ExternalNotes', 'InternalNotes', 'Documents', 'Task', 'policyVessel', 'policyUnderwriting', 'policyGeneral',  'policyEndorsement', 'policyMooring', 'policyAddOnCoverage', 'policyAccount', 'policyTimeline', 'policyDetails', 'masterVesselClass', 'masterVesselType', 'masterMooringZone', 'masterMooringGuide', 'masterRiskQuestion', 'masterBinder', 'masterAssumption', 'masterEndorsement', 'masterLevy', 'masterNoClaimBonus', 'contactTask', 'policyList' , 'policyDetails', 'contactNotes' , 'generateQuote']\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: fileArray,\n    defaultNS: 'translation',\n\n    fallbackLng: 'en',\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}