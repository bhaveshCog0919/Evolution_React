{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/Settlement.js\";\nimport React, { Component } from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { CommonConfig } from '../../../utils/constants';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport moment from 'moment';\n\nclass Settlement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.settlementArray.length ? l : this.state.settlementArray.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.settlementArray.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    let columns = [{\n      field: \"SettlementID\",\n      header: \"Settlement ID\",\n      sortable: true,\n      filter: true,\n      id: 0\n    }, {\n      field: \"Type\",\n      header: \"Type\",\n      sortable: true,\n      filter: true,\n      id: 1\n    }, {\n      field: \"Policy No\",\n      header: \"Policy No\",\n      sortable: true,\n      filter: true,\n      id: 2\n    }, {\n      field: \"Status\",\n      header: \"Status\",\n      sortable: true,\n      filter: true,\n      id: 3\n    }, {\n      field: \"Name/Company\",\n      header: \"Name/Company\",\n      sortable: true,\n      filter: true,\n      id: 4\n    }, {\n      field: \"Currency\",\n      header: \"Currency\",\n      sortable: true,\n      filter: true,\n      id: 5\n    }, {\n      field: \"Total\",\n      header: \"Total\",\n      sortable: true,\n      filter: true,\n      id: 6\n    }, {\n      field: \"Outstanding\",\n      header: \"Outstanding\",\n      sortable: true,\n      filter: true,\n      id: 7\n    }, {\n      field: \"Created\",\n      header: \"Created\",\n      sortable: true,\n      filter: true,\n      id: 8\n    }, {\n      field: \"LastUpdated\",\n      header: \"Last Updated\",\n      sortable: true,\n      filter: true,\n      id: 9\n    }, {\n      field: \"CreatedBy\",\n      header: \"Created By\",\n      sortable: true,\n      filter: true,\n      id: 10\n    }, {\n      field: \"UpdatedBy\",\n      header: \"Updated By\",\n      sortable: true,\n      filter: true,\n      id: 11\n    }];\n    this.state = {\n      selectedLanguage: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      settlementArray: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-warning\",\n      onClick: () => this.edit(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      tooltip: \"Delete\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    var splitData = this.props.location.pathname.split(\"/\"); // if (splitData[3] !== undefined) {\n\n    if (!CommonConfig.isEmpty(splitData[3])) {\n      this.setState({\n        BinderId: splitData[3]\n      });\n      this.getSettlements(splitData[3]);\n    } // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n    //     this.setState({ BinderId: this.props.match.params.Id })\n    //     this.getSettlements(this.props.match.params.Id)\n    // }\n\n  }\n\n  getSettlements(BinderId) {\n    let data = {\n      \"BinderId\": BinderId,\n      \"UserId\": CommonConfig.loggedInUserId()\n    };\n    api.post(APIConstant.path.getSettlement, data).then(res => {\n      console.log(res.data[0]);\n\n      if (res.success) {\n        var settlementData = res.data[0];\n        this.setState({\n          settlementArray: settlementData.map(obj => {\n            console.log(obj);\n            return {\n              \"SettlementID\": obj.BinderSettelmentId,\n              \"Type\": obj.SettlementType,\n              \"Policy No\": obj.PolicyNumber,\n              \"Status\": obj.Status,\n              \"Name/Company\": obj.Name,\n              \"Currency\": obj.Currency,\n              \"Total\": obj.TotalAmount,\n              \"Outstanding\": obj.Outstanding,\n              \"Created\": CommonConfig.isEmpty(obj.CreatedOn) ? '' : moment(obj.CreatedOn).format('YYYY-MM-DD'),\n              \"LastUpdated\": CommonConfig.isEmpty(obj.UpdatedOn) ? '' : moment(obj.UpdatedOn).format('YYYY-MM-DD'),\n              \"CreatedBy\": obj.CreatedByName,\n              \"UpdatedBy\": obj.UpdatedByName\n            };\n          })\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \"Settlement\"), \"/\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.settlementArray,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.settlementArray.length,\n      exportFilename: \"Settlement List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: this.state.paginatorTemplate,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(Settlement);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/Settlement.js"],"names":["React","Component","Col","Row","Modal","ModalBody","ModalHeader","ModalFooter","Button","BTN","Input","withTranslation","DataTable","Column","MultiSelect","InputText","CommonConfig","api","APIConstant","moment","Settlement","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","settlementArray","length","str","setState","selectedPage","rowsPerPage","columns","field","header","sortable","filter","id","selectedLanguage","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","paginatorTemplate","colOptions","col","push","label","value","onColumnToggle","bind","export","event","valueInOrder","sort","x","y","dt","exportCSV","actionTemplate","rowData","column","edit","marginRight","position","componentWillMount","componentDidMount","splitData","location","pathname","split","isEmpty","BinderId","getSettlements","data","loggedInUserId","post","path","getSettlement","then","res","console","log","success","settlementData","map","obj","BinderSettelmentId","SettlementType","PolicyNumber","Status","Name","Currency","TotalAmount","Outstanding","CreatedOn","format","UpdatedOn","CreatedByName","UpdatedByName","catch","err","render","i","body","columnToggleIcon","width","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport api from '../../../utils/apiClient';\r\nimport APIConstant from '../../../utils/constants';\r\nimport moment from 'moment';\r\n\r\nclass Settlement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"SettlementID\", header: \"Settlement ID\", sortable: true, filter: true, id: 0 },\r\n            { field: \"Type\", header: \"Type\", sortable: true, filter: true, id: 1 },\r\n            { field: \"Policy No\", header: \"Policy No\", sortable: true, filter: true, id: 2 },\r\n            { field: \"Status\", header: \"Status\", sortable: true, filter: true, id: 3 },\r\n            { field: \"Name/Company\", header: \"Name/Company\", sortable: true, filter: true, id: 4 },\r\n            { field: \"Currency\", header: \"Currency\", sortable: true, filter: true, id: 5 },\r\n            { field: \"Total\", header: \"Total\", sortable: true, filter: true, id: 6 },\r\n            { field: \"Outstanding\", header: \"Outstanding\", sortable: true, filter: true, id: 7 },\r\n            { field: \"Created\", header: \"Created\", sortable: true, filter: true, id: 8 },\r\n            { field: \"LastUpdated\", header: \"Last Updated\", sortable: true, filter: true, id: 9 },\r\n            { field: \"CreatedBy\", header: \"Created By\", sortable: true, filter: true, id: 10 },\r\n            { field: \"UpdatedBy\", header: \"Updated By\", sortable: true, filter: true, id: 11 }\r\n        ];\r\n\r\n        this.state = {\r\n            selectedLanguage: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            settlementArray: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.settlementArray.length) ? l : this.state.settlementArray.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.settlementArray.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.edit(rowData)}\r\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\r\n            </Button>\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }}></Button>\r\n        </div>;\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        var splitData = this.props.location.pathname.split(\"/\");\r\n        // if (splitData[3] !== undefined) {\r\n        if (!CommonConfig.isEmpty(splitData[3])) {\r\n            this.setState({ BinderId: splitData[3] })\r\n            this.getSettlements(splitData[3])\r\n        } \r\n        // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n        //     this.setState({ BinderId: this.props.match.params.Id })\r\n        //     this.getSettlements(this.props.match.params.Id)\r\n        // }\r\n    }\r\n\r\n    getSettlements(BinderId) {\r\n        let data = {\r\n            \"BinderId\": BinderId,\r\n            \"UserId\": CommonConfig.loggedInUserId(),\r\n        }\r\n        api.post(APIConstant.path.getSettlement, data).then(res => {\r\n            console.log(res.data[0]);\r\n\r\n            if (res.success) {\r\n                var settlementData = res.data[0]\r\n                this.setState({\r\n                    settlementArray: settlementData.map((obj) => {\r\n                        console.log(obj);\r\n                        return {\r\n                            \"SettlementID\": obj.BinderSettelmentId,\r\n                            \"Type\": obj.SettlementType,\r\n                            \"Policy No\": obj.PolicyNumber,\r\n                            \"Status\": obj.Status,\r\n                            \"Name/Company\": obj.Name,\r\n                            \"Currency\": obj.Currency,\r\n                            \"Total\": obj.TotalAmount,\r\n                            \"Outstanding\": obj.Outstanding,\r\n                            \"Created\": CommonConfig.isEmpty(obj.CreatedOn) ? '' : moment(obj.CreatedOn).format('YYYY-MM-DD'),\r\n                            \"LastUpdated\": CommonConfig.isEmpty(obj.UpdatedOn) ? '' : moment(obj.UpdatedOn).format('YYYY-MM-DD'),\r\n                            \"CreatedBy\": obj.CreatedByName,\r\n                            \"UpdatedBy\": obj.UpdatedByName\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Settlement</h1>/\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.settlementArray} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.settlementArray.length} exportFilename=\"Settlement List\"\r\n                        currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\r\n                        paginatorTemplate={this.state.paginatorTemplate}\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \r\n                    >\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Settlement);"]},"metadata":{},"sourceType":"module"}