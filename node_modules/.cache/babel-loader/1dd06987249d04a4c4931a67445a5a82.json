{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/Coverage.js\";\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Card, CardBody, Container, Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass Coverage extends Component {\n  constructor() {\n    super();\n\n    this.Save = CoverageAlready => {\n      let data = {\n        CoverageAlreadyList: CoverageAlready,\n        PolicyId: this.state.PolicyId\n      };\n      api.post('api/addPolicyCovarage', data).then(res => {\n        if (res.data.success) {\n          toast.success(res.data.message);\n          this.getPolicyAddedCoverage();\n          this.toggleSave();\n        } else {}\n      }).catch(err => {});\n    };\n\n    this.toggleDelete = () => {\n      this.setState({\n        toggleDeleteModal: false,\n        tempdata: []\n      });\n    };\n\n    this.toggleSave = () => {\n      this.setState({\n        toggleSaveModal: false,\n        tempdata: []\n      });\n    };\n\n    this.state = {\n      vesselTypeId: '',\n      CoverageAvailable: [],\n      CoverageAlreadyList: [],\n      toggleSaveModal: false,\n      toggleDeleteModal: false,\n      tempdata: [],\n      CurrencySymbol: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.setState({\n        policyStatus: this.props.status,\n        CurrencySymbol: this.props.CurrencySymbol\n      });\n    }\n\n    console.log(\"componentDidMount\", this.props.CurrencySymbol); // this.getAddOnCoverage();\n\n    this.getPolicyVesselType(this.props.match.params.id);\n    this.setState({\n      PolicyId: this.props.match.params.id\n    });\n  }\n\n  getPolicyVesselType(policyId) {\n    const data = {\n      policyId: policyId\n    };\n    api.post('api/getPolicyHolderDetails', data).then(res => {\n      if (res.success) {\n        this.setState({\n          vesselTypeId: res.data[0][0].VesselTypeId\n        });\n        this.getPolicyAddOnCoverage();\n      } else {}\n    }).catch(err => {});\n  }\n\n  getPolicyAddOnCoverage() {\n    let data = {\n      VesselTypeId: this.state.vesselTypeId\n    };\n    api.post('api/getPolicyAddOnCoverage', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            id: [i + 1],\n            AddOnCoverageId: res.data[i].AddOnCoverageId,\n            policyOption: res.data[i].AddOnCoverageName,\n            premium: res.data[i].AddOnCoveragePremiumAmount,\n            feeAmount: res.data[i].AddOnCoverageFeeAmount,\n            isAdded: false\n          });\n        }\n\n        this.setState({\n          CoverageAvailable: formattedData\n        });\n        this.getPolicyAddedCoverage();\n      } else {}\n    }).catch(err => {});\n  }\n\n  getPolicyAddedCoverage() {\n    let data = {\n      PolicyId: this.state.PolicyId\n    };\n    api.post('api/getPolicyAddedCoverage', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n            AddOnCoverageId: res.data[i].AddOnCoverageId,\n            policyOption: res.data[i].AddOnCoverageName,\n            premium: res.data[i].AddOnCoveragePremiumAmount,\n            feeAmount: res.data[i].AddOnCoverageFeeAmount,\n            IsDefault: res.data[i].IsDefault.data[0],\n            isAdded: true\n          });\n          let CoverageAvailableArray = this.state.CoverageAvailable;\n          let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n\n          if (index2 != -1) {\n            CoverageAvailableArray[index2].isAdded = true;\n            this.setState({\n              CoverageAvailable: CoverageAvailableArray\n            });\n          }\n        }\n\n        this.setState({\n          CoverageAlreadyList: formattedData\n        });\n      } else {}\n    }).catch(err => {});\n  } // getAddOnCoverage() {\n  //    api.post('api/getAddOnCoverage', {}).then(res => {\n  //       if (res.success) {\n  //          var formattedData = [];\n  //          for (var i = 0; i < res.data.length; i++) {\n  //             formattedData.push({\n  //                id: [i + 1],\n  //                AddOnCoverageId: res.data[i].AddOnCoverageId,\n  //                policyOption: res.data[i].AddOnCoverageName,\n  //                premium: res.data[i].AddOnCoveragePremiumAmount,\n  //                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n  //                isAdded: false,\n  //             })\n  //          }\n  //          this.setState({ CoverageAvailable: formattedData });\n  //          this.getAddedCoverage();\n  //       } else {\n  //       }\n  //    }).catch(err => {\n  //    });\n  // }\n  // getAddedCoverage() {\n  //    let data = { PolicyId: this.props.match.params.id }; //'bef076c0-2ea5-11ea-a563-fa163eb9754c' }\n  //    api.post('api/getAddedCoverage', data).then(res => {\n  //       if (res.success) {\n  //          var formattedData = [];\n  //          for (var i = 0; i < res.data.length; i++) {\n  //             formattedData.push({\n  //                PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n  //                AddOnCoverageId: res.data[i].AddOnCoverageId,\n  //                policyOption: res.data[i].AddOnCoverageName,\n  //                premium: res.data[i].AddOnCoveragePremiumAmount,\n  //                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n  //                // IsDefault: res.data[i].IsDefault.data[0],\n  //                isAdded: true,\n  //             })\n  //             let CoverageAvailableArray = this.state.CoverageAvailable;\n  //             let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n  //             CoverageAvailableArray[index2].isAdded = true;\n  //             this.setState({ CoverageAvailable: CoverageAvailableArray });\n  //          }\n  //          this.setState({ CoverageAlreadyList: formattedData });\n  //       } else {\n  //       }\n  //    }).catch(err => {\n  //    });\n  // }\n\n\n  addToListModal(data) {\n    this.setState({\n      tempdata: data\n    });\n    this.saveModalOpen();\n  }\n\n  addToList(data, field) {\n    let CoverageAlreadyArray = this.state.CoverageAlreadyList;\n    let index1 = CoverageAlreadyArray.findIndex(x => x.policyOption === data.policyOption);\n\n    if (index1 > -1) {\n      CoverageAlreadyArray[index1].isAdded = true;\n      this.setState({\n        CoverageAlreadyList: CoverageAlreadyArray\n      });\n    } else {\n      var CoverageAlready = [{\n        PolicyAddOnCoverageId: null,\n        AddOnCoverageId: data.AddOnCoverageId,\n        policyOption: data.policyOption,\n        premium: data.premium,\n        feeAmount: data.FeeAmount,\n        isAdded: true\n      }];\n      this.setState({\n        CoverageAlreadyList: this.state.CoverageAlreadyList.concat(CoverageAlready)\n      });\n    }\n\n    let CoverageAvailableArray = this.state.CoverageAvailable;\n    let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n    CoverageAvailableArray[index2].isAdded = true;\n    this.setState({\n      CoverageAvailable: CoverageAvailableArray\n    });\n    this.Save(CoverageAlready);\n  }\n\n  deleteCoverageModal(data) {\n    this.setState({\n      tempdata: data\n    });\n    this.deleteModalOpen();\n  }\n\n  deleteCoverage(data) {\n    if (data.PolicyAddOnCoverageId) {\n      let apiData = {\n        PolicyAddOnCoverageId: data.PolicyAddOnCoverageId\n      };\n      api.post('api/deleteAddedCoverage', {\n        apiData\n      }).then(res => {\n        if (res.success) {// toast.success('Coverage Deleted Successfully');\n        } else {}\n      }).catch(err => {});\n    }\n\n    let CoverageAvailableArray = this.state.CoverageAvailable;\n    let index1 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n    CoverageAvailableArray[index1].isAdded = false;\n    let listIndex = this.state.CoverageAlreadyList.findIndex(x => x.policyOption === data.policyOption);\n    this.state.CoverageAlreadyList.splice(listIndex, 1);\n    this.setState({\n      CoverageAvailable: CoverageAvailableArray\n    });\n    toast.success('Coverage Deleted Successfully');\n    this.setState({\n      tempdata: data\n    });\n    this.toggleDelete();\n  }\n\n  deleteModalOpen() {\n    this.setState({\n      toggleDeleteModal: !this.state.toggleDeleteModal\n    });\n  }\n\n  saveModalOpen() {\n    this.setState({\n      toggleSaveModal: !this.state.toggleSaveModal\n    });\n  }\n\n  goBack() {\n    this.props.history.push('/PolicyDetails');\n  }\n\n  render() {\n    const {\n      t,\n      i18n\n    } = this.props;\n    const SaveButton = t(\"buttons.Save\");\n    const AddButton = t(\"buttons.Add\");\n    const EditButton = t(\"buttons.Edit\");\n    const DeleteButton = t(\"buttons.Delete\");\n    const CloseButton = t(\"buttons.Close\");\n    const BackButton = t(\"buttons.Back\");\n    const UpdateButton = t(\"buttons.Update\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 22\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.title\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.PolicyOption\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.Premium\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 106\n      }\n    }), \")\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 108\n      }\n    }), \")\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.Total\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 104\n      }\n    }), \")\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.Action\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 43\n      }\n    }, this.state.CoverageAlreadyList.map((ca, i) => {\n      if (ca.isAdded) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 55\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 58\n          }\n        }, ca.policyOption), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 58\n          }\n        }, ca.premium), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 58\n          }\n        }, ca.feeAmount), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 58\n          }\n        }, Number(ca.premium) + Number(ca.feeAmount)), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 58\n          }\n        }, ca.IsDefault == 0 ? /*#__PURE__*/React.createElement(Button, {\n          title: DeleteButton,\n          onClick: () => this.deleteCoverageModal(ca, 'CoverageAlready'),\n          style: {\n            marginLeft: 5\n          },\n          color: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 64\n          }\n        })) : 'Default'));\n      }\n    }))))))))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 22\n      }\n    }, t(\"policyAddOnCoverage:AvailableToPurchase.title\")), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AvailableToPurchase.PolicyOption\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AvailableToPurchase.Premium\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 109\n      }\n    }), \")\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 108\n      }\n    }), \")\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AlreadyPurchased.Total\"), \"(\", /*#__PURE__*/React.createElement(\"i\", {\n      className: this.props.CurrencySymbol,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 104\n      }\n    }), \")\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 49\n      }\n    }, t(\"policyAddOnCoverage:AvailableToPurchase.Action\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 43\n      }\n    }, this.state.CoverageAvailable.map((ca, i) => {\n      if (!ca.isAdded) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 55\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 58\n          }\n        }, ca.policyOption), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 58\n          }\n        }, ca.premium), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 58\n          }\n        }, ca.feeAmount), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 58\n          }\n        }, Number(ca.premium) + Number(ca.feeAmount)), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 58\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          title: AddButton,\n          color: \"primary\",\n          onClick: () => this.addToListModal(ca, 'CoverageAvailable'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-plus\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 64\n          }\n        }))));\n      }\n    })))))))))))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleSaveModal,\n      toggle: this.toggleSave,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 16\n      }\n    }, t(\"policyAddOnCoverage:ConformationSaveModal.Header\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 16\n      }\n    }, \"Are you sure you want to Add \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 48\n      }\n    }, this.state.tempdata.policyOption), \" Coverage?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"primary\",\n      onClick: () => this.addToList(this.state.tempdata),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }, t(\"policyAddOnCoverage:ConformationSaveModal.Approval\")), /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: this.toggleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, t(\"policyAddOnCoverage:ConformationSaveModal.Reject\")))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleDeleteModal,\n      toggle: this.toggleDelete,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 16\n      }\n    }, t(\"policyAddOnCoverage:ConformationDeleteModal.Header\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 16\n      }\n    }, \"Do you want to delete \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 41\n      }\n    }, this.state.tempdata.policyOption), \" Coverage?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"primary\",\n      onClick: () => this.deleteCoverage(this.state.tempdata),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }, t(\"policyAddOnCoverage:ConformationDeleteModal.Approval\")), /*#__PURE__*/React.createElement(\"button\", {\n      color: \"secondary\",\n      onClick: this.toggleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    }, t(\"policyAddOnCoverage:ConformationDeleteModal.Reject\")))));\n  }\n\n}\n\nexport default withTranslation()(Coverage);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/Coverage.js"],"names":["React","Component","toast","Card","CardBody","Container","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","Button","api","useTranslation","withTranslation","Trans","Coverage","constructor","Save","CoverageAlready","data","CoverageAlreadyList","PolicyId","state","post","then","res","success","message","getPolicyAddedCoverage","toggleSave","catch","err","toggleDelete","setState","toggleDeleteModal","tempdata","toggleSaveModal","vesselTypeId","CoverageAvailable","CurrencySymbol","componentDidMount","props","match","params","Object","keys","length","policyStatus","status","console","log","getPolicyVesselType","id","policyId","VesselTypeId","getPolicyAddOnCoverage","formattedData","i","push","AddOnCoverageId","policyOption","AddOnCoverageName","premium","AddOnCoveragePremiumAmount","feeAmount","AddOnCoverageFeeAmount","isAdded","PolicyAddOnCoverageId","IsDefault","CoverageAvailableArray","index2","findIndex","x","addToListModal","saveModalOpen","addToList","field","CoverageAlreadyArray","index1","FeeAmount","concat","deleteCoverageModal","deleteModalOpen","deleteCoverage","apiData","listIndex","splice","goBack","history","render","t","i18n","SaveButton","AddButton","EditButton","DeleteButton","CloseButton","BackButton","UpdateButton","marginTop","width","map","ca","textAlign","Number","marginLeft","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Card, CardBody, Container, Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass Coverage extends Component {\n   constructor() {\n      super();\n      this.state = {\n         vesselTypeId: '',\n         CoverageAvailable: [],\n         CoverageAlreadyList: [],\n         toggleSaveModal: false,\n         toggleDeleteModal: false,\n         tempdata: [],\n         CurrencySymbol:'',\n      }\n   }\n\n   componentDidMount() {\n      if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n         this.setState({ policyStatus: this.props.status, CurrencySymbol: this.props.CurrencySymbol });\n      }\n      console.log(\"componentDidMount\", this.props.CurrencySymbol);\n      // this.getAddOnCoverage();\n      this.getPolicyVesselType(this.props.match.params.id);\n      this.setState({ PolicyId: this.props.match.params.id })\n   }\n\n   getPolicyVesselType(policyId) {\n      const data = { policyId: policyId };\n      api.post('api/getPolicyHolderDetails', data).then(res => {\n         if (res.success) {\n            this.setState({ vesselTypeId: res.data[0][0].VesselTypeId, });\n            this.getPolicyAddOnCoverage();\n         } else {\n         }\n      }).catch(err => {\n\n      });\n   }\n\n   getPolicyAddOnCoverage() {\n      let data = {\n         VesselTypeId: this.state.vesselTypeId\n      }\n\n      api.post('api/getPolicyAddOnCoverage', data).then(res => {\n        \n         if (res.success) {\n\n            var formattedData = [];\n            for (var i = 0; i < res.data.length; i++) {\n               formattedData.push({\n                  id: [i + 1],\n                  AddOnCoverageId: res.data[i].AddOnCoverageId,\n                  policyOption: res.data[i].AddOnCoverageName,\n                  premium: res.data[i].AddOnCoveragePremiumAmount,\n                  feeAmount: res.data[i].AddOnCoverageFeeAmount,\n                  isAdded: false,\n               })\n            }\n            this.setState({ CoverageAvailable: formattedData });\n            this.getPolicyAddedCoverage();\n         } else {\n         }\n      }).catch(err => {\n\n      });\n   }\n\n   getPolicyAddedCoverage() {\n      let data = {\n         PolicyId: this.state.PolicyId\n      }\n\n      api.post('api/getPolicyAddedCoverage', data).then(res => {\n         if (res.success) {\n\n            var formattedData = [];\n            for (var i = 0; i < res.data.length; i++) {\n\n               formattedData.push({\n                  PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n                  AddOnCoverageId: res.data[i].AddOnCoverageId,\n                  policyOption: res.data[i].AddOnCoverageName,\n                  premium: res.data[i].AddOnCoveragePremiumAmount,\n                  feeAmount: res.data[i].AddOnCoverageFeeAmount,\n                  IsDefault: res.data[i].IsDefault.data[0],\n                  isAdded: true,\n               })\n\n               let CoverageAvailableArray = this.state.CoverageAvailable;\n               let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n               if (index2 != -1) {\n                  CoverageAvailableArray[index2].isAdded = true;\n                  this.setState({ CoverageAvailable: CoverageAvailableArray });\n               }\n\n            }\n\n            this.setState({ CoverageAlreadyList: formattedData });\n\n         } else {\n         }\n      }).catch(err => {\n\n      });\n   }\n\n   // getAddOnCoverage() {\n   //    api.post('api/getAddOnCoverage', {}).then(res => {\n   //       if (res.success) {\n   //          var formattedData = [];\n   //          for (var i = 0; i < res.data.length; i++) {\n   //             formattedData.push({\n   //                id: [i + 1],\n   //                AddOnCoverageId: res.data[i].AddOnCoverageId,\n   //                policyOption: res.data[i].AddOnCoverageName,\n   //                premium: res.data[i].AddOnCoveragePremiumAmount,\n   //                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n   //                isAdded: false,\n   //             })\n   //          }\n   //          this.setState({ CoverageAvailable: formattedData });\n   //          this.getAddedCoverage();\n   //       } else {\n\n   //       }\n   //    }).catch(err => {\n\n   //    });\n   // }\n\n   // getAddedCoverage() {\n   //    let data = { PolicyId: this.props.match.params.id }; //'bef076c0-2ea5-11ea-a563-fa163eb9754c' }\n   //    api.post('api/getAddedCoverage', data).then(res => {\n   //       if (res.success) {\n   //          var formattedData = [];\n   //          for (var i = 0; i < res.data.length; i++) {\n\n   //             formattedData.push({\n   //                PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n   //                AddOnCoverageId: res.data[i].AddOnCoverageId,\n   //                policyOption: res.data[i].AddOnCoverageName,\n   //                premium: res.data[i].AddOnCoveragePremiumAmount,\n   //                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n   //                // IsDefault: res.data[i].IsDefault.data[0],\n   //                isAdded: true,\n   //             })\n\n   //             let CoverageAvailableArray = this.state.CoverageAvailable;\n   //             let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n\n   //             CoverageAvailableArray[index2].isAdded = true;\n   //             this.setState({ CoverageAvailable: CoverageAvailableArray });\n   //          }\n   //          this.setState({ CoverageAlreadyList: formattedData });\n\n   //       } else {\n\n   //       }\n   //    }).catch(err => {\n\n   //    });\n   // }\n\n   addToListModal(data) {\n      this.setState({ tempdata: data })\n      this.saveModalOpen();\n   }\n\n   addToList(data, field) {\n      let CoverageAlreadyArray = this.state.CoverageAlreadyList;\n      let index1 = CoverageAlreadyArray.findIndex(x => x.policyOption === data.policyOption);\n      if (index1 > -1) {\n         CoverageAlreadyArray[index1].isAdded = true;\n         this.setState({ CoverageAlreadyList: CoverageAlreadyArray })\n      } else {\n         var CoverageAlready = [\n            {\n               PolicyAddOnCoverageId: null,\n               AddOnCoverageId: data.AddOnCoverageId,\n               policyOption: data.policyOption,\n               premium: data.premium,\n               feeAmount: data.FeeAmount,\n               isAdded: true,\n            }\n         ];\n\n         this.setState({ CoverageAlreadyList: this.state.CoverageAlreadyList.concat(CoverageAlready) });\n      }\n      let CoverageAvailableArray = this.state.CoverageAvailable;\n      let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n      CoverageAvailableArray[index2].isAdded = true;\n      this.setState({ CoverageAvailable: CoverageAvailableArray });\n      this.Save(CoverageAlready);\n   }\n\n   Save = (CoverageAlready) => {\n      let data = {\n         CoverageAlreadyList: CoverageAlready,\n         PolicyId: this.state.PolicyId,\n      }\n      api.post('api/addPolicyCovarage', data).then(res => {\n         if (res.data.success) {\n            toast.success(res.data.message);\n            this.getPolicyAddedCoverage();\n            this.toggleSave();\n         } else {\n\n         }\n      }).catch(err => {\n      });\n   }\n\n   deleteCoverageModal(data) {\n      this.setState({ tempdata: data })\n      this.deleteModalOpen();\n   }\n\n   deleteCoverage(data) {\n      if (data.PolicyAddOnCoverageId) {\n         let apiData = { PolicyAddOnCoverageId: data.PolicyAddOnCoverageId }\n         api.post('api/deleteAddedCoverage', { apiData }).then(res => {\n            if (res.success) {\n               // toast.success('Coverage Deleted Successfully');\n            } else {\n\n            }\n         }).catch(err => {\n\n         });\n      }\n      let CoverageAvailableArray = this.state.CoverageAvailable;\n      let index1 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n      CoverageAvailableArray[index1].isAdded = false;\n\n      let listIndex = this.state.CoverageAlreadyList.findIndex(x => x.policyOption === data.policyOption);\n      this.state.CoverageAlreadyList.splice(listIndex, 1);\n\n      this.setState({ CoverageAvailable: CoverageAvailableArray });\n      toast.success('Coverage Deleted Successfully');\n      this.setState({ tempdata: data })\n      this.toggleDelete();\n   }\n\n   deleteModalOpen() {\n      this.setState({ toggleDeleteModal: !this.state.toggleDeleteModal });\n   }\n\n   toggleDelete = () => {\n      this.setState({ toggleDeleteModal: false, tempdata: [] });\n   }\n\n   saveModalOpen() {\n      this.setState({ toggleSaveModal: !this.state.toggleSaveModal });\n   }\n\n   toggleSave = () => {\n      this.setState({ toggleSaveModal: false, tempdata: [] });\n   }\n\n   goBack() {\n      this.props.history.push('/PolicyDetails');\n   }\n\n   render() {\n      const { t, i18n } = this.props;\n      const SaveButton = t(\"buttons.Save\");\n      const AddButton = t(\"buttons.Add\");\n      const EditButton = t(\"buttons.Edit\");\n      const DeleteButton = t(\"buttons.Delete\");\n      const CloseButton = t(\"buttons.Close\");\n      const BackButton = t(\"buttons.Back\");\n      const UpdateButton = t(\"buttons.Update\");\n      return (\n\n         <div>\n            <Container>\n               <Row>\n                  <Col md=\"6\">\n                     <span>{t(\"policyAddOnCoverage:AlreadyPurchased.title\")}</span>\n                     <Card>\n                        <CardBody>\n                           <div className=\"input-box\">\n                              <Row>\n                                 <Col md=\"12\">\n                                    <div style={{ marginTop: 10 }} className=\"input-box\">\n                                       <table className=\"added-detail-table\" style={{ width: \"100%\" }}>\n                                          <thead>\n                                             <tr>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.PolicyOption\")}</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Premium\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Total\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Action\")}</th>\n                                             </tr>\n                                          </thead>\n                                          <tbody>\n                                             {this.state.CoverageAlreadyList.map((ca, i) => {\n                                                if (ca.isAdded) {\n                                                   return (\n                                                      <tr>\n                                                         <td>{ca.policyOption}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.premium}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.feeAmount}</td>\n                                                         <td style={{ textAlign: 'right' }}>{Number(ca.premium) + Number(ca.feeAmount)}</td>\n                                                         <td style={{ textAlign: 'center' }}>\n                                                         {(ca.IsDefault == 0) ?\n                                                            <Button title={DeleteButton} onClick={() => this.deleteCoverageModal(ca, 'CoverageAlready')} style={{ marginLeft: 5 }} color=\"danger\">\n                                                               <i className=\"fa fa-trash\"></i>\n                                                            </Button>\n                                                         : 'Default'}\n                                                         </td>\n                                                      </tr>\n                                                   )\n                                                }\n                                             }\n                                             )}\n                                          </tbody>\n                                       </table>\n                                    </div>\n                                 </Col>\n                              </Row>\n                           </div>\n                        </CardBody>\n                     </Card>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md=\"6\">\n                     <span>{t(\"policyAddOnCoverage:AvailableToPurchase.title\")}</span>\n                     <Card>\n                        <CardBody>\n                           <div className=\"input-box\">\n                              <Row>\n                                 <Col md=\"12\">\n                                    <div style={{ marginTop: 10 }} className=\"input-box\">\n                                       <table className=\"added-detail-table\" style={{ width: \"100%\" }}>\n                                          <thead>\n                                             <tr>\n                                                <th>{t(\"policyAddOnCoverage:AvailableToPurchase.PolicyOption\")}</th>\n                                                <th>{t(\"policyAddOnCoverage:AvailableToPurchase.Premium\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Total\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AvailableToPurchase.Action\")}</th>\n                                             </tr>\n                                          </thead>\n                                          <tbody>\n\n                                             {this.state.CoverageAvailable.map((ca, i) => {\n                                                if (!ca.isAdded) {\n                                                   return (\n                                                      <tr>\n                                                         <td>{ca.policyOption}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.premium}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.feeAmount}</td>\n                                                         <td style={{ textAlign: 'right' }}>{Number(ca.premium) + Number(ca.feeAmount)}</td>\n                                                         <td style={{ textAlign: 'center' }}>\n                                                            <Button title={AddButton} color=\"primary\" onClick={() => this.addToListModal(ca, 'CoverageAvailable')}>\n                                                               <i className=\"fa fa-plus\"></i>\n                                                            </Button>\n                                                         </td>\n                                                      </tr>\n                                                   )\n                                                }\n                                             }\n                                             )}\n                                          </tbody>\n                                       </table>\n                                    </div>\n                                 </Col>\n                              </Row>\n                           </div>\n                        </CardBody>\n                     </Card>\n                  </Col>\n               </Row>\n            </Container>\n\n            <Modal isOpen={this.state.toggleSaveModal} toggle={this.toggleSave}\n               className={'modal-lg ' + this.props.className}>\n               <ModalHeader toggle={this.toggleSave}>{t(\"policyAddOnCoverage:ConformationSaveModal.Header\")}</ModalHeader>\n               <ModalBody>\n                  Are you sure you want to Add <b>{this.state.tempdata.policyOption}</b> Coverage?\n               </ModalBody>\n               <ModalFooter>\n                  <button color=\"primary\" onClick={() => this.addToList(this.state.tempdata)}>{t(\"policyAddOnCoverage:ConformationSaveModal.Approval\")}</button>\n                  <button color=\"secondary\" onClick={this.toggleSave}>{t(\"policyAddOnCoverage:ConformationSaveModal.Reject\")}</button>\n               </ModalFooter>\n            </Modal>\n\n            <Modal isOpen={this.state.toggleDeleteModal} toggle={this.toggleDelete}\n               className={'modal-lg ' + this.props.className}>\n               <ModalHeader toggle={this.toggleDelete}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Header\")}</ModalHeader>\n               <ModalBody>\n                  Do you want to delete <b>{this.state.tempdata.policyOption}</b> Coverage?\n               </ModalBody>\n               <ModalFooter>\n                  <button color=\"primary\" onClick={() => this.deleteCoverage(this.state.tempdata)}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Approval\")}</button>\n                  <button color=\"secondary\" onClick={this.toggleDelete}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Reject\")}</button>\n               </ModalFooter>\n            </Modal>\n         </div>\n      )\n   }\n}\n\nexport default withTranslation()(Coverage);"]},"metadata":{},"sourceType":"module"}