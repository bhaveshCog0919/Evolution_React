{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/MooringGuide/mooringGuide.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport api from '../../../utils/apiClient';\nimport { CommonConfig } from '../../../utils/constants';\nimport moment from 'moment';\n\nclass mooringGuide extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.addMoreMooringGuide = () => {\n      this.props.history.push({\n        pathname: '/AddMooringGuide'\n      }); // this.props.history.push('/AddMooringGuide');\n    };\n\n    this.onEditRow = rowData => {\n      debugger;\n      var Id = rowData.MooringGuideId;\n      this.props.history.push({\n        pathname: '/EditMooringGuide/' + Id,\n        state: {\n          Id: Id\n        }\n      });\n    };\n\n    let columns = [{\n      field: \"id\",\n      header: \"Id\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"name\",\n      header: \"Name\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"Country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"County\",\n      header: \"County/Region\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"Location\",\n      header: \"Location\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"location_type\",\n      header: \"Location Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      field: \"Loading\",\n      header: \"Loading\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      field: \"mooring_Type\",\n      header: \"Mooring Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      field: \"approval_Required\",\n      header: \"Approval Required\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 8\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 6\n    }];\n    this.state = {\n      cols: columns,\n      arr: [],\n      rowData: '',\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      isEdit: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMooringGuide();\n  }\n\n  getMooringGuide() {\n    api.post('api/getMooringGuide').then(res => {\n      if (res.success) {\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          var approvalRequired = res.data[i].IsApprovalRequired.data[0] == 1 ? \"Yes\" : \"No\";\n          formattedData.push({\n            id: [i + 1],\n            MooringGuideId: res.data[i].MooringGuideId,\n            name: res.data[i].MooringName,\n            Country: res.data[i].countryName,\n            County: res.data[i].Region,\n            Location: res.data[i].Location,\n            location_type: res.data[i].LocationType,\n            Loading: res.data[i].LoadingPercent.toFixed(2),\n            mooring_Type: res.data[i].MooringType,\n            approval_Required: approvalRequired,\n            CountryId: res.data[i].CountryId,\n            Longitude: res.data[i].Longitude,\n            Latitude: res.data[i].Latitude,\n            Notes: res.data[i].Notes,\n            MooringZone: res.data[i].MooringZone\n          });\n        }\n\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      } else {\n        console.log(\"Else\");\n      }\n    }).catch(err => {});\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      tooltip: \"Edit\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      icon: \"pi pi-pencil\",\n      className: \"p-button-warning\",\n      style: {\n        marginRight: '.5em'\n      },\n      onClick: () => this.onEditRow(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  render() {\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Mooring Guide\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      size: \"30\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltip: \"Add Mooring Guide\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.addMoreMooringGuide(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export As CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.export(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e) // onRowClick={(e) => this.onEditRow(e)}\n      ,\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Mooring Guide List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"250px\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"265px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default mooringGuide;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/MooringGuide/mooringGuide.js"],"names":["React","Component","DataTable","Column","InputText","MultiSelect","Button","api","CommonConfig","moment","mooringGuide","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","addMoreMooringGuide","history","push","pathname","onEditRow","rowData","Id","MooringGuideId","columns","field","header","sortable","filter","filterMatchMode","id","body","actionTemplate","bind","cols","rowsPerPageOptions","dataTableConfig","globalFilter","isEdit","colOptions","col","label","value","onColumnToggle","export","componentDidMount","getMooringGuide","post","then","res","success","formattedData","i","data","approvalRequired","IsApprovalRequired","name","MooringName","Country","countryName","County","Region","Location","location_type","LocationType","Loading","LoadingPercent","toFixed","mooring_Type","MooringType","approval_Required","CountryId","Longitude","Latitude","Notes","MooringZone","console","log","catch","err","event","valueInOrder","sort","x","y","column","position","marginRight","dt","exportCSV","render","map","textAlign","margin","target","columnToggleIcon","width","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport api from '../../../utils/apiClient';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport moment from 'moment';\r\n\r\nclass mooringGuide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"id\", header: \"Id\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"name\", header: \"Name\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"Country\", header: \"Country\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { field: \"County\", header: \"County/Region\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"Location\", header: \"Location\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { field: \"location_type\", header: \"Location Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { field: \"Loading\", header: \"Loading\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { field: \"mooring_Type\", header: \"Mooring Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { field: \"approval_Required\", header: \"Approval Required\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 6 }\r\n        ];\r\n\r\n        this.state = {\r\n            cols: columns,\r\n            arr: [],\r\n            rowData: '',\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            isEdit: false\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMooringGuide();\r\n    }\r\n\r\n    getMooringGuide() {\r\n        api.post('api/getMooringGuide').then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    var approvalRequired = (res.data[i].IsApprovalRequired.data[0] == 1) ? (\"Yes\") : (\"No\");\r\n                    formattedData.push({\r\n                        id: [i + 1],\r\n                        MooringGuideId: res.data[i].MooringGuideId,\r\n                        name: res.data[i].MooringName,\r\n                        Country: res.data[i].countryName,\r\n                        County: res.data[i].Region,\r\n                        Location: res.data[i].Location,\r\n                        location_type: res.data[i].LocationType,\r\n                        Loading: res.data[i].LoadingPercent.toFixed(2),\r\n                        mooring_Type: res.data[i].MooringType,\r\n                        approval_Required: approvalRequired,\r\n                        CountryId: res.data[i].CountryId,\r\n                        Longitude: res.data[i].Longitude,\r\n                        Latitude: res.data[i].Latitude,\r\n                        Notes: res.data[i].Notes,\r\n                        MooringZone: res.data[i].MooringZone\r\n                    });\r\n                }\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = '1 to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            } else {\r\n                console.log(\"Else\");\r\n\r\n            }\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <Button type=\"button\" tooltip=\"Edit\" tooltipOptions={{ position: 'bottom' }} icon=\"pi pi-pencil\" className=\"p-button-warning\" style={{ marginRight: '.5em' }} onClick={() => this.onEditRow(rowData)}></Button>\r\n        </div>;\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    addMoreMooringGuide = () => {\r\n        this.props.history.push({\r\n            pathname: '/AddMooringGuide'\r\n        });\r\n        // this.props.history.push('/AddMooringGuide');\r\n    }\r\n\r\n    onEditRow = (rowData) => {debugger\r\n        var Id = rowData.MooringGuideId;\r\n        this.props.history.push({\r\n            pathname: '/EditMooringGuide/' + Id,\r\n            state: {\r\n                Id: Id,\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Mooring Guide</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <div style={{ textAlign: 'right' }}>\r\n                            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n                            <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" size=\"30\" style={{ marginRight: 10 }} />\r\n                        </div>\r\n\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-plus\" tooltip=\"Add Mooring Guide\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.addMoreMooringGuide()}></Button>\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export As CSV\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.export()}></Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-custom\">\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.arr}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        // onRowClick={(e) => this.onEditRow(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.arr.length}\r\n                        exportFilename=\"Mooring Guide List\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true} scrollHeight=\"250px\"\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage=\"No records found\"\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollable={true}\r\n                        scrollHeight=\"265px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default mooringGuide;"]},"metadata":{},"sourceType":"module"}