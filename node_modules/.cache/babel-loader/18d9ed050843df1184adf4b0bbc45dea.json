{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/Documents/Documents.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, InputGroup, Button as BTN } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport APIConstant from '../../../utils/constants';\nimport { CommonConfig } from '../../../utils/constants';\nimport { apiBase } from '../../../utils/config';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { registerHelper } from 'codemirror';\nimport moment from 'moment';\nimport CKEditor from 'ckeditor4-react';\n\nclass Documents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.MasterDocumentsArray.length ? l : this.state.MasterDocumentsArray.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.MasterDocumentsArray.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.export = () => {\n      this.dt.exportCSV();\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'isThirdParty') {\n        if (e.target.checked) {\n          this.setState({\n            isThirdParty: e.target.checked,\n            isThirdPartyError: false\n          });\n        } else {\n          this.setState({\n            isThirdParty: e.target.checked,\n            isThirdPartyError: true\n          });\n        }\n      }\n\n      if (e.target.name === 'fileName') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            fileNameError: true,\n            fileName: e.target.value\n          });\n          this.show(\"fileName\", true, \"fileNameError\", \"Please Enter FileName\");\n        } else {\n          this.setState({\n            fileNameError: false,\n            fileName: e.target.value\n          });\n          this.show('fileName', false, \"fileNameError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'tamplateName') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            tamplateNameError: true,\n            tamplateName: e.target.value\n          });\n          this.show(\"tamplateName\", true, \"tamplateNameError\", \"Please Enter Template Name\");\n        } else {\n          this.setState({\n            tamplateNameError: false,\n            tamplateName: e.target.value\n          });\n          this.show('tamplateName', false, \"tamplateNameError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'subject') {\n        let val = e.target.value;\n\n        if (CommonConfig.isEmpty(val)) {\n          this.setState({\n            subjectError: true,\n            subject: val\n          });\n          this.show(\"subject\", true, \"subjectError\", \"Please Enter Subject\");\n        } else {\n          this.setState({\n            subjectError: false,\n            subject: val\n          });\n          this.show('subject', false, \"subjectError\", \"\");\n        }\n      }\n    };\n\n    this.openDeleteModal = rowData => {\n      debugger;\n      this.setState({\n        toggleModal: !this.state.toggleModal,\n        MessageTemplateId: rowData.MessageTemplateId,\n        templateType: rowData.templateType,\n        tamplateName: rowData.tamplateName,\n        department: rowData.department,\n        departmentName: rowData.departmentName,\n        isThirdParty: rowData.isThirdParty,\n        docLang: rowData.docLang,\n        fileName: rowData.fileName,\n        processType: rowData.processType,\n        processTypeName: rowData.processTypeName,\n        templateCategory: rowData.templateCategory,\n        templateCategoryName: rowData.templateCategoryName,\n        templateMessage: rowData.templateMessage\n      });\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false\n      });\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        MessageTemplateId: \"\",\n        templateType: 'Document',\n        showDocumentData: true,\n        showEmailSubject: false,\n        tamplateName: \"\",\n        docLang: \"\",\n        processType: \"\",\n        department: \"\",\n        isThirdParty: false,\n        fileName: \"\",\n        subject: \"\",\n        templateCategory: \"\",\n        templateMessage: \"\",\n        primary: false\n      });\n    };\n\n    let columns = [{\n      field: \"templateType\",\n      header: \"Template Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"tamplateName\",\n      header: \"Template Name\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"docLang\",\n      header: \"Language\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"processTypeName\",\n      header: \"Process Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"departmentName\",\n      header: \"Department\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"isThirdParty\",\n      header: \"Third Party\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      field: \"fileName\",\n      header: \"File Name\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      field: \"templateCategoryName\",\n      header: \"Template Category\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 8\n    }];\n    this.state = {\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      primary: false,\n      cols: columns,\n      MasterDocumentsArray: [],\n      departmentList: [],\n      documentListType: [],\n      languageList: [],\n      countryList: [],\n      templateTypeList: [],\n      templateCategoryList: [],\n      dynamicFieldList: [],\n      MessageTemplateId: \"\",\n      templateType: 'Document',\n      showDocumentData: true,\n      tamplateName: \"\",\n      docLang: \"\",\n      processType: \"\",\n      department: \"\",\n      isThirdParty: \"No\",\n      fileName: \"\",\n      templateCategory: \"\",\n      templateMessage: \"\",\n      toggleModal: false,\n      tamplateNameError: true,\n      departmentError: true,\n      docLangError: true,\n      processTypeError: true,\n      fileNameError: true,\n      templateCategoryError: true,\n      templateMessageError: true,\n      showEmailSubject: false,\n      subject: \"\",\n      subjectError: false,\n      dynamicFieldForSubject: \"\"\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.handleDetailsChange = this.handleDetailsChange.bind(this);\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  componentDidMount() {\n    this.getMasterDocumentsData();\n    this.getLanguageData();\n    this.getDropDownValues('POLICYDEPARTMENT', 'departmentList', 'StringMapName');\n    this.getDropDownValues('GENERATEDOCUMENTPROCESS', 'documentListType', 'SortOrder');\n    this.getDropDownValues('POLICYCOUNTRY', 'countryList', 'StringMapName');\n    this.getDropDownValues('DOCUMENTTEMPLATETYPE', 'templateTypeList', 'SortOrder');\n    this.getDropDownValues('DOCUMENTTEMPLATECATEGORY', 'templateCategoryList', 'SortOrder');\n    this.getDropDownValues('MAILMERGEFIELD', 'dynamicFieldList', 'SortOrder');\n  }\n\n  getLanguageData() {\n    try {\n      api.get(APIConstant.path.getLanguage).then(res => {\n        if (res.success) {\n          this.setState({\n            languageList: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getMasterDocumentsData() {\n    api.post('api/getMasterDocumentsData').then(res => {\n      console.log(\"getMasterDocumentsData\", res);\n      this.setState({\n        MasterDocumentsArray: res.map(obj => {\n          return {\n            MessageTemplateId: obj.MessageTemplateId,\n            templateType: obj.TemplateType,\n            tamplateName: obj.TamplateName,\n            docLang: obj.DocLang,\n            processType: obj.ProcessType,\n            processTypeName: obj.ProcessTypeName,\n            department: obj.Department,\n            departmentName: obj.DepartmentName,\n            isThirdParty: obj.IsThirdParty.data[0] == 0 ? \"No\" : \"Yes\",\n            fileName: obj.FileName,\n            templateCategory: obj.TemplateCategory,\n            templateCategoryName: obj.TemplateCategoryName,\n            templateMessage: obj.TemplateMessage,\n            tamplateNameError: false,\n            departmentError: false,\n            docLangError: false,\n            processTypeError: false,\n            fileNameError: false,\n            templateCategoryError: false,\n            templateMessageError: false\n          };\n        })\n      });\n    });\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"errrr\", err);\n      });\n    } catch (error) {\n      console.log(\"asfsdg\", error);\n    }\n  }\n\n  selectType(value, type) {\n    if (type === 'processType') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          processTypeError: true,\n          processType: value\n        });\n        this.show(\"processType\", true, \"processTypeError\", \"Please Select Process Type\");\n      } else {\n        this.setState({\n          processTypeError: false,\n          processType: value\n        });\n        this.show('processType', false, \"processTypeError\", \"\");\n      }\n    }\n\n    if (type === 'department') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          departmentError: true,\n          department: value\n        });\n        this.show(\"department\", true, \"departmentError\", \"Please Select Process Type\");\n      } else {\n        this.setState({\n          departmentError: false,\n          department: value\n        });\n        this.show('department', false, \"departmentError\", \"\");\n      }\n    }\n\n    if (type === 'docLang') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          docLangError: true,\n          docLang: value\n        });\n        this.show(\"docLang\", true, \"docLangError\", \"Please Select Process Type\");\n      } else {\n        this.setState({\n          docLangError: false,\n          docLang: value\n        });\n        this.show('docLang', false, \"docLangError\", \"\");\n      }\n    }\n\n    if (type === 'templateCategory') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          templateCategoryError: true,\n          templateCategory: value\n        });\n        this.show(\"templateCategory\", true, \"templateCategoryError\", \"Please Select Template Category\");\n      } else {\n        this.setState({\n          templateCategoryError: false,\n          templateCategory: value\n        });\n        this.show('templateCategory', false, \"templateCategoryError\", \"\");\n      }\n    }\n\n    if (type === 'dynamicField') {\n      var messageData = this.state.templateMessage + \" \" + value;\n      this.setState({\n        templateMessage: messageData,\n        dynamicField: \"\"\n      });\n    }\n\n    if (type === 'dynamicFieldForSubject') {\n      var subjectData = this.state.subject + \" \" + value;\n      this.setState({\n        subject: subjectData,\n        dynamicFieldForSubject: \"\"\n      });\n    }\n  }\n\n  handleDetailsChange(evt) {\n    const data = evt.editor.getData();\n\n    if (CommonConfig.isEmpty(data)) {\n      this.setState({\n        templateMessageError: true,\n        templateMessage: ''\n      }); // this.show(\"customEndorsementDetails\", true);\n    } else {\n      this.setState({\n        templateMessageError: false,\n        templateMessage: data\n      }); // this.show(\"customEndorsementDetails\", false);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  actionTemplate(rowData, column) {\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-pencil\",\n      className: \"p-button-warning\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: t(\"buttons.Edit\"),\n      style: {\n        padding: 2\n      },\n      onClick: () => this.edit(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      tooltip: \"Delete\",\n      style: {\n        padding: 2\n      },\n      onClick: () => this.openDeleteModal(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  addDocumentTemplate() {\n    this.setState({\n      MessageTemplateId: \"\",\n      templateType: 'Document',\n      showDocumentData: true,\n      showEmailSubject: false,\n      tamplateName: \"\",\n      docLang: \"\",\n      processType: \"\",\n      department: \"\",\n      isThirdParty: false,\n      fileName: \"\",\n      templateCategory: \"\",\n      templateMessage: \"\",\n      primary: true\n    });\n  }\n\n  edit(data) {\n    this.setState({\n      MessageTemplateId: data.MessageTemplateId,\n      templateType: data.templateType,\n      tamplateName: data.tamplateName,\n      department: data.department,\n      isThirdParty: data.isThirdParty == \"No\" ? false : true,\n      docLang: data.docLang,\n      fileName: data.fileName,\n      processType: data.processType,\n      templateCategory: data.templateCategory,\n      templateMessage: data.templateMessage,\n      primary: true,\n      showDocumentData: data.templateType == 'Document' ? true : false,\n      showEmailSubject: data.templateType == 'Email' ? true : false\n    });\n  }\n\n  save() {\n    var data = this.state.MasterDocumentsArray.filter(x => x.tamplateName == this.state.tamplateName);\n    console.log(\"data.....\", data);\n\n    if (data.length) {\n      this.setState({\n        tamplateNameError: true\n      });\n      this.show(\"tamplateName\", true, \"tamplateNameError\", \" Template Name Already Exist Please Enter another name\");\n      toast.error(\"Template Name Already Exist Please Enter another name\");\n    }\n\n    if (this.state.tamplateNameError) {\n      toast.error(\"Please enter template name\");\n    } else if (this.state.docLangError) {\n      toast.error(\"Please select language\");\n    } else if (this.state.processTypeError && this.state.templateType == 'Document') {\n      toast.error(\"Please select process type\");\n    } else if (this.state.departmentError && this.state.templateType == 'Document') {\n      toast.error(\"Please select department\");\n    } else if (this.state.fileNameError && this.state.templateType == 'Document') {\n      toast.error(\"Please enter file name\");\n    } //  else if (this.state.templateCategoryError) {\n    //     toast.error(\"Please select template category\");\n    // }\n    else if (this.state.templateMessageError) {\n        toast.error(\"Please enter template message\");\n      } else if (this.state.subjectError) {\n        toast.error(\"Please enter Email Subject \");\n      } else {\n        console.log(this.state);\n        var dataToSent = {\n          MessageTemplateId: this.state.MessageTemplateId ? this.state.MessageTemplateId : \"\",\n          TemplateType: this.state.templateType,\n          Department: this.state.department,\n          TamplateName: this.state.tamplateName,\n          IsThirdParty: this.state.isThirdParty,\n          DocLang: this.state.docLang,\n          FileName: this.state.fileName,\n          EmailSubject: this.state.subject,\n          ProcessType: this.state.processType,\n          TemplateMessage: this.state.templateMessage,\n          TemplateCategory: this.state.templateCategory,\n          loggedInUserId: CommonConfig.loggedInUserId()\n        };\n        console.log(dataToSent);\n        api.post('api/addUpdateMasterDocument', dataToSent).then(res => {\n          if (res.success) {\n            console.log(\"SaveSysConfig\", res.data);\n            toast.success(res.message);\n            this.setState({\n              primary: false\n            });\n            this.getMasterDocumentsData();\n          }\n        }).catch(err => {\n          console.log(\"SaveSysConfigIN\", err);\n        });\n      }\n  }\n\n  selectTemplateType(templateType) {\n    this.setState({\n      templateMessage: ''\n    });\n\n    if (templateType == 'Document') {\n      this.setState({\n        showDocumentData: true,\n        showEmailSubject: false\n      });\n    } else if (templateType == 'Email') {\n      this.setState({\n        showEmailSubject: true,\n        showDocumentData: false\n      });\n    } else {\n      this.setState({\n        showDocumentData: false,\n        showEmailSubject: false\n      });\n    }\n\n    this.setState({\n      templateType: templateType\n    });\n  }\n\n  deleteTemplate() {\n    let data = {\n      \"MessageTemplateId\": this.state.MessageTemplateId,\n      \"UserId\": CommonConfig.loggedInUserId(),\n      \"Status\": \"Inactive\",\n      \"loggedInUserId\": CommonConfig.loggedInUserId()\n    };\n    api.post('api/deleteTemplate', data).then(res => {\n      if (res.success) {\n        toast.success(\"Template successfully deleted\");\n        this.toggleLarge();\n        this.getMasterDocumentsData();\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    console.log(\"this.state\", this.state.docLang);\n    const {\n      t\n    } = this.props;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 21\n      }\n    }, \" Documents \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: t(\"translation:labels.globalSearchLabel\"),\n      size: \"30\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-plus\",\n      tooltip: \"Add Document Template\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.addDocumentTemplate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.MasterDocumentsArray,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.MasterDocumentsArray.length,\n      exportFilename: \"Document Template List\",\n      currentPageReportTemplate: this.state.str,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.primary,\n      toggle: this.reset,\n      className: 'modal-lg modal-primary ' + this.props.className,\n      style: {\n        maxWidth: \"1000px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 21\n      }\n    }, \" \", this.state.heading, \" Document Template \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 33\n      }\n    }, \"Template Type\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 29\n      }\n    }, this.state.templateTypeList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rc-inline\",\n        style: {\n          display: \"initial\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"radio\",\n        name: \"Document\",\n        checked: this.state.templateType === ct.StringMapName,\n        value: ct.StringMapName,\n        onChange: e => this.selectTemplateType(ct.StringMapName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 49\n        }\n      }), \" \", ct.StringMapName));\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 33\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"tamplateName\",\n      id: \"tamplateName\",\n      placeholder: \"Enter File Template Name\",\n      onChange: e => this.handleChange(e),\n      value: this.state.tamplateName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"tamplateNameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 33\n      }\n    }, \"Language\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"docLang\",\n      id: \"docLang\",\n      onChange: e => this.selectType(e.target.value, 'docLang'),\n      value: this.state.docLang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 37\n      }\n    }, \"Select Langage\"), this.state.languageList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.Language,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 49\n        }\n      }, ct.Language);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"docLangError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 33\n      }\n    }))), this.state.showDocumentData ? /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 37\n      }\n    }, \"Process\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"processType\",\n      id: \"processType\",\n      onChange: e => this.selectType(e.target.value, 'processType'),\n      value: this.state.processType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 41\n      }\n    }, \"Select Process\"), this.state.documentListType.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapId,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 53\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"processTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 37\n      }\n    }, \"Department\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"department\",\n      id: \"department\",\n      onChange: e => this.selectType(e.target.value, 'department'),\n      value: this.state.department,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 41\n      }\n    }, \"Select Department\"), this.state.departmentList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapId,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 53\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"departmentError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 37\n      }\n    }))) : '', this.state.showDocumentData ? /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 37\n      }\n    }, \"Third Party\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"isThirdParty\",\n      id: \"isThirdParty\",\n      onChange: e => this.handleChange(e),\n      value: this.state.isThirdParty,\n      checked: this.state.isThirdParty,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 37\n      }\n    }, \"File Name\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"fileName\",\n      id: \"fileName\",\n      placeholder: \"Enter File Name\",\n      onChange: e => this.handleChange(e),\n      value: this.state.fileName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"fileNameError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 37\n      }\n    }))) : '', /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 33\n      }\n    }, \"Template Category\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"templateCategory\",\n      id: \"templateCategory\",\n      onChange: e => this.selectType(e.target.value, 'templateCategory'),\n      value: this.state.templateCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 37\n      }\n    }, \"Select Template Category\"), this.state.templateCategoryList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.StringMapId,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 49\n        }\n      }, ct.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"templateCategoryError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 33\n      }\n    }))), this.state.showEmailSubject ? /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 37\n      }\n    }, \"Email Subject \")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"subject\",\n      id: \"subject\",\n      placeholder: \"Enter Email Subject\",\n      onChange: e => this.handleChange(e),\n      value: this.state.subject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"subjectError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 37\n      }\n    }, \"Pick Dynamic Field For Subject\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"dynamicFieldForSubject\",\n      id: \"dynamicFieldForSubject\",\n      onChange: e => this.selectType(e.target.value, 'dynamicFieldForSubject'),\n      value: this.state.dynamicFieldForSubject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 41\n      }\n    }, \"Select Dynamic Field For Subject\"), this.state.dynamicFieldList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.Description,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 53\n        }\n      }, ct.StringMapName);\n    })))) : '', /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 33\n      }\n    }, \"Message Text\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 33\n      }\n    }, \"Pick Dynamic Field\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"dynamicField\",\n      id: \"dynamicField\",\n      onChange: e => this.selectType(e.target.value, 'dynamicField'),\n      value: this.state.dynamicField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 37\n      }\n    }, \"Select Dynamic Field For Message\"), this.state.dynamicFieldList.map((ct, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: ct.Description,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 49\n        }\n      }, ct.StringMapName);\n    })))), this.state.templateType !== 'SMS' ? /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CKEditor, {\n      name: \"templateMessage\",\n      id: \"templateMessage\",\n      data: this.state.templateMessage,\n      onChange: this.handleDetailsChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"templateMessageError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 37\n      }\n    }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"templateMessage\",\n      rows: \"10\",\n      type: \"textarea\",\n      id: \"templateMessage\",\n      className: \"\",\n      onChange: e => this.handleChange(e),\n      value: this.state.templateMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"templateMessageError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 37\n      }\n    }, this.state.docLang == 'English' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 48\n      }\n    }, \"Note: Maximum Length For SMS is 180 Character\"), \" \")) : this.state.docLang == 'Spanish' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 51\n      }\n    }, \"Note: Maximum Length For SMS is 90 Character\"), \" \")) : null)))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.save(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 74\n      }\n    }), \" Save \"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 75\n      }\n    }), \" Cancel \"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 21\n      }\n    }, \"Delete Template\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 21\n      }\n    }, \"Are you sure, You want to delete \", this.state.templateType, \" \", this.state.tamplateName, \" Template?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.deleteTemplate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 84\n      }\n    }), \" Delete\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 73\n      }\n    }), \"Cancel\"))));\n  }\n\n}\n\nexport default withTranslation()(Documents);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/Documents/Documents.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","InputGroup","BTN","api","APIConstant","CommonConfig","apiBase","useTranslation","withTranslation","Trans","registerHelper","moment","CKEditor","Documents","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","MasterDocumentsArray","length","str","setState","selectedPage","rowsPerPage","export","dt","exportCSV","handleChange","target","name","value","checked","isThirdParty","isThirdPartyError","isEmpty","fileNameError","fileName","show","tamplateNameError","tamplateName","val","subjectError","subject","openDeleteModal","rowData","toggleModal","MessageTemplateId","templateType","department","departmentName","docLang","processType","processTypeName","templateCategory","templateCategoryName","templateMessage","toggleLarge","reset","showDocumentData","showEmailSubject","primary","columns","field","header","sortable","filter","filterMatchMode","id","body","actionTemplate","bind","rowsPerPageOptions","dataTableConfig","globalFilter","cols","departmentList","documentListType","languageList","countryList","templateTypeList","templateCategoryList","dynamicFieldList","departmentError","docLangError","processTypeError","templateCategoryError","templateMessageError","dynamicFieldForSubject","colOptions","col","push","label","onColumnToggle","handleDetailsChange","event","valueInOrder","sort","x","y","componentDidMount","getMasterDocumentsData","getLanguageData","getDropDownValues","get","path","getLanguage","then","res","success","data","catch","err","error","post","console","log","map","obj","TemplateType","TamplateName","DocLang","ProcessType","ProcessTypeName","Department","DepartmentName","IsThirdParty","FileName","TemplateCategory","TemplateCategoryName","TemplateMessage","stringMapType","setStateName","orderBy","stringmaptype","orderby","dropdownbycode","selectType","type","messageData","dynamicField","subjectData","evt","editor","getData","condition","errorField","message","document","getElementById","className","innerHTML","column","t","position","padding","edit","addDocumentTemplate","save","dataToSent","EmailSubject","loggedInUserId","selectTemplateType","deleteTemplate","render","i","textAlign","margin","marginRight","columnToggleIcon","width","el","maxWidth","heading","ct","display","StringMapName","marginTop","Language","StringMapId","marginLeft","Description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, InputGroup, Button as BTN } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport APIConstant from '../../../utils/constants';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport { apiBase } from '../../../utils/config';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { registerHelper } from 'codemirror';\r\nimport moment from 'moment';\r\nimport CKEditor from 'ckeditor4-react';\r\n\r\n\r\nclass Documents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"templateType\", header: \"Template Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"tamplateName\", header: \"Template Name\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"docLang\", header: \"Language\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { field: \"processTypeName\", header: \"Process Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"departmentName\", header: \"Department\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { field: \"isThirdParty\", header: \"Third Party\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { field: \"fileName\", header: \"File Name\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { field: \"templateCategoryName\", header: \"Template Category\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 8 }\r\n        ];\r\n\r\n        this.state = {\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            primary: false,\r\n            cols: columns,\r\n            MasterDocumentsArray: [],\r\n            departmentList: [],\r\n            documentListType: [],\r\n            languageList: [],\r\n            countryList: [],\r\n            templateTypeList: [],\r\n            templateCategoryList: [],\r\n            dynamicFieldList: [],\r\n            MessageTemplateId: \"\",\r\n            templateType: 'Document',\r\n            showDocumentData: true,\r\n            tamplateName: \"\",\r\n            docLang: \"\",\r\n            processType: \"\",\r\n            department: \"\",\r\n            isThirdParty: \"No\",\r\n            fileName: \"\",\r\n            templateCategory: \"\",\r\n            templateMessage: \"\",\r\n            toggleModal: false,\r\n            tamplateNameError: true,\r\n            departmentError: true,\r\n            docLangError: true,\r\n            processTypeError: true,\r\n            fileNameError: true,\r\n            templateCategoryError: true,\r\n            templateMessageError: true,\r\n            showEmailSubject: false,\r\n            subject: \"\",\r\n            subjectError: false,\r\n            dynamicFieldForSubject:\"\",\r\n\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n        this.handleDetailsChange = this.handleDetailsChange.bind(this);\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMasterDocumentsData();\r\n        this.getLanguageData();\r\n        this.getDropDownValues('POLICYDEPARTMENT', 'departmentList', 'StringMapName');\r\n        this.getDropDownValues('GENERATEDOCUMENTPROCESS', 'documentListType', 'SortOrder');\r\n        this.getDropDownValues('POLICYCOUNTRY', 'countryList', 'StringMapName');\r\n        this.getDropDownValues('DOCUMENTTEMPLATETYPE', 'templateTypeList', 'SortOrder');\r\n        this.getDropDownValues('DOCUMENTTEMPLATECATEGORY', 'templateCategoryList', 'SortOrder');\r\n        this.getDropDownValues('MAILMERGEFIELD', 'dynamicFieldList', 'SortOrder');\r\n    }\r\n\r\n    getLanguageData() {\r\n        try {\r\n            api.get(APIConstant.path.getLanguage).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ languageList: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    getMasterDocumentsData() {\r\n        api.post('api/getMasterDocumentsData').then(res => {\r\n            console.log(\"getMasterDocumentsData\", res);\r\n            this.setState({\r\n                MasterDocumentsArray: res.map((obj) => {\r\n                    return {\r\n                        MessageTemplateId: obj.MessageTemplateId,\r\n                        templateType: obj.TemplateType,\r\n                        tamplateName: obj.TamplateName,\r\n                        docLang: obj.DocLang,\r\n                        processType: obj.ProcessType,\r\n                        processTypeName: obj.ProcessTypeName,\r\n                        department: obj.Department,\r\n                        departmentName: obj.DepartmentName,\r\n                        isThirdParty: (obj.IsThirdParty.data[0] == 0) ? \"No\" : \"Yes\",\r\n                        fileName: obj.FileName,\r\n                        templateCategory: obj.TemplateCategory,\r\n                        templateCategoryName: obj.TemplateCategoryName,\r\n                        templateMessage: obj.TemplateMessage,\r\n                        tamplateNameError: false,\r\n                        departmentError: false,\r\n                        docLangError: false,\r\n                        processTypeError: false,\r\n                        fileNameError: false,\r\n                        templateCategoryError: false,\r\n                        templateMessageError: false,\r\n                    }\r\n                }),\r\n            })\r\n        })\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"errrr\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"asfsdg\", error);\r\n        }\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.MasterDocumentsArray.length) ? l : this.state.MasterDocumentsArray.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.MasterDocumentsArray.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export = () => {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'processType') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ processTypeError: true, processType: value });\r\n                this.show(\"processType\", true, \"processTypeError\", \"Please Select Process Type\");\r\n            } else {\r\n                this.setState({ processTypeError: false, processType: value });\r\n                this.show('processType', false, \"processTypeError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (type === 'department') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ departmentError: true, department: value });\r\n                this.show(\"department\", true, \"departmentError\", \"Please Select Process Type\");\r\n            } else {\r\n                this.setState({ departmentError: false, department: value });\r\n                this.show('department', false, \"departmentError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (type === 'docLang') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ docLangError: true, docLang: value });\r\n                this.show(\"docLang\", true, \"docLangError\", \"Please Select Process Type\");\r\n            } else {\r\n                this.setState({ docLangError: false, docLang: value });\r\n                this.show('docLang', false, \"docLangError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (type === 'templateCategory') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ templateCategoryError: true, templateCategory: value });\r\n                this.show(\"templateCategory\", true, \"templateCategoryError\", \"Please Select Template Category\");\r\n            } else {\r\n                this.setState({ templateCategoryError: false, templateCategory: value });\r\n                this.show('templateCategory', false, \"templateCategoryError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (type === 'dynamicField') {\r\n            var messageData = this.state.templateMessage + \" \" + value;\r\n            this.setState({ templateMessage: messageData, dynamicField: \"\" });\r\n        }\r\n\r\n        if(type === 'dynamicFieldForSubject'){\r\n            var subjectData = this.state.subject + \" \" + value;\r\n            this.setState({subject: subjectData, dynamicFieldForSubject : \"\"}); \r\n        }\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        if (e.target.name === 'isThirdParty') {\r\n            if (e.target.checked) {\r\n                this.setState({ isThirdParty: e.target.checked, isThirdPartyError: false });\r\n            } else {\r\n                this.setState({ isThirdParty: e.target.checked, isThirdPartyError: true });\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'fileName') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ fileNameError: true, fileName: e.target.value });\r\n                this.show(\"fileName\", true, \"fileNameError\", \"Please Enter FileName\");\r\n            } else {\r\n                this.setState({ fileNameError: false, fileName: e.target.value });\r\n                this.show('fileName', false, \"fileNameError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'tamplateName') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ tamplateNameError: true, tamplateName: e.target.value });\r\n                this.show(\"tamplateName\", true, \"tamplateNameError\", \"Please Enter Template Name\");\r\n            } else {\r\n                \r\n                this.setState({ tamplateNameError: false, tamplateName: e.target.value });\r\n                this.show('tamplateName', false, \"tamplateNameError\", \"\");\r\n            }\r\n        }\r\n\r\n        if(e.target.name === 'subject'){\r\n            let val = e.target.value;\r\n            if(CommonConfig.isEmpty(val)){\r\n                this.setState({subjectError : true , subject: val});\r\n                this.show(\"subject\", true , \"subjectError\", \"Please Enter Subject\");\r\n            } else {\r\n                this.setState({subjectError: false , subject: val});\r\n                this.show('subject', false ,\"subjectError\" , \"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDetailsChange(evt) {\r\n\r\n        const data = evt.editor.getData();\r\n        if (CommonConfig.isEmpty(data)) {\r\n            this.setState({ templateMessageError: true, templateMessage: '' });\r\n            // this.show(\"customEndorsementDetails\", true);\r\n        } else {\r\n            this.setState({ templateMessageError: false, templateMessage: data });\r\n            // this.show(\"customEndorsementDetails\", false);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        const { t } = this.props;\r\n\r\n        return <div className=\"text-center\">\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\" tooltipOptions={{ position: 'bottom' }} tooltip={t(\"buttons.Edit\")} style={{ padding: 2 }} onClick={() => this.edit(rowData)} />\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltipOptions={{ position: 'bottom' }} tooltip=\"Delete\" style={{ padding: 2 }} onClick={() => this.openDeleteModal(rowData)} />\r\n        </div>;\r\n    }\r\n\r\n    openDeleteModal = (rowData) => {\r\n        debugger;\r\n        this.setState({\r\n            toggleModal: !this.state.toggleModal,\r\n            MessageTemplateId: rowData.MessageTemplateId,\r\n            templateType: rowData.templateType,\r\n            tamplateName: rowData.tamplateName,\r\n            department: rowData.department,\r\n            departmentName: rowData.departmentName,\r\n            isThirdParty: rowData.isThirdParty,\r\n            docLang: rowData.docLang,\r\n            fileName: rowData.fileName,\r\n            processType: rowData.processType,\r\n            processTypeName: rowData.processTypeName,\r\n            templateCategory: rowData.templateCategory,\r\n            templateCategoryName: rowData.templateCategoryName,\r\n            templateMessage: rowData.templateMessage,\r\n        });\r\n    }\r\n\r\n    toggleLarge = () => {\r\n        this.setState({\r\n            toggleModal: false,\r\n        });\r\n        this.reset();\r\n    }\r\n\r\n    addDocumentTemplate() {\r\n        this.setState({\r\n            MessageTemplateId: \"\",\r\n            templateType: 'Document',\r\n            showDocumentData: true,\r\n            showEmailSubject:false,\r\n            tamplateName: \"\",\r\n            docLang: \"\",\r\n            processType: \"\",\r\n            department: \"\",\r\n            isThirdParty: false,\r\n            fileName: \"\",\r\n            templateCategory: \"\",\r\n            templateMessage: \"\",\r\n            primary: true,\r\n        })\r\n    }\r\n\r\n    edit(data) {\r\n        this.setState({\r\n            MessageTemplateId: data.MessageTemplateId,\r\n            templateType: data.templateType,\r\n            tamplateName: data.tamplateName,\r\n            department: data.department,\r\n            isThirdParty: data.isThirdParty == \"No\" ? false : true,\r\n            docLang: data.docLang,\r\n            fileName: data.fileName,\r\n            processType: data.processType,\r\n            templateCategory: data.templateCategory,\r\n            templateMessage: data.templateMessage,\r\n            primary: true,\r\n            showDocumentData: (data.templateType == 'Document' ? true : false),\r\n            showEmailSubject: (data.templateType == 'Email' ? true : false)\r\n        })\r\n    }\r\n\r\n    save() {\r\n\r\n        var data = this.state.MasterDocumentsArray.filter(x => x.tamplateName == this.state.tamplateName);\r\n        console.log(\"data.....\", data);\r\n        if(data.length){\r\n            this.setState({ tamplateNameError: true });\r\n            this.show(\"tamplateName\", true, \"tamplateNameError\", \" Template Name Already Exist Please Enter another name\");\r\n            toast.error(\"Template Name Already Exist Please Enter another name\");\r\n        }             \r\n        if (this.state.tamplateNameError) {\r\n            toast.error(\"Please enter template name\");\r\n        } else if (this.state.docLangError) {\r\n            toast.error(\"Please select language\");\r\n        } else if (this.state.processTypeError && this.state.templateType == 'Document') {\r\n            toast.error(\"Please select process type\");\r\n        } else if (this.state.departmentError && this.state.templateType == 'Document') {\r\n            toast.error(\"Please select department\");\r\n        } else if (this.state.fileNameError && this.state.templateType == 'Document') {\r\n            toast.error(\"Please enter file name\");\r\n        }\r\n        //  else if (this.state.templateCategoryError) {\r\n        //     toast.error(\"Please select template category\");\r\n        // }\r\n         else if (this.state.templateMessageError) {\r\n            toast.error(\"Please enter template message\");\r\n        }else if( this.state.subjectError){\r\n            toast.error(\"Please enter Email Subject \")\r\n        }else {\r\n            console.log(this.state);\r\n            var dataToSent = {\r\n                MessageTemplateId: this.state.MessageTemplateId ? this.state.MessageTemplateId : \"\",\r\n                TemplateType: this.state.templateType,\r\n                Department: this.state.department,\r\n                TamplateName: this.state.tamplateName,\r\n                IsThirdParty: this.state.isThirdParty,\r\n                DocLang: this.state.docLang,\r\n                FileName: this.state.fileName,\r\n                EmailSubject: this.state.subject,\r\n                ProcessType: this.state.processType,\r\n                TemplateMessage: this.state.templateMessage,\r\n                TemplateCategory: this.state.templateCategory,\r\n                loggedInUserId: CommonConfig.loggedInUserId(),\r\n            }\r\n            console.log(dataToSent);\r\n            api.post('api/addUpdateMasterDocument', dataToSent).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"SaveSysConfig\", res.data);\r\n                    toast.success(res.message);\r\n                    this.setState({ primary: false });\r\n                    this.getMasterDocumentsData();\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"SaveSysConfigIN\", err);\r\n            });\r\n        }\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            MessageTemplateId: \"\",\r\n            templateType: 'Document',\r\n            showDocumentData: true,\r\n            showEmailSubject: false,\r\n            tamplateName: \"\",\r\n            docLang: \"\",\r\n            processType: \"\",\r\n            department: \"\",\r\n            isThirdParty: false,\r\n            fileName: \"\",\r\n            subject:\"\",\r\n            templateCategory: \"\",\r\n            templateMessage: \"\",\r\n            primary: false,\r\n        })\r\n    }\r\n\r\n    selectTemplateType(templateType) {\r\n        this.setState({templateMessage: ''});\r\n        if (templateType == 'Document') {\r\n            this.setState({ showDocumentData: true , showEmailSubject: false });\r\n        } else if(templateType == 'Email'){\r\n            this.setState({ showEmailSubject:true , showDocumentData: false});\r\n        }\r\n        else{\r\n            this.setState({ showDocumentData: false , showEmailSubject: false });\r\n        }\r\n        this.setState({ templateType: templateType });\r\n    }\r\n\r\n    deleteTemplate() {\r\n        let data = {\r\n            \"MessageTemplateId\": this.state.MessageTemplateId,\r\n            \"UserId\": CommonConfig.loggedInUserId(),\r\n            \"Status\": \"Inactive\",\r\n            \"loggedInUserId\": CommonConfig.loggedInUserId(),\r\n        }\r\n        api.post('api/deleteTemplate', data).then(res => {\r\n            if (res.success) {\r\n                toast.success(\"Template successfully deleted\");\r\n                this.toggleLarge();\r\n                this.getMasterDocumentsData();\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"this.state\", this.state.docLang);\r\n\r\n\r\n        const { t } = this.props;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1> Documents </h1>\r\n\r\n                    <div className=\"header-right-option\">\r\n\r\n                        <div style={{ textAlign: 'right' }}>\r\n                            <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n                            <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder={t(\"translation:labels.globalSearchLabel\")} size=\"30\" style={{ marginRight: 10 }} />\r\n                        </div>\r\n\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-plus\" tooltip=\"Add Document Template\" tooltipOptions={{ position: 'bottom' }} onClick={() => this.addDocumentTemplate()}></Button>\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.MasterDocumentsArray}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.MasterDocumentsArray.length}\r\n                        exportFilename=\"Document Template List\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage=\"No records found\"\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollable={true}\r\n                        scrollHeight=\"340px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.primary} toggle={this.reset}\r\n                    className={'modal-lg modal-primary ' + this.props.className} style={{ maxWidth: \"1000px\" }}>\r\n                    <ModalHeader toggle={this.reset}> {this.state.heading} Document Template </ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col md=\"2\">\r\n                                <label>Template Type</label>\r\n                            </Col>\r\n                            <Col md=\"10\">\r\n                                {this.state.templateTypeList.map((ct, i) => {\r\n                                    return (\r\n                                        <div className=\"rc-inline\" style={{ display: \"initial\" }}>\r\n                                            <label>\r\n                                                <Input type=\"radio\" name=\"Document\" checked={this.state.templateType === ct.StringMapName}\r\n                                                    value={ct.StringMapName} onChange={(e) => this.selectTemplateType(ct.StringMapName)} /> {ct.StringMapName}\r\n                                            </label>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: \"10px\" }}>\r\n                            <Col md=\"2\">\r\n                                <label>Name</label>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Input type=\"text\" name=\"tamplateName\" id=\"tamplateName\"\r\n                                    placeholder=\"Enter File Template Name\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                    value={this.state.tamplateName}\r\n                                />\r\n                                <em id=\"tamplateNameError\" className=\"error invalid-feedback\"></em>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: \"10px\" }}>\r\n                            <Col md=\"2\">\r\n                                <label>Language</label>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Input type=\"select\" name=\"docLang\" id=\"docLang\" onChange={(e) => this.selectType(e.target.value, 'docLang')} value={this.state.docLang}>\r\n                                    <option value=''>Select Langage</option>\r\n                                    {this.state.languageList.map((ct, i) => {\r\n                                        return (<option value={ct.Language} key={i}>{ct.Language}</option>)\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                                <em id=\"docLangError\" className=\"error invalid-feedback\"></em>\r\n                            </Col>\r\n                        </Row>\r\n                        {(this.state.showDocumentData) ? (\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"2\">\r\n                                    <label>Process</label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                    <Input type=\"select\" name=\"processType\" id=\"processType\" onChange={(e) => this.selectType(e.target.value, 'processType')} value={this.state.processType}>\r\n                                        <option value=''>Select Process</option>\r\n                                        {this.state.documentListType.map((ct, i) => {\r\n                                            return (<option value={ct.StringMapId} key={i}>{ct.StringMapName}</option>)\r\n                                        })\r\n                                        }\r\n                                    </Input>\r\n                                    <em id=\"processTypeError\" className=\"error invalid-feedback\"></em>\r\n                                </Col>\r\n                                <Col md=\"2\">\r\n                                    <label>Department</label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                    <Input type=\"select\" name=\"department\" id=\"department\" onChange={(e) => this.selectType(e.target.value, 'department')} value={this.state.department}>\r\n                                        <option value=''>Select Department</option>\r\n                                        {this.state.departmentList.map((ct, i) => {\r\n                                            return (<option value={ct.StringMapId} key={i}>{ct.StringMapName}</option>)\r\n                                        })\r\n                                        }\r\n                                    </Input>\r\n                                    <em id=\"departmentError\" className=\"error invalid-feedback\"></em>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : ''}\r\n                        {(this.state.showDocumentData) ? (\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"2\">\r\n                                    <label>Third Party</label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                    <Input type=\"checkbox\" name=\"isThirdParty\" id=\"isThirdParty\" onChange={(e) => this.handleChange(e)} value={this.state.isThirdParty} checked={this.state.isThirdParty} style={{ marginLeft: \"10px\" }} >\r\n                                    </Input>\r\n                                </Col>\r\n                                <Col md=\"2\">\r\n                                    <label>File Name</label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                    <Input type=\"text\" name=\"fileName\" id=\"fileName\"\r\n                                        placeholder=\"Enter File Name\"\r\n                                        onChange={(e) => this.handleChange(e)}\r\n                                        value={this.state.fileName}\r\n                                    />\r\n                                    <em id=\"fileNameError\" className=\"error invalid-feedback\"></em>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : ''}\r\n                        <Row style={{ marginTop: \"10px\" }}>\r\n                            <Col md=\"2\">\r\n                                <label>Template Category</label>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Input type=\"select\" name=\"templateCategory\" id=\"templateCategory\" onChange={(e) => this.selectType(e.target.value, 'templateCategory')} value={this.state.templateCategory}>\r\n                                    <option value=''>Select Template Category</option>\r\n                                    {this.state.templateCategoryList.map((ct, i) => {\r\n                                        return (<option value={ct.StringMapId} key={i}>{ct.StringMapName}</option>)\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                                <em id=\"templateCategoryError\" className=\"error invalid-feedback\"></em>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.showEmailSubject ?(\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"2\">\r\n                                    <label>Email Subject </label>\r\n                                </Col>\r\n                                <Col md=\"4\">    \r\n                                    <Input type=\"text\" name=\"subject\" id=\"subject\"\r\n                                        placeholder=\"Enter Email Subject\"\r\n                                        onChange={(e) => this.handleChange(e)}\r\n                                        value={this.state.subject}\r\n                                    />\r\n                                    <em id=\"subjectError\" className=\"error invalid-feedback\"></em>\r\n                                </Col>\r\n                                <Col md=\"2\">\r\n                                    <label>Pick Dynamic Field For Subject</label>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                    <Input type=\"select\" name=\"dynamicFieldForSubject\" id=\"dynamicFieldForSubject\" onChange={(e) => this.selectType(e.target.value, 'dynamicFieldForSubject')} value={this.state.dynamicFieldForSubject}>\r\n                                        <option value=''>Select Dynamic Field For Subject</option>\r\n                                        {this.state.dynamicFieldList.map((ct, i) => {\r\n                                            return (<option value={ct.Description} key={i}>{ct.StringMapName}</option>)\r\n                                        })\r\n                                        }\r\n                                    </Input>\r\n                                </Col>\r\n                            </Row>\r\n                        ) :'' }\r\n                        <Row style={{ marginTop: \"10px\" }}>\r\n                            <Col md=\"2\">\r\n                                <label>Message Text</label>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <label>Pick Dynamic Field</label>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Input type=\"select\" name=\"dynamicField\" id=\"dynamicField\" onChange={(e) => this.selectType(e.target.value, 'dynamicField')} value={this.state.dynamicField}>\r\n                                    <option value=''>Select Dynamic Field For Message</option>\r\n                                    {this.state.dynamicFieldList.map((ct, i) => {\r\n                                        return (<option value={ct.Description} key={i}>{ct.StringMapName}</option>)\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {(this.state.templateType !== 'SMS') ? (\r\n                            <Row style={{ marginTop: \"10px\" }}>\r\n                                <Col md=\"12\">\r\n                                    <CKEditor name=\"templateMessage\" id=\"templateMessage\" data={this.state.templateMessage} onChange={this.handleDetailsChange} />\r\n                                    <em id=\"templateMessageError\" className=\"error invalid-feedback\"></em>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            <>\r\n                                <Row style={{ marginTop: \"10px\" }}>\r\n                                    <Col md=\"12\">\r\n                                        <Input name=\"templateMessage\" rows=\"10\" type=\"textarea\" id=\"templateMessage\" className=\"\" onChange={e => this.handleChange(e)} value={this.state.templateMessage} />\r\n                                        <em id=\"templateMessageError\" className=\"error invalid-feedback\"></em>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"12\">\r\n                                        {this.state.docLang =='English'?\r\n                                        <>\r\n                                        <label><i>Note: Maximum Length For SMS is 180 Character</i> </label>\r\n                                        </>\r\n                                        : (this.state.docLang == 'Spanish') ?\r\n                                         <><label><i>Note: Maximum Length For SMS is 90 Character</i> </label></>\r\n                                         : null} \r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                            )}\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.save()}><i class=\"fa fa-check\"></i> Save </BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={() => this.reset()}><i class=\"fa fa-close\"></i> Cancel </BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLarge}>Delete Template</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure, You want to delete {this.state.templateType} {this.state.tamplateName} Template?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.deleteTemplate()}><i class=\"fa fa-check\"></i> Delete</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-close\"></i>Cancel</BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Documents);"]},"metadata":{},"sourceType":"module"}