{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/SubAgentStatement.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, InputGroup, CardBody, Row, Col } from 'reactstrap';\nimport APIConstant from '../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\n\nclass SubAgentStatement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange1 = (id, e) => {\n      try {\n        debugger;\n        console.log(\"arr1\", this.state.arr1);\n\n        if (Number(this.state.arr1[id].YCommissionAmount) >= Number(e.target.value)) {\n          var total = 0;\n          this.state.arr1[id].amttobepaid = e.target.value;\n\n          for (let index = 0; index < this.state.arr1.length; index++) {\n            const element = this.state.arr1[index];\n\n            if (index != this.state.arr1.length - 1) {\n              total = Number(total) + Number(this.state.arr1[index].amttobepaid);\n            } else {\n              this.state.arr1[index].amttobepaid = total;\n            }\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'tillDate') {\n        this.setState({\n          tillDate: e.target.value,\n          tillDateError: false\n        });\n        this.show('tillDate', false, 'tillDateError', '');\n      }\n\n      if (e.target.name === 'newEntryDate') {\n        if (CommonConfig.isEmpty(e.target.value)) {\n          this.setState({\n            newEntryDateError: true\n          });\n          this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\n        } else {\n          this.setState({\n            newEntryDateError: false,\n            newEntryDate: e.target.value\n          });\n          this.show(\"newEntryDate\", false, \"newEntryDateError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'policyFrom') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyFrom: ''\n          });\n        } else {\n          this.setState({\n            policyFrom: e.target.value,\n            policyTo: ''\n          });\n          this.show('policyTo', false, 'policyToError', '');\n        }\n      }\n\n      if (e.target.name === 'policyTo') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            policyTo: ''\n          });\n        } else {\n          if (!CommonConfig.isEmpty(this.state.policyFrom)) {\n            var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.policyFrom);\n\n            if (!isToDateGreater) {\n              this.show('policyTo', true, 'policyToError', 'To date must be greater then From date.');\n            } else {\n              this.show('policyTo', false, 'policyToError', '');\n            }\n          } else {\n            this.show('policyTo', false, 'policyToError', '');\n          }\n\n          this.setState({\n            policyTo: e.target.value\n          });\n        }\n      }\n    };\n\n    this.mulSelVal = e => {\n      console.log(\"mulSelVal\", e);\n\n      if (e.value.length == 0) {\n        this.setState({\n          agentinfoError: true,\n          agentinfo: e.value\n        });\n        this.show('agentinfo', true);\n      } else {\n        this.setState({\n          agentinfoError: false,\n          agentinfo: e.value\n        });\n        this.show('agentinfo', false);\n      } // console.log(\"Afdsas\", this.state.Task_Followers);\n\n    };\n\n    let columns = [{\n      body: this.actionTemplate.bind(this),\n      field: \"Select\",\n      header: \"Select\",\n      sortable: false,\n      id: \"checkbox\",\n      style: {\n        'width': '45px'\n      }\n    }, {\n      field: \"AgentName\",\n      header: \"Agent Name\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '80px'\n      }\n    }, // { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 3, style: { 'width': '80px' } },\n    {\n      field: \"TransactionDate\",\n      header: \"Transaction Date\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"TransactionType\",\n      header: \"Transaction Type\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '90px'\n      }\n    }, {\n      field: \"NetPremium\",\n      header: \"Net Premium\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Levy\",\n      header: \"Levy\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AdminFeeAmount\",\n      header: \"Admin Fee\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Gross\",\n      header: \"Gross Amount\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AgentCommissionAmount\",\n      header: \"Agent Commission Amount\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Amount Due to Yachtsman\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"DueDate\",\n      header: \"Due Date\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '80px'\n      }\n    } // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15, style: { 'width': '60px', 'textAlign': 'right' } },\n    ];\n    let columns1 = [{\n      field: \"AgentName\",\n      header: \"Agent Name\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"AgentCode\",\n      header: \"Agent Code\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, // { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 5, style: { 'width': '80px' } },\n    {\n      field: \"TransactionDate\",\n      header: \"Transaction Date\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"TransactionType\",\n      header: \"Transaction Type\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '90px'\n      }\n    }, {\n      field: \"NetPremium\",\n      header: \"Net Premium\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Levy\",\n      header: \"Levy\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AdminFeeAmount\",\n      header: \"Admin Fee\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Gross\",\n      header: \"Gross Amount\",\n      sortable: true,\n      filter: true,\n      id: 11,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AgentCommissionAmount\",\n      header: \"Agent Commission Amount\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Amount Due to Yachtsman\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"DueDate\",\n      header: \"Due Date\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '80px'\n      }\n    } // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15, style: { 'width': '60px', 'textAlign': 'right' } },\n    ];\n    let columns2 = [{\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Amount Due to Yachtsman\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 3, style: { 'width': '60px', 'textAlign': 'right' } },\n    {\n      body: this.Outstandingamt.bind(this),\n      field: \"DueAmt\",\n      header: \"Outstanding Amount\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      body: this.actionamttobepaid.bind(this),\n      field: \"Paying\",\n      header: \"Amount being paid\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      cols1: columns1,\n      cols2: columns2,\n      showcol2: false,\n      arr: [],\n      arr1: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      selected: {},\n      selectedPolicy: 0,\n      selectedAgent: '',\n      selectAll: 0,\n      isMonthYear: true,\n      newEntryDate: moment().format('YYYY-MM-DD'),\n      newEntryDateError: false,\n      paymentMode: '',\n      paymentModearr: [],\n      paymentModeError: false,\n      monthArray: [],\n      policyMonth: moment().format('M'),\n      policyMonthError: false,\n      yearArray: [],\n      policyYear: moment().format('YYYY'),\n      policyYearError: false,\n      policyFrom: '',\n      policyFromError: false,\n      policyTo: '',\n      policyToError: false,\n      note: '',\n      DebtorType: 'SubAgent',\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      tillDate: moment().format(\"YYYY-MM\"),\n      tillDateError: false,\n      isFilterTableShow: false,\n      custom: true,\n      tab2Title: \"Select Policies\"\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      if (col.header != \"Select\") this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.colOptions1 = [];\n\n    for (let col of columns1) {\n      if (col.header != \"Select\") this.colOptions1.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.colOptions2 = [];\n\n    for (let col of columns2) {\n      this.colOptions1.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    console.log(\"this.colOptionsthis.colOptions\", this.colOptions);\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPaymentMode();\n    this.getOrganazationData('SubAgent');\n    this.getDropdown();\n  }\n\n  getPaymentMode() {\n    try {\n      const data = {\n        stringmaptype: 'PAYMENTMODE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var paymentMode = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            paymentMode.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            paymentModearr: paymentMode\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  changeSubAgentDateView() {\n    this.setState({\n      isMonthYear: !this.state.isMonthYear\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  actionamttobepaid(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"amttobepaid\",\n      name: \"amttobepaid\",\n      min: \"0\",\n      max: rowData.YCommissionAmount,\n      value: rowData.amttobepaid,\n      onChange: e => this.handleChange1(rowData.id, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  Outstandingamt(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, parseFloat(rowData.YCommissionAmount - rowData.PaidAmount).toFixed(2)));\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.arr.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  DateDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, rowData.RenewalDate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, rowData.InceptionDate));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getDropdown() {\n    // Get Month\n    let monthArray = [{\n      label: 'January',\n      value: 1\n    }, {\n      label: 'February',\n      value: 2\n    }, {\n      label: 'March',\n      value: 3\n    }, {\n      label: 'April',\n      value: 4\n    }, {\n      label: 'May',\n      value: 5\n    }, {\n      label: 'June',\n      value: 6\n    }, {\n      label: 'July',\n      value: 7\n    }, {\n      label: 'August',\n      value: 8\n    }, {\n      label: 'September',\n      value: 9\n    }, {\n      label: 'October',\n      value: 10\n    }, {\n      label: 'November',\n      value: 11\n    }, {\n      label: 'December',\n      value: 12\n    }];\n    this.setState({\n      monthArray: monthArray\n    }); // Get Year - Get last 10 year from current year\n\n    let startYear = moment().format('YYYY');\n    let yearArray = [];\n\n    for (let index = startYear; index >= parseInt(startYear) - 10; index--) {\n      yearArray.push({\n        label: index,\n        value: index\n      });\n    }\n\n    this.setState({\n      yearArray: yearArray\n    });\n  }\n\n  subagentstatement() {\n    if (this.state.isMonthYear) {\n      var ShowMonth = this.state.policyMonth;\n      if (ShowMonth === \"\") this.state.policyMonth = new Date().getMonth() + 2;else if (ShowMonth === \"All\") this.state.policyMonth = 1;\n      if (this.state.policyYear === \"\") this.state.policyYear = new Date().getFullYear();\n      var startDate = moment([parseInt(this.state.policyYear), parseInt(this.state.policyMonth) - 1]).format('YYYY-MM-DD');\n      if (ShowMonth === '' || ShowMonth === 'All') var endDate = moment(startDate).endOf('year').format('YYYY-MM-DD');else var endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n    } else {\n      var startDate = moment(this.state.policyFrom).format('YYYY-MM-DD');\n      var endDate = moment(this.state.policyTo).format('YYYY-MM-DD');\n    }\n\n    var data = {\n      DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\n      agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\n      tillDate: this.state.tillDate ? this.state.tillDate : '',\n      endDate: endDate,\n      startDate: startDate\n    };\n    api.post('api/subagentstatement', data).then(res => {\n      console.log(\"subagentstatement\", res);\n\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        debugger;\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          var NetPremium = 0;\n          var Levy = 0;\n          var PaidAmount = 0;\n          var Gross = 0;\n          var AdminFeeAmount = 0;\n          var AgentCommissionAmount = 0;\n          var YCommissionAmount = 0;\n\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            formattedData.push({\n              id: i,\n              UniqueReferenceId: tempData.UniqueReferenceId,\n              ClientName: tempData.ClientName,\n              AgentCode: tempData.AgentContactCode,\n              AgentName: tempData.AgentName,\n              PolicyNumber: tempData.PolicyNumber,\n              RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\n              TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\n              TransactionType: tempData.Description,\n              NetPremium: parseFloat(tempData.Premium ? tempData.Premium : 0).toFixed(2),\n              Levy: parseFloat(tempData.Levy ? tempData.Levy : 0).toFixed(2),\n              Gross: parseFloat(tempData.Gross ? tempData.Gross : 0).toFixed(2),\n              // InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\n              RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\n              // PaidAmount: parseFloat(tempData.PaymentAmount ? tempData.PaymentAmount : 0).toFixed(2),\n              amttobepaid: parseFloat(tempData.YCommissionAmount ? tempData.YCommissionAmount : 0).toFixed(2) - parseFloat(tempData.PaymentAmount ? tempData.PaymentAmount : 0).toFixed(2),\n              AdminFeeAmount: parseFloat(tempData.AdminFee ? tempData.AdminFee : 0).toFixed(2),\n              TotalDue: parseFloat(tempData.Outstanding ? tempData.Outstanding : 0).toFixed(2),\n              AgentCommissionRate: parseFloat(tempData.AgentCommissionRate ? tempData.AgentCommissionRate : 0).toFixed(2),\n              AgentCommissionAmount: parseFloat(tempData.AgentCommissionAmount ? tempData.AgentCommissionAmount : 0).toFixed(2),\n              YCommissionAmount: parseFloat(tempData.YCommissionAmount ? tempData.YCommissionAmount : 0).toFixed(2),\n              DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\n              DayAfterDueDate: tempData.DayAfterDueDate\n            });\n            NetPremium = NetPremium + tempData.Premium;\n            Levy = Levy + tempData.Levy;\n            PaidAmount = PaidAmount + tempData.PaymentAmount;\n            Gross = Gross + tempData.Gross;\n            AdminFeeAmount = AdminFeeAmount + tempData.AdminFee;\n            AgentCommissionAmount = AgentCommissionAmount + tempData.AgentCommissionAmount;\n            YCommissionAmount = YCommissionAmount + tempData.YCommissionAmount;\n          }\n\n          formattedData.push({\n            ClientName: 'Total',\n            Gross: parseFloat(Gross).toFixed(2),\n            NetPremium: parseFloat(NetPremium).toFixed(2),\n            Levy: parseFloat(Levy).toFixed(2),\n            PaidAmount: parseFloat(PaidAmount).toFixed(2),\n            AdminFeeAmount: parseFloat(AdminFeeAmount).toFixed(2),\n            AgentCommissionAmount: parseFloat(AgentCommissionAmount).toFixed(2),\n            YCommissionAmount: parseFloat(YCommissionAmount).toFixed(2)\n          });\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str,\n          isFilterTableShow: true\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData(fMode) {\n    if (this.state.agentinfo == '') {\n      toast.error(\"Select Sub Agent First\");\n      return false;\n    } else if (this.state.isMonthYear) {\n      console.log(\"this.state.policyMonth\", this.state.policyMonth);\n\n      if (CommonConfig.isEmpty(this.state.policyMonth) || CommonConfig.isEmpty(this.state.policyYear)) {\n        toast.error('Please select Month and Year.');\n        return false;\n      }\n    } else {\n      if (CommonConfig.isEmpty(this.state.policyFrom) && CommonConfig.isEmpty(this.state.policyTo)) {\n        toast.error('Please select from date and to date.');\n        return false;\n      }\n    }\n\n    if (fMode == 1) {\n      this.setState({\n        selected: [],\n        selectedPolicy: 0\n      });\n    }\n\n    this.subagentstatement();\n  }\n\n  onRadioBtnClick() {\n    this.setState({\n      agentinfo: ''\n    });\n\n    if (this.state.isMonthYear) {\n      if (CommonConfig.isEmpty(this.state.policyMonth) && CommonConfig.isEmpty(this.state.policyYear)) {\n        toast.error('Please select Month and Year.');\n        return false;\n      }\n    } else {\n      if (CommonConfig.isEmpty(this.state.policyFrom) && CommonConfig.isEmpty(this.state.policyTo)) {\n        toast.error('Please To Date and From Date.');\n        return false;\n      }\n    }\n\n    this.state.agentinfo = '';\n    this.subagentstatement();\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'paymentMode') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          paymentModeError: true,\n          paymentMode: value\n        });\n        this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\n      } else {\n        this.setState({\n          paymentModeError: false,\n          paymentMode: value\n        });\n        this.show('paymentMode', false, \"paymentModeError\", \"\");\n      }\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        DebtorType: 'SubAgent'\n      });\n    }\n\n    if (type === 'policyMonth') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyMonth: ''\n        });\n      } else {\n        this.setState({\n          policyMonth: value.value\n        });\n      }\n    }\n\n    if (type === 'policyYear') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          policyYear: ''\n        });\n      } else {\n        this.setState({\n          policyYear: value.value\n        });\n      }\n    }\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  PaymentData(mMode) {\n    this.filterData(\"0\");\n\n    if (this.state.selectAll != 0) {\n      var mainarr = this.state.arr;\n      this.state.showcol2 = true;\n      this.setState({\n        showcol2: true\n      });\n      var o = this.state.selected;\n      var mainarr1 = [];\n      var mainagent = '';\n      var mainindex = 0;\n      var i = 0;\n      var Totalamt = 0;\n      var YCommissionAmount = 0;\n      var PaidAmount = 0;\n      Object.keys(o).forEach(function (key) {\n        var val = o[key];\n\n        if (val) {\n          var pusharr = '';\n          pusharr = mainarr[key];\n          pusharr.id = i;\n          Totalamt = Number(Totalamt) + Number(pusharr.amttobepaid);\n          YCommissionAmount = Number(YCommissionAmount) + Number(pusharr.YCommissionAmount);\n          PaidAmount = Number(PaidAmount) + Number(pusharr.PaidAmount);\n          mainagent = mainarr[key].AgentName;\n          mainarr1.push(pusharr);\n          i = i + 1;\n          mainindex = mainarr1.length;\n        }\n      });\n      var totalarr = {\n        ClientName: 'Total',\n        amttobepaid: parseFloat(Totalamt ? Totalamt : 0).toFixed(2),\n        PaidAmount: parseFloat(PaidAmount ? PaidAmount : 0).toFixed(2),\n        YCommissionAmount: parseFloat(YCommissionAmount ? YCommissionAmount : 0).toFixed(2)\n      };\n      mainarr1.push(totalarr);\n      this.state.arr1 = mainarr1;\n      this.state.selectedPolicy = mainindex;\n      this.state.selectedAgent = mainagent;\n      var tTitle = \"\";\n\n      if (mMode) {\n        tTitle = \"Selected Policies\";\n      } else {\n        tTitle = \"Select Policies\";\n      }\n\n      this.setState({\n        arr1: mainarr1,\n        selectedPolicy: mainindex,\n        selectedAgent: mainagent,\n        tab2Title: tTitle\n      });\n      setTimeout(() => {\n        this.setState({\n          isFilterTableShow: false\n        });\n      }, 1200);\n    }\n  }\n\n  RecordPayment() {\n    debugger;\n    var newdata = {\n      mainarr: this.state.arr1,\n      newEntryDate: this.state.newEntryDate,\n      note: this.state.note,\n      paymentMode: this.state.paymentMode,\n      loggedInUserId: CommonConfig.loggedInUserId()\n    };\n\n    if (CommonConfig.isEmpty(this.state.newEntryDate) || this.state.newEntryDateError) {\n      this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\n      return;\n    }\n\n    if (CommonConfig.isEmpty(this.state.paymentMode) || this.state.paymentModeError) {\n      this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\n      return;\n    }\n\n    api.post('api/newRecordPayment', newdata).then(res => {\n      console.log(\"res\", res);\n\n      if (res.success) {\n        toast.success(res.data);\n        window.location.reload();\n      } else {\n        toast.error(res.data);\n        window.location.reload();\n      }\n    });\n  } // RecordPayment() {\n  //     var newdata = {\n  //         PolicyId: '6864a05c-beb4-46f5-843a-6cd2c327c3ef',\n  //         ProcessType: 'Quotation',\n  //     }\n  //     api.post('api/sendQuotationDocument', newdata).then(res => {\n  //         console.log(\"res\", res);\n  //     });\n  // }\n\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = '';\n    let columns1 = ''; // if (this.state.agentinfo == '') {\n\n    columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 24\n        }\n      });\n    });\n\n    if (this.state.arr1.length > 0) {\n      columns1 = this.state.cols2.map((col2, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col2.field,\n          header: col2.header,\n          body: col2.body,\n          sortable: col2.sortable,\n          filter: col2.filter,\n          filterMatchMode: col2.filterMatchMode,\n          style: col2.style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 24\n          }\n        });\n      });\n    } else {\n      columns = this.state.cols.map((col, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col.field,\n          header: col.header,\n          body: col.body,\n          sortable: col.sortable,\n          filter: col.filter,\n          filterMatchMode: col.filterMatchMode,\n          style: col.style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 24\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 21\n      }\n    }, \"Sub Agent Statement\"), /*#__PURE__*/React.createElement(\"div\", {\n      md: \"3\",\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: \"left\"\n      },\n      onClick: () => this.export(),\n      style: {\n        marginRight: 10,\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        custom: !this.state.custom\n      }),\n      \"aria-expanded\": this.state.custom,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 33\n      }\n    }, \"Search Sub Agent\", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 41\n      }\n    }, \"Select Agent\"), /*#__PURE__*/React.createElement(MultiSelect, {\n      name: \"agentinfo\",\n      id: \"agentinfo\",\n      options: this.state.sourceList,\n      value: this.state.agentinfo,\n      onChange: e => this.mulSelVal(e),\n      filter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 41\n      }\n    })), this.state.isMonthYear ? /*#__PURE__*/React.createElement(Col, {\n      md: \"1.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 63\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyMonth\",\n      id: \"policyMonth\",\n      value: this.state.policyMonth,\n      onChange: e => this.selectType(e.target, 'policyMonth'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 73\n      }\n    }, \"Select Month\"), this.state.monthArray.map((month, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month.value,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 85\n        }\n      }, month.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyMonthError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 69\n      }\n    }))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 73\n      }\n    }, \"From\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"policyFrom\",\n      id: \"policyFrom\",\n      value: this.state.policyFrom,\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyFromError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 73\n      }\n    }))), this.state.isMonthYear ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 69\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"policyYear\",\n      id: \"policyYear\",\n      value: this.state.policyYear,\n      onChange: e => this.selectType(e.target, 'policyYear'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 73\n      }\n    }, \"Select Year\"), this.state.yearArray.map((year, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: year.value,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 85\n        }\n      }, year.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyYearError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 69\n      }\n    }))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 73\n      }\n    }, \"To\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"policyTo\",\n      id: \"policyTo\",\n      value: this.state.policyTo,\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"policyToError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 73\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"1.5\",\n      style: {\n        alignSelf: 'center',\n        paddingRight: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 57\n      }\n    }, this.state.isMonthYear ? /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        textDecoration: 'underline'\n      },\n      onClick: () => this.changeSubAgentDateView(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 65\n      }\n    }, \"Change to Date Range\") : /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        textDecoration: 'underline'\n      },\n      onClick: () => this.changeSubAgentDateView(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 69\n      }\n    }, \"Change to Month/Year\")), this.state.arr1.length > 0 ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2.5\",\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(\"1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 61\n      }\n    }, \" Selected Sub-Agent Search \")) : null, this.state.arr1.length > 0 ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.onRadioBtnClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 57\n      }\n    }, \" All Sub-Agent Search \")) : null, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 57\n      }\n    }, this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2.5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 65\n      }\n    }) : /*#__PURE__*/React.createElement(Col, {\n      md: \"3.5\",\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(\"0\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 65\n      }\n    }, \" Selected Sub-Agent Search \")), this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 69\n      }\n    }, \"Selected Policy\")) : /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.onRadioBtnClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 65\n      }\n    }, \" All Sub-Agent Search \")), this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 69\n      }\n    }, \" \", this.state.selectedPolicy)) : /*#__PURE__*/React.createElement(Col, {\n      md: \"4.5\",\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Payment\",\n      onClick: () => this.PaymentData(\"0\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 69\n      }\n    }, \" Update Policy List \")))), this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 45\n      }\n    }, \"Transaction Date(*)\") : null, this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"newEntryDate\",\n      id: \"newEntryDate\",\n      placeholder: \"transaction date\",\n      onBlur: e => this.handleChange(e),\n      onChange: e => this.handleChange(e),\n      value: this.state.newEntryDate,\n      min: moment().subtract(100, 'years').format('DD-MM-YYYY'),\n      max: moment().format('DD-MM-YYYY'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"newEntryDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 53\n      }\n    }))) : null, this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 45\n      }\n    }, \" Payment Mode(*)\") : null, this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"paymentMode\",\n      id: \"paymentMode\",\n      onChange: e => this.selectType(e.target.value, 'paymentMode'),\n      value: this.state.paymentMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 53\n      }\n    }, \"Select payment mode\"), this.state.paymentModearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 65\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"paymentModeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 49\n      }\n    })) : null, this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 45\n      }\n    }, \" Note \") : null, this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"note\",\n      type: \"textarea\",\n      id: \"note\",\n      onChange: e => this.handleChange(e),\n      onBlur: e => this.handleChange(e),\n      value: this.state.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 49\n      }\n    })) : null, this.state.showcol2 == true ? /*#__PURE__*/React.createElement(Col, {\n      style: {\n        textAlign: \"center\",\n        marginTop: '1%'\n      },\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Payment\",\n      onClick: () => this.PaymentData(\"1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 57\n      }\n    }, \" Update Policy List \")), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"RecordPayment\",\n      onClick: () => this.RecordPayment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 57\n      }\n    }, \" Record Payment \")))) : null)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.setState({\n        isFilterTableShow: !this.state.isFilterTableShow\n      }),\n      \"aria-expanded\": this.state.isFilterTableShow,\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 37\n      }\n    }, this.state.tab2Title), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.isFilterTableShow ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.isFilterTableShow,\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Sub Agent Statement\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 33\n      }\n    }, columns))))), this.state.arr1.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr1,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Sub Agent Statement\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 25\n      }\n    }, columns1)) : null);\n  }\n\n}\n\nexport default withTranslation()(SubAgentStatement);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/SubAgentStatement.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","InputGroup","CardBody","Row","Col","APIConstant","Modal","ModalBody","ModalHeader","ModalFooter","toast","SearchBox","SubAgentStatement","constructor","props","handleChange1","id","e","console","log","state","arr1","Number","YCommissionAmount","target","value","total","amttobepaid","index","length","element","error","getPageString","firstPage","first","l","rows","page","lastPage","arr","str","setState","selectedPage","rowsPerPage","handleChange","name","tillDate","tillDateError","show","isEmpty","newEntryDateError","newEntryDate","policyFrom","policyTo","isToDateGreater","isSameOrAfter","mulSelVal","agentinfoError","agentinfo","columns","body","actionTemplate","bind","field","header","sortable","style","filter","columns1","columns2","Outstandingamt","actionamttobepaid","LanguageId","i18n","language","cols","cols1","cols2","showcol2","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","selected","selectedPolicy","selectedAgent","selectAll","isMonthYear","format","paymentMode","paymentModearr","paymentModeError","monthArray","policyMonth","policyMonthError","yearArray","policyYear","policyYearError","policyFromError","policyToError","note","DebtorType","DebtorTypeError","isFilterTableShow","custom","tab2Title","colOptions","col","push","label","colOptions1","colOptions2","export","componentDidMount","getPaymentMode","getOrganazationData","getDropdown","data","stringmaptype","post","path","dropdownbycode","then","res","success","i","StringMapName","Description","catch","err","toggleRow","newSelected","Object","assign","changeSubAgentDateView","rowData","column","parseFloat","PaidAmount","toFixed","toggleSelectAll","forEach","x","DateDetails","RenewalDate","InceptionDate","getDropDownValues","stringMapType","setStateName","orderBy","orderby","startYear","parseInt","subagentstatement","ShowMonth","Date","getMonth","getFullYear","startDate","endDate","endOf","formattedData","dataLength","NetPremium","Levy","Gross","AdminFeeAmount","AgentCommissionAmount","tempData","UniqueReferenceId","ClientName","AgentCode","AgentContactCode","AgentName","PolicyNumber","RenewalOrInceptionDate","TransactionDate","TransactionType","Premium","PaymentAmount","AdminFee","TotalDue","Outstanding","AgentCommissionRate","DueDate","DayAfterDueDate","dt","exportCSV","filterData","fMode","onRadioBtnClick","selectType","type","undefined","ContactType","OrganizationName","OrganizationId","sourceList","condition","errorField","message","document","getElementById","className","innerHTML","PaymentData","mMode","mainarr","o","mainarr1","mainagent","mainindex","Totalamt","keys","key","val","pusharr","totalarr","tTitle","setTimeout","RecordPayment","newdata","loggedInUserId","window","location","reload","render","t","map","filterMatchMode","col2","columnToggleIcon","position","onColumnToggle","width","marginRight","cursor","float","month","year","alignSelf","paddingRight","textDecoration","marginTop","subtract","textAlign","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, InputGroup, CardBody, Row, Col } from 'reactstrap';\r\nimport APIConstant from '../../utils/constants';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\r\n\r\nclass SubAgentStatement extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n            { field: \"AgentName\", header: \"Agent Name\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 1, style: { 'width': '60px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 2, style: { 'width': '80px' } },\r\n            // { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 3, style: { 'width': '80px' } },\r\n            { field: \"TransactionDate\", header: \"Transaction Date\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            { field: \"TransactionType\", header: \"Transaction Type\", sortable: true, filter: true, id: 5, style: { 'width': '90px' } },\r\n            { field: \"NetPremium\", header: \"Net Premium\", sortable: true, filter: true, id: 6, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Levy\", header: \"Levy\", sortable: true, filter: true, id: 7, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AdminFeeAmount\", header: \"Admin Fee\", sortable: true, filter: true, id: 8, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Gross\", header: \"Gross Amount\", sortable: true, filter: true, id: 9, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AgentCommissionAmount\", header: \"Agent Commission Amount\", sortable: true, filter: true, id: 12, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"YCommissionAmount\", header: \"Amount Due to Yachtsman\", sortable: true, filter: true, id: 13, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"DueDate\", header: \"Due Date\", sortable: true, filter: true, id: 14, style: { 'width': '80px' } },\r\n            // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15, style: { 'width': '60px', 'textAlign': 'right' } },\r\n        ];\r\n        let columns1 = [\r\n            { field: \"AgentName\", header: \"Agent Name\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"AgentCode\", header: \"Agent Code\", sortable: true, filter: true, id: 1, style: { 'width': '100px' } },\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 2, style: { 'width': '100px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 3, style: { 'width': '60px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            // { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 5, style: { 'width': '80px' } },\r\n            { field: \"TransactionDate\", header: \"Transaction Date\", sortable: true, filter: true, id: 6, style: { 'width': '80px' } },\r\n            { field: \"TransactionType\", header: \"Transaction Type\", sortable: true, filter: true, id: 7, style: { 'width': '90px' } },\r\n            { field: \"NetPremium\", header: \"Net Premium\", sortable: true, filter: true, id: 8, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Levy\", header: \"Levy\", sortable: true, filter: true, id: 9, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AdminFeeAmount\", header: \"Admin Fee\", sortable: true, filter: true, id: 10, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Gross\", header: \"Gross Amount\", sortable: true, filter: true, id: 11, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AgentCommissionAmount\", header: \"Agent Commission Amount\", sortable: true, filter: true, id: 12, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"YCommissionAmount\", header: \"Amount Due to Yachtsman\", sortable: true, filter: true, id: 13, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"DueDate\", header: \"Due Date\", sortable: true, filter: true, id: 14, style: { 'width': '80px' } },\r\n            // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15, style: { 'width': '60px', 'textAlign': 'right' } },\r\n        ];\r\n\r\n        let columns2 = [\r\n\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 1, style: { 'width': '60px' } },\r\n            { field: \"YCommissionAmount\", header: \"Amount Due to Yachtsman\", sortable: true, filter: true, id: 2, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 3, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { body: this.Outstandingamt.bind(this), field: \"DueAmt\", header: \"Outstanding Amount\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            { body: this.actionamttobepaid.bind(this), field: \"Paying\", header: \"Amount being paid\", sortable: true, filter: true, id: 5, style: { 'width': '60px', 'textAlign': 'right' } },\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            cols1: columns1,\r\n            cols2: columns2,\r\n            showcol2: false,\r\n            arr: [],\r\n            arr1: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            isMonthYear: true,\r\n            newEntryDate: moment().format('YYYY-MM-DD'),\r\n            newEntryDateError: false,\r\n            paymentMode: '',\r\n            paymentModearr: [],\r\n            paymentModeError: false,\r\n            monthArray: [],\r\n            policyMonth: moment().format('M'),\r\n            policyMonthError: false,\r\n            yearArray: [],\r\n            policyYear: moment().format('YYYY'),\r\n            policyYearError: false,\r\n            policyFrom: '',\r\n            policyFromError: false,\r\n            policyTo: '',\r\n            policyToError: false,\r\n            note: '',\r\n            DebtorType: 'SubAgent',\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            tillDate: moment().format(\"YYYY-MM\"),\r\n            tillDateError: false,\r\n            isFilterTableShow: false,\r\n            custom: true,\r\n            tab2Title: \"Select Policies\",\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            if(col.header !=\"Select\")\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.colOptions1 = [];\r\n        for (let col of columns1) {\r\n            if(col.header !=\"Select\")\r\n            this.colOptions1.push({ label: col.header, value: col });\r\n        }\r\n        this.colOptions2 = [];\r\n        for (let col of columns2) {\r\n            this.colOptions1.push({ label: col.header, value: col });\r\n        }\r\n        console.log(\"this.colOptionsthis.colOptions\",this.colOptions);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPaymentMode();\r\n        this.getOrganazationData('SubAgent');\r\n        this.getDropdown();\r\n    }\r\n\r\n    getPaymentMode() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'PAYMENTMODE',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var paymentMode = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        paymentMode.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ paymentModearr: paymentMode });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n    changeSubAgentDateView() {\r\n        this.setState({ isMonthYear: !this.state.isMonthYear });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n\r\n    actionamttobepaid(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"number\"\r\n                id=\"amttobepaid\"\r\n                name=\"amttobepaid\"\r\n                min=\"0\"\r\n                max={rowData.YCommissionAmount}\r\n                value={rowData.amttobepaid}\r\n                onChange={(e) => this.handleChange1(rowData.id, e)} />\r\n        </div>;\r\n    }\r\n\r\n    handleChange1 = (id, e) => {\r\n\r\n        try {\r\n            debugger;\r\n            console.log(\"arr1\", this.state.arr1);\r\n            if(Number(this.state.arr1[id].YCommissionAmount) >= Number(e.target.value) ){\r\n                var total = 0;\r\n                this.state.arr1[id].amttobepaid = e.target.value;\r\n                for (let index = 0; index < this.state.arr1.length; index++) {\r\n                    const element = this.state.arr1[index];\r\n                    if (index != this.state.arr1.length - 1) {\r\n                        total = Number(total) + Number(this.state.arr1[index].amttobepaid);\r\n                    }\r\n                    else {\r\n                        this.state.arr1[index].amttobepaid = total;\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    Outstandingamt(rowData, column) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{parseFloat(rowData.YCommissionAmount - rowData.PaidAmount).toFixed(2)}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n\r\n    DateDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.RenewalDate}</p>\r\n                <p>{rowData.InceptionDate}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    getDropdown() {\r\n\r\n        // Get Month\r\n        let monthArray = [\r\n            { label: 'January', value: 1 },\r\n            { label: 'February', value: 2 },\r\n            { label: 'March', value: 3 },\r\n            { label: 'April', value: 4 },\r\n            { label: 'May', value: 5 },\r\n            { label: 'June', value: 6 },\r\n            { label: 'July', value: 7 },\r\n            { label: 'August', value: 8 },\r\n            { label: 'September', value: 9 },\r\n            { label: 'October', value: 10 },\r\n            { label: 'November', value: 11 },\r\n            { label: 'December', value: 12 },\r\n        ];\r\n        this.setState({ monthArray: monthArray });\r\n\r\n        // Get Year - Get last 10 year from current year\r\n        let startYear = moment().format('YYYY');\r\n        let yearArray = [];\r\n        for (let index = startYear; index >= (parseInt(startYear) - 10); index--) {\r\n            yearArray.push({ label: index, value: index });\r\n        }\r\n        this.setState({ yearArray: yearArray });\r\n\r\n     \r\n    }\r\n    subagentstatement() {\r\n        \r\n     if(this.state.isMonthYear){\r\n        var ShowMonth = this.state.policyMonth; \r\n        if (ShowMonth ===\"\")\r\n        this.state.policyMonth = new Date().getMonth() + 2;\r\n        else\r\n            if (ShowMonth ===\"All\")\r\n            this.state.policyMonth = 1;\r\n        if (this.state.policyYear ===\"\")\r\n        this.state.policyYear = new Date().getFullYear();\r\n        \r\n        var startDate = moment([parseInt(this.state.policyYear), parseInt(this.state.policyMonth) - 1]).format('YYYY-MM-DD');\r\n\r\n        if(ShowMonth ==='' || ShowMonth ==='All')\r\n        var endDate =  moment(startDate).endOf('year').format('YYYY-MM-DD');\r\n        else \r\n        var endDate =  moment(startDate).endOf('month').format('YYYY-MM-DD');\r\n    }\r\n    else\r\n    {\r\n        var startDate = moment(this.state.policyFrom).format('YYYY-MM-DD');\r\n        var endDate = moment(this.state.policyTo).format('YYYY-MM-DD');\r\n\r\n    }\r\n        var data = {\r\n            DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\r\n            agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\r\n            tillDate: this.state.tillDate ? this.state.tillDate : '',\r\n            endDate:endDate,\r\n            startDate:startDate,\r\n        };\r\n        api.post('api/subagentstatement', data).then(res => {\r\n            console.log(\"subagentstatement\",res);\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                debugger\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n\r\n                    var NetPremium = 0;\r\n                    var Levy = 0;\r\n                    var PaidAmount = 0;\r\n                    var Gross = 0;\r\n                    var AdminFeeAmount = 0;\r\n                    var AgentCommissionAmount = 0;\r\n                    var YCommissionAmount = 0;\r\n\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        formattedData.push({\r\n                            id: i,\r\n                            UniqueReferenceId: tempData.UniqueReferenceId,\r\n                            ClientName: tempData.ClientName,\r\n                            AgentCode: tempData.AgentContactCode,\r\n                            AgentName: tempData.AgentName,\r\n                            PolicyNumber: tempData.PolicyNumber,\r\n                            RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\r\n                            TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\r\n                            TransactionType: tempData.Description,\r\n                            NetPremium: parseFloat(tempData.Premium ? tempData.Premium : 0).toFixed(2),\r\n                            Levy: parseFloat(tempData.Levy ? tempData.Levy : 0).toFixed(2),\r\n                            Gross: parseFloat(tempData.Gross ? tempData.Gross : 0).toFixed(2),\r\n                            // InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\r\n                            RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\r\n                            // PaidAmount: parseFloat(tempData.PaymentAmount ? tempData.PaymentAmount : 0).toFixed(2),\r\n                            amttobepaid: (parseFloat(tempData.YCommissionAmount ? tempData.YCommissionAmount : 0).toFixed(2)) - (parseFloat(tempData.PaymentAmount ? tempData.PaymentAmount : 0).toFixed(2)),\r\n                            AdminFeeAmount: parseFloat(tempData.AdminFee ? tempData.AdminFee : 0).toFixed(2),\r\n                            TotalDue: parseFloat(tempData.Outstanding ? tempData.Outstanding : 0).toFixed(2),\r\n                            AgentCommissionRate: parseFloat(tempData.AgentCommissionRate ? tempData.AgentCommissionRate : 0).toFixed(2),\r\n                            AgentCommissionAmount: parseFloat(tempData.AgentCommissionAmount ? tempData.AgentCommissionAmount : 0).toFixed(2),\r\n                            YCommissionAmount: parseFloat(tempData.YCommissionAmount ? tempData.YCommissionAmount : 0).toFixed(2),\r\n                            DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\r\n                            DayAfterDueDate: tempData.DayAfterDueDate\r\n                        });\r\n                        NetPremium = NetPremium + tempData.Premium;\r\n                        Levy = Levy + tempData.Levy;\r\n                        PaidAmount = PaidAmount + tempData.PaymentAmount;\r\n                        Gross = Gross + tempData.Gross;\r\n                        AdminFeeAmount = AdminFeeAmount + tempData.AdminFee;\r\n                        AgentCommissionAmount = AgentCommissionAmount + tempData.AgentCommissionAmount;\r\n                        YCommissionAmount = YCommissionAmount + tempData.YCommissionAmount;\r\n                    }\r\n                    formattedData.push({\r\n                        ClientName: 'Total',\r\n                        Gross: parseFloat(Gross).toFixed(2),\r\n                        NetPremium: parseFloat(NetPremium).toFixed(2),\r\n                        Levy: parseFloat(Levy).toFixed(2),\r\n                        PaidAmount: parseFloat(PaidAmount).toFixed(2),\r\n                        AdminFeeAmount: parseFloat(AdminFeeAmount).toFixed(2),\r\n                        AgentCommissionAmount: parseFloat(AgentCommissionAmount).toFixed(2),\r\n                        YCommissionAmount: parseFloat(YCommissionAmount).toFixed(2)\r\n                    });\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str, isFilterTableShow: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData(fMode) {\r\n        if (this.state.agentinfo == '') {\r\n            toast.error(\"Select Sub Agent First\");            \r\n            return false;\r\n        } else\r\n        if (this.state.isMonthYear) { console.log(\"this.state.policyMonth\",this.state.policyMonth);\r\n            if (CommonConfig.isEmpty(this.state.policyMonth) || CommonConfig.isEmpty(this.state.policyYear)) {\r\n                toast.error('Please select Month and Year.');\r\n                return false;\r\n            }\r\n        } else {\r\n            if (CommonConfig.isEmpty(this.state.policyFrom) && CommonConfig.isEmpty(this.state.policyTo)) {\r\n                toast.error('Please select from date and to date.');\r\n                return false;\r\n            }\r\n        \r\n        }\r\n\r\n        if (fMode == 1) {\r\n            this.setState({selected: [], selectedPolicy: 0})\r\n        }\r\n        this.subagentstatement();\r\n         \r\n    }\r\n    onRadioBtnClick() {\r\n        this.setState({\r\n            agentinfo: ''\r\n        });\r\n        if (this.state.isMonthYear) {\r\n            if (CommonConfig.isEmpty(this.state.policyMonth) && CommonConfig.isEmpty(this.state.policyYear)) {\r\n                toast.error('Please select Month and Year.');\r\n                return false;\r\n            }\r\n        } else {\r\n            if (CommonConfig.isEmpty(this.state.policyFrom) && CommonConfig.isEmpty(this.state.policyTo)) {\r\n                toast.error('Please To Date and From Date.');\r\n                return false;\r\n            }\r\n        \r\n        }\r\n        this.state.agentinfo = '';\r\n        this.subagentstatement();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'tillDate') {\r\n            this.setState({ tillDate: e.target.value, tillDateError: false });\r\n            this.show('tillDate', false, 'tillDateError', '');\r\n\r\n        }\r\n        if (e.target.name === 'newEntryDate') {\r\n            if (CommonConfig.isEmpty(e.target.value)) {\r\n                this.setState({ newEntryDateError: true });\r\n                this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\r\n            } else {\r\n                this.setState({ newEntryDateError: false, newEntryDate: e.target.value });\r\n                this.show(\"newEntryDate\", false, \"newEntryDateError\", \"\");\r\n            }\r\n        }\r\n        if (e.target.name === 'policyFrom') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ policyFrom: '' });\r\n            } else {\r\n                this.setState({ policyFrom: e.target.value, policyTo: '' });\r\n                this.show('policyTo', false, 'policyToError', '');\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'policyTo') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ policyTo: '' });\r\n            } else {\r\n                if (!CommonConfig.isEmpty(this.state.policyFrom)) {\r\n                    var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.policyFrom);\r\n                    if (!isToDateGreater) {\r\n                        this.show('policyTo', true, 'policyToError', 'To date must be greater then From date.');\r\n                    } else {\r\n                        this.show('policyTo', false, 'policyToError', '');\r\n                    }\r\n                } else {\r\n                    this.show('policyTo', false, 'policyToError', '');\r\n                }\r\n                this.setState({ policyTo: e.target.value });\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n        if (type === 'paymentMode') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ paymentModeError: true, paymentMode: value });\r\n                this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\r\n            } else {\r\n                this.setState({ paymentModeError: false, paymentMode: value });\r\n                this.show('paymentMode', false, \"paymentModeError\", \"\");\r\n\r\n            }\r\n        }\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, DebtorType: 'SubAgent' });\r\n\r\n        }        \r\n\r\n        if (type === 'policyMonth') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ policyMonth: '' });\r\n            } else {\r\n                this.setState({ policyMonth: value.value });\r\n            }\r\n        }\r\n\r\n        if (type === 'policyYear') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ policyYear: '' });\r\n            } else {\r\n                this.setState({ policyYear: value.value });\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    PaymentData(mMode) {\r\n        this.filterData(\"0\");\r\n        if (this.state.selectAll != 0) {\r\n            var mainarr = this.state.arr;\r\n            this.state.showcol2 = true;\r\n            this.setState({ showcol2: true });\r\n            var o = this.state.selected;\r\n            var mainarr1 = [];\r\n            var mainagent = '';\r\n            var mainindex = 0;\r\n            var i = 0;\r\n\r\n            var Totalamt = 0;\r\n            var YCommissionAmount = 0;\r\n            var PaidAmount = 0;\r\n            Object.keys(o).forEach(function (key) {\r\n                var val = o[key];\r\n                if (val) {\r\n                    var pusharr = '';\r\n                    pusharr = mainarr[key];\r\n                    pusharr.id = i;\r\n                    Totalamt = Number(Totalamt) + Number(pusharr.amttobepaid);\r\n                    YCommissionAmount = Number(YCommissionAmount) + Number(pusharr.YCommissionAmount);\r\n                    PaidAmount = Number(PaidAmount) + Number(pusharr.PaidAmount);\r\n                    mainagent = mainarr[key].AgentName;\r\n                    mainarr1.push(pusharr);\r\n                    i = i + 1;\r\n                    mainindex = mainarr1.length;\r\n                }\r\n            });\r\n            var totalarr = {\r\n                ClientName: 'Total',\r\n                amttobepaid: parseFloat(Totalamt ? Totalamt : 0).toFixed(2),\r\n                PaidAmount: parseFloat(PaidAmount ? PaidAmount : 0).toFixed(2),\r\n                YCommissionAmount: parseFloat(YCommissionAmount ? YCommissionAmount : 0).toFixed(2),\r\n            };\r\n            mainarr1.push(totalarr);\r\n            this.state.arr1 = mainarr1;\r\n            this.state.selectedPolicy = mainindex;\r\n            this.state.selectedAgent = mainagent;\r\n            var tTitle=\"\"\r\n            if (mMode) {\r\n                tTitle=\"Selected Policies\";\r\n            }else{\r\n                tTitle=\"Select Policies\"\r\n            }   \r\n            this.setState({\r\n                arr1: mainarr1,\r\n                selectedPolicy: mainindex,\r\n                selectedAgent: mainagent,\r\n                tab2Title: tTitle\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isFilterTableShow: false\r\n                })\r\n            }, 1200);\r\n        }\r\n    }\r\n\r\n    mulSelVal = (e) => {\r\n        console.log(\"mulSelVal\", e);\r\n        if (e.value.length == 0) {\r\n          this.setState({ agentinfoError: true, agentinfo: e.value, });\r\n          this.show('agentinfo', true);\r\n        } else {\r\n          this.setState({ agentinfoError: false, agentinfo: e.value });\r\n          this.show('agentinfo', false);\r\n        }\r\n        // console.log(\"Afdsas\", this.state.Task_Followers);\r\n    \r\n      }\r\n    RecordPayment() {\r\n        debugger\r\n        var newdata = {\r\n            mainarr: this.state.arr1,\r\n            newEntryDate: this.state.newEntryDate,\r\n            note: this.state.note,\r\n            paymentMode: this.state.paymentMode,\r\n            loggedInUserId: CommonConfig.loggedInUserId()\r\n        }\r\n        if (CommonConfig.isEmpty(this.state.newEntryDate) || this.state.newEntryDateError) {\r\n            this.show(\"newEntryDate\", true, \"newEntryDateError\", \"Please enter date\");\r\n            return;\r\n        }\r\n        if (CommonConfig.isEmpty(this.state.paymentMode) || this.state.paymentModeError) {\r\n            this.show('paymentMode', true, \"paymentModeError\", \"Select payment mode\");\r\n            return;\r\n        }\r\n        api.post('api/newRecordPayment', newdata).then(res => {\r\n            console.log(\"res\", res);\r\n            if (res.success) {\r\n                toast.success(res.data);\r\n                window.location.reload();\r\n            } else {\r\n                toast.error(res.data);\r\n                window.location.reload();\r\n            }\r\n        });\r\n    }\r\n\r\n    // RecordPayment() {\r\n    //     var newdata = {\r\n    //         PolicyId: '6864a05c-beb4-46f5-843a-6cd2c327c3ef',\r\n    //         ProcessType: 'Quotation',\r\n    //     }\r\n    //     api.post('api/sendQuotationDocument', newdata).then(res => {\r\n    //         console.log(\"res\", res);\r\n    //     });\r\n    // }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n        let columns = '';\r\n        let columns1 = '';\r\n        // if (this.state.agentinfo == '') {\r\n            columns = this.state.cols.map((col, i) => {\r\n                return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n                />;\r\n            });\r\n        if (this.state.arr1.length > 0) {\r\n            columns1 = this.state.cols2.map((col2, i) => {\r\n                return <Column key={i} field={col2.field} header={col2.header} body={col2.body} sortable={col2.sortable} filter={col2.filter} filterMatchMode={col2.filterMatchMode} style={col2.style}\r\n                />;\r\n            });\r\n        }\r\n        else {\r\n            columns = this.state.cols.map((col, i) => {\r\n                return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n                />;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Sub Agent Statement</h1>\r\n                    <div md=\"3\" className=\"header-right-option\" >\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: \"left\" }} onClick={() => this.export()} style={{ marginRight: 10, cursor: \"pointer\" }}></Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Search Sub Agent\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row> \r\n                                    <Col md=\"3\">\r\n                                        <label>Select Agent</label>\r\n                                        <MultiSelect name=\"agentinfo\" id=\"agentinfo\" options={this.state.sourceList}\r\n                                            value={this.state.agentinfo} onChange={(e) => this.mulSelVal(e)} filter\r\n                                        />\r\n                                    </Col>                                         \r\n                                                      \r\n                                            {(this.state.isMonthYear) ? (\r\n                                                            <Col md=\"1.5\">\r\n                                                              \r\n                                                                <div className=\"input-box\">\r\n                                                              <label>Month</label>\r\n                                                                    <Input type=\"select\" name=\"policyMonth\" id=\"policyMonth\" value={this.state.policyMonth} onChange={(e) => this.selectType(e.target, 'policyMonth')}>\r\n                                                                        <option value=\"\">Select Month</option>\r\n                                                                        {this.state.monthArray.map((month, i) => {\r\n                                                                            return (<option value={month.value} key={i}>{month.label}</option>)\r\n                                                                        })\r\n                                                                        }\r\n                                                                    </Input>\r\n                                                                    <em id=\"policyMonthError\" className=\"error invalid-feedback\"></em>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        ) : (\r\n                                                                <Col md=\"2\">\r\n                                                                    <div className=\"input-box\">\r\n                                                                        <label>From</label>\r\n                                                                        <Input type=\"date\" name=\"policyFrom\" id=\"policyFrom\"\r\n                                                                            value={this.state.policyFrom}\r\n                                                                            onBlur={(e) => this.handleChange(e)}\r\n                                                                            onChange={(e) => this.handleChange(e)} />\r\n                                                                        <em id=\"policyFromError\" className=\"error invalid-feedback\"></em>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            )}\r\n                                                        {(this.state.isMonthYear) ? (\r\n                                                            <Col md=\"2\">\r\n                                                                <div className=\"input-box\">\r\n                                                                    <label>Year</label>\r\n                                                                    <Input type=\"select\" name=\"policyYear\" id=\"policyYear\" value={this.state.policyYear} onChange={(e) => this.selectType(e.target, 'policyYear')}>\r\n                                                                        <option value=\"\">Select Year</option>\r\n                                                                        {this.state.yearArray.map((year, i) => {\r\n                                                                            return (<option value={year.value} key={i}>{year.label}</option>)\r\n                                                                        })\r\n                                                                        }\r\n                                                                    </Input>\r\n                                                                    <em id=\"policyYearError\" className=\"error invalid-feedback\"></em>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        ) : (\r\n                                                                <Col md=\"2\">\r\n                                                                    <div className=\"input-box\">\r\n                                                                        <label>To</label>\r\n                                                                        <Input type=\"date\" name=\"policyTo\" id=\"policyTo\"\r\n                                                                            value={this.state.policyTo}\r\n                                                                            onBlur={(e) => this.handleChange(e)}\r\n                                                                            onChange={(e) => this.handleChange(e)} />\r\n                                                                        <em id=\"policyToError\" className=\"error invalid-feedback\"></em>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            )}\r\n\r\n                                                        <Col md=\"1.5\" style={{ alignSelf: 'center', paddingRight: '15px' }}>\r\n                                                            {(this.state.isMonthYear) ? (\r\n                                                                <label style={{ textDecoration: 'underline' }} onClick={() => this.changeSubAgentDateView()}>Change to Date Range</label>\r\n                                                            ) : (\r\n                                                                    <label style={{ textDecoration: 'underline' }} onClick={() => this.changeSubAgentDateView()}>Change to Month/Year</label>\r\n                                                                )}\r\n                                                        </Col>\r\n\r\n                                                        {this.state.arr1.length > 0 ?\r\n                                                        <Col md=\"2.5\" style={{marginTop:'20px'}}>\r\n                                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData(\"1\")}> Selected Sub-Agent Search </BTN>\r\n                                                        </Col>:\r\n                                                        (null)}\r\n\r\n                                                        {this.state.arr1.length > 0 ?\r\n                                                        <Col md=\"2\" style={{marginTop:'20px'}}>\r\n                                                        <BTN color=\"success\" title=\"Search\" onClick={() => this.onRadioBtnClick()}> All Sub-Agent Search </BTN>\r\n                                                        </Col>:\r\n                                                        (null)}\r\n\r\n                                                \r\n                                        \r\n                                                            \r\n                                                        <Col md=\"8\">\r\n                                                        <Row>\r\n                                                            {this.state.showcol2 == true ?\r\n                                                                <Col md=\"2.5\">\r\n                                                                    {/* <label>{this.state.selectedAgent}</label> */}\r\n                                                                </Col> : <Col md=\"3.5\" style={{marginTop:'20px'}}>\r\n                                                                <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData(\"0\")}> Selected Sub-Agent Search </BTN>\r\n                                                                </Col>}\r\n\r\n                                                            {this.state.showcol2 == true ?\r\n                                                                <Col md=\"3\">\r\n                                                                    <label>Selected Policy</label>\r\n                                                                </Col> : <Col md=\"4\" style={{marginTop:'20px'}}>\r\n                                                                <BTN color=\"success\" title=\"Search\" onClick={() => this.onRadioBtnClick()}> All Sub-Agent Search </BTN>\r\n                                                                </Col>}\r\n                                                                \r\n                                                            {this.state.showcol2 == true ?\r\n                                                                <Col md=\"1\">\r\n                                                                    <label> {this.state.selectedPolicy}</label>\r\n                                                                </Col> : <Col md=\"4.5\" style={{marginTop:'20px'}}>\r\n                                                                    <BTN color=\"success\" title=\"Payment\" onClick={() => this.PaymentData(\"0\")}> Update Policy List </BTN>\r\n                                                                </Col>\r\n                                                            } \r\n                                                            </Row>\r\n                                                        </Col>\r\n\r\n                                        {this.state.showcol2 == true ?\r\n                                            <Col md=\"2\">Transaction Date(*)</Col> : null}\r\n                                        {this.state.showcol2 == true ?\r\n                                            <Col md=\"3\">\r\n                                                <InputGroup>\r\n                                                    <Input type=\"date\" name=\"newEntryDate\" id=\"newEntryDate\" placeholder=\"transaction date\" onBlur={(e) => this.handleChange(e)}\r\n                                                        onChange={(e) => this.handleChange(e)} value={this.state.newEntryDate}\r\n                                                        min={moment().subtract(100, 'years').format('DD-MM-YYYY')}\r\n                                                        max={moment().format('DD-MM-YYYY')}\r\n                                                    />\r\n                                                    <em id=\"newEntryDateError\" className=\"error invalid-feedback\" ></em>\r\n                                                </InputGroup>\r\n                                            </Col> : null}\r\n                                        {this.state.showcol2 == true ?\r\n                                            <Col md=\"2\"> Payment Mode(*)</Col> : null}\r\n                                        {this.state.showcol2 == true ?\r\n                                            <Col md=\"2\">\r\n                                                <Input type=\"select\" name=\"paymentMode\" id=\"paymentMode\"\r\n                                                    onChange={(e) => this.selectType(e.target.value, 'paymentMode')} value={this.state.paymentMode}\r\n                                                >\r\n                                                    <option value=''>Select payment mode</option>\r\n                                                    {this.state.paymentModearr.map((type, i) => {\r\n                                                        return (<option value={type.label} key={i}>{type.value}</option>)\r\n                                                    })\r\n                                                    }\r\n                                                </Input>\r\n                                                <em id=\"paymentModeError\" className=\"error invalid-feedback\" ></em>\r\n                                            </Col> : null}\r\n\r\n                                        {this.state.showcol2 == true ?\r\n                                            <Col md=\"1\"> Note </Col> : null}\r\n                                        {this.state.showcol2 == true ?\r\n                                            <Col md=\"3\">\r\n                                                <Input name=\"note\" type=\"textarea\" id=\"note\" onChange={e => this.handleChange(e)} onBlur={e => this.handleChange(e)} value={this.state.note} />\r\n                                            </Col> : null}\r\n                                        {this.state.showcol2 == true ?\r\n                                            <Col style={{ textAlign: \"center\", marginTop: '1%' }} md=\"4\">\r\n                                                <Row>\r\n                                                    <Col md=\"5\">\r\n                                                        <BTN color=\"success\" title=\"Payment\" onClick={() => this.PaymentData(\"1\")}> Update Policy List </BTN>\r\n                                                    </Col>\r\n                                                    <Col md=\"5\">\r\n                                                        <BTN color=\"success\" title=\"RecordPayment\" onClick={() => this.RecordPayment()}> Record Payment </BTN>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col> : null}\r\n\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n                {/* {this.state.showcol2 != true ? (<div className=\"table-custom\"> */}\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ isFilterTableShow: !this.state.isFilterTableShow })} aria-expanded={this.state.isFilterTableShow} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    <span>{this.state.tab2Title}</span>\r\n                        <i style={{ float: 'right' }} className={this.state.isFilterTableShow ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.isFilterTableShow} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                                    paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Sub Agent Statement\"\r\n                                    currentPageReportTemplate={this.state.str}\r\n                                    scrollable={true}\r\n                                    paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                                    rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                                    responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                                    {columns}\r\n                                </DataTable>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n                {/* </div>\r\n                ) : (<div className=\"table-custom\"> */}\r\n                {this.state.arr1.length > 0\r\n                    ? <div className=\"table-custom\">\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.arr1} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                            paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Sub Agent Statement\"\r\n                            currentPageReportTemplate={this.state.str}\r\n                            scrollable={true}\r\n                            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                            rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                            responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                            {columns1}\r\n                        </DataTable>\r\n                    </div>\r\n                    : (null)}\r\n                {/* </div>)} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation()(SubAgentStatement);\r\n"]},"metadata":{},"sourceType":"module"}