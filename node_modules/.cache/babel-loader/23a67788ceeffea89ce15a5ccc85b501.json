{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/PremiumBordereaux.js\";\nimport React, { Component } from 'react';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport SavedBordereaux from './SavedBordereaux';\n\nclass PremiumBordereaux extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'transactionDate') {\n        if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n          this.setState({\n            transactionDate: e.target.value,\n            transactionDateError: true\n          });\n          this.show('transactionDate', true, 'transactionDateError', 'Please select Month/Year');\n        } else {\n          this.setState({\n            transactionDate: e.target.value,\n            transactionDateError: false\n          });\n          this.show('transactionDate', false, 'transactionDateError', '');\n        }\n      }\n    };\n\n    let columns = [{\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Name\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"TransactionDescription\",\n      header: \"Transaction\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"PaymentStatus\",\n      header: \"Status\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"SubAgentId\",\n      header: \"Sub Agent Id\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"Department\",\n      header: \"Department\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"SourceName\",\n      header: \"Source Name\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"VesselRegistrationLocation\",\n      header: \"Where is The boat Registered?\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"Income\",\n      header: \"Income\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"Outstanding\",\n      header: \"Outstanding\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"Gross\",\n      header: \"Gross\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"GrossLessLevy\",\n      header: \"Gross Less Levy\",\n      sortable: true,\n      filter: true,\n      id: 11,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"TotalCommission\",\n      header: \"Total Commission\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"ArcFees\",\n      header: \"Arc & Fees (Add On Cost)\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"AdminFeeAmount\",\n      header: \"FEES (Admin Fee)\",\n      sortable: true,\n      filter: true,\n      id: 14,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"GovtLevyPercent\",\n      header: \"Gvt Levy Rate\",\n      sortable: true,\n      filter: true,\n      id: 15,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"GovtLevyAmount\",\n      header: \"Gvt Levy Amount\",\n      sortable: true,\n      filter: true,\n      id: 16,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"NetPay\",\n      header: \"Net Pay\",\n      sortable: true,\n      filter: true,\n      id: 19,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"TransactionDate\",\n      header: \"Date Completed\",\n      sortable: true,\n      filter: true,\n      id: 20,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"InsuranceCompany\",\n      header: \"Insurance Company (Binder Name)\",\n      sortable: true,\n      filter: true,\n      id: 21,\n      style: {\n        'width': '250px'\n      }\n    }, {\n      field: \"PolicyClass\",\n      header: \"Policy Class\",\n      sortable: true,\n      filter: true,\n      id: 22,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyType\",\n      header: \"Policy Type\",\n      sortable: true,\n      filter: true,\n      id: 23,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyStatus\",\n      header: \"Policy Status\",\n      sortable: true,\n      filter: true,\n      id: 24,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"CruisingRange\",\n      header: \"Cruising Range\",\n      sortable: true,\n      filter: true,\n      id: 25,\n      style: {\n        'width': '250px'\n      }\n    }, {\n      field: \"MooringName\",\n      header: \"Mooring Name\",\n      sortable: true,\n      filter: true,\n      id: 26,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"MooringType\",\n      header: \"Mooring Type\",\n      sortable: true,\n      filter: true,\n      id: 27,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"GeoTags\",\n      header: \"Geo Tags\",\n      sortable: true,\n      filter: true,\n      id: 28,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"VesselName\",\n      header: \"Vessel Name\",\n      sortable: true,\n      filter: true,\n      id: 29,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"YearBuilt\",\n      header: \"Year Built\",\n      sortable: true,\n      filter: true,\n      id: 'YearBuilt',\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"VesselMakeModel\",\n      header: \"Vessel Make & Mode\",\n      sortable: true,\n      filter: true,\n      id: 30,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"SumInsured\",\n      header: \"Sum Insured\",\n      sortable: true,\n      filter: true,\n      id: 31,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"RRE\",\n      header: \"RRE\",\n      sortable: true,\n      filter: true,\n      id: 32,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ExcessAmount\",\n      header: \"Excess Amount\",\n      sortable: true,\n      filter: true,\n      id: 33,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"SurveyDueDate\",\n      header: \"Survey Due Date\",\n      sortable: true,\n      filter: true,\n      id: 34,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"InceptionDate\",\n      header: \"Inception Date\",\n      sortable: true,\n      filter: true,\n      id: 35,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyCreated\",\n      header: \"Policy Created\",\n      sortable: true,\n      filter: true,\n      id: 36,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyRenewalDate\",\n      header: \"Policy Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 37,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyLastBound\",\n      header: \"Policy Last Bound\",\n      sortable: true,\n      filter: true,\n      id: 38,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyUpdated\",\n      header: \"Policy Updated\",\n      sortable: true,\n      filter: true,\n      id: 39,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"YCommissionRate\",\n      header: \"Yachtsman Commision Rate\",\n      sortable: true,\n      filter: true,\n      id: 40,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Yachtsman Commision Amount\",\n      sortable: true,\n      filter: true,\n      id: 41,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"AgentCommissionRate\",\n      header: \"Agent Commission Rate\",\n      sortable: true,\n      filter: true,\n      id: 17,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"AgentCommissionAmount\",\n      header: \"Agent Commission Amount\",\n      sortable: true,\n      filter: true,\n      id: 18,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"TransactionCreated\",\n      header: \"Transaction Created\",\n      sortable: true,\n      filter: true,\n      id: 42,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"TransactionCompleted\",\n      header: \"Transaction Completed\",\n      sortable: true,\n      filter: true,\n      id: 43,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PXStatus\",\n      header: \"PX Status\",\n      sortable: true,\n      filter: true,\n      id: 44,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PaymentMode\",\n      header: \"PX Type\",\n      sortable: true,\n      filter: true,\n      id: 45,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"Currency\",\n      header: \"PX Currency\",\n      sortable: true,\n      filter: true,\n      id: 46,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"MidtermAdjustmentEffectiveDate\",\n      header: \"Midterm Adjustment Effective Date\",\n      sortable: true,\n      filter: true,\n      id: 47,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"ReasonForCancellation\",\n      header: \"Reason for Cancellation\",\n      sortable: true,\n      filter: true,\n      id: 48,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"PolicyIssuanceDate\",\n      header: \"Policy Issuance Date (Policy Document Generation Date)\",\n      sortable: true,\n      filter: true,\n      id: 49,\n      style: {\n        'width': '200px'\n      }\n    }, {\n      field: \"ContactAddress\",\n      header: \"Contact Address\",\n      sortable: true,\n      filter: true,\n      id: 50,\n      style: {\n        'width': '300px'\n      }\n    }, {\n      field: \"Email\",\n      header: \"Email\",\n      sortable: true,\n      filter: true,\n      id: 51,\n      style: {\n        'width': '300px'\n      }\n    }, {\n      field: \"Phone\",\n      header: \"Phone\",\n      sortable: true,\n      filter: true,\n      id: 52,\n      style: {\n        'width': '200px'\n      }\n    }];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      transactionDate: moment().format('YYYY-MM'),\n      transactionDateError: false,\n      currencyList: [],\n      countryList: [],\n      currency: 'All',\n      currencyError: false,\n      country: 'All',\n      countryError: false,\n      BODList: [],\n      BOD: 'LastBindDate',\n      BODError: false,\n      statementTypeList: [],\n      statementType: 'Regular',\n      statementTypeError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    //this.getPremiumBordereauxDetails();\n    this.getCurrency();\n    this.getDropDownValues('BORDEREAUXCOUNTRY', 'countryList', 'StringMapName');\n    this.getDropDownValues('BOD', 'BODList', 'StringMapName');\n    this.getDropDownValues('BSTATEMENTTYPE', 'statementTypeList', 'SortOrder');\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  getCurrency() {\n    try {\n      api.get(APIConstant.path.getCurrency).then(res => {\n        if (res.success) {\n          this.setState({\n            currencyList: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  getPremiumBordereauxDetails() {\n    var data = {\n      languageId: this.state.LanguageId,\n      transactionDate: this.state.transactionDate,\n      country: this.state.country,\n      currency: this.state.currency,\n      BOD: this.state.BOD,\n      statementType: this.state.statementType,\n      loggedInUserId: CommonConfig.loggedInUserId()\n    };\n    console.log(\"getPremiumBordereauxDetails----\", data);\n    api.post('api/getPremiumBordereauxDetails', data).then(res => {\n      console.log(\"getPremiumBordereauxDetails----\", res);\n\n      if (res.success) {\n        if (res.data.success) {\n          toast.success(res.data.message);\n          console.log(\"getPremiumBordereauxDetails---- IN\");\n        } else {\n          toast.error(res.data.message);\n        }\n      } else {\n        toast.error(res.data.message);\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    if (this.state.transactionDateError) {\n      toast.error(\"Please select Month/Year.\");\n      return false;\n    } else {\n      this.getPremiumBordereauxDetails();\n    }\n  }\n\n  selectType(value, type) {\n    if (type === 'country') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          countryError: true,\n          country: value\n        });\n        this.show('country', true, \"countryError\", \"Please select country\");\n      } else {\n        this.setState({\n          countryError: false,\n          country: value\n        });\n        this.show('country', false, \"countryError\", \"\");\n      }\n    }\n\n    if (type === 'currency') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          currencyError: true,\n          currency: value\n        });\n        this.show('currency', true, \"currencyError\", \"Please select currency\");\n      } else {\n        this.setState({\n          currencyError: false,\n          currency: value\n        });\n        this.show('currency', false, \"currencyError\", \"\");\n      }\n    }\n\n    if (type === 'BOD') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          BODError: true,\n          BOD: value\n        });\n        this.show('BOD', true, \"BODError\", \"Please select Based On Date\");\n      } else {\n        this.setState({\n          BODError: false,\n          BOD: value\n        });\n        this.show('BOD', false, \"BODError\", \"\");\n      }\n    }\n\n    if (type === 'statementType') {\n      if (CommonConfig.isEmpty(value)) {\n        this.setState({\n          statementTypeError: true,\n          statementType: value\n        });\n        this.show('statementType', true, \"statementTypeError\", \"Please select Statement Type\");\n      } else {\n        this.setState({\n          statementTypeError: false,\n          statementType: value\n        });\n        this.show('statementType', false, \"statementTypeError\", \"\");\n      }\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-section implementation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TabView, {\n      renderActiveOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TabPanel, {\n      header: \"Generate Bordereaux\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 45\n      }\n    }, \"Month/Year\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"month\",\n      id: \"transactionDate\",\n      name: \"transactionDate\",\n      value: this.state.transactionDate,\n      onChange: e => this.handleChange(e, 'transactionDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"transactionDateError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 45\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"statementType\",\n      id: \"statementType\",\n      onChange: e => this.selectType(e.target.value, 'statementType'),\n      value: this.state.statementType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 45\n      }\n    }, this.state.statementTypeList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 61\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"statementTypeError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 45\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"country\",\n      id: \"country\",\n      onChange: e => this.selectType(e.target.value, 'country'),\n      value: this.state.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 45\n      }\n    }, this.state.countryList.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.StringMapKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 61\n        }\n      }, type.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"countryError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 45\n      }\n    }, \"Curreny\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"currency\",\n      id: \"currency\",\n      onChange: e => this.selectType(e.target.value, 'currency'),\n      value: this.state.currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 49\n      }\n    }, \"All\"), this.state.currencyList.map((currency, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: currency.CurrncyCode,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 61\n        }\n      }, currency.CurrncyCode);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"currencyError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 45\n      }\n    }, \"Based On Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"BOD\",\n      id: \"BOD\",\n      onChange: e => this.selectType(e.target.value, 'BOD'),\n      value: this.state.BOD,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 45\n      }\n    }, this.state.BODList.map((BOD, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: BOD.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 61\n        }\n      }, BOD.StringMapName);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      id: \"BODError\",\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 41\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 41\n      }\n    }, \" Generate \"))))), /*#__PURE__*/React.createElement(TabPanel, {\n      header: \"Saved Bordereaux\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SavedBordereaux, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nexport default withTranslation()(PremiumBordereaux);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/PremiumBordereaux.js"],"names":["React","Component","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","TabView","TabPanel","SavedBordereaux","PremiumBordereaux","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","undefined","transactionDate","transactionDateError","show","columns","field","header","sortable","filter","id","style","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","format","currencyList","countryList","currency","currencyError","country","countryError","BODList","BOD","BODError","statementTypeList","statementType","statementTypeError","colOptions","col","push","label","export","bind","componentDidMount","getCurrency","getDropDownValues","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","get","console","log","getPremiumBordereauxDetails","languageId","loggedInUserId","message","dt","exportCSV","filterData","selectType","type","isEmpty","condition","errorField","document","getElementById","className","innerHTML","render","t","map","i","body","filterMatchMode","StringMapKey","StringMapName","CurrncyCode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport SavedBordereaux from './SavedBordereaux';\n\nclass PremiumBordereaux extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let columns = [\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\n            { field: \"ClientName\", header: \"Name\", sortable: true, filter: true, id: 1, style: { 'width': '150px' } },\n            { field: \"TransactionDescription\", header: \"Transaction\", sortable: true, filter: true, id: 2, style: { 'width': '200px' } },\n            { field: \"PaymentStatus\", header: \"Status\", sortable: true, filter: true, id: 3, style: { 'width': '100px' } },\n            { field: \"SubAgentId\", header: \"Sub Agent Id\", sortable: true, filter: true, id: 4, style: { 'width': '100px' } },\n            { field: \"Department\", header: \"Department\", sortable: true, filter: true, id: 5, style: { 'width': '150px' } },\n            { field: \"SourceName\", header: \"Source Name\", sortable: true, filter: true, id: 6, style: { 'width': '200px' } },\n            { field: \"VesselRegistrationLocation\", header: \"Where is The boat Registered?\", sortable: true, filter: true, id: 7, style: { 'width': '200px' } },\n            { field: \"Income\", header: \"Income\", sortable: true, filter: true, id: 8, style: { 'width': '100px' } },\n            { field: \"Outstanding\", header: \"Outstanding\", sortable: true, filter: true, id: 9, style: { 'width': '150px' } },\n            { field: \"Gross\", header: \"Gross\", sortable: true, filter: true, id: 10, style: { 'width': '150px' } },\n            { field: \"GrossLessLevy\", header: \"Gross Less Levy\", sortable: true, filter: true, id: 11, style: { 'width': '150px' } },\n            { field: \"TotalCommission\", header: \"Total Commission\", sortable: true, filter: true, id: 12, style: { 'width': '150px' } },\n            { field: \"ArcFees\", header: \"Arc & Fees (Add On Cost)\", sortable: true, filter: true, id: 13, style: { 'width': '150px' } },\n            { field: \"AdminFeeAmount\", header: \"FEES (Admin Fee)\", sortable: true, filter: true, id: 14, style: { 'width': '150px' } },\n            { field: \"GovtLevyPercent\", header: \"Gvt Levy Rate\", sortable: true, filter: true, id: 15, style: { 'width': '150px' } },\n            { field: \"GovtLevyAmount\", header: \"Gvt Levy Amount\", sortable: true, filter: true, id: 16, style: { 'width': '150px' } },\n            { field: \"NetPay\", header: \"Net Pay\", sortable: true, filter: true, id: 19, style: { 'width': '150px' } },\n            { field: \"TransactionDate\", header: \"Date Completed\", sortable: true, filter: true, id: 20, style: { 'width': '150px' } },\n            { field: \"InsuranceCompany\", header: \"Insurance Company (Binder Name)\", sortable: true, filter: true, id: 21, style: { 'width': '250px' } },\n            { field: \"PolicyClass\", header: \"Policy Class\", sortable: true, filter: true, id: 22, style: { 'width': '150px' } },\n            { field: \"PolicyType\", header: \"Policy Type\", sortable: true, filter: true, id: 23, style: { 'width': '150px' } },\n            { field: \"PolicyStatus\", header: \"Policy Status\", sortable: true, filter: true, id: 24, style: { 'width': '150px' } },\n            { field: \"CruisingRange\", header: \"Cruising Range\", sortable: true, filter: true, id: 25, style: { 'width': '250px' } },\n            { field: \"MooringName\", header: \"Mooring Name\", sortable: true, filter: true, id: 26, style: { 'width': '200px' } },\n            { field: \"MooringType\", header: \"Mooring Type\", sortable: true, filter: true, id: 27, style: { 'width': '200px' } },\n            { field: \"GeoTags\", header: \"Geo Tags\", sortable: true, filter: true, id: 28, style: { 'width': '200px' } },\n            { field: \"VesselName\", header: \"Vessel Name\", sortable: true, filter: true, id: 29, style: { 'width': '200px' } },\n            { field: \"YearBuilt\", header: \"Year Built\", sortable: true, filter: true, id: 'YearBuilt', style: { 'width': '100px' } },\n            { field: \"VesselMakeModel\", header: \"Vessel Make & Mode\", sortable: true, filter: true, id: 30, style: { 'width': '200px' } },\n            { field: \"SumInsured\", header: \"Sum Insured\", sortable: true, filter: true, id: 31, style: { 'width': '150px' } },\n            { field: \"RRE\", header: \"RRE\", sortable: true, filter: true, id: 32, style: { 'width': '100px' } },\n            { field: \"ExcessAmount\", header: \"Excess Amount\", sortable: true, filter: true, id: 33, style: { 'width': '150px' } },\n            { field: \"SurveyDueDate\", header: \"Survey Due Date\", sortable: true, filter: true, id: 34, style: { 'width': '150px' } },\n            { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 35, style: { 'width': '150px' } },\n            { field: \"PolicyCreated\", header: \"Policy Created\", sortable: true, filter: true, id: 36, style: { 'width': '150px' } },\n            { field: \"PolicyRenewalDate\", header: \"Policy Renewal Date\", sortable: true, filter: true, id: 37, style: { 'width': '150px' } },\n            { field: \"PolicyLastBound\", header: \"Policy Last Bound\", sortable: true, filter: true, id: 38, style: { 'width': '150px' } },\n            { field: \"PolicyUpdated\", header: \"Policy Updated\", sortable: true, filter: true, id: 39, style: { 'width': '150px' } },\n            { field: \"YCommissionRate\", header: \"Yachtsman Commision Rate\", sortable: true, filter: true, id: 40, style: { 'width': '150px' } },\n            { field: \"YCommissionAmount\", header: \"Yachtsman Commision Amount\", sortable: true, filter: true, id: 41, style: { 'width': '150px' } },\n            { field: \"AgentCommissionRate\", header: \"Agent Commission Rate\", sortable: true, filter: true, id: 17, style: { 'width': '150px' } },\n            { field: \"AgentCommissionAmount\", header: \"Agent Commission Amount\", sortable: true, filter: true, id: 18, style: { 'width': '150px' } },\n            { field: \"TransactionCreated\", header: \"Transaction Created\", sortable: true, filter: true, id: 42, style: { 'width': '150px' } },\n            { field: \"TransactionCompleted\", header: \"Transaction Completed\", sortable: true, filter: true, id: 43, style: { 'width': '150px' } },\n            { field: \"PXStatus\", header: \"PX Status\", sortable: true, filter: true, id: 44, style: { 'width': '150px' } },\n            { field: \"PaymentMode\", header: \"PX Type\", sortable: true, filter: true, id: 45, style: { 'width': '200px' } },\n            { field: \"Currency\", header: \"PX Currency\", sortable: true, filter: true, id: 46, style: { 'width': '150px' } },\n            { field: \"MidtermAdjustmentEffectiveDate\", header: \"Midterm Adjustment Effective Date\", sortable: true, filter: true, id: 47, style: { 'width': '150px' } },\n            { field: \"ReasonForCancellation\", header: \"Reason for Cancellation\", sortable: true, filter: true, id: 48, style: { 'width': '200px' } },\n            { field: \"PolicyIssuanceDate\", header: \"Policy Issuance Date (Policy Document Generation Date)\", sortable: true, filter: true, id: 49, style: { 'width': '200px' } },\n            { field: \"ContactAddress\", header: \"Contact Address\", sortable: true, filter: true, id: 50, style: { 'width': '300px' } },\n            { field: \"Email\", header: \"Email\", sortable: true, filter: true, id: 51, style: { 'width': '300px' } },\n            { field: \"Phone\", header: \"Phone\", sortable: true, filter: true, id: 52, style: { 'width': '200px' } }\n        ];\n\n        this.state = {\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\n            cols: columns,\n            arr: [],\n            selectedPage: 0,\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            str: '',\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            globalFilter: null,\n            searchCollapse: false,\n            transactionDate: moment().format('YYYY-MM'),\n            transactionDateError: false,\n            currencyList: [],\n            countryList: [],\n            currency: 'All',\n            currencyError: false,\n            country: 'All',\n            countryError: false,\n            BODList: [],\n            BOD: 'LastBindDate',\n            BODError: false,\n            statementTypeList: [],\n            statementType: 'Regular',\n            statementTypeError: false\n        };\n\n        this.colOptions = [];\n        for (let col of columns) {\n            this.colOptions.push({ label: col.header, value: col });\n        }\n\n        this.export = this.export.bind(this);\n    }\n\n    componentDidMount() {\n        //this.getPremiumBordereauxDetails();\n        this.getCurrency();\n        this.getDropDownValues('BORDEREAUXCOUNTRY', 'countryList', 'StringMapName');\n        this.getDropDownValues('BOD', 'BODList', 'StringMapName');\n        this.getDropDownValues('BSTATEMENTTYPE', 'statementTypeList', 'SortOrder');\n    }\n\n    getDropDownValues(stringMapType, setStateName, orderBy) {\n        try {\n            const data = {\n                stringmaptype: stringMapType,\n                orderby: orderBy\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ [setStateName]: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n        }\n    }\n\n    getCurrency() {\n        try {\n            api.get(APIConstant.path.getCurrency).then(res => {\n                if (res.success) {\n                    this.setState({ currencyList: res.data });\n                } else {\n                }\n            }).catch(err => {\n            });\n        } catch (error) {\n            console.log(\"error...\", error);\n        }\n    }\n\n    getPremiumBordereauxDetails() {\n        var data = {\n            languageId: this.state.LanguageId,\n            transactionDate: this.state.transactionDate,\n            country: this.state.country,\n            currency: this.state.currency,\n            BOD: this.state.BOD,\n            statementType: this.state.statementType,\n            loggedInUserId: CommonConfig.loggedInUserId()\n        };\n        console.log(\"getPremiumBordereauxDetails----\", data);\n        api.post('api/getPremiumBordereauxDetails', data).then(res => {\n            console.log(\"getPremiumBordereauxDetails----\", res);\n            if (res.success) {\n                if (res.data.success) {\n                    toast.success(res.data.message);\n                    console.log(\"getPremiumBordereauxDetails---- IN\");\n                } else {\n                    toast.error(res.data.message);\n                }\n            } else {\n                toast.error(res.data.message);\n            }\n        });\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    export() {\n        this.dt.exportCSV();\n    }\n\n    filterData() {\n        if (this.state.transactionDateError) {\n            toast.error(\"Please select Month/Year.\");\n            return false;\n        } else {\n            this.getPremiumBordereauxDetails();\n        }\n    }\n\n    handleChange = (e) => {\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.name === 'transactionDate') {\n\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\n                this.setState({ transactionDate: e.target.value, transactionDateError: true });\n                this.show('transactionDate', true, 'transactionDateError', 'Please select Month/Year');\n            } else {\n                this.setState({ transactionDate: e.target.value, transactionDateError: false });\n                this.show('transactionDate', false, 'transactionDateError', '');\n            }\n        }\n    }\n\n    selectType(value, type) {\n        if (type === 'country') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ countryError: true, country: value });\n                this.show('country', true, \"countryError\", \"Please select country\");\n            } else {\n                this.setState({ countryError: false, country: value });\n                this.show('country', false, \"countryError\", \"\");\n\n            }\n        }\n\n        if (type === 'currency') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ currencyError: true, currency: value });\n                this.show('currency', true, \"currencyError\", \"Please select currency\");\n            } else {\n                this.setState({ currencyError: false, currency: value });\n                this.show('currency', false, \"currencyError\", \"\");\n\n            }\n        }\n\n        if (type === 'BOD') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ BODError: true, BOD: value });\n                this.show('BOD', true, \"BODError\", \"Please select Based On Date\");\n            } else {\n                this.setState({ BODError: false, BOD: value });\n                this.show('BOD', false, \"BODError\", \"\");\n\n            }\n        }\n\n        if (type === 'statementType') {\n            if (CommonConfig.isEmpty(value)) {\n                this.setState({ statementTypeError: true, statementType: value });\n                this.show('statementType', true, \"statementTypeError\", \"Please select Statement Type\");\n            } else {\n                this.setState({ statementTypeError: false, statementType: value });\n                this.show('statementType', false, \"statementTypeError\", \"\");\n\n            }\n        }\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control is-invalid\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            if (document.getElementById(field))\n                document.getElementById(field).className = \"form-control\";\n\n            if (document.getElementById(errorField))\n                document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    render() {\n        const { t } = this.props;\n        var header = null;\n\n        let columns = this.state.cols.map((col, i) => {\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\n            />;\n        });\n\n        return (\n            <div>\n                <div className=\"content-section implementation\">\n                    <TabView renderActiveOnly={true}>\n                        <TabPanel header=\"Generate Bordereaux\">\n\n                            <div className=\"filter-data\">\n                                <Row>\n                                    <Col md='2'>\n                                        <div className=\"input-box\">\n                                            <label>Month/Year</label>\n                                            <Input type=\"month\" id=\"transactionDate\" name=\"transactionDate\"\n                                                value={this.state.transactionDate}\n                                                onChange={(e) => this.handleChange(e, 'transactionDate')}\n                                            ></Input>\n                                            <em id=\"transactionDateError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md='2'>\n                                        <div className=\"input-box\">\n                                            <label>Type</label>\n                                            <Input type=\"select\" name=\"statementType\" id=\"statementType\" onChange={(e) => this.selectType(e.target.value, 'statementType')} value={this.state.statementType}>\n                                                {this.state.statementTypeList.map((type, i) => {\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                            <em id=\"statementTypeError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md='2'>\n                                        <div className=\"input-box\">\n                                            <label>Country</label>\n                                            <Input type=\"select\" name=\"country\" id=\"country\" onChange={(e) => this.selectType(e.target.value, 'country')} value={this.state.country}>\n                                                {this.state.countryList.map((type, i) => {\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                            <em id=\"countryError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md='2'>\n                                        <div className=\"input-box\">\n                                            <label>Curreny</label>\n                                            <Input type=\"select\" name=\"currency\" id=\"currency\" onChange={(e) => this.selectType(e.target.value, 'currency')} value={this.state.currency}>\n                                                <option value=\"All\">All</option>\n                                                {this.state.currencyList.map((currency, i) => {\n                                                    return (<option value={currency.CurrncyCode} key={i}>{currency.CurrncyCode}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                            <em id=\"currencyError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md='2'>\n                                        <div className=\"input-box\">\n                                            <label>Based On Date</label>\n                                            <Input type=\"select\" name=\"BOD\" id=\"BOD\" onChange={(e) => this.selectType(e.target.value, 'BOD')} value={this.state.BOD}>\n                                                {this.state.BODList.map((BOD, i) => {\n                                                    return (<option value={BOD.StringMapKey} key={i}>{BOD.StringMapName}</option>)\n                                                })\n                                                }\n                                            </Input>\n                                            <em id=\"BODError\" className=\"error invalid-feedback\"></em>\n                                        </div>\n                                    </Col>\n                                    <Col md='2'>\n                                        <div>&nbsp;</div>\n                                        <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Generate </BTN>\n                                    </Col>\n                                </Row>\n                            </div>\n\n                        </TabPanel>\n\n                        <TabPanel header=\"Saved Bordereaux\">\n\n                            <SavedBordereaux {...this.props} />\n\n                        </TabPanel>\n\n                    </TabView>\n\n                    {/* <BinderInfo {...this.props} /> */}\n\n                    {/* <div className=\"basic-header\">\n                        <h1>Premium Bordereaux</h1>\n                        <div className=\"header-right-option\">\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\n                        fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\n                        onChange={this.onColumnToggle} style={{ width: '50px' }}\n                        />\n                        \n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\n                        </div>\n                    </div> \n                    \n                    <div className=\"table-custom\">\n                        <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Premium Bordereaux\"\n                        currentPageReportTemplate={this.state.str}\n                        scrollable={true}\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\n                        {columns}\n                        </DataTable>\n                    </div> \n                    */}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(PremiumBordereaux);\n"]},"metadata":{},"sourceType":"module"}