{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Claims/ClaimList.js\";\nimport React, { Component } from 'react';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport api from '../../utils/apiClient';\nimport { Button as BTN } from 'primereact/button';\nimport { Card, CardBody, Col, Table, Row, Input, Button, CardHeader, Collapse, Nav, NavItem, NavLink, TabContent, TabPane, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, Form, UncontrolledTooltip } from 'reactstrap';\nimport APIConstant, { CommonConfig } from '../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport { InputText } from 'primereact/inputtext';\nimport moment from 'moment';\n\nclass ClaimList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.claimsList.length ? l : this.state.claimsList.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.claimsList.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    let columns = [{\n      body: this.claimDataTemplate.bind(this),\n      header: \"Claim Number [Policy Number]\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      body: this.VesselClaimTemplate.bind(this),\n      header: \"Vessel / Claim Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"Name\",\n      header: \"Full Name\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      body: this.dateTemplate.bind(this),\n      header: \"Loss Date / Date Reported / Binder Year\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      body: this.stageDataTemplate.bind(this),\n      header: \"Stage\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"HandledBy\",\n      header: \"Handler\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 13\n    }];\n    this.state = {\n      claimsList: [],\n      cols: columns,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null\n    };\n    this.dateTemplate = this.dateTemplate.bind(this);\n    this.VesselClaimTemplate = this.VesselClaimTemplate.bind(this);\n    this.claimDataTemplate = this.claimDataTemplate.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.stageDataTemplate = this.stageDataTemplate.bind(this);\n  }\n\n  stageDataTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, rowData.Stage));\n  }\n\n  dateTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, moment(rowData.DateReported).format(CommonConfig.dateFormat.forDatePicker), \"/\", moment(rowData.BinderYear).format(CommonConfig.dateFormat.forDatePicker)));\n  }\n\n  claimDataTemplate(rowData, column) {\n    // debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, rowData.ClaimNumber));\n  }\n\n  VesselClaimTemplate(rowData, column) {\n    // debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, rowData.ClaimType));\n  }\n\n  getClaimList() {\n    let data = {\n      //\"PolicyId\":this.state.PolicyId\n      \"PolicyId\": \"10502036-f2ff-4ff6-a43b-1a2336bfa5c4\"\n    };\n    api.post(APIConstant.path.getClaimList, data).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        this.setState({\n          claimsList: res.data\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  openDetail(rowData) {\n    this.props.history.push({\n      pathname: '/ClaimsDetail',\n      state: {\n        claimID: rowData.ClaimId\n      }\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    // debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-warning\",\n      onClick: () => this.openDetail(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  async componentDidMount() {\n    this.getClaimList();\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    let columns = '';\n    columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-input-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.claimsList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.claimsList.length,\n      exportFilename: \"Claims List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: this.state.paginatorTemplate,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(ClaimList);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Claims/ClaimList.js"],"names":["React","Component","TabView","TabPanel","DataTable","Column","api","Button","BTN","Card","CardBody","Col","Table","Row","Input","CardHeader","Collapse","Nav","NavItem","NavLink","TabContent","TabPane","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","Form","UncontrolledTooltip","APIConstant","CommonConfig","withTranslation","InputText","moment","ClaimList","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","claimsList","length","str","setState","selectedPage","rowsPerPage","columns","body","claimDataTemplate","bind","header","sortable","filter","filterMatchMode","id","VesselClaimTemplate","field","dateTemplate","stageDataTemplate","actionTemplate","cols","paginatorTemplate","rowsPerPageOptions","dataTableConfig","globalFilter","rowData","column","Stage","DateReported","format","dateFormat","forDatePicker","BinderYear","ClaimNumber","ClaimType","getClaimList","data","post","path","then","res","console","log","success","catch","err","openDetail","history","push","pathname","claimID","ClaimId","marginRight","position","componentDidMount","componentWillUnmount","render","map","col","i","target","value","el","dt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport api from '../../utils/apiClient';\nimport { Button as BTN } from 'primereact/button';\nimport { Card, CardBody, Col, Table, Row, Input, Button, CardHeader, Collapse, Nav, NavItem, NavLink, TabContent, TabPane, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, Form, UncontrolledTooltip } from 'reactstrap';\nimport APIConstant, { CommonConfig } from '../../utils/constants';\nimport { withTranslation } from 'react-i18next';\nimport { InputText } from 'primereact/inputtext';\nimport moment from 'moment';\n\nclass ClaimList extends Component {\n\n    constructor(props) {\n        super(props);\n        let columns = [\n            { body: this.claimDataTemplate.bind(this), header: \"Claim Number [Policy Number]\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\n            { body: this.VesselClaimTemplate.bind(this), header: \"Vessel / Claim Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\n            { field: \"Name\", header: \"Full Name\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\n            { body: this.dateTemplate.bind(this), header: \"Loss Date / Date Reported / Binder Year\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\n            { body: this.stageDataTemplate.bind(this), header: \"Stage\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\n            { field: \"HandledBy\", header: \"Handler\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 13 }\n        ];\n\n        this.state = {\n            claimsList: [],\n            cols: columns,\n            paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n            globalFilter: null\n        };\n        this.dateTemplate = this.dateTemplate.bind(this);\n        this.VesselClaimTemplate = this.VesselClaimTemplate.bind(this);\n        this.claimDataTemplate = this.claimDataTemplate.bind(this);\n        this.actionTemplate = this.actionTemplate.bind(this);\n        this.stageDataTemplate = this.stageDataTemplate.bind(this);\n    }\n\n    stageDataTemplate(rowData, column) {\n        return <div className=\"policy-list-data\">\n            <p>{rowData.Stage}</p>\n        </div>\n    }\n\n    dateTemplate(rowData, column) {\n        return <div className=\"policy-list-data\">\n            <p>{moment(rowData.DateReported).format(CommonConfig.dateFormat.forDatePicker)}/{moment(rowData.BinderYear).format(CommonConfig.dateFormat.forDatePicker)}</p>\n        </div>\n    }\n\n    claimDataTemplate(rowData, column) {\n        // debugger;\n        return <div className=\"policy-list-data\">\n            <p>{rowData.ClaimNumber}</p>\n        </div>\n    }\n\n    VesselClaimTemplate(rowData, column) {\n        // debugger;\n        return <div className=\"policy-list-data\">\n            <p>{rowData.ClaimType}</p>\n        </div>\n    }\n\n    getClaimList() {\n        let data = {\n            //\"PolicyId\":this.state.PolicyId\n            \"PolicyId\": \"10502036-f2ff-4ff6-a43b-1a2336bfa5c4\"\n        }\n        api.post(APIConstant.path.getClaimList, data).then(res => {\n            console.log(res)\n            if (res.success) {\n                this.setState({ claimsList: res.data });\n            }\n        }).catch(err => {\n            console.log(err)\n        });\n    }\n\n    getPageString = (e) => {\n        let firstPage = e.first + 1;\n        let l = e.rows * (e.page + 1);\n        let lastPage = (l < this.state.claimsList.length) ? l : this.state.claimsList.length\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.claimsList.length + ' records';\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\n    }\n\n    openDetail(rowData) {\n        this.props.history.push({\n            pathname: '/ClaimsDetail',\n            state: {\n                claimID: rowData.ClaimId\n            }\n        });\n    }\n\n    actionTemplate(rowData, column) {\n        // debugger;\n        return <div>\n            <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.openDetail(rowData)}\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\n            </BTN>\n        </div>;\n    }\n\n    async componentDidMount() {\n        this.getClaimList()\n    }\n\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        let columns = '';\n        columns = this.state.cols.map((col, i) => {\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\n        });\n\n        return (\n            <div className=\"animated fadeIn\">\n                <div className=\"table-custom\">\n                    <Row>\n                        <CardBody>\n                            <div className=\"group float-right\">\n                                <span className=\"p-input-icon-left\">\n                                    <i className=\"pi pi-search\" />\n                                    <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" />\n                                </span>\n                            </div>\n                        </CardBody>\n                    </Row>\n                    <DataTable ref={(el) => this.dt = el} value={this.state.claimsList} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\n                        paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.claimsList.length} exportFilename=\"Claims List\"\n                        currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\n                        paginatorTemplate={this.state.paginatorTemplate}\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\n                        responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n                    >\n                        {columns}\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ClaimList);\n"]},"metadata":{},"sourceType":"module"}