{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/BulkRenewals.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants';\n\nclass BulkRenewals extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'fromDate') {\n        this.setState({\n          fromDate: e.target.value\n        });\n      }\n\n      if (e.target.name === 'toDate') {\n        this.setState({\n          toDate: e.target.value\n        });\n      }\n    };\n\n    let columns = [{\n      body: this.actionTemplate.bind(this),\n      field: \"Select\",\n      header: \"Select\",\n      sortable: false,\n      id: \"checkbox\",\n      style: {\n        'width': '45px'\n      }\n    }, {\n      field: \"PolicyId\",\n      header: \"Policy Id\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"InceptionDate\",\n      header: \"InceptionDate\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"RenewalDate    \",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"Status\",\n      header: \"Status\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"ComputationStatus\",\n      header: \"Computation Status\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '70px'\n      }\n    }, {\n      field: \"ComputationError\",\n      header: \"Computation Error\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"AccChargeStatus\",\n      header: \"Acc Charge Status\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '70px'\n      }\n    }, {\n      field: \"AccChargeError\",\n      header: \"Acc Charge Error\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"DocumentStatus\",\n      header: \"Document Status\",\n      sortable: true,\n      filter: true,\n      id: 11,\n      style: {\n        'width': '70px'\n      }\n    }, {\n      field: \"DocumentError\",\n      header: \"Document Error\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"OverallStatus\",\n      header: \"Overall Status\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '100px'\n      }\n    } // { field: \"PaidAmount\", header: \"Paid Amt\", sortable: true, filter: true, id: 14,style: { 'width': '100px' } },\n    // { field: \"Outstanding\", header: \"Outstanding Amt\", sortable: true, filter: true, id: 15,style: { 'width': '100px' } },\n    // { field: \"DueDate\", header: \"Outstanding Since\", sortable: true, filter: true, id: 16,style: { 'width': '100px' } },\n    // { field: \"DayAfterDueDate\", header: \"No of Days\", sortable: true, filter: true, id: 17 }\n    ];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      fromDate: '',\n      toDate: '',\n      selected: {},\n      selectAll: 0\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.toggleRow = this.toggleRow.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {}\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selected[rowData.id] === true,\n      onChange: () => this.toggleRow(rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  GetBulkRenewalList() {\n    var data = {\n      fromDate: this.state.fromDate ? this.state.fromDate : '',\n      toDate: this.state.toDate ? this.state.toDate : ''\n    };\n    api.post('api/GetBulkRenewalList', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              id: i,\n              PolicyId: tempData.PolicyId,\n              PolicyNumber: tempData.PolicyNumber,\n              ClientName: tempData.ClientName,\n              InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\n              RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\n              Status: tempData.Status,\n              ComputationStatus: tempData.ComputationStatus,\n              ComputationError: tempData.ComputationError,\n              AccChargeStatus: tempData.AccChargeStatus,\n              AccChargeError: tempData.AccChargeError,\n              DocumentStatus: tempData.DocumentStatus,\n              DocumentError: tempData.DocumentError,\n              OverallStatus: tempData.OverallStatus\n            });\n          }\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.arr.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  GenerateRenewal() {\n    debugger;\n    console.log(\"this.state.arr\", this.state.arr);\n    console.log(\"this.state.selected\", this.state.selected);\n    console.log(\"this.state.selectAll\", this.state.selectAll);\n\n    if (this.state.selectAll == 0) {} else {\n      var newdata = {\n        mainarr: this.state.arr,\n        selectedindex: this.state.selected,\n        selectindexall: this.state.selectAll,\n        loggedInUserId: CommonConfig.loggedInUserId()\n      };\n      api.post('api/newGenerateRenewal', newdata).then(res => {\n        console.log(\"res\", res);\n\n        if (res.success) {\n          this.getDocumentList();\n        }\n      });\n    }\n  }\n\n  GenerateRenewalDocumnet() {\n    // debugger;\n    // console.log(\"this.state.arr\", this.state.arr);\n    // console.log(\"this.state.selected\", this.state.selected);\n    // console.log(\"this.state.selectAll\", this.state.selectAll);\n    // if (this.state.selectAll == 0) {\n    // }\n    // else {\n    //     var newdata = {\n    //         mainarr: this.state.arr,\n    //         selectedindex: this.state.selected,\n    //         selectindexall: this.state.selectAll,\n    //         loggedInUserId: CommonConfig.loggedInUserId()\n    //     }\n    //     api.post('api/newGenerateDocumentRenewal', newdata).then(async res => {\n    //  await   \n    api.post('api/getGenerateDocumentRenewal', '').then(async res1 => {\n      for (var i = 0; i < res1.data.length; i++) {\n        console.log(\"res1.data\", res1.data[i]);\n        await api.post(\"api/generatebulkDocument2\", res1.data[i]).then(res2 => {\n          // debugger;\n          if (res2.data.success) {\n            toast.success('Policy Number: ' + res1.data[i].PolicyNumber + ': ' + res2.data.message);\n          } else {\n            toast.error('Policy Number: ' + res1.data[i].PolicyNumber + ': ' + res2.data.message);\n          }\n        }).catch(err => {\n          console.log('err', err);\n        });\n      }\n    }); // });\n    // }\n  }\n\n  getDocumentList() {\n    try {\n      api.post(\"api/getgeneratebulkDocument\", '').then(async res => {\n        console.log(\"res\", res); // toast.success(res.data.message);\n\n        if (res.success) {\n          for (var i = 0; i < res.data.length; i++) {\n            console.log(\"res.data\", res.data[i]);\n            res.data[i].isDocumentGenerateAllow = 1;\n            await api.post(\"api/generatebulkDocument\", res.data[i], true).then(res1 => {\n              // debugger;\n              if (res1.data.success) {\n                toast.success('Policy Number: ' + res.data[i].PolicyNumber + ': ' + res1.data.message);\n              } else {\n                toast.error('Policy Number: ' + res.data[i].PolicyNumber + ': ' + res1.data.message);\n              }\n            }).catch(err => {\n              console.log('err', err);\n            });\n          }\n\n          this.GetBulkRenewalList();\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    this.GetBulkRenewalList();\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        style: col.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, \"Bulk Renewals\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      checked: this.state.selectAll === 1,\n      ref: input => {\n        if (input) {\n          input.indeterminate = this.state.selectAll === 2;\n        }\n      },\n      onChange: () => this.toggleSelectAll(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 45\n      }\n    }), \"  Select All\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 53\n      }\n    }, \"From Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"fromDate\",\n      name: \"fromDate\",\n      value: this.state.fromDate,\n      onChange: e => this.handleChange(e, 'fromDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 53\n      }\n    }, \"To Date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      id: \"toDate\",\n      name: \"toDate\",\n      value: this.state.toDate,\n      onChange: e => this.handleChange(e, 'toDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 53\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 41\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 41\n      }\n    }, \" Search \")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 41\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"GenerateRenewal\",\n      onClick: () => this.GenerateRenewal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 41\n      }\n    }, \"Generate Renewal\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 41\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"GenerateRenewalDocumnet\",\n      onClick: () => this.GenerateRenewalDocumnet(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 41\n      }\n    }, \"Generate Renewal Document\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Bulk Renewals\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(BulkRenewals);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/BulkRenewals.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","BulkRenewals","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","fromDate","toDate","columns","body","actionTemplate","bind","field","header","sortable","id","style","filter","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","selected","selectAll","colOptions","col","push","label","toggleRow","export","componentDidMount","getDropDownValues","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","rowData","column","GetBulkRenewalList","formattedData","dataLength","i","tempData","console","log","PolicyId","PolicyNumber","ClientName","InceptionDate","format","RenewalDate","Status","ComputationStatus","ComputationError","AccChargeStatus","AccChargeError","DocumentStatus","DocumentError","OverallStatus","newSelected","Object","assign","toggleSelectAll","forEach","x","GenerateRenewal","newdata","mainarr","selectedindex","selectindexall","loggedInUserId","getDocumentList","GenerateRenewalDocumnet","res1","res2","message","isDocumentGenerateAllow","dt","exportCSV","filterData","show","condition","errorField","document","getElementById","className","innerHTML","render","t","map","filterMatchMode","columnToggleIcon","position","onColumnToggle","width","marginRight","input","indeterminate","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n\r\nclass BulkRenewals extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        let columns = [\r\n\r\n            { body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n            { field: \"PolicyId\", header: \"Policy Id\", sortable: true, filter: true, id: 1, style: { 'width': '100px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 2, style: { 'width': '60px' } },\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 3, style: { 'width': '100px' } },\r\n            { field: \"InceptionDate\", header: \"InceptionDate\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            { field: \"RenewalDate\", header: \"RenewalDate    \", sortable: true, filter: true, id: 5, style: { 'width': '80px' } },\r\n            { field: \"Status\", header: \"Status\", sortable: true, filter: true, id: 6, style: { 'width': '80px' } },\r\n            { field: \"ComputationStatus\", header: \"Computation Status\", sortable: true, filter: true, id: 7, style: { 'width': '70px' } },\r\n            { field: \"ComputationError\", header: \"Computation Error\", sortable: true, filter: true, id: 8, style: { 'width': '100px' } },\r\n            { field: \"AccChargeStatus\", header: \"Acc Charge Status\", sortable: true, filter: true, id: 9, style: { 'width': '70px' } },\r\n            { field: \"AccChargeError\", header: \"Acc Charge Error\", sortable: true, filter: true, id: 10, style: { 'width': '100px' } },\r\n            { field: \"DocumentStatus\", header: \"Document Status\", sortable: true, filter: true, id: 11, style: { 'width': '70px' } },\r\n            { field: \"DocumentError\", header: \"Document Error\", sortable: true, filter: true, id: 12, style: { 'width': '100px' } },\r\n            { field: \"OverallStatus\", header: \"Overall Status\", sortable: true, filter: true, id: 13, style: { 'width': '100px' } },\r\n            // { field: \"PaidAmount\", header: \"Paid Amt\", sortable: true, filter: true, id: 14,style: { 'width': '100px' } },\r\n            // { field: \"Outstanding\", header: \"Outstanding Amt\", sortable: true, filter: true, id: 15,style: { 'width': '100px' } },\r\n            // { field: \"DueDate\", header: \"Outstanding Since\", sortable: true, filter: true, id: 16,style: { 'width': '100px' } },\r\n            // { field: \"DayAfterDueDate\", header: \"No of Days\", sortable: true, filter: true, id: 17 }\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n            fromDate: '',\r\n            toDate: '',\r\n            selected: {},\r\n            selectAll: 0\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.toggleRow = this.toggleRow.bind(this);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n\r\n    GetBulkRenewalList() {\r\n        var data = {\r\n            fromDate: this.state.fromDate ? this.state.fromDate : '',\r\n            toDate: this.state.toDate ? this.state.toDate : ''\r\n        };\r\n        api.post('api/GetBulkRenewalList', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            id: i,\r\n                            PolicyId: tempData.PolicyId,\r\n                            PolicyNumber: tempData.PolicyNumber,\r\n                            ClientName: tempData.ClientName,\r\n                            InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\r\n                            RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\r\n                            Status: tempData.Status,\r\n                            ComputationStatus: tempData.ComputationStatus,\r\n                            ComputationError: tempData.ComputationError,\r\n                            AccChargeStatus: tempData.AccChargeStatus,\r\n                            AccChargeError: tempData.AccChargeError,\r\n                            DocumentStatus: tempData.DocumentStatus,\r\n                            DocumentError: tempData.DocumentError,\r\n                            OverallStatus: tempData.OverallStatus\r\n                        });\r\n                    }\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    GenerateRenewal() {\r\n        debugger;\r\n        console.log(\"this.state.arr\", this.state.arr);\r\n        console.log(\"this.state.selected\", this.state.selected);\r\n        console.log(\"this.state.selectAll\", this.state.selectAll);\r\n        if (this.state.selectAll == 0) {\r\n\r\n        }\r\n        else {\r\n            var newdata = {\r\n                mainarr: this.state.arr,\r\n                selectedindex: this.state.selected,\r\n                selectindexall: this.state.selectAll,\r\n                loggedInUserId: CommonConfig.loggedInUserId()\r\n            }\r\n            api.post('api/newGenerateRenewal', newdata).then(res => {\r\n                console.log(\"res\", res);\r\n\r\n                if (res.success) {\r\n                    this.getDocumentList();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n     GenerateRenewalDocumnet() {\r\n        // debugger;\r\n        // console.log(\"this.state.arr\", this.state.arr);\r\n        // console.log(\"this.state.selected\", this.state.selected);\r\n        // console.log(\"this.state.selectAll\", this.state.selectAll);\r\n        // if (this.state.selectAll == 0) {\r\n\r\n        // }\r\n        // else {\r\n        //     var newdata = {\r\n        //         mainarr: this.state.arr,\r\n        //         selectedindex: this.state.selected,\r\n        //         selectindexall: this.state.selectAll,\r\n        //         loggedInUserId: CommonConfig.loggedInUserId()\r\n        //     }\r\n        //     api.post('api/newGenerateDocumentRenewal', newdata).then(async res => {\r\n            //  await   \r\n             api.post('api/getGenerateDocumentRenewal', '').then(async res1 => {\r\n                for (var i = 0; i < res1.data.length; i++) {\r\n                    console.log(\"res1.data\", res1.data[i]);\r\n\r\n                    await api.post(\"api/generatebulkDocument2\", res1.data[i]).then(res2 => {\r\n                        // debugger;\r\n                        if (res2.data.success) {\r\n                            toast.success('Policy Number: ' + res1.data[i].PolicyNumber + ': ' + res2.data.message);\r\n                        }\r\n                        else {\r\n                            toast.error('Policy Number: ' + res1.data[i].PolicyNumber + ': ' + res2.data.message)\r\n                        }\r\n\r\n                    }).catch(err => {\r\n                        console.log('err', err);\r\n                    });\r\n\r\n                }\r\n                });\r\n            // });\r\n        // }\r\n    }\r\n\r\n    getDocumentList() {\r\n        try {\r\n\r\n            api.post(\"api/getgeneratebulkDocument\", '').then(async res => {\r\n                console.log(\"res\", res);\r\n                // toast.success(res.data.message);\r\n                if (res.success) {\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                        console.log(\"res.data\", res.data[i]);\r\n                        res.data[i]. isDocumentGenerateAllow=1;\r\n                        await api.post(\"api/generatebulkDocument\", res.data[i],true).then(res1 => {\r\n                            // debugger;\r\n                            if (res1.data.success) {\r\n                                toast.success('Policy Number: ' + res.data[i].PolicyNumber + ': ' + res1.data.message);\r\n                            }\r\n                            else {\r\n                                toast.error('Policy Number: ' + res.data[i].PolicyNumber + ': ' + res1.data.message)\r\n                            }\r\n\r\n                        }).catch(err => {\r\n                            console.log('err', err);\r\n                        });\r\n\r\n                    }\r\n                    this.GetBulkRenewalList();\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n\r\n            });\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.GetBulkRenewalList();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n    }\r\n\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Bulk Renewals</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        {/* <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Bulk Renewals\r\n                                 </h5>\r\n                            </BTN>\r\n                        </CardHeader> */}\r\n                        <CardBody>\r\n                            <div className=\"filter-data\">\r\n                                <Row>\r\n                                    <Col md='1'>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                className=\"checkbox\"\r\n                                                checked={this.state.selectAll === 1}\r\n                                                ref={input => {\r\n                                                    if (input) {\r\n                                                        input.indeterminate = this.state.selectAll === 2;\r\n                                                    }\r\n                                                }}\r\n                                                onChange={() => this.toggleSelectAll()}\r\n                                            />  Select All</label>\r\n                                    </Col>\r\n                                    <Col md='4'>\r\n                                        <Row>\r\n                                            <Col md='6'>\r\n                                                <div className=\"input-box\">\r\n                                                    <label>From Date</label>\r\n                                                    <Input type=\"date\" id=\"fromDate\" name=\"fromDate\"\r\n                                                        value={this.state.fromDate}\r\n                                                        onChange={(e) => this.handleChange(e, 'fromDate')}\r\n                                                    ></Input>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col md='6'>\r\n                                                <div className=\"input-box\">\r\n                                                    <label>To Date</label>\r\n                                                    <Input type=\"date\" id=\"toDate\" name=\"toDate\"\r\n                                                        value={this.state.toDate}\r\n                                                        onChange={(e) => this.handleChange(e, 'toDate')}\r\n                                                    ></Input>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col md='2'>\r\n                                        <div>&nbsp;</div>\r\n                                        <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                    </Col>\r\n                                    <Col md='2'>\r\n                                        <div>&nbsp;</div>\r\n                                        <BTN color=\"success\" title=\"GenerateRenewal\" onClick={() => this.GenerateRenewal()}>Generate Renewal</BTN>\r\n                                    </Col>\r\n                                    <Col md='2'>\r\n                                        <div>&nbsp;</div>\r\n                                        <BTN color=\"success\" title=\"GenerateRenewalDocumnet\" onClick={() => this.GenerateRenewalDocumnet()}>Generate Renewal Document</BTN>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Bulk Renewals\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(BulkRenewals);\r\n"]},"metadata":{},"sourceType":"module"}