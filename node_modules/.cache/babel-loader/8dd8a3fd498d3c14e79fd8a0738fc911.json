{"ast":null,"code":"import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Modal,ModalBody,Collapse,Button as BTN,ModalHeader,Card,CardHeader,UncontrolledTooltip,CardBody,Col,Row,Input,Form}from'reactstrap';import{Button}from'primereact/button';import api from'../../utils/apiClient';import{withTranslation}from'react-i18next';import{DataTable}from'primereact/datatable';import{Column}from'primereact/column';import{MultiSelect}from'primereact/multiselect';import{InputText}from'primereact/inputtext';import'react-toastify/dist/ReactToastify.css';import{CommonConfig}from'../../utils/constants';import DatePicker from'react-date-picker';import moment from'moment';import uuid from\"uuid\";import APIConstant from'../../utils/constants';import Select from'react-select';import'react-select/dist/react-select.min.css';import{off}from'codemirror';import{toast}from'react-toastify';import{apiBase}from'../../utils/config';var SMSReport=/*#__PURE__*/function(_Component){_inherits(SMSReport,_Component);var _super=_createSuper(SMSReport);function SMSReport(props){var _this$state;var _this;_classCallCheck(this,SMSReport);_this=_super.call(this,props);_this.getPageString=function(e){var firstPage=e.first+1;var l=e.rows*(e.page+1);var lastPage=l<_this.state.arr.length?l:_this.state.arr.length;var str=firstPage+' to '+lastPage+' out of '+_this.state.arr.length+' records';_this.setState({selectedPage:e.first,str:str,rowsPerPage:e.rows});};_this.toggleLargeAdd=function(){_this.setState({toggleModalAdd:false});};_this.toggleCustom=function(tab){var prevState=_this.state.custom;var state=prevState.map(function(x,index){return tab===index?!x:false;});_this.setState({custom:state});};_this.handleChange=function(e){var t=_this.props.t;_this.setState(_defineProperty({},e.target.name,e.target.value));if(e.target.name==='selectedFromDate'){if(e.target.value===''||e.target.value===null){_this.setState({selectedFromDate:''});}else{_this.setState({selectedFromDate:e.target.value,selectedToDate:''});}}if(e.target.name==='selectedToDate'){if(e.target.value===''||e.target.value===null){_this.setState({selectedToDate:''});}else{if(!CommonConfig.isEmpty(_this.state.selectedFromDate)){var isToDateGreater=moment(e.target.value).isSameOrAfter(_this.state.selectedFromDate);if(!isToDateGreater){_this.show('selectedToDate',true,'selectedToDateError','To date must be greater then From date.');}else{_this.show('selectedToDate',false,'selectedToDateError','');}}else{_this.show('selectedToDate',false,'selectedToDateError','');}_this.setState({selectedToDate:e.target.value});}}};var columns=[{field:\"Date\",header:\"Date\",sortable:true,filter:true,filterMatchMode:'contains',id:1},{body:_this.formatEntityData.bind(_assertThisInitialized(_this)),field:\"EntityData\",header:\"Entity Type/Entity ID\",sortable:true,filter:true,filterMatchMode:'contains',id:2},{body:_this.formatProcessDetail.bind(_assertThisInitialized(_this)),field:\"ProcessDetail\",header:\"Process/Template Type\",sortable:true,filter:true,filterMatchMode:'contains',id:3},{field:\"RecipientType\",header:\"Recipient Type\",sortable:true,filter:true,filterMatchMode:'contains',id:4},{body:_this.formatClientDetail.bind(_assertThisInitialized(_this)),field:\"ClientDetail\",header:\"Client/Sub Agent\",sortable:true,filter:true,filterMatchMode:'contains',id:5},{body:_this.formatPhoneNumber.bind(_assertThisInitialized(_this)),field:\"PhoneNumber\",header:\"Recipient Mobile\",sortable:true,filter:true,filterMatchMode:'contains',id:6},{body:_this.formatMessage.bind(_assertThisInitialized(_this)),field:\"Message\",header:\"Message\",sortable:true,filter:true,filterMatchMode:'contains',id:7},{body:_this.formatStatus.bind(_assertThisInitialized(_this)),field:\"Status\",header:\"Status\",sortable:true,filter:true,filterMatchMode:'contains',id:8}];_this.state=(_this$state={toggleModalAdd:false,cols:columns,str:'',arr:[],selectedPage:0,filteredcontactsSingle:null,rowsPerPageOptions:CommonConfig.dataTableConfig.rowsPerPageOptions,rowsPerPage:CommonConfig.dataTableConfig.rowsPerPage,custom:true,isExpand:false,isMonthYear:true,monthArray:[],yearArray:[],selectedFromDate:'',selectedFromDateError:false,selectedToDate:'',selectedToDateError:false,selectedMonth:parseInt(moment().format('MM')),selectedMonthError:false,selectedYear:moment().format('YYYY'),selectedYearError:false,selectedStatus:'',entityType:'',entityTypeError:false,processType:'',processTypeError:false,recepientType:'',recepientTypeError:false},_defineProperty(_this$state,\"selectedStatus\",''),_defineProperty(_this$state,\"selectedStatusError\",false),_defineProperty(_this$state,\"isMessageModalVisible\",false),_defineProperty(_this$state,\"FullMessage\",''),_defineProperty(_this$state,\"offset\",0),_defineProperty(_this$state,\"recordStr\",''),_defineProperty(_this$state,\"selected\",{}),_defineProperty(_this$state,\"batchMessageHeaderId\",''),_defineProperty(_this$state,\"policyCount\",0),_defineProperty(_this$state,\"entityTypeList\",[{label:'Policy',value:'Policy'},{label:'Claims',value:'Claims'}]),_defineProperty(_this$state,\"processTypeList\",[{label:'Renewal',value:'Renewal'}]),_defineProperty(_this$state,\"recepientTypeList\",[{label:'SubAgent',value:'SubAgent'},{label:'Client',value:'Client'}]),_defineProperty(_this$state,\"statusList\",[{label:'Pending',value:'Pending'},{label:'Sent',value:'Sent'},{label:'Failed',value:'Failed'}]),_this$state);_this.colOptions=[];for(var _i=0,_columns=columns;_i<_columns.length;_i++){var col=_columns[_i];_this.colOptions.push({label:col.header,value:col});}_this.onColumnToggle=_this.onColumnToggle.bind(_assertThisInitialized(_this));_this.actionTemplate=_this.actionTemplate.bind(_assertThisInitialized(_this));_this.export=_this.export.bind(_assertThisInitialized(_this));return _this;}_createClass(SMSReport,[{key:\"componentDidMount\",value:function componentDidMount(){this.getDropdown();// this.getSMSReportList();\n}},{key:\"getSMSReportList\",value:function getSMSReportList(){var _this2=this;var data={IsMonthYear:this.state.isMonthYear?\"true\":\"false\",Month:this.state.isMonthYear?this.state.selectedMonth:'',Year:this.state.isMonthYear?this.state.selectedYear:'',FromDate:!this.state.isMonthYear?this.state.selectedFromDate:'',ToDate:!this.state.isMonthYear?this.state.selectedToDate:'',EntityType:this.state.entityType,ProcessType:this.state.processType,RecipientType:this.state.recepientType,Status:this.state.selectedStatus};api.post('api/getSMSReportList',data).then(function(res){console.log(\"data in SMS List....\",res);_this2.setState({arr:res.data[0]});}).catch(function(err){console.log(\"error in SMSList\",err);toast.error(\"Error\",err);});}},{key:\"getDropdown\",value:function getDropdown(){// Get Month\nvar monthArray=[{label:'January',value:1},{label:'February',value:2},{label:'March',value:3},{label:'April',value:4},{label:'May',value:5},{label:'June',value:6},{label:'July',value:7},{label:'August',value:8},{label:'Septemeber',value:9},{label:'October',value:10},{label:'November',value:11},{label:'December',value:12}];this.setState({monthArray:monthArray});// Get Year - Get last 10 year from current year\nvar startYear=moment().format('YYYY');var last10Year=parseInt(startYear)-10;var yearArray=[];for(var index=last10Year;index<=parseInt(last10Year)+10;index++){yearArray.push({label:index,value:index});}this.setState({yearArray:yearArray});}},{key:\"toggleSelectAll\",value:function toggleSelectAll(){var newSelected={};if(this.state.selectAll===0){this.state.arr.forEach(function(x){newSelected[x.SrNo]=true;});}this.setState({selected:newSelected,selectAll:this.state.selectAll===0?1:0});}},{key:\"toggleRow\",value:function toggleRow(SrNo){var newSelected=Object.assign({},this.state.selected);newSelected[SrNo]=!this.state.selected[SrNo];this.setState({selected:newSelected,selectAll:2});}},{key:\"actionTemplate\",value:function actionTemplate(rowData,column){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",className:\"checkbox\",checked:this.state.selected[rowData.SrNo]===true,onChange:function onChange(){return _this3.toggleRow(rowData.SrNo);}}));}},{key:\"onColumnToggle\",value:function onColumnToggle(event){var valueInOrder=event.value.sort(function(x,y){return x.id-y.id;});this.setState({cols:valueInOrder});}},{key:\"edit\",value:function edit(rowData){this.props.history.push({pathname:'/PolicyDetailsMerged/'+rowData.PolicyId+'/1/1',state:{PolicyId:rowData.PolicyId,tab:1}});}},{key:\"formatEntityData\",value:function formatEntityData(rowData){var _this4=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.EntityType,\" - \",\" \",/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this4.openPolicy(rowData);},style:{marginRight:'.5em',cursor:'pointer',borderBottomWidth:\"1px\",color:\"#007ad9\"},tooltip:\"View Policy\",tooltipOptions:{position:'bottom'}},rowData.PolicyNumber)));}},{key:\"formatProcessDetail\",value:function formatProcessDetail(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.ProcessDetail));}},{key:\"formatPhoneNumber\",value:function formatPhoneNumber(rowData){var _this5=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this5.openContact(rowData);},style:{marginRight:'.5em',cursor:'pointer',borderBottomWidth:\"1px\",color:\"#007ad9\"},tooltip:\"View Contact Deatils\",tooltipOptions:{position:'bottom'}},rowData.PhoneNumber)));}},{key:\"formatClientDetail\",value:function formatClientDetail(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.ClientDetail));}},{key:\"formatMessage\",value:function formatMessage(rowData){var _this6=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.Message.substr(0,50),/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this6.viewSMSMessage(rowData);},style:{marginRight:'.5em',cursor:'pointer',borderBottomWidth:\"1px\",color:\"#007ad9\"}},\"...\")));}},{key:\"formatStatus\",value:function formatStatus(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.Status,rowData.Status=='Failed'?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"i\",{style:{color:'#ff0000'},class:\"fa fa-exclamation-circle\",id:\"Error\"+rowData.SMSSenderId,\"aria-hidden\":\"true\"}),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"bottom\",target:\"Error\"+rowData.SMSSenderId},rowData.ErrorMsg)):null));}},{key:\"viewSMSMessage\",value:function viewSMSMessage(rowData){this.setState({isMessageModalVisible:true,FullMessage:rowData.Message});}},{key:\"openContact\",value:function openContact(rowData){window.open(window.location.origin+'/#'+'viewContactDetails/'+rowData.EntityId+'/'+rowData.EntityType);}// PolicyDetailsMerged/7e921eb8-f65e-11ea-8832-2da09a23e307/1/1\n},{key:\"openPolicy\",value:function openPolicy(rowData){window.open(window.location.origin+'/#'+'PolicyDetailsMerged/'+rowData.PolicyId+'/1/1');}},{key:\"export\",value:function _export(){this.dt.exportCSV();}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName){var _this7=this;try{var data={stringmaptype:stringMapType,orderby:'sortorder'};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){_this7.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){console.log(\"error...\",error);}}},{key:\"selectType\",value:function selectType(value,type){if(type==='selectedMonth'){if(value===''||value===undefined||value===null){this.setState({selectedMonth:''});}else{this.setState({selectedMonth:value.value});}}if(type==='selectedYear'){if(value===''||value===undefined||value===null){this.setState({selectedYear:''});}else{this.setState({selectedYear:value.value});}}if(type==='entityType'){if(value===''||value===undefined||value===null){this.setState({entityType:''});}else{this.setState({entityType:value.value});}}if(type==='processType'){if(value===''||value===undefined||value===null){this.setState({processType:''});}else{this.setState({processType:value.value});}}if(type==='recepientType'){if(value===''||value===undefined||value===null){this.setState({recepientType:''});}else{this.setState({recepientType:value.value});}}if(type==='selectedStatus'){if(value===''||value===undefined||value===null){this.setState({selectedStatus:''});}else{this.setState({selectedStatus:value.value});}}}},{key:\"show\",value:function show(field,condition,errorField,message){if(condition){if(document.getElementById(field))document.getElementById(field).className=\"form-control is-invalid\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML='<p>'+message+' </p>';}else{if(document.getElementById(field))document.getElementById(field).className=\"form-control\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML=null;}}},{key:\"changePolicyDateView\",value:function changePolicyDateView(){console.log(this.state.isMonthYear);this.setState({isMonthYear:!this.state.isMonthYear});}},{key:\"getPreviousRecords\",value:function getPreviousRecords(){var _this8=this;var offset=this.state.offset>0?parseInt(this.state.offset)-1:0;this.setState({offset:offset});setTimeout(function(){_this8.getSearchPolicy();},100);}},{key:\"getNextRecords\",value:function getNextRecords(){var _this9=this;var offset=this.state.offset>=0?parseInt(this.state.offset)+1:0;this.setState({offset:offset});setTimeout(function(){_this9.getSearchPolicy();},100);}},{key:\"render\",value:function render(){var _this10=this;var t=this.props.t;var header=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"1\"},/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.cols,options:this.colOptions,fixedPlaceholder:true,placeholder:CommonConfig.dataTableConfig.columnToggleIcon,tooltip:\"Show / Hide Column\",onChange:this.onColumnToggle,style:{width:'50px'}})),/*#__PURE__*/React.createElement(Col,{md:\"11\"},/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'right'}},/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-search\",style:{margin:'4px 4px 0 0'}}),/*#__PURE__*/React.createElement(InputText,{type:\"search\",onInput:function onInput(e){return _this10.setState({globalFilter:e.target.value});},placeholder:\"Global Search\",size:\"30\",style:{marginRight:10}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-external-link\",iconPos:\"left\",tooltip:\"Export as CSV\",tooltipOptions:{position:'left'},onClick:this.export,style:{marginRight:10}})))));var columns=this.state.cols.map(function(col,i){return/*#__PURE__*/React.createElement(Column,{key:i,field:col.field,header:col.header,body:col.body,sortable:col.sortable,filter:col.filter,filterMatchMode:col.filterMatchMode});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"basic-header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"SMS Report\"),/*#__PURE__*/React.createElement(\"div\",{className:\"header-right-option\"},/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.cols,options:this.colOptions,fixedPlaceholder:true,placeholder:CommonConfig.dataTableConfig.columnToggleIcon,tooltip:\"Show / Hide Column\",onChange:this.onColumnToggle,style:{width:'50px'}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-external-link\",tooltip:\"Export as CSV\",tooltipOptions:{position:'bottom'},onClick:this.export,style:{marginRight:10}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\",id:\"accordion\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-0\"},/*#__PURE__*/React.createElement(CardHeader,{id:\"headingOne\"},/*#__PURE__*/React.createElement(BTN,{block:true,color:\"link\",className:\"text-left m-0 p-0\",onClick:function onClick(){return _this10.setState({custom:!_this10.state.custom});},\"aria-expanded\":this.state.custom,\"aria-controls\":\"collapseOne\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"m-0 p-0\"},\"SMS Report\",/*#__PURE__*/React.createElement(\"i\",{style:{float:'right'},className:this.state.custom?\"fa fa-chevron-down\":\"fa fa-chevron-up\"})))),/*#__PURE__*/React.createElement(Collapse,{isOpen:this.state.custom,\"data-parent\":\"#accordion\",id:\"collapseOne\",\"aria-labelledby\":\"headingOne\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:function onSubmit(e){return e.preventDefault();}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Row,null,this.state.isMonthYear?/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Month\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"selectedMonth\",id:\"selectedMonth\",value:this.state.selectedMonth,onChange:function onChange(e){return _this10.selectType(e.target,'selectedMonth');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Month\"),this.state.monthArray.map(function(month,i){return/*#__PURE__*/React.createElement(\"option\",{value:month.value,key:i},month.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"selectedMonthError\",className:\"error invalid-feedback\"}))):/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"From\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"selectedFromDate\",id:\"selectedFromDate\",value:this.state.selectedFromDate,onBlur:function onBlur(e){return _this10.handleChange(e);},onChange:function onChange(e){return _this10.handleChange(e);}}),/*#__PURE__*/React.createElement(\"em\",{id:\"selectedFromDateError\",className:\"error invalid-feedback\"}))),this.state.isMonthYear?/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Year\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"selectedYear\",id:\"selectedYear\",value:this.state.selectedYear,onChange:function onChange(e){return _this10.selectType(e.target,'selectedYear');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Year\"),this.state.yearArray.map(function(year,i){return/*#__PURE__*/React.createElement(\"option\",{value:year.value,key:i},year.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"selectedYearError\",className:\"error invalid-feedback\"}))):/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"To\"),/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"selectedToDate\",id:\"selectedToDate\",value:this.state.selectedToDate,onBlur:function onBlur(e){return _this10.handleChange(e);},onChange:function onChange(e){return _this10.handleChange(e);}}),/*#__PURE__*/React.createElement(\"em\",{id:\"selectedToDateError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"2\",style:{alignSelf:'center'}},this.state.isMonthYear?/*#__PURE__*/React.createElement(\"label\",{style:{textDecoration:'underline'},onClick:function onClick(){return _this10.changePolicyDateView();}},\"Change to Date Range\"):/*#__PURE__*/React.createElement(\"label\",{style:{textDecoration:'underline'},onClick:function onClick(){return _this10.changePolicyDateView();}},\"Change to Month/Year\"))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Entity Type\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"entityType\",id:\"entityType\",value:this.state.entityType,onChange:function onChange(e){return _this10.selectType(e.target,'entityType');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"All\"),this.state.entityTypeList.map(function(x,i){return/*#__PURE__*/React.createElement(\"option\",{value:x.value,key:i},x.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"entityTypeError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Process\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"processType\",id:\"processType\",value:this.state.processType,onChange:function onChange(e){return _this10.selectType(e.target,'processType');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"All\"),this.state.processTypeList.map(function(x,i){return/*#__PURE__*/React.createElement(\"option\",{value:x.value,key:i},x.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"processTypeError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Recepient Type\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"recepientType\",id:\"recepientType\",value:this.state.recepientType,onChange:function onChange(e){return _this10.selectType(e.target,'recepientType');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"All\"),this.state.recepientTypeList.map(function(x,i){return/*#__PURE__*/React.createElement(\"option\",{value:x.value,key:i},x.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"recepientTypeError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null,\"Status\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"selectedStatus\",id:\"selectedStatus\",value:this.state.selectedStatus,onChange:function onChange(e){return _this10.selectType(e.target,'selectedStatus');}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"All\"),this.state.statusList.map(function(x,i){return/*#__PURE__*/React.createElement(\"option\",{value:x.value,key:i},x.label);})),/*#__PURE__*/React.createElement(\"em\",{id:\"selectedStatusError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"3\",className:\"text-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(\"label\",null),/*#__PURE__*/React.createElement(BTN,{type:\"submit\",color:\"success\",title:\"Go\",onClick:function onClick(){return _this10.getSMSReportList();}},\" Go \"))))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"table-custom\"},/*#__PURE__*/React.createElement(DataTable,{ref:function ref(el){return _this10.dt=el;},value:this.state.arr,first:this.state.selectedPage,onPage:function onPage(e){return _this10.getPageString(e);},paginator:true,rows:this.state.rowsPerPage,totalRecords:this.state.arr.length,exportFilename:\"SMS Report\",currentPageReportTemplate:this.state.str,scrollable:true,scrollHeight:\"340px\",paginatorTemplate:\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",rowsPerPageOptions:this.state.rowsPerPageOptions,globalFilter:this.state.globalFilter,emptyMessage:\"No records found\",responsive:true,resizableColumns:true,columnResizeMode:\"fit\"//stateKey=\"contactList\" stateStorage=\"local\" header={header} \n},columns)),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isMessageModalVisible,className:'modal-lg',style:{maxWidth:'70%'}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this10.setState({isMessageModalVisible:false});}},\" MessageDetails \"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Card,{className:\"mb-0\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",null,this.state.FullMessage)))))));}}]);return SMSReport;}(Component);export default withTranslation()(SMSReport);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/SMSReport.js"],"names":["React","Component","Modal","ModalBody","Collapse","Button","BTN","ModalHeader","Card","CardHeader","UncontrolledTooltip","CardBody","Col","Row","Input","Form","api","withTranslation","DataTable","Column","MultiSelect","InputText","CommonConfig","DatePicker","moment","uuid","APIConstant","Select","off","toast","apiBase","SMSReport","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","toggleLargeAdd","toggleModalAdd","toggleCustom","tab","prevState","custom","map","x","index","handleChange","t","target","name","value","selectedFromDate","selectedToDate","isEmpty","isToDateGreater","isSameOrAfter","show","columns","field","header","sortable","filter","filterMatchMode","id","body","formatEntityData","bind","formatProcessDetail","formatClientDetail","formatPhoneNumber","formatMessage","formatStatus","cols","filteredcontactsSingle","rowsPerPageOptions","dataTableConfig","isExpand","isMonthYear","monthArray","yearArray","selectedFromDateError","selectedToDateError","selectedMonth","parseInt","format","selectedMonthError","selectedYear","selectedYearError","selectedStatus","entityType","entityTypeError","processType","processTypeError","recepientType","recepientTypeError","label","colOptions","col","push","onColumnToggle","actionTemplate","export","getDropdown","data","IsMonthYear","Month","Year","FromDate","ToDate","EntityType","ProcessType","RecipientType","Status","post","then","res","console","log","catch","err","error","startYear","last10Year","newSelected","selectAll","forEach","SrNo","selected","Object","assign","rowData","column","toggleRow","event","valueInOrder","sort","y","history","pathname","PolicyId","openPolicy","marginRight","cursor","borderBottomWidth","color","position","PolicyNumber","ProcessDetail","openContact","PhoneNumber","ClientDetail","Message","substr","viewSMSMessage","SMSSenderId","ErrorMsg","isMessageModalVisible","FullMessage","window","open","location","origin","EntityId","dt","exportCSV","stringMapType","setStateName","stringmaptype","orderby","path","dropdownbycode","success","type","undefined","condition","errorField","message","document","getElementById","className","innerHTML","offset","setTimeout","getSearchPolicy","columnToggleIcon","width","textAlign","margin","globalFilter","i","float","preventDefault","selectType","month","year","alignSelf","textDecoration","changePolicyDateView","entityTypeList","processTypeList","recepientTypeList","statusList","getSMSReportList","el","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, ModalBody, Collapse, Button as BTN, ModalHeader, Card, CardHeader,\r\n    UncontrolledTooltip, CardBody, Col, Row, Input, Form } from 'reactstrap';\r\nimport { Button } from 'primereact/button';\r\nimport api from '../../utils/apiClient';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport DatePicker from 'react-date-picker';\r\nimport moment from 'moment';\r\nimport uuid from \"uuid\";\r\nimport APIConstant from '../../utils/constants';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.min.css';\r\nimport { off } from 'codemirror';\r\nimport { toast } from 'react-toastify';\r\nimport { apiBase } from '../../utils/config';\r\n\r\nclass SMSReport extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"Date\", header: \"Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { body: this.formatEntityData.bind(this), field: \"EntityData\", header: \"Entity Type/Entity ID\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { body: this.formatProcessDetail.bind(this), field: \"ProcessDetail\", header: \"Process/Template Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"RecipientType\", header: \"Recipient Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { body: this.formatClientDetail.bind(this), field: \"ClientDetail\", header: \"Client/Sub Agent\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { body: this.formatPhoneNumber.bind(this), field: \"PhoneNumber\", header: \"Recipient Mobile\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { body: this.formatMessage.bind(this), field: \"Message\", header: \"Message\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { body: this.formatStatus.bind(this), field: \"Status\", header: \"Status\", sortable: true, filter: true, filterMatchMode: 'contains', id: 8 },\r\n        ];\r\n\r\n        this.state = {\r\n            toggleModalAdd: false,\r\n            cols: columns,\r\n            str: '',\r\n            arr: [],\r\n            selectedPage: 0,\r\n            filteredcontactsSingle: null,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            custom: true,\r\n            isExpand: false,\r\n\r\n            isMonthYear: true,\r\n            monthArray: [],\r\n            yearArray: [],\r\n\r\n            selectedFromDate:'',\r\n            selectedFromDateError: false,\r\n            selectedToDate:'',\r\n            selectedToDateError: false,\r\n\r\n            selectedMonth:parseInt(moment().format('MM')),\r\n            selectedMonthError: false,\r\n            selectedYear:moment().format('YYYY'),\r\n            selectedYearError: false,\r\n\r\n            selectedStatus:'',\r\n            entityType:'',\r\n            entityTypeError: false,\r\n            processType:'',\r\n            processTypeError: false,\r\n            recepientType: '',\r\n            recepientTypeError: false,\r\n            selectedStatus:'',\r\n            selectedStatusError: false,\r\n            isMessageModalVisible: false,\r\n            FullMessage: '',\r\n\r\n            offset: 0,\r\n            recordStr: '',\r\n            selected: {},\r\n            batchMessageHeaderId: '',\r\n            policyCount: 0,\r\n            \r\n            entityTypeList: [\r\n            \r\n            { label: 'Policy', value: 'Policy' },\r\n            { label: 'Claims', value: 'Claims' },\r\n            \r\n            ],\r\n\r\n            processTypeList: [\r\n                \r\n            { label: 'Renewal', value: 'Renewal' },\r\n\r\n            ],\r\n            recepientTypeList: [\r\n                \r\n            { label: 'SubAgent', value: 'SubAgent' },\r\n            { label: 'Client', value: 'Client' },\r\n\r\n            ],\r\n\r\n            statusList: [\r\n                \r\n            { label: 'Pending', value: 'Pending'},\r\n            { label: 'Sent', value: 'Sent' },\r\n            { label: 'Failed', value: 'Failed' },\r\n        \r\n            ],\r\n\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDropdown();\r\n        // this.getSMSReportList();\r\n    }\r\n\r\n    getSMSReportList(){\r\n        let data ={\r\n            IsMonthYear: this.state.isMonthYear ? \"true\" : \"false\",\r\n            Month: this.state.isMonthYear ? this.state.selectedMonth : '',\r\n            Year: this.state.isMonthYear ? this.state.selectedYear : '',\r\n            FromDate: !this.state.isMonthYear ? this.state.selectedFromDate : '',\r\n            ToDate: !this.state.isMonthYear ? this.state.selectedToDate : '',\r\n            EntityType: this.state.entityType,\r\n            ProcessType: this.state.processType,\r\n            RecipientType: this.state.recepientType,\r\n            Status: this.state.selectedStatus,\r\n        }\r\n\r\n        api.post('api/getSMSReportList',data).then(res =>{\r\n            console.log(\"data in SMS List....\",res);\r\n            this.setState({ arr: res.data[0]});\r\n        }).catch(err =>{\r\n            console.log(\"error in SMSList\",err);\r\n            toast.error(\"Error\",err);\r\n        });\r\n    }\r\n\r\n    getDropdown() {\r\n\r\n        // Get Month\r\n        let monthArray = [\r\n            { label: 'January', value: 1 },\r\n            { label: 'February', value: 2 },\r\n            { label: 'March', value: 3 },\r\n            { label: 'April', value: 4 },\r\n            { label: 'May', value: 5 },\r\n            { label: 'June', value: 6 },\r\n            { label: 'July', value: 7 },\r\n            { label: 'August', value: 8 },\r\n            { label: 'Septemeber', value: 9 },\r\n            { label: 'October', value: 10 },\r\n            { label: 'November', value: 11 },\r\n            { label: 'December', value: 12 },\r\n        ];\r\n        this.setState({ monthArray: monthArray });\r\n\r\n        // Get Year - Get last 10 year from current year\r\n        let startYear = moment().format('YYYY');\r\n        let last10Year = parseInt(startYear) - 10;\r\n        let yearArray = [];\r\n        for (let index = last10Year; index <= (parseInt(last10Year) + 10); index++) {\r\n            yearArray.push({ label: index, value: index });\r\n        }\r\n        this.setState({ yearArray: yearArray });\r\n\r\n\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.SrNo] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    toggleRow(SrNo) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[SrNo] = !this.state.selected[SrNo];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.SrNo] === true}\r\n                onChange={() => this.toggleRow(rowData.SrNo)} />\r\n        </div>;\r\n    }\r\n\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    edit(rowData) {\r\n        this.props.history.push({\r\n            pathname: '/PolicyDetailsMerged/' + rowData.PolicyId + '/1/1',\r\n            state: {\r\n                PolicyId: rowData.PolicyId,\r\n                tab: 1\r\n            }\r\n        });\r\n    }\r\n\r\n    formatEntityData(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.EntityType} - {\" \"}\r\n                <a onClick={()=> this.openPolicy(rowData)} \r\n                    style={{ marginRight: '.5em', cursor: 'pointer' , borderBottomWidth: \"1px\" , color: \"#007ad9\"}}\r\n                    tooltip=\"View Policy\" tooltipOptions={{ position: 'bottom' }}>\r\n                    {rowData.PolicyNumber}\r\n                </a>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatProcessDetail(rowData){\r\n        return(\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ProcessDetail}</p>\r\n                {/* <p>{rowData.PolicyNumber}</p> */}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    formatPhoneNumber(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p><a onClick={()=> this.openContact(rowData)} \r\n                    style={{ marginRight: '.5em', cursor: 'pointer' , borderBottomWidth: \"1px\" , color: \"#007ad9\"}}\r\n                    tooltip=\"View Contact Deatils\" tooltipOptions={{ position: 'bottom' }}>\r\n                    {rowData.PhoneNumber}\r\n                </a></p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatClientDetail(rowData){\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ClientDetail}</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    formatMessage(rowData){\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Message.substr(0,50)}\r\n                <a onClick={()=>this.viewSMSMessage(rowData)} style={{ marginRight: '.5em', cursor: 'pointer' , borderBottomWidth: \"1px\" , color: \"#007ad9\"}}\r\n                    >\r\n                    ...</a></p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatStatus(rowData){\r\n        return(\r\n            <div className=\"policy-list-data\">\r\n            <p>{rowData.Status}\r\n                {rowData.Status == 'Failed' ? \r\n                    <>\r\n                        <i style={{ color: '#ff0000'}} class=\"fa fa-exclamation-circle\" id={\"Error\"+rowData.SMSSenderId} \r\n                        aria-hidden=\"true\"></i>\r\n                        <UncontrolledTooltip placement=\"bottom\" target={\"Error\"+rowData.SMSSenderId}>\r\n                            {rowData.ErrorMsg}    \r\n                        </UncontrolledTooltip>\r\n                    </>\r\n                    :null\r\n                }\r\n            </p>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    viewSMSMessage(rowData){\r\n        this.setState({isMessageModalVisible: true , FullMessage: rowData.Message });\r\n    }\r\n\r\n    openContact(rowData){        \r\n        window.open(window.location.origin + '/#' + 'viewContactDetails/' + rowData.EntityId + '/' + rowData.EntityType);\r\n    }\r\n    // PolicyDetailsMerged/7e921eb8-f65e-11ea-8832-2da09a23e307/1/1\r\n    openPolicy(rowData){        \r\n        window.open(window.location.origin + '/#' + 'PolicyDetailsMerged/' + rowData.PolicyId + '/1/1');\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: 'sortorder'\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error...\", error);\r\n        }\r\n    }\r\n\r\n    toggleLargeAdd = () => {\r\n        this.setState({ toggleModalAdd: false });\r\n    }\r\n\r\n\r\n    toggleCustom = (tab) => {\r\n        const prevState = this.state.custom;\r\n        const state = prevState.map((x, index) => tab === index ? !x : false);\r\n        this.setState({ custom: state });\r\n    }\r\n\r\n    selectType(value, type) {\r\n        if (type === 'selectedMonth') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ selectedMonth: '' });\r\n            } else {\r\n                this.setState({ selectedMonth: value.value });\r\n            }\r\n        }\r\n\r\n        if (type === 'selectedYear') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ selectedYear: '' });\r\n            } else {\r\n                this.setState({ selectedYear: value.value });\r\n            }\r\n        }\r\n\r\n        if (type === 'entityType') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ entityType: '' });\r\n            } else {\r\n                this.setState({ entityType: value.value });\r\n            }\r\n        }\r\n\r\n        if (type === 'processType') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ processType: '' });\r\n            } else {\r\n                this.setState({ processType: value.value });\r\n            }\r\n        }\r\n\r\n        if (type === 'recepientType') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ recepientType: '' });\r\n            } else {\r\n                this.setState({ recepientType: value.value });\r\n            }\r\n        }\r\n\r\n        if (type === 'selectedStatus') {\r\n            if (value === '' || value === undefined || value === null) {\r\n                this.setState({ selectedStatus: '' });\r\n            } else {\r\n                this.setState({ selectedStatus: value.value });\r\n            }\r\n        }\r\n\r\n    }\r\n    handleChange = e => {\r\n        const { t } = this.props;\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'selectedFromDate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ selectedFromDate: '' });\r\n            } else {\r\n                this.setState({ selectedFromDate: e.target.value, selectedToDate: '' });\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'selectedToDate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ selectedToDate: '' });\r\n            } else {\r\n                if (!CommonConfig.isEmpty(this.state.selectedFromDate)) {\r\n                    var isToDateGreater = moment(e.target.value).isSameOrAfter(this.state.selectedFromDate);\r\n                    if (!isToDateGreater) {\r\n                        this.show('selectedToDate', true, 'selectedToDateError', 'To date must be greater then From date.');\r\n                    } else {\r\n                        this.show('selectedToDate', false, 'selectedToDateError', '');\r\n                    }\r\n                } else {\r\n                    this.show('selectedToDate', false, 'selectedToDateError', '');\r\n                }\r\n                this.setState({ selectedToDate: e.target.value });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    changePolicyDateView() {\r\n        console.log(this.state.isMonthYear);\r\n        this.setState({ isMonthYear: !this.state.isMonthYear });\r\n    }\r\n\r\n    getPreviousRecords() {\r\n        let offset = (this.state.offset > 0) ? parseInt(this.state.offset) - 1 : 0;\r\n        this.setState({ offset: offset });\r\n\r\n        setTimeout(() => {\r\n            this.getSearchPolicy();\r\n        }, 100);\r\n    }\r\n\r\n    getNextRecords() {\r\n        let offset = (this.state.offset >= 0) ? parseInt(this.state.offset) + 1 : 0;\r\n        this.setState({ offset: offset });\r\n\r\n        setTimeout(() => {\r\n            this.getSearchPolicy();\r\n        }, 100);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        var header = <div>\r\n            <Row>\r\n                <Col md=\"1\">\r\n                    <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                        fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                        onChange={this.onColumnToggle} style={{ width: '50px' }} />\r\n                </Col>\r\n                <Col md=\"11\">\r\n                    <div style={{ textAlign: 'right' }}>\r\n                        <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n                        <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" size=\"30\" style={{ marginRight: 10 }} />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" iconPos=\"left\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'left' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>SMS Report</h1>\r\n\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n\r\n                    {/* <h5>Search Policy</h5> */}\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    {\"SMS Report\"}\r\n                                    <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <Form onSubmit={e => e.preventDefault()}>\r\n                                    \r\n\r\n                                        <Row>\r\n                                            <Col md=\"12\">\r\n                                                <Row>\r\n                                                    {(this.state.isMonthYear) ? (\r\n                                                        <Col md=\"2\">\r\n                                                            <div className=\"input-box\">\r\n                                                                <label>Month</label>\r\n                                                                <Input type=\"select\" name=\"selectedMonth\" id=\"selectedMonth\" value={this.state.selectedMonth} onChange={(e) => this.selectType(e.target, 'selectedMonth')}>\r\n                                                                    <option value=\"\">Select Month</option>\r\n                                                                    {this.state.monthArray.map((month, i) => {\r\n                                                                        return (<option value={month.value} key={i}>{month.label}</option>)\r\n                                                                    })\r\n                                                                    }\r\n                                                                </Input>\r\n                                                                <em id=\"selectedMonthError\" className=\"error invalid-feedback\"></em>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    ) : (\r\n                                                            <Col md=\"2\">\r\n                                                                <div className=\"input-box\">\r\n                                                                    <label>From</label>\r\n                                                                    <Input type=\"date\" name=\"selectedFromDate\" id=\"selectedFromDate\"\r\n                                                                        value={this.state.selectedFromDate}\r\n                                                                        onBlur={(e) => this.handleChange(e)}\r\n                                                                        onChange={(e) => this.handleChange(e)} />\r\n                                                                    <em id=\"selectedFromDateError\" className=\"error invalid-feedback\"></em>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        )}\r\n                                                    {(this.state.isMonthYear) ? (\r\n                                                        <Col md=\"2\">\r\n                                                            <div className=\"input-box\">\r\n                                                                <label>Year</label>\r\n                                                                <Input type=\"select\" name=\"selectedYear\" id=\"selectedYear\" value={this.state.selectedYear} onChange={(e) => this.selectType(e.target, 'selectedYear')}>\r\n                                                                    <option value=\"\">Select Year</option>\r\n                                                                    {this.state.yearArray.map((year, i) => {\r\n                                                                        return (<option value={year.value} key={i}>{year.label}</option>)\r\n                                                                    })\r\n                                                                    }\r\n                                                                </Input>\r\n                                                                <em id=\"selectedYearError\" className=\"error invalid-feedback\"></em>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    ) : (\r\n                                                            <Col md=\"2\">\r\n                                                                <div className=\"input-box\">\r\n                                                                    <label>To</label>\r\n                                                                    <Input type=\"date\" name=\"selectedToDate\" id=\"selectedToDate\"\r\n                                                                        value={this.state.selectedToDate}\r\n                                                                        onBlur={(e) => this.handleChange(e)}\r\n                                                                        onChange={(e) => this.handleChange(e)} />\r\n                                                                    <em id=\"selectedToDateError\" className=\"error invalid-feedback\"></em>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        )}\r\n\r\n                                                    <Col md=\"2\" style={{ alignSelf: 'center' }}>\r\n                                                        {(this.state.isMonthYear) ? (\r\n                                                            <label style={{ textDecoration: 'underline' }} onClick={() => this.changePolicyDateView()}>Change to Date Range</label>\r\n                                                        ) : (\r\n                                                                <label style={{ textDecoration: 'underline' }} onClick={() => this.changePolicyDateView()}>Change to Month/Year</label>\r\n                                                            )}\r\n                                                    </Col>\r\n\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n\r\n                                        <Row>\r\n                                            <Col md=\"2\">\r\n                                                <div className=\"input-box\">\r\n                                                    <label>Entity Type</label>\r\n                                                    <Input type=\"select\" name=\"entityType\" id=\"entityType\" value={this.state.entityType} onChange={(e) => this.selectType(e.target, 'entityType')}>\r\n                                                        <option value=\"\">All</option>\r\n                                                        {this.state.entityTypeList.map((x, i) => {\r\n                                                            return (<option value={x.value} key={i}>{x.label}</option>)\r\n                                                        })\r\n                                                        }\r\n                                                    </Input>\r\n                                                    <em id=\"entityTypeError\" className=\"error invalid-feedback\"></em>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <div className=\"input-box\">\r\n                                                    <label>Process</label>\r\n                                                    <Input type=\"select\" name=\"processType\" id=\"processType\" value={this.state.processType} onChange={(e) => this.selectType(e.target, 'processType')}>\r\n                                                        <option value=\"\">All</option>\r\n                                                        {this.state.processTypeList.map((x, i) => {\r\n                                                            return (<option value={x.value} key={i}>{x.label}</option>)\r\n                                                        })\r\n                                                        }\r\n                                                    </Input>\r\n                                                    <em id=\"processTypeError\" className=\"error invalid-feedback\"></em>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <div className=\"input-box\">\r\n                                                    <label>Recepient Type</label>\r\n                                                    <Input type=\"select\" name=\"recepientType\" id=\"recepientType\" value={this.state.recepientType} onChange={(e) => this.selectType(e.target, 'recepientType')}>\r\n                                                        <option value=\"\">All</option>\r\n                                                        {this.state.recepientTypeList.map((x, i) => {\r\n                                                            return (<option value={x.value} key={i}>{x.label}</option>)\r\n                                                        })\r\n                                                        }\r\n                                                    </Input>\r\n                                                    <em id=\"recepientTypeError\" className=\"error invalid-feedback\"></em>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <div className=\"input-box\">\r\n                                                    <label>Status</label>\r\n                                                    <Input type=\"select\" name=\"selectedStatus\" id=\"selectedStatus\" value={this.state.selectedStatus} onChange={(e) => this.selectType(e.target, 'selectedStatus')}>\r\n                                                        <option value=\"\">All</option>\r\n                                                        {this.state.statusList.map((x, i) => {\r\n                                                            return (<option value={x.value} key={i}>{x.label}</option>)\r\n                                                        })\r\n                                                        }\r\n                                                    </Input>\r\n                                                    <em id=\"selectedStatusError\" className=\"error invalid-feedback\"></em>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col md=\"3\" className=\"text-left\">\r\n                                            <div className=\"input-box\">\r\n                                            <label></label>\r\n                                                <BTN type=\"submit\" color=\"success\" title=\"Go\" onClick={() => this.getSMSReportList()}> Go </BTN>\r\n                                            </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable \r\n                        ref={(el) => this.dt = el} \r\n                        value={this.state.arr} \r\n                        first={this.state.selectedPage} \r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} \r\n                        rows={this.state.rowsPerPage} \r\n                        totalRecords={this.state.arr.length} \r\n                        exportFilename=\"SMS Report\"\r\n                        currentPageReportTemplate={this.state.str} \r\n                        scrollable={true}\r\n                        scrollHeight=\"340px\"\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} \r\n                        globalFilter={this.state.globalFilter} \r\n                        emptyMessage=\"No records found\"\r\n                        responsive={true} \r\n                        resizableColumns={true} \r\n                        columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \r\n                    >\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n                \r\n                <Modal isOpen={this.state.isMessageModalVisible} className={'modal-lg'} style={{ maxWidth: '70%' }}>\r\n                    <ModalHeader toggle={() => this.setState({ isMessageModalVisible: false })}> MessageDetails </ModalHeader>\r\n                    <ModalBody>\r\n                        <Card className=\"mb-0\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                        <div>\r\n                                            {this.state.FullMessage}\r\n                                            {/* <ShowMoreText\r\n                                                lines={2}\r\n                                                more='Show more'\r\n                                                less='Show less'\r\n                                                anchorClass=''\r\n                                                onClick={this.executeOnClick}\r\n                                                expanded={false}>\r\n                                                {notes.NoteText}\r\n                                            </ShowMoreText> */}\r\n                                        </div>\r\n                                        </Col>   \r\n                                    </Row>\r\n                        </Card>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(SMSReport);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}