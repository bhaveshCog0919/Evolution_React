{"ast":null,"code":"import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Select from'react-select';import api from'../../utils/apiClient';import moment from'moment';import DatePicker from'react-date-picker';import{withTranslation}from'react-i18next';import{DataTable}from'primereact/datatable';import{Column}from'primereact/column';import{CommonConfig}from'../../utils/constants';import{Button}from'primereact/button';import{MultiSelect}from'primereact/multiselect';import{Collapse,Button as BTN,Input,Card,CardHeader,CardBody,Row,Col}from'reactstrap';import{toast}from'react-toastify';import APIConstant from'../../utils/constants';var Contact_Missing_Report=/*#__PURE__*/function(_Component){_inherits(Contact_Missing_Report,_Component);var _super=_createSuper(Contact_Missing_Report);function Contact_Missing_Report(props){var _this;_classCallCheck(this,Contact_Missing_Report);_this=_super.call(this,props);_this.getPageString=function(e){var firstPage=e.first+1;var l=e.rows*(e.page+1);var lastPage=l<_this.state.arr.length?l:_this.state.arr.length;var str=firstPage+' to '+lastPage+' out of '+_this.state.arr.length+' records';_this.setState({selectedPage:e.first,str:str,rowsPerPage:e.rows});};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));if(e.target.name==='monthtillDate'){_this.setState({monthtillDate:e.target.value});}if(e.target.name==='fromDate'){_this.setState({fromDate:e.target.value});}if(e.target.name==='toDate'){_this.setState({toDate:e.target.value});}if(e.target.name==='Year'){if(e.target.value===null||e.target.value===undefined||e.target.value===''){_this.setState({Year:e.target.value,YearError:true});_this.show('Year',true,'YearError','Please Enter Year');}else{_this.setState({Year:e.target.value,YearError:false});_this.show('Year',false,'YearError','');}}};var columns=[/*{ body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n           { field: \"Action\", header: \"Action\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },*/{field:\"ContactCode\",header:\"Contact Code\",sortable:true,filter:true,id:1,style:{'width':'45px'}},{field:\"ContactName\",header:\"Contact Name\",sortable:true,filter:true,id:2,style:{'width':'100px'}},{field:\"ContactCategory\",header:\"Contact Category\",sortable:true,filter:true,id:3,style:{'width':'85px'}},{field:\"ContactType\",header:\"Contact Type\",sortable:true,filter:true,id:4,style:{'width':'125px'}},{field:\"Email\",header:\"Email\",sortable:true,filter:true,id:5,style:{'width':'125px'}},{field:\"Phone\",header:\"Phone\",sortable:true,filter:true,id:6,style:{'textAlign':'right','width':'85px'}},{field:\"CreatedBy\",header:\"Created By\",sortable:true,filter:true,id:7,style:{'textAlign':'right','width':'85px'}}];_this.state={LanguageId:props.i18n.language==='en'?'en-GB':props.i18n.language==='es'?'es-ES':props.i18n.language==='ie'?'en-IE':props.i18n.language,cols:columns,arr:[],selectedPage:0,rowsPerPageOptions:CommonConfig.dataTableConfig.rowsPerPageOptions,str:'',rowsPerPage:CommonConfig.dataTableConfig.rowsPerPage,globalFilter:null,searchCollapse:false,DebtorType:'SubAgent',Period:0,selected:{},selectedPolicy:0,selectedAgent:'',selectAll:0,DebtorTypeError:false,agentinfo:'',agentinfoError:false,monthtillDate:moment().format(\"YYYY-MM\"),fromDate:moment().format(\"YYYY-MM-DD\"),toDate:moment().format(\"YYYY-MM-DD\"),CONTACTTYPEList:[],MONTH:('0'+(new Date().getMonth()+2).toString()).slice(-2),MONTHError:false,CONTACTTYPE:'All',Year:'',YearError:false};_this.colOptions=[];for(var _i=0,_columns=columns;_i<_columns.length;_i++){var col=_columns[_i];_this.colOptions.push({label:col.header,value:col});}_this.export=_this.export.bind(_assertThisInitialized(_this));return _this;}_createClass(Contact_Missing_Report,[{key:\"componentDidMount\",value:function componentDidMount(){this.Contact_Missing_Report(this.state.CONTACTTYPE);this.getDropDownValues('CONTACTTYPE','CONTACTTYPEList');}},{key:\"ClientDetails\",value:function ClientDetails(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.ClientName),/*#__PURE__*/React.createElement(\"p\",null,rowData.ClientCode));}},{key:\"AgentDetails\",value:function AgentDetails(rowData){return/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.AgentName),/*#__PURE__*/React.createElement(\"p\",null,rowData.AgentCode));}},{key:\"toggleRow\",value:function toggleRow(id){var newSelected=Object.assign({},this.state.selected);newSelected[id]=!this.state.selected[id];this.setState({selected:newSelected,selectAll:2});}},{key:\"toggleSelectAll\",value:function toggleSelectAll(){var newSelected={};if(this.state.selectAll===0){this.state.arr.forEach(function(x){newSelected[x.id]=true;});}this.setState({selected:newSelected,selectAll:this.state.selectAll===0?1:0});}},{key:\"actionTemplate\",value:function actionTemplate(rowData,column){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",className:\"checkbox\",checked:this.state.selected[rowData.id]===true,onChange:function onChange(){return _this2.toggleRow(rowData.id);}}));}},{key:\"SourceName\",value:function SourceName(rowData){return rowData.Source===\"Direct\"?/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.Source)):/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.Source),/*#__PURE__*/React.createElement(\"p\",null,\"(\",rowData.SourceName,\")\"));}},{key:\"ColumnclassName\",value:function ColumnclassName(rowData,Column){return rowData.DaysOutstanding<=7?/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:'#008c9a',color:'#fff'},className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.ProjectedPremium)):/*#__PURE__*/React.createElement(\"div\",{className:\"policy-list-data\"},/*#__PURE__*/React.createElement(\"p\",null,rowData.ProjectedPremium));}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName,orderBy){var _this3=this;try{var data={stringmaptype:stringMapType,orderby:orderBy};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){_this3.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){}}},{key:\"Contact_Missing_Report\",value:function Contact_Missing_Report(){var _this4=this;var ShowMonth=this.state.MONTH;console.log(ShowMonth);if(ShowMonth===\"\")this.state.MONTH=new Date().getMonth()+2;else if(ShowMonth===\"All\")this.state.MONTH=1;if(this.state.Year===\"\")this.state.Year=new Date().getFullYear();var startDate=moment([parseInt(this.state.Year),parseInt(this.state.MONTH)-1]).format('YYYY-MM-DD');if(ShowMonth===''||ShowMonth==='All')var endDate=moment(startDate).endOf('year').format('YYYY-MM-DD');else var endDate=moment(startDate).endOf('month').format('YYYY-MM-DD');var data={CONTACTTYPE:this.state.CONTACTTYPE};api.post('api/Contact_Missing_Report',data).then(function(res){debugger;if(res.success){console.log(\"resdata......\",res);var formattedData=[];_this4.setState({selectedPage:0});var dataLength=res.data[0].length;if(dataLength>0){for(var i=0;i<dataLength;i++){var tempData=res.data[0][i];console.log(\"tempData\",tempData);formattedData.push({id:i,ContactId:tempData.ContactId,ContactCategory:tempData.EntityType,ContactName:tempData.ContactName,ContactType:tempData.ContactType,ContactCode:tempData.ContactCode,Email:tempData.Email,Phone:tempData.Phone,CreatedBy:tempData.CreatedBy});}}console.log(\"formattedData...\",formattedData);var firstPage=formattedData.length?'1':'0';var lastPage=_this4.state.rowsPerPage<formattedData.length?_this4.state.rowsPerPage:formattedData.length;var str=firstPage+' to '+lastPage+' out of '+formattedData.length+' records';_this4.setState({arr:formattedData,str:str});}});}},{key:\"export\",value:function _export(){this.dt.exportCSV();}},{key:\"filterData\",value:function filterData(){this.Contact_Missing_Report(this.state.CONTACTTYPE);}},{key:\"selectType\",value:function selectType(value,type){if(type==='DebtorType'){this.setState({DebtorTypeError:false,DebtorType:value});this.show('DebtorType',false,\"DebtorTypeError\",\"\");this.getOrganazationData(value);}if(type==='agentinfo'){this.setState({agentinfo:value,agentinfoError:false});this.show('agentinfo',false,'agentinfoError','');}if(type==='Period'){this.setState({Period:value});}if(type==='CONTACTTYPE'){if(CommonConfig.isEmpty(value)){this.setState({CONTACTTYPEError:true,CONTACTTYPE:value});this.show('CONTACTTYPE',true,\"CONTACTTYPEError\",\"Please select policy type\");}else{this.setState({CONTACTTYPEError:false,CONTACTTYPE:value});this.show('CONTACTTYPE',false,\"CONTACTTYPEError\",\"\");}}}},{key:\"getOrganazationData\",value:function getOrganazationData(ContactType){var _this5=this;try{var data={ContactType:ContactType};api.post('api/getOrganazationData',data).then(function(res){if(res.success){var formattedData=[];for(var i=0;i<res.data.length;i++){formattedData.push({label:res.data[i].OrganizationName,value:res.data[i].OrganizationId});}_this5.setState({sourceList:formattedData});}else{console.log('getOrganazationData_error');}}).catch(function(err){console.log('getOrganazationData',err);});}catch(error){console.log('getOrganazationData',error);}}},{key:\"show\",value:function show(field,condition,errorField,message){if(condition){if(document.getElementById(field))document.getElementById(field).className=\"form-control is-invalid\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML='<p>'+message+' </p>';}else{if(document.getElementById(field))document.getElementById(field).className=\"form-control\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML=null;}}},{key:\"ReferrData\",value:function ReferrData(){var data={};}},{key:\"render\",value:function render(){var _this6=this;var t=this.props.t;var header=null;var columns=this.state.cols.map(function(col,i){return/*#__PURE__*/React.createElement(Column,{key:i,field:col.field,header:col.header,body:col.body,sortable:col.sortable,filter:col.filter,filterMatchMode:col.filterMatchMode,style:col.style});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"basic-header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Contact with missing Phone and Email\"),/*#__PURE__*/React.createElement(\"div\",{className:\"header-right-option\"},/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.cols,options:this.colOptions,fixedPlaceholder:true,placeholder:CommonConfig.dataTableConfig.columnToggleIcon,tooltip:\"Show / Hide Column\",tooltipOptions:{position:'bottom'},onChange:this.onColumnToggle,style:{width:'50px'}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-external-link\",tooltip:\"Export as CSV\",tooltipOptions:{position:'bottom'},onClick:this.export,style:{marginRight:10}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\",id:\"accordion\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-0\"},/*#__PURE__*/React.createElement(CardHeader,{id:\"headingOne\"},/*#__PURE__*/React.createElement(BTN,{block:true,color:\"link\",className:\"text-left m-0 p-0\",onClick:function onClick(){return _this6.setState({custom:!_this6.state.custom});},\"aria-expanded\":this.state.custom,\"aria-controls\":\"collapseOne\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"m-0 p-0\"},\"Filter\",/*#__PURE__*/React.createElement(\"i\",{style:{float:'right'},className:this.state.custom?\"fa fa-chevron-down\":\"fa fa-chevron-up\"})))),/*#__PURE__*/React.createElement(Collapse,{isOpen:this.state.custom,\"data-parent\":\"#accordion\",id:\"collapseOne\",\"aria-labelledby\":\"headingOne\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"filter-data\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,\"Contact Type\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"CONTACTTYPE\",id:\"CONTACTTYPE\",onChange:function onChange(e){return _this6.selectType(e.target.value,'CONTACTTYPE');},value:this.state.CONTACTTYPE},/*#__PURE__*/React.createElement(\"option\",{value:\"All\"},\"All\"),this.state.CONTACTTYPEList.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.StringMapKey},type.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"MONTHError\",className:\"error invalid-feedback\"})),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",null,\"\\xA0\"),/*#__PURE__*/React.createElement(BTN,{color:\"success\",title:\"Search\",onClick:function onClick(){return _this6.filterData();}},\" Search \"))),/*#__PURE__*/React.createElement(Row,null)))))),/*#__PURE__*/React.createElement(\"div\",{className:\"table-custom\"},/*#__PURE__*/React.createElement(DataTable,{ref:function ref(el){return _this6.dt=el;},value:this.state.arr,first:this.state.selectedPage,onPage:function onPage(e){return _this6.getPageString(e);},paginator:true,rows:this.state.rowsPerPage,header:header,totalRecords:this.state.arr.length,exportFilename:\"Contact Missing Report\",currentPageReportTemplate:this.state.str,scrollable:true,paginatorTemplate:\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",rowsPerPageOptions:this.state.rowsPerPageOptions,globalFilter:this.state.globalFilter,emptyMessage:\"No records found\",responsive:true,resizableColumns:true,columnResizeMode:\"expand\"},columns)));}}]);return Contact_Missing_Report;}(Component);export default withTranslation()(Contact_Missing_Report);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/Contact_Missing_Report.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","toast","APIConstant","Contact_Missing_Report","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","monthtillDate","fromDate","toDate","undefined","Year","YearError","show","columns","field","header","sortable","filter","id","style","LanguageId","i18n","language","cols","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","DebtorType","Period","selected","selectedPolicy","selectedAgent","selectAll","DebtorTypeError","agentinfo","agentinfoError","format","CONTACTTYPEList","MONTH","Date","getMonth","toString","slice","MONTHError","CONTACTTYPE","colOptions","col","push","label","export","bind","getDropDownValues","rowData","ClientName","ClientCode","AgentName","AgentCode","newSelected","Object","assign","forEach","x","column","toggleRow","Source","SourceName","DaysOutstanding","backgroundColor","color","ProjectedPremium","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","ShowMonth","console","log","getFullYear","startDate","parseInt","endDate","endOf","formattedData","dataLength","i","tempData","ContactId","ContactCategory","EntityType","ContactName","ContactType","ContactCode","Email","Phone","CreatedBy","dt","exportCSV","type","getOrganazationData","isEmpty","CONTACTTYPEError","OrganizationName","OrganizationId","sourceList","condition","errorField","message","document","getElementById","className","innerHTML","t","map","body","filterMatchMode","columnToggleIcon","position","onColumnToggle","width","marginRight","custom","float","selectType","StringMapKey","StringMapName","filterData","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n\r\nclass Contact_Missing_Report extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n             /*{ body: this.actionTemplate.bind(this), field: \"Select\", header: \"Select\", sortable: false, id: \"checkbox\", style: { 'width': '45px' } },\r\n           { field: \"Action\", header: \"Action\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },*/\r\n            { field: \"ContactCode\", header: \"Contact Code\", sortable: true, filter: true, id: 1, style: { 'width': '45px' } },\r\n            { field: \"ContactName\", header: \"Contact Name\", sortable: true, filter: true, id: 2, style: { 'width': '100px' } },\r\n            { field: \"ContactCategory\", header: \"Contact Category\", sortable: true, filter: true, id: 3, style: { 'width': '85px' } },\r\n            { field: \"ContactType\", header: \"Contact Type\", sortable: true, filter: true, id: 4, style: { 'width': '125px' } },\r\n            { field: \"Email\", header: \"Email\", sortable: true, filter: true, id: 5, style: { 'width': '125px' } },\r\n            { field: \"Phone\", header: \"Phone\", sortable: true, filter: true, id: 6, style: { 'textAlign': 'right','width': '85px'  } },\r\n            { field: \"CreatedBy\", header: \"Created By\", sortable: true, filter: true, id: 7, style: { 'textAlign': 'right','width': '85px'  } },\r\n         ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n\r\n            DebtorType: 'SubAgent',\r\n            Period: 0,\r\n            selected: {},\r\n            selectedPolicy: 0,\r\n            selectedAgent: '',\r\n            selectAll: 0,\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            monthtillDate: moment().format(\"YYYY-MM\"),\r\n            fromDate: moment().format(\"YYYY-MM-DD\"),\r\n            toDate: moment().format(\"YYYY-MM-DD\"),\r\n            CONTACTTYPEList: [],\r\n            MONTH: ('0'+(new Date().getMonth() + 2).toString()).slice(-2),\r\n            MONTHError: false,\r\n            CONTACTTYPE:'All',\r\n            Year: '',\r\n            YearError: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Contact_Missing_Report(this.state.CONTACTTYPE);\r\n        this.getDropDownValues('CONTACTTYPE', 'CONTACTTYPEList');\r\n    }\r\n\r\n    ClientDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.ClientName}</p>\r\n                <p>{rowData.ClientCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    AgentDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.AgentName}</p>\r\n                <p>{rowData.AgentCode}</p>\r\n            </div>\r\n        )\r\n    }\r\n    toggleRow(id) {\r\n        const newSelected = Object.assign({}, this.state.selected);\r\n        newSelected[id] = !this.state.selected[id];\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: 2\r\n        });\r\n    }\r\n    toggleSelectAll() {\r\n        let newSelected = {};\r\n        if (this.state.selectAll === 0) {\r\n            this.state.arr.forEach(x => {\r\n                newSelected[x.id] = true;\r\n            });\r\n        }\r\n        this.setState({\r\n            selected: newSelected,\r\n            selectAll: this.state.selectAll === 0 ? 1 : 0\r\n        });\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"checkbox\"\r\n                checked={this.state.selected[rowData.id] === true}\r\n                onChange={() => this.toggleRow(rowData.id)} />\r\n        </div>;\r\n    }\r\n    SourceName(rowData) {\r\n        return (rowData.Source === \"Direct\")?\r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n               \r\n            </div> :\r\n            \r\n\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.Source}</p>\r\n                <p>({rowData.SourceName})</p>\r\n            </div>\r\n        ;\r\n    }\r\n    ColumnclassName(rowData,Column) {\r\n \r\n  \r\n        return (rowData.DaysOutstanding <=7)? <div style={{backgroundColor:'#008c9a',color:'#fff'}} className = \"policy-list-data\">\r\n        <p>{rowData.ProjectedPremium}</p>     \r\n    </div> :<div className = \"policy-list-data\" >\r\n                 <p>{rowData.ProjectedPremium}</p>     \r\n             </div>;\r\n        \r\n            \r\n     }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n\r\n    Contact_Missing_Report() {\r\n        var ShowMonth = this.state.MONTH; console.log(ShowMonth);\r\n        if (ShowMonth ===\"\")\r\n        this.state.MONTH = new Date().getMonth() + 2;\r\n        else\r\n            if (ShowMonth ===\"All\")\r\n            this.state.MONTH = 1;\r\n        if (this.state.Year ===\"\")\r\n        this.state.Year = new Date().getFullYear();\r\n        \r\n        var startDate = moment([parseInt(this.state.Year), parseInt(this.state.MONTH) - 1]).format('YYYY-MM-DD');\r\n\r\n        if(ShowMonth ==='' || ShowMonth ==='All')\r\n        var endDate =  moment(startDate).endOf('year').format('YYYY-MM-DD');\r\n        else \r\n        var endDate =  moment(startDate).endOf('month').format('YYYY-MM-DD');\r\n        var data = {\r\n           CONTACTTYPE : this.state.CONTACTTYPE,\r\n        };\r\n       \r\n        api.post('api/Contact_Missing_Report', data).then(res => {\r\n            debugger\r\n            if (res.success) {\r\n                console.log(\"resdata......\",res);\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            id:i,\r\n                            ContactId: tempData.ContactId,\r\n                            ContactCategory: tempData.EntityType,\r\n                            ContactName: tempData.ContactName,\r\n                            ContactType: tempData.ContactType,\r\n                            ContactCode: tempData.ContactCode,\r\n                            Email: tempData.Email,\r\n                            Phone: tempData.Phone,\r\n                            CreatedBy: tempData.CreatedBy\r\n                            });\r\n                    }\r\n\r\n                }\r\n                console.log(\"formattedData...\", formattedData);\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        this.Contact_Missing_Report(this.state.CONTACTTYPE);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'monthtillDate') {\r\n            this.setState({ monthtillDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'toDate') {\r\n            this.setState({ toDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'Year') {\r\n\r\n            if (e.target.value === null || e.target.value === undefined || e.target.value === '') {\r\n                this.setState({ Year: e.target.value, YearError: true });\r\n                this.show('Year', true, 'YearError', 'Please Enter Year');\r\n            } else {\r\n                this.setState({ Year: e.target.value, YearError: false });\r\n                this.show('Year', false, 'YearError', '');\r\n            }\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, agentinfoError: false });\r\n            this.show('agentinfo', false, 'agentinfoError', '');\r\n\r\n        }\r\n\r\n        if (type === 'Period') {\r\n            this.setState({ Period: value });\r\n        }\r\n\r\n        if (type === 'CONTACTTYPE') {\r\n            if (CommonConfig.isEmpty(value)) {\r\n                this.setState({ CONTACTTYPEError: true, CONTACTTYPE: value });\r\n                this.show('CONTACTTYPE', true, \"CONTACTTYPEError\", \"Please select policy type\");\r\n            } else {\r\n                this.setState({ CONTACTTYPEError: false, CONTACTTYPE: value });\r\n                this.show('CONTACTTYPE', false, \"CONTACTTYPEError\", \"\");\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    ReferrData(){\r\n        var data = {\r\n                   };\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n            />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Contact with missing Phone and Email</h1>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Filter\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md='3'>\r\n                                            <label>Contact Type</label>\r\n                                            <Input type=\"select\" name=\"CONTACTTYPE\" id=\"CONTACTTYPE\" onChange={(e) => this.selectType(e.target.value, 'CONTACTTYPE')} value={this.state.CONTACTTYPE}>\r\n                                            <option value='All'>All</option>\r\n                                                {this.state.CONTACTTYPEList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col>\r\n                                       \r\n                                        <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        {/* <Col md='3'>\r\n                                            <label>Month</label>\r\n                                            <Input type=\"select\" name=\"MONTH\" id=\"MONTH\" onChange={(e) => this.selectType(e.target.value, 'MONTH')} value={this.state.MONTH}>\r\n                                                {this.state.MONTHList.map((type, i) => {\r\n                                                    return (<option value={type.StringMapKey}>{type.StringMapName}</option>)\r\n                                                })\r\n                                                }\r\n                                            </Input>\r\n                                            <em id=\"MONTHError\" className=\"error invalid-feedback\"></em>\r\n                                        </Col> */}\r\n\r\n                                       {/*} <Col md='2'>\r\n                                            <div>&nbsp;</div>\r\n                                            <BTN color=\"success\" title=\"Search\" onClick={() => this.ReferrData()}> Refer </BTN>\r\n                                    </Col>*/}\r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Contact Missing Report\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation()(Contact_Missing_Report);\r\n"]},"metadata":{},"sourceType":"module"}