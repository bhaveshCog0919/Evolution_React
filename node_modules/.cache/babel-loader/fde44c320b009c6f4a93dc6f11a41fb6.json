{"ast":null,"code":"import _objectSpread from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'primereact/datatable';import{Column}from'primereact/column';import{MultiSelect}from'primereact/multiselect';import{InputText}from'primereact/inputtext';import{toast}from'react-toastify';import'primereact/resources/themes/nova-light/theme.css';import'primereact/resources/primereact.min.css';import'primeicons/primeicons.css';import{Button}from'primereact/button';import{Modal,ModalBody,ModalFooter,ModalHeader,Col,Row,Input,Button as BTN}from'reactstrap';import api from'../../../utils/apiClient';import APIConstant from'../../../utils/constants';import{CommonConfig}from'../../../utils/constants';import moment from'moment';import{render}from'react-dom';import BootstrapTable from'react-bootstrap-table-next';var RiskQuestionHistory=/*#__PURE__*/function(_Component){_inherits(RiskQuestionHistory,_Component);var _super=_createSuper(RiskQuestionHistory);function RiskQuestionHistory(){var _this;_classCallCheck(this,RiskQuestionHistory);_this=_super.call(this);_this.deleteHistoryRecord=function(row){_this.setState({isDelet:true,newVar:row});};_this.viewHistoryRecord=function(row){_this.setState({isView:true,isEdit:true,tempData:row,IsRateable:row.IsRateable==='Yes'?true:false,ResponseWeightTypeName:row.ResponseWeightTypeName,textOperations:[],NumberOperations:[],DateOperations:[],effectiveDate:moment(row.StartDate,'DD-MM-YYYY').format('YYYY-MM-DD'),ResponseWeightType:row.ResponseWeightType,RiskQuestionHistoryId:row.RiskQuestionHistoryId});_this.handleOnExpand(row);};_this.updateHistoryRecord=function(row){_this.setState({isEdit:true,tempData:row,IsRateable:row.IsRateable==='Yes'?true:false,ResponseWeightTypeName:row.ResponseWeightTypeName,textOperations:[],NumberOperations:[],DateOperations:[],effectiveDate:moment(row.StartDate,'DD-MM-YYYY').format(\"YYYY-MM-DD\")>moment().format(\"YYYY-MM-DD\")?moment(row.StartDate,'DD-MM-YYYY').format(\"YYYY-MM-DD\"):moment().format(\"YYYY-MM-DD\"),ResponseWeightType:row.ResponseWeightType,RiskQuestionHistoryId:row.RiskQuestionHistoryId});_this.handleOnExpand(row);console.log(\"rowEventssssssssss\",row);};_this.handleOnExpand=function(row,isExpand,rowIndex,e){console.log(\"handleOnExpandddd55\",row);try{var dataToSend={RiskQuestionId:_this.props.match.params.Id,RiskQuestionHistoryId:row.RiskQuestionHistoryId};console.log(\"handleOnExpandddd3\",dataToSend);api.post('api/getResponseByHistoryDates',dataToSend).then(function(res){if(res.success){console.log(\"handleOnExpandddd321\",res.data);if(!res.data.length){if(_this.state.ResponseWeightTypeName===\"Number\"||_this.state.ResponseWeightTypeName===\"Percentage\"||_this.state.ResponseWeightTypeName===\"Amount\"){_this.setState({NumberOperations:[_this.state.NumberArr]});}else if(_this.state.ResponseWeightTypeName===\"Text\"){_this.setState({textOperations:[_this.state.TextArr]});}else if(_this.state.ResponseWeightTypeName===\"Date\"||_this.state.ResponseWeightTypeName===\"Year\"){_this.setState({DateOperations:[_this.state.DateArr]});}}else{var formattedData=[];var NumberOperations=[];var textOperations=[];var DateOperations=[];var i;for(i=0;i<res.data.length;i++){var temppDataForNumber={id:1,NumberRating:'',NumberOperator1:'',NumberOperator1Arr:[],NumberBound1:'',NumberOperator2:'',NumberOperator2Arr:[],NumberBound2:'',IsOnlyOneOperator:true,IsAllOtherOperator:true,DateRatingError:false,isDeleted:false};var temppDataForText={id:1,TextRating:'',TextOperator:'',TextToCompare:'',isDeleted:false};var temppDataForDate={id:1,DateRating:'',DateOperator1:'',DateOperator1Arr:[],DateBound1:'',DateOperator2:'',DateOperator2Arr:[],DateBound2:'',IsOnlyOneOperator:true,IsAllOtherOperator:true,NumberRatingError:false,isDeleted:false};formattedData.push({Response:CommonConfig.isEmpty(res.data[i].ResponseStringMapKey)?'':res.data[i].ResponseStringMapKey.trim(),Rating:CommonConfig.isEmpty(res.data[i].Rating)?CommonConfig.isEmpty(res.data[i].AbsoluteAmount)?0:res.data[i].AbsoluteAmount:res.data[i].Rating,RiskQuestionResponseWeightageHistoryId:CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageHistoryId)?'':res.data[i].RiskQuestionResponseWeightageHistoryId,RiskQuestionResponseWeightageId:CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId});temppDataForNumber.id=i+1;temppDataForNumber.NumberRating=CommonConfig.isEmpty(res.data[i].Rating)?res.data[i].AbsoluteAmount:res.data[i].Rating;temppDataForNumber.NumberOperator1=CommonConfig.isEmpty(res.data[i].Operator1)?'':res.data[i].Operator1;temppDataForNumber.NumberBound1=CommonConfig.isEmpty(res.data[i].Bound1)?0.00:res.data[i].Bound1;temppDataForNumber.NumberOperator2=CommonConfig.isEmpty(res.data[i].Operator2)?'':res.data[i].Operator2;if(temppDataForNumber.NumberOperator2===\"One Operator Only\"){temppDataForNumber.IsOnlyOneOperator=false;}else{temppDataForNumber.IsOnlyOneOperator=true;}temppDataForNumber.NumberBound2=CommonConfig.isEmpty(res.data[i].Bound2)?0.00:res.data[i].Bound2;temppDataForNumber.RiskQuestionResponseWeightageHistoryId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageHistoryId)?'':res.data[i].RiskQuestionResponseWeightageHistoryId;temppDataForNumber.isDeleted=false;temppDataForNumber.RiskQuestionResponseWeightageId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId;// temppDataForNumber.IsOnlyOneOperator= true;\ntemppDataForText.TextRating=CommonConfig.isEmpty(res.data[i].Rating)?res.data[i].AbsoluteAmount:res.data[i].Rating;temppDataForText.TextOperator=CommonConfig.isEmpty(res.data[i].Operator1)?'':res.data[i].Operator1;temppDataForText.TextToCompare=CommonConfig.isEmpty(res.data[i].Bound1)?'':res.data[i].Bound1;temppDataForText.RiskQuestionResponseWeightageId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId;temppDataForText.isDeleted=false;temppDataForText.RiskQuestionResponseWeightageId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId;temppDataForDate.id=i+1;temppDataForDate.DateRating=CommonConfig.isEmpty(res.data[i].Rating)?res.data[i].AbsoluteAmount:res.data[i].Rating;temppDataForDate.DateOperator1=CommonConfig.isEmpty(res.data[i].Operator1)?0.00:res.data[i].Operator1;temppDataForDate.DateBound1=CommonConfig.isEmpty(res.data[i].Bound1)?0.00:res.data[i].Bound1;temppDataForDate.DateOperator2=CommonConfig.isEmpty(res.data[i].Operator2)?0.00:res.data[i].Operator2;if(temppDataForDate.NumberOperator2===\"One Operator Only\"){temppDataForDate.IsOnlyOneOperator=false;}else{temppDataForDate.IsOnlyOneOperator=true;}temppDataForDate.DateBound2=CommonConfig.isEmpty(res.data[i].Bound2)?0.00:res.data[i].Bound2;temppDataForDate.RiskQuestionResponseWeightageHistoryId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageHistoryId)?'':res.data[i].RiskQuestionResponseWeightageHistoryId;temppDataForDate.isDeleted=false;temppDataForDate.RiskQuestionResponseWeightageId=CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId)?'':res.data[i].RiskQuestionResponseWeightageId;// temppDataForDate.IsOnlyOneOperator= true;\nNumberOperations.push(temppDataForNumber);textOperations.push(temppDataForText);DateOperations.push(temppDataForDate);}_this.setState({NumberOperations:NumberOperations});_this.setState({textOperations:textOperations});_this.setState({DateOperations:DateOperations});_this.setState({ListValue:formattedData});}}});}catch(error){console.log(\"handleOnExpandErr\",error);}};_this.updateQuestion=function(){var isAdd=_this.state.isAdd;var isEdit=_this.state.isEdit;var resultsData=_this.state.products.filter(function(x){return x.StartDate===moment(_this.state.effectiveDate).format('DD-MM-YYYY');});console.log(\"updateQuestion\",resultsData);if(!_this.state.effectiveDateError){if(resultsData.length){isAdd=false;isEdit=true;_this.setState({RiskQuestionHistoryId:resultsData[0].RiskQuestionHistoryId});_this.upDateModel();}else{isAdd=true;isEdit=false;var data={RiskQuestionHistoryId:_this.state.RiskQuestionHistoryId,ResponseTypeName:_this.state.ResponseWeightType,IsRateable:_this.state.IsRateable,ResponseWeightTypeName:_this.state.ResponseWeightTypeName,RiskQuestionId:_this.props.match.params.Id,effectiveDate:_this.state.effectiveDate,loggedInUserId:CommonConfig.loggedInUserId(),IsAdd:isAdd,IsEdit:isEdit};if(_this.state.tempData.ResponseWeightTypeName===\"Text\"){if(_this.state.IsRateable){data.textOperations=_this.state.textOperations;}else{data.textOperations='';}}else if(_this.state.tempData.ResponseWeightTypeName===\"Number\"||_this.state.tempData.ResponseWeightTypeName===\"Percentage\"||_this.state.tempData.ResponseWeightTypeName===\"Amount\"){if(_this.state.IsRateable){data.NumberOperations=_this.state.NumberOperations;}else{data.NumberOperations='';}}else if(_this.state.tempData.ResponseWeightTypeName===\"Date\"||_this.state.tempData.ResponseWeightTypeName===\"Year\"){if(_this.state.IsRateable){data.DateOperations=_this.state.DateOperations;}else{data.DateOperations='';}}else if(_this.state.tempData.ResponseWeightTypeName===\"ListOfValues\"||_this.state.tempData.ResponseWeightTypeName===\"YesNo\"){if(_this.state.IsRateable){data.ListValue=_this.state.ListValue;}else{data.ListValue='';}}console.log(\"IsOnlyOneOperator\",data);api.post('api/UpdateRiskQuestionWeightage',data).then(function(res){console.log(\"UpdateRiskQuestionWeightage\",res);if(res.success){console.log(\"UpdateRiskQuestionWeightage\",res.data);toast.success(res.data.message);_this.toggleEdit('save');// setTimeout(function () {\n//     window.location.reload();\n// }, 1000);   \n_this.getRiskQuestionHistory(_this.props.match.params.Id);}}).catch(function(err){});}}else{if(_this.state.effectiveDateError){toast.error(\"Please select valid Effective Date\");return;}}};_this.updateQuestionModal=function(){var data={RiskQuestionHistoryId:_this.state.RiskQuestionHistoryId,ResponseTypeName:_this.state.ResponseWeightType,IsRateable:_this.state.IsRateable,ResponseWeightTypeName:_this.state.ResponseWeightTypeName,RiskQuestionId:_this.props.match.params.Id,effectiveDate:_this.state.effectiveDate,loggedInUserId:CommonConfig.loggedInUserId(),IsEdit:'true'};if(_this.state.tempData.ResponseWeightTypeName===\"Text\"){if(_this.state.IsRateable){data.textOperations=_this.state.textOperations;}else{data.textOperations='';}}else if(_this.state.tempData.ResponseWeightTypeName===\"Number\"||_this.state.tempData.ResponseWeightTypeName===\"Percentage\"||_this.state.tempData.ResponseWeightTypeName===\"Amount\"){if(_this.state.IsRateable){data.NumberOperations=_this.state.NumberOperations;}else{data.NumberOperations='';}}else if(_this.state.tempData.ResponseWeightTypeName===\"Date\"||_this.state.tempData.ResponseWeightTypeName===\"Year\"){if(_this.state.IsRateable){data.DateOperations=_this.state.DateOperations;}else{data.DateOperations='';}}else if(_this.state.tempData.ResponseWeightTypeName===\"ListOfValues\"||_this.state.tempData.ResponseWeightTypeName===\"YesNo\"){if(_this.state.IsRateable){data.ListValue=_this.state.ListValue;}else{data.ListValue='';}}console.log(\"IsOnlyOneOperator\",data);api.post('api/UpdateRiskQuestionWeightage',data).then(function(res){console.log(\"UpdateRiskQuestionWeightage\",res);if(res.success){console.log(\"UpdateRiskQuestionWeightage\",res.data);toast.success(res.data.message);_this.toggleEditModel('save');setTimeout(function(){window.location.reload();},1000);_this.getRiskQuestionHistory(_this.props.match.params.Id);}}).catch(function(err){});};_this.deleteModal=function(newVar){console.log(\"deleteModal\",newVar);try{var dataToSend={IsDiscard:'true',RiskQuestionHistoryId:newVar.RiskQuestionHistoryId,loggedInUserId:CommonConfig.loggedInUserId()};api.post('api/deleteRiskQuestion',dataToSend).then(function(res){console.log(\"deleteRiskQuestion\",res);if(res.success){toast.success(res.message);_this.toggleEdit('save');setTimeout(function(){window.location.reload();},800);_this.getRiskQuestionHistory(_this.props.match.params.Id);}}).catch(function(err){});}catch(error){console.log(\"deleteModal\",error);}};_this.expandRow={onlyOneExpanding:true,showExpandColumn:true,expandByColumnOnly:true,onExpand:_this.handleOnExpand,renderer:function renderer(row){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,row.ResponseWeightTypeName===\"ListOfValues\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Rating/Absolute Amount\")),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Response\"))),_this.state.ListValue.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,value.Rating)),/*#__PURE__*/React.createElement(Col,{md:\"9\"},/*#__PURE__*/React.createElement(\"label\",null,value.Response)));})):row.ResponseWeightTypeName===\"YesNo\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Rating/Absolute Amount\")),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Response\"))),_this.state.ListValue.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,value.Rating)),/*#__PURE__*/React.createElement(Col,{md:\"9\"},/*#__PURE__*/React.createElement(\"label\",null,value.Response)));})):row.ResponseWeightTypeName===\"Number\"||row.ResponseWeightTypeName===\"Percentage\"||row.ResponseWeightTypeName===\"Amount\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Rating/Absolute Amount\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 2\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 2\"))),_this.state.NumberOperations.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.NumberRating)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.NumberOperator1)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.NumberBound1)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.NumberOperator2)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.NumberBound2)));})):row.ResponseWeightTypeName===\"Date\"||row.ResponseWeightTypeName===\"Year\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Rating/Absolute Amount\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 2\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 2\"))),_this.state.DateOperations.map(function(value,index){console.log(\"handleOnExpandddd123\",value);return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.DateRating)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.DateOperator1)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.DateBound1)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.DateOperator2)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.DateBound2)));})):row.ResponseWeightTypeName===\"Text\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Rating/Absolute Amount\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator\")),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Text for Comparison\"))),/*#__PURE__*/React.createElement(\"div\",null,_this.state.textOperations.map(function(value,index){console.log(\"handleOnExpandddd123\",value);return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.TextRating)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,value.TextOperator)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"label\",null,value.TextToCompare)));}))):null));}};_this.toggleEdit=function(){_this.setState({isEdit:false,isView:false,effectiveDate:moment().format('YYYY-MM-DD'),effectiveDateError:false});};_this.toggleEditModel=function(){_this.setState({isOpenForUpdate:false});};_this.toggleDelete=function(){_this.setState({isDelet:false});};_this.InputValidate=function(name,PIndex){return function(evt){console.log(\"InputValidate\",name,PIndex,_this.state.ResponseWeightTypeName);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.textOperations.map(function(Package,index){if(PIndex===index){if(name===\"TextRating\"){var invSpace,TextRatingErr;if(_this.state.ResponseWeightTypeName===\"Rating\"){invSpace=CommonConfig.RegExp.percentageWithNegative;}else if(_this.state.ResponseWeightTypeName===\"Absolute\"){invSpace=CommonConfig.RegExp.decimalWithNegative;}if(invSpace.test(evt.target.value)){TextRatingErr=false;}else{TextRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{TextRating:evt.target.value,TextRatingError:TextRatingErr});}else if(name===\"TextOperator\"){// let IsAllOtherOperatorValue;\n// if (evt.target.value === \"All Others\") {\n//     IsAllOtherOperatorValue = false;\n// } else {\n//     IsAllOtherOperatorValue = true;\n// }\nreturn _objectSpread(_objectSpread({},Package),{},{TextOperator:evt.target.value});}else if(name===\"TextToCompare\"){var _invSpace=CommonConfig.RegExp.nameWithoutSpace,_TextRatingErr;// if (this.state.ResponseWeightTypeName === \"Rating\") {\n//     invSpace = CommonConfig.RegExp.allowAllWithSpace\n// }\nif(!_invSpace.test(evt.target.value)){_TextRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{TextToCompare:evt.target.value,TextToCompareError:_TextRatingErr});}}else{return _objectSpread({},Package);}});_this.setState({textOperations:NewTextDetails},function(){});};};_this.NumberInputValidate=function(name,PIndex){return function(evt){console.log(name,PIndex);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.NumberOperations.map(function(Package,index){if(PIndex===index){if(name===\"NumberRating\"){var invSpace,NumberRatingErr;if(_this.state.ResponseWeightTypeName===\"Rating\"){invSpace=CommonConfig.RegExp.percentageWithNegative;}else if(_this.state.ResponseWeightTypeName===\"Absolute\"){invSpace=CommonConfig.RegExp.decimalWithNegative;}if(invSpace.test(evt.target.value)){NumberRatingErr=false;}else{NumberRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{NumberRating:evt.target.value,NumberRatingError:NumberRatingErr});}else if(name===\"NumberOperator1\"){var IsAllOtherOperatorValue;if(evt.target.value===\"All Others\"){IsAllOtherOperatorValue=false;}else{IsAllOtherOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{NumberOperator1:evt.target.value,IsAllOtherOperator:IsAllOtherOperatorValue});}else if(name===\"NumberBound1\"){var _invSpace2,DateRatingErr;_invSpace2=CommonConfig.RegExp.number;if(_invSpace2.test(evt.target.value)){DateRatingErr=false;}else{DateRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{NumberBound1:evt.target.value,NumberRatingError:DateRatingErr});}else if(name===\"NumberOperator2\"){console.log(\"evt.target.value\",evt.target.value);var IsOnlyOneOperatorValue;if(evt.target.value===\"One Operator Only\"){IsOnlyOneOperatorValue=false;}else{IsOnlyOneOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{NumberOperator2:evt.target.value,IsOnlyOneOperator:IsOnlyOneOperatorValue});}else if(name===\"NumberBound2\"){var _invSpace3,_DateRatingErr;_invSpace3=CommonConfig.RegExp.number;if(_invSpace3.test(evt.target.value)){_DateRatingErr=false;}else{_DateRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{NumberBound2:evt.target.value,NumberRatingError:_DateRatingErr});}}else{return _objectSpread({},Package);}});_this.setState({NumberOperations:NewTextDetails},function(){});};};_this.ListValueValidate=function(name,PIndex){return function(evt){console.log(name,PIndex);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.ListValue.map(function(Package,index){console.log(\"ListValueindex\",index,PIndex===index);if(PIndex===index){if(name===\"Rating\"){var invSpace,NumberRatingErr;if(_this.state.ResponseWeightType===\"Rating\"){invSpace=CommonConfig.RegExp.percentageWithNegative;}else if(_this.state.ResponseWeightType===\"Absolute\"){invSpace=CommonConfig.RegExp.decimalWithNegative;}if(invSpace.test(evt.target.value)){NumberRatingErr=false;}else{NumberRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{Rating:evt.target.value,RatingError:NumberRatingErr});}}else{return _objectSpread({},Package);}});_this.setState({ListValue:NewTextDetails},function(){});};};_this.DateInputValidate=function(name,PIndex){return function(evt){console.log(name,PIndex);_this.setState(_defineProperty({},evt.target.name,evt.target.value));var NewTextDetails=_this.state.DateOperations.map(function(Package,index){if(PIndex===index){if(name===\"DateRating\"){var invSpace,DateRatingErr;if(_this.state.ResponseWeightTypeName===\"Rating\"){invSpace=CommonConfig.RegExp.percentageWithNegative;}else if(_this.state.ResponseWeightTypeName===\"Absolute\"){invSpace=CommonConfig.RegExp.decimalWithNegative;}if(invSpace.test(evt.target.value)){DateRatingErr=false;}else{DateRatingErr=true;}return _objectSpread(_objectSpread({},Package),{},{DateRating:evt.target.value,DateRatingError:DateRatingErr});}else if(name===\"DateOperator1\"){var IsAllOtherOperatorValue;if(evt.target.value===\"All Others\"){IsAllOtherOperatorValue=false;}else{IsAllOtherOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{DateOperator1:evt.target.value,IsAllOtherOperator:IsAllOtherOperatorValue});}else if(name===\"DateBound1\"){var _invSpace4,_DateRatingErr2;_invSpace4=CommonConfig.RegExp.number;if(_invSpace4.test(evt.target.value)){_DateRatingErr2=false;}else{_DateRatingErr2=true;}return _objectSpread(_objectSpread({},Package),{},{DateBound1:evt.target.value,DateRatingError:_DateRatingErr2});}else if(name===\"DateOperator2\"){var IsOnlyOneOperatorValue;if(evt.target.value===\"One Operator Only\"){IsOnlyOneOperatorValue=false;}else{IsOnlyOneOperatorValue=true;}return _objectSpread(_objectSpread({},Package),{},{DateOperator2:evt.target.value,IsOnlyOneOperator:IsOnlyOneOperatorValue});}else if(name===\"DateBound2\"){var _invSpace5,_DateRatingErr3;_invSpace5=CommonConfig.RegExp.number;if(_invSpace5.test(evt.target.value)){_DateRatingErr3=false;}else{_DateRatingErr3=true;}return _objectSpread(_objectSpread({},Package),{},{DateBound2:evt.target.value,DateRatingError:_DateRatingErr3});}}else{return _objectSpread({},Package);}});_this.setState({DateOperations:NewTextDetails},function(){});};};_this.checked=function(isChecked,value){console.log(\"checked\",isChecked);_this.setState({IsRateable:isChecked});};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));if(e.target.name==='effectiveDate'){if(e.target.value===''||e.target.value===null){_this.setState({effectiveDateError:true});_this.show(\"effectiveDate\",true,\"effectiveDateError\",\"Enter valid effective date\");}else if(moment(e.target.value).format('YYYY-MM-DD')<moment().format('YYYY-MM-DD')){_this.setState({effectiveDateError:true});_this.show(\"effectiveDate\",true,\"effectiveDate\",\"Please enter valid effective date\");}else{_this.setState({effectiveDateError:false,effectiveDate:e.target.value});_this.show(\"effectiveDate\",false,\"effectiveDateError\",\"\");}}if(e.target.name==='fromDate'){_this.setState({fromDate:e.target.value});}if(e.target.name==='ToDate'){_this.setState({ToDate:e.target.value});}};var columns=[{dataField:\"QuestionCode\",text:\"Question Code\"},{dataField:\"RiskQuestion\",text:\"Question\"},{dataField:\"QuestionGroup\",text:\"Group\"},{dataField:\"ResponseWeightTypeName\",text:\"Rating Type\"},{dataField:\"StartDate\",text:\"Effective Date\"},{dataField:\"Qualifier\",text:\"Qualifier\"},{dataField:\"isCurrent\",text:\"Is Current\"},{dataField:\"Action\",text:\"Actions\",formatter:_this.actionFormatter,OpenModal:_this.updateHistoryRecord,viewHistoryRecord:_this.viewHistoryRecord,deleteHistoryRecord:_this.deleteHistoryRecord}];_this.state={cols:columns,forAction:false,isAdd:false,isDelet:false,isOpenForUpdate:false,products:[],RiskQuestionHistoryList:[],rowData:'',VesselClassList:[],VesselTypeList:[],vesselClass:'',VesselClassId:'',vesselClassError:true,VesselTypeId:'',vesselType:'',vesselTypeError:true,selectedPage:0,rowsPerPageOptions:CommonConfig.dataTableConfig.rowsPerPageOptions,str:'',rowsPerPage:CommonConfig.dataTableConfig.rowsPerPage,globalFilter:null,toogleEditModal:false,tempData:'',IsRateable:false,ResponseWeightTypeName:'',ResponseWeightTypeNameError:true,ResponseWeightType:'',ResponseWeightTypeError:true,textOperation:'',textOperations:[],TextArr:{id:1,TextRating:'',TextOperator:'',TextToCompare:'',TextToCompareError:false,isDeleted:false},NumberOperations:[],NumberArr:{id:1,NumberRating:'',NumberOperator1:'',NumberOperator1Arr:[],NumberBound1:'',NumberOperator2:'',NumberOperator2Arr:[],NumberBound2:'',IsOnlyOneOperator:false,IsAllOtherOperator:true,NumberRatingError:false,isDeleted:false},DateOperations:[],DateArr:{id:1,DateRating:'',DateOperator1:'',DateOperator1Arr:[],DateBound1:'',DateOperator2:'',DateOperator2Arr:[],DateBound2:'',IsOnlyOneOperator:false,IsAllOtherOperator:true,DateRatingError:false,isDeleted:false},TextRatingError:true,TextRating:'',ListValue:[],Rating:'',RatingError:true,listType:'',systemEndorsementArr:[],systemEndorsement:'',systemEndorsementError:true,systemEndorsementText:'',systemEndorsementTextArr:[],RiskQuestionId:'',RiskQuestionResponseWeightageId:'',ResponseType:'',effectivedate:'Effective Date',effectiveDate:'',effectiveDateError:true,historyDatesArr:[],historyDates:'',fromDate:'',ToDate:'',diaplayDate:'',diaplayDateArr:[],isEnable:false,isEdit:false};return _this;}_createClass(RiskQuestionHistory,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.match.params.constructor===Object&&Object.keys(this.props.match.params).length!==0){this.getRiskQuestionHistory(this.props.match.params.Id);}this.getDropDownValues('RATINGTYPE','systemEndorsementArr','SortOrder');this.getDropDownValues('RATINGOPERATOR','NumberOperator1Arr','SortOrder');this.getDropDownValues('RATINGOPERATOR2','NumberOperator2Arr','SortOrder');this.getDropDownValues('RATINGOPERATOR','DateOperator1Arr','SortOrder');this.getDropDownValues('RATINGOPERATOR2','DateOperator2Arr','SortOrder');this.getDropDownValues('TEXTOPERATOR','systemEndorsementTextArr','SortOrder');this.getDropDownValues('DISPLAYMODE','diaplayDateArr','SortOrder');this.setState({effectiveDate:moment().format('YYYY-MM-DD'),effectiveDateError:false});}},{key:\"getDropDownValues\",value:function getDropDownValues(stringMapType,setStateName,orderBy){var _this2=this;try{var data={stringmaptype:stringMapType,orderby:orderBy};api.post(APIConstant.path.dropdownbycode,data).then(function(res){if(res.success){console.log(\"getDropDownValues\",res.data);_this2.setState(_defineProperty({},setStateName,res.data));}else{}}).catch(function(err){});}catch(error){}}},{key:\"getRiskQuestionHistory\",value:function getRiskQuestionHistory(Id){var _this3=this;try{var data={RiskQuestionId:Id,fromDate:CommonConfig.isEmpty(this.state.fromDate)?'':this.state.fromDate,ToDate:CommonConfig.isEmpty(this.state.ToDate)?'':this.state.ToDate,diaplayDate:CommonConfig.isEmpty(this.state.diaplayDate)?'':this.state.diaplayDate};api.post('api/getHistoryDates',data).then(function(res){if(res.success){console.log(\"getRiskQuestionHistory\",res.data);var newArr=[];for(var i=0;i<res.data[0].length;i++){newArr.push({QuestionCode:res.data[0][i].QuestionCode,RiskQuestion:res.data[0][i].RiskQuestion,QuestionGroup:res.data[0][i].QuestionGroup,ResponseWeightTypeName:res.data[0][i].ResponseType,StartDate:moment(res.data[0][i].StartDate).format('DD-MM-YYYY'),UpdatedOn:res.data[0][i].UpdatedOn,IsRateable:res.data[0][i].IsRateable.data[0]===0?'No':'Yes',QuestionCategoryName:res.data[0][i].QuestionCategory,ResponseWeightType:res.data[0][i].ResponseWeightType,Qualifier:res.data[0][i].Qualifier,isCurrent:res.data[0][i].IsCurrent,forAction:res.data[0][i].ACTION===\"Edit\"?true:false,RiskQuestionHistoryId:res.data[0][i].RiskQuestionHistoryId});_this3.setState({QuestionCode:res.data[0][i].QuestionCode});}console.log(\"getRiskQuestionHistory\",newArr);_this3.setState({products:newArr});}});}catch(error){console.log(\"getRiskQuestionHistoryErr\",error);}}},{key:\"actionFormatter\",value:function actionFormatter(cell,rowData){var _this4=this;return/*#__PURE__*/React.createElement(\"div\",null,rowData.forAction?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-pencil\",className:\"p-button-warning\",tooltip:\"Edit\",onClick:function onClick(){return _this4.OpenModal(rowData);},tooltipOptions:{position:'bottom'}}),Date(moment(rowData.StartDate).format('YYYY-MM-DD'))>=moment().format('YYYY-MM-DD')?/*#__PURE__*/React.createElement(Button,{style:{marginLeft:10},type:\"button\",icon:\"pi pi-trash\",className:\"p-button-danger\",tooltip:\"delete\",onClick:function onClick(){return _this4.deleteHistoryRecord(rowData);},tooltipOptions:{position:'bottom'}}):null):/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-eye\",className:\"p-button-primary\",tooltip:\"View\",onClick:function onClick(){return _this4.viewHistoryRecord(rowData);},tooltipOptions:{position:'bottom'}}));}},{key:\"upDateModel\",value:function upDateModel(){this.setState({isOpenForUpdate:true});}},{key:\"addRowToArray\",value:function addRowToArray(type){var i=this.state.textOperations.length;if(type==='Text'){var textOperation=this.state.textOperations;textOperation.push(this.state.TextArr);this.setState({textOperations:textOperation});}else if(type==='Number'){var NumberOperation=this.state.NumberOperations;NumberOperation.push(this.state.NumberArr);this.setState({NumberOperations:NumberOperation});}else if(type==='Date'){var DateOperation=this.state.DateOperations;DateOperation.push(this.state.DateArr);this.setState({DateOperations:DateOperation});}}},{key:\"removeRowToArray\",value:function removeRowToArray(value,i){this.state.textOperations[i].isDeleted=true;console.log(\"removeRowToNumberArray\",this.state.textOperations);this.setState({textOperations:this.state.textOperations});}},{key:\"removeRowToNumberArray\",value:function removeRowToNumberArray(value,i){this.state.NumberOperations[i].isDeleted=true;console.log(\"removeRowToNumberArray\",this.state.NumberOperations);this.setState({NumberOperations:this.state.NumberOperations});}},{key:\"removeRowToDateArray\",value:function removeRowToDateArray(value,i){this.state.DateOperations[i].isDeleted=true;console.log(\"removeRowToNumberArray\",this.state.DateOperations);this.setState({DateOperations:this.state.DateOperations});}},{key:\"selectType\",value:function selectType(value,type){console.log(\"selectType\",value,type);if(type==='ResponseWeightType'){if(value===''||value===null||value===undefined){this.setState({ResponseWeightTypeError:true,ResponseWeightType:value});this.show(\"ResponseWeightType\",true,\"ResponseWeightTypeError\",\"Select valid type\");}else{var NewTextDetails=this.state.NumberOperations.map(function(Package,index){return _objectSpread(_objectSpread({},Package),{},{NumberRating:0.00});});var NewTextDetailsForDate=this.state.DateOperations.map(function(Package,index){return _objectSpread(_objectSpread({},Package),{},{DateRating:0.00});});var NewTextDetailsForList=this.state.ListValue.map(function(Package,index){return _objectSpread(_objectSpread({},Package),{},{Rating:0.00});});this.setState({NumberOperations:NewTextDetails,DateOperations:NewTextDetailsForDate,ListValue:NewTextDetailsForList});this.setState({ResponseWeightTypeError:false,ResponseWeightType:value});this.show(\"ResponseWeightType\",false,\"ResponseWeightTypeError\",\"Select valid type\");}}if(type==='diaplayDate'){this.setState({diaplayDate:value});}}},{key:\"show\",value:function show(field,condition,errorField,message){console.log(\"(field, condition, errorField, message)\",field,condition,errorField,message);if(condition){if(document.getElementById(field))document.getElementById(field).className=\"form-control is-invalid\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML='<p>'+message+' </p>';}else{if(document.getElementById(field))document.getElementById(field).className=\"form-control\";if(document.getElementById(errorField))document.getElementById(errorField).innerHTML=null;}}},{key:\"searchByDateAndDisplayMode\",value:function searchByDateAndDisplayMode(){var _this5=this;try{var dataToSend={RiskQuestionId:this.props.match.params.Id,fromDate:CommonConfig.isEmpty(this.state.fromDate)?'':this.state.fromDate,ToDate:CommonConfig.isEmpty(this.state.ToDate)?'':this.state.ToDate,diaplayDate:CommonConfig.isEmpty(this.state.diaplayDate)?'':this.state.diaplayDate};api.post('api/getHistoryDates',dataToSend).then(function(res){if(res.success){console.log(\"getRiskQuestionHistory\",res.data);var newArr=[];for(var i=0;i<res.data[0].length;i++){newArr.push({QuestionCode:res.data[0][i].QuestionCode,RiskQuestion:res.data[0][i].RiskQuestion,QuestionGroup:res.data[0][i].QuestionGroup,ResponseWeightTypeName:res.data[0][i].ResponseType,StartDate:moment(res.data[0][i].StartDate).format('DD-MM-YYYY'),UpdatedOn:res.data[0][i].UpdatedOn,// RiskQuestionResponseWeightageHistoryId: res.data[0][i].RiskQuestionResponseWeightageHistoryId,\nIsRateable:res.data[0][i].IsRateable.data[0]===0?'No':'Yes',QuestionCategoryName:res.data[0][i].QuestionCategory,ResponseWeightType:res.data[0][i].ResponseWeightType,Qualifier:res.data[0][i].Qualifier,isCurrent:res.data[0][i].IsCurrent});_this5.setState({QuestionCode:res.data[0][i].QuestionCode});}console.log(\"getRiskQuestionHistory\",newArr);_this5.setState({products:newArr});}});}catch(error){console.log(\"getRiskQuestionHistoryErr\",error);}}},{key:\"render\",value:function render(){var _this6=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"basic-header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"RiskQuestion History\")),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:10}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"1\",style:{padding:0,marginLeft:15}},/*#__PURE__*/React.createElement(\"b\",null,\"Question Code\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,this.state.QuestionCode))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"1\",style:{padding:0,marginLeft:20}},/*#__PURE__*/React.createElement(\"b\",null,\"Effective Date\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"fromDate\",id:\"fromDate\",onChange:function onChange(e){return _this6.handleChange(e);},value:this.state.fromDate})),/*#__PURE__*/React.createElement(Col,{md:\"1\",style:{padding:0,marginLeft:20}},/*#__PURE__*/React.createElement(\"b\",null,\"To\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(Input,{type:\"date\",name:\"ToDate\",id:\"ToDate\",onChange:function onChange(e){return _this6.handleChange(e);},value:this.state.ToDate})),/*#__PURE__*/React.createElement(Col,{md:\"1\",style:{padding:0,marginLeft:15}},/*#__PURE__*/React.createElement(\"b\",null,\"Display Mode\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"diaplayDate\",id:\"diaplayDate\",onChange:function onChange(e){return _this6.selectType(e.target.value,'diaplayDate');},value:this.state.diaplayDate},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select display date\"),this.state.diaplayDateArr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.StringMapName},type.StringMapName);}))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this6.searchByDateAndDisplayMode();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\"Search\"),' '))),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:30}},/*#__PURE__*/React.createElement(BootstrapTable,{keyField:\"StartDate\",data:this.state.products,columns:this.state.cols,rowEvents:this.rowEvents,expandRow:this.expandRow})),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isEdit,toggle:function toggle(){return _this6.toggleEdit('save');},className:'modal-lg '+this.props.className},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this6.toggleEdit('save');}},\"Risk Question\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"b\",null,\"Question Category:\"),\" \",this.state.tempData.QuestionCategoryName),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"b\",null,\"Question Group:\"),\" \",this.state.tempData.QuestionGroup),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(\"b\",null,\"Question Code:\"),\" \",this.state.tempData.QuestionCode)),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"span\",{style:{fontSize:20}},/*#__PURE__*/React.createElement(\"b\",null,\"Question:\"),\" \",this.state.tempData.RiskQuestion))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"b\",null,\"Response Type:\"),\" \",this.state.tempData.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Is Rateable?\")),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Input,{disabled:this.state.isView,type:\"checkbox\",name:\"IsRateable\",value:\"IsRateable\",id:\"IsRateable\",checked:this.state.IsRateable,onClick:function onClick(e){return _this6.checked(e.target.checked);}}))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:10}},/*#__PURE__*/React.createElement(Col,{md:\"1\"},/*#__PURE__*/React.createElement(\"b\",null,\"Type\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isView,type:\"select\",name:\"ResponseWeightType\",id:\"ResponseWeightType\",onChange:function onChange(e){return _this6.selectType(e.target.value,'ResponseWeightType');},value:this.state.ResponseWeightType},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),this.state.systemEndorsementArr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.StringMapName},type.StringMapName);})),/*#__PURE__*/React.createElement(\"em\",{id:\"ResponseWeightTypeError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"label\",null,this.state.effectivedate)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(Input,{disabled:this.state.isView,type:\"date\",name:\"effectiveDate\",id:\"effectiveDate\",onChange:function onChange(e){return _this6.handleChange(e);},value:this.state.effectiveDate,min:moment().format('YYYY-MM-DD'),max:moment().add(100,'years').format('YYYY-MM-DD')}),/*#__PURE__*/React.createElement(\"em\",{id:\"effectiveDateError\",className:\"error invalid-feedback\"}))),/*#__PURE__*/React.createElement(\"div\",null,this.state.tempData.ResponseWeightTypeName===\"ListOfValues\"?/*#__PURE__*/ /*<~~~~~~~~~~~LIST~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Response\"))),this.state.ListValue.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this6.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Input,{disabled:_this6.state.isView,type:\"text\",name:\"Rating\",id:\"Rating\",value:value.Rating,onChange:_this6.ListValueValidate('Rating',index)}),value.RatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"10\"},/*#__PURE__*/React.createElement(\"b\",null,value.Response)));})):this.state.tempData.ResponseWeightTypeName===\"YesNo\"?/*#__PURE__*/ /*<~~~~~~~~~~~YESNO~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Response\"))),this.state.ListValue.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this6.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Input,{disabled:_this6.state.isView,type:\"text\",name:\"Rating\",id:\"Rating\",value:value.Rating,onChange:_this6.ListValueValidate('Rating',index)}),value.RatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,value.Response)));})):this.state.tempData.ResponseWeightTypeName===\"Number\"||this.state.tempData.ResponseWeightTypeName===\"Percentage\"||this.state.tempData.ResponseWeightTypeName===\"Amount\"?/*#__PURE__*/ /*<~~~~~~~~~~~NUMBER~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 2\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 2\"))),/*#__PURE__*/React.createElement(\"div\",null,this.state.NumberOperations.map(function(value,index){console.log(\"NumberOperations\",value);return/*#__PURE__*/React.createElement(\"div\",null,value.isDeleted==true?null:/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this6.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"NumberRating\",value:value.NumberRating,id:\"NumberRating\",onChange:_this6.NumberInputValidate('NumberRating',index)}),value.NumberRatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null))):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{disabled:_this6.state.isView,type:\"select\",name:\"NumberOperator1\",onChange:_this6.NumberInputValidate('NumberOperator1',index),value:value.NumberOperator1},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this6.state.NumberOperator1Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.StringMapName},type.StringMapName);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"NumberBound1\",value:value.NumberBound1,onChange:_this6.NumberInputValidate('NumberBound1',index)})):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{disabled:_this6.state.isView,type:\"select\",name:\"NumberOperator2\",onChange:_this6.NumberInputValidate('NumberOperator2',index),value:value.NumberOperator2},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this6.state.NumberOperator2Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator&&value.IsOnlyOneOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"NumberBound2\",value:value.NumberBound2,onChange:_this6.NumberInputValidate('NumberBound2',index)})):null),value.IsAllOtherOperator?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this6.addRowToArray('Number');}},\"Add Row\"),index!==0?/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this6.removeRowToNumberArray(value,index);}},\"  Remove\"):null):null));}))):this.state.tempData.ResponseWeightTypeName===\"Date\"||this.state.tempData.ResponseWeightTypeName===\"Year\"?/*#__PURE__*/ /*<~~~~~~~~~~~DATE~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 1\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator 2\")),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,\"Bound 2\"))),/*#__PURE__*/React.createElement(\"div\",null,this.state.DateOperations.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this6.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"DateRating\",id:\"DateRating\",value:value.DateRating,onChange:_this6.DateInputValidate('DateRating',index)}),value.DateRatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{disabled:_this6.state.isView,type:\"select\",name:\"DateOperator1\",onChange:_this6.DateInputValidate('DateOperator1',index),value:value.DateOperator1},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this6.state.DateOperator1Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"DateBound1\",value:value.DateBound1,onChange:_this6.DateInputValidate('DateBound1',index)})):null),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{disabled:_this6.state.isView,type:\"select\",name:\"DateOperator2\",onChange:_this6.DateInputValidate('DateOperator2',index),value:value.DateOperator2},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this6.state.DateOperator2Arr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"2\"},value.IsAllOtherOperator&&value.IsOnlyOneOperator?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"DateBound2\",value:value.DateBound2,onChange:_this6.DateInputValidate('DateBound2',index)})):null),value.IsAllOtherOperator?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this6.addRowToArray('Date');}},\"Add Row\"),index!==0?/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this6.removeRowToDateArray(value,index);}},\"  Remove\"):null):null);}))):this.state.tempData.ResponseWeightTypeName===\"Text\"?/*#__PURE__*/ /*<~~~~~~~~~~~TEXT~~~~~~~~~~>*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(\"b\",null,this.state.ResponseWeightTypeName)),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Operator\")),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"b\",null,\"Text for Comparison\"))),/*#__PURE__*/React.createElement(\"div\",null,this.state.textOperations.map(function(value,index){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"2\"},_this6.state.IsRateable?/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"TextRating\",id:\"TextRating\",value:value.TextRating,onChange:_this6.InputValidate('TextRating',index)}),value.TextRatingError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null):null),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"systemEndorsementText\",onChange:_this6.InputValidate('TextOperator',index),value:value.TextOperator},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Select Rating Type\"),_this6.state.systemEndorsementTextArr.map(function(type,i){return/*#__PURE__*/React.createElement(\"option\",{value:type.value},type.label);})))),/*#__PURE__*/React.createElement(Col,{md:\"3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"TextToCompare\",id:\"TextToCompare\",value:value.TextToCompare,onChange:_this6.InputValidate('TextToCompare',index)}),value.TextToCompareError?/*#__PURE__*/React.createElement(\"em\",{style:{display:\"block\"},className:\"error invalid-feedback\"},\" Please enter valid input \"):null)),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this6.addRowToArray('Text');}},\"Add Row\"),index!==0?/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return _this6.removeRowToArray(value,index);}},\"  Remove\"):null));}))):null)),/*#__PURE__*/React.createElement(ModalFooter,null,this.state.isView?null:/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this6.updateQuestion();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Update\"),/*#__PURE__*/React.createElement(BTN,{style:{marginLeft:10},color:\"primary\",onClick:function onClick(){return _this6.toggleEdit('save');}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-close\"}),\" Cancel\")))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isOpenForUpdate,toggle:function toggle(){return _this6.toggleEditModel('save');},className:'modal-lg '+this.props.className},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this6.toggleEditModel('save');}},\"Risk Question\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(\"label\",null,\"Values for this date \",moment(this.state.effectiveDate).format('DD-MM-YYYY'),\" is already added for \",this.state.tempData.RiskQuestion,\", are you sure you want to update this record ?\")),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this6.updateQuestionModal();}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Yes\"),' ',/*#__PURE__*/React.createElement(BTN,{color:\"primary\",onClick:function onClick(){return _this6.toggleEditModel('save');}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-close\"}),\" No\"))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isDelet,toggle:function toggle(){return _this6.toggleDelete('save');},className:'modal-lg '+this.props.className},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _this6.toggleDelete('save');}},\"Risk Question\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(\"label\",null,\"Are you sure want to delete this records ?\")),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(BTN,{color:\"success\",onClick:function onClick(){return _this6.deleteModal(_this6.state.newVar);}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-check\"}),\" Yes\"),' ',/*#__PURE__*/React.createElement(BTN,{color:\"primary\",onClick:function onClick(){return _this6.toggleDelete('save');}},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-close\"}),\" No\"))));}}]);return RiskQuestionHistory;}(Component);export default RiskQuestionHistory;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/RiskQuestion/RiskQuestionHistory.js"],"names":["React","Component","DataTable","Column","MultiSelect","InputText","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","api","APIConstant","CommonConfig","moment","render","BootstrapTable","RiskQuestionHistory","deleteHistoryRecord","row","setState","isDelet","newVar","viewHistoryRecord","isView","isEdit","tempData","IsRateable","ResponseWeightTypeName","textOperations","NumberOperations","DateOperations","effectiveDate","StartDate","format","ResponseWeightType","RiskQuestionHistoryId","handleOnExpand","updateHistoryRecord","console","log","isExpand","rowIndex","e","dataToSend","RiskQuestionId","props","match","params","Id","post","then","res","success","data","length","state","NumberArr","TextArr","DateArr","formattedData","i","temppDataForNumber","id","NumberRating","NumberOperator1","NumberOperator1Arr","NumberBound1","NumberOperator2","NumberOperator2Arr","NumberBound2","IsOnlyOneOperator","IsAllOtherOperator","DateRatingError","isDeleted","temppDataForText","TextRating","TextOperator","TextToCompare","temppDataForDate","DateRating","DateOperator1","DateOperator1Arr","DateBound1","DateOperator2","DateOperator2Arr","DateBound2","NumberRatingError","push","Response","isEmpty","ResponseStringMapKey","trim","Rating","AbsoluteAmount","RiskQuestionResponseWeightageHistoryId","RiskQuestionResponseWeightageId","Operator1","Bound1","Operator2","Bound2","ListValue","error","updateQuestion","isAdd","resultsData","products","filter","x","effectiveDateError","upDateModel","ResponseTypeName","loggedInUserId","IsAdd","IsEdit","message","toggleEdit","getRiskQuestionHistory","catch","err","updateQuestionModal","toggleEditModel","setTimeout","window","location","reload","deleteModal","IsDiscard","expandRow","onlyOneExpanding","showExpandColumn","expandByColumnOnly","onExpand","renderer","map","value","index","isOpenForUpdate","toggleDelete","InputValidate","name","PIndex","evt","target","NewTextDetails","Package","invSpace","TextRatingErr","RegExp","percentageWithNegative","decimalWithNegative","test","TextRatingError","nameWithoutSpace","TextToCompareError","NumberInputValidate","NumberRatingErr","IsAllOtherOperatorValue","DateRatingErr","number","IsOnlyOneOperatorValue","ListValueValidate","RatingError","DateInputValidate","checked","isChecked","handleChange","show","fromDate","ToDate","columns","dataField","text","formatter","actionFormatter","OpenModal","cols","forAction","RiskQuestionHistoryList","rowData","VesselClassList","VesselTypeList","vesselClass","VesselClassId","vesselClassError","VesselTypeId","vesselType","vesselTypeError","selectedPage","rowsPerPageOptions","dataTableConfig","str","rowsPerPage","globalFilter","toogleEditModal","ResponseWeightTypeNameError","ResponseWeightTypeError","textOperation","listType","systemEndorsementArr","systemEndorsement","systemEndorsementError","systemEndorsementText","systemEndorsementTextArr","ResponseType","effectivedate","historyDatesArr","historyDates","diaplayDate","diaplayDateArr","isEnable","constructor","Object","keys","getDropDownValues","stringMapType","setStateName","orderBy","stringmaptype","orderby","path","dropdownbycode","newArr","QuestionCode","RiskQuestion","QuestionGroup","UpdatedOn","QuestionCategoryName","QuestionCategory","Qualifier","isCurrent","IsCurrent","ACTION","cell","position","Date","marginLeft","type","NumberOperation","DateOperation","undefined","NewTextDetailsForDate","NewTextDetailsForList","field","condition","errorField","document","getElementById","className","innerHTML","marginTop","padding","selectType","StringMapName","searchByDateAndDisplayMode","rowEvents","fontSize","add","display","label","addRowToArray","removeRowToNumberArray","removeRowToDateArray","removeRowToArray"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport APIConstant from '../../../utils/constants';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport moment from 'moment';\r\nimport { render } from 'react-dom';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nclass RiskQuestionHistory extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        const columns = [\r\n            { dataField: \"QuestionCode\", text: \"Question Code\" },\r\n            { dataField: \"RiskQuestion\", text: \"Question\" },\r\n            { dataField: \"QuestionGroup\", text: \"Group\" },\r\n            { dataField: \"ResponseWeightTypeName\", text: \"Rating Type\" },\r\n            { dataField: \"StartDate\", text: \"Effective Date\" },\r\n            { dataField: \"Qualifier\", text: \"Qualifier\" },\r\n            { dataField: \"isCurrent\", text: \"Is Current\" },\r\n            { dataField: \"Action\", text: \"Actions\", formatter: this.actionFormatter, OpenModal: this.updateHistoryRecord, viewHistoryRecord: this.viewHistoryRecord, deleteHistoryRecord: this.deleteHistoryRecord, },\r\n        ];\r\n\r\n        this.state = {\r\n            cols: columns,\r\n            forAction: false,\r\n            isAdd: false,\r\n            isDelet: false,\r\n            isOpenForUpdate: false,\r\n            products: [],\r\n            RiskQuestionHistoryList: [],\r\n            rowData: '',\r\n            VesselClassList: [],\r\n            VesselTypeList: [],\r\n            vesselClass: '',\r\n            VesselClassId: '',\r\n            vesselClassError: true,\r\n            VesselTypeId: '',\r\n            vesselType: '',\r\n            vesselTypeError: true,\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            toogleEditModal: false,\r\n            tempData: '',\r\n            IsRateable: false,\r\n            ResponseWeightTypeName: '',\r\n            ResponseWeightTypeNameError: true,\r\n            ResponseWeightType: '',\r\n            ResponseWeightTypeError: true,\r\n            textOperation: '',\r\n            textOperations: [],\r\n            TextArr: {\r\n                id: 1,\r\n                TextRating: '',\r\n                TextOperator: '',\r\n                TextToCompare: '',\r\n                TextToCompareError: false,\r\n                isDeleted: false,\r\n            },\r\n            NumberOperations: [],\r\n            NumberArr: {\r\n                id: 1,\r\n                NumberRating: '',\r\n                NumberOperator1: '',\r\n                NumberOperator1Arr: [],\r\n                NumberBound1: '',\r\n                NumberOperator2: '',\r\n                NumberOperator2Arr: [],\r\n                NumberBound2: '',\r\n                IsOnlyOneOperator: false,\r\n                IsAllOtherOperator: true,\r\n                NumberRatingError: false,\r\n                isDeleted: false,\r\n            },\r\n            DateOperations: [],\r\n            DateArr: {\r\n                id: 1,\r\n                DateRating: '',\r\n                DateOperator1: '',\r\n                DateOperator1Arr: [],\r\n                DateBound1: '',\r\n                DateOperator2: '',\r\n                DateOperator2Arr: [],\r\n                DateBound2: '',\r\n                IsOnlyOneOperator: false,\r\n                IsAllOtherOperator: true,\r\n                DateRatingError: false,\r\n                isDeleted: false,\r\n            },\r\n            TextRatingError: true,\r\n            TextRating: '',\r\n            ListValue: [],\r\n            Rating: '',\r\n            RatingError: true,\r\n            listType: '',\r\n            systemEndorsementArr: [],\r\n            systemEndorsement: '',\r\n            systemEndorsementError: true,\r\n            systemEndorsementText: '',\r\n            systemEndorsementTextArr: [],\r\n            RiskQuestionId: '',\r\n            RiskQuestionResponseWeightageId: '',\r\n            ResponseType: '',\r\n            effectivedate: 'Effective Date',\r\n            effectiveDate: '',\r\n            effectiveDateError: true,\r\n            historyDatesArr: [],\r\n            historyDates: '',\r\n            fromDate: '',\r\n            ToDate: '',\r\n            diaplayDate: '',\r\n            diaplayDateArr: [],\r\n            isEnable: false,\r\n            isEdit: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n            this.getRiskQuestionHistory(this.props.match.params.Id);\r\n        }\r\n\r\n        this.getDropDownValues('RATINGTYPE', 'systemEndorsementArr', 'SortOrder');\r\n        this.getDropDownValues('RATINGOPERATOR', 'NumberOperator1Arr', 'SortOrder');\r\n        this.getDropDownValues('RATINGOPERATOR2', 'NumberOperator2Arr', 'SortOrder');\r\n        this.getDropDownValues('RATINGOPERATOR', 'DateOperator1Arr', 'SortOrder');\r\n        this.getDropDownValues('RATINGOPERATOR2', 'DateOperator2Arr', 'SortOrder');\r\n        this.getDropDownValues('TEXTOPERATOR', 'systemEndorsementTextArr', 'SortOrder');\r\n        this.getDropDownValues('DISPLAYMODE', 'diaplayDateArr', 'SortOrder');\r\n        this.setState({ effectiveDate: moment().format('YYYY-MM-DD'), effectiveDateError: false })\r\n    }\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"getDropDownValues\", res.data);\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    getRiskQuestionHistory(Id) {\r\n        try {\r\n            var data = {\r\n                RiskQuestionId: Id,\r\n                fromDate: CommonConfig.isEmpty(this.state.fromDate) ? '' : this.state.fromDate,\r\n                ToDate: CommonConfig.isEmpty(this.state.ToDate) ? '' : this.state.ToDate,\r\n                diaplayDate: CommonConfig.isEmpty(this.state.diaplayDate) ? '' : this.state.diaplayDate,\r\n            }\r\n            api.post('api/getHistoryDates', data).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"getRiskQuestionHistory\", res.data);\r\n                    var newArr = [];\r\n                    for (var i = 0; i < res.data[0].length; i++) {\r\n                        newArr.push({\r\n                            QuestionCode: res.data[0][i].QuestionCode,\r\n                            RiskQuestion: res.data[0][i].RiskQuestion,\r\n                            QuestionGroup: res.data[0][i].QuestionGroup,\r\n                            ResponseWeightTypeName: res.data[0][i].ResponseType,\r\n                            StartDate: moment(res.data[0][i].StartDate).format('DD-MM-YYYY'),\r\n                            UpdatedOn: res.data[0][i].UpdatedOn,\r\n                            IsRateable: res.data[0][i].IsRateable.data[0] === 0 ? 'No' : 'Yes',\r\n                            QuestionCategoryName: res.data[0][i].QuestionCategory,\r\n                            ResponseWeightType: res.data[0][i].ResponseWeightType,\r\n                            Qualifier: res.data[0][i].Qualifier,\r\n                            isCurrent: res.data[0][i].IsCurrent,\r\n                            forAction: res.data[0][i].ACTION === \"Edit\" ? true : false,\r\n                            RiskQuestionHistoryId: res.data[0][i].RiskQuestionHistoryId\r\n                        })\r\n                        this.setState({ QuestionCode: res.data[0][i].QuestionCode });\r\n                    }\r\n                    console.log(\"getRiskQuestionHistory\", newArr);\r\n                    this.setState({ products: newArr });\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(\"getRiskQuestionHistoryErr\", error);\r\n        }\r\n    }\r\n\r\n    actionFormatter(cell, rowData) {\r\n        return <div>\r\n            {(rowData.forAction) ? (\r\n                <div>\r\n                    <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\" tooltip=\"Edit\" onClick={() => this.OpenModal(rowData)} tooltipOptions={{ position: 'bottom' }}></Button>\r\n                    {(Date(moment(rowData.StartDate).format('YYYY-MM-DD')) >= moment().format('YYYY-MM-DD')) ? (\r\n                        <Button style={{ marginLeft: 10 }} type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"delete\" onClick={() => this.deleteHistoryRecord(rowData)} tooltipOptions={{ position: 'bottom' }}></Button>\r\n                    ) : (null)}\r\n                </div>\r\n            ) : (\r\n                    <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-primary\" tooltip=\"View\" onClick={() => this.viewHistoryRecord(rowData)} tooltipOptions={{ position: 'bottom' }}></Button>\r\n                )}\r\n\r\n            {/* <Button type=\"button\" icon=\"pi pi-clock\" className=\"p-button-primary\" tooltip=\"Show History\" onClick={() => this.goToHistoryPage(rowData)} tooltipOptions={{ position: 'bottom' }} style={{ marginLeft: 10 }}></Button> */}\r\n            {/* <Button color=\"warning\" style={{ marginRight: '.5em' }}  title=\"Edit\"><i className=\"pi pi-pencil\"></i></Button> */}\r\n        </div>;\r\n    }\r\n\r\n    deleteHistoryRecord = (row) => {\r\n        this.setState({ isDelet: true, newVar: row });\r\n    }\r\n\r\n    viewHistoryRecord = (row) => {\r\n        this.setState({ isView: true, isEdit: true, tempData: row, IsRateable: (row.IsRateable === 'Yes' ? true : false), ResponseWeightTypeName: row.ResponseWeightTypeName, textOperations: [], NumberOperations: [], DateOperations: [], effectiveDate: moment(row.StartDate, 'DD-MM-YYYY').format('YYYY-MM-DD'), ResponseWeightType: row.ResponseWeightType, RiskQuestionHistoryId: row.RiskQuestionHistoryId });\r\n        this.handleOnExpand(row);\r\n    }\r\n\r\n    updateHistoryRecord = (row) => {\r\n        this.setState({\r\n            isEdit: true, tempData: row, IsRateable: (row.IsRateable === 'Yes' ? true : false), ResponseWeightTypeName: row.ResponseWeightTypeName, textOperations: [], NumberOperations: [], DateOperations: [],\r\n            effectiveDate: (moment(row.StartDate, 'DD-MM-YYYY').format(\"YYYY-MM-DD\") > moment().format(\"YYYY-MM-DD\")) ? moment(row.StartDate, 'DD-MM-YYYY').format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"),\r\n            ResponseWeightType: row.ResponseWeightType, RiskQuestionHistoryId: row.RiskQuestionHistoryId\r\n        });\r\n        this.handleOnExpand(row);\r\n        console.log(\"rowEventssssssssss\", row);\r\n    }\r\n\r\n    handleOnExpand = (row, isExpand, rowIndex, e) => {\r\n        console.log(\"handleOnExpandddd55\", row);\r\n        try {\r\n            var dataToSend = {\r\n                RiskQuestionId: this.props.match.params.Id,\r\n                RiskQuestionHistoryId: row.RiskQuestionHistoryId,\r\n            }\r\n            console.log(\"handleOnExpandddd3\", dataToSend);\r\n            api.post('api/getResponseByHistoryDates', dataToSend).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"handleOnExpandddd321\", res.data);\r\n                    if (!res.data.length) {\r\n                        if (this.state.ResponseWeightTypeName === \"Number\" || this.state.ResponseWeightTypeName === \"Percentage\" || this.state.ResponseWeightTypeName === \"Amount\") {\r\n                            this.setState({ NumberOperations: [this.state.NumberArr] });\r\n                        } else if (this.state.ResponseWeightTypeName === \"Text\") {\r\n                            this.setState({ textOperations: [this.state.TextArr] });\r\n                        } else if (this.state.ResponseWeightTypeName === \"Date\" || this.state.ResponseWeightTypeName === \"Year\") {\r\n                            this.setState({ DateOperations: [this.state.DateArr] });\r\n                        }\r\n                    } else {\r\n                        var formattedData = [];\r\n                        var NumberOperations = [];\r\n                        var textOperations = [];\r\n                        var DateOperations = [];\r\n                        let i;\r\n                        for (i = 0; i < res.data.length; i++) {\r\n                            var temppDataForNumber = {\r\n                                id: 1,\r\n                                NumberRating: '',\r\n                                NumberOperator1: '',\r\n                                NumberOperator1Arr: [],\r\n                                NumberBound1: '',\r\n                                NumberOperator2: '',\r\n                                NumberOperator2Arr: [],\r\n                                NumberBound2: '',\r\n                                IsOnlyOneOperator: true,\r\n                                IsAllOtherOperator: true,\r\n                                DateRatingError: false,\r\n                                isDeleted: false,\r\n                            };\r\n\r\n                            var temppDataForText = {\r\n                                id: 1,\r\n                                TextRating: '',\r\n                                TextOperator: '',\r\n                                TextToCompare: '',\r\n                                isDeleted: false,\r\n                            }\r\n\r\n                            var temppDataForDate = {\r\n                                id: 1,\r\n                                DateRating: '',\r\n                                DateOperator1: '',\r\n                                DateOperator1Arr: [],\r\n                                DateBound1: '',\r\n                                DateOperator2: '',\r\n                                DateOperator2Arr: [],\r\n                                DateBound2: '',\r\n                                IsOnlyOneOperator: true,\r\n                                IsAllOtherOperator: true,\r\n                                NumberRatingError: false,\r\n                                isDeleted: false,\r\n                            }\r\n                            formattedData.push({\r\n                                Response: CommonConfig.isEmpty(res.data[i].ResponseStringMapKey) ? '' : (res.data[i].ResponseStringMapKey).trim(),\r\n                                Rating: CommonConfig.isEmpty(res.data[i].Rating) ? CommonConfig.isEmpty(res.data[i].AbsoluteAmount) ? 0 : res.data[i].AbsoluteAmount : res.data[i].Rating,\r\n                                RiskQuestionResponseWeightageHistoryId: CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageHistoryId) ? '' : res.data[i].RiskQuestionResponseWeightageHistoryId,\r\n                                RiskQuestionResponseWeightageId: CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId\r\n\r\n                            });\r\n\r\n                            temppDataForNumber.id = i + 1;\r\n                            temppDataForNumber.NumberRating = CommonConfig.isEmpty(res.data[i].Rating) ? res.data[i].AbsoluteAmount : res.data[i].Rating;\r\n                            temppDataForNumber.NumberOperator1 = CommonConfig.isEmpty(res.data[i].Operator1) ? '' : res.data[i].Operator1;\r\n                            temppDataForNumber.NumberBound1 = CommonConfig.isEmpty(res.data[i].Bound1) ? 0.00 : res.data[i].Bound1;\r\n\r\n                            temppDataForNumber.NumberOperator2 = CommonConfig.isEmpty(res.data[i].Operator2) ? '' : res.data[i].Operator2;\r\n                            if (temppDataForNumber.NumberOperator2 === \"One Operator Only\") {\r\n                                temppDataForNumber.IsOnlyOneOperator = false;\r\n                            } else {\r\n                                temppDataForNumber.IsOnlyOneOperator = true;\r\n                            }\r\n                            temppDataForNumber.NumberBound2 = CommonConfig.isEmpty(res.data[i].Bound2) ? 0.00 : res.data[i].Bound2;\r\n                            temppDataForNumber.RiskQuestionResponseWeightageHistoryId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageHistoryId) ? '' : res.data[i].RiskQuestionResponseWeightageHistoryId;\r\n                            temppDataForNumber.isDeleted = false;\r\n                            temppDataForNumber.RiskQuestionResponseWeightageId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId;\r\n                            // temppDataForNumber.IsOnlyOneOperator= true;\r\n\r\n                            temppDataForText.TextRating = CommonConfig.isEmpty(res.data[i].Rating) ? res.data[i].AbsoluteAmount : res.data[i].Rating;\r\n                            temppDataForText.TextOperator = CommonConfig.isEmpty(res.data[i].Operator1) ? '' : res.data[i].Operator1;\r\n                            temppDataForText.TextToCompare = CommonConfig.isEmpty(res.data[i].Bound1) ? '' : res.data[i].Bound1;\r\n                            temppDataForText.RiskQuestionResponseWeightageId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId;\r\n                            temppDataForText.isDeleted = false;\r\n                            temppDataForText.RiskQuestionResponseWeightageId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId;\r\n\r\n                            temppDataForDate.id = i + 1;\r\n                            temppDataForDate.DateRating = CommonConfig.isEmpty(res.data[i].Rating) ? res.data[i].AbsoluteAmount : res.data[i].Rating;\r\n                            temppDataForDate.DateOperator1 = CommonConfig.isEmpty(res.data[i].Operator1) ? 0.00 : res.data[i].Operator1;\r\n                            temppDataForDate.DateBound1 = CommonConfig.isEmpty(res.data[i].Bound1) ? 0.00 : res.data[i].Bound1;\r\n                            temppDataForDate.DateOperator2 = CommonConfig.isEmpty(res.data[i].Operator2) ? 0.00 : res.data[i].Operator2;\r\n                            if (temppDataForDate.NumberOperator2 === \"One Operator Only\") {\r\n                                temppDataForDate.IsOnlyOneOperator = false;\r\n                            } else {\r\n                                temppDataForDate.IsOnlyOneOperator = true;\r\n                            }\r\n                            temppDataForDate.DateBound2 = CommonConfig.isEmpty(res.data[i].Bound2) ? 0.00 : res.data[i].Bound2;\r\n                            temppDataForDate.RiskQuestionResponseWeightageHistoryId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageHistoryId) ? '' : res.data[i].RiskQuestionResponseWeightageHistoryId;\r\n                            temppDataForDate.isDeleted = false;\r\n                            temppDataForDate.RiskQuestionResponseWeightageId = CommonConfig.isEmpty(res.data[i].RiskQuestionResponseWeightageId) ? '' : res.data[i].RiskQuestionResponseWeightageId;\r\n                            // temppDataForDate.IsOnlyOneOperator= true;\r\n\r\n                            NumberOperations.push(temppDataForNumber);\r\n                            textOperations.push(temppDataForText);\r\n                            DateOperations.push(temppDataForDate);\r\n                        }\r\n                        this.setState({ NumberOperations: NumberOperations });\r\n                        this.setState({ textOperations: textOperations });\r\n                        this.setState({ DateOperations: DateOperations });\r\n                        this.setState({ ListValue: formattedData });\r\n                    }\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(\"handleOnExpandErr\", error);\r\n        }\r\n    }\r\n\r\n    upDateModel() {\r\n        this.setState({ isOpenForUpdate: true });\r\n    }\r\n\r\n    updateQuestion = () => {\r\n        var isAdd = this.state.isAdd;\r\n        var isEdit = this.state.isEdit;\r\n        let resultsData = this.state.products.filter(x => x.StartDate === moment(this.state.effectiveDate).format('DD-MM-YYYY'));\r\n        console.log(\"updateQuestion\", resultsData);\r\n        if (!this.state.effectiveDateError) {\r\n\r\n            if (resultsData.length) {\r\n                isAdd = false;\r\n                isEdit = true;\r\n                this.setState({ RiskQuestionHistoryId: resultsData[0].RiskQuestionHistoryId })\r\n                this.upDateModel();\r\n            } else {\r\n                isAdd = true;\r\n                isEdit = false;\r\n\r\n                let data = {\r\n                    RiskQuestionHistoryId: this.state.RiskQuestionHistoryId,\r\n                    ResponseTypeName: this.state.ResponseWeightType,\r\n                    IsRateable: this.state.IsRateable,\r\n                    ResponseWeightTypeName: this.state.ResponseWeightTypeName,\r\n                    RiskQuestionId: this.props.match.params.Id,\r\n                    effectiveDate: this.state.effectiveDate,\r\n                    loggedInUserId: CommonConfig.loggedInUserId(),\r\n                    IsAdd: isAdd,\r\n                    IsEdit: isEdit,\r\n                };\r\n                if (this.state.tempData.ResponseWeightTypeName === \"Text\") {\r\n                    if (this.state.IsRateable) {\r\n                        data.textOperations = this.state.textOperations;\r\n                    } else {\r\n                        data.textOperations = '';\r\n                    }\r\n                } else if (this.state.tempData.ResponseWeightTypeName === \"Number\" || this.state.tempData.ResponseWeightTypeName === \"Percentage\" || this.state.tempData.ResponseWeightTypeName === \"Amount\") {\r\n                    if (this.state.IsRateable) {\r\n                        data.NumberOperations = this.state.NumberOperations;\r\n                    } else {\r\n                        data.NumberOperations = '';\r\n                    }\r\n                } else if (this.state.tempData.ResponseWeightTypeName === \"Date\" || this.state.tempData.ResponseWeightTypeName === \"Year\") {\r\n                    if (this.state.IsRateable) {\r\n                        data.DateOperations = this.state.DateOperations;\r\n                    } else {\r\n                        data.DateOperations = '';\r\n                    }\r\n                } else if (this.state.tempData.ResponseWeightTypeName === \"ListOfValues\" || this.state.tempData.ResponseWeightTypeName === \"YesNo\") {\r\n                    if (this.state.IsRateable) {\r\n                        data.ListValue = this.state.ListValue;\r\n                    } else {\r\n                        data.ListValue = '';\r\n                    }\r\n                }\r\n                console.log(\"IsOnlyOneOperator\", data);\r\n\r\n                api.post('api/UpdateRiskQuestionWeightage', data).then(res => {\r\n                    console.log(\"UpdateRiskQuestionWeightage\", res);\r\n                    if (res.success) {\r\n                        console.log(\"UpdateRiskQuestionWeightage\", res.data);\r\n                        toast.success(res.data.message);\r\n                        this.toggleEdit('save');\r\n                        // setTimeout(function () {\r\n                        //     window.location.reload();\r\n                        // }, 1000);   \r\n                        this.getRiskQuestionHistory(this.props.match.params.Id);\r\n                    }\r\n                }).catch(err => {\r\n                });\r\n            }\r\n        } else {\r\n            if (this.state.effectiveDateError) {\r\n                toast.error(\"Please select valid Effective Date\")\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateQuestionModal = () => {\r\n        let data = {\r\n            RiskQuestionHistoryId: this.state.RiskQuestionHistoryId,\r\n            ResponseTypeName: this.state.ResponseWeightType,\r\n            IsRateable: this.state.IsRateable,\r\n            ResponseWeightTypeName: this.state.ResponseWeightTypeName,\r\n            RiskQuestionId: this.props.match.params.Id,\r\n            effectiveDate: this.state.effectiveDate,\r\n            loggedInUserId: CommonConfig.loggedInUserId(),\r\n            IsEdit: 'true',\r\n        };\r\n        if (this.state.tempData.ResponseWeightTypeName === \"Text\") {\r\n            if (this.state.IsRateable) {\r\n                data.textOperations = this.state.textOperations;\r\n            } else {\r\n                data.textOperations = '';\r\n            }\r\n        } else if (this.state.tempData.ResponseWeightTypeName === \"Number\" || this.state.tempData.ResponseWeightTypeName === \"Percentage\" || this.state.tempData.ResponseWeightTypeName === \"Amount\") {\r\n            if (this.state.IsRateable) {\r\n                data.NumberOperations = this.state.NumberOperations;\r\n            } else {\r\n                data.NumberOperations = '';\r\n            }\r\n        } else if (this.state.tempData.ResponseWeightTypeName === \"Date\" || this.state.tempData.ResponseWeightTypeName === \"Year\") {\r\n            if (this.state.IsRateable) {\r\n                data.DateOperations = this.state.DateOperations;\r\n            } else {\r\n                data.DateOperations = '';\r\n            }\r\n        } else if (this.state.tempData.ResponseWeightTypeName === \"ListOfValues\" || this.state.tempData.ResponseWeightTypeName === \"YesNo\") {\r\n            if (this.state.IsRateable) {\r\n                data.ListValue = this.state.ListValue;\r\n            } else {\r\n                data.ListValue = '';\r\n            }\r\n        }\r\n        console.log(\"IsOnlyOneOperator\", data);\r\n\r\n        api.post('api/UpdateRiskQuestionWeightage', data).then(res => {\r\n            console.log(\"UpdateRiskQuestionWeightage\", res);\r\n            if (res.success) {\r\n                console.log(\"UpdateRiskQuestionWeightage\", res.data);\r\n                toast.success(res.data.message);\r\n                this.toggleEditModel('save');\r\n                setTimeout(function () {\r\n                    window.location.reload();\r\n                }, 1000);\r\n                this.getRiskQuestionHistory(this.props.match.params.Id);\r\n            }\r\n        }).catch(err => {\r\n        });\r\n    }\r\n\r\n    deleteModal = (newVar) => {\r\n        console.log(\"deleteModal\", newVar);\r\n        try {\r\n            var dataToSend = {\r\n                IsDiscard: 'true',\r\n                RiskQuestionHistoryId: newVar.RiskQuestionHistoryId,\r\n                loggedInUserId: CommonConfig.loggedInUserId(),\r\n            }\r\n            api.post('api/deleteRiskQuestion', dataToSend).then(res => {\r\n                console.log(\"deleteRiskQuestion\", res);\r\n                if (res.success) {\r\n                    toast.success(res.message);\r\n                    this.toggleEdit('save');\r\n                    setTimeout(function () {\r\n                        window.location.reload();\r\n                    }, 800);\r\n                    this.getRiskQuestionHistory(this.props.match.params.Id);\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n            console.log(\"deleteModal\", error);\r\n        }\r\n    }\r\n\r\n    expandRow = {\r\n        onlyOneExpanding: true,\r\n        showExpandColumn: true,\r\n        expandByColumnOnly: true,\r\n        onExpand: this.handleOnExpand,\r\n        renderer: row => (\r\n            <div>\r\n                <div>\r\n                    {/* {(row.ResponseWeightTypeName === \"ListOfValues\" */}\r\n                    {(row.ResponseWeightTypeName === \"ListOfValues\") ?\r\n                        <div>\r\n                            <Row>\r\n                                <Col md=\"3\">\r\n                                    <b>Rating/Absolute Amount</b>\r\n                                </Col>\r\n                                <Col md=\"3\">\r\n                                    <b>Response</b>\r\n                                </Col>\r\n                            </Row>\r\n                            {this.state.ListValue.map((value, index) => {\r\n                                return (\r\n                                    <Row>\r\n                                        <Col md=\"3\">\r\n                                            <label>{value.Rating}</label>\r\n                                        </Col>\r\n                                        <Col md=\"9\">\r\n                                            <label>{value.Response}</label>\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </div>\r\n                        : (row.ResponseWeightTypeName === \"YesNo\") ? (\r\n                            <div>\r\n                                <Row>\r\n                                    <Col md=\"3\">\r\n                                        <b>Rating/Absolute Amount</b>\r\n                                    </Col>\r\n                                    <Col md=\"3\">\r\n                                        <b>Response</b>\r\n                                    </Col>\r\n                                </Row>\r\n                                {this.state.ListValue.map((value, index) => {\r\n                                    return (\r\n                                        <Row>\r\n                                            <Col md=\"3\">\r\n                                                <label>{value.Rating}</label>\r\n                                            </Col>\r\n                                            <Col md=\"9\">\r\n                                                <label>{value.Response}</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                                )}\r\n                            </div>\r\n                        ) : (row.ResponseWeightTypeName === \"Number\" || row.ResponseWeightTypeName === \"Percentage\" || row.ResponseWeightTypeName === \"Amount\") ? (\r\n                            <div>\r\n                                <Row>\r\n                                    <Col md=\"2\">\r\n                                        <b>Rating/Absolute Amount</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Operator 1</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Bound 1</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Operator 2</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Bound 2</b>\r\n                                    </Col>\r\n                                </Row>\r\n                                {this.state.NumberOperations.map((value, index) => {\r\n                                    return (\r\n                                        <Row>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.NumberRating}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.NumberOperator1}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.NumberBound1}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.NumberOperator2}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.NumberBound2}</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                                )}\r\n                            </div>\r\n                        ) : (row.ResponseWeightTypeName === \"Date\" || row.ResponseWeightTypeName === \"Year\") ? (\r\n                            <div>\r\n                                <Row>\r\n                                    <Col md=\"2\">\r\n                                        <b>Rating/Absolute Amount</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Operator 1</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Bound 1</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Operator 2</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Bound 2</b>\r\n                                    </Col>\r\n                                </Row>\r\n                                {this.state.DateOperations.map((value, index) => {\r\n                                    console.log(\"handleOnExpandddd123\", value);\r\n                                    return (\r\n                                        <Row>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.DateRating}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.DateOperator1}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.DateBound1}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.DateOperator2}</label>\r\n                                            </Col>\r\n                                            <Col md=\"2\">\r\n                                                <label>{value.DateBound2}</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                                )}\r\n                            </div>\r\n                        ) : (row.ResponseWeightTypeName === \"Text\") ? (\r\n                            <div>\r\n                                <Row>\r\n                                    <Col md=\"2\">\r\n                                        <b>Rating/Absolute Amount</b>\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <b>Operator</b>\r\n                                    </Col>\r\n                                    <Col md=\"3\">\r\n                                        <b>Text for Comparison</b>\r\n                                    </Col>\r\n                                </Row>\r\n                                <div>\r\n                                    {this.state.textOperations.map((value, index) => {\r\n                                        console.log(\"handleOnExpandddd123\", value);\r\n                                        return (\r\n                                            <Row>\r\n                                                <Col md=\"2\">\r\n                                                    <label>{value.TextRating}</label>\r\n                                                </Col>\r\n                                                <Col md=\"2\">\r\n                                                    <label>{value.TextOperator}</label>\r\n                                                </Col>\r\n                                                <Col md=\"3\">\r\n                                                    <label>{value.TextToCompare}</label>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        ) : (null)}\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n\r\n    toggleEdit = () => {\r\n        this.setState({ isEdit: false, isView: false, effectiveDate: moment().format('YYYY-MM-DD'), effectiveDateError: false });\r\n    }\r\n\r\n    toggleEditModel = () => {\r\n        this.setState({ isOpenForUpdate: false });\r\n    }\r\n\r\n    toggleDelete = () => {\r\n        this.setState({ isDelet: false })\r\n    }\r\n\r\n    addRowToArray(type) {\r\n        var i = this.state.textOperations.length;\r\n        if (type === 'Text') {\r\n            var textOperation = this.state.textOperations;\r\n            textOperation.push(this.state.TextArr);\r\n            this.setState({ textOperations: textOperation });\r\n        } else if (type === 'Number') {\r\n            var NumberOperation = this.state.NumberOperations;\r\n            NumberOperation.push(this.state.NumberArr);\r\n            this.setState({ NumberOperations: NumberOperation });\r\n        } else if (type === 'Date') {\r\n            var DateOperation = this.state.DateOperations;\r\n            DateOperation.push(this.state.DateArr);\r\n            this.setState({ DateOperations: DateOperation });\r\n        }\r\n    }\r\n\r\n    removeRowToArray(value, i) {\r\n        this.state.textOperations[i].isDeleted = true;\r\n        console.log(\"removeRowToNumberArray\", this.state.textOperations);\r\n        this.setState({ textOperations: this.state.textOperations });\r\n    }\r\n\r\n    removeRowToNumberArray(value, i) {\r\n        this.state.NumberOperations[i].isDeleted = true;\r\n        console.log(\"removeRowToNumberArray\", this.state.NumberOperations);\r\n        this.setState({ NumberOperations: this.state.NumberOperations });\r\n    }\r\n\r\n    removeRowToDateArray(value, i) {\r\n        this.state.DateOperations[i].isDeleted = true;\r\n        console.log(\"removeRowToNumberArray\", this.state.DateOperations);\r\n        this.setState({ DateOperations: this.state.DateOperations });\r\n    }\r\n\r\n    InputValidate = (name, PIndex) => evt => {\r\n        console.log(\"InputValidate\", name, PIndex, this.state.ResponseWeightTypeName);\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n        const NewTextDetails = this.state.textOperations.map((Package, index) => {\r\n            if (PIndex === index) {\r\n                if (name === \"TextRating\") {\r\n                    let invSpace, TextRatingErr;\r\n                    if (this.state.ResponseWeightTypeName === \"Rating\") {\r\n                        invSpace = CommonConfig.RegExp.percentageWithNegative;\r\n                    } else if (this.state.ResponseWeightTypeName === \"Absolute\") {\r\n                        invSpace = CommonConfig.RegExp.decimalWithNegative;\r\n                    }\r\n\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        TextRatingErr = false;\r\n                    } else {\r\n                        TextRatingErr = true;\r\n                    }\r\n                    return { ...Package, TextRating: evt.target.value, TextRatingError: TextRatingErr };\r\n                } else if (name === \"TextOperator\") {\r\n                    // let IsAllOtherOperatorValue;\r\n                    // if (evt.target.value === \"All Others\") {\r\n                    //     IsAllOtherOperatorValue = false;\r\n                    // } else {\r\n                    //     IsAllOtherOperatorValue = true;\r\n                    // }\r\n                    return { ...Package, TextOperator: evt.target.value };\r\n                }\r\n                else if (name === \"TextToCompare\") {\r\n                    let invSpace = CommonConfig.RegExp.nameWithoutSpace, TextRatingErr;\r\n                    // if (this.state.ResponseWeightTypeName === \"Rating\") {\r\n                    //     invSpace = CommonConfig.RegExp.allowAllWithSpace\r\n                    // }\r\n\r\n                    if (!invSpace.test(evt.target.value)) {\r\n                        TextRatingErr = true;\r\n                    }\r\n                    return { ...Package, TextToCompare: evt.target.value, TextToCompareError: TextRatingErr };\r\n                }\r\n            } else {\r\n                return { ...Package };\r\n            }\r\n        });\r\n        this.setState({ textOperations: NewTextDetails }, function () {\r\n        });\r\n    }\r\n\r\n    NumberInputValidate = (name, PIndex) => evt => {\r\n        console.log(name, PIndex);\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n        const NewTextDetails = this.state.NumberOperations.map((Package, index) => {\r\n            if (PIndex === index) {\r\n                if (name === \"NumberRating\") {\r\n                    let invSpace, NumberRatingErr;\r\n                    if (this.state.ResponseWeightTypeName === \"Rating\") {\r\n                        invSpace = CommonConfig.RegExp.percentageWithNegative;\r\n                    } else if (this.state.ResponseWeightTypeName === \"Absolute\") {\r\n                        invSpace = CommonConfig.RegExp.decimalWithNegative;\r\n                    }\r\n\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        NumberRatingErr = false;\r\n                    } else {\r\n                        NumberRatingErr = true;\r\n                    }\r\n                    return { ...Package, NumberRating: evt.target.value, NumberRatingError: NumberRatingErr };\r\n                }\r\n                else if (name === \"NumberOperator1\") {\r\n                    let IsAllOtherOperatorValue;\r\n                    if (evt.target.value === \"All Others\") {\r\n                        IsAllOtherOperatorValue = false;\r\n                    } else {\r\n                        IsAllOtherOperatorValue = true;\r\n                    }\r\n                    return { ...Package, NumberOperator1: evt.target.value, IsAllOtherOperator: IsAllOtherOperatorValue };\r\n                }\r\n\r\n                else if (name === \"NumberBound1\") {\r\n                    let invSpace, DateRatingErr;\r\n                    invSpace = CommonConfig.RegExp.number;\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        DateRatingErr = false;\r\n                    } else {\r\n                        DateRatingErr = true;\r\n                    }\r\n                    return { ...Package, NumberBound1: evt.target.value, NumberRatingError: DateRatingErr };\r\n                }\r\n\r\n                else if (name === \"NumberOperator2\") {\r\n                    console.log(\"evt.target.value\", evt.target.value);\r\n                    let IsOnlyOneOperatorValue;\r\n                    if (evt.target.value === \"One Operator Only\") {\r\n                        IsOnlyOneOperatorValue = false;\r\n                    } else {\r\n                        IsOnlyOneOperatorValue = true;\r\n                    }\r\n                    return { ...Package, NumberOperator2: evt.target.value, IsOnlyOneOperator: IsOnlyOneOperatorValue };\r\n                }\r\n\r\n                else if (name === \"NumberBound2\") {\r\n                    let invSpace, DateRatingErr;\r\n                    invSpace = CommonConfig.RegExp.number;\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        DateRatingErr = false;\r\n                    } else {\r\n                        DateRatingErr = true;\r\n                    }\r\n                    return { ...Package, NumberBound2: evt.target.value, NumberRatingError: DateRatingErr };\r\n                }\r\n            } else {\r\n                return { ...Package };\r\n            }\r\n        });\r\n        this.setState({ NumberOperations: NewTextDetails }, function () {\r\n        });\r\n    }\r\n\r\n    ListValueValidate = (name, PIndex) => evt => {\r\n        console.log(name, PIndex);\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n        const NewTextDetails = this.state.ListValue.map((Package, index) => {\r\n            console.log(\"ListValueindex\", index, PIndex === index);\r\n            if (PIndex === index) {\r\n                if (name === \"Rating\") {\r\n                    let invSpace, NumberRatingErr;\r\n                    if (this.state.ResponseWeightType === \"Rating\") {\r\n                        invSpace = CommonConfig.RegExp.percentageWithNegative;\r\n                    } else if (this.state.ResponseWeightType === \"Absolute\") {\r\n                        invSpace = CommonConfig.RegExp.decimalWithNegative;\r\n                    }\r\n\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        NumberRatingErr = false;\r\n                    } else {\r\n                        NumberRatingErr = true;\r\n                    }\r\n                    return { ...Package, Rating: evt.target.value, RatingError: NumberRatingErr };\r\n                }\r\n            } else {\r\n                return { ...Package };\r\n            }\r\n        });\r\n        this.setState({ ListValue: NewTextDetails }, function () {\r\n        });\r\n    }\r\n\r\n    DateInputValidate = (name, PIndex) => evt => {\r\n        console.log(name, PIndex);\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n        const NewTextDetails = this.state.DateOperations.map((Package, index) => {\r\n            if (PIndex === index) {\r\n                if (name === \"DateRating\") {\r\n                    let invSpace, DateRatingErr;\r\n                    if (this.state.ResponseWeightTypeName === \"Rating\") {\r\n                        invSpace = CommonConfig.RegExp.percentageWithNegative;\r\n                    } else if (this.state.ResponseWeightTypeName === \"Absolute\") {\r\n                        invSpace = CommonConfig.RegExp.decimalWithNegative;\r\n                    }\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        DateRatingErr = false;\r\n                    } else {\r\n                        DateRatingErr = true;\r\n                    }\r\n                    return { ...Package, DateRating: evt.target.value, DateRatingError: DateRatingErr };\r\n                }\r\n\r\n                else if (name === \"DateOperator1\") {\r\n                    let IsAllOtherOperatorValue;\r\n                    if (evt.target.value === \"All Others\") {\r\n                        IsAllOtherOperatorValue = false;\r\n                    } else {\r\n                        IsAllOtherOperatorValue = true;\r\n                    }\r\n                    return { ...Package, DateOperator1: evt.target.value, IsAllOtherOperator: IsAllOtherOperatorValue };\r\n                }\r\n\r\n                else if (name === \"DateBound1\") {\r\n                    let invSpace, DateRatingErr;\r\n                    invSpace = CommonConfig.RegExp.number;\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        DateRatingErr = false;\r\n                    } else {\r\n                        DateRatingErr = true;\r\n                    }\r\n                    return { ...Package, DateBound1: evt.target.value, DateRatingError: DateRatingErr };\r\n                }\r\n\r\n                else if (name === \"DateOperator2\") {\r\n                    let IsOnlyOneOperatorValue;\r\n                    if (evt.target.value === \"One Operator Only\") {\r\n                        IsOnlyOneOperatorValue = false;\r\n                    } else {\r\n                        IsOnlyOneOperatorValue = true;\r\n                    }\r\n                    return { ...Package, DateOperator2: evt.target.value, IsOnlyOneOperator: IsOnlyOneOperatorValue };\r\n                } else if (name === \"DateBound2\") {\r\n                    let invSpace, DateRatingErr;\r\n                    invSpace = CommonConfig.RegExp.number;\r\n                    if (invSpace.test(evt.target.value)) {\r\n                        DateRatingErr = false;\r\n                    } else {\r\n                        DateRatingErr = true;\r\n                    }\r\n                    return { ...Package, DateBound2: evt.target.value, DateRatingError: DateRatingErr };\r\n                }\r\n            } else {\r\n                return { ...Package };\r\n            }\r\n        });\r\n        this.setState({ DateOperations: NewTextDetails }, function () {\r\n        });\r\n    }\r\n\r\n    checked = (isChecked, value) => {\r\n        console.log(\"checked\", isChecked);\r\n        this.setState({ IsRateable: isChecked });\r\n    }\r\n\r\n    selectType(value, type) {\r\n        console.log(\"selectType\", value, type);\r\n\r\n        if (type === 'ResponseWeightType') {\r\n            if (value === '' || value === null || value === undefined) {\r\n                this.setState({ ResponseWeightTypeError: true, ResponseWeightType: value });\r\n                this.show(\"ResponseWeightType\", true, \"ResponseWeightTypeError\", \"Select valid type\");\r\n            } else {\r\n                const NewTextDetails = this.state.NumberOperations.map((Package, index) => {\r\n                    return { ...Package, NumberRating: 0.00 };\r\n                });\r\n                const NewTextDetailsForDate = this.state.DateOperations.map((Package, index) => {\r\n                    return { ...Package, DateRating: 0.00 };\r\n                });\r\n                const NewTextDetailsForList = this.state.ListValue.map((Package, index) => {\r\n                    return { ...Package, Rating: 0.00 };\r\n                });\r\n                this.setState({ NumberOperations: NewTextDetails, DateOperations: NewTextDetailsForDate, ListValue: NewTextDetailsForList })\r\n                this.setState({ ResponseWeightTypeError: false, ResponseWeightType: value });\r\n                this.show(\"ResponseWeightType\", false, \"ResponseWeightTypeError\", \"Select valid type\");\r\n            }\r\n        }\r\n\r\n        if (type === 'diaplayDate') {\r\n            this.setState({ diaplayDate: value })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'effectiveDate') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ effectiveDateError: true });\r\n                this.show(\"effectiveDate\", true, \"effectiveDateError\", \"Enter valid effective date\");\r\n            } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\r\n                this.setState({ effectiveDateError: true });\r\n                this.show(\"effectiveDate\", true, \"effectiveDate\", \"Please enter valid effective date\");\r\n            } else {\r\n                this.setState({ effectiveDateError: false, effectiveDate: e.target.value });\r\n                this.show(\"effectiveDate\", false, \"effectiveDateError\", \"\");\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'fromDate') {\r\n            this.setState({ fromDate: e.target.value });\r\n        }\r\n\r\n        if (e.target.name === 'ToDate') {\r\n            this.setState({ ToDate: e.target.value });\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        console.log(\"(field, condition, errorField, message)\", field, condition, errorField, message);\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    searchByDateAndDisplayMode() {\r\n        try {\r\n            var dataToSend = {\r\n                RiskQuestionId: this.props.match.params.Id,\r\n                fromDate: CommonConfig.isEmpty(this.state.fromDate) ? '' : this.state.fromDate,\r\n                ToDate: CommonConfig.isEmpty(this.state.ToDate) ? '' : this.state.ToDate,\r\n                diaplayDate: CommonConfig.isEmpty(this.state.diaplayDate) ? '' : this.state.diaplayDate,\r\n            }\r\n            api.post('api/getHistoryDates', dataToSend).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"getRiskQuestionHistory\", res.data);\r\n                    var newArr = [];\r\n                    for (var i = 0; i < res.data[0].length; i++) {\r\n                        newArr.push({\r\n                            QuestionCode: res.data[0][i].QuestionCode,\r\n                            RiskQuestion: res.data[0][i].RiskQuestion,\r\n                            QuestionGroup: res.data[0][i].QuestionGroup,\r\n                            ResponseWeightTypeName: res.data[0][i].ResponseType,\r\n                            StartDate: moment(res.data[0][i].StartDate).format('DD-MM-YYYY'),\r\n                            UpdatedOn: res.data[0][i].UpdatedOn,\r\n                            // RiskQuestionResponseWeightageHistoryId: res.data[0][i].RiskQuestionResponseWeightageHistoryId,\r\n                            IsRateable: res.data[0][i].IsRateable.data[0] === 0 ? 'No' : 'Yes',\r\n                            QuestionCategoryName: res.data[0][i].QuestionCategory,\r\n                            ResponseWeightType: res.data[0][i].ResponseWeightType,\r\n                            Qualifier: res.data[0][i].Qualifier,\r\n                            isCurrent: res.data[0][i].IsCurrent,\r\n                        })\r\n                        this.setState({ QuestionCode: res.data[0][i].QuestionCode });\r\n                    }\r\n                    console.log(\"getRiskQuestionHistory\", newArr);\r\n                    this.setState({ products: newArr });\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(\"getRiskQuestionHistoryErr\", error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>RiskQuestion History</h1>\r\n                </div>\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Row>\r\n                        <Col md=\"1\" style={{ padding: 0, marginLeft: 15 }}>\r\n                            <b>Question Code</b>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <label>{this.state.QuestionCode}</label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"1\" style={{ padding: 0, marginLeft: 20 }}>\r\n                            <b>Effective Date</b>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Input type=\"date\" name=\"fromDate\" id=\"fromDate\" onChange={(e) => this.handleChange(e)} value={this.state.fromDate} />\r\n                        </Col>\r\n                        <Col md=\"1\" style={{ padding: 0, marginLeft: 20 }}>\r\n                            <b>To</b>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Input type=\"date\" name=\"ToDate\" id=\"ToDate\" onChange={(e) => this.handleChange(e)} value={this.state.ToDate} />\r\n                        </Col>\r\n                        <Col md=\"1\" style={{ padding: 0, marginLeft: 15 }}>\r\n                            <b>Display Mode</b>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Input type=\"select\" name=\"diaplayDate\" id=\"diaplayDate\" onChange={(e) => this.selectType(e.target.value, 'diaplayDate')} value={this.state.diaplayDate}>\r\n                                <option value=''>Select display date</option>\r\n                                {this.state.diaplayDateArr.map((type, i) => {\r\n                                    return (<option value={type.StringMapName}>{type.StringMapName}</option>)\r\n                                })\r\n                                }\r\n                            </Input>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <BTN color=\"success\" onClick={() => this.searchByDateAndDisplayMode()}><i class=\"fa fa-check\"></i>Search</BTN>{' '}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div style={{ marginTop: 30 }}>\r\n                    <BootstrapTable\r\n                        keyField='StartDate'\r\n                        data={this.state.products}\r\n                        columns={this.state.cols}\r\n                        rowEvents={this.rowEvents}\r\n                        expandRow={this.expandRow}\r\n                    />\r\n                </div>\r\n                <Modal isOpen={this.state.isEdit} toggle={() => this.toggleEdit('save')}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={() => this.toggleEdit('save')}>Risk Question</ModalHeader>\r\n\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col md=\"4\">\r\n                                <b>Question Category:</b> {this.state.tempData.QuestionCategoryName}\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <b>Question Group:</b> {this.state.tempData.QuestionGroup}\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <b>Question Code:</b> {this.state.tempData.QuestionCode}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{ marginTop: 10 }}>\r\n                            <Col>\r\n                                <span style={{ fontSize: 20 }}><b>Question:</b> {this.state.tempData.RiskQuestion}</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: 10 }}>\r\n                            <Col>\r\n                                <b>Response Type:</b> {this.state.tempData.ResponseWeightTypeName}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: 10 }}>\r\n                            <Col md=\"2\">\r\n                                <b>Is Rateable?</b>\r\n                            </Col>\r\n                            <Col>\r\n                                <Input disabled={this.state.isView} type='checkbox' name='IsRateable' value='IsRateable' id='IsRateable' checked={(this.state.IsRateable)}\r\n                                    onClick={(e) => this.checked(e.target.checked)} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: 10 }}>\r\n                            <Col md=\"1\">\r\n                                <b>Type</b>\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <div className=\"input-box\">\r\n                                    <Input disabled={this.state.isView} type=\"select\" name=\"ResponseWeightType\" id=\"ResponseWeightType\" onChange={(e) => this.selectType(e.target.value, 'ResponseWeightType')} value={this.state.ResponseWeightType}>\r\n                                        <option value=''>Select Rating Type</option>\r\n                                        {this.state.systemEndorsementArr.map((type, i) => {\r\n                                            return (<option value={type.StringMapName}>{type.StringMapName}</option>)\r\n                                        })\r\n                                        }\r\n                                    </Input>\r\n                                    <em id=\"ResponseWeightTypeError\" className=\"error invalid-feedback\"></em>\r\n                                    {/* <em className=\"error invalid-feedback\" >Please enter mooring registration no</em> */}\r\n                                </div>\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <label>{this.state.effectivedate}</label>\r\n                            </Col>\r\n                            <Col md=\"3\">\r\n                                <Input disabled={this.state.isView} type=\"date\" name=\"effectiveDate\" id=\"effectiveDate\" onChange={(e) => this.handleChange(e)} value={this.state.effectiveDate}\r\n                                    min={moment().format('YYYY-MM-DD')}\r\n                                    max={moment().add(100, 'years').format('YYYY-MM-DD')}\r\n                                >\r\n                                </Input>\r\n                                <em id=\"effectiveDateError\" className=\"error invalid-feedback\"></em>\r\n                            </Col>\r\n                        </Row>\r\n                        <div>\r\n                            {(this.state.tempData.ResponseWeightTypeName === \"ListOfValues\") ?   /*<~~~~~~~~~~~LIST~~~~~~~~~~>*/\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col md=\"2\">\r\n                                            <b>{this.state.ResponseWeightTypeName}</b>\r\n                                        </Col>\r\n                                        <Col md=\"3\">\r\n                                            <b>Response</b>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {this.state.ListValue.map((value, index) => {\r\n                                        return (\r\n                                            <Row>\r\n                                                <Col md=\"2\">\r\n                                                    {(this.state.IsRateable) ?\r\n                                                        <div>\r\n                                                            <Input disabled={this.state.isView} type=\"text\" name=\"Rating\" id=\"Rating\" value={value.Rating} onChange={this.ListValueValidate('Rating', index)}></Input>\r\n                                                            {(value.RatingError) ?\r\n                                                                <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\r\n                                                                : (null)}\r\n                                                        </div>\r\n                                                        : (null)}\r\n                                                </Col>\r\n                                                <Col md=\"10\">\r\n                                                    <b>{value.Response}</b>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n\r\n                                : (this.state.tempData.ResponseWeightTypeName === \"YesNo\") ?   /*<~~~~~~~~~~~YESNO~~~~~~~~~~>*/\r\n                                    <div>\r\n                                        <Row>\r\n                                            <Col md=\"2\">\r\n                                                <b>{this.state.ResponseWeightTypeName}</b>\r\n                                            </Col>\r\n                                            <Col md=\"3\">\r\n                                                <b>Response</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {this.state.ListValue.map((value, index) => {\r\n                                            return (\r\n                                                <Row>\r\n                                                    <Col md=\"2\">\r\n                                                        {(this.state.IsRateable) ?\r\n                                                            <div>\r\n                                                                <Input disabled={this.state.isView} type=\"text\" name=\"Rating\" id=\"Rating\" value={value.Rating} onChange={this.ListValueValidate('Rating', index)}></Input>\r\n                                                                {(value.RatingError) ?\r\n                                                                    <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\r\n                                                                    : (null)}\r\n                                                            </div>\r\n                                                            : (null)}\r\n                                                    </Col>\r\n                                                    <Col md=\"3\">\r\n                                                        <b>{value.Response}</b>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            )\r\n                                        }\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    : (this.state.tempData.ResponseWeightTypeName === \"Number\" || this.state.tempData.ResponseWeightTypeName === \"Percentage\" || this.state.tempData.ResponseWeightTypeName === \"Amount\") ?   /*<~~~~~~~~~~~NUMBER~~~~~~~~~~>*/\r\n                                        <div>\r\n                                            <Row>\r\n                                                <Col md=\"2\">\r\n                                                    <b>{this.state.ResponseWeightTypeName}</b>\r\n                                                </Col>\r\n                                                <Col md=\"2\">\r\n                                                    <b>Operator 1</b>\r\n                                                </Col>\r\n                                                <Col md=\"2\">\r\n                                                    <b>Bound 1</b>\r\n                                                </Col>\r\n                                                <Col md=\"2\">\r\n                                                    <b>Operator 2</b>\r\n                                                </Col>\r\n                                                <Col md=\"2\">\r\n                                                    <b>Bound 2</b>\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                            <div>\r\n                                                {this.state.NumberOperations.map((value, index) => {\r\n                                                    console.log(\"NumberOperations\", value);\r\n                                                    return (\r\n                                                        <div>\r\n                                                            {(value.isDeleted == true) ? (null) : (\r\n                                                                <Row>\r\n                                                                    <Col md=\"2\">\r\n                                                                        {(this.state.IsRateable) ?\r\n                                                                            <div className=\"input-box\">\r\n                                                                                <Row>\r\n                                                                                    <Col>\r\n                                                                                        <Input type=\"text\" name=\"NumberRating\" value={value.NumberRating} id=\"NumberRating\" onChange={this.NumberInputValidate('NumberRating', index)} />\r\n                                                                                        {(value.NumberRatingError) ?\r\n                                                                                            <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\r\n                                                                                            : (null)}\r\n                                                                                    </Col>\r\n                                                                                </Row>\r\n                                                                            </div>\r\n                                                                            : (null)}\r\n                                                                    </Col>\r\n                                                                    <Col md=\"2\">\r\n                                                                        <div className=\"input-box\">\r\n                                                                            <Input disabled={this.state.isView} type=\"select\" name=\"NumberOperator1\" onChange={this.NumberInputValidate('NumberOperator1', index)} value={value.NumberOperator1}>\r\n                                                                                <option value=''>Select Rating Type</option>\r\n                                                                                {this.state.NumberOperator1Arr.map((type, i) => {\r\n                                                                                    return (<option value={type.StringMapName}>{type.StringMapName}</option>)\r\n                                                                                })\r\n                                                                                }\r\n                                                                            </Input>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                    <Col md=\"2\">\r\n                                                                        {(value.IsAllOtherOperator) ?\r\n                                                                            <div className=\"input-box\">\r\n                                                                                <Input type=\"text\" name=\"NumberBound1\" value={value.NumberBound1} onChange={this.NumberInputValidate('NumberBound1', index)}></Input>\r\n                                                                            </div>\r\n                                                                            : (null)}\r\n                                                                    </Col>\r\n                                                                    <Col md=\"2\">\r\n                                                                        {/* {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ? */}\r\n                                                                        <div className=\"input-box\">\r\n                                                                            <Input disabled={this.state.isView} type=\"select\" name=\"NumberOperator2\" onChange={this.NumberInputValidate('NumberOperator2', index)} value={value.NumberOperator2}>\r\n                                                                                <option value=''>Select Rating Type</option>\r\n                                                                                {this.state.NumberOperator2Arr.map((type, i) => {\r\n                                                                                    return (<option value={type.value}>{type.label}</option>)\r\n                                                                                })\r\n                                                                                }\r\n                                                                            </Input>\r\n                                                                        </div>\r\n                                                                        {/* : (null)} */}\r\n                                                                    </Col>\r\n                                                                    <Col md=\"2\">\r\n                                                                        {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ?\r\n                                                                            <div className=\"input-box\">\r\n                                                                                <Input type=\"text\" name=\"NumberBound2\" value={value.NumberBound2} onChange={this.NumberInputValidate('NumberBound2', index)}></Input>\r\n                                                                            </div>\r\n                                                                            : (null)}\r\n                                                                    </Col>\r\n                                                                    {(value.IsAllOtherOperator) ?\r\n                                                                        <Col>\r\n                                                                            <a onClick={() => this.addRowToArray('Number')}>Add Row</a>\r\n                                                                            {(index !== 0) ?\r\n                                                                                <a onClick={() => this.removeRowToNumberArray(value, index)}>  Remove</a> : null\r\n                                                                            }\r\n                                                                        </Col>\r\n                                                                        : (null)}\r\n                                                                </Row>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        : (this.state.tempData.ResponseWeightTypeName === \"Date\" || this.state.tempData.ResponseWeightTypeName === \"Year\") ?   /*<~~~~~~~~~~~DATE~~~~~~~~~~>*/\r\n                                            <div>\r\n                                                <Row>\r\n                                                    <Col md=\"2\">\r\n                                                        <b>{this.state.ResponseWeightTypeName}</b>\r\n                                                    </Col>\r\n                                                    <Col md=\"2\">\r\n                                                        <b>Operator 1</b>\r\n                                                    </Col>\r\n                                                    <Col md=\"2\">\r\n                                                        <b>Bound 1</b>\r\n                                                    </Col>\r\n                                                    <Col md=\"2\">\r\n                                                        <b>Operator 2</b>\r\n                                                    </Col>\r\n                                                    <Col md=\"2\">\r\n                                                        <b>Bound 2</b>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <div>\r\n                                                    {this.state.DateOperations.map((value, index) => {\r\n                                                        return (\r\n                                                            <Row>\r\n                                                                <Col md=\"2\">\r\n                                                                    {(this.state.IsRateable) ?\r\n                                                                        <div className=\"input-box\">\r\n                                                                            <Input type=\"text\" name=\"DateRating\" id=\"DateRating\"\r\n                                                                                value={value.DateRating}\r\n                                                                                onChange={this.DateInputValidate('DateRating', index)} />\r\n                                                                            {(value.DateRatingError) ?\r\n                                                                                <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\r\n                                                                                : (null)}\r\n                                                                        </div>\r\n                                                                        : (null)}\r\n                                                                </Col>\r\n                                                                <Col md=\"2\">\r\n                                                                    <div className=\"input-box\">\r\n                                                                        <Input disabled={this.state.isView} type=\"select\" name=\"DateOperator1\" onChange={this.DateInputValidate('DateOperator1', index)} value={value.DateOperator1}>\r\n                                                                            <option value=''>Select Rating Type</option>\r\n                                                                            {this.state.DateOperator1Arr.map((type, i) => {\r\n                                                                                return (<option value={type.value}>{type.label}</option>)\r\n                                                                            })\r\n                                                                            }\r\n                                                                        </Input>\r\n                                                                    </div>\r\n                                                                </Col>\r\n\r\n                                                                <Col md=\"2\">\r\n                                                                    {(value.IsAllOtherOperator) ?\r\n                                                                        <div className=\"input-box\">\r\n                                                                            <Input type=\"text\" name=\"DateBound1\" value={value.DateBound1} onChange={this.DateInputValidate('DateBound1', index)}></Input>\r\n                                                                        </div>\r\n                                                                        : (null)}\r\n                                                                </Col>\r\n\r\n\r\n                                                                <Col md=\"2\">\r\n                                                                    {/* {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ? */}\r\n                                                                    <div className=\"input-box\">\r\n                                                                        <Input disabled={this.state.isView} type=\"select\" name=\"DateOperator2\" onChange={this.DateInputValidate('DateOperator2', index)} value={value.DateOperator2}>\r\n                                                                            <option value=''>Select Rating Type</option>\r\n                                                                            {this.state.DateOperator2Arr.map((type, i) => {\r\n                                                                                return (<option value={type.value}>{type.label}</option>)\r\n                                                                            })\r\n                                                                            }\r\n                                                                        </Input>\r\n                                                                    </div>\r\n                                                                    {/* : (null)} */}\r\n                                                                </Col>\r\n\r\n\r\n                                                                <Col md=\"2\">\r\n                                                                    {(value.IsAllOtherOperator && value.IsOnlyOneOperator) ?\r\n                                                                        <div className=\"input-box\">\r\n                                                                            <Input type=\"text\" name=\"DateBound2\" value={value.DateBound2} onChange={this.DateInputValidate('DateBound2', index)}></Input>\r\n                                                                        </div>\r\n                                                                        : (null)}\r\n                                                                </Col>\r\n                                                                {(value.IsAllOtherOperator) ?\r\n                                                                    <Col>\r\n                                                                        <a onClick={() => this.addRowToArray('Date')}>Add Row</a>\r\n                                                                        {(index !== 0) ?\r\n                                                                            <a onClick={() => this.removeRowToDateArray(value, index)}>  Remove</a> : null\r\n                                                                        }\r\n                                                                    </Col>\r\n                                                                    : (null)}\r\n                                                            </Row>\r\n                                                        )\r\n                                                    })}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            : (this.state.tempData.ResponseWeightTypeName === \"Text\") ?   /*<~~~~~~~~~~~TEXT~~~~~~~~~~>*/\r\n                                                <div>\r\n                                                    <Row>\r\n                                                        <Col md=\"2\">\r\n                                                            <b>{this.state.ResponseWeightTypeName}</b>\r\n                                                        </Col>\r\n                                                        <Col md=\"3\">\r\n                                                            <b>Operator</b>\r\n                                                        </Col>\r\n                                                        <Col md=\"3\">\r\n                                                            <b>Text for Comparison</b>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    <div>\r\n                                                        {this.state.textOperations.map((value, index) => {\r\n                                                            return (\r\n                                                                <Row>\r\n                                                                    <Col md=\"2\">\r\n                                                                        {(this.state.IsRateable) ?\r\n                                                                            <div className=\"input-box\">\r\n                                                                                <Input type=\"text\" name=\"TextRating\" id=\"TextRating\" value={value.TextRating} onChange={this.InputValidate('TextRating', index)} />\r\n                                                                                {(value.TextRatingError) ?\r\n                                                                                    <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\r\n                                                                                    : (null)}\r\n                                                                            </div>\r\n                                                                            : (null)}\r\n                                                                    </Col>\r\n                                                                    <Col md=\"3\">\r\n                                                                        <div className=\"input-box\">\r\n                                                                            <Input type=\"select\" name=\"systemEndorsementText\" onChange={this.InputValidate('TextOperator', index)} value={value.TextOperator}>\r\n                                                                                <option value=''>Select Rating Type</option>\r\n                                                                                {this.state.systemEndorsementTextArr.map((type, i) => {\r\n                                                                                    return (<option value={type.value}>{type.label}</option>)\r\n                                                                                })\r\n                                                                                }\r\n                                                                            </Input>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                    <Col md=\"3\">\r\n                                                                        <div className=\"input-box\">\r\n                                                                            <Input type=\"text\" name=\"TextToCompare\" id=\"TextToCompare\" value={value.TextToCompare} onChange={this.InputValidate('TextToCompare', index)} />\r\n                                                                            {(value.TextToCompareError) ?\r\n                                                                                <em style={{ display: \"block\" }} className=\"error invalid-feedback\"> Please enter valid input </em>\r\n                                                                                : (null)}\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <a onClick={() => this.addRowToArray('Text')}>Add Row</a>\r\n                                                                        {(index !== 0) ?\r\n                                                                            <a onClick={() => this.removeRowToArray(value, index)}>  Remove</a> : null\r\n                                                                        }\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            )\r\n                                                        })}\r\n                                                    </div>\r\n                                                </div>\r\n                                                : (null)\r\n                            }\r\n                        </div>\r\n                    </ModalBody>\r\n\r\n\r\n                    < ModalFooter >\r\n                        {(this.state.isView) ? (\r\n                            null\r\n                        ) : (\r\n                                <div>\r\n                                    <BTN color=\"success\" onClick={() => this.updateQuestion()}><i class=\"fa fa-check\"></i> Update</BTN>\r\n                                    <BTN style={{ marginLeft: 10 }} color=\"primary\" onClick={() => this.toggleEdit('save')}><i class=\"fa fa-close\"></i> Cancel</BTN>\r\n                                </div>\r\n                            )}\r\n                    </ModalFooter >\r\n                </Modal >\r\n\r\n                <Modal isOpen={this.state.isOpenForUpdate} toggle={() => this.toggleEditModel('save')}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={() => this.toggleEditModel('save')}>Risk Question</ModalHeader>\r\n\r\n                    <ModalBody>\r\n                        <label>Values for this date {moment(this.state.effectiveDate).format('DD-MM-YYYY')} is already added for {this.state.tempData.RiskQuestion}, are you sure you want to update this record ?</label>\r\n                    </ModalBody>\r\n\r\n                    < ModalFooter >\r\n                        <BTN color=\"success\" onClick={() => this.updateQuestionModal()}><i class=\"fa fa-check\"></i> Yes</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={() => this.toggleEditModel('save')}><i class=\"fa fa-close\"></i> No</BTN>\r\n                    </ModalFooter >\r\n                </Modal >\r\n\r\n                <Modal isOpen={this.state.isDelet} toggle={() => this.toggleDelete('save')}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={() => this.toggleDelete('save')}>Risk Question</ModalHeader>\r\n\r\n                    <ModalBody>\r\n                        <label>Are you sure want to delete this records ?</label>\r\n                    </ModalBody>\r\n\r\n                    < ModalFooter >\r\n                        <BTN color=\"success\" onClick={() => this.deleteModal(this.state.newVar)}><i class=\"fa fa-check\"></i> Yes</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={() => this.toggleDelete('save')}><i class=\"fa fa-close\"></i> No</BTN>\r\n                    </ModalFooter >\r\n                </Modal >\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default RiskQuestionHistory;"]},"metadata":{},"sourceType":"module"}