{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/VesselClass/VesselClassHistory.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN, InputGroup } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport { CommonConfig } from '../../../utils/constants';\nimport moment from 'moment';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport APIConstant from '../../../utils/constants';\n\nclass VesselClassHistory extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      t\n    } = props;\n    let columns = [{\n      field: \"vesselClassCode\",\n      header: \"ClassID\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"vesselClassName\",\n      header: \"ClassName\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"vesselTypeCount\",\n      header: \"NoofTypes\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"adminFee\",\n      header: \"AdminFee\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"currency\",\n      header: \"Currency\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"sortOrder\",\n      header: \"SortOrder\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      field: \"effective_date\",\n      header: \"Effective Date\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    } // { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 7 }\n    ];\n    this.state = {\n      toggleModal: false,\n      vesselClassList: [],\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      vesselClassId: '',\n      vesselClassCode: '',\n      vesselClassName: '',\n      vesselClassNameError: true,\n      adminFee: '',\n      adminFeeError: true,\n      currency: 'Euro',\n      currencyError: false,\n      currencyList: [],\n      effectivedate: 'Effective Date',\n      effectiveDate: '',\n      effectiveDateError: true,\n      sortOrder: '',\n      cols: columns,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      selectedPage: 0,\n      str: '',\n      globalFilter: null,\n      heading: 'Add',\n      buttonName: 'Save',\n      toastName: 'Saved',\n      primary: false,\n      toggleModal: false,\n      SortOrderInc: \"\",\n      isVessel: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this); // this.actionTemplate = this.actionTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('this.props', this.props);\n\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.getVesselClassHistoryList(this.props.match.params.Id);\n    }\n  }\n\n  getVesselClassHistoryList(Id) {\n    var dataToSent = {\n      VesselClassId: Id\n    };\n    api.post('api/getVesselClassHistoryList', dataToSent).then(res => {\n      console.log('getVesselClassHistoryList', res);\n      var formattedArr = [];\n\n      for (var i = 0; i < res.data.length; i++) {\n        formattedArr.push({\n          vesselClassId: res.data[i].VesselClassId,\n          vesselClassCode: res.data[i].VesselClassCode,\n          vesselClassName: res.data[i].VesselClassName,\n          vesselTypeCount: res.data[i].VesselTypeCount,\n          adminFee: res.data[i].AdminFee,\n          currency: res.data[i].Currency,\n          sortOrder: res.data[i].SortOrder,\n          effective_date: moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker),\n          isVessel: true\n        });\n      }\n\n      console.log('formattedArr', formattedArr);\n      this.setState({\n        vesselClassList: formattedArr\n      });\n    });\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Vessel Class History\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.vesselClassList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.vesselClassList.length,\n      exportFilename: t(\"masterVesselClass:Export_File\"),\n      currentPageReportTemplate: this.state.str,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: t(\"translation:NoRecordsMsg\"),\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(VesselClassHistory);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/VesselClass/VesselClassHistory.js"],"names":["React","Component","DataTable","Column","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","InputGroup","api","CommonConfig","moment","useTranslation","withTranslation","Trans","APIConstant","VesselClassHistory","constructor","props","t","columns","field","header","sortable","filter","filterMatchMode","id","state","toggleModal","vesselClassList","LanguageId","i18n","language","vesselClassId","vesselClassCode","vesselClassName","vesselClassNameError","adminFee","adminFeeError","currency","currencyError","currencyList","effectivedate","effectiveDate","effectiveDateError","sortOrder","cols","rowsPerPage","dataTableConfig","rowsPerPageOptions","selectedPage","str","globalFilter","heading","buttonName","toastName","primary","SortOrderInc","isVessel","colOptions","col","push","label","value","onColumnToggle","bind","componentDidMount","console","log","match","params","Object","keys","length","getVesselClassHistoryList","Id","dataToSent","VesselClassId","post","then","res","formattedArr","i","data","VesselClassCode","VesselClassName","vesselTypeCount","VesselTypeCount","AdminFee","Currency","SortOrder","effective_date","StartDate","format","dateFormat","forDatePicker","setState","event","valueInOrder","sort","x","y","show","condition","document","getElementById","className","render","map","body","el","dt","e","getPageString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN, InputGroup } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport moment from 'moment';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport APIConstant from '../../../utils/constants';\r\n\r\nclass VesselClassHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { t } = props;\r\n        let columns = [\r\n            { field: \"vesselClassCode\", header: \"ClassID\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"vesselClassName\", header: \"ClassName\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"vesselTypeCount\", header: \"NoofTypes\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { field: \"adminFee\", header: \"AdminFee\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"currency\", header: \"Currency\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { field: \"sortOrder\", header: \"SortOrder\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { field: \"effective_date\", header: \"Effective Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            // { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 7 }\r\n        ];\r\n\r\n        this.state = {\r\n            toggleModal: false,\r\n            vesselClassList: [],\r\n\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n\r\n            vesselClassId: '',\r\n            vesselClassCode: '',\r\n\r\n            vesselClassName: '',\r\n            vesselClassNameError: true,\r\n\r\n            adminFee: '',\r\n            adminFeeError: true,\r\n\r\n            currency: 'Euro',\r\n            currencyError: false,\r\n            currencyList: [],\r\n\r\n            effectivedate: 'Effective Date',\r\n            effectiveDate: '',\r\n            effectiveDateError: true,\r\n\r\n            sortOrder: '',\r\n\r\n            cols: columns,\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            selectedPage: 0,\r\n            str: '',\r\n            globalFilter: null,\r\n\r\n            heading: 'Add',\r\n            buttonName: 'Save',\r\n            toastName: 'Saved',\r\n            primary: false,\r\n            toggleModal: false,\r\n            SortOrderInc: \"\",\r\n            isVessel: false\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        // this.actionTemplate = this.actionTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('this.props',this.props);\r\n        \r\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n            this.getVesselClassHistoryList(this.props.match.params.Id)\r\n        }\r\n    }\r\n\r\n    getVesselClassHistoryList(Id) {\r\n        var dataToSent = {\r\n            VesselClassId: Id,\r\n        }\r\n        api.post('api/getVesselClassHistoryList', dataToSent).then(res => {\r\n            console.log('getVesselClassHistoryList', res);\r\n            var formattedArr = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                formattedArr.push({\r\n                    vesselClassId: res.data[i].VesselClassId,\r\n                    vesselClassCode: res.data[i].VesselClassCode,\r\n                    vesselClassName: res.data[i].VesselClassName,\r\n                    vesselTypeCount: res.data[i].VesselTypeCount,\r\n                    adminFee: res.data[i].AdminFee,\r\n                    currency: res.data[i].Currency,\r\n                    sortOrder: res.data[i].SortOrder,\r\n                    effective_date: moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker),\r\n                    isVessel: true\r\n                });\r\n            }\r\n            console.log('formattedArr',formattedArr);            \r\n            this.setState({ vesselClassList: formattedArr })\r\n        })\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    show(field, condition) {\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Vessel Class History</h1>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.vesselClassList}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.vesselClassList.length}\r\n                        exportFilename={t(\"masterVesselClass:Export_File\")}\r\n                        currentPageReportTemplate={this.state.str}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage={t(\"translation:NoRecordsMsg\")}\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollHeight=\"340px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation()(VesselClassHistory);"]},"metadata":{},"sourceType":"module"}