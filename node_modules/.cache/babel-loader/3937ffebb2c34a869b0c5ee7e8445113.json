{"ast":null,"code":"import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{toast}from'react-toastify';import'primereact/resources/themes/nova-light/theme.css';import'primereact/resources/primereact.min.css';import'primeicons/primeicons.css';import{Card,CardBody,Container,Modal,ModalBody,ModalFooter,ModalHeader,Col,Row,Input,Button}from'reactstrap';import api from'../../utils/apiClient';import{useTranslation,withTranslation,Trans}from'react-i18next';var Coverage=/*#__PURE__*/function(_Component){_inherits(Coverage,_Component);var _super=_createSuper(Coverage);function Coverage(){var _this;_classCallCheck(this,Coverage);_this=_super.call(this);_this.Save=function(CoverageAlready){var data={CoverageAlreadyList:CoverageAlready,PolicyId:_this.state.PolicyId};api.post('api/addPolicyCovarage',data).then(function(res){if(res.data.success){toast.success(res.data.message);_this.getPolicyAddedCoverage();_this.toggleSave();}else{}}).catch(function(err){});};_this.toggleDelete=function(){_this.setState({toggleDeleteModal:false,tempdata:[]});};_this.toggleSave=function(){_this.setState({toggleSaveModal:false,tempdata:[]});};_this.state={vesselTypeId:'',CoverageAvailable:[],CoverageAlreadyList:[],toggleSaveModal:false,toggleDeleteModal:false,tempdata:[],CurrencySymbol:''};return _this;}_createClass(Coverage,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.match.params.constructor===Object&&Object.keys(this.props.match.params).length!==0){this.setState({policyStatus:this.props.status,CurrencySymbol:this.props.CurrencySymbol});}console.log(\"componentDidMount\",this.props.CurrencySymbol);// this.getAddOnCoverage();\nthis.getPolicyVesselType(this.props.match.params.id);this.setState({PolicyId:this.props.match.params.id});}},{key:\"getPolicyVesselType\",value:function getPolicyVesselType(policyId){var _this2=this;var data={policyId:policyId};api.post('api/getPolicyHolderDetails',data).then(function(res){if(res.success){_this2.setState({vesselTypeId:res.data[0][0].VesselTypeId});_this2.getPolicyAddOnCoverage();}else{}}).catch(function(err){});}},{key:\"getPolicyAddOnCoverage\",value:function getPolicyAddOnCoverage(){var _this3=this;var data={VesselTypeId:this.state.vesselTypeId};api.post('api/getPolicyAddOnCoverage',data).then(function(res){if(res.success){var formattedData=[];for(var i=0;i<res.data.length;i++){formattedData.push({id:[i+1],AddOnCoverageId:res.data[i].AddOnCoverageId,policyOption:res.data[i].AddOnCoverageName,premium:res.data[i].AddOnCoveragePremiumAmount,feeAmount:res.data[i].AddOnCoverageFeeAmount,isAdded:false});}_this3.setState({CoverageAvailable:formattedData});_this3.getPolicyAddedCoverage();}else{}}).catch(function(err){});}},{key:\"getPolicyAddedCoverage\",value:function getPolicyAddedCoverage(){var _this4=this;var data={PolicyId:this.state.PolicyId};api.post('api/getPolicyAddedCoverage',data).then(function(res){if(res.success){var formattedData=[];for(var i=0;i<res.data.length;i++){formattedData.push({PolicyAddOnCoverageId:res.data[i].PolicyAddOnCoverageId,AddOnCoverageId:res.data[i].AddOnCoverageId,policyOption:res.data[i].AddOnCoverageName,premium:res.data[i].AddOnCoveragePremiumAmount,feeAmount:res.data[i].AddOnCoverageFeeAmount,IsDefault:res.data[i].IsDefault.data[0],isAdded:true});var CoverageAvailableArray=_this4.state.CoverageAvailable;var index2=CoverageAvailableArray.findIndex(function(x){return x.policyOption===res.data[i].AddOnCoverageName;});if(index2!=-1){CoverageAvailableArray[index2].isAdded=true;_this4.setState({CoverageAvailable:CoverageAvailableArray});}}_this4.setState({CoverageAlreadyList:formattedData});}else{}}).catch(function(err){});}// getAddOnCoverage() {\n//    api.post('api/getAddOnCoverage', {}).then(res => {\n//       if (res.success) {\n//          var formattedData = [];\n//          for (var i = 0; i < res.data.length; i++) {\n//             formattedData.push({\n//                id: [i + 1],\n//                AddOnCoverageId: res.data[i].AddOnCoverageId,\n//                policyOption: res.data[i].AddOnCoverageName,\n//                premium: res.data[i].AddOnCoveragePremiumAmount,\n//                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n//                isAdded: false,\n//             })\n//          }\n//          this.setState({ CoverageAvailable: formattedData });\n//          this.getAddedCoverage();\n//       } else {\n//       }\n//    }).catch(err => {\n//    });\n// }\n// getAddedCoverage() {\n//    let data = { PolicyId: this.props.match.params.id }; //'bef076c0-2ea5-11ea-a563-fa163eb9754c' }\n//    api.post('api/getAddedCoverage', data).then(res => {\n//       if (res.success) {\n//          var formattedData = [];\n//          for (var i = 0; i < res.data.length; i++) {\n//             formattedData.push({\n//                PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n//                AddOnCoverageId: res.data[i].AddOnCoverageId,\n//                policyOption: res.data[i].AddOnCoverageName,\n//                premium: res.data[i].AddOnCoveragePremiumAmount,\n//                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n//                // IsDefault: res.data[i].IsDefault.data[0],\n//                isAdded: true,\n//             })\n//             let CoverageAvailableArray = this.state.CoverageAvailable;\n//             let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n//             CoverageAvailableArray[index2].isAdded = true;\n//             this.setState({ CoverageAvailable: CoverageAvailableArray });\n//          }\n//          this.setState({ CoverageAlreadyList: formattedData });\n//       } else {\n//       }\n//    }).catch(err => {\n//    });\n// }\n},{key:\"addToListModal\",value:function addToListModal(data){this.setState({tempdata:data});this.saveModalOpen();}},{key:\"addToList\",value:function addToList(data,field){var CoverageAlreadyArray=this.state.CoverageAlreadyList;var index1=CoverageAlreadyArray.findIndex(function(x){return x.policyOption===data.policyOption;});if(index1>-1){CoverageAlreadyArray[index1].isAdded=true;this.setState({CoverageAlreadyList:CoverageAlreadyArray});}else{var CoverageAlready=[{PolicyAddOnCoverageId:null,AddOnCoverageId:data.AddOnCoverageId,policyOption:data.policyOption,premium:data.premium,feeAmount:data.FeeAmount,isAdded:true}];this.setState({CoverageAlreadyList:this.state.CoverageAlreadyList.concat(CoverageAlready)});}var CoverageAvailableArray=this.state.CoverageAvailable;var index2=CoverageAvailableArray.findIndex(function(x){return x.policyOption===data.policyOption;});CoverageAvailableArray[index2].isAdded=true;this.setState({CoverageAvailable:CoverageAvailableArray});this.Save(CoverageAlready);}},{key:\"deleteCoverageModal\",value:function deleteCoverageModal(data){this.setState({tempdata:data});this.deleteModalOpen();}},{key:\"deleteCoverage\",value:function deleteCoverage(data){if(data.PolicyAddOnCoverageId){var apiData={PolicyAddOnCoverageId:data.PolicyAddOnCoverageId};api.post('api/deleteAddedCoverage',{apiData:apiData}).then(function(res){if(res.success){// toast.success('Coverage Deleted Successfully');\n}else{}}).catch(function(err){});}var CoverageAvailableArray=this.state.CoverageAvailable;var index1=CoverageAvailableArray.findIndex(function(x){return x.policyOption===data.policyOption;});CoverageAvailableArray[index1].isAdded=false;var listIndex=this.state.CoverageAlreadyList.findIndex(function(x){return x.policyOption===data.policyOption;});this.state.CoverageAlreadyList.splice(listIndex,1);this.setState({CoverageAvailable:CoverageAvailableArray});toast.success('Coverage Deleted Successfully');this.setState({tempdata:data});this.toggleDelete();}},{key:\"deleteModalOpen\",value:function deleteModalOpen(){this.setState({toggleDeleteModal:!this.state.toggleDeleteModal});}},{key:\"saveModalOpen\",value:function saveModalOpen(){this.setState({toggleSaveModal:!this.state.toggleSaveModal});}},{key:\"goBack\",value:function goBack(){this.props.history.push('/PolicyDetails');}},{key:\"render\",value:function render(){var _this5=this;var _this$props=this.props,t=_this$props.t,i18n=_this$props.i18n;var SaveButton=t(\"buttons.Save\");var AddButton=t(\"buttons.Add\");var EditButton=t(\"buttons.Edit\");var DeleteButton=t(\"buttons.Delete\");var CloseButton=t(\"buttons.Close\");var BackButton=t(\"buttons.Back\");var UpdateButton=t(\"buttons.Update\");return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"span\",null,t(\"policyAddOnCoverage:AlreadyPurchased.title\")),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:10},className:\"input-box\"},/*#__PURE__*/React.createElement(\"table\",{className:\"added-detail-table\",style:{width:\"100%\"}},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AlreadyPurchased.PolicyOption\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AlreadyPurchased.Premium\"),\"(\",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\")\"),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\"),\"(\",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\")\"),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AlreadyPurchased.Total\"),\"(\",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\")\"),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AlreadyPurchased.Action\")))),/*#__PURE__*/React.createElement(\"tbody\",null,this.state.CoverageAlreadyList.map(function(ca,i){if(ca.isAdded){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,ca.policyOption),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'right'}},ca.premium),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'right'}},ca.feeAmount),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'right'}},Number(ca.premium)+Number(ca.feeAmount)),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'center'}},ca.IsDefault==0?/*#__PURE__*/React.createElement(Button,{title:DeleteButton,onClick:function onClick(){return _this5.deleteCoverageModal(ca,'CoverageAlready');},style:{marginLeft:5},color:\"danger\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-trash\"})):'Default'));}}))))))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(\"span\",null,t(\"policyAddOnCoverage:AvailableToPurchase.title\")),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:10},className:\"input-box\"},/*#__PURE__*/React.createElement(\"table\",{className:\"added-detail-table\",style:{width:\"100%\"}},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AvailableToPurchase.PolicyOption\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AvailableToPurchase.Premium\"),\"(\",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\")\"),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\"),\"(\",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\")\"),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AlreadyPurchased.Total\"),\"(\",/*#__PURE__*/React.createElement(\"i\",{className:this.props.CurrencySymbol}),\")\"),/*#__PURE__*/React.createElement(\"th\",null,t(\"policyAddOnCoverage:AvailableToPurchase.Action\")))),/*#__PURE__*/React.createElement(\"tbody\",null,this.state.CoverageAvailable.map(function(ca,i){if(!ca.isAdded){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,ca.policyOption),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'right'}},ca.premium),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'right'}},ca.feeAmount),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'right'}},Number(ca.premium)+Number(ca.feeAmount)),/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(Button,{title:AddButton,color:\"primary\",onClick:function onClick(){return _this5.addToListModal(ca,'CoverageAvailable');}},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-plus\"}))));}})))))))))))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.toggleSaveModal,toggle:this.toggleSave,className:'modal-lg '+this.props.className},/*#__PURE__*/React.createElement(ModalHeader,{toggle:this.toggleSave},t(\"policyAddOnCoverage:ConformationSaveModal.Header\")),/*#__PURE__*/React.createElement(ModalBody,null,\"Are you sure you want to Add \",/*#__PURE__*/React.createElement(\"b\",null,this.state.tempdata.policyOption),\" Coverage?\"),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(\"button\",{color:\"primary\",onClick:function onClick(){return _this5.addToList(_this5.state.tempdata);}},t(\"policyAddOnCoverage:ConformationSaveModal.Approval\")),/*#__PURE__*/React.createElement(\"button\",{color:\"secondary\",onClick:this.toggleSave},t(\"policyAddOnCoverage:ConformationSaveModal.Reject\")))),/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.toggleDeleteModal,toggle:this.toggleDelete,className:'modal-lg '+this.props.className},/*#__PURE__*/React.createElement(ModalHeader,{toggle:this.toggleDelete},t(\"policyAddOnCoverage:ConformationDeleteModal.Header\")),/*#__PURE__*/React.createElement(ModalBody,null,\"Do you want to delete \",/*#__PURE__*/React.createElement(\"b\",null,this.state.tempdata.policyOption),\" Coverage?\"),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(\"button\",{color:\"primary\",onClick:function onClick(){return _this5.deleteCoverage(_this5.state.tempdata);}},t(\"policyAddOnCoverage:ConformationDeleteModal.Approval\")),/*#__PURE__*/React.createElement(\"button\",{color:\"secondary\",onClick:this.toggleDelete},t(\"policyAddOnCoverage:ConformationDeleteModal.Reject\")))));}}]);return Coverage;}(Component);export default withTranslation()(Coverage);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Policy/Coverage.js"],"names":["React","Component","toast","Card","CardBody","Container","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","Button","api","useTranslation","withTranslation","Trans","Coverage","Save","CoverageAlready","data","CoverageAlreadyList","PolicyId","state","post","then","res","success","message","getPolicyAddedCoverage","toggleSave","catch","err","toggleDelete","setState","toggleDeleteModal","tempdata","toggleSaveModal","vesselTypeId","CoverageAvailable","CurrencySymbol","props","match","params","constructor","Object","keys","length","policyStatus","status","console","log","getPolicyVesselType","id","policyId","VesselTypeId","getPolicyAddOnCoverage","formattedData","i","push","AddOnCoverageId","policyOption","AddOnCoverageName","premium","AddOnCoveragePremiumAmount","feeAmount","AddOnCoverageFeeAmount","isAdded","PolicyAddOnCoverageId","IsDefault","CoverageAvailableArray","index2","findIndex","x","saveModalOpen","field","CoverageAlreadyArray","index1","FeeAmount","concat","deleteModalOpen","apiData","listIndex","splice","history","t","i18n","SaveButton","AddButton","EditButton","DeleteButton","CloseButton","BackButton","UpdateButton","marginTop","width","map","ca","textAlign","Number","deleteCoverageModal","marginLeft","addToListModal","className","addToList","deleteCoverage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Card, CardBody, Container, Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button } from 'reactstrap';\nimport api from '../../utils/apiClient';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nclass Coverage extends Component {\n   constructor() {\n      super();\n      this.state = {\n         vesselTypeId: '',\n         CoverageAvailable: [],\n         CoverageAlreadyList: [],\n         toggleSaveModal: false,\n         toggleDeleteModal: false,\n         tempdata: [],\n         CurrencySymbol:'',\n      }\n   }\n\n   componentDidMount() {\n      if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n         this.setState({ policyStatus: this.props.status, CurrencySymbol: this.props.CurrencySymbol });\n      }\n      console.log(\"componentDidMount\", this.props.CurrencySymbol);\n      // this.getAddOnCoverage();\n      this.getPolicyVesselType(this.props.match.params.id);\n      this.setState({ PolicyId: this.props.match.params.id })\n   }\n\n   getPolicyVesselType(policyId) {\n      const data = { policyId: policyId };\n      api.post('api/getPolicyHolderDetails', data).then(res => {\n         if (res.success) {\n            this.setState({ vesselTypeId: res.data[0][0].VesselTypeId, });\n            this.getPolicyAddOnCoverage();\n         } else {\n         }\n      }).catch(err => {\n\n      });\n   }\n\n   getPolicyAddOnCoverage() {\n      let data = {\n         VesselTypeId: this.state.vesselTypeId\n      }\n\n      api.post('api/getPolicyAddOnCoverage', data).then(res => {\n        \n         if (res.success) {\n\n            var formattedData = [];\n            for (var i = 0; i < res.data.length; i++) {\n               formattedData.push({\n                  id: [i + 1],\n                  AddOnCoverageId: res.data[i].AddOnCoverageId,\n                  policyOption: res.data[i].AddOnCoverageName,\n                  premium: res.data[i].AddOnCoveragePremiumAmount,\n                  feeAmount: res.data[i].AddOnCoverageFeeAmount,\n                  isAdded: false,\n               })\n            }\n            this.setState({ CoverageAvailable: formattedData });\n            this.getPolicyAddedCoverage();\n         } else {\n         }\n      }).catch(err => {\n\n      });\n   }\n\n   getPolicyAddedCoverage() {\n      let data = {\n         PolicyId: this.state.PolicyId\n      }\n\n      api.post('api/getPolicyAddedCoverage', data).then(res => {\n         if (res.success) {\n\n            var formattedData = [];\n            for (var i = 0; i < res.data.length; i++) {\n\n               formattedData.push({\n                  PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n                  AddOnCoverageId: res.data[i].AddOnCoverageId,\n                  policyOption: res.data[i].AddOnCoverageName,\n                  premium: res.data[i].AddOnCoveragePremiumAmount,\n                  feeAmount: res.data[i].AddOnCoverageFeeAmount,\n                  IsDefault: res.data[i].IsDefault.data[0],\n                  isAdded: true,\n               })\n\n               let CoverageAvailableArray = this.state.CoverageAvailable;\n               let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n               if (index2 != -1) {\n                  CoverageAvailableArray[index2].isAdded = true;\n                  this.setState({ CoverageAvailable: CoverageAvailableArray });\n               }\n\n            }\n\n            this.setState({ CoverageAlreadyList: formattedData });\n\n         } else {\n         }\n      }).catch(err => {\n\n      });\n   }\n\n   // getAddOnCoverage() {\n   //    api.post('api/getAddOnCoverage', {}).then(res => {\n   //       if (res.success) {\n   //          var formattedData = [];\n   //          for (var i = 0; i < res.data.length; i++) {\n   //             formattedData.push({\n   //                id: [i + 1],\n   //                AddOnCoverageId: res.data[i].AddOnCoverageId,\n   //                policyOption: res.data[i].AddOnCoverageName,\n   //                premium: res.data[i].AddOnCoveragePremiumAmount,\n   //                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n   //                isAdded: false,\n   //             })\n   //          }\n   //          this.setState({ CoverageAvailable: formattedData });\n   //          this.getAddedCoverage();\n   //       } else {\n\n   //       }\n   //    }).catch(err => {\n\n   //    });\n   // }\n\n   // getAddedCoverage() {\n   //    let data = { PolicyId: this.props.match.params.id }; //'bef076c0-2ea5-11ea-a563-fa163eb9754c' }\n   //    api.post('api/getAddedCoverage', data).then(res => {\n   //       if (res.success) {\n   //          var formattedData = [];\n   //          for (var i = 0; i < res.data.length; i++) {\n\n   //             formattedData.push({\n   //                PolicyAddOnCoverageId: res.data[i].PolicyAddOnCoverageId,\n   //                AddOnCoverageId: res.data[i].AddOnCoverageId,\n   //                policyOption: res.data[i].AddOnCoverageName,\n   //                premium: res.data[i].AddOnCoveragePremiumAmount,\n   //                feeAmount: res.data[i].AddOnCoverageFeeAmount,\n   //                // IsDefault: res.data[i].IsDefault.data[0],\n   //                isAdded: true,\n   //             })\n\n   //             let CoverageAvailableArray = this.state.CoverageAvailable;\n   //             let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === res.data[i].AddOnCoverageName);\n\n   //             CoverageAvailableArray[index2].isAdded = true;\n   //             this.setState({ CoverageAvailable: CoverageAvailableArray });\n   //          }\n   //          this.setState({ CoverageAlreadyList: formattedData });\n\n   //       } else {\n\n   //       }\n   //    }).catch(err => {\n\n   //    });\n   // }\n\n   addToListModal(data) {\n      this.setState({ tempdata: data })\n      this.saveModalOpen();\n   }\n\n   addToList(data, field) {\n      let CoverageAlreadyArray = this.state.CoverageAlreadyList;\n      let index1 = CoverageAlreadyArray.findIndex(x => x.policyOption === data.policyOption);\n      if (index1 > -1) {\n         CoverageAlreadyArray[index1].isAdded = true;\n         this.setState({ CoverageAlreadyList: CoverageAlreadyArray })\n      } else {\n         var CoverageAlready = [\n            {\n               PolicyAddOnCoverageId: null,\n               AddOnCoverageId: data.AddOnCoverageId,\n               policyOption: data.policyOption,\n               premium: data.premium,\n               feeAmount: data.FeeAmount,\n               isAdded: true,\n            }\n         ];\n\n         this.setState({ CoverageAlreadyList: this.state.CoverageAlreadyList.concat(CoverageAlready) });\n      }\n      let CoverageAvailableArray = this.state.CoverageAvailable;\n      let index2 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n      CoverageAvailableArray[index2].isAdded = true;\n      this.setState({ CoverageAvailable: CoverageAvailableArray });\n      this.Save(CoverageAlready);\n   }\n\n   Save = (CoverageAlready) => {\n      let data = {\n         CoverageAlreadyList: CoverageAlready,\n         PolicyId: this.state.PolicyId,\n      }\n      api.post('api/addPolicyCovarage', data).then(res => {\n         if (res.data.success) {\n            toast.success(res.data.message);\n            this.getPolicyAddedCoverage();\n            this.toggleSave();\n         } else {\n\n         }\n      }).catch(err => {\n      });\n   }\n\n   deleteCoverageModal(data) {\n      this.setState({ tempdata: data })\n      this.deleteModalOpen();\n   }\n\n   deleteCoverage(data) {\n      if (data.PolicyAddOnCoverageId) {\n         let apiData = { PolicyAddOnCoverageId: data.PolicyAddOnCoverageId }\n         api.post('api/deleteAddedCoverage', { apiData }).then(res => {\n            if (res.success) {\n               // toast.success('Coverage Deleted Successfully');\n            } else {\n\n            }\n         }).catch(err => {\n\n         });\n      }\n      let CoverageAvailableArray = this.state.CoverageAvailable;\n      let index1 = CoverageAvailableArray.findIndex(x => x.policyOption === data.policyOption);\n      CoverageAvailableArray[index1].isAdded = false;\n\n      let listIndex = this.state.CoverageAlreadyList.findIndex(x => x.policyOption === data.policyOption);\n      this.state.CoverageAlreadyList.splice(listIndex, 1);\n\n      this.setState({ CoverageAvailable: CoverageAvailableArray });\n      toast.success('Coverage Deleted Successfully');\n      this.setState({ tempdata: data })\n      this.toggleDelete();\n   }\n\n   deleteModalOpen() {\n      this.setState({ toggleDeleteModal: !this.state.toggleDeleteModal });\n   }\n\n   toggleDelete = () => {\n      this.setState({ toggleDeleteModal: false, tempdata: [] });\n   }\n\n   saveModalOpen() {\n      this.setState({ toggleSaveModal: !this.state.toggleSaveModal });\n   }\n\n   toggleSave = () => {\n      this.setState({ toggleSaveModal: false, tempdata: [] });\n   }\n\n   goBack() {\n      this.props.history.push('/PolicyDetails');\n   }\n\n   render() {\n      const { t, i18n } = this.props;\n      const SaveButton = t(\"buttons.Save\");\n      const AddButton = t(\"buttons.Add\");\n      const EditButton = t(\"buttons.Edit\");\n      const DeleteButton = t(\"buttons.Delete\");\n      const CloseButton = t(\"buttons.Close\");\n      const BackButton = t(\"buttons.Back\");\n      const UpdateButton = t(\"buttons.Update\");\n      return (\n\n         <div>\n            <Container>\n               <Row>\n                  <Col md=\"6\">\n                     <span>{t(\"policyAddOnCoverage:AlreadyPurchased.title\")}</span>\n                     <Card>\n                        <CardBody>\n                           <div className=\"input-box\">\n                              <Row>\n                                 <Col md=\"12\">\n                                    <div style={{ marginTop: 10 }} className=\"input-box\">\n                                       <table className=\"added-detail-table\" style={{ width: \"100%\" }}>\n                                          <thead>\n                                             <tr>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.PolicyOption\")}</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Premium\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Total\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Action\")}</th>\n                                             </tr>\n                                          </thead>\n                                          <tbody>\n                                             {this.state.CoverageAlreadyList.map((ca, i) => {\n                                                if (ca.isAdded) {\n                                                   return (\n                                                      <tr>\n                                                         <td>{ca.policyOption}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.premium}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.feeAmount}</td>\n                                                         <td style={{ textAlign: 'right' }}>{Number(ca.premium) + Number(ca.feeAmount)}</td>\n                                                         <td style={{ textAlign: 'center' }}>\n                                                         {(ca.IsDefault == 0) ?\n                                                            <Button title={DeleteButton} onClick={() => this.deleteCoverageModal(ca, 'CoverageAlready')} style={{ marginLeft: 5 }} color=\"danger\">\n                                                               <i className=\"fa fa-trash\"></i>\n                                                            </Button>\n                                                         : 'Default'}\n                                                         </td>\n                                                      </tr>\n                                                   )\n                                                }\n                                             }\n                                             )}\n                                          </tbody>\n                                       </table>\n                                    </div>\n                                 </Col>\n                              </Row>\n                           </div>\n                        </CardBody>\n                     </Card>\n                  </Col>\n               </Row>\n               <Row>\n                  <Col md=\"6\">\n                     <span>{t(\"policyAddOnCoverage:AvailableToPurchase.title\")}</span>\n                     <Card>\n                        <CardBody>\n                           <div className=\"input-box\">\n                              <Row>\n                                 <Col md=\"12\">\n                                    <div style={{ marginTop: 10 }} className=\"input-box\">\n                                       <table className=\"added-detail-table\" style={{ width: \"100%\" }}>\n                                          <thead>\n                                             <tr>\n                                                <th>{t(\"policyAddOnCoverage:AvailableToPurchase.PolicyOption\")}</th>\n                                                <th>{t(\"policyAddOnCoverage:AvailableToPurchase.Premium\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.AdminFees\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AlreadyPurchased.Total\")}({<i className={this.props.CurrencySymbol}></i>})</th>\n                                                <th>{t(\"policyAddOnCoverage:AvailableToPurchase.Action\")}</th>\n                                             </tr>\n                                          </thead>\n                                          <tbody>\n\n                                             {this.state.CoverageAvailable.map((ca, i) => {\n                                                if (!ca.isAdded) {\n                                                   return (\n                                                      <tr>\n                                                         <td>{ca.policyOption}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.premium}</td>\n                                                         <td style={{ textAlign: 'right' }}>{ca.feeAmount}</td>\n                                                         <td style={{ textAlign: 'right' }}>{Number(ca.premium) + Number(ca.feeAmount)}</td>\n                                                         <td style={{ textAlign: 'center' }}>\n                                                            <Button title={AddButton} color=\"primary\" onClick={() => this.addToListModal(ca, 'CoverageAvailable')}>\n                                                               <i className=\"fa fa-plus\"></i>\n                                                            </Button>\n                                                         </td>\n                                                      </tr>\n                                                   )\n                                                }\n                                             }\n                                             )}\n                                          </tbody>\n                                       </table>\n                                    </div>\n                                 </Col>\n                              </Row>\n                           </div>\n                        </CardBody>\n                     </Card>\n                  </Col>\n               </Row>\n            </Container>\n\n            <Modal isOpen={this.state.toggleSaveModal} toggle={this.toggleSave}\n               className={'modal-lg ' + this.props.className}>\n               <ModalHeader toggle={this.toggleSave}>{t(\"policyAddOnCoverage:ConformationSaveModal.Header\")}</ModalHeader>\n               <ModalBody>\n                  Are you sure you want to Add <b>{this.state.tempdata.policyOption}</b> Coverage?\n               </ModalBody>\n               <ModalFooter>\n                  <button color=\"primary\" onClick={() => this.addToList(this.state.tempdata)}>{t(\"policyAddOnCoverage:ConformationSaveModal.Approval\")}</button>\n                  <button color=\"secondary\" onClick={this.toggleSave}>{t(\"policyAddOnCoverage:ConformationSaveModal.Reject\")}</button>\n               </ModalFooter>\n            </Modal>\n\n            <Modal isOpen={this.state.toggleDeleteModal} toggle={this.toggleDelete}\n               className={'modal-lg ' + this.props.className}>\n               <ModalHeader toggle={this.toggleDelete}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Header\")}</ModalHeader>\n               <ModalBody>\n                  Do you want to delete <b>{this.state.tempdata.policyOption}</b> Coverage?\n               </ModalBody>\n               <ModalFooter>\n                  <button color=\"primary\" onClick={() => this.deleteCoverage(this.state.tempdata)}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Approval\")}</button>\n                  <button color=\"secondary\" onClick={this.toggleDelete}>{t(\"policyAddOnCoverage:ConformationDeleteModal.Reject\")}</button>\n               </ModalFooter>\n            </Modal>\n         </div>\n      )\n   }\n}\n\nexport default withTranslation()(Coverage);"]},"metadata":{},"sourceType":"module"}