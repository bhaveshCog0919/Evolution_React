{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/ViewContactDetails.js\";\nimport React from 'react';\nimport { Button, Col, Container, Input, Row, Modal, ModalBody, ModalHeader, ModalFooter, Collapse, Card, CardBody, CardHeader } from 'reactstrap';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { withTranslation } from 'react-i18next';\nimport api from '../../utils/apiClient';\nimport { apiBase } from '../../utils/config';\nimport APIConstant from '../../utils/constants';\nimport { CommonConfig } from '../../utils/constants';\nimport SidebarNav from '../SidebarNav/SidebarNav';\n\nconst userDefaultImg = require('../../assets/img/defaultProfile.png');\n\nclass ViewContactDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formatPhone = ph => {\n      let phone;\n\n      if (ph.CountryCode && ph.CountryCode !== '' && ph.CountryCode !== undefined && ph.CountryCode !== null) {\n        if (ph.AreaCode && ph.AreaCode !== '' && ph.AreaCode !== undefined && ph.AreaCode !== null) {\n          // phone = ph.CountryCode + ' ' + ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n          phone = ph.CountryCode + ' ' + ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n        } else {\n          // phone = ph.CountryCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n          phone = ph.CountryCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n        }\n      } else {\n        if (ph.AreaCode && ph.AreaCode !== '' && ph.AreaCode !== undefined && ph.AreaCode !== null) {\n          // phone = ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n          phone = ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n        } else {\n          // phone = CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n          phone = CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n        }\n      }\n\n      return phone;\n    };\n\n    this.toggleCustom = tab => {\n      const prevState = this.state.custom;\n      const state = prevState.map((x, index) => tab === index ? !x : false);\n      this.setState({\n        custom: state,\n        isExpand: false\n      });\n    };\n\n    this.toggleAll = toggleType => {\n      const prevState = this.state.custom;\n\n      if (toggleType === 'expand') {\n        const state = prevState.map((x, index) => x = true);\n        this.setState({\n          custom: state,\n          isExpand: true\n        });\n      } else {\n        const state = prevState.map((x, index) => x = false);\n        this.setState({\n          custom: state,\n          isExpand: false\n        });\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        showModal: false,\n        selectedRecord: '',\n        verificationArray: [],\n        note: '',\n        selected1: false,\n        selected2: false,\n        selected3: false\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.value === '' || e.target.value === null) {// this.show(e.target.name, true);\n      } else {\n        this.show(e.target.name, false);\n        this.setState({\n          note: e.target.value\n        });\n      }\n    };\n\n    this.selectType = (value, type, i) => {\n      if (value === '') {\n        this.show(type, true);\n        if (i === 0) this.setState({\n          selected1: false\n        });\n        if (i === 1) this.setState({\n          selected2: false\n        });\n        if (i === 2) this.setState({\n          selected3: false\n        });\n      } else if (value === 'Incorrect') {\n        if (i === 0) this.setState({\n          selected1: false\n        });\n        if (i === 1) this.setState({\n          selected2: false\n        });\n        if (i === 2) this.setState({\n          selected3: false\n        });\n      } else {\n        this.show(type, false);\n        if (i === 0) this.setState({\n          selected1: true\n        });\n        if (i === 1) this.setState({\n          selected2: true\n        });\n        if (i === 2) this.setState({\n          selected3: true\n        });\n      }\n    };\n\n    this.goToEdit = () => {\n      const {\n        t\n      } = this.props;\n\n      try {\n        let selectedValues = 0;\n        if (this.state.selected1) selectedValues++;\n        if (this.state.selected2) selectedValues++;\n        if (this.state.selected3) selectedValues++;\n        let checkValid = true;\n\n        if (this.state.entityType.toLowerCase() === 'person') {\n          if (selectedValues === 0 || selectedValues === 1) {\n            checkValid = false;\n            toast.error(t(\"contactDetails:ViewPage.SelectAnswerError\"));\n          } else if (selectedValues < 3 && CommonConfig.isEmpty(this.state.note)) {\n            checkValid = false;\n            toast.error(t(\"contactDetails:ViewPage.AddCommentError\"));\n          }\n        } else {\n          if (selectedValues === 0) {\n            checkValid = false;\n            toast.error(t(\"contactDetails:ViewPage.SelectAnswerError\"));\n          } else if (selectedValues < 2 && CommonConfig.isEmpty(this.state.note)) {\n            checkValid = false;\n            toast.error(t(\"contactDetails:ViewPage.AddCommentError\"));\n          }\n        } // if(selectedValues < 2){\n        //     toast.error(t(\"contactDetails:ViewPage.SelectAnswerError\"));\n        // }else if(selectedValues === 2 && this.state.note.trim() === ''){\n        //     toast.error(t(\"contactDetails:ViewPage.AddCommentError\"));\n        // }else if((selectedValues === 2 && this.state.note.trim() !== '') || (selectedValues === 3)){\n\n\n        if (checkValid) {\n          let id = this.state.selectedRecord.id;\n          let entityType = this.state.selectedRecord.entityType;\n          let data = {\n            verificationArray: this.state.verificationArray,\n            isCorrect: true,\n            note: this.state.note,\n            id: id\n          };\n          api.post('api/addVerificationDetails', data).then(res => {\n            if (res.success) {\n              if (res.data.success) {\n                this.reset();\n                toast.success(res.data.message);\n                this.props.history.push({\n                  pathname: '/editContactDetails/' + id + '/' + entityType,\n                  state: {\n                    id: id,\n                    entityType: entityType\n                  }\n                });\n              } else {}\n            } else {\n              toast.error('User verification failed');\n            }\n          }).catch(err => {\n            console.log(\"err\", err);\n          });\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    this.goBack = () => {\n      this.props.history.push({\n        pathname: '/contactList'\n      }); // this.props.history.push('/contactList');\n    };\n\n    this.state = {\n      id: '',\n      entityType: '',\n      selectedLanguage: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      isEdit: false,\n      isInternalStaff: false,\n      contactcode: 0,\n      selectedContactName: '',\n      isCompany: 'Individual',\n      contactPreference: '',\n      gender: '',\n      userImg: '',\n      companyname: '',\n      titleName: '',\n      forename: '',\n      surname: '',\n      salutation: '',\n      fullName: '',\n      passportno: '',\n      countryShown: '',\n      companyIdentifier: '',\n      businesstypeShown: '',\n      dob: '',\n      addrCountryShown: '',\n      addrline1: '',\n      addrline2: '',\n      addrline3: '',\n      cityShown: '',\n      stateShown: '',\n      postalcode: '',\n      phoneList: [],\n      emailList: [],\n      contactModes: [],\n      docdeliverySelected: '',\n      userNote: '',\n      bankcode: '',\n      commission: '',\n      custom: [false, false, false],\n      isExpand: false,\n      showModal: false,\n      personQuestion: [],\n      organizationQuestion: [],\n      arrayToDisplay: [],\n      selectedRecord: '',\n      verificationArray: [],\n      mobile: null,\n      note: '',\n      selected1: false,\n      selected2: false,\n      selected3: false\n    };\n  }\n\n  componentDidMount() {\n    this.getPersonQuestion();\n    this.getOrganizationQuestion();\n\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.getContactDetails(this.props.match.params.id, this.props.match.params.entityType);\n    }\n  }\n\n  getPersonQuestion() {\n    try {\n      const data = {\n        stringmaptype: 'PERSONQUESTION',\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            personQuestion: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getOrganizationQuestion() {\n    try {\n      const data = {\n        stringmaptype: 'ORGQUESTION',\n        orderby: 'SortOrder',\n        languageid: this.state.selectedLanguage\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            organizationQuestion: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  getContactDetails(id, entityType) {\n    try {\n      let data = {\n        id: id,\n        entityType: entityType\n      };\n      this.setState({\n        id: id,\n        entityType: entityType\n      });\n      console.log(\"data\", data);\n      api.post('api/getContactDetailsByTypeAndID', data).then(res => {\n        console.log(\"res\", res);\n\n        if (res.success) {\n          console.log(\"getContactDetailsByTypeAndID > \", res);\n          let contactModes = [];\n          let profileImage;\n          let phones = res.data.phoneData.sort((x, y) => {\n            return y.IsPreferred.data[0] - x.IsPreferred.data[0];\n          });\n          let emails = res.data.emailData.sort((x, y) => {\n            return y.IsPreferred.data[0] - x.IsPreferred.data[0];\n          });\n          let preferredPhone = phones.find(x => x.IsPreferred.data[0] === 1);\n          let phonestr = this.formatPhone(preferredPhone);\n\n          for (let k = 0; k < res.data.contactModes.length; k++) {\n            contactModes.push({\n              contactmodeid: res.data.contactModes[k].ContactModeId,\n              stringmapid: res.data.contactModes[k].ContactModeType,\n              stringmapname: res.data.contactModes[k].contactmodename,\n              isSelected: res.data.contactModes[k].Status === 'Active' ? true : false\n            });\n          }\n\n          if (res.data.personData[0].PicturePath !== '' && res.data.personData[0].PicturePath !== undefined && res.data.personData[0].PicturePath !== null) {\n            profileImage = apiBase + res.data.personData[0].PicturePath;\n          }\n\n          if (entityType.toString().toLowerCase() === 'person') {\n            this.setState({\n              contactcode: res.data.personData[0].ContactCode,\n              selectedContactName: res.data.personData[0].contactTypeName,\n              isInternalStaff: res.data.personData[0].ContactType == \"InternalStaff\" ? true : false,\n              isCompany: 'Individual',\n              userImg: profileImage,\n              companyname: res.data.personData[0].CompanyName,\n              titleName: res.data.personData[0].titleName,\n              forename: res.data.personData[0].Forename,\n              surname: res.data.personData[0].Surname,\n              salutation: res.data.personData[0].Salutation,\n              gender: res.data.personData[0].Gender,\n              passportno: res.data.personData[0].PassportNumber,\n              countryShown: CommonConfig.isEmpty(res.data.personData[0].passportcountryName) ? '' : res.data.personData[0].passportcountryName,\n              dob: CommonConfig.isEmpty(res.data.personData[0].DOB) || res.data.personData[0].DOB == '0000-00-00' || res.data.personData[0].DOB == \"Invalid date\" ? '' : moment(res.data.personData[0].DOB).format(CommonConfig.dateFormat.dateOnly),\n              businesstypeShown: CommonConfig.isEmpty(res.data.personData[0].businesstypeName) ? '' : res.data.personData[0].businesstypeName,\n              addrCountryShown: CommonConfig.isEmpty(res.data.addressData[0].countryname) ? '' : res.data.addressData[0].countryname,\n              addrline1: res.data.addressData[0].AddrLine1,\n              addrline2: res.data.addressData[0].AddrLine2,\n              addrline3: res.data.addressData[0].AddrLine3,\n              stateShown: CommonConfig.isEmpty(res.data.addressData[0].State) ? '' : res.data.addressData[0].State,\n              cityShown: res.data.addressData[0].City,\n              postalcode: res.data.addressData[0].PostalCode,\n              phoneList: phones,\n              emailList: emails,\n              contactPreference: res.data.personData[0].IsOkToContact.data[0] === 1 ? 'oktocontact' : 'donotcontact',\n              contactModes: contactModes,\n              docdeliverySelected: res.data.personData[0].DocumentDelivery,\n              userNote: res.data.personData[0].Note,\n              mobile: phonestr,\n              fullName: res.data.personData[0].titleName + ' ' + res.data.personData[0].Forename + ' ' + res.data.personData[0].Surname\n            });\n          } else if (entityType.toString().toLowerCase() === 'organization') {\n            this.setState({\n              contactcode: res.data.personData[0].ContactCode,\n              selectedContactName: res.data.personData[0].contactTypeName,\n              isInternalStaff: res.data.personData[0].ContactType == \"InternalStaff\" ? true : false,\n              isCompany: 'Company',\n              userImg: profileImage,\n              companyIdentifier: res.data.personData[0].CompanyIdentifier,\n              companyname: res.data.personData[0].OrganizationName,\n              businesstypeShown: CommonConfig.isEmpty(res.data.personData[0].businesstypeName) ? '' : res.data.personData[0].businesstypeName,\n              addrCountryShown: CommonConfig.isEmpty(res.data.addressData[0].countryname) ? '' : res.data.addressData[0].countryname,\n              addrline1: res.data.addressData[0].AddrLine1,\n              addrline2: res.data.addressData[0].AddrLine2,\n              addrline3: res.data.addressData[0].AddrLine3,\n              stateShown: res.data.addressData[0].statename !== undefined && res.data.addressData[0].statename !== null && res.data.addressData[0].statename !== '' ? res.data.addressData[0].statename : '',\n              cityShown: res.data.addressData[0].City,\n              postalcode: res.data.addressData[0].PostalCode,\n              phoneList: phones,\n              emailList: emails,\n              contactPreference: res.data.personData[0].IsOkToContact.data[0] === 1 ? 'oktocontact' : 'donotcontact',\n              contactModes: contactModes,\n              docdeliverySelected: res.data.personData[0].DocumentDelivery,\n              userNote: res.data.personData[0].Note,\n              mobile: phonestr,\n              fullName: res.data.personData[0].OrganizationName\n            });\n          } else {}\n        } else {\n          console.log(\"error in get data\");\n        }\n      }).catch(err => {\n        console.log(\"err\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  editContacts(state) {\n    // debugger;\n    if (this.state.selectedContactName == \"Client\") {\n      this.setState({\n        showModal: true,\n        selectedRecord: state,\n        arrayToDisplay: this.state.isCompany === 'Individual' ? this.state.personQuestion : this.state.organizationQuestion\n      });\n    } else {\n      let id = state.id;\n      let entityType = state.entityType;\n      this.props.history.push({\n        pathname: '/editContactDetails/' + id + '/' + entityType,\n        state: {\n          id: id,\n          entityType: entityType\n        }\n      });\n    } // old code \n    // if (this.state.isInternalStaff) {\n    //     let id = state.id;\n    //     let entityType = state.entityType;\n    //     this.props.history.push({\n    //         pathname: '/editContactDetails/' + id + '/' + entityType,\n    //         state: {\n    //             id: id,\n    //             entityType: entityType\n    //         }\n    //     });\n    // } else {\n    //     this.setState({\n    //         showModal: true, selectedRecord: state,\n    //         arrayToDisplay: (this.state.isCompany === 'Individual') ? this.state.personQuestion : this.state.organizationQuestion\n    //     });\n    // }\n\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    const EditButton = t(\"buttons.Edit\");\n    const BackButton = t(\"buttons.Back\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      style: {\n        marginRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 33\n      }\n    }, \"Contact# \", this.state.contactcode))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 25\n      }\n    }, this.state.fullName != \"\" ? /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      style: {\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SidebarNav, Object.assign({\n      contactEntityType: this.props.match.params.entityType,\n      contactEntityId: this.props.match.params.id,\n      contactName: this.state.fullName,\n      NavPage: \"User\",\n      NavID: this.props.match.params.id\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 37\n      }\n    }))) : null, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.userImg && this.state.userImg !== '' ? this.state.userImg : userDefaultImg,\n      alt: \"user_profile_image\",\n      width: \"100%\",\n      height: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 29\n      }\n    }, this.state.isCompany === 'Individual' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 53\n      }\n    }, this.state.titleName, \" \", this.state.forename, \" \", this.state.surname)), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 49\n      }\n    }, \"(\", this.state.selectedContactName, \")\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-phone\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 53\n      }\n    }), this.state.mobile), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-envelope\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 53\n      }\n    }), this.state.emailList[0] !== undefined ? this.state.emailList[0].Email : '')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 49\n      }\n    }, this.state.businesstypeShown)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 49\n      }\n    }, this.state.companyname)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 49\n      }\n    }, t(\"contactDetails:Gender\"), \": \", this.state.gender), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 53\n      }\n    }, t(\"contactDetails:DOB.label\"), \": \", this.state.dob), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 49\n      }\n    }, t(\"contactDetails:Salutation.label\"), \": \", this.state.salutation))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 53\n      }\n    }, this.state.companyname)), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 49\n      }\n    }, \"(\", this.state.selectedContactName, \")\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-phone\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 53\n      }\n    }), this.state.mobile), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        margin: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-envelope\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 53\n      }\n    }), this.state.emailList[0] !== undefined ? this.state.emailList[0].Email : '')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 49\n      }\n    }, this.state.businesstypeShown)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 49\n      }\n    }, this.state.companyIdentifier)))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginRight: 5\n      },\n      color: \"primary\",\n      onClick: () => this.editContacts(this.state),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 37\n      }\n    }), EditButton), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 37\n      }\n    }), BackButton))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      style: {\n        marginBottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      title: this.state.isExpand ? t(\"contactDetails:ViewPage.CollapseAll\") : t(\"contactDetails:ViewPage.ExpandAll\"),\n      onClick: this.state.isExpand ? () => this.toggleAll('collapse') : () => this.toggleAll('expand'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.isExpand ? \"fa fa-compress\" : \"fa fa-expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.toggleCustom(0),\n      \"aria-expanded\": this.state.custom[0],\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 49\n      }\n    }, t(\"contactDetails:ViewPage.ContactDetails\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom[0] ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom[0],\n      \"data-parent\": \"#accordion\",\n      id: \"collapseOne\",\n      \"aria-labelledby\": \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-phone-square\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 61\n      }\n    }, t(\"contactDetails:PhoneHeader\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 73\n      }\n    }, this.state.phoneList.map((ph, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 93\n        }\n      }, ph.phonetypeName)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 93\n        }\n      }, this.formatPhone(ph), ph.IsPreferred.data[0] === 1 ? /*#__PURE__*/React.createElement(\"i\", {\n        style: {\n          marginLeft: 10\n        },\n        title: t(\"contactDetails:PhonePrimary\"),\n        className: \"fa fa-check-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 102\n        }\n      }) : null)));\n    }))))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-envelope-square\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 61\n      }\n    }, t(\"contactDetails:EmailHeader\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"added-detail-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 73\n      }\n    }, this.state.emailList.map((email, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 93\n        }\n      }, email.EmailTypeName)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 93\n        }\n      }, email.Email, email.IsPreferred.data[0] === 1 ? /*#__PURE__*/React.createElement(\"i\", {\n        style: {\n          marginLeft: 10\n        },\n        title: t(\"contactDetails:EmailPrimary\"),\n        className: \"fa fa-check-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 102\n        }\n      }) : null)));\n    }))))))), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-map-marker\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 65\n      }\n    }, t(\"contactDetails:Address\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 69\n      }\n    }, this.state.addrline1, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 95\n      }\n    }), !CommonConfig.isEmpty(this.state.addrline2) && !CommonConfig.isEmpty(this.state.addrline3) ? (this.state.addrline2, this.state.addrline3) : !CommonConfig.isEmpty(this.state.addrline2) && CommonConfig.isEmpty(this.state.addrline3) ? this.state.addrline2 : CommonConfig.isEmpty(this.state.addrline2) && !CommonConfig.isEmpty(this.state.addrline3) ? this.state.addrline3 : null, CommonConfig.isEmpty(this.state.addrline2) && CommonConfig.isEmpty(this.state.addrline3) ? null : /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 84\n      }\n    }), this.state.cityShown, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 95\n      }\n    }), this.state.stateShown, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 96\n      }\n    }), this.state.addrCountryShown, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 103\n      }\n    }), this.state.postalcode))))), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 67\n      }\n    }, t(\"contactDetails:ContactPreference\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 61\n      }\n    }, this.state.contactPreference == 'oktocontact' ? t(\"contactDetails:OktoContact\") : t(\"contactDetails:DonotContact\")))), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 67\n      }\n    }, t(\"contactDetails:ContactMode\")))), this.state.contactModes.map((cm, i) => {\n      if (cm.isSelected) {\n        return (\n          /*#__PURE__*/\n          //   <div key={i}>\n          //     <p>{cm.stringmapname}</p> \n          //   </div>\n          React.createElement(Col, {\n            md: \"2\",\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 69\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 73\n            }\n          }, cm.stringmapname))\n        );\n      }\n    })), this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 67\n      }\n    }, t(\"contactDetails:DocumentDelivery.label\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 61\n      }\n    }, this.state.docdeliverySelected == 'both' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 70\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 73\n      }\n    }, t(\"contactDetails:DocumentDelivery.Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 73\n      }\n    }, t(\"contactDetails:DocumentDelivery.Post\"))) : this.state.docdeliverySelected == 'email' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 77\n      }\n    }, t(\"contactDetails:DocumentDelivery.Email\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 77\n      }\n    }, t(\"contactDetails:DocumentDelivery.Post\"))))))))), this.state.isCompany === 'Individual' ? this.state.isInternalStaff ? null : /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.toggleCustom(1),\n      \"aria-expanded\": this.state.custom[1],\n      \"aria-controls\": \"collapseTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 57\n      }\n    }, t(\"contactDetails:ViewPage.PassportDetails\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom[1] ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 61\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom[1],\n      \"data-parent\": \"#accordion\",\n      id: \"collapseTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 71\n      }\n    }, t(\"contactDetails:PassportNumber.label\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 65\n      }\n    }, this.state.passportno)), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 71\n      }\n    }, t(\"contactDetails:PassportCountry.label\")))), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 65\n      }\n    }, this.state.countryShown)))))) : null, CommonConfig.isEmpty(this.state.userNote) ? null : /*#__PURE__*/React.createElement(Card, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      id: \"headingThree\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      color: \"link\",\n      className: \"text-left m-0 p-0\",\n      onClick: () => this.toggleCustom(2),\n      \"aria-expanded\": this.state.custom[2],\n      \"aria-controls\": \"collapseThree\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 57\n      }\n    }, t(\"contactDetails:ViewPage.NoteDetails\"), /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        float: 'right'\n      },\n      className: this.state.custom[2] ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 61\n      }\n    })))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: this.state.custom[2],\n      \"data-parent\": \"#accordion\",\n      id: \"collapseThree\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 65\n      }\n    }, t(\"contactDetails:Notes.label\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 65\n      }\n    }, this.state.userNote)))))))))), /*#__PURE__*/React.createElement(Modal, {\n      toggle: () => this.reset(),\n      isOpen: this.state.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 25\n      }\n    }, t(\"contactDetails:ViewPage.ModalHeader\")), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 25\n      }\n    }, this.state.arrayToDisplay.map((que, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-box rc-box\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rc-inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 53\n        }\n      }, que.StringMapName)), /*#__PURE__*/React.createElement(Col, {\n        md: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 53\n        }\n      }, this.state.selectedRecord[que.StringMapKey.toLowerCase()])), /*#__PURE__*/React.createElement(Col, {\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: que.StringMapKey,\n        id: que.StringMapKey,\n        className: \"\",\n        onChange: e => this.selectType(e.target.value, e.target.name, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 57\n        }\n      }, t(\"contactDetails:ViewPage.OptionDefault\")), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Correct\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 57\n        }\n      }, t(\"contactDetails:ViewPage.OptionCorrect\")), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Incorrect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 57\n        }\n      }, t(\"contactDetails:ViewPage.OptionIncorrect\"))), /*#__PURE__*/React.createElement(\"em\", {\n        className: \"error invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 53\n        }\n      }, t(\"contactDetails:ViewPage.OptionError\"))))));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box rc-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rc-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 45\n      }\n    }, t(\"contactDetails:ViewPage.CommentLabel\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"note\",\n      type: \"textarea\",\n      id: \"note\",\n      className: \"\",\n      maxLength: \"500\",\n      value: this.state.note,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 45\n      }\n    }, t(\"contactDetails:ViewPage.CommentErrorBlank\"))))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 33\n      }\n    }), t(\"contactDetails:ViewPage.VerificationFailed\")), /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.goToEdit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 33\n      }\n    }), t(\"contactDetails:ViewPage.VerificationDone\"))))));\n  }\n\n}\n\nexport default withTranslation()(ViewContactDetails);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/ViewContactDetails.js"],"names":["React","Button","Col","Container","Input","Row","Modal","ModalBody","ModalHeader","ModalFooter","Collapse","Card","CardBody","CardHeader","moment","toast","withTranslation","api","apiBase","APIConstant","CommonConfig","SidebarNav","userDefaultImg","require","ViewContactDetails","Component","constructor","props","formatPhone","ph","phone","CountryCode","undefined","AreaCode","formatPhoneNumber","PhoneNumber","toggleCustom","tab","prevState","state","custom","map","x","index","setState","isExpand","toggleAll","toggleType","reset","showModal","selectedRecord","verificationArray","note","selected1","selected2","selected3","handleChange","e","target","name","value","show","selectType","type","i","goToEdit","t","selectedValues","checkValid","entityType","toLowerCase","error","isEmpty","id","data","isCorrect","post","then","res","success","message","history","push","pathname","catch","err","console","log","goBack","selectedLanguage","i18n","language","isEdit","isInternalStaff","contactcode","selectedContactName","isCompany","contactPreference","gender","userImg","companyname","titleName","forename","surname","salutation","fullName","passportno","countryShown","companyIdentifier","businesstypeShown","dob","addrCountryShown","addrline1","addrline2","addrline3","cityShown","stateShown","postalcode","phoneList","emailList","contactModes","docdeliverySelected","userNote","bankcode","commission","personQuestion","organizationQuestion","arrayToDisplay","mobile","componentDidMount","getPersonQuestion","getOrganizationQuestion","match","params","Object","keys","length","getContactDetails","stringmaptype","orderby","languageid","path","dropdownbycode","profileImage","phones","phoneData","sort","y","IsPreferred","emails","emailData","preferredPhone","find","phonestr","k","contactmodeid","ContactModeId","stringmapid","ContactModeType","stringmapname","contactmodename","isSelected","Status","personData","PicturePath","toString","ContactCode","contactTypeName","ContactType","CompanyName","Forename","Surname","Salutation","Gender","PassportNumber","passportcountryName","DOB","format","dateFormat","dateOnly","businesstypeName","addressData","countryname","AddrLine1","AddrLine2","AddrLine3","State","City","PostalCode","IsOkToContact","DocumentDelivery","Note","CompanyIdentifier","OrganizationName","statename","editContacts","field","condition","document","getElementById","className","render","EditButton","BackButton","marginRight","marginTop","marginBottom","margin","Email","textAlign","float","phonetypeName","marginLeft","email","EmailTypeName","cm","que","StringMapName","StringMapKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Button, Col, Container, Input, Row, Modal, ModalBody, ModalHeader, ModalFooter,\n    Collapse, Card, CardBody, CardHeader\n} from 'reactstrap';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { withTranslation } from 'react-i18next';\n\nimport api from '../../utils/apiClient';\nimport { apiBase } from '../../utils/config';\nimport APIConstant from '../../utils/constants';\nimport { CommonConfig } from '../../utils/constants';\nimport SidebarNav from '../SidebarNav/SidebarNav';\n\nconst userDefaultImg = require('../../assets/img/defaultProfile.png');\n\nclass ViewContactDetails extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: '',\n            entityType: '',\n            selectedLanguage: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\n            isEdit: false,\n            isInternalStaff: false,\n            contactcode: 0,\n            selectedContactName: '',\n            isCompany: 'Individual',\n            contactPreference: '',\n            gender: '',\n            userImg: '',\n            companyname: '',\n            titleName: '',\n            forename: '',\n            surname: '',\n            salutation: '',\n            fullName: '',\n\n            passportno: '',\n            countryShown: '',\n\n            companyIdentifier: '',\n\n            businesstypeShown: '',\n            dob: '',\n            addrCountryShown: '',\n            addrline1: '',\n            addrline2: '',\n            addrline3: '',\n            cityShown: '',\n            stateShown: '',\n            postalcode: '',\n\n            phoneList: [],\n            emailList: [],\n\n            contactModes: [],\n\n            docdeliverySelected: '',\n\n            userNote: '',\n            bankcode: '',\n            commission: '',\n\n            custom: [false, false, false],\n            isExpand: false,\n\n            showModal: false,\n            personQuestion: [],\n            organizationQuestion: [],\n\n            arrayToDisplay: [],\n            selectedRecord: '',\n            verificationArray: [],\n            mobile: null,\n            note: '',\n            selected1: false,\n            selected2: false,\n            selected3: false\n        }\n    }\n\n    componentDidMount() {\n        this.getPersonQuestion();\n        this.getOrganizationQuestion();\n\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n            this.getContactDetails(this.props.match.params.id, this.props.match.params.entityType);\n        }\n    }\n\n    getPersonQuestion() {\n        try {\n            const data = {\n                stringmaptype: 'PERSONQUESTION',\n                orderby: 'SortOrder',\n                languageid: this.state.selectedLanguage\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ personQuestion: res.data });\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"err\", error);\n        }\n    }\n\n    getOrganizationQuestion() {\n        try {\n            const data = {\n                stringmaptype: 'ORGQUESTION',\n                orderby: 'SortOrder',\n                languageid: this.state.selectedLanguage\n            };\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\n                if (res.success) {\n                    this.setState({ organizationQuestion: res.data });\n                } else {\n\n                }\n            }).catch(err => {\n                console.log(\"error\", err);\n            });\n        } catch (error) {\n            console.log(\"err\", error);\n        }\n    }\n\n    getContactDetails(id, entityType) {\n       \n        try {\n            let data = {\n                id: id,\n                entityType: entityType\n            }\n            this.setState({ id: id, entityType: entityType });\n            console.log(\"data\",data);\n            \n            api.post('api/getContactDetailsByTypeAndID', data).then(res => {\n                console.log(\"res\",res);\n                if (res.success) {\n                    console.log(\"getContactDetailsByTypeAndID > \", res);\n                    let contactModes = [];\n                    let profileImage;\n\n                    let phones = res.data.phoneData.sort((x, y) => {\n                        return y.IsPreferred.data[0] - x.IsPreferred.data[0]\n                    });\n\n                    let emails = res.data.emailData.sort((x, y) => {\n                        return y.IsPreferred.data[0] - x.IsPreferred.data[0]\n                    });\n\n                    let preferredPhone = phones.find(x => x.IsPreferred.data[0] === 1);\n                    let phonestr = this.formatPhone(preferredPhone);\n\n                    for (let k = 0; k < res.data.contactModes.length; k++) {\n                        contactModes.push({\n                            contactmodeid: res.data.contactModes[k].ContactModeId,\n                            stringmapid: res.data.contactModes[k].ContactModeType,\n                            stringmapname: res.data.contactModes[k].contactmodename,\n                            isSelected: (res.data.contactModes[k].Status === 'Active') ? true : false\n                        });\n                    }\n\n                    if (res.data.personData[0].PicturePath !== '' && res.data.personData[0].PicturePath !== undefined && res.data.personData[0].PicturePath !== null) {\n                        profileImage = apiBase + res.data.personData[0].PicturePath;\n                    }\n                    if (entityType.toString().toLowerCase() === 'person') {\n                        this.setState({\n                            contactcode: res.data.personData[0].ContactCode,\n                            selectedContactName: res.data.personData[0].contactTypeName,\n                            isInternalStaff: (res.data.personData[0].ContactType == \"InternalStaff\") ? true : false,\n                            isCompany: 'Individual',\n                            userImg: profileImage,\n                            companyname: res.data.personData[0].CompanyName,\n                            titleName: res.data.personData[0].titleName,\n                            forename: res.data.personData[0].Forename,\n                            surname: res.data.personData[0].Surname,\n                            salutation: res.data.personData[0].Salutation,\n                            gender: res.data.personData[0].Gender,\n                            passportno: res.data.personData[0].PassportNumber,\n                            countryShown: (CommonConfig.isEmpty(res.data.personData[0].passportcountryName)) ? '' : res.data.personData[0].passportcountryName,\n                            dob: CommonConfig.isEmpty(res.data.personData[0].DOB) || res.data.personData[0].DOB=='0000-00-00' || res.data.personData[0].DOB == \"Invalid date\" ?'':moment(res.data.personData[0].DOB).format(CommonConfig.dateFormat.dateOnly),\n                            businesstypeShown: (CommonConfig.isEmpty(res.data.personData[0].businesstypeName)) ? '' : res.data.personData[0].businesstypeName,\n                            addrCountryShown: (CommonConfig.isEmpty(res.data.addressData[0].countryname)) ? '' : res.data.addressData[0].countryname,\n                            addrline1: res.data.addressData[0].AddrLine1,\n                            addrline2: res.data.addressData[0].AddrLine2,\n                            addrline3: res.data.addressData[0].AddrLine3,\n                            stateShown: (CommonConfig.isEmpty(res.data.addressData[0].State)) ? '' : res.data.addressData[0].State,\n                            cityShown: res.data.addressData[0].City,\n                            postalcode: res.data.addressData[0].PostalCode,\n                            phoneList: phones,\n                            emailList: emails,\n                            contactPreference: (res.data.personData[0].IsOkToContact.data[0] === 1) ? 'oktocontact' : 'donotcontact',\n                            contactModes: contactModes,\n                            docdeliverySelected: res.data.personData[0].DocumentDelivery,\n                            userNote: res.data.personData[0].Note,\n                            mobile: phonestr,\n                            fullName: res.data.personData[0].titleName + ' ' + res.data.personData[0].Forename + ' ' + res.data.personData[0].Surname\n                        });\n                    } else if (entityType.toString().toLowerCase() === 'organization') {\n                        this.setState({\n                            contactcode: res.data.personData[0].ContactCode,\n                            selectedContactName: res.data.personData[0].contactTypeName,\n                            isInternalStaff: (res.data.personData[0].ContactType == \"InternalStaff\") ? true : false,\n                            isCompany: 'Company',\n                            userImg: profileImage,\n                            companyIdentifier: res.data.personData[0].CompanyIdentifier,\n                            companyname: res.data.personData[0].OrganizationName,\n                            businesstypeShown: (CommonConfig.isEmpty(res.data.personData[0].businesstypeName)) ? '' : res.data.personData[0].businesstypeName,\n                            addrCountryShown: (CommonConfig.isEmpty(res.data.addressData[0].countryname)) ? '' : res.data.addressData[0].countryname,\n                            addrline1: res.data.addressData[0].AddrLine1,\n                            addrline2: res.data.addressData[0].AddrLine2,\n                            addrline3: res.data.addressData[0].AddrLine3,\n                            stateShown: (res.data.addressData[0].statename !== undefined && res.data.addressData[0].statename !== null && res.data.addressData[0].statename !== '') ? res.data.addressData[0].statename : '',\n                            cityShown: res.data.addressData[0].City,\n                            postalcode: res.data.addressData[0].PostalCode,\n                            phoneList: phones,\n                            emailList: emails,\n                            contactPreference: (res.data.personData[0].IsOkToContact.data[0] === 1) ? 'oktocontact' : 'donotcontact',\n                            contactModes: contactModes,\n                            docdeliverySelected: res.data.personData[0].DocumentDelivery,\n                            userNote: res.data.personData[0].Note,\n                            mobile: phonestr,\n                            fullName: res.data.personData[0].OrganizationName\n                        });\n                    } else {\n\n                    }\n                } else {\n                    console.log(\"error in get data\");\n                }\n            }).catch(err => {\n                console.log(\"err\", err);\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    formatPhone = (ph) => {\n        let phone;\n        if (ph.CountryCode && ph.CountryCode !== '' && ph.CountryCode !== undefined && ph.CountryCode !== null) {\n            if (ph.AreaCode && ph.AreaCode !== '' && ph.AreaCode !== undefined && ph.AreaCode !== null) {\n                // phone = ph.CountryCode + ' ' + ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n                phone = ph.CountryCode + ' ' + ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n            } else {\n                // phone = ph.CountryCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n                phone = ph.CountryCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n            }\n        } else {\n            if (ph.AreaCode && ph.AreaCode !== '' && ph.AreaCode !== undefined && ph.AreaCode !== null) {\n                // phone = ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n                phone = ph.AreaCode + ' ' + CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n            } else {\n                // phone = CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n                phone = CommonConfig.formatPhoneNumber(ph.PhoneNumber);\n            }\n        }\n        return phone;\n    }\n\n    toggleCustom = (tab) => {\n        const prevState = this.state.custom;\n        const state = prevState.map((x, index) => tab === index ? !x : false);\n        this.setState({ custom: state, isExpand: false });\n    }\n\n    toggleAll = (toggleType) => {\n        const prevState = this.state.custom;\n        if (toggleType === 'expand') {\n            const state = prevState.map((x, index) => x = true);\n            this.setState({ custom: state, isExpand: true });\n        } else {\n            const state = prevState.map((x, index) => x = false);\n            this.setState({ custom: state, isExpand: false });\n        }\n    }\n\n    editContacts(state) {\n        // debugger;\n         if(this.state.selectedContactName == \"Client\"){\n            this.setState({\n                showModal: true, selectedRecord: state,\n                arrayToDisplay: (this.state.isCompany === 'Individual') ? this.state.personQuestion : this.state.organizationQuestion\n            });\n         }else{\n            let id = state.id;\n            let entityType = state.entityType;\n            this.props.history.push({\n                pathname: '/editContactDetails/' + id + '/' + entityType,\n                state: {\n                    id: id,\n                    entityType: entityType\n                }\n            });\n         }\n         // old code \n        // if (this.state.isInternalStaff) {\n        //     let id = state.id;\n        //     let entityType = state.entityType;\n        //     this.props.history.push({\n        //         pathname: '/editContactDetails/' + id + '/' + entityType,\n        //         state: {\n        //             id: id,\n        //             entityType: entityType\n        //         }\n        //     });\n        // } else {\n        //     this.setState({\n        //         showModal: true, selectedRecord: state,\n        //         arrayToDisplay: (this.state.isCompany === 'Individual') ? this.state.personQuestion : this.state.organizationQuestion\n        //     });\n        // }\n    }\n\n    reset = () => {\n        this.setState({\n            showModal: false, selectedRecord: '', verificationArray: [],\n            note: '', selected1: false, selected2: false, selected3: false\n        });\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n\n        if (e.target.value === '' || e.target.value === null) {\n            // this.show(e.target.name, true);\n        } else {\n            this.show(e.target.name, false);\n            this.setState({ note: e.target.value });\n        }\n    }\n\n    show(field, condition) {\n        if (condition) {\n            document.getElementById(field).className = \"form-control is-invalid\";\n        } else {\n            document.getElementById(field).className = \"form-control\";\n        }\n    }\n\n    selectType = (value, type, i) => {\n        if (value === '') {\n            this.show(type, true);\n            if (i === 0) this.setState({ selected1: false });\n            if (i === 1) this.setState({ selected2: false });\n            if (i === 2) this.setState({ selected3: false });\n        } else if (value === 'Incorrect') {\n            if (i === 0) this.setState({ selected1: false });\n            if (i === 1) this.setState({ selected2: false });\n            if (i === 2) this.setState({ selected3: false });\n        } else {\n            this.show(type, false);\n            if (i === 0) this.setState({ selected1: true });\n            if (i === 1) this.setState({ selected2: true });\n            if (i === 2) this.setState({ selected3: true });\n        }\n    }\n\n    goToEdit = () => {\n        const { t } = this.props;\n        try {\n            let selectedValues = 0;\n            if (this.state.selected1) selectedValues++;\n            if (this.state.selected2) selectedValues++;\n            if (this.state.selected3) selectedValues++;\n\n            let checkValid = true;\n            if (this.state.entityType.toLowerCase() === 'person') {\n                if (selectedValues === 0 || selectedValues === 1) {\n                    checkValid = false;\n                    toast.error(t(\"contactDetails:ViewPage.SelectAnswerError\"));\n                } else if (selectedValues < 3 && CommonConfig.isEmpty(this.state.note)) {\n                    checkValid = false;\n                    toast.error(t(\"contactDetails:ViewPage.AddCommentError\"));\n                }\n            } else {\n                if (selectedValues === 0) {\n                    checkValid = false;\n                    toast.error(t(\"contactDetails:ViewPage.SelectAnswerError\"));\n                } else if (selectedValues < 2 && CommonConfig.isEmpty(this.state.note)) {\n                    checkValid = false;\n                    toast.error(t(\"contactDetails:ViewPage.AddCommentError\"));\n                }\n            }\n\n            // if(selectedValues < 2){\n            //     toast.error(t(\"contactDetails:ViewPage.SelectAnswerError\"));\n            // }else if(selectedValues === 2 && this.state.note.trim() === ''){\n            //     toast.error(t(\"contactDetails:ViewPage.AddCommentError\"));\n            // }else if((selectedValues === 2 && this.state.note.trim() !== '') || (selectedValues === 3)){\n\n            if (checkValid) {\n                let id = this.state.selectedRecord.id;\n                let entityType = this.state.selectedRecord.entityType;\n\n                let data = {\n                    verificationArray: this.state.verificationArray,\n                    isCorrect: true,\n                    note: this.state.note,\n                    id: id\n                }\n\n                api.post('api/addVerificationDetails', data).then(res => {\n                    if (res.success) {\n                        if (res.data.success) {\n                            this.reset();\n                            toast.success(res.data.message);\n\n                            this.props.history.push({\n                                pathname: '/editContactDetails/' + id + '/' + entityType,\n                                state: {\n                                    id: id,\n                                    entityType: entityType\n                                }\n                            });\n                        } else {\n\n                        }\n                    } else {\n                        toast.error('User verification failed');\n                    }\n                }).catch(err => {\n                    console.log(\"err\", err);\n                });\n            }\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    goBack = () => {\n        this.props.history.push({\n            pathname: '/contactList'\n        });\n        // this.props.history.push('/contactList');\n    }\n\n    render() {\n        const { t } = this.props;\n        const EditButton = t(\"buttons.Edit\");\n        const BackButton = t(\"buttons.Back\");\n\n        return (\n            <div className=\"animated fadeIn\">\n                <div className=\"main-content\">\n                    <Container>\n                        <Row>\n                            <Col md=\"12\">\n                                <b style={{ marginRight: 20 }}>Contact# {this.state.contactcode}</b>\n                            </Col>\n                        </Row>\n\n                        <Row style={{ marginTop: 10 }}>\n                            {(this.state.fullName != \"\") ? (\n                                <Col md=\"12\" style={{ marginBottom: 10 }}>\n                                    <SidebarNav contactEntityType={this.props.match.params.entityType}\n                                        contactEntityId={this.props.match.params.id}\n                                        contactName={this.state.fullName}\n                                        NavPage=\"User\" NavID={this.props.match.params.id} {...this.props} />\n                                </Col>\n                            ) : (null)}\n                            <Col md=\"2\">\n                                <div className=\"profile-img\">\n                                    <img src={(this.state.userImg && this.state.userImg !== '') ? this.state.userImg : userDefaultImg} alt=\"user_profile_image\" width=\"100%\" height=\"auto\" />\n                                </div>\n                            </Col>\n\n                            <Col md=\"8\">\n                                {(this.state.isCompany === 'Individual') ?\n                                    (\n                                        <div>\n                                            <div className=\"row\">\n                                                <h2>\n                                                    <b>{this.state.titleName} {this.state.forename} {this.state.surname}</b>\n                                                </h2>\n                                                <span style={{ margin: 10 }}>({this.state.selectedContactName})</span>\n\n                                                <span style={{ margin: 10 }}>\n                                                    <i className=\"fa fa-phone\" style={{ marginRight: 5 }}></i>\n                                                    {this.state.mobile}\n                                                </span>\n\n                                                <span style={{ margin: 10 }}>\n                                                    <i className=\"fa fa-envelope\" style={{ marginRight: 5 }}></i>\n                                                    {(this.state.emailList[0] !== undefined) ? this.state.emailList[0].Email : ''}\n                                                </span>\n                                            </div>\n\n                                            <div>\n                                                <span>{this.state.businesstypeShown}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>{this.state.companyname}</span>\n                                            </div>\n\n                                            <div className=\"row\">\n                                                <div className=\"col-md-2\">\n                                                    {t(\"contactDetails:Gender\")}: {this.state.gender}\n                                                </div>\n                                                {(this.state.isInternalStaff) ? (null) : (\n                                                    <div className=\"col-md-4\">\n                                                        {t(\"contactDetails:DOB.label\")}: {this.state.dob}\n                                                    </div>\n                                                )}\n                                                <div className=\"col-md-4\">\n                                                    {t(\"contactDetails:Salutation.label\")}: {this.state.salutation}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ) : (\n                                        <div>\n                                            <div className=\"row\">\n                                                <h2>\n                                                    <b>{this.state.companyname}</b>\n                                                </h2>\n\n                                                <span style={{ margin: 10 }}>({this.state.selectedContactName})</span>\n\n                                                <span style={{ margin: 10 }}>\n                                                    <i className=\"fa fa-phone\" style={{ marginRight: 5 }}></i>\n                                                    {this.state.mobile}\n                                                </span>\n\n                                                <span style={{ margin: 10 }}>\n                                                    <i className=\"fa fa-envelope\" style={{ marginRight: 5 }}></i>\n                                                    {(this.state.emailList[0] !== undefined) ? this.state.emailList[0].Email : ''}\n                                                </span>\n                                            </div>\n\n                                            <div>\n                                                <span>{this.state.businesstypeShown}</span>\n                                            </div>\n\n                                            <div>\n                                                <span>{this.state.companyIdentifier}</span>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            </Col>\n\n                            <Col md=\"2\" style={{ textAlign: \"right\" }}>\n\n                                <Button style={{ marginRight: 5 }} color=\"primary\" onClick={() => this.editContacts(this.state)}>\n                                    <i className=\"fa fa-pencil\" style={{ marginRight: 5 }}></i>\n                                    {EditButton}\n                                </Button>\n\n                                <Button color=\"primary\" onClick={() => this.goBack()}>\n                                    <i className=\"fa fa-angle-left\"></i>\n                                    {BackButton}\n                                </Button>\n\n                            </Col>\n                        </Row>\n\n                        <Card style={{ marginTop: 10 }}>\n                            <CardBody>\n                                <div className=\"text-right\" style={{ marginBottom: 5 }}>\n                                    <Button color=\"primary\" title={(this.state.isExpand) ? t(\"contactDetails:ViewPage.CollapseAll\") : t(\"contactDetails:ViewPage.ExpandAll\")}\n                                        onClick={(this.state.isExpand) ? () => this.toggleAll('collapse') : () => this.toggleAll('expand')}\n                                    >\n                                        <i className={(this.state.isExpand) ? \"fa fa-compress\" : \"fa fa-expand\"}></i>\n                                    </Button>\n                                </div>\n\n                                <div id=\"accordion\">\n                                    <Card className=\"mb-0\">\n                                        <CardHeader id=\"headingOne\">\n                                            <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleCustom(0)} aria-expanded={this.state.custom[0]} aria-controls=\"collapseOne\">\n                                                <h5 className=\"m-0 p-0\">\n                                                    {/* <i style={{marginRight: 5}} className=\"fa fa-address-card-o\"></i> */}\n                                                    {t(\"contactDetails:ViewPage.ContactDetails\")}\n                                                    <i style={{ float: 'right' }} className={this.state.custom[0] ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\n                                                </h5>\n                                            </Button>\n                                        </CardHeader>\n                                        <Collapse isOpen={this.state.custom[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                                            <CardBody>\n                                                <Row>\n                                                    <Col md=\"4\">\n                                                        <span>\n                                                            <i className=\"fa fa-phone-square\" style={{ marginRight: 10 }}></i>\n                                                            <b>{t(\"contactDetails:PhoneHeader\")}</b>\n                                                        </span>\n\n                                                        <Row>\n                                                            <Col md=\"12\">\n                                                                <div style={{ marginTop: 10 }} className=\"input-box\">\n                                                                    <table className=\"added-detail-table\">\n                                                                        <thead></thead>\n\n                                                                        <tbody>\n                                                                            {this.state.phoneList.map((ph, i) => {\n                                                                                return (\n                                                                                    <tr key={i}>\n                                                                                        <td>\n                                                                                            <span>\n                                                                                                {ph.phonetypeName}\n                                                                                            </span>\n                                                                                        </td>\n\n                                                                                        <td>\n                                                                                            <span>\n                                                                                                {this.formatPhone(ph)}\n                                                                                                {(ph.IsPreferred.data[0] === 1) ?\n                                                                                                    (<i style={{ marginLeft: 10 }} title={t(\"contactDetails:PhonePrimary\")} className=\"fa fa-check-circle\"></i>) : null\n                                                                                                }\n                                                                                            </span>\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                )\n                                                                            })}\n                                                                        </tbody>\n                                                                    </table>\n                                                                </div>\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n\n                                                    <Col md=\"4\">\n                                                        <span>\n                                                            <i className=\"fa fa-envelope-square\" style={{ marginRight: 10 }}></i>\n                                                            <b>{t(\"contactDetails:EmailHeader\")}</b>\n                                                        </span>\n\n                                                        <Row>\n                                                            <Col md=\"12\">\n                                                                <div style={{ marginTop: 10 }} className=\"input-box\">\n                                                                    <table className=\"added-detail-table\">\n                                                                        <thead></thead>\n\n                                                                        <tbody>\n                                                                            {this.state.emailList.map((email, i) => {\n                                                                                return (\n                                                                                    <tr key={i}>\n                                                                                        <td>\n                                                                                            <span>{email.EmailTypeName}</span>\n                                                                                        </td>\n                                                                                        <td>\n                                                                                            <span>\n                                                                                                {email.Email}\n                                                                                                {(email.IsPreferred.data[0] === 1) ?\n                                                                                                    (<i style={{ marginLeft: 10 }} title={t(\"contactDetails:EmailPrimary\")} className=\"fa fa-check-circle\"></i>) : null\n                                                                                                }\n                                                                                            </span>\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                )\n                                                                            })\n                                                                            }\n                                                                        </tbody>\n                                                                    </table>\n                                                                </div>\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n\n                                                    {(this.state.isInternalStaff) ? (null) : (\n                                                        <Col md=\"4\">\n                                                            <span>\n                                                                <i className=\"fa fa-map-marker\" style={{ marginRight: 10 }}></i>\n                                                                <b>{t(\"contactDetails:Address\")}</b>\n                                                            </span>\n\n                                                            <Row>\n                                                                <Col md=\"12\">\n                                                                    <p>\n                                                                        {this.state.addrline1}<br />\n                                                                        {((!CommonConfig.isEmpty(this.state.addrline2) && !CommonConfig.isEmpty(this.state.addrline3)) ?\n                                                                            (this.state.addrline2, this.state.addrline3) :\n                                                                            ((!CommonConfig.isEmpty(this.state.addrline2) && CommonConfig.isEmpty(this.state.addrline3)) ?\n                                                                                (this.state.addrline2) :\n                                                                                ((CommonConfig.isEmpty(this.state.addrline2) && !CommonConfig.isEmpty(this.state.addrline3)) ?\n                                                                                    (this.state.addrline3) : null)))\n                                                                        }\n                                                                        {(CommonConfig.isEmpty(this.state.addrline2) && CommonConfig.isEmpty(this.state.addrline3)) ?\n                                                                            null : <br />\n                                                                        }\n                                                                        {this.state.cityShown}<br />\n                                                                        {this.state.stateShown}<br />\n                                                                        {this.state.addrCountryShown} <br />\n                                                                        {this.state.postalcode}\n                                                                    </p>\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    )}\n                                                </Row>\n\n                                                {(this.state.isInternalStaff) ? (null) : (\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                            <span><b>{t(\"contactDetails:ContactPreference\")}</b></span>\n                                                        </Col>\n                                                        <Col md=\"2\">\n                                                            <span>{(this.state.contactPreference == 'oktocontact' ? t(\"contactDetails:OktoContact\") : t(\"contactDetails:DonotContact\"))}</span>\n                                                        </Col>\n                                                    </Row>\n                                                )}\n\n                                                {(this.state.isInternalStaff) ? (null) : (\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                            <span><b>{t(\"contactDetails:ContactMode\")}</b></span>\n                                                        </Col>\n                                                        {this.state.contactModes.map((cm, i) => {\n                                                            if (cm.isSelected) {\n                                                                return (\n                                                                    //   <div key={i}>\n                                                                    //     <p>{cm.stringmapname}</p> \n                                                                    //   </div>\n                                                                    <Col md=\"2\" key={i}>\n                                                                        <p>{cm.stringmapname}</p>\n                                                                    </Col>\n                                                                )\n                                                            }\n                                                        })\n                                                        }\n                                                    </Row>\n                                                )}\n\n                                                {(this.state.isInternalStaff) ? (null) : (\n                                                    <Row>\n                                                        <Col md=\"2\">\n                                                            <span><b>{t(\"contactDetails:DocumentDelivery.label\")}</b></span>\n                                                        </Col>\n                                                        <Col md=\"10\">\n                                                            <span>\n                                                                {(this.state.docdeliverySelected == 'both' ?\n                                                                    (<div className=\"row\">\n                                                                        <div className=\"col-md-2\">\n                                                                            {t(\"contactDetails:DocumentDelivery.Email\")}\n                                                                        </div>\n                                                                        <div className=\"col-md-2\">\n                                                                            {t(\"contactDetails:DocumentDelivery.Post\")}\n                                                                        </div>\n                                                                    </div>) :\n                                                                    (this.state.docdeliverySelected == 'email') ?\n                                                                        (<div className=\"row\">\n                                                                            <div className=\"col-md-2\">\n                                                                                {t(\"contactDetails:DocumentDelivery.Email\")}\n                                                                            </div>\n                                                                        </div>) :\n                                                                        (<div className=\"row\">\n                                                                            <div className=\"col-md-2\">\n                                                                                {t(\"contactDetails:DocumentDelivery.Post\")}\n                                                                            </div>\n                                                                        </div>)\n                                                                )}\n                                                            </span>\n                                                        </Col>\n                                                    </Row>\n                                                )}\n\n                                            </CardBody>\n                                        </Collapse>\n                                    </Card>\n\n                                    {(this.state.isCompany === 'Individual') ? (\n                                        (this.state.isInternalStaff) ? (null) : (\n                                            <Card className=\"mb-0\">\n                                                <CardHeader id=\"headingTwo\">\n                                                    <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleCustom(1)} aria-expanded={this.state.custom[1]} aria-controls=\"collapseTwo\">\n                                                        <h5 className=\"m-0 p-0\">\n                                                            {t(\"contactDetails:ViewPage.PassportDetails\")}\n                                                            <i style={{ float: 'right' }} className={this.state.custom[1] ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\n                                                        </h5>\n                                                    </Button>\n                                                </CardHeader>\n                                                <Collapse isOpen={this.state.custom[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                                                    <CardBody>\n                                                        <Row>\n                                                            <Col md=\"3\">\n                                                                <span><b>{t(\"contactDetails:PassportNumber.label\")}</b></span>\n                                                            </Col>\n                                                            <Col md=\"2\">\n                                                                <span>{this.state.passportno}</span>\n                                                            </Col>\n                                                            <Col md=\"3\">\n                                                                <span><b>{t(\"contactDetails:PassportCountry.label\")}</b></span>\n                                                            </Col>\n                                                            <Col md=\"2\">\n                                                                <span>{this.state.countryShown}</span>\n                                                            </Col>\n                                                        </Row>\n                                                    </CardBody>\n                                                </Collapse>\n                                            </Card>\n                                        )\n                                    ) : null\n                                    }\n\n                                    {CommonConfig.isEmpty(this.state.userNote) ?\n                                        null : (\n                                            <Card className=\"mb-0\">\n                                                <CardHeader id=\"headingThree\">\n                                                    <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleCustom(2)} aria-expanded={this.state.custom[2]} aria-controls=\"collapseThree\">\n                                                        <h5 className=\"m-0 p-0\">\n                                                            {t(\"contactDetails:ViewPage.NoteDetails\")}\n                                                            <i style={{ float: 'right' }} className={this.state.custom[2] ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\n                                                        </h5>\n                                                    </Button>\n                                                </CardHeader>\n                                                <Collapse isOpen={this.state.custom[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                                                    <CardBody>\n                                                        <Row>\n                                                            <Col md=\"3\">\n                                                                <span>{t(\"contactDetails:Notes.label\")}</span>\n                                                            </Col>\n                                                            <Col md=\"9\">\n                                                                <p>{this.state.userNote}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </CardBody>\n                                                </Collapse>\n                                            </Card>\n                                        )\n                                    }\n                                </div>\n                            </CardBody>\n                        </Card>\n\n                    </Container>\n\n                    <Modal toggle={() => this.reset()} isOpen={this.state.showModal}>\n                        <ModalHeader toggle={() => this.reset()}>\n                            {t(\"contactDetails:ViewPage.ModalHeader\")}\n                        </ModalHeader>\n\n                        <ModalBody>\n                            {this.state.arrayToDisplay.map((que, i) => {\n                                return (\n                                    <div className=\"input-box rc-box\" key={i}>\n                                        <div className=\"rc-inline\">\n                                            <Row>\n                                                <Col md=\"4\">\n                                                    <label>{que.StringMapName}</label>\n                                                </Col>\n\n                                                <Col md=\"5\">\n                                                    <label>{this.state.selectedRecord[que.StringMapKey.toLowerCase()]}</label>\n                                                </Col>\n\n                                                <Col md=\"3\">\n                                                    <Input type=\"select\" name={que.StringMapKey} id={que.StringMapKey} className=\"\"\n                                                        onChange={(e) => this.selectType(e.target.value, e.target.name, i)}\n                                                    >\n                                                        <option value=''>{t(\"contactDetails:ViewPage.OptionDefault\")}</option>\n                                                        <option value='Correct'>{t(\"contactDetails:ViewPage.OptionCorrect\")}</option>\n                                                        <option value='Incorrect'>{t(\"contactDetails:ViewPage.OptionIncorrect\")}</option>\n                                                    </Input>\n                                                    <em className=\"error invalid-feedback\">{t(\"contactDetails:ViewPage.OptionError\")}</em>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                            }\n\n                            <div className=\"input-box rc-box\">\n                                <div className=\"rc-inline\">\n                                    <Row>\n                                        <Col md=\"4\">\n                                            <label>{t(\"contactDetails:ViewPage.CommentLabel\")}</label>\n                                        </Col>\n\n                                        <Col md=\"8\">\n                                            <Input name=\"note\" type=\"textarea\" id=\"note\" className=\"\" maxLength=\"500\"\n                                                value={this.state.note} onChange={e => this.handleChange(e)}\n                                            />\n                                            <em className=\"error invalid-feedback\" >{t(\"contactDetails:ViewPage.CommentErrorBlank\")}</em>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </div>\n                        </ModalBody>\n\n                        <ModalFooter>\n                            <Button color=\"danger\" onClick={() => this.reset()}>\n                                <i className=\"fa fa-close\"></i>\n                                {t(\"contactDetails:ViewPage.VerificationFailed\")}\n                            </Button>\n                            <Button color=\"success\" onClick={() => this.goToEdit()}>\n                                <i className=\"fa fa-check\"></i>\n                                {t(\"contactDetails:ViewPage.VerificationDone\")}\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n                    {/* </Container> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(ViewContactDetails);\n"]},"metadata":{},"sourceType":"module"}