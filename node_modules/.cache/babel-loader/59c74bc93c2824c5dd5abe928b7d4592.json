{"ast":null,"code":"'use strict';\n\nconst Transform = require('stream').Transform;\n\nclass MessageJoiner extends Transform {\n  constructor() {\n    let options = {\n      readableObjectMode: false,\n      writableObjectMode: true\n    };\n    super(options);\n  }\n\n  _transform(obj, encoding, callback) {\n    if (Buffer.isBuffer(obj)) {\n      this.push(obj);\n    } else if (obj.type === 'node') {\n      this.push(obj.getHeaders());\n    } else if (obj.value) {\n      this.push(obj.value);\n    }\n\n    return callback();\n  }\n\n  _flush(callback) {\n    return callback();\n  }\n\n}\n\nmodule.exports = MessageJoiner;","map":null,"metadata":{},"sourceType":"script"}