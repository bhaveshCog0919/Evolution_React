{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Pages/ChangePassword/ChangePassword.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, CardBody, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Cookies from 'js-cookie';\nimport api from \"../../../utils/apiClient\";\nimport APIConstant from \"../../../utils/constants\";\nimport { withTranslation } from 'react-i18next';\nimport { CommonConfig } from '../../../utils/constants';\n\nclass ChangePassword extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = e => {\n      const {\n        t\n      } = this.props;\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      let passwordRegExp = CommonConfig.RegExp.password;\n\n      if (e.target.name === 'currentPassword') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            currentPasswordError: true\n          });\n          this.show(\"currentPassword\", true, \"currentPasswordError\", t(\"ChangePassword.currentPassword.error_blank\"));\n        } else {\n          this.setState({\n            currentPasswordError: false,\n            currentPassword: e.target.value\n          });\n          this.show(\"currentPassword\", false, \"currentPasswordError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'newPassword') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            newPasswordError: true\n          });\n          this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_blank\"));\n        } else if (!passwordRegExp.test(e.target.value)) {\n          this.setState({\n            newPasswordError: true\n          });\n          this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_pattern\"));\n        } else if (e.target.value.length < 6) {} else if (e.target.value.length > 15) {\n          this.setState({\n            newPasswordError: true\n          });\n          this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_maxLength\"));\n        } else {\n          this.setState({\n            newPasswordError: false,\n            newPasswordError: e.target.value\n          });\n          this.show(\"newPassword\", false, \"newPasswordError\", \"\");\n        }\n      }\n\n      if (e.target.name === 'confirmNewPassword') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            confirmNewPasswordError: true\n          });\n          this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_blank\"));\n        } else if (e.target.value !== this.state.newPassword) {\n          this.setState({\n            confirmNewPasswordError: true\n          });\n          this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_pattern\"));\n        } else {\n          this.setState({\n            confirmNewPasswordError: true\n          });\n          this.show(\"confirmNewPassword\", false, \"confirmNewPasswordError\", \"\");\n        }\n      }\n    };\n\n    this.state = {\n      currentPassword: '',\n      currentPasswordError: true,\n      isShowCurrentPassword: false,\n      newPassword: '',\n      newPasswordError: true,\n      isShowNewPassword: false,\n      confirmNewPassword: '',\n      confirmNewPasswordError: true,\n      isShowConfirmNewPassword: false\n    };\n  }\n\n  toggle(type) {\n    if (type === 'currentPassword') {\n      this.setState({\n        isShowCurrentPassword: !this.state.isShowCurrentPassword\n      });\n    } else if (type === 'newPassword') {\n      this.setState({\n        isShowNewPassword: !this.state.isShowNewPassword\n      });\n    } else if (type === 'confirmNewPassword') {\n      this.setState({\n        isShowConfirmNewPassword: !this.state.isShowConfirmNewPassword\n      });\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n      document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      document.getElementById(field).className = \"form-control\";\n      document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  validate() {\n    const {\n      t\n    } = this.props;\n    let passwordRegExp = CommonConfig.RegExp.password;\n    let errCount = 0;\n\n    if (CommonConfig.isEmpty(this.state.currentPassword) || CommonConfig.isEmpty(this.state.newPassword) || CommonConfig.isEmpty(this.state.confirmNewPassword)) {\n      errCount++;\n      this.show(\"currentPassword\", this.state.currentPasswordError, \"currentPasswordError\", t(\"ChangePassword.currentPassword.error_blank\"));\n      this.show(\"newPassword\", this.state.newPasswordError, \"newPasswordError\", t(\"ChangePassword.newPassword.error_blank\"));\n      this.show(\"confirmNewPassword\", this.state.confirmNewPasswordError, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_blank\"));\n    }\n\n    if (!passwordRegExp.test(this.state.newPassword) || this.state.newPassword.length < 6 || this.state.newPassword.length > 15) {\n      errCount++;\n      this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_pattern\"));\n    }\n\n    if (this.state.newPassword !== this.state.confirmNewPassword) {\n      errCount++;\n      this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_pattern\"));\n    }\n\n    if (errCount > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  changePassword() {\n    try {\n      if (this.validate()) {\n        let loggedInUserData = CommonConfig.loggedInUserData();\n        let data = {\n          currentPassword: this.state.currentPassword,\n          newPassword: this.state.newPassword,\n          confirmNewPassword: this.state.confirmNewPassword,\n          userId: loggedInUserData.LoginId,\n          token: Cookies.get('access_token')\n        };\n        api.post('api/changePassword', data).then(res => {\n          console.log(\"Fgdf\", res);\n\n          if (res.data.success) {\n            this.reset();\n            toast.success(res.data.message);\n            Cookies.remove('access_token');\n            this.props.history.push('/login');\n          } else {\n            toast.error(res.data.message);\n          }\n        }).catch(err => {\n          console.log(\"api error\", err);\n        });\n      } else {// validation error\n      }\n    } catch (error) {\n      console.log(\"front error\", error);\n    }\n  } // onForgot() {\n  //     if (this.state.usernameError === false) {\n  //         const form = {\n  //             'username': this.state.username\n  //         }\n  //         api.post(APIConstant.path.forgotpassword, form).then(res => {\n  //             if (res.success) {\n  //                 toast.success(res.message)\n  //                 this.props.history.push('/login')\n  //             } else {\n  //                 toast.error(res.message)\n  //             }\n  //         }).catch(err => {\n  //             toast.error(err)\n  //         })\n  //     } else {\n  //         this.show(\"username\", this.state.usernameError)\n  //     }\n  // }\n\n\n  render() {\n    const {\n      t\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"9\",\n      lg: \"7\",\n      xl: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mx-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 45\n      }\n    }, \"Change Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"currentPassword\",\n      type: this.state.isShowCurrentPassword ? \"text\" : \"password\",\n      id: \"currentPassword\",\n      className: \"\",\n      placeholder: t(\"ChangePassword.currentPassword.placeholder\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.currentPassword,\n      onBlur: e => this.handleChange(e),\n      maxLength: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.isShowCurrentPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\",\n      onClick: () => this.toggle('currentPassword'),\n      title: this.state.isShowCurrentPassword ? t(\"ChangePassword.currentPassword.hide\") : t(\"ChangePassword.currentPassword.show\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"currentPasswordError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"newPassword\",\n      type: this.state.isShowNewPassword ? \"text\" : \"password\",\n      id: \"newPassword\",\n      className: \"\",\n      placeholder: t(\"ChangePassword.newPassword.placeholder\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.newPassword,\n      onBlur: e => this.handleChange(e),\n      maxLength: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.isShowNewPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\",\n      onClick: () => this.toggle('newPassword'),\n      title: this.state.isShowNewPassword ? t(\"ChangePassword.newPassword.hide\") : t(\"ChangePassword.newPassword.show\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"newPasswordError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"confirmNewPassword\",\n      type: this.state.isShowConfirmNewPassword ? \"text\" : \"password\",\n      id: \"confirmNewPassword\",\n      className: \"\",\n      placeholder: t(\"ChangePassword.confirmNewPassword.placeholder\"),\n      onChange: e => this.handleChange(e),\n      value: this.state.confirmNewPassword,\n      onBlur: e => this.handleChange(e),\n      maxLength: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.isShowConfirmNewPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\",\n      onClick: () => this.toggle('confirmNewPassword'),\n      title: this.state.isShowConfirmNewPassword ? t(\"ChangePassword.confirmNewPassword.hide\") : t(\"ChangePassword.confirmNewPassword.show\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      id: \"confirmNewPasswordError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      className: \"px-4\",\n      onClick: () => this.changePassword(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 45\n      }\n    }, \"Submit\")))))))));\n  }\n\n}\n\nexport default withTranslation()(ChangePassword);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Pages/ChangePassword/ChangePassword.js"],"names":["React","Component","Button","Card","CardBody","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","ToastContainer","toast","Cookies","api","APIConstant","withTranslation","CommonConfig","ChangePassword","constructor","props","context","handleChange","e","t","setState","target","name","value","passwordRegExp","RegExp","password","currentPasswordError","show","currentPassword","newPasswordError","test","length","confirmNewPasswordError","state","newPassword","isShowCurrentPassword","isShowNewPassword","confirmNewPassword","isShowConfirmNewPassword","toggle","type","field","condition","errorField","message","document","getElementById","className","innerHTML","validate","errCount","isEmpty","changePassword","loggedInUserData","data","userId","LoginId","token","get","post","then","res","console","log","success","reset","remove","history","push","error","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card, CardBody, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Cookies from 'js-cookie';\nimport api from \"../../../utils/apiClient\";\nimport APIConstant from \"../../../utils/constants\";\nimport { withTranslation } from 'react-i18next';\nimport { CommonConfig } from '../../../utils/constants';\n\nclass ChangePassword extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            currentPassword: '',\n            currentPasswordError: true,\n            isShowCurrentPassword: false,\n\n            newPassword: '',\n            newPasswordError: true,\n            isShowNewPassword: false,\n\n            confirmNewPassword: '',\n            confirmNewPasswordError: true,\n            isShowConfirmNewPassword: false\n        };\n    }\n\n    handleChange = (e) => {\n        const { t } = this.props;\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        let passwordRegExp = CommonConfig.RegExp.password;\n\n        if (e.target.name === 'currentPassword') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ currentPasswordError: true });\n                this.show(\"currentPassword\", true, \"currentPasswordError\", t(\"ChangePassword.currentPassword.error_blank\"));\n            } else {\n                this.setState({ currentPasswordError: false, currentPassword: e.target.value });\n                this.show(\"currentPassword\", false, \"currentPasswordError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'newPassword') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ newPasswordError: true });\n                this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_blank\"));\n            } else if (!passwordRegExp.test(e.target.value)) {\n                this.setState({ newPasswordError: true });\n                this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_pattern\"));\n            } else if (e.target.value.length < 6) {\n\n            } else if (e.target.value.length > 15) {\n                this.setState({ newPasswordError: true });\n                this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_maxLength\"));\n            } else {\n                this.setState({ newPasswordError: false, newPasswordError: e.target.value });\n                this.show(\"newPassword\", false, \"newPasswordError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'confirmNewPassword') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ confirmNewPasswordError: true });\n                this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_blank\"));\n            } else if (e.target.value !== this.state.newPassword) {\n                this.setState({ confirmNewPasswordError: true });\n                this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_pattern\"));\n            } else {\n                this.setState({ confirmNewPasswordError: true });\n                this.show(\"confirmNewPassword\", false, \"confirmNewPasswordError\", \"\");\n            }\n        }\n    }\n\n    toggle(type) {\n        if (type === 'currentPassword') {\n            this.setState({ isShowCurrentPassword: !this.state.isShowCurrentPassword });\n        } else if (type === 'newPassword') {\n            this.setState({ isShowNewPassword: !this.state.isShowNewPassword });\n        } else if (type === 'confirmNewPassword') {\n            this.setState({ isShowConfirmNewPassword: !this.state.isShowConfirmNewPassword });\n        }\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            document.getElementById(field).className = \"form-control is-invalid\";\n            document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            document.getElementById(field).className = \"form-control\";\n            document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    validate() {\n        const { t } = this.props;\n        let passwordRegExp = CommonConfig.RegExp.password;\n        let errCount = 0;\n\n        if (CommonConfig.isEmpty(this.state.currentPassword) || CommonConfig.isEmpty(this.state.newPassword) || CommonConfig.isEmpty(this.state.confirmNewPassword)) {\n            errCount++;\n            this.show(\"currentPassword\", this.state.currentPasswordError, \"currentPasswordError\", t(\"ChangePassword.currentPassword.error_blank\"));\n            this.show(\"newPassword\", this.state.newPasswordError, \"newPasswordError\", t(\"ChangePassword.newPassword.error_blank\"));\n            this.show(\"confirmNewPassword\", this.state.confirmNewPasswordError, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_blank\"));\n        }\n\n        if (!passwordRegExp.test(this.state.newPassword) || this.state.newPassword.length < 6 || this.state.newPassword.length > 15) {\n            errCount++;\n            this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_pattern\"));\n        }\n\n        if (this.state.newPassword !== this.state.confirmNewPassword) {\n            errCount++;\n            this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_pattern\"));\n        }\n\n        if (errCount > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    changePassword() {\n        try {\n            if (this.validate()) {\n                let loggedInUserData = CommonConfig.loggedInUserData();\n                let data = {\n                    currentPassword: this.state.currentPassword,\n                    newPassword: this.state.newPassword,\n                    confirmNewPassword: this.state.confirmNewPassword,\n                    userId: loggedInUserData.LoginId,\n                    token: Cookies.get('access_token')\n                }\n                api.post('api/changePassword', data).then(res => {\n                    console.log(\"Fgdf\", res);\n                    if (res.data.success) {\n                        this.reset();\n                        toast.success(res.data.message);\n                        Cookies.remove('access_token');\n                        this.props.history.push('/login');\n                    } else {\n                        toast.error(res.data.message);\n                    }\n                }).catch(err => {\n                    console.log(\"api error\", err);\n                });\n            } else {\n                // validation error\n            }\n        } catch (error) {\n            console.log(\"front error\", error);\n        }\n    }\n\n    // onForgot() {\n    //     if (this.state.usernameError === false) {\n    //         const form = {\n    //             'username': this.state.username\n    //         }\n\n    //         api.post(APIConstant.path.forgotpassword, form).then(res => {\n    //             if (res.success) {\n    //                 toast.success(res.message)\n    //                 this.props.history.push('/login')\n    //             } else {\n    //                 toast.error(res.message)\n    //             }\n    //         }).catch(err => {\n    //             toast.error(err)\n    //         })\n    //     } else {\n    //         this.show(\"username\", this.state.usernameError)\n    //     }\n    // }\n\n    render() {\n        const { t } = this.props;\n        return (\n            <div>\n                <ToastContainer></ToastContainer>\n\n                <div className=\"app flex-row align-items-center\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Col md=\"9\" lg=\"7\" xl=\"6\">\n                                <Card className=\"mx-4\">\n                                    <CardBody className=\"p-4\">\n                                        <Form>\n                                            <h1>Change Password</h1>\n\n                                            {/* <p className=\"text-muted\">Reset Password Form</p> */}\n                                            <div className=\"input-box\">\n                                                <InputGroup>\n                                                    <Input name=\"currentPassword\" type={this.state.isShowCurrentPassword ? \"text\" : \"password\"}\n                                                        id=\"currentPassword\" className=\"\" placeholder={t(\"ChangePassword.currentPassword.placeholder\")}\n                                                        onChange={e => this.handleChange(e)} value={this.state.currentPassword}\n                                                        onBlur={e => this.handleChange(e)} maxLength=\"15\"\n                                                    />\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText>\n                                                            <i className={this.state.isShowCurrentPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\n                                                                onClick={() => this.toggle('currentPassword')} title={this.state.isShowCurrentPassword ? t(\"ChangePassword.currentPassword.hide\") : t(\"ChangePassword.currentPassword.show\")}>\n                                                            </i>\n                                                        </InputGroupText>\n                                                    </InputGroupAddon>\n                                                    <em className=\"error invalid-feedback\" id=\"currentPasswordError\"></em>\n                                                </InputGroup>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <InputGroup>\n                                                    <Input name=\"newPassword\" type={this.state.isShowNewPassword ? \"text\" : \"password\"}\n                                                        id=\"newPassword\" className=\"\" placeholder={t(\"ChangePassword.newPassword.placeholder\")}\n                                                        onChange={e => this.handleChange(e)} value={this.state.newPassword}\n                                                        onBlur={e => this.handleChange(e)} maxLength=\"15\"\n                                                    />\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText>\n                                                            <i className={this.state.isShowNewPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\n                                                                onClick={() => this.toggle('newPassword')} title={this.state.isShowNewPassword ? t(\"ChangePassword.newPassword.hide\") : t(\"ChangePassword.newPassword.show\")}>\n                                                            </i>\n                                                        </InputGroupText>\n                                                    </InputGroupAddon>\n                                                    <em className=\"error invalid-feedback\" id=\"newPasswordError\"></em>\n                                                </InputGroup>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <InputGroup>\n                                                    <Input name=\"confirmNewPassword\" type={this.state.isShowConfirmNewPassword ? \"text\" : \"password\"}\n                                                        id=\"confirmNewPassword\" className=\"\" placeholder={t(\"ChangePassword.confirmNewPassword.placeholder\")}\n                                                        onChange={e => this.handleChange(e)} value={this.state.confirmNewPassword}\n                                                        onBlur={e => this.handleChange(e)} maxLength=\"15\"\n                                                    />\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText>\n                                                            <i className={this.state.isShowConfirmNewPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\n                                                                onClick={() => this.toggle('confirmNewPassword')} title={this.state.isShowConfirmNewPassword ? t(\"ChangePassword.confirmNewPassword.hide\") : t(\"ChangePassword.confirmNewPassword.show\")}>\n                                                            </i>\n                                                        </InputGroupText>\n                                                    </InputGroupAddon>\n                                                    <em className=\"error invalid-feedback\" id=\"confirmNewPasswordError\"></em>\n                                                </InputGroup>\n                                            </div>\n                                            {/* <Button color=\"primary\" className=\"px-4\" onClick={() => this.onForgot()}>\n                                                Submit\n                                            </Button> */}\n\n                                            <Button color=\"primary\" className=\"px-4\" onClick={() => this.changePassword()}>\n                                                Submit\n                                            </Button>\n                                        </Form>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChangePassword);"]},"metadata":{},"sourceType":"module"}