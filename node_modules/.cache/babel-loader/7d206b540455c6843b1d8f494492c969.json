{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/ServiceCenterStatement.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport api from '../../utils/apiClient';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { CommonConfig } from '../../utils/constants';\nimport { Button } from 'primereact/button';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport APIConstant from '../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\n\nclass ServiceCenterStatement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.arr.length ? l : this.state.arr.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'tillDate') {\n        debugger;\n        this.setState({\n          tillDate: e.target.value,\n          tillDateError: false\n        });\n        this.show('tillDate', false, 'tillDateError', '');\n      }\n    };\n\n    let columns = [{\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"InceptionDate\",\n      header: \"Inception Date\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"TransactionDate\",\n      header: \"Transaction Date\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"TransactionType\",\n      header: \"Transaction Type\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '90px'\n      }\n    }, {\n      field: \"NetPremium\",\n      header: \"Net Premium\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Levy\",\n      header: \"Levy\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AdminFeeAmount\",\n      header: \"Admin Fee\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Gross\",\n      header: \"Gross Amount\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Paid to Yachtsman\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AgentCommissionAmount\",\n      header: \"Service Center Commission\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    } // { field: \"TotalDue\", header: \"Total Due\", sortable: true, filter: true, id: 10 ,style:{'width':'150px'}},\n    // { field: \"DueDate\", header: \"Due Date\", sortable: true, filter: true, id: 14 ,style:{'width':'150px'}},\n    // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}},\n    // { field: \"AgentCommissionRate\", header: \"Agent Commission Rate\", sortable: true, filter: true, id: 11 ,style:{'width':'150px'}},\n    // { field: \"DayAfterDueDate\", header: \"Day After Due Date\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}}\n    ];\n    let columns1 = [{\n      field: \"AgentName\",\n      header: \"Service Center Name\",\n      sortable: true,\n      filter: true,\n      id: 0,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"AgentCode\",\n      header: \"Service Center Code\",\n      sortable: true,\n      filter: true,\n      id: 1,\n      style: {\n        'width': '100px'\n      }\n    }, {\n      field: \"ClientName\",\n      header: \"Client\",\n      sortable: true,\n      filter: true,\n      id: 2,\n      style: {\n        'width': '150px'\n      }\n    }, {\n      field: \"PolicyNumber\",\n      header: \"Policy Number\",\n      sortable: true,\n      filter: true,\n      id: 3,\n      style: {\n        'width': '60px'\n      }\n    }, {\n      field: \"RenewalDate\",\n      header: \"Renewal Date\",\n      sortable: true,\n      filter: true,\n      id: 4,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"InceptionDate\",\n      header: \"Inception Date\",\n      sortable: true,\n      filter: true,\n      id: 5,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"TransactionDate\",\n      header: \"Transaction Date\",\n      sortable: true,\n      filter: true,\n      id: 6,\n      style: {\n        'width': '80px'\n      }\n    }, {\n      field: \"TransactionType\",\n      header: \"Transaction Type\",\n      sortable: true,\n      filter: true,\n      id: 7,\n      style: {\n        'width': '90px'\n      }\n    }, {\n      field: \"NetPremium\",\n      header: \"Net Premium\",\n      sortable: true,\n      filter: true,\n      id: 8,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Levy\",\n      header: \"Levy\",\n      sortable: true,\n      filter: true,\n      id: 9,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AdminFeeAmount\",\n      header: \"Admin Fee\",\n      sortable: true,\n      filter: true,\n      id: 10,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"Gross\",\n      header: \"Gross Amount\",\n      sortable: true,\n      filter: true,\n      id: 11,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"YCommissionAmount\",\n      header: \"Paid to Yachtsman\",\n      sortable: true,\n      filter: true,\n      id: 12,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    }, {\n      field: \"AgentCommissionAmount\",\n      header: \"Service Center Commission\",\n      sortable: true,\n      filter: true,\n      id: 13,\n      style: {\n        'width': '60px',\n        'textAlign': 'right'\n      }\n    } // { field: \"TotalDue\", header: \"Total Due\", sortable: true, filter: true, id: 10 ,style:{'width':'150px'}},\n    // { field: \"DueDate\", header: \"Due Date\", sortable: true, filter: true, id: 14 ,style:{'width':'150px'}},\n    // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}},\n    // { field: \"AgentCommissionRate\", header: \"Agent Commission Rate\", sortable: true, filter: true, id: 11 ,style:{'width':'150px'}},\n    // { field: \"DayAfterDueDate\", header: \"Day After Due Date\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}}\n    ];\n    this.state = {\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      cols1: columns1,\n      arr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      searchCollapse: false,\n      DebtorType: 'ServiceCenter',\n      // DebtorTypeList:[\n      //     {label:'',value:''}\n      // ],\n      DebtorTypeError: false,\n      agentinfo: '',\n      agentinfoError: false,\n      tillDate: moment().format(\"YYYY-MM\"),\n      tillDateError: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.colOptions1 = [];\n\n    for (let col of columns1) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.export = this.export.bind(this);\n  }\n\n  componentDidMount() {\n    // this.servicecenterstatement();\n    this.getOrganazationData('ServiceCenter');\n  }\n\n  DateDetails(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, rowData.RenewalDate), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, rowData.InceptionDate));\n  }\n\n  getDropDownValues(stringMapType, setStateName, orderBy) {\n    try {\n      const data = {\n        stringmaptype: stringMapType,\n        orderby: orderBy\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            [setStateName]: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {}\n  }\n\n  servicecenterstatement() {\n    var data = {\n      DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\n      agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\n      tillDate: this.state.tillDate ? this.state.tillDate : ''\n    };\n    api.post('api/servicecenterstatement', data).then(res => {\n      if (res.success) {\n        var formattedData = [];\n        this.setState({\n          selectedPage: 0\n        });\n        var dataLength = res.data[0].length;\n\n        if (dataLength > 0) {\n          var NetPremium = 0;\n          var Levy = 0;\n          var PaidAmount = 0;\n          var Gross = 0;\n          var AdminFeeAmount = 0;\n          var AgentCommissionAmount = 0;\n          var YCommissionAmount = 0;\n\n          for (let i = 0; i < dataLength; i++) {\n            var tempData = res.data[0][i];\n            console.log(\"tempData\", tempData);\n            formattedData.push({\n              AgentCode: tempData.AgentContactCode,\n              AgentName: tempData.AgentName,\n              ClientName: tempData.ClientName,\n              PolicyNumber: tempData.PolicyNumber,\n              RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\n              TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\n              TransactionType: tempData.Description,\n              NetPremium: parseFloat(tempData.Premium ? tempData.Premium : 0).toFixed(2),\n              Levy: parseFloat(tempData.Levy ? tempData.Levy : 0).toFixed(2),\n              Gross: parseFloat(tempData.Gross ? tempData.Gross : 0).toFixed(2),\n              InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\n              RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\n              PaidAmount: parseFloat(tempData.PaymentAmount ? tempData.PaymentAmount : 0).toFixed(2),\n              AdminFeeAmount: parseFloat(tempData.AdminFee ? tempData.AdminFee : 0).toFixed(2),\n              TotalDue: parseFloat(tempData.Outstanding ? tempData.Outstanding : 0).toFixed(2),\n              AgentCommissionRate: parseFloat(tempData.AgentCommissionRate ? tempData.AgentCommissionRate : 0).toFixed(2),\n              AgentCommissionAmount: parseFloat(tempData.AgentCommissionAmount ? tempData.AgentCommissionAmount : 0).toFixed(2),\n              YCommissionAmount: parseFloat(tempData.YCommissionAmount ? tempData.YCommissionAmount : 0).toFixed(2),\n              DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\n              DayAfterDueDate: tempData.DayAfterDueDate\n            });\n            NetPremium = NetPremium + tempData.Premium;\n            Levy = Levy + tempData.Levy;\n            PaidAmount = PaidAmount + tempData.PaymentAmount;\n            Gross = Gross + tempData.Gross;\n            AdminFeeAmount = AdminFeeAmount + tempData.AdminFee;\n            AgentCommissionAmount = AgentCommissionAmount + tempData.AgentCommissionAmount;\n            YCommissionAmount = YCommissionAmount + tempData.YCommissionAmount;\n          }\n\n          formattedData.push({\n            ClientName: 'Total',\n            Gross: parseFloat(Gross).toFixed(2),\n            NetPremium: parseFloat(NetPremium).toFixed(2),\n            Levy: parseFloat(Levy).toFixed(2),\n            PaidAmount: parseFloat(PaidAmount).toFixed(2),\n            AdminFeeAmount: parseFloat(AdminFeeAmount).toFixed(2),\n            AgentCommissionAmount: parseFloat(AgentCommissionAmount).toFixed(2),\n            YCommissionAmount: parseFloat(YCommissionAmount).toFixed(2)\n          });\n        }\n\n        let firstPage = formattedData.length ? '1' : '0';\n        let lastPage = this.state.rowsPerPage < formattedData.length ? this.state.rowsPerPage : formattedData.length;\n        let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\n        this.setState({\n          arr: formattedData,\n          str: str\n        });\n      }\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  filterData() {\n    if (this.state.radioSelected || this.state.DebtorType == '' || this.state.agentinfo == '') {\n      toast.error(\"Select Service Center First\");\n    } else {\n      this.servicecenterstatement();\n    }\n  }\n\n  selectType(value, type) {\n    if (type === 'DebtorType') {\n      this.setState({\n        DebtorTypeError: false,\n        DebtorType: value\n      });\n      this.show('DebtorType', false, \"DebtorTypeError\", \"\");\n      this.getOrganazationData(value);\n    }\n\n    if (type === 'agentinfo') {\n      this.setState({\n        agentinfo: value,\n        radioSelected: false,\n        DebtorType: 'ServiceCenter'\n      });\n    }\n  }\n\n  onRadioBtnClick(e) {\n    this.setState({\n      radioSelected: e.target.checked,\n      agentinfo: ''\n    });\n    this.state.agentinfo = '';\n    this.servicecenterstatement();\n  }\n\n  getOrganazationData(ContactType) {\n    try {\n      let data = {\n        ContactType: ContactType\n      };\n      api.post('api/getOrganazationData', data).then(res => {\n        if (res.success) {\n          var formattedData = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            formattedData.push({\n              label: res.data[i].OrganizationName,\n              value: res.data[i].OrganizationId\n            });\n          }\n\n          this.setState({\n            sourceList: formattedData\n          });\n        } else {\n          console.log('getOrganazationData_error');\n        }\n      }).catch(err => {\n        console.log('getOrganazationData', err);\n      });\n    } catch (error) {\n      console.log('getOrganazationData', error);\n    }\n  }\n\n  show(field, condition, errorField, message) {\n    if (condition) {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control is-invalid\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n    } else {\n      if (document.getElementById(field)) document.getElementById(field).className = \"form-control\";\n      if (document.getElementById(errorField)) document.getElementById(errorField).innerHTML = null;\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    var header = null;\n    let columns = '';\n\n    if (this.state.agentinfo == '') {\n      columns = this.state.cols1.map((col, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col.field,\n          header: col.header,\n          body: col.body,\n          sortable: col.sortable,\n          filter: col.filter,\n          filterMatchMode: col.filterMatchMode,\n          style: col.style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }\n        });\n      });\n    } else {\n      columns = this.state.cols.map((col, i) => {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: i,\n          field: col.field,\n          header: col.header,\n          body: col.body,\n          sortable: col.sortable,\n          filter: col.filter,\n          filterMatchMode: col.filterMatchMode,\n          style: col.style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 24\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }, \"Service Center Statement\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      style: {\n        width: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, \"Select Service Center\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"agentinfo\",\n      id: \"agentinfo\",\n      options: this.state.sourceList,\n      value: this.state.agentinfo,\n      onChange: data => this.selectType(data, 'agentinfo') // placeholder={t(\"policyUnderwriting:Source.defaultValue\")}\n      // disabled={this.state.sourceDisable == true ? true : false}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }\n    }, \"\\xA0\", /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"radioSelected\",\n      checked: this.state.radioSelected,\n      value: this.state.radioSelected,\n      onChange: e => this.onRadioBtnClick(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }), \"All Service Center\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, \"\\xA0\", /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      title: \"Search\",\n      onClick: () => this.filterData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 25\n      }\n    }, \" Search \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.arr,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      header: header,\n      totalRecords: this.state.arr.length,\n      exportFilename: \"Service Center Statement\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(ServiceCenterStatement);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Reports/ServiceCenterStatement.js"],"names":["React","Component","Select","api","moment","DatePicker","withTranslation","DataTable","Column","CommonConfig","Button","MultiSelect","Collapse","BTN","Input","Card","CardHeader","CardBody","Row","Col","APIConstant","Modal","ModalBody","ModalHeader","ModalFooter","toast","SearchBox","ServiceCenterStatement","constructor","props","getPageString","e","firstPage","first","l","rows","page","lastPage","state","arr","length","str","setState","selectedPage","rowsPerPage","handleChange","target","name","value","tillDate","tillDateError","show","columns","field","header","sortable","filter","id","style","columns1","LanguageId","i18n","language","cols","cols1","rowsPerPageOptions","dataTableConfig","globalFilter","searchCollapse","DebtorType","DebtorTypeError","agentinfo","agentinfoError","format","colOptions","col","push","label","colOptions1","export","bind","componentDidMount","getOrganazationData","DateDetails","rowData","RenewalDate","InceptionDate","getDropDownValues","stringMapType","setStateName","orderBy","data","stringmaptype","orderby","post","path","dropdownbycode","then","res","success","catch","err","error","servicecenterstatement","formattedData","dataLength","NetPremium","Levy","PaidAmount","Gross","AdminFeeAmount","AgentCommissionAmount","YCommissionAmount","i","tempData","console","log","AgentCode","AgentContactCode","AgentName","ClientName","PolicyNumber","RenewalOrInceptionDate","TransactionDate","TransactionType","Description","parseFloat","Premium","toFixed","PaymentAmount","AdminFee","TotalDue","Outstanding","AgentCommissionRate","DueDate","DayAfterDueDate","dt","exportCSV","filterData","radioSelected","selectType","type","onRadioBtnClick","checked","ContactType","OrganizationName","OrganizationId","sourceList","condition","errorField","message","document","getElementById","className","innerHTML","render","t","map","body","filterMatchMode","width","columnToggleIcon","position","onColumnToggle","marginRight","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport api from '../../utils/apiClient';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CommonConfig } from '../../utils/constants';\r\nimport { Button } from 'primereact/button';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Collapse, Button as BTN, Input, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport APIConstant from '../../utils/constants';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport SearchBox from 'react-google-maps/lib/components/places/SearchBox';\r\n\r\nclass ServiceCenterStatement extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 0, style: { 'width': '150px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 1, style: { 'width': '60px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 2, style: { 'width': '80px' } },\r\n            { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 3, style: { 'width': '80px' } },\r\n            { field: \"TransactionDate\", header: \"Transaction Date\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            { field: \"TransactionType\", header: \"Transaction Type\", sortable: true, filter: true, id: 5, style: { 'width': '90px' } },\r\n            { field: \"NetPremium\", header: \"Net Premium\", sortable: true, filter: true, id: 6, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Levy\", header: \"Levy\", sortable: true, filter: true, id: 7, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AdminFeeAmount\", header: \"Admin Fee\", sortable: true, filter: true, id: 8, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Gross\", header: \"Gross Amount\", sortable: true, filter: true, id: 9, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"YCommissionAmount\", header: \"Paid to Yachtsman\", sortable: true, filter: true, id: 12, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AgentCommissionAmount\", header: \"Service Center Commission\", sortable: true, filter: true, id: 13, style: { 'width': '60px', 'textAlign': 'right' } },\r\n\r\n            // { field: \"TotalDue\", header: \"Total Due\", sortable: true, filter: true, id: 10 ,style:{'width':'150px'}},\r\n            // { field: \"DueDate\", header: \"Due Date\", sortable: true, filter: true, id: 14 ,style:{'width':'150px'}},\r\n            // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}},\r\n\r\n            // { field: \"AgentCommissionRate\", header: \"Agent Commission Rate\", sortable: true, filter: true, id: 11 ,style:{'width':'150px'}},\r\n\r\n\r\n\r\n            // { field: \"DayAfterDueDate\", header: \"Day After Due Date\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}}\r\n        ];\r\n\r\n        let columns1 = [\r\n            { field: \"AgentName\", header: \"Service Center Name\", sortable: true, filter: true, id: 0, style: { 'width': '100px' } },\r\n            { field: \"AgentCode\", header: \"Service Center Code\", sortable: true, filter: true, id: 1, style: { 'width': '100px' } },\r\n            { field: \"ClientName\", header: \"Client\", sortable: true, filter: true, id: 2, style: { 'width': '150px' } },\r\n            { field: \"PolicyNumber\", header: \"Policy Number\", sortable: true, filter: true, id: 3, style: { 'width': '60px' } },\r\n            { field: \"RenewalDate\", header: \"Renewal Date\", sortable: true, filter: true, id: 4, style: { 'width': '80px' } },\r\n            { field: \"InceptionDate\", header: \"Inception Date\", sortable: true, filter: true, id: 5, style: { 'width': '80px' } },\r\n            { field: \"TransactionDate\", header: \"Transaction Date\", sortable: true, filter: true, id: 6, style: { 'width': '80px' } },\r\n            { field: \"TransactionType\", header: \"Transaction Type\", sortable: true, filter: true, id: 7, style: { 'width': '90px' } },\r\n            { field: \"NetPremium\", header: \"Net Premium\", sortable: true, filter: true, id: 8, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Levy\", header: \"Levy\", sortable: true, filter: true, id: 9, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AdminFeeAmount\", header: \"Admin Fee\", sortable: true, filter: true, id: 10, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"Gross\", header: \"Gross Amount\", sortable: true, filter: true, id: 11, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"YCommissionAmount\", header: \"Paid to Yachtsman\", sortable: true, filter: true, id: 12, style: { 'width': '60px', 'textAlign': 'right' } },\r\n            { field: \"AgentCommissionAmount\", header: \"Service Center Commission\", sortable: true, filter: true, id: 13, style: { 'width': '60px', 'textAlign': 'right' } },\r\n\r\n            // { field: \"TotalDue\", header: \"Total Due\", sortable: true, filter: true, id: 10 ,style:{'width':'150px'}},\r\n            // { field: \"DueDate\", header: \"Due Date\", sortable: true, filter: true, id: 14 ,style:{'width':'150px'}},\r\n            // { field: \"PaidAmount\", header: \"Paid Amount\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}},\r\n\r\n            // { field: \"AgentCommissionRate\", header: \"Agent Commission Rate\", sortable: true, filter: true, id: 11 ,style:{'width':'150px'}},\r\n\r\n\r\n\r\n            // { field: \"DayAfterDueDate\", header: \"Day After Due Date\", sortable: true, filter: true, id: 15 ,style:{'width':'150px'}}\r\n        ];\r\n\r\n        this.state = {\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            cols: columns,\r\n            cols1: columns1,\r\n            arr: [],\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            searchCollapse: false,\r\n\r\n            DebtorType: 'ServiceCenter',\r\n            // DebtorTypeList:[\r\n            //     {label:'',value:''}\r\n            // ],\r\n            DebtorTypeError: false,\r\n            agentinfo: '',\r\n            agentinfoError: false,\r\n            tillDate: moment().format(\"YYYY-MM\"),\r\n            tillDateError: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.colOptions1 = [];\r\n        for (let col of columns1) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.servicecenterstatement();\r\n        this.getOrganazationData('ServiceCenter');\r\n    }\r\n\r\n    DateDetails(rowData) {\r\n        return (\r\n            <div className=\"policy-list-data\">\r\n                <p>{rowData.RenewalDate}</p>\r\n                <p>{rowData.InceptionDate}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    getDropDownValues(stringMapType, setStateName, orderBy) {\r\n        try {\r\n            const data = {\r\n                stringmaptype: stringMapType,\r\n                orderby: orderBy\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    this.setState({ [setStateName]: res.data });\r\n                } else {\r\n                }\r\n            }).catch(err => {\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    servicecenterstatement() {\r\n        var data = {\r\n            DebtorType: this.state.DebtorType ? this.state.DebtorType : '',\r\n            agentinfo: this.state.agentinfo ? this.state.agentinfo : '',\r\n            tillDate: this.state.tillDate ? this.state.tillDate : ''\r\n        };\r\n        api.post('api/servicecenterstatement', data).then(res => {\r\n            if (res.success) {\r\n                var formattedData = [];\r\n                this.setState({\r\n                    selectedPage: 0\r\n                });\r\n                var dataLength = res.data[0].length;\r\n                if (dataLength > 0) {\r\n\r\n                    var NetPremium = 0;\r\n                    var Levy = 0;\r\n                    var PaidAmount = 0;\r\n                    var Gross = 0;\r\n                    var AdminFeeAmount = 0;\r\n                    var AgentCommissionAmount = 0;\r\n                    var YCommissionAmount = 0;\r\n\r\n                    for (let i = 0; i < dataLength; i++) {\r\n                        var tempData = res.data[0][i];\r\n                        console.log(\"tempData\", tempData);\r\n                        formattedData.push({\r\n                            AgentCode: tempData.AgentContactCode,\r\n                            AgentName: tempData.AgentName,\r\n                            ClientName: tempData.ClientName,\r\n                            PolicyNumber: tempData.PolicyNumber,\r\n                            RenewalOrInceptionDate: moment(tempData.RenewalOrInceptionDate).format('DD/MM/YYYY'),\r\n                            TransactionDate: moment(tempData.TransactionDate).format('DD/MM/YYYY'),\r\n                            TransactionType: tempData.Description,\r\n                            NetPremium: parseFloat(tempData.Premium ? tempData.Premium : 0).toFixed(2),\r\n                            Levy: parseFloat(tempData.Levy ? tempData.Levy : 0).toFixed(2),\r\n                            Gross: parseFloat(tempData.Gross ? tempData.Gross : 0).toFixed(2),\r\n                            InceptionDate: moment(tempData.InceptionDate).format('DD/MM/YYYY'),\r\n                            RenewalDate: moment(tempData.RenewalDate).format('DD/MM/YYYY'),\r\n                            PaidAmount: parseFloat(tempData.PaymentAmount ? tempData.PaymentAmount : 0).toFixed(2),\r\n                            AdminFeeAmount: parseFloat(tempData.AdminFee ? tempData.AdminFee : 0).toFixed(2),\r\n                            TotalDue: parseFloat(tempData.Outstanding ? tempData.Outstanding : 0).toFixed(2),\r\n                            AgentCommissionRate: parseFloat(tempData.AgentCommissionRate ? tempData.AgentCommissionRate : 0).toFixed(2),\r\n                            AgentCommissionAmount: parseFloat(tempData.AgentCommissionAmount ? tempData.AgentCommissionAmount : 0).toFixed(2),\r\n                            YCommissionAmount: parseFloat(tempData.YCommissionAmount ? tempData.YCommissionAmount : 0).toFixed(2),\r\n                            DueDate: moment(tempData.DueDate).format('DD/MM/YYYY'),\r\n                            DayAfterDueDate: tempData.DayAfterDueDate\r\n                        });\r\n                        NetPremium = NetPremium + tempData.Premium;\r\n                        Levy = Levy + tempData.Levy;\r\n                        PaidAmount = PaidAmount + tempData.PaymentAmount;\r\n                        Gross = Gross + tempData.Gross;\r\n                        AdminFeeAmount = AdminFeeAmount + tempData.AdminFee;\r\n                        AgentCommissionAmount = AgentCommissionAmount + tempData.AgentCommissionAmount;\r\n                        YCommissionAmount = YCommissionAmount + tempData.YCommissionAmount;\r\n                    }\r\n                    formattedData.push({\r\n                        ClientName: 'Total',\r\n                        Gross: parseFloat(Gross).toFixed(2),\r\n                        NetPremium: parseFloat(NetPremium).toFixed(2),\r\n                        Levy: parseFloat(Levy).toFixed(2),\r\n                        PaidAmount: parseFloat(PaidAmount).toFixed(2),\r\n                        AdminFeeAmount: parseFloat(AdminFeeAmount).toFixed(2),\r\n                        AgentCommissionAmount: parseFloat(AgentCommissionAmount).toFixed(2),\r\n                        YCommissionAmount: parseFloat(YCommissionAmount).toFixed(2)\r\n                    });\r\n                }\r\n\r\n                let firstPage = (formattedData.length) ? '1' : '0';\r\n                let lastPage = (this.state.rowsPerPage < formattedData.length) ? this.state.rowsPerPage : formattedData.length;\r\n                let str = firstPage + ' to ' + lastPage + ' out of ' + formattedData.length + ' records';\r\n                this.setState({ arr: formattedData, str: str });\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.arr.length) ? l : this.state.arr.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.arr.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    filterData() {\r\n        if (this.state.radioSelected || this.state.DebtorType == '' || this.state.agentinfo == '') {\r\n            toast.error(\"Select Service Center First\");\r\n        } else {\r\n            this.servicecenterstatement();\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n        if (e.target.name === 'tillDate') {\r\n            debugger;\r\n            this.setState({ tillDate: e.target.value, tillDateError: false });\r\n            this.show('tillDate', false, 'tillDateError', '');\r\n\r\n        }\r\n    }\r\n\r\n    selectType(value, type) {\r\n\r\n        if (type === 'DebtorType') {\r\n\r\n            this.setState({ DebtorTypeError: false, DebtorType: value });\r\n            this.show('DebtorType', false, \"DebtorTypeError\", \"\");\r\n            this.getOrganazationData(value)\r\n\r\n        }\r\n\r\n        if (type === 'agentinfo') {\r\n\r\n            this.setState({ agentinfo: value, radioSelected: false, DebtorType: 'ServiceCenter' });\r\n\r\n        }\r\n    }\r\n\r\n    onRadioBtnClick(e) {\r\n        this.setState({\r\n            radioSelected: e.target.checked,\r\n            agentinfo: ''\r\n        });\r\n        this.state.agentinfo = '';\r\n        this.servicecenterstatement();\r\n    }\r\n\r\n    getOrganazationData(ContactType) {\r\n        try {\r\n            let data = { ContactType: ContactType };\r\n            api.post('api/getOrganazationData', data).then(res => {\r\n                if (res.success) {\r\n                    var formattedData = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        formattedData.push({\r\n                            label: res.data[i].OrganizationName,\r\n                            value: res.data[i].OrganizationId,\r\n                        })\r\n                    }\r\n                    this.setState({ sourceList: formattedData });\r\n                } else {\r\n                    console.log('getOrganazationData_error');\r\n                }\r\n            }).catch(err => {\r\n                console.log('getOrganazationData', err);\r\n            });\r\n        } catch (error) {\r\n            console.log('getOrganazationData', error);\r\n        }\r\n    }\r\n\r\n    show(field, condition, errorField, message) {\r\n        if (condition) {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control is-invalid\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\r\n        } else {\r\n            if (document.getElementById(field))\r\n                document.getElementById(field).className = \"form-control\";\r\n\r\n            if (document.getElementById(errorField))\r\n                document.getElementById(errorField).innerHTML = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        var header = null;\r\n\r\n        let columns ='';\r\n         if(this.state.agentinfo == ''){\r\n              columns = this.state.cols1.map((col, i) => {\r\n                 return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n                 />;\r\n             });\r\n         }\r\n         else{\r\n             columns = this.state.cols.map((col, i) => {\r\n                return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} style={col.style}\r\n                />;\r\n            });\r\n         }   \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Service Center Statement</h1>\r\n\r\n                    <div className=\"input-box\" style={{ width: '20%' }}>\r\n                        <label>Select Service Center</label>\r\n                        <Select name=\"agentinfo\" id=\"agentinfo\" options={this.state.sourceList}\r\n                            value={this.state.agentinfo} onChange={(data) => this.selectType(data, 'agentinfo')}\r\n                        // placeholder={t(\"policyUnderwriting:Source.defaultValue\")}\r\n                        // disabled={this.state.sourceDisable == true ? true : false}\r\n                        />\r\n                    </div>\r\n                    <div>&nbsp;\r\n                        <label>\r\n                            <Input type=\"checkbox\" name=\"radioSelected\"\r\n                                checked={this.state.radioSelected}\r\n                                value={this.state.radioSelected}\r\n                                onChange={(e) => this.onRadioBtnClick(e)}\r\n                            />\r\n                         All Service Center\r\n                        </label>\r\n                    </div>\r\n                    <div>&nbsp;\r\n                        <BTN color=\"success\" title=\"Search\" onClick={() => this.filterData()}> Search </BTN>\r\n                    </div>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\" tooltipOptions={{ position: 'bottom' }}\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"input-box\" id=\"accordion\">\r\n                    <Card className=\"mb-0\">\r\n                        <CardHeader id=\"headingOne\">\r\n                            <BTN block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.setState({ custom: !this.state.custom })} aria-expanded={this.state.custom} aria-controls=\"collapseOne\">\r\n                                <h5 className=\"m-0 p-0\">\r\n                                    Search Service Center\r\n                        <i style={{ float: 'right' }} className={this.state.custom ? \"fa fa-chevron-down\" : \"fa fa-chevron-up\"}></i>\r\n                                </h5>\r\n                            </BTN>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={this.state.custom} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\r\n                            <CardBody>\r\n                                <div className=\"filter-data\">\r\n                                    <Row>\r\n                                        <Col md='3'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>DebtorType</label>\r\n                                                <Input type=\"select\" name=\"DebtorType\" id=\"DebtorType\" onChange={(e) => this.selectType(e.target.value, 'DebtorType')} value={this.state.DebtorType}>\r\n                                                    <option value=\"SubAgent\">Sub Agent</option>\r\n                                                    <option value=\"ServiceCenter\">Service Center</option>\r\n                                    }\r\n                                </Input>\r\n                                           </div>\r\n                                        </Col>\r\n                                        <Col md='2'>\r\n                                            <div className=\"input-box\">\r\n                                                <label>Till Date</label>\r\n                                                <Input disabled type=\"month\" id=\"tillDate\" name=\"tillDate\"\r\n                                                    value={this.state.tillDate}\r\n                                                    onChange={(e) => this.handleChange(e, 'tillDate')}\r\n                                                ></Input>\r\n                                           </div>\r\n                                        </Col>\r\n                                      \r\n                                    </Row>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Collapse>\r\n                    </Card>\r\n                </div> */}\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.arr} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} header={header} totalRecords={this.state.arr.length} exportFilename=\"Service Center Statement\"\r\n                        currentPageReportTemplate={this.state.str}\r\n                        scrollable={true}\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"expand\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation()(ServiceCenterStatement);\r\n"]},"metadata":{},"sourceType":"module"}