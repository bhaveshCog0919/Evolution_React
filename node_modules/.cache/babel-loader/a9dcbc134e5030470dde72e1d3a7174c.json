{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Apps/Email/Inbox/Inbox.js\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, Nav, NavItem, NavLink, FormGroup, Input, Col, ButtonDropdown, Table, DropdownToggle, DropdownMenu, DropdownItem, Badge, Button, ButtonGroup, Row } from 'reactstrap';\nimport APIConstant from '../../../../utils/constants';\nimport { CommonConfig } from '../../../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button as BTN } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport api from '../../../../utils/apiClient';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport moment from 'moment';\nimport { any } from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst simpleParser = require('mailparser').simpleParser;\n\nconst _ = require('lodash');\n\nclass Inbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelectedEmail = e => {\n      this.setState({\n        selectedEmail: e\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'tagValue') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            tagValue: ''\n          });\n        } else {\n          this.setState({\n            tagValue: e.target.value\n          });\n        }\n      }\n    };\n\n    let columns = [{\n      body: this.actionTemplate.bind(this),\n      style: {\n        width: '50px'\n      },\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      body: this.formatTags.bind(this),\n      field: \"TagsString\",\n      header: \"Tags\",\n      sortable: true,\n      filter: true,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      body: this.formatNameEmail.bind(this),\n      field: \"FromEmail\",\n      header: \"From\",\n      sortable: true,\n      filter: true,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      body: this.formatSubject.bind(this),\n      field: \"Subject\",\n      header: \"Subject\",\n      sortable: true,\n      filter: true,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      body: this.formatDate.bind(this),\n      field: \"CreatedOn\",\n      header: \"Date/Time\",\n      sortable: true,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 6\n    }];\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tagModel: false,\n      tagTypeArray: [],\n      tagType: '',\n      PolicyId: this.props.match.params.id,\n      tagValue: '',\n      tagsData: [],\n      editEmailData: '',\n      dropdownOpen: false,\n      emailList: [],\n      InboxCount: 0,\n      globalFilter: null,\n      cols: columns,\n      first: 1,\n      selectedEmail: [],\n      rows: 10,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage\n    };\n    this.getInbox();\n    this.getTagsDropDownValues();\n  }\n\n  addTag(rowData) {\n    if (rowData.Tags != undefined) {\n      for (let index = 0; index < rowData.Tags.length; index++) {\n        this.state.tagsData.push({\n          \"TagType\": rowData.Tags[index].TagName,\n          \"TagValue\": rowData.Tags[index].Value\n        });\n      }\n    }\n\n    this.setState({\n      editEmailData: rowData,\n      tagModel: true,\n      tagType: '',\n      tagName: '',\n      tagValue: ''\n    });\n  }\n\n  removeTagTemp(index) {\n    try {\n      this.state.tagsData.splice(index, 1);\n      var data = {\n        delete: true,\n        Tags: this.state.tagsData[index],\n        EmailUID: this.state.editEmailData.EmailUID\n      };\n      api.post(APIConstant.path.addUpdateTags, data, true).then(res => {\n        if (res.data.success) {\n          toast.success(res.data.msg);\n        }\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\");\n    }\n  }\n\n  submitTags() {\n    try {\n      this.state.tagsData.push({\n        \"TagType\": this.state.tagType,\n        \"TagValue\": this.state.tagValue\n      });\n      var data = {\n        delete: false,\n        Tags: {\n          \"TagType\": this.state.tagType,\n          \"TagValue\": this.state.tagValue\n        },\n        EmailUID: this.state.editEmailData.EmailUID\n      };\n      api.post(APIConstant.path.addUpdateTags, data, true).then(res => {\n        if (res.data.success) {\n          this.state.tagType = \"\";\n          this.state.tagValue = \"\";\n          toast.success(res.data.msg);\n        } else {\n          toast.error(res.data.msg);\n        }\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  formatTags(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, rowData.TagsString), /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addTag(rowData),\n      className: 'mr-1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-plus\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 87\n      }\n    })));\n  }\n\n  getTagsDropDownValues() {\n    try {\n      const data = {\n        stringmaptype: \"EMAILTAG\",\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({\n            tagTypeArray: res.data\n          });\n        } else {}\n      }).catch(err => {});\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  onPage(event) {\n    let firstPage = event.first + 1;\n    let l = event.rows * (event.page + 1);\n    let lastPage = l < this.state.emailList.length ? l : this.state.emailList.length;\n    var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.emailList.length + ' records';\n    this.setState({\n      selectedPage: event.first,\n      str: str,\n      rowsPerPage: event.rows\n    });\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      type: \"button\",\n      icon: \"pi pi-eye\",\n      className: \"p-button-warning\",\n      onClick: () => this.openDetail(rowData),\n      style: {\n        marginRight: '.5em'\n      },\n      tooltip: \"View\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }), rowData.IsImportant.data[0] == 1 ? /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag(rowData, \"FLAGGED\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 126\n      }\n    })) : /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag(rowData, \"FLAGGED\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 174\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-star-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 258\n      }\n    })), rowData.IsViewed.data[0] == 1 ? /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag(rowData, \"SEEN\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-envelope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 120\n      }\n    })) : /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag(rowData, \"SEEN\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 172\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-envelope-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 253\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.deleteMessage(rowData),\n      className: 'mr-1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-trash-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 92\n      }\n    })));\n  }\n\n  formatDate(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, moment(rowData.CreatedOn).format(CommonConfig.dateFormat.dbDateTime)));\n  }\n\n  formatSubject(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, rowData.Subject, \" \", rowData.AttachCount > 0 ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-paperclip\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 57\n      }\n    }, \"(\", rowData.AttachCount, \")\") : null));\n  }\n\n  formatNameEmail(rowData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"policy-list-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, rowData.FromName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, rowData.FromEmail));\n  }\n\n  deleteMessage(emails) {\n    let data = {};\n\n    if (emails == '') {\n      let UIDData = this.state.selectedEmail.map(data => {\n        return String(data.EmailUID);\n      });\n      data = {\n        \"uid\": UIDData,\n        \"boxName\": \"INBOX\",\n        \"searchType\": \"ALL\"\n      };\n    } else {\n      data = {\n        \"uid\": [emails.EmailUID],\n        \"boxName\": \"INBOX\",\n        \"searchType\": \"ALL\"\n      };\n    }\n\n    api.post(APIConstant.path.deleteMessage, data).then(res => {\n      if (res.success) {\n        this.getInbox();\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  addRemoveFlag(emails, FlagName, remove) {\n    let data = {};\n\n    if (emails == '') {\n      let UIDData = this.state.selectedEmail.map(data => {\n        return String(data.EmailUID);\n      });\n      data = {\n        \"uid\": UIDData,\n        \"boxName\": \"INBOX\",\n        \"flagname\": FlagName,\n        \"remove\": remove\n      };\n    } else {\n      data = {\n        \"uid\": [emails.EmailUID],\n        \"boxName\": \"INBOX\",\n        \"flagname\": FlagName,\n        \"remove\": remove\n      };\n    }\n\n    api.post(APIConstant.path.addRemoveFlag, data).then(res => {\n      if (res.success) {\n        this.getInbox();\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getInbox() {\n    let data = {\n      \"boxName\": \"Inbox\",\n      \"searchType\": \"ALL\",\n      \"PolicyId\": this.state.PolicyId\n    };\n    api.post(APIConstant.path.allEmail, data).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        this.setState({\n          emailList: res.data,\n          selectedEmail: []\n        });\n        let count = this.state.emailList.filter(item => {\n          if (item.IsViewed.data[0] == 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }).length;\n        this.setState({\n          InboxCount: count\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  selectType(value, type) {\n    //need to select template\n    if (type === 'tagType') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({\n          tagType: ''\n        });\n      } else {\n        this.setState({\n          tagType: value\n        });\n      }\n    }\n  }\n\n  openDetail(item) {\n    this.props.history.push({\n      pathname: '/apps/email/message',\n      state: {\n        email: item,\n        InboxCount: this.state.InboxCount\n      }\n    });\n  }\n\n  rowClass(data) {\n    return {\n      'row-accessories': data.IsViewed.data[0] === 0\n    };\n  }\n\n  render() {\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email-app mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#/apps/email/compose\",\n      className: \"btn btn-danger btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, \"New Email\"), /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      href: \"#/apps/email/inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 52\n      }\n    }), \" Inbox \", /*#__PURE__*/React.createElement(Badge, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 90\n      }\n    }, this.state.InboxCount))), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      href: \"#/apps/email/sent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 51\n      }\n    }), \" Sent \")))), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      className: 'mr-1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag('', \"FLAGGED\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 94\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag('', \"FLAGGED\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-star-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 93\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag('', \"SEEN\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-envelope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 91\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.addRemoveFlag('', \"SEEN\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-envelope-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 90\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"light\",\n      onClick: () => this.deleteMessage(''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-trash-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 76\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-input-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.emailList,\n      rowClassName: this.rowClass,\n      first: this.state.selectedPage,\n      onPage: e => this.onPage(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.emailList.length,\n      selection: this.state.selectedEmail,\n      onSelectionChange: e => this.setSelectedEmail(e.value),\n      exportFilename: \"Email List\",\n      currentPageReportTemplate: this.state.str,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      selectionMode: \"multiple\",\n      style: {\n        width: '3em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }), columns)))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.tagModel,\n      className: 'modal-lg',\n      style: {\n        maxWidth: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: () => this.setState({\n        tagModel: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, \" Tags \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, \"Email Subject#: \", this.state.editEmailData.Subject)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, \"Date: \", moment(this.state.editEmailData.CreatedOn).format(CommonConfig.dateFormat.forDatePicker)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"tagType\",\n      id: \"tagType\",\n      value: this.state.tagType,\n      onChange: e => this.selectType(e.target.value, 'tagType'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, \"Select Tag Type\"), this.state.tagTypeArray.map((tagType, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: tagType.StringMapKey,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 31\n        }\n      }, tagType.StringMapName);\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"tagValue\",\n      id: \"tagValue\",\n      value: this.state.tagValue,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.submitTags(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, this.state.tagsData.length, \" Tags \"), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    }, \"Tag Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 23\n      }\n    }, \"Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 19\n      }\n    }, this.state.tagsData.map((tagData, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }\n      }, tagData.TagType), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 25\n        }\n      }, tagData.TagValue), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"light\",\n        onClick: () => this.removeTagTemp(i),\n        className: 'mr-1',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fa fa-trash-o\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 127\n        }\n      }))));\n    }))))))));\n  }\n\n}\n\nexport default Inbox;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Apps/Email/Inbox/Inbox.js"],"names":["React","Component","Modal","ModalHeader","ModalBody","Nav","NavItem","NavLink","FormGroup","Input","Col","ButtonDropdown","Table","DropdownToggle","DropdownMenu","DropdownItem","Badge","Button","ButtonGroup","Row","APIConstant","CommonConfig","BTN","InputText","api","DataTable","Column","moment","any","toast","simpleParser","require","_","Inbox","constructor","props","setSelectedEmail","e","setState","selectedEmail","handleChange","target","name","value","tagValue","columns","body","actionTemplate","bind","style","width","header","sortable","filter","filterMatchMode","id","formatTags","field","formatNameEmail","formatSubject","formatDate","toggle","state","tagModel","tagTypeArray","tagType","PolicyId","match","params","tagsData","editEmailData","dropdownOpen","emailList","InboxCount","globalFilter","cols","first","rows","rowsPerPageOptions","dataTableConfig","rowsPerPage","getInbox","getTagsDropDownValues","addTag","rowData","Tags","undefined","index","length","push","TagName","Value","tagName","removeTagTemp","splice","data","delete","EmailUID","post","path","addUpdateTags","then","res","success","msg","catch","err","error","console","log","submitTags","TagsString","stringmaptype","orderby","dropdownbycode","onPage","event","firstPage","l","page","lastPage","str","selectedPage","column","openDetail","marginRight","position","IsImportant","addRemoveFlag","IsViewed","deleteMessage","CreatedOn","format","dateFormat","dbDateTime","Subject","AttachCount","FromName","FromEmail","emails","UIDData","map","String","FlagName","remove","allEmail","count","item","selectType","type","history","pathname","email","rowClass","render","col","i","el","dt","maxWidth","forDatePicker","StringMapKey","StringMapName","tagData","TagType","TagValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, Nav, NavItem, NavLink, FormGroup, Input, Col, ButtonDropdown, Table, DropdownToggle, DropdownMenu, DropdownItem, Badge, Button, ButtonGroup, Row } from 'reactstrap';\nimport APIConstant from '../../../../utils/constants';\nimport { CommonConfig } from '../../../../utils/constants';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button as BTN } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport api from '../../../../utils/apiClient';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport moment from 'moment';\nimport { any } from 'prop-types';\nimport { toast } from 'react-toastify';\nconst simpleParser = require('mailparser').simpleParser;\nconst _ = require('lodash');\n\nclass Inbox extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let columns = [\n      { body: this.actionTemplate.bind(this), style: { width: '50px' }, header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains', id: 0 },\n      { body: this.formatTags.bind(this), field: \"TagsString\", header: \"Tags\", sortable: true, filter: true, filter: false, filterMatchMode: 'contains', id: 3 },\n      { body: this.formatNameEmail.bind(this), field: \"FromEmail\", header: \"From\", sortable: true, filter: true, filter: false, filterMatchMode: 'contains', id: 3 },\n      { body: this.formatSubject.bind(this), field: \"Subject\", header: \"Subject\", sortable: true, filter: true, filter: false, filterMatchMode: 'contains', id: 5 },\n      { body: this.formatDate.bind(this), field: \"CreatedOn\", header: \"Date/Time\", sortable: true, filter: false, filterMatchMode: 'contains', id: 6 },\n    ];\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tagModel: false,\n      tagTypeArray: [],\n      tagType: '',\n      PolicyId:this.props.match.params.id,\n      tagValue: '',\n      tagsData: [],\n      editEmailData: '',\n      dropdownOpen: false,\n      emailList: [],\n      InboxCount: 0,\n      globalFilter: null,\n      cols: columns,\n      first: 1,\n      selectedEmail: [],\n      rows: 10,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n    };\n    \n    this.getInbox()\n    this.getTagsDropDownValues()\n  }\n\n  setSelectedEmail = (e) => {\n    this.setState({ selectedEmail: e })\n  }\n\n  addTag(rowData) {\n    if (rowData.Tags != undefined) {\n      for (let index = 0; index < rowData.Tags.length; index++) {\n        this.state.tagsData.push({\"TagType\":rowData.Tags[index].TagName,\"TagValue\":rowData.Tags[index].Value})\n      }\n    }\n    this.setState({\n      editEmailData: rowData, tagModel: true, tagType: '', tagName: '',\n      tagValue: ''\n    })\n  }\n\n  removeTagTemp(index) {\n    try {\n      this.state.tagsData.splice(index, 1)\n      var data = {\n        delete: true,\n        Tags: this.state.tagsData[index],\n        EmailUID: this.state.editEmailData.EmailUID\n      }\n      api.post(APIConstant.path.addUpdateTags, data,true).then(res => {\n        if (res.data.success) {\n          toast.success(res.data.msg);\n        }\n      }).catch(err => {\n      });\n    } catch (error) {\n      console.log(\"error...\",)\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    if (e.target.name === 'tagValue') {\n      if (e.target.value === '' || e.target.value === null) {\n        this.setState({ tagValue: '' });\n      } else {\n        this.setState({ tagValue: e.target.value });\n      }\n    }\n  }\n\n  submitTags() {\n    try {\n      this.state.tagsData.push({\"TagType\":this.state.tagType,\"TagValue\":this.state.tagValue})\n      var data = {\n        delete: false,\n        Tags: {\"TagType\":this.state.tagType,\"TagValue\":this.state.tagValue},\n        EmailUID: this.state.editEmailData.EmailUID\n      }\n      api.post(APIConstant.path.addUpdateTags, data,true).then(res => {\n        if (res.data.success) {\n          this.state.tagType = \"\"\n          this.state.tagValue = \"\"\n          toast.success(res.data.msg);\n        } else {\n          toast.error(res.data.msg);\n        }\n      }).catch(err => {\n      });\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  formatTags(rowData) {\n    return (\n      <div className=\"policy-list-data\">\n        <p>{rowData.TagsString}</p>\n        <Button color=\"light\" onClick={() => this.addTag(rowData)} className={'mr-1'}><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>\n      </div>\n    )\n  }\n\n  getTagsDropDownValues() {\n    try {\n      const data = {\n        stringmaptype: \"EMAILTAG\",\n        orderby: 'sortorder'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          this.setState({ tagTypeArray: res.data });\n        } else {\n        }\n      }).catch(err => {\n      });\n    } catch (error) {\n      console.log(\"error...\", error);\n    }\n  }\n\n  onPage(event) {\n    let firstPage = event.first + 1;\n    let l = event.rows * (event.page + 1);\n    let lastPage = (l < this.state.emailList.length) ? l : this.state.emailList.length\n    var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.emailList.length + ' records';\n    this.setState({ selectedPage: event.first, str: str, rowsPerPage: event.rows });\n  }\n\n  actionTemplate(rowData, column) {\n    return <div className=\"policy-list-data\">\n      <BTN type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.openDetail(rowData)}\n        style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\n      </BTN>\n      {rowData.IsImportant.data[0] == 1 ? <Button color=\"light\" onClick={() => this.addRemoveFlag(rowData, \"FLAGGED\", true)}><span className=\"fa fa-star\"></span></Button> : <Button color=\"light\" onClick={() => this.addRemoveFlag(rowData, \"FLAGGED\", false)}><span className=\"fa fa-star-o\"></span></Button>}\n      {rowData.IsViewed.data[0] == 1 ? <Button color=\"light\" onClick={() => this.addRemoveFlag(rowData, \"SEEN\", true)}><span className=\"fa fa-envelope\"></span></Button> : <Button color=\"light\" onClick={() => this.addRemoveFlag(rowData, \"SEEN\", false)}><span className=\"fa fa-envelope-o\"></span></Button>}\n      <Button color=\"light\" onClick={() => this.deleteMessage(rowData)} className={'mr-1'}><span className=\"fa fa-trash-o\"></span></Button>\n    </div>;\n  }\n\n  formatDate(rowData) {\n    return (\n      <div className=\"policy-list-data\">\n        <p>{moment(rowData.CreatedOn).format(CommonConfig.dateFormat.dbDateTime)}</p>\n      </div>\n    )\n  }\n\n  formatSubject(rowData) {\n    return (\n      <div className=\"policy-list-data\">\n        <p>{rowData.Subject} {rowData.AttachCount > 0 ? <i class=\"fa fa-paperclip\" aria-hidden=\"true\">({rowData.AttachCount})</i> : (null)}</p>\n      </div>\n    )\n  }\n\n  formatNameEmail(rowData) {\n    return (\n      <div className=\"policy-list-data\">\n        <p>{rowData.FromName}</p>\n        <p>{rowData.FromEmail}</p>\n      </div>\n    )\n  }\n\n  deleteMessage(emails) {\n    let data = {}\n    if (emails == ''){\n      let UIDData =  this.state.selectedEmail\n                    .map((data) => {\n                        return String(data.EmailUID)\n                    })\n      data = {\n        \"uid\": UIDData,\n        \"boxName\": \"INBOX\",\n        \"searchType\": \"ALL\"\n      }\n    } else {\n      data = {\n        \"uid\": [emails.EmailUID],\n        \"boxName\": \"INBOX\",\n        \"searchType\": \"ALL\"\n      }\n    }\n    api.post(APIConstant.path.deleteMessage, data).then(res => {\n      if (res.success) {\n        this.getInbox()\n      }\n\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n\n  addRemoveFlag(emails, FlagName, remove) {\n    let data = {}\n    if (emails == ''){\n      let UIDData =  this.state.selectedEmail\n                    .map((data) => {\n                        return String(data.EmailUID)\n                    })\n      data = {\n        \"uid\": UIDData,\n        \"boxName\": \"INBOX\",\n        \"flagname\": FlagName,\n        \"remove\": remove\n      }\n    } else {\n      data = {\n        \"uid\": [emails.EmailUID],\n        \"boxName\": \"INBOX\",\n        \"flagname\": FlagName,\n        \"remove\": remove\n      }\n    }\n    api.post(APIConstant.path.addRemoveFlag, data).then(res => {\n      if (res.success) {\n        this.getInbox()\n      }\n\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n\n  getInbox() {\n    let data = {\n      \"boxName\": \"Inbox\",\n      \"searchType\": \"ALL\",\n      \"PolicyId\":this.state.PolicyId\n    }\n    api.post(APIConstant.path.allEmail, data).then(res => {\n      console.log(res)\n      if (res.success) {\n        this.setState({ emailList: res.data ,selectedEmail:[]});\n        let count = this.state.emailList.filter((item) => {\n          if (item.IsViewed.data[0] == 0) {\n            return true\n          } else {\n            return false\n          }\n        }).length\n        this.setState({ InboxCount: count })\n      }\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  selectType(value, type) {\n    //need to select template\n    if (type === 'tagType') {\n      if (value === '' || value === undefined || value === null) {\n        this.setState({ tagType: '' });\n      } else {\n        this.setState({ tagType: value });\n      }\n    }\n  }\n\n  openDetail(item) {\n    this.props.history.push({\n      pathname: '/apps/email/message',\n      state: {\n        email: item,\n        InboxCount: this.state.InboxCount\n      }\n    });\n  }\n\n  rowClass(data) {\n    return {\n      'row-accessories': data.IsViewed.data[0] === 0\n    }\n  }\n\n  render() {\n\n    let columns = this.state.cols.map((col, i) => {\n      return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode={col.filterMatchMode} />;\n    });\n\n    return (\n      <div className=\"animated fadeIn\">\n        <div className=\"email-app mb-4\">\n          <nav>\n            <a href=\"#/apps/email/compose\" className=\"btn btn-danger btn-block\">New Email</a>\n            <Nav>\n              <NavItem>\n                <NavLink href=\"#/apps/email/inbox\"><i className=\"fa fa-inbox\"></i> Inbox <Badge color=\"danger\">{this.state.InboxCount}</Badge></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#/apps/email/sent\"><i className=\"fa fa-inbox\"></i> Sent </NavLink>\n              </NavItem>\n            </Nav>\n          </nav>\n          <main className=\"inbox\">\n            <div className=\"toolbar\">\n              {/* {this.state.selectedEmail.length > 0 ?  */}\n              <ButtonGroup className={'mr-1'}>\n              <Button color=\"light\" onClick={() => this.addRemoveFlag('', \"FLAGGED\", false)}><span className=\"fa fa-star\"></span></Button> \n              <Button color=\"light\" onClick={() => this.addRemoveFlag('', \"FLAGGED\", true)}><span className=\"fa fa-star-o\"></span></Button>\n              <Button color=\"light\" onClick={() => this.addRemoveFlag('', \"SEEN\", false)}><span className=\"fa fa-envelope\"></span></Button> \n              <Button color=\"light\" onClick={() => this.addRemoveFlag('', \"SEEN\", true)}><span className=\"fa fa-envelope-o\"></span></Button>\n              <Button color=\"light\" onClick={() => this.deleteMessage('')}><span className=\"fa fa-trash-o\"></span></Button>\n              </ButtonGroup>\n              <div className=\"group float-right\">\n                <span className=\"p-input-icon-left\">\n                  <i className=\"pi pi-search\" />\n                  <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" />\n                </span>\n              </div>\n            </div>\n            <ul className=\"messages\">\n              <DataTable\n                ref={(el) => this.dt = el}\n                value={this.state.emailList}\n                rowClassName={this.rowClass}\n                first={this.state.selectedPage}\n                onPage={(e) => this.onPage(e)}\n                paginator={true}\n                rows={this.state.rowsPerPage}\n                totalRecords={this.state.emailList.length}\n                selection={this.state.selectedEmail}\n                onSelectionChange={e => this.setSelectedEmail(e.value)}\n                exportFilename=\"Email List\"\n                currentPageReportTemplate={this.state.str}\n                paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                rowsPerPageOptions={this.state.rowsPerPageOptions}\n                globalFilter={this.state.globalFilter}\n                emptyMessage=\"No records found\"\n                responsive={true}\n                resizableColumns={true}\n                columnResizeMode=\"fit\"\n                scrollable={true}\n                scrollHeight=\"340px\">\n                <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\n                {columns}\n              </DataTable>\n            </ul>\n          </main>\n        </div>\n        <Modal isOpen={this.state.tagModel} className={'modal-lg'} style={{ maxWidth: '70%' }}>\n          <ModalHeader toggle={() => this.setState({ tagModel: false })}> Tags </ModalHeader>\n          <ModalBody>\n            <Row>\n              <Col md=\"6\">\n                <span>Email Subject#: {this.state.editEmailData.Subject}</span>\n              </Col>\n              <Col md=\"6\">\n                <span>Date: {moment(this.state.editEmailData.CreatedOn).format(CommonConfig.dateFormat.forDatePicker)}</span>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"3\">\n                <div className=\"input-box\">\n                  <Input type=\"select\" name=\"tagType\" id=\"tagType\" value={this.state.tagType} onChange={(e) => this.selectType(e.target.value, 'tagType')}>\n                    <option value=\"\">Select Tag Type</option>\n                    {this.state.tagTypeArray.map((tagType, i) => {\n                      return (<option value={tagType.StringMapKey} key={i}>{tagType.StringMapName}</option>)\n                    })\n                    }\n                  </Input>\n                </div>\n              </Col>\n              <Col md=\"3\">\n                <div className=\"input-box\">\n                  <Input type=\"text\" name=\"tagValue\" id=\"tagValue\"\n                    value={this.state.tagValue}\n                    onChange={(e) => this.handleChange(e)} />\n                </div>\n              </Col>\n              <Col md=\"3\">\n                <Button color=\"success\" onClick={() => this.submitTags()}>Add</Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"7\">\n                <span>{this.state.tagsData.length} Tags </span>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th className=\"center\">Tag Name</th>\n                      <th className=\"center\">Value</th>\n                      <th className=\"center\"></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.tagsData.map((tagData,i)=> {\n                      return (<tr>\n                        <td className=\"center\">{tagData.TagType}</td>\n                        <td className=\"center\">{tagData.TagValue}</td>\n                        <td className=\"center\"><Button color=\"light\" onClick={() => this.removeTagTemp(i)} className={'mr-1'}><span className=\"fa fa-trash-o\"></span></Button></td>\n                      </tr>)\n                    })\n                    }\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default Inbox;\n"]},"metadata":{},"sourceType":"module"}