{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/Levy/LevyHistory.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Button } from 'primereact/button';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN, InputGroup } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport { CommonConfig } from '../../../utils/constants';\nimport moment from 'moment';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport APIConstant from '../../../utils/constants';\n\nclass LevyHistory extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      t\n    } = props;\n    let columns = [{\n      field: \"country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      field: \"type\",\n      header: \"Type\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 1\n    }, {\n      field: \"rate1\",\n      header: \"Rate1\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 2\n    }, {\n      field: \"rateBasis1\",\n      header: \"RateBasis1\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 3\n    }, {\n      field: \"rate2\",\n      header: \"Rate2\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 4\n    }, {\n      field: \"rateBasis2\",\n      header: \"RateBasis2\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 5\n    }, {\n      field: \"amountInEUR\",\n      header: \"AmountInEUR\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }, {\n      field: \"amountInGBP\",\n      header: \"AmountInGBP\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 7\n    }, {\n      field: \"effectiveDate\",\n      header: \"Effective Date\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 6\n    }];\n    this.state = {\n      LevyId: '',\n      country: '',\n      countryarr: [],\n      countryError: true,\n      type: '',\n      typeError: true,\n      typearr: [],\n      rate1: '',\n      rate1Error: true,\n      rateBasis1: '',\n      rateBasis1arr: [],\n      rateBasis1Error: true,\n      rate2: '',\n      rate2Error: true,\n      rateBasis2: '',\n      rateBasis2arr: [],\n      rateBasis2Error: true,\n      amountInEUR: '',\n      amountInEURError: true,\n      amountInGBP: '',\n      amountInGBPError: true,\n      effectivedate: 'Effective Date',\n      effectiveDate: moment().format('YYYY-MM-DD'),\n      effectiveDateError: true,\n      heading: 'Add',\n      buttonName: 'Save',\n      toastName: 'Saved',\n      toggleModal: false,\n      cols: columns,\n      LevyList: [],\n      rowData: '',\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      str: '',\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      primary: false\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this); // this.actionTemplate = this.actionTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('this.props', this.props);\n\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.getLevyHistory(this.props.match.params.Id);\n    }\n  }\n\n  getLevyHistory(Id) {\n    var dataToSent = {\n      LevyId: Id\n    };\n    api.post('api/getLevyHistory', dataToSent).then(res => {\n      console.log('getLevyHistory', res);\n      var formattedArr = [];\n\n      for (var i = 0; i < res.data.length; i++) {\n        formattedArr.push({\n          LevyId: res.data[i].LevyId,\n          country: res.data[i].Country,\n          type: res.data[i].Type,\n          rate1: res.data[i].Rate1,\n          rateBasis1: res.data[i].RateBasis1,\n          rate2: res.data[i].Rate2,\n          rateBasis2: res.data[i].RateBasis2,\n          amountInEUR: res.data[i].AmountEUR,\n          amountInGBP: res.data[i].AmountGBP,\n          effectiveDate: CommonConfig.isEmpty(res.data[i].StartDate) ? '' : moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker)\n        });\n      }\n\n      console.log('formattedArr', formattedArr);\n      this.setState({\n        LevyList: formattedArr\n      });\n    });\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    const {\n      t\n    } = this.props;\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Vessel Class History\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.LevyList,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.LevyList.length,\n      exportFilename: t(\"masterLevy:LevyList\"),\n      currentPageReportTemplate: this.state.str // scrollable={true} scrollHeight=\"250px\"\n      ,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: t(\"translation:NoRecordsMsg\"),\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\",\n      scrollable: true,\n      scrollHeight: \"340px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, columns)));\n  }\n\n}\n\nexport default withTranslation()(LevyHistory);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/Levy/LevyHistory.js"],"names":["React","Component","DataTable","Column","toast","Button","Modal","ModalBody","ModalFooter","ModalHeader","Col","Row","Input","BTN","InputGroup","api","CommonConfig","moment","useTranslation","withTranslation","Trans","APIConstant","LevyHistory","constructor","props","t","columns","field","header","sortable","filter","filterMatchMode","id","state","LevyId","country","countryarr","countryError","type","typeError","typearr","rate1","rate1Error","rateBasis1","rateBasis1arr","rateBasis1Error","rate2","rate2Error","rateBasis2","rateBasis2arr","rateBasis2Error","amountInEUR","amountInEURError","amountInGBP","amountInGBPError","effectivedate","effectiveDate","format","effectiveDateError","heading","buttonName","toastName","toggleModal","cols","LevyList","rowData","LanguageId","i18n","language","selectedPage","rowsPerPageOptions","dataTableConfig","str","rowsPerPage","globalFilter","primary","colOptions","col","push","label","value","onColumnToggle","bind","componentDidMount","console","log","match","params","Object","keys","length","getLevyHistory","Id","dataToSent","post","then","res","formattedArr","i","data","Country","Type","Rate1","RateBasis1","Rate2","RateBasis2","AmountEUR","AmountGBP","isEmpty","StartDate","dateFormat","forDatePicker","setState","event","valueInOrder","sort","x","y","show","condition","document","getElementById","className","render","map","body","el","dt","e","getPageString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Button } from 'primereact/button';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Col, Row, Input, Button as BTN, InputGroup } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport { CommonConfig } from '../../../utils/constants';\r\nimport moment from 'moment';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport APIConstant from '../../../utils/constants';\r\n\r\nclass LevyHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { t } = props;\r\n        let columns = [\r\n            { field: \"country\", header: \"Country\", sortable: true, filter: true, filterMatchMode: 'contains', id: 0 },\r\n            { field: \"type\", header: \"Type\", sortable: true, filter: true, filterMatchMode: 'contains', id: 1 },\r\n            { field: \"rate1\", header: \"Rate1\", sortable: true, filter: true, filterMatchMode: 'contains', id: 2 },\r\n            { field: \"rateBasis1\", header: \"RateBasis1\", sortable: true, filter: true, filterMatchMode: 'contains', id: 3 },\r\n            { field: \"rate2\", header: \"Rate2\", sortable: true, filter: true, filterMatchMode: 'contains', id: 4 },\r\n            { field: \"rateBasis2\", header: \"RateBasis2\", sortable: true, filter: true, filterMatchMode: 'contains', id: 5 },\r\n            { field: \"amountInEUR\", header: \"AmountInEUR\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n            { field: \"amountInGBP\", header: \"AmountInGBP\", sortable: true, filter: true, filterMatchMode: 'contains', id: 7 },\r\n            { field: \"effectiveDate\", header: \"Effective Date\", sortable: true, filter: true, filterMatchMode: 'contains', id: 6 },\r\n        ];\r\n\r\n        this.state = {\r\n            LevyId: '',\r\n            country: '',\r\n            countryarr: [],\r\n            countryError: true,\r\n            type: '',\r\n            typeError: true,\r\n            typearr: [],\r\n            rate1: '',\r\n            rate1Error: true,\r\n            rateBasis1: '',\r\n            rateBasis1arr: [],\r\n            rateBasis1Error: true,\r\n            rate2: '',\r\n            rate2Error: true,\r\n            rateBasis2: '',\r\n            rateBasis2arr: [],\r\n            rateBasis2Error: true,\r\n            amountInEUR: '',\r\n            amountInEURError: true,\r\n            amountInGBP: '',\r\n            amountInGBPError: true,\r\n            effectivedate: 'Effective Date',\r\n            effectiveDate: moment().format('YYYY-MM-DD'),\r\n            effectiveDateError: true,\r\n            heading: 'Add',\r\n            buttonName: 'Save',\r\n            toastName: 'Saved',\r\n            toggleModal: false,\r\n            cols: columns,\r\n            LevyList: [],\r\n            rowData: '',\r\n            LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n            selectedPage: 0,\r\n            rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n            str: '',\r\n            rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n            globalFilter: null,\r\n            primary: false,\r\n        };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        // this.actionTemplate = this.actionTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('this.props',this.props);\r\n        \r\n        if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n            this.getLevyHistory(this.props.match.params.Id)\r\n        }\r\n    }\r\n\r\n    getLevyHistory(Id) {\r\n        var dataToSent = {\r\n            LevyId: Id,\r\n        }\r\n        api.post('api/getLevyHistory', dataToSent).then(res => {\r\n            console.log('getLevyHistory', res);\r\n            var formattedArr = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n                formattedArr.push({\r\n                    LevyId: res.data[i].LevyId,\r\n                    country: res.data[i].Country,\r\n                    type: res.data[i].Type,\r\n                    rate1: res.data[i].Rate1,\r\n                    rateBasis1: res.data[i].RateBasis1,\r\n                    rate2: res.data[i].Rate2,\r\n                    rateBasis2: res.data[i].RateBasis2,\r\n                    amountInEUR: res.data[i].AmountEUR,\r\n                    amountInGBP: res.data[i].AmountGBP,\r\n                    effectiveDate: CommonConfig.isEmpty(res.data[i].StartDate) ? '' : moment(res.data[i].StartDate).format(CommonConfig.dateFormat.forDatePicker),\r\n                });\r\n            }\r\n            console.log('formattedArr',formattedArr);            \r\n            this.setState({ LevyList: formattedArr })\r\n        })\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    show(field, condition) {\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter} filterMatchMode=\"contains\" />;\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <h1>Vessel Class History</h1>\r\n                </div>\r\n\r\n                <div className=\"table-custom\">\r\n                    <DataTable\r\n                        ref={(el) => this.dt = el}\r\n                        value={this.state.LevyList}\r\n                        first={this.state.selectedPage}\r\n                        onPage={(e) => this.getPageString(e)}\r\n                        paginator={true}\r\n                        rows={this.state.rowsPerPage}\r\n                        totalRecords={this.state.LevyList.length}\r\n                        exportFilename={t(\"masterLevy:LevyList\")}\r\n                        currentPageReportTemplate={this.state.str}\r\n                        // scrollable={true} scrollHeight=\"250px\"\r\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions}\r\n                        globalFilter={this.state.globalFilter}\r\n                        emptyMessage={t(\"translation:NoRecordsMsg\")}\r\n                        responsive={true}\r\n                        resizableColumns={true}\r\n                        columnResizeMode=\"fit\"\r\n                        scrollable={true}\r\n                        scrollHeight=\"340px\">\r\n                        {columns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LevyHistory);"]},"metadata":{},"sourceType":"module"}