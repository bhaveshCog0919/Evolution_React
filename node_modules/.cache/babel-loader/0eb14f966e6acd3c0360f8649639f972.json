{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/Addtasks.js\";\nimport React, { Component } from 'react';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Button } from 'primereact/button';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport { Modal, ModalHeader, Col, Row, Input, InputGroup } from 'reactstrap';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport api from '../../utils/apiClient';\nimport { toast } from 'react-toastify';\nimport APIConstant from '../../utils/constants'; // const Task_Followers = [];\n\nconst from_User = [{\n  label: 'Parth',\n  value: 'Parth'\n}];\n\nclass Addtasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      // debugger\n      this.state.Assigneearr = [];\n      this.setState({\n        Assigneearr: [],\n        Task_Followersarr: [],\n        Priorityarr: [],\n        TaskTypearr: [],\n        Statusarr: [],\n        Regardingarr: [],\n        isTaskEdit: false,\n        TaskTitle: '',\n        Task_Followers: '',\n        Task_FollowersError: true,\n        Assignee: '',\n        AssigneeError: true,\n        Priority: '',\n        PriorityError: true,\n        Type: '',\n        TaskTitleError: true,\n        Status: '',\n        statusError: true,\n        DueDate: '',\n        DueDateError: true,\n        Regarding: '',\n        RegardingError: true,\n        RegardingInput: '',\n        RegardingInputError: true,\n        Details: '',\n        DetailsError: true,\n        From_user: '',\n        From_userError: true\n      });\n    };\n\n    this.saveTask = () => {\n      console.log(this.state); // debugger\n\n      if (this.state.TaskTitleError === false && this.state.PriorityError === false && this.state.statusError === false && this.state.TypeError === false && this.state.Task_FollowersError === false && // this.state.RegardingError === false &&\n      this.state.DetailsError === false && this.state.From_userError === false && // this.state.DueDateError === false &&\n      // this.state.RegardingInputError === false &&\n      this.state.AssigneeError === false) {\n        const data = {\n          'TaskTitle': this.state.TaskTitle,\n          'Assignee': this.state.Assignee,\n          'Priority': this.state.Priority,\n          'Type': this.state.Type,\n          'Status': this.state.Status,\n          'DueDate': this.state.DueDate,\n          'Regarding': this.state.Regarding,\n          'RegardingInput': this.state.RegardingInput,\n          'Details': this.state.Details,\n          'From_user': this.state.From_user,\n          'Task_Followers': this.state.Task_Followers\n        };\n        api.post('api/addUpdateTasks', data).then(res => {\n          if (res.success) {\n            this.reset();\n            toast.success(res.message);\n            this.closeModel();\n          } else {\n            console.log(\"Error\");\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        this.show(\"TaskTitle\", this.state.TaskTitleError);\n        this.show(\"Priority\", this.state.PriorityError);\n        this.show(\"Type\", this.state.TypeError);\n        this.show(\"Status\", this.state.statusError);\n        this.show(\"Task_Followers\", this.state.Task_FollowersError); // this.show(\"Regarding\", this.state.RegardingError);\n\n        this.show(\"Details\", this.state.DetailsError);\n        this.show(\"From_user\", this.state.From_userError); // this.show(\"DueDate\", this.state.DueDateError);\n        // this.show(\"RegardingInput\", this.state.RegardingInputError);\n\n        this.show(\"Assignee\", this.state.AssigneeError);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(\"e.target.name\", e);\n\n      if (e.target.name === 'TaskTitle') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            TaskTitleError: true\n          });\n          this.show(\"TaskTitle\", true);\n        } else {\n          this.setState({\n            TaskTitleError: false,\n            TaskTitle: e.target.value\n          });\n          this.show(\"TaskTitle\", false);\n        }\n      }\n\n      if (e.target.name === 'RegardingInput') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            RegardingInputError: true\n          });\n          this.show(\"RegardingInput\", true);\n        } else {\n          this.setState({\n            RegardingInputError: false,\n            RegardingInput: e.target.value\n          });\n          this.show(\"RegardingInput\", false);\n        }\n      }\n\n      if (e.target.name === 'Details') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            DetailsError: true\n          });\n          this.show(\"Details\", true);\n        } else {\n          this.setState({\n            DetailsError: false,\n            Details: e.target.value\n          });\n          this.show(\"Details\", false);\n        }\n      } // if (e.target.name === 'DueDate') {\n      //     if (e.target.value === '' || e.target.value === null) {\n      //         this.setState({ DueDateError: true });\n      //         this.show(\"DueDate\", true);\n      //     } else {\n      //         this.setState({ DueDateError: false, DueDate: e.target.value });\n      //         this.show(\"DueDate\", false);\n      //     }\n      // }\n\n    };\n\n    this.mulSelVal = e => {\n      // debugger\n      if (e.value.length === 0) {\n        this.setState({\n          Task_FollowersError: true,\n          Task_Followers: e.value\n        });\n        this.show('Task_Followers', true);\n      } else {\n        this.setState({\n          Task_FollowersError: false,\n          Task_Followers: e.value\n        });\n        this.show('Task_Followers', false);\n      }\n    };\n\n    this.addMoreTask = () => {\n      this.openModal();\n    };\n\n    this.openModal = () => {\n      this.setState({\n        toggleModal: !this.state.toggleModal\n      });\n    };\n\n    this.editMoreTask = event => {\n      this.openModal();\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false,\n        TaskTitle: '',\n        Task_Followers: '',\n        Task_FollowersError: true,\n        Assignee: '',\n        AssigneeError: true,\n        Priority: '',\n        PriorityError: true,\n        Type: '',\n        TaskTitleError: true,\n        Status: '',\n        statusError: true,\n        DueDate: '',\n        DueDateError: true,\n        Regarding: '',\n        RegardingError: true,\n        RegardingInput: '',\n        RegardingInputError: true,\n        Details: '',\n        DetailsError: true,\n        From_user: '',\n        From_userError: true\n      });\n    };\n\n    this.state = {\n      TaskTitle: '',\n      TaskTitleError: true,\n      Assignee: '',\n      Assigneearr: [],\n      AssigneeError: true,\n      Task_Followers: '',\n      Task_Followersarr: [],\n      Task_FollowersError: true,\n      Priority: '',\n      Priorityarr: [],\n      PriorityError: true,\n      Type: '',\n      TaskTypearr: [],\n      TypeError: true,\n      Status: '',\n      Statusarr: [],\n      statusError: true,\n      DueDate: '',\n      DueDateError: true,\n      Regarding: '',\n      Regardingarr: [],\n      RegardingError: true,\n      RegardingInput: '',\n      RegardingInputError: true,\n      Details: '',\n      DetailsError: true,\n      From_userType: from_User,\n      From_user: '',\n      From_userError: true,\n      toggleModal: false\n    };\n    console.log(\"Props\", this.props);\n  }\n\n  componentWillMount() {\n    // debugger\n    this.reset();\n    this.getAssignee();\n    this.getTask_Followers();\n    this.getPriorityType();\n    this.getTaskType();\n    this.getTaskStatus();\n    this.getTaskRegardings();\n  }\n\n  closeModel() {\n    this.setState({\n      toggleModal: false\n    });\n    this.reset();\n  }\n\n  getTask_Followers() {\n    // debugger\n    api.post('api/getTask_Followers').then(res => {\n      if (res.success) {\n        var Task_Followers = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n          Task_Followers.push({\n            name: res.data[i].forename,\n            code: res.data[i].personid\n          });\n        }\n\n        this.setState({\n          Task_Followersarr: Task_Followers\n        });\n      } else {\n        console.log(\"Else\");\n      }\n    });\n  }\n\n  getAssignee() {\n    // debugger\n    api.post('api/getAssignee').then(res => {\n      if (res.success) {\n        var Assignee = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n          Assignee.push({\n            label: res.data[i].personid,\n            value: res.data[i].forename\n          });\n        }\n\n        this.setState({\n          Assigneearr: Assignee\n        });\n      } else {\n        console.log(\"Else\");\n      }\n    });\n  }\n\n  getTaskStatus() {\n    try {\n      const data = {\n        stringmaptype: 'TASKSTATUS'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Status = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Status.push({\n              label: res.data[i].stringmapname,\n              value: res.data[i].description\n            });\n          }\n\n          this.setState({\n            Statusarr: Status\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getTaskRegardings() {\n    try {\n      const data = {\n        stringmaptype: 'TASKREGARDING'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Regardings = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Regardings.push({\n              label: res.data[i].stringmapname,\n              value: res.data[i].description\n            });\n          }\n\n          this.setState({\n            Regardingarr: Regardings\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getTaskType() {\n    try {\n      const data = {\n        stringmaptype: 'TASKTYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Type = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Type.push({\n              label: res.data[i].stringmapname,\n              value: res.data[i].description\n            });\n          }\n\n          this.setState({\n            TaskTypearr: Type\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getPriorityType() {\n    try {\n      const data = {\n        stringmaptype: 'TASKPRIORITY'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          var Priority = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Priority.push({\n              label: res.data[i].stringmapname,\n              value: res.data[i].description\n            });\n          }\n\n          this.setState({\n            Priorityarr: Priority\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  selectType(value, type) {\n    // debugger\n    if (type === 'Priority') {\n      if (value === '' || value === null) {\n        this.setState({\n          PriorityError: true,\n          Priority: value\n        });\n        this.show('Priority', true);\n      } else {\n        this.setState({\n          PriorityError: false,\n          Priority: value\n        });\n        this.show('Priority', false);\n      }\n    }\n\n    if (type === 'Type') {\n      if (value === '' || value === null) {\n        this.setState({\n          TypeError: true,\n          Type: value\n        });\n        this.show('Type', true);\n      } else {\n        this.setState({\n          TypeError: false,\n          Type: value\n        });\n        this.show('Type', false);\n      }\n    }\n\n    if (type === 'Status') {\n      if (value === '' || value === null) {\n        this.setState({\n          statusError: true,\n          Status: value\n        });\n        this.show('Status', true);\n      } else {\n        this.setState({\n          statusError: false,\n          Status: value\n        });\n        this.show('Status', false);\n      }\n    }\n\n    if (type === 'Regarding') {\n      if (value === '' || value === null) {\n        this.setState({\n          RegardingError: true,\n          Regarding: value\n        });\n        this.show('Regarding', true);\n      } else {\n        this.setState({\n          RegardingError: false,\n          Regarding: value\n        });\n        this.show('Regarding', false);\n      }\n    }\n\n    if (type === 'From_user') {\n      if (value === '' || value === null) {\n        this.setState({\n          From_userError: true,\n          From_user: value\n        });\n        this.show('From_user', true);\n      } else {\n        this.setState({\n          From_userError: false,\n          From_user: value\n        });\n        this.show('From_user', false);\n      }\n    }\n\n    if (type === 'Assignee') {\n      if (value === '' || value === null) {\n        this.setState({\n          AssigneeError: true,\n          Assignee: value\n        });\n        this.show('Assignee', true);\n      } else {\n        this.setState({\n          AssigneeError: false,\n          Assignee: value\n        });\n        this.show('Assignee', false);\n      }\n    }\n  }\n\n  show(field, condition) {\n    // debugger\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      label: \"Add New Task\",\n      onClick: () => this.addMoreTask(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 60\n      }\n    }, \"Add Task\")), /*#__PURE__*/React.createElement(ScrollPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 37\n      }\n    }, \"Title*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      style: {\n        marginTop: 20,\n        maxWidth: 205\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"TaskTitle\",\n      id: \"TaskTitle\",\n      onChange: e => this.handleChange(e),\n      placeholder: \"Title\",\n      size: \"30\",\n      value: this.state.TaskTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 41\n      }\n    }, \" Please enter title \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 37\n      }\n    }, \"Task Followers*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      name: \"Task_Followers\",\n      id: \"Task_Followers\",\n      optionLabel: \"name\",\n      style: {\n        width: \"200px\"\n      },\n      value: this.state.Task_Followers,\n      options: this.state.Task_Followersarr,\n      onChange: e => this.mulSelVal(e),\n      filter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 41\n      }\n    }, \"Please select Task Followers \")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 37\n      }\n    }, \"Assignee*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Assignee\",\n      id: \"Assignee\",\n      onChange: e => this.selectType(e.target.value, 'Assignee'),\n      value: this.state.Assignee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 45\n      }\n    }, \"Select Assignee\"), this.state.Assigneearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 41\n      }\n    }, \"Please select Assignee \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 37\n      }\n    }, \"Priority*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Priority\",\n      id: \"Priority\",\n      onChange: e => this.selectType(e.target.value, 'Priority'),\n      value: this.state.Priority,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 45\n      }\n    }, \"Select Priority\"), this.state.Priorityarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 41\n      }\n    }, \" Please select Priority \")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 37\n      }\n    }, \"Type*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Type\",\n      id: \"Type\",\n      onChange: e => this.selectType(e.target.value, 'Type'),\n      value: this.state.Type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 45\n      }\n    }, \"Select Type\"), this.state.TaskTypearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 41\n      }\n    }, \" Please select Type \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 37\n      }\n    }, \"Status*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Status\",\n      id: \"Status\",\n      onChange: e => this.selectType(e.target.value, 'Status'),\n      value: this.state.Status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 45\n      }\n    }, \"Select Status\"), this.state.Statusarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 41\n      }\n    }, \" Please select Status \")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 37\n      }\n    }, \"Due Date\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"DueDate\",\n      id: \"DueDate\",\n      onChange: e => this.handleChange(e),\n      size: \"30\",\n      value: this.state.DueDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 41\n      }\n    }, \" Please enter Due Date \")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 37\n      }\n    }, \"Regarding\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"Regarding\",\n      id: \"Regarding\",\n      onChange: e => this.selectType(e.target.value, 'Regarding'),\n      value: this.state.Regarding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 45\n      }\n    }, \"Select Regarding\"), this.state.Regardingarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 41\n      }\n    }, \" Please select Regardings \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"RegardingInput\",\n      id: \"RegardingInput\",\n      onChange: e => this.handleChange(e),\n      placeholder: \"Regardings\",\n      size: \"30\",\n      value: this.state.RegardingInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 41\n      }\n    }, \" Please enter Regardings \")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 37\n      }\n    }, \"Details*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"Details\",\n      id: \"Details\",\n      onChange: e => this.handleChange(e),\n      placeholder: \"Details\",\n      size: \"30\",\n      value: this.state.Details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 41\n      }\n    }, \" Please enter Details\")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 37\n      }\n    }, \"From User*\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      style: {\n        marginTop: 25\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"From_user\",\n      id: \"From_user\",\n      onChange: e => this.selectType(e.target.value, 'From_user'),\n      value: this.state.From_user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 45\n      }\n    }, \"Select From user\"), this.state.From_userType.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 57\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 41\n      }\n    }, \" Please select From user \")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"text-center\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginRight: 10,\n        marginTop: 50,\n        border: \"none\"\n      },\n      onClick: () => this.saveTask(),\n      label: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n}\n\nexport default Addtasks;","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/ContactManagement/Addtasks.js"],"names":["React","Component","MultiSelect","Button","Modal","ModalHeader","Col","Row","Input","InputGroup","ScrollPanel","api","toast","APIConstant","from_User","label","value","Addtasks","constructor","props","reset","state","Assigneearr","setState","Task_Followersarr","Priorityarr","TaskTypearr","Statusarr","Regardingarr","isTaskEdit","TaskTitle","Task_Followers","Task_FollowersError","Assignee","AssigneeError","Priority","PriorityError","Type","TaskTitleError","Status","statusError","DueDate","DueDateError","Regarding","RegardingError","RegardingInput","RegardingInputError","Details","DetailsError","From_user","From_userError","saveTask","console","log","TypeError","data","post","then","res","success","message","closeModel","catch","err","show","handleChange","e","target","name","mulSelVal","length","addMoreTask","openModal","toggleModal","editMoreTask","event","toggleLarge","From_userType","componentWillMount","getAssignee","getTask_Followers","getPriorityType","getTaskType","getTaskStatus","getTaskRegardings","i","push","forename","code","personid","stringmaptype","path","dropdownbycode","stringmapname","description","error","Regardings","selectType","type","field","condition","document","getElementById","className","render","marginLeft","backgroundColor","marginTop","fontSize","maxWidth","width","map","marginRight","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Button } from 'primereact/button';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport { Modal, ModalHeader, Col, Row, Input, InputGroup } from 'reactstrap';\r\nimport { ScrollPanel } from 'primereact/scrollpanel';\r\nimport api from '../../utils/apiClient';\r\nimport { toast } from 'react-toastify';\r\nimport APIConstant from '../../utils/constants';\r\n\r\n// const Task_Followers = [];\r\n\r\nconst from_User = [\r\n    { label: 'Parth', value: 'Parth' },\r\n];\r\n\r\nclass Addtasks extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            TaskTitle: '',\r\n            TaskTitleError: true,\r\n\r\n            Assignee: '',\r\n            Assigneearr: [],\r\n            AssigneeError: true,\r\n\r\n            Task_Followers: '',\r\n            Task_Followersarr: [],\r\n            Task_FollowersError: true,\r\n\r\n            Priority: '',\r\n            Priorityarr: [],\r\n            PriorityError: true,\r\n\r\n            Type: '',\r\n            TaskTypearr: [],\r\n            TypeError: true,\r\n\r\n            Status: '',\r\n            Statusarr: [],\r\n            statusError: true,\r\n\r\n            DueDate: '',\r\n            DueDateError: true,\r\n\r\n            Regarding: '',\r\n            Regardingarr: [],\r\n            RegardingError: true,\r\n\r\n            RegardingInput: '',\r\n            RegardingInputError: true,\r\n\r\n            Details: '',\r\n            DetailsError: true,\r\n\r\n            From_userType: from_User,\r\n            From_user: '',\r\n            From_userError: true,\r\n\r\n            toggleModal: false,\r\n        };\r\n        console.log(\"Props\", this.props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        // debugger\r\n        this.reset();\r\n        this.getAssignee();\r\n        this.getTask_Followers();\r\n        this.getPriorityType();\r\n        this.getTaskType();\r\n        this.getTaskStatus();\r\n        this.getTaskRegardings();\r\n    }\r\n\r\n    reset = () => {\r\n        // debugger\r\n        this.state.Assigneearr = [];\r\n        this.setState({\r\n            Assigneearr: [], Task_Followersarr: [], Priorityarr: [], TaskTypearr: [], Statusarr: [],\r\n            Regardingarr: [],\r\n            isTaskEdit: false, TaskTitle: '',\r\n            Task_Followers: '', Task_FollowersError: true,\r\n            Assignee: '', AssigneeError: true,\r\n            Priority: '', PriorityError: true,\r\n            Type: '', TaskTitleError: true,\r\n            Status: '', statusError: true,\r\n            DueDate: '', DueDateError: true,\r\n            Regarding: '', RegardingError: true,\r\n            RegardingInput: '', RegardingInputError: true,\r\n            Details: '', DetailsError: true,\r\n            From_user: '', From_userError: true,\r\n        });\r\n    }\r\n\r\n    closeModel() {\r\n        this.setState({ toggleModal: false });\r\n        this.reset();\r\n    }\r\n\r\n    getTask_Followers() {\r\n        // debugger\r\n        api.post('api/getTask_Followers').then(res => {\r\n            if (res.success) {\r\n                var Task_Followers = [];\r\n                for (let i = 0; i < res.data.length; i++) {\r\n                    Task_Followers.push({\r\n                        name: res.data[i].forename,\r\n                        code: res.data[i].personid\r\n                    })\r\n                }\r\n                this.setState({ Task_Followersarr: Task_Followers });\r\n            }\r\n            else {\r\n                console.log(\"Else\");\r\n            }\r\n        })\r\n    }\r\n\r\n    getAssignee() {\r\n        // debugger\r\n\r\n        api.post('api/getAssignee').then(res => {\r\n\r\n            if (res.success) {\r\n                var Assignee = [];\r\n                for (let i = 0; i < res.data.length; i++) {\r\n\r\n                    Assignee.push({\r\n                        label: res.data[i].personid,\r\n                        value: res.data[i].forename\r\n                    })\r\n                }\r\n                this.setState({ Assigneearr: Assignee });\r\n            }\r\n            else {\r\n                console.log(\"Else\");\r\n            }\r\n        })\r\n    }\r\n\r\n    getTaskStatus() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKSTATUS',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Status = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Status.push({\r\n                            label: res.data[i].stringmapname,\r\n                            value: res.data[i].description\r\n                        })\r\n                    }\r\n                    this.setState({ Statusarr: Status });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getTaskRegardings() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKREGARDING',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Regardings = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Regardings.push({\r\n                            label: res.data[i].stringmapname,\r\n                            value: res.data[i].description\r\n                        })\r\n                    }\r\n                    this.setState({ Regardingarr: Regardings });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getTaskType() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKTYPE',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Type = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Type.push({\r\n                            label: res.data[i].stringmapname,\r\n                            value: res.data[i].description\r\n                        })\r\n                    }\r\n                    this.setState({ TaskTypearr: Type });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    getPriorityType() {\r\n\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'TASKPRIORITY',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    var Priority = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        Priority.push({\r\n                            label: res.data[i].stringmapname,\r\n                            value: res.data[i].description\r\n                        })\r\n                    }\r\n                    this.setState({ Priorityarr: Priority });\r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    saveTask = () => {\r\n        console.log(this.state);\r\n\r\n        // debugger\r\n        if (\r\n            this.state.TaskTitleError === false &&\r\n            this.state.PriorityError === false &&\r\n            this.state.statusError === false &&\r\n            this.state.TypeError === false &&\r\n            this.state.Task_FollowersError === false &&\r\n            // this.state.RegardingError === false &&\r\n            this.state.DetailsError === false &&\r\n            this.state.From_userError === false &&\r\n            // this.state.DueDateError === false &&\r\n            // this.state.RegardingInputError === false &&\r\n            this.state.AssigneeError === false\r\n        ) {\r\n            const data = {\r\n                'TaskTitle': this.state.TaskTitle,\r\n                'Assignee': this.state.Assignee,\r\n                'Priority': this.state.Priority,\r\n                'Type': this.state.Type,\r\n                'Status': this.state.Status,\r\n                'DueDate': this.state.DueDate,\r\n                'Regarding': this.state.Regarding,\r\n                'RegardingInput': this.state.RegardingInput,\r\n                'Details': this.state.Details,\r\n                'From_user': this.state.From_user,\r\n                'Task_Followers': this.state.Task_Followers\r\n            };\r\n\r\n            api.post('api/addUpdateTasks', data).then(res => {\r\n                if (res.success) {\r\n                    this.reset();\r\n                    toast.success(res.message);\r\n                    this.closeModel();\r\n                } else {\r\n                    console.log(\"Error\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        } else {\r\n            this.show(\"TaskTitle\", this.state.TaskTitleError);\r\n            this.show(\"Priority\", this.state.PriorityError);\r\n            this.show(\"Type\", this.state.TypeError);\r\n            this.show(\"Status\", this.state.statusError);\r\n            this.show(\"Task_Followers\", this.state.Task_FollowersError);\r\n            // this.show(\"Regarding\", this.state.RegardingError);\r\n            this.show(\"Details\", this.state.DetailsError);\r\n            this.show(\"From_user\", this.state.From_userError);\r\n            // this.show(\"DueDate\", this.state.DueDateError);\r\n            // this.show(\"RegardingInput\", this.state.RegardingInputError);\r\n            this.show(\"Assignee\", this.state.AssigneeError);\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        console.log(\"e.target.name\", e);\r\n\r\n        if (e.target.name === 'TaskTitle') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ TaskTitleError: true });\r\n                this.show(\"TaskTitle\", true);\r\n            } else {\r\n                this.setState({ TaskTitleError: false, TaskTitle: e.target.value });\r\n                this.show(\"TaskTitle\", false);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'RegardingInput') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ RegardingInputError: true });\r\n                this.show(\"RegardingInput\", true);\r\n            } else {\r\n                this.setState({ RegardingInputError: false, RegardingInput: e.target.value });\r\n                this.show(\"RegardingInput\", false);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === 'Details') {\r\n            if (e.target.value === '' || e.target.value === null) {\r\n                this.setState({ DetailsError: true });\r\n                this.show(\"Details\", true);\r\n            } else {\r\n                this.setState({ DetailsError: false, Details: e.target.value });\r\n                this.show(\"Details\", false);\r\n            }\r\n        }\r\n\r\n        // if (e.target.name === 'DueDate') {\r\n        //     if (e.target.value === '' || e.target.value === null) {\r\n        //         this.setState({ DueDateError: true });\r\n        //         this.show(\"DueDate\", true);\r\n        //     } else {\r\n        //         this.setState({ DueDateError: false, DueDate: e.target.value });\r\n        //         this.show(\"DueDate\", false);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    selectType(value, type) {\r\n        // debugger\r\n        if (type === 'Priority') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ PriorityError: true, Priority: value });\r\n                this.show('Priority', true);\r\n            } else {\r\n                this.setState({ PriorityError: false, Priority: value });\r\n                this.show('Priority', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'Type') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ TypeError: true, Type: value });\r\n                this.show('Type', true);\r\n            } else {\r\n                this.setState({ TypeError: false, Type: value });\r\n                this.show('Type', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'Status') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ statusError: true, Status: value });\r\n                this.show('Status', true);\r\n            } else {\r\n                this.setState({ statusError: false, Status: value });\r\n                this.show('Status', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'Regarding') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ RegardingError: true, Regarding: value });\r\n                this.show('Regarding', true);\r\n            } else {\r\n                this.setState({ RegardingError: false, Regarding: value });\r\n                this.show('Regarding', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'From_user') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ From_userError: true, From_user: value });\r\n                this.show('From_user', true);\r\n            } else {\r\n                this.setState({ From_userError: false, From_user: value });\r\n                this.show('From_user', false);\r\n            }\r\n        }\r\n\r\n        if (type === 'Assignee') {\r\n            if (value === '' || value === null) {\r\n                this.setState({ AssigneeError: true, Assignee: value });\r\n                this.show('Assignee', true);\r\n            } else {\r\n                this.setState({ AssigneeError: false, Assignee: value });\r\n                this.show('Assignee', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    show(field, condition) {\r\n        // debugger\r\n        if (condition) {\r\n            document.getElementById(field).className = \"form-control is-invalid\";\r\n        } else {\r\n            document.getElementById(field).className = \"form-control\";\r\n        }\r\n    }\r\n\r\n    mulSelVal = (e) => {\r\n        // debugger\r\n        if (e.value.length === 0) {\r\n            this.setState({ Task_FollowersError: true, Task_Followers: e.value });\r\n            this.show('Task_Followers', true);\r\n        } else {\r\n            this.setState({ Task_FollowersError: false, Task_Followers: e.value });\r\n            this.show('Task_Followers', false);\r\n        }\r\n    }\r\n\r\n    addMoreTask = () => {\r\n        this.openModal();\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({ toggleModal: !this.state.toggleModal });\r\n    }\r\n\r\n    editMoreTask = (event) => {\r\n        this.openModal();\r\n    }\r\n\r\n    toggleLarge = () => {\r\n        this.setState({\r\n            toggleModal: false, TaskTitle: '',\r\n            Task_Followers: '', Task_FollowersError: true,\r\n            Assignee: '', AssigneeError: true,\r\n            Priority: '', PriorityError: true,\r\n            Type: '', TaskTitleError: true,\r\n            Status: '', statusError: true,\r\n            DueDate: '', DueDateError: true,\r\n            Regarding: '', RegardingError: true,\r\n            RegardingInput: '', RegardingInputError: true,\r\n            Details: '', DetailsError: true,\r\n            From_user: '', From_userError: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"col-md-12 text-right\">\r\n                    <Button type=\"button\" label=\"Add New Task\" onClick={() => this.addMoreTask()}></Button>\r\n                </div>\r\n                <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLarge}><h2>Add Task</h2></ModalHeader>\r\n                    <ScrollPanel>\r\n                        <div style={{ marginLeft: 20 }}>\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 20 }}>\r\n                                    <label style={{ fontSize: 16 }}>Title*</label>\r\n                                </Col>\r\n                                <Col md=\"4\" style={{ marginTop: 20, maxWidth: 205 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"text\" name=\"TaskTitle\" id=\"TaskTitle\" onChange={e => this.handleChange(e)} placeholder=\"Title\" size=\"30\" value={this.state.TaskTitle} />\r\n                                        <em className=\"error invalid-feedback\"> Please enter title </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Task Followers*</label>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <MultiSelect name=\"Task_Followers\" id=\"Task_Followers\" optionLabel=\"name\" style={{ width: \"200px\" }} value={this.state.Task_Followers} options={this.state.Task_Followersarr}\r\n                                            onChange={(e) => this.mulSelVal(e)}\r\n                                            filter={true} />\r\n                                        <em className=\"error invalid-feedback\">Please select Task Followers </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Assignee*</label>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Assignee\" id=\"Assignee\" onChange={(e) => this.selectType(e.target.value, 'Assignee')} value={this.state.Assignee}>\r\n                                            <option value=''>Select Assignee</option>\r\n                                            {this.state.Assigneearr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\">Please select Assignee </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Priority*</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Priority\" id=\"Priority\" onChange={(e) => this.selectType(e.target.value, 'Priority')} value={this.state.Priority}>\r\n                                            <option value=''>Select Priority</option>\r\n                                            {this.state.Priorityarr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\"> Please select Priority </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Type*</label>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Type\" id=\"Type\" onChange={(e) => this.selectType(e.target.value, 'Type')} value={this.state.Type}>\r\n                                            <option value=''>Select Type</option>\r\n                                            {this.state.TaskTypearr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\"> Please select Type </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Status*</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Status\" id=\"Status\" onChange={(e) => this.selectType(e.target.value, 'Status')} value={this.state.Status}>\r\n                                            <option value=''>Select Status</option>\r\n                                            {this.state.Statusarr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\"> Please select Status </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Due Date</label>\r\n                                </Col>\r\n                                <Col md=\"5\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"date\" name=\"DueDate\" id=\"DueDate\" onChange={e => this.handleChange(e)} size=\"30\" value={this.state.DueDate} />\r\n                                        <em className=\"error invalid-feedback\"> Please enter Due Date </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Regarding</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"Regarding\" id=\"Regarding\" onChange={(e) => this.selectType(e.target.value, 'Regarding')} value={this.state.Regarding}>\r\n                                            <option value=''>Select Regarding</option>\r\n                                            {this.state.Regardingarr.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\"> Please select Regardings </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n\r\n                                <Col md=\"5\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"text\" name=\"RegardingInput\" id=\"RegardingInput\" onChange={e => this.handleChange(e)} placeholder=\"Regardings\" size=\"30\" value={this.state.RegardingInput} />\r\n                                        <em className=\"error invalid-feedback\"> Please enter Regardings </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label style={{ fontSize: 16 }}>Details*</label>\r\n                                </Col>\r\n                                <Col md=\"5\" style={{ marginTop: 20 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"text\" name=\"Details\" id=\"Details\" onChange={e => this.handleChange(e)} placeholder=\"Details\" size=\"30\" value={this.state.Details} />\r\n                                        <em className=\"error invalid-feedback\"> Please enter Details</em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col md=\"2\" style={{ marginTop: 25 }}>\r\n                                    <label>From User*</label>\r\n                                </Col>\r\n                                <Col md=\"3\" style={{ marginTop: 25 }}>\r\n                                    <InputGroup className=\"mb-12\">\r\n                                        <Input type=\"select\" name=\"From_user\" id=\"From_user\" onChange={(e) => this.selectType(e.target.value, 'From_user')} value={this.state.From_user}>\r\n                                            <option value=''>Select From user</option>\r\n                                            {this.state.From_userType.map((type, i) => {\r\n                                                return (<option value={type.label}>{type.value}</option>)\r\n                                            })\r\n                                            }\r\n                                        </Input>\r\n                                        <em className=\"error invalid-feedback\"> Please select From user </em>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"text-center\" style={{ backgroundColor: \"#fff\" }}>\r\n                                <Col style={{ marginTop: 30 }} >\r\n                                    <Button style={{ marginRight: 10, marginTop: 50, border: \"none\" }} onClick={() => this.saveTask()} label=\"Save\"></Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </ScrollPanel>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Addtasks;"]},"metadata":{},"sourceType":"module"}