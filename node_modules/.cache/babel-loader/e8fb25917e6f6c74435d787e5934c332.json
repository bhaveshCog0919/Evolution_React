{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/MooringGuide/AddMooringGuide.js\";\n\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport moment from 'moment';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { Container, Form, Col, Row, Input, Card, CardBody, Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport api from '../../../utils/apiClient';\nimport APIConstant, { CommonConfig } from '../../../utils/constants';\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\n\nconst {\n  SearchBox\n} = require(\"react-google-maps/lib/components/places/SearchBox\");\n\nconst _ = require(\"lodash\");\n\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCMQQ0t3ArJGJlKkURVXKCkDZvJ0IQIsuo&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `400px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  })\n}), lifecycle({\n  componentWillMount() {\n    console.log(\"sdv=vd=v=dsvd=vsdv=props\", this.props);\n    const refs = {};\n    this.setState({\n      bounds: null,\n      center: {\n        // lat: 41.9, lng: -87.624\n        lat: this.props.latitude,\n        lng: this.props.longitude\n      },\n      markers: [],\n      onMapMounted: ref => {\n        refs.map = ref;\n      },\n      onBoundsChanged: () => {\n        this.setState({\n          bounds: refs.map.getBounds(),\n          center: refs.map.getCenter()\n        });\n      },\n      onSearchBoxMounted: ref => {\n        refs.searchBox = ref;\n      },\n      onPlacesChanged: () => {\n        const places = refs.searchBox.getPlaces();\n        const bounds = new google.maps.LatLngBounds();\n        places.forEach(place => {\n          if (place.geometry.viewport) {\n            bounds.union(place.geometry.viewport);\n          } else {\n            bounds.extend(place.geometry.location);\n          }\n        });\n        const nextMarkers = places.map(place => ({\n          position: place.geometry.location\n        }));\n        console.log(\"sdv=vd=v=dsvd=vsdv=nextMarkers\", nextMarkers);\n\n        const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n\n        this.setState({\n          center: nextCenter,\n          markers: nextMarkers\n        }); // refs.map.fitBounds(bounds);\n      }\n    });\n  }\n\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }\n}, console.log(\"sdv=vd=v=dsvd=vsdv=\", props, typeof props.center.lat), /*#__PURE__*/React.createElement(GoogleMap, {\n  ref: props.onMapMounted,\n  defaultZoom: 8,\n  center: typeof props.center.lat === \"number\" ? {\n    lat: props.latitude != props.center.lat ? parseFloat(props.latitude) : props.center.lat,\n    lng: props.longitude != props.center.lng ? parseFloat(props.longitude) : props.center.lng\n  } : {\n    lat: props.center.lat(),\n    lng: props.center.lng()\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(SearchBox, {\n  ref: props.onSearchBoxMounted,\n  bounds: props.bounds,\n  controlPosition: google.maps.ControlPosition.TOP_LEFT,\n  onPlacesChanged: props.onPlacesChanged,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  placeholder: \"Search your place here\",\n  style: {\n    boxSizing: `border-box`,\n    border: `1px solid transparent`,\n    width: `240px`,\n    height: `32px`,\n    marginTop: `27px`,\n    padding: `0 12px`,\n    borderRadius: `3px`,\n    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n    fontSize: `14px`,\n    outline: `none`,\n    textOverflow: `ellipses`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }\n})), props.isMarkerShown && /*#__PURE__*/React.createElement(Marker, {\n  onDragEnd: e => props.getPosition(e),\n  draggable: true,\n  position: props.markers.length ? props.markers[0].position : {\n    lat: parseFloat(props.latitude),\n    lng: parseFloat(props.longitude)\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 31\n  }\n}))));\n\nclass AddMooringGuide extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delayedShowMarker = () => {\n      setTimeout(() => {\n        this.setState({\n          isMarkerShown: true\n        });\n      }, 3000);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === 'mooringName') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            mooringNameError: true\n          });\n          this.show(\"mooringName\", true);\n        } else {\n          let invSpace = CommonConfig.RegExp.allowAllWithSpace;\n          let mooringName = e.target.value;\n\n          if (!invSpace.test(mooringName)) {\n            this.setState({\n              mooringNameError: true\n            });\n            this.show(\"mooringName\", true);\n          } else {\n            this.setState({\n              mooringNameError: false,\n              mooringName: e.target.value\n            });\n            this.show(\"mooringName\", false);\n            let tempArr = this.state.mooringTypearr;\n\n            for (var j = 0; j < tempArr.length; j++) {\n              tempArr[j].isAdded = false;\n            }\n\n            var recordTemp = [];\n\n            for (let i = 0; i < this.state.arr.length; i++) {\n              if (this.state.arr[i].MooringName == mooringName) {\n                recordTemp.push(this.state.arr[i].mooring_Type);\n              }\n            }\n\n            for (let i = 0; i < recordTemp.length; i++) {\n              let index = tempArr.findIndex(x => x.label === recordTemp[i]);\n\n              if (index >= 0) {\n                tempArr[index].isAdded = true;\n              }\n            }\n\n            this.setState({\n              mooringTypearr: tempArr\n            });\n          }\n        }\n      }\n\n      if (e.target.name === 'effectiveDate') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            effectiveDateError: true\n          });\n          this.show(\"effectiveDate\", true);\n        } else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\n          this.setState({\n            effectiveDateError: true\n          });\n          this.show(\"effectiveDate\", true);\n        } else {\n          this.setState({\n            effectiveDateError: false,\n            effectiveDate: e.target.value\n          });\n          this.show(\"effectiveDate\", false);\n        }\n      }\n\n      if (e.target.name === 'mooringCounty') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            mooringCountyError: true\n          });\n          this.show(\"mooringCounty\", true);\n        } else {\n          let invSpace = CommonConfig.RegExp.allowAllWithSpace;\n          let mooringCounty = e.target.value;\n\n          if (!invSpace.test(mooringCounty)) {\n            this.setState({\n              mooringCountyError: true\n            });\n            this.show(\"mooringCounty\", true);\n          } else {\n            this.setState({\n              mooringCountyError: false,\n              mooringCounty: e.target.value\n            });\n            this.show(\"mooringCounty\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'mooringLocation') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            mooringLocationError: true\n          });\n          this.show(\"mooringLocation\", true);\n        } else {\n          let invSpace = CommonConfig.RegExp.allowAllWithSpace;\n          let mooringLocation = e.target.value;\n\n          if (!invSpace.test(mooringLocation)) {\n            this.setState({\n              mooringLocationError: true\n            });\n            this.show(\"mooringLocation\", true);\n          } else {\n            this.setState({\n              mooringLocationError: false,\n              mooringLocation: e.target.value\n            });\n            this.show(\"mooringLocation\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'mooringLoading') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            mooringLoadingError: true\n          });\n          this.show(\"mooringLoading\", true);\n        } else {\n          let mooringLoadingRegEx = CommonConfig.RegExp.percentageWithNegative;\n          let mooringLoading = e.target.value;\n\n          if (e.target.value > 100 || !mooringLoadingRegEx.test(mooringLoading)) {\n            this.setState({\n              mooringLoadingError: true\n            });\n            this.show(\"mooringLoading\", true);\n          } else {\n            this.setState({\n              mooringLoadingError: false,\n              mooringLoading: e.target.value\n            });\n            this.show(\"mooringLoading\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'mooringNotes') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            mooringNotesError: true\n          });\n          this.show(\"mooringNotes\", true);\n        } else {\n          let mooringNotesRegEx = CommonConfig.RegExp.allowAllWithSpace;\n          let mooringNotes = e.target.value;\n\n          if (e.target.value > 100 || !mooringNotesRegEx.test(mooringNotes)) {\n            this.setState({\n              mooringNotesError: true\n            });\n            this.show(\"mooringNotes\", true);\n          } else {\n            this.setState({\n              mooringNotesError: false,\n              mooringNotes: e.target.value\n            });\n            this.show(\"mooringNotes\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'latitude') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            latitudeError: true\n          });\n          this.show(\"latitude\", true);\n        } else {\n          let latitudeRegEx = CommonConfig.RegExp.latlng;\n          let latitude = e.target.value;\n\n          if (!latitudeRegEx.test(latitude)) {\n            this.setState({\n              latitudeError: true\n            });\n            this.show(\"latitude\", true);\n          } else {\n            this.setState({\n              latitudeError: false,\n              latitude: e.target.value\n            });\n            this.show(\"latitude\", false);\n          }\n        }\n      }\n\n      if (e.target.name === 'longitude') {\n        if (e.target.value === '' || e.target.value === null) {\n          this.setState({\n            longitudeError: true\n          });\n          this.show(\"longitude\", true);\n        } else {\n          let longitudeRegEx = CommonConfig.RegExp.latlng;\n          let longitude = e.target.value;\n\n          if (!longitudeRegEx.test(longitude)) {\n            this.setState({\n              longitudeError: true\n            });\n            this.show(\"longitude\", true);\n          } else {\n            this.setState({\n              longitudeError: false,\n              longitude: e.target.value\n            });\n            this.show(\"longitude\", false);\n          }\n        }\n      }\n    };\n\n    this.getLatLong = e => {\n      this.setState({\n        mooringCoordinates: e.latLng.lat().toFixed(3) + \", \" + e.latLng.lng().toFixed(3),\n        latitude: e.latLng.lat(),\n        longitude: e.latLng.lng(),\n        mooringCoordinatesError: false\n      });\n    };\n\n    this.mulSelVal = e => {\n      console.log(\"mulSelVal\", e);\n\n      if (e.value.length == 0) {\n        this.setState({\n          mooringZoneTypeError: true,\n          mooringZone: e.value\n        });\n        this.show('mooringZone', true);\n      } else {\n        this.setState({\n          mooringZoneTypeError: false,\n          mooringZone: e.value\n        });\n        this.show('mooringZone', false);\n      } // console.log(\"Afdsas\", this.state.Task_Followers);\n\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        isDeleteModel: false,\n        MooringGuideId: '',\n        mooringName: ''\n      });\n    };\n\n    this.state = {\n      MooringGuideId: '',\n      mooringname: 'Name *',\n      mooringName: '',\n      mooringNameError: true,\n      mooringtype: 'Mooring Type *',\n      mooringType: '',\n      mooringTypearr: [],\n      mooringTypeError: true,\n      mooringcountry: 'Country *',\n      mooringCountry: '',\n      mooringCountryarr: [],\n      mooringCountryError: true,\n      mooringcounty: 'County / Region *',\n      mooringCounty: '',\n      mooringCountyError: true,\n      mooringlocation: 'Location',\n      mooringLocation: '',\n      mooringLocationError: true,\n      mooringlocationType: 'Location Type *',\n      mooringLocationType: '',\n      mooringLocationTypearr: [],\n      mooringLocationTypeError: true,\n      mooringcoordinates: 'Coordinates',\n      mooringCoordinates: '',\n      mooringCoordinatesError: true,\n      mooringzone: 'Zone',\n      mooringZone: '',\n      mooringZoneTypearr: [],\n      mooringTypearrCp: [],\n      mooringZoneTypeError: true,\n      mooringloading: 'Loading (%) *',\n      mooringLoading: '',\n      mooringLoadingError: true,\n      mooringapproval: 'Approval Required *',\n      mooringApproval: '',\n      mooringApprovalarr: [],\n      mooringApprovalError: true,\n      mooringnotes: 'Notes',\n      mooringNotes: '',\n      mooringNotesError: true,\n      effectivedate: 'Effective Date *',\n      effectiveDate: moment().format('YYYY-MM-DD'),\n      effectiveDateError: false,\n      arr: [],\n      isMarkerShown: false,\n      isEdit: false,\n      isEnable: false,\n      enableLatlng: false,\n      isDeleteModel: false,\n      latitude: null,\n      latitudeError: true,\n      longitude: null,\n      longitudeError: true,\n      defaultLat: 0,\n      defaultLng: 0,\n      LanguageId: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n      this.getMooringGuideData(this.props.match.params.Id);\n    }\n\n    this.getMooringGuide();\n    this.getCountry();\n    this.getmooringType();\n    this.getLocationType();\n    this.getApproval();\n    this.getMooringZone();\n    this.delayedShowMarker();\n  }\n\n  getMooringGuide() {\n    api.post('api/getMooringGuide').then(res => {\n      if (res.success) {\n        var formattedData = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          formattedData.push({\n            MooringGuideId: res.data[i].MooringGuideId,\n            MooringName: res.data[i].MooringName,\n            mooring_Type: res.data[i].MooringType\n          });\n        }\n\n        this.setState({\n          arr: formattedData\n        });\n        console.log(\"handleChange\", this.state.arr);\n      } else {\n        console.log(\"Else\");\n      }\n    }).catch(err => {});\n  }\n\n  getMooringGuideData(Id) {\n    var data = {\n      MooringGuideId: Id\n    };\n    api.post('api/getMooringGuideData', data).then(res => {\n      if (res.success) {\n        console.log(\"getMooringGuideData\", res.data[0]);\n        var Longitude = CommonConfig.isEmpty(res.data[0].Longitude) ? this.state.defaultLng : Number(res.data[0].Longitude);\n        var Latitude = CommonConfig.isEmpty(res.data[0].Latitude) ? this.state.defaultLat : Number(res.data[0].Latitude);\n        this.setState({\n          MooringGuideId: CommonConfig.isEmpty(res.data[0].MooringGuideId) ? '' : res.data[0].MooringGuideId,\n          isMarkerShown: true,\n          mooringName: CommonConfig.isEmpty(res.data[0].MooringName) ? '' : res.data[0].MooringName,\n          mooringCountry: CommonConfig.isEmpty(res.data[0].CountryId) ? '' : res.data[0].CountryId,\n          mooringCounty: CommonConfig.isEmpty(res.data[0].Region) ? '' : res.data[0].Region,\n          mooringLocation: CommonConfig.isEmpty(res.data[0].Location) ? '' : res.data[0].Location,\n          mooringLocationType: CommonConfig.isEmpty(res.data[0].LocationType) ? '' : res.data[0].LocationType,\n          mooringLoading: CommonConfig.isEmpty(res.data[0].LoadingPercent) ? 0 : res.data[0].LoadingPercent,\n          mooringType: CommonConfig.isEmpty(res.data[0].MooringType) ? '' : res.data[0].MooringType,\n          mooringApproval: CommonConfig.isEmpty(res.data[0].IsApprovalRequired) ? '' : res.data[0].IsApprovalRequired.data[0] === 0 ? 'No' : 'Yes',\n          mooringNotes: CommonConfig.isEmpty(res.data[0].Notes) ? '' : res.data[0].Notes,\n          mooringCoordinates: Latitude + ' ,' + Longitude,\n          mooringZone: CommonConfig.isEmpty(res.data[0].MooringZone) ? '' : res.data[0].MooringZone,\n          mooringZoneDis: CommonConfig.isEmpty(res.data[0].MooringZone) ? '' : res.data[0].MooringZone,\n          MooringZoneId: res.data[0].MooringZoneId,\n          MooringZoneGuideId: res.data[0].MooringZoneGuideId,\n          effectiveDate: moment().format('YYYY-MM-DD'),\n          latitude: Latitude,\n          longitude: Longitude,\n          isEdit: true,\n          mooringNameError: false,\n          mooringCountryError: false,\n          mooringCountyError: false,\n          mooringLocationError: false,\n          mooringLocationTypeError: false,\n          mooringLoadingError: false,\n          mooringTypeError: false,\n          mooringApprovalError: false,\n          mooringNotesError: false,\n          mooringCoordinatesError: false,\n          mooringZoneTypeError: false,\n          effectiveDateError: false,\n          latitudeError: false,\n          longitudeError: false\n        });\n      }\n\n      console.log(\"xfgxffg\");\n    }).catch(err => {\n      console.log(\"err\", err);\n    }); // }\n  }\n\n  getCountry() {\n    try {\n      const data = {\n        stringmaptype: 'COUNTRY'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          console.log(\"COUNTRY\", res.data);\n          var Country = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            Country.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            mooringCountryarr: res.data\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getmooringType() {\n    try {\n      const data = {\n        stringmaptype: 'MOORINGTYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        console.log(\"MOORINGTYPE\", res);\n\n        if (res.success) {\n          console.log(\"IF\");\n          var mooringtype = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            mooringtype.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description,\n              isAdded: false\n            });\n          }\n\n          this.setState({\n            mooringTypearr: mooringtype,\n            mooringTypearrCp: mooringtype\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getLocationType() {\n    try {\n      const data = {\n        stringmaptype: 'LOCATIONTYPE'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        console.log(\"resssssss\", res);\n\n        if (res.success) {\n          console.log(\"IF\");\n          var locationtype = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            locationtype.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            mooringLocationTypearr: locationtype\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getApproval() {\n    try {\n      const data = {\n        stringmaptype: 'MOORINGAPPROVAL'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        console.log(\"resssssss\", res);\n\n        if (res.success) {\n          console.log(\"IF\");\n          var approval = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            approval.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            mooringApprovalarr: approval\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  getMooringZone() {\n    try {\n      api.post('api/getMooringZoneLists').then(res => {\n        console.log(\"getMooringZoneLists\", res);\n\n        if (res.success) {\n          console.log(\"getMooringZoneLists\", res.data);\n          var mooringzone = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            mooringzone.push({\n              label: res.data[i].MooringZoneName,\n              value: res.data[i].MooringZoneId,\n              MooringZoneGuideId: ''\n            });\n          }\n\n          this.setState({\n            mooringZoneTypearr: mooringzone\n          });\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  selectType(value, type) {\n    if (type === 'mooringType') {\n      if (value === '' || value === null) {\n        this.setState({\n          mooringTypeError: true,\n          mooringType: value\n        });\n        this.show('mooringType', true);\n      } else {\n        this.setState({\n          mooringTypeError: false,\n          mooringType: value\n        });\n        this.show('mooringType', false);\n      }\n    }\n\n    if (type === 'mooringCountry') {\n      if (value === '' || value === null) {\n        this.setState({\n          mooringCountryError: true,\n          mooringCountry: value\n        });\n        this.show('mooringCountry', true);\n      } else {\n        this.setState({\n          mooringCountryError: false,\n          mooringCountry: value\n        });\n        this.show('mooringCountry', false);\n      }\n    }\n\n    if (type === 'mooringLocationType') {\n      if (value === '' || value === null) {\n        this.setState({\n          mooringLocationTypeError: true,\n          mooringLocationType: value\n        });\n        this.show('mooringLocationType', true);\n      } else {\n        this.setState({\n          mooringLocationTypeError: false,\n          mooringLocationType: value\n        });\n        this.show('mooringLocationType', false);\n      }\n    }\n\n    if (type === 'mooringApproval') {\n      if (value === '' || value === null) {\n        this.setState({\n          mooringApprovalError: true,\n          mooringApproval: value\n        });\n        this.show('mooringApproval', true);\n      } else {\n        this.setState({\n          mooringApprovalError: false,\n          mooringApproval: value\n        });\n        this.show('mooringApproval', false);\n      }\n    }\n  }\n\n  show(field, condition) {\n    if (condition) {\n      document.getElementById(field).className = \"form-control is-invalid\";\n    } else {\n      document.getElementById(field).className = \"form-control\";\n    }\n  }\n\n  goBckToListingPage() {\n    this.props.history.push({\n      pathname: '/Master/MooringGuide'\n    });\n  }\n\n  Save() {\n    debugger;\n\n    if (this.state.mooringNameError === false && this.state.mooringTypeError === false && this.state.mooringCountryError === false && this.state.mooringCountyError === false && // this.state.mooringLocationError === false &&\n    this.state.mooringLocationTypeError === false && this.state.mooringLoadingError === false && this.state.mooringApprovalError === false && this.state.effectiveDateError === false // &&\n    // this.state.isEnable == true ? this.state.mooringZoneTypeError === false : ''\n    // this.state.mooringNotesError === false\n    ) {\n        let data = {\n          MooringGuideId: this.state.MooringGuideId,\n          mooringName: this.state.mooringName,\n          mooringType: this.state.mooringType,\n          mooringCountry: this.state.mooringCountry,\n          mooringCounty: this.state.mooringCounty,\n          mooringLocation: this.state.mooringLocation,\n          mooringLocationType: this.state.mooringLocationType,\n          latitude: this.state.latitude,\n          longitude: this.state.longitude,\n          mooringLoading: this.state.mooringLoading,\n          mooringApproval: this.state.mooringApproval == 'Yes' ? true : false,\n          mooringNotes: this.state.mooringNotes,\n          effectiveDate: this.state.effectiveDate,\n          LoggedInUserId: CommonConfig.loggedInUserId()\n        };\n        console.log('MooringGuide', data);\n        api.post('api/addUpdateMooringGuide', data).then(res => {\n          console.log(\"ressssss\", res);\n\n          if (res.success) {\n            // debugger\n            toast.success('Mooring Guide added successfully'); // this.goBckToListingPage();\n            // this.reset();\n          } else {}\n        }).catch(err => {});\n      } else {\n      this.show(\"mooringName\", this.state.mooringNameError);\n      this.show(\"mooringType\", this.state.mooringTypeError);\n      this.show(\"mooringCountry\", this.state.mooringCountryError);\n      this.show(\"mooringCounty\", this.state.mooringCountyError); // this.show(\"mooringLocation\", this.state.mooringLocationError);\n\n      this.show(\"mooringLocationType\", this.state.mooringLocationTypeError); // if (this.state.isEnable == true) {\n      //   this.show(\"mooringZone\", this.state.mooringZoneTypeError);\n      // }\n\n      this.show(\"mooringLoading\", this.state.mooringLoadingError);\n      this.show(\"mooringApproval\", this.state.mooringApprovalError);\n      this.show(\"effectiveDate\", this.state.effectiveDateError);\n    }\n  }\n\n  cancelMooringGuide() {\n    this.setState({\n      mooringName: '',\n      mooringType: '',\n      mooringCountry: '',\n      mooringCounty: '',\n      mooringLocation: '',\n      mooringLocationType: '',\n      mooringCoordinates: '',\n      mooringLoading: '',\n      mooringApproval: '',\n      mooringNotes: ''\n    });\n    this.props.history.push({\n      pathname: '/Master/MooringGuide'\n    });\n  }\n\n  deleteMooringGuide() {\n    this.setState({\n      isDeleteModel: true\n    });\n  }\n\n  editZone(task) {\n    if (task == \"view\") {\n      this.setState({\n        isEnable: false\n      }); // window.location.reload();\n    } else {\n      this.setState({\n        isEnable: true,\n        mooringZoneTypeError: false\n      });\n      var zone_Id = CommonConfig.isEmpty(this.state.MooringZoneId) ? '' : this.state.MooringZoneId.split(',');\n      var zoneGuide_Id = CommonConfig.isEmpty(this.state.MooringZoneGuideId) ? '' : this.state.MooringZoneGuideId.split(',');\n      var newZone_Id = [];\n\n      if (zone_Id.length > 0) {\n        for (var i = 0; i < zone_Id.length; i++) {\n          var record = this.state.mooringZoneTypearr.find(x => x.value == zone_Id[i]);\n          record.MooringZoneGuideId = zoneGuide_Id[i];\n          console.log(\"editZone\", record);\n          newZone_Id.push(record);\n        }\n      }\n\n      this.setState({\n        mooringZone: newZone_Id\n      });\n    }\n  }\n\n  editLatlng(task) {\n    if (task == \"view\") {\n      this.setState({\n        enableLatlng: false\n      }); // window.location.reload();\n    } else {\n      this.setState({\n        enableLatlng: true\n      });\n    }\n  }\n\n  cancelMooringZone() {\n    this.setState({\n      isEnable: false\n    }); // window.location.reload();\n  }\n\n  editMooringZone() {\n    try {\n      var data = {\n        mooringZone: this.state.mooringZone,\n        MooringGuideId: this.props.match.params.Id,\n        CurrentUser: CommonConfig.loggedInUserId(),\n        LanguageId: this.state.LanguageId\n      };\n      console.log('mooringZone', data);\n      api.post('api/updateMooringZone', data).then(res => {\n        console.log(\"editMooringZone\", res);\n\n        if (res.success == true) {\n          toast.success('Mooring Zone updated successfully');\n          setTimeout(function () {\n            window.location.reload();\n          }, 600);\n        }\n      });\n    } catch (error) {\n      console.log(\"editMooringZone\", error);\n    }\n  }\n\n  Delete() {\n    try {\n      let data = {\n        MooringGuideId: this.state.MooringGuideId,\n        CreatedBy: CommonConfig.loggedInUserId()\n      };\n      console.log(\"Delete\", data);\n      api.post('api/deleteMooringGuide', data).then(res => {\n        if (res.success) {\n          this.toggleLarge();\n          toast.success(\"MooringGuide deleted successfully\");\n          this.cancelMooringGuide();\n        }\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  render() {\n    // console.log(\"sdv=dsv=dv=v=\", this.state.mooringZone);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 11\n      }\n    }, \" \", this.state.isEdit ? \"Edit Mooring Guide\" : \"Add Mooring Guide\", \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      encType: \"multipart/form-data\",\n      autoComplete: \"of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 29\n      }\n    }, this.state.mooringname)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"mooringName\",\n      id: \"mooringName\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mooringName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 31\n      }\n    }, \"Please enter valid mooring name\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 29\n      }\n    }, this.state.mooringtype)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"mooringType\",\n      id: \"mooringType\",\n      onChange: e => this.selectType(e.target.value, 'mooringType'),\n      value: this.state.mooringType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 33\n      }\n    }, \"Select Mooring Type\"), this.state.mooringTypearr.map((type, i) => {\n      if (!type.isAdded) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: type.label,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 45\n          }\n        }, type.value);\n      }\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 31\n      }\n    }, \"Please select mooring type\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 29\n      }\n    }, this.state.mooringcountry)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"mooringCountry\",\n      id: \"mooringCountry\",\n      onChange: e => this.selectType(e.target.value, 'mooringCountry'),\n      value: this.state.mooringCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 33\n      }\n    }, \"Select Country\"), this.state.mooringCountryarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 43\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 31\n      }\n    }, \"Please select country\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 29\n      }\n    }, this.state.mooringcounty)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"County / Region\",\n      type: \"text\",\n      name: \"mooringCounty\",\n      id: \"mooringCounty\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mooringCounty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 31\n      }\n    }, \"Please enter county\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 29\n      }\n    }, this.state.mooringlocation)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Location\",\n      type: \"text\",\n      name: \"mooringLocation\",\n      id: \"mooringLocation\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mooringLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 31\n      }\n    }, \"Please enter location\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 29\n      }\n    }, this.state.mooringlocationType)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"mooringLocationType\",\n      id: \"mooringLocationType\",\n      onChange: e => this.selectType(e.target.value, 'mooringLocationType'),\n      value: this.state.mooringLocationType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 33\n      }\n    }, \"Select Location Type\"), this.state.mooringLocationTypearr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 43\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 31\n      }\n    }, \"Please select location type\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 29\n      }\n    }, this.state.mooringcoordinates)), /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 31\n      }\n    }, \"Lat.\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 31\n      }\n    }, \"Lng.\"))), this.state.isEdit ? /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        float: \"right\",\n        marginBottom: \"10px\"\n      },\n      color: \"primary\",\n      onClick: this.state.enableLatlng ? () => this.editLatlng(\"view\") : () => this.editLatlng(\"edit\"),\n      title: this.state.enableLatlng ? \"View\" : \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.enableLatlng ? \"fa fa-eye\" : \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 33\n      }\n    }))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      disabled: this.state.isEdit ? this.state.enableLatlng == false : this.state.enableLatlng == true,\n      type: \"text\",\n      name: \"latitude\",\n      id: \"latitude\",\n      onChange: e => this.handleChange(e),\n      value: this.state.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 31\n      }\n    }, \"Please select mooring co-ordinates from the map\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      disabled: this.state.isEdit ? this.state.enableLatlng == false : this.state.enableLatlng == true,\n      type: \"text\",\n      name: \"longitude\",\n      id: \"longitude\",\n      onChange: e => this.handleChange(e),\n      value: this.state.longitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 31\n      }\n    }, \"Please select mooring co-ordinates from the map\"))))), this.state.isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 33\n      }\n    }, this.state.mooringzone)), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        float: \"right\",\n        marginBottom: \"10px\"\n      },\n      color: \"primary\",\n      onClick: this.state.isEnable ? () => this.editZone(\"view\") : () => this.editZone(\"edit\"),\n      title: this.state.isEnable ? \"View\" : \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.isEnable ? \"fa fa-eye\" : \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 35\n      }\n    }))), this.state.isEnable == true ? /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      name: \"mooringZone\",\n      id: \"mooringZone\",\n      optionLabel: \"label\",\n      value: this.state.mooringZone,\n      options: this.state.mooringZoneTypearr,\n      style: {\n        width: '233px'\n      },\n      onChange: e => this.mulSelVal(e)\n      /*onBlur={() => this.editMooringZone()}*/\n      ,\n      filter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 37\n      }\n    }))) : /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 39\n      }\n    }, this.state.mooringZoneDis))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 27\n      }\n    }, this.state.isEnable == true ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"p-button p-component p-button-icon-only\",\n      onClick: () => this.editMooringZone(),\n      style: {\n        marginLeft: 5\n      },\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"p-button p-component p-button-icon-only\",\n      onClick: () => this.cancelMooringZone(),\n      style: {\n        marginLeft: 5\n      },\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 37\n      }\n    })))) : null)) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 29\n      }\n    }, this.state.mooringloading)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Loading (%)\",\n      type: \"text\",\n      name: \"mooringLoading\",\n      id: \"mooringLoading\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mooringLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 31\n      }\n    }, \"Please enter mooring loading\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 29\n      }\n    }, this.state.mooringapproval)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"mooringApproval\",\n      id: \"mooringApproval\",\n      onChange: e => this.selectType(e.target.value, 'mooringApproval'),\n      value: this.state.mooringApproval,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 33\n      }\n    }, \"Select Mooring Approval\"), this.state.mooringApprovalarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 43\n        }\n      }, type.value);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 31\n      }\n    }, \"Please select mooring approval\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 29\n      }\n    }, this.state.mooringnotes)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Notes\",\n      type: \"textarea\",\n      name: \"mooringNotes\",\n      id: \"mooringNotes\",\n      onChange: e => this.handleChange(e),\n      value: this.state.mooringNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 29\n      }\n    }, \"Please enter mooring notes\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 29\n      }\n    }, this.state.effectivedate)), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"effectiveDate\",\n      id: \"effectiveDate\",\n      onChange: e => this.handleChange(e),\n      value: this.state.effectiveDate,\n      min: moment().format('YYYY-MM-DD'),\n      max: moment().add(100, 'years').format('YYYY-MM-DD'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 29\n      }\n    }, \"Please enter effective date\"))))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 21\n      }\n    }, !CommonConfig.isEmpty(this.state.latitude) && !CommonConfig.isEmpty(this.state.longitude) ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MyMapComponent, {\n      isMarkerShown: this.state.isMarkerShown,\n      getPosition: e => this.getLatLong(e),\n      latitude: parseFloat(this.state.latitude),\n      longitude: parseFloat(this.state.longitude),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 27\n      }\n    })) : null)))), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.Save(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 75\n      }\n    }), \" Save\"), ' ', this.state.isEdit == true ? /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.deleteMooringGuide(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 90\n      }\n    }), \" Delete\") : null, ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.cancelMooringGuide(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-angle-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 94\n      }\n    }), \" Cancel\")))))))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isDeleteModel,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 11\n      }\n    }, \"Delete MooringGuide\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 11\n      }\n    }, \"Are you sure, You want to delete this MooringGuide \", this.state.mooringName, \"?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.Delete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170,\n        columnNumber: 67\n      }\n    }), \"Yes\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 64\n      }\n    }), \"No\"))));\n  }\n\n}\n\nexport default withTranslation()(AddMooringGuide);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Master/MooringGuide/AddMooringGuide.js"],"names":["React","Component","toast","moment","MultiSelect","Container","Form","Col","Row","Input","Card","CardBody","Button","Modal","ModalBody","ModalFooter","ModalHeader","api","APIConstant","CommonConfig","compose","withProps","lifecycle","withScriptjs","withGoogleMap","GoogleMap","Marker","useTranslation","withTranslation","Trans","SearchBox","require","_","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","componentWillMount","console","log","props","refs","setState","bounds","center","lat","latitude","lng","longitude","markers","onMapMounted","ref","map","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","getPlaces","google","maps","LatLngBounds","forEach","place","geometry","viewport","union","extend","location","nextMarkers","position","nextCenter","get","state","parseFloat","ControlPosition","TOP_LEFT","boxSizing","border","width","marginTop","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","isMarkerShown","e","getPosition","length","AddMooringGuide","constructor","delayedShowMarker","setTimeout","handleChange","target","name","value","mooringNameError","show","invSpace","RegExp","allowAllWithSpace","mooringName","test","tempArr","mooringTypearr","j","isAdded","recordTemp","i","arr","MooringName","push","mooring_Type","index","findIndex","x","label","effectiveDateError","format","effectiveDate","mooringCountyError","mooringCounty","mooringLocationError","mooringLocation","mooringLoadingError","mooringLoadingRegEx","percentageWithNegative","mooringLoading","mooringNotesError","mooringNotesRegEx","mooringNotes","latitudeError","latitudeRegEx","latlng","longitudeError","longitudeRegEx","getLatLong","mooringCoordinates","latLng","toFixed","mooringCoordinatesError","mulSelVal","mooringZoneTypeError","mooringZone","toggleLarge","isDeleteModel","MooringGuideId","mooringname","mooringtype","mooringType","mooringTypeError","mooringcountry","mooringCountry","mooringCountryarr","mooringCountryError","mooringcounty","mooringlocation","mooringlocationType","mooringLocationType","mooringLocationTypearr","mooringLocationTypeError","mooringcoordinates","mooringzone","mooringZoneTypearr","mooringTypearrCp","mooringloading","mooringapproval","mooringApproval","mooringApprovalarr","mooringApprovalError","mooringnotes","effectivedate","isEdit","isEnable","enableLatlng","defaultLat","defaultLng","LanguageId","i18n","language","componentDidMount","match","params","Object","keys","getMooringGuideData","Id","getMooringGuide","getCountry","getmooringType","getLocationType","getApproval","getMooringZone","post","then","res","success","formattedData","data","MooringType","catch","err","Longitude","isEmpty","Number","Latitude","CountryId","Region","Location","LocationType","LoadingPercent","IsApprovalRequired","Notes","MooringZone","mooringZoneDis","MooringZoneId","MooringZoneGuideId","stringmaptype","path","dropdownbycode","Country","StringMapName","Description","error","locationtype","approval","MooringZoneName","selectType","type","field","condition","document","getElementById","className","goBckToListingPage","history","pathname","Save","LoggedInUserId","loggedInUserId","cancelMooringGuide","deleteMooringGuide","editZone","task","zone_Id","split","zoneGuide_Id","newZone_Id","record","find","editLatlng","cancelMooringZone","editMooringZone","CurrentUser","window","reload","Delete","CreatedBy","render","key","float","marginBottom","marginLeft","add","margin"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,kDAAP;AACA,OAAO,yCAAP;AACA,OAAO,2BAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiDC,QAAjD,EAA2DC,MAA3D,EAAmEC,KAAnE,EAA0EC,SAA1E,EAAqFC,WAArF,EAAkGC,WAAlG,QAAqH,YAArH;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,WAAP,IAAsBC,YAAtB,QAA0C,0BAA1C;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA8C,WAA9C;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBC,OAAO,CAAC,mDAAD,CAA7B;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAME,cAAc,GAAGb,OAAO,CAC5BC,SAAS,CAAC;AACRa,EAAAA,YAAY,EAAE,+HADN;AAERC,EAAAA,cAAc,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGRC,EAAAA,gBAAgB,eAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIRE,EAAAA,UAAU,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAG;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,CAAD,CADmB,EAO5Bd,SAAS,CAAC;AACRiB,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,KAAKC,KAA7C;AACA,UAAMC,IAAI,GAAG,EAAb;AAEA,SAAKC,QAAL,CAAc;AACZC,MAAAA,MAAM,EAAE,IADI;AAEZC,MAAAA,MAAM,EAAE;AACN;AACAC,QAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,QAFV;AAEoBC,QAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWQ;AAFpC,OAFI;AAMZC,MAAAA,OAAO,EAAE,EANG;AAOZC,MAAAA,YAAY,EAAEC,GAAG,IAAI;AACnBV,QAAAA,IAAI,CAACW,GAAL,GAAWD,GAAX;AACD,OATW;AAUZE,MAAAA,eAAe,EAAE,MAAM;AACrB,aAAKX,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,IAAI,CAACW,GAAL,CAASE,SAAT,EADI;AAEZV,UAAAA,MAAM,EAAEH,IAAI,CAACW,GAAL,CAASG,SAAT;AAFI,SAAd;AAID,OAfW;AAgBZC,MAAAA,kBAAkB,EAAEL,GAAG,IAAI;AACzBV,QAAAA,IAAI,CAACgB,SAAL,GAAiBN,GAAjB;AACD,OAlBW;AAmBZO,MAAAA,eAAe,EAAE,MAAM;AACrB,cAAMC,MAAM,GAAGlB,IAAI,CAACgB,SAAL,CAAeG,SAAf,EAAf;AACA,cAAMjB,MAAM,GAAG,IAAIkB,MAAM,CAACC,IAAP,CAAYC,YAAhB,EAAf;AACAJ,QAAAA,MAAM,CAACK,OAAP,CAAeC,KAAK,IAAI;AACtB,cAAIA,KAAK,CAACC,QAAN,CAAeC,QAAnB,EAA6B;AAC3BxB,YAAAA,MAAM,CAACyB,KAAP,CAAaH,KAAK,CAACC,QAAN,CAAeC,QAA5B;AACD,WAFD,MAEO;AACLxB,YAAAA,MAAM,CAAC0B,MAAP,CAAcJ,KAAK,CAACC,QAAN,CAAeI,QAA7B;AACD;AACF,SAND;AAOA,cAAMC,WAAW,GAAGZ,MAAM,CAACP,GAAP,CAAWa,KAAK,KAAK;AACvCO,UAAAA,QAAQ,EAAEP,KAAK,CAACC,QAAN,CAAeI;AADc,SAAL,CAAhB,CAApB;AAGAhC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CgC,WAA9C;;AACA,cAAME,UAAU,GAAG3C,CAAC,CAAC4C,GAAF,CAAMH,WAAN,EAAmB,YAAnB,EAAiC,KAAKI,KAAL,CAAW/B,MAA5C,CAAnB;;AACA,aAAKF,QAAL,CAAc;AACZE,UAAAA,MAAM,EAAE6B,UADI;AAEZxB,UAAAA,OAAO,EAAEsB;AAFG,SAAd,EAfqB,CAmBrB;AACD;AAvCW,KAAd;AAyCD;;AA9CO,CAAD,CAPmB,EAuD5BlD,YAvD4B,EAwD5BC,aAxD4B,CAAP,CAyDpBkB,KAAD,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,KAAnC,EAA0C,OAAOA,KAAK,CAACI,MAAN,CAAaC,GAA9D,CADH,eAEE,oBAAC,SAAD;AACE,EAAA,GAAG,EAAEL,KAAK,CAACU,YADb;AAEE,EAAA,WAAW,EAAE,CAFf;AAGE,EAAA,MAAM,EAAG,OAAOV,KAAK,CAACI,MAAN,CAAaC,GAApB,KAA4B,QAA7B,GACL;AAAEA,IAAAA,GAAG,EAAEL,KAAK,CAACM,QAAN,IAAkBN,KAAK,CAACI,MAAN,CAAaC,GAA/B,GAAqC+B,UAAU,CAACpC,KAAK,CAACM,QAAP,CAA/C,GAAkEN,KAAK,CAACI,MAAN,CAAaC,GAAtF;AAA2FE,IAAAA,GAAG,EAAEP,KAAK,CAACQ,SAAN,IAAmBR,KAAK,CAACI,MAAN,CAAaG,GAAhC,GAAsC6B,UAAU,CAACpC,KAAK,CAACQ,SAAP,CAAhD,GAAoER,KAAK,CAACI,MAAN,CAAaG;AAAjL,GADK,GAEH;AAAEF,IAAAA,GAAG,EAAEL,KAAK,CAACI,MAAN,CAAaC,GAAb,EAAP;AAA2BE,IAAAA,GAAG,EAAEP,KAAK,CAACI,MAAN,CAAaG,GAAb;AAAhC,GALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE,oBAAC,SAAD;AACE,EAAA,GAAG,EAAEP,KAAK,CAACgB,kBADb;AAEE,EAAA,MAAM,EAAEhB,KAAK,CAACG,MAFhB;AAGE,EAAA,eAAe,EAAEkB,MAAM,CAACC,IAAP,CAAYe,eAAZ,CAA4BC,QAH/C;AAIE,EAAA,eAAe,EAAEtC,KAAK,CAACkB,eAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAME;AACE,EAAA,IAAI,EAAC,MADP;AAEE,EAAA,WAAW,EAAC,wBAFd;AAGE,EAAA,KAAK,EAAE;AACLqB,IAAAA,SAAS,EAAG,YADP;AAELC,IAAAA,MAAM,EAAG,uBAFJ;AAGLC,IAAAA,KAAK,EAAG,OAHH;AAIL/C,IAAAA,MAAM,EAAG,MAJJ;AAKLgD,IAAAA,SAAS,EAAG,MALP;AAMLC,IAAAA,OAAO,EAAG,QANL;AAOLC,IAAAA,YAAY,EAAG,KAPV;AAQLC,IAAAA,SAAS,EAAG,8BARP;AASLC,IAAAA,QAAQ,EAAG,MATN;AAULC,IAAAA,OAAO,EAAG,MAVL;AAWLC,IAAAA,YAAY,EAAG;AAXV,GAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,CAPF,EA+BGhD,KAAK,CAACiD,aAAN,iBAAuB,oBAAC,MAAD;AAAQ,EAAA,SAAS,EAAGC,CAAD,IAAOlD,KAAK,CAACmD,WAAN,CAAkBD,CAAlB,CAA1B;AACtB,EAAA,SAAS,EAAE,IADW;AAEtB,EAAA,QAAQ,EAAGlD,KAAK,CAACS,OAAN,CAAc2C,MAAf,GAA0BpD,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiBuB,QAA3C,GAAuD;AAAE3B,IAAAA,GAAG,EAAE+B,UAAU,CAACpC,KAAK,CAACM,QAAP,CAAjB;AAAmCC,IAAAA,GAAG,EAAE6B,UAAU,CAACpC,KAAK,CAACQ,SAAP;AAAlD,GAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA/B1B,CAFF,CA1DqB,CAAvB;;AAoGA,MAAM6C,eAAN,SAA8B9F,SAA9B,CAAwC;AACtC+F,EAAAA,WAAW,CAACtD,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAySnBuD,iBAzSmB,GAySC,MAAM;AACxBC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKtD,QAAL,CAAc;AAAE+C,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KA7SkB;;AAAA,SA0VnBQ,YA1VmB,GA0VHP,CAAD,IAAO;AACpB,WAAKhD,QAAL,CAAc;AAAE,SAACgD,CAAC,CAACQ,MAAF,CAASC,IAAV,GAAiBT,CAAC,CAACQ,MAAF,CAASE;AAA5B,OAAd;;AAEA,UAAIV,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,aAAtB,EAAqC;AACnC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAE2D,YAAAA,gBAAgB,EAAE;AAApB,WAAd;AACA,eAAKC,IAAL,CAAU,aAAV,EAAyB,IAAzB;AACD,SAHD,MAGO;AACL,cAAIC,QAAQ,GAAGtF,YAAY,CAACuF,MAAb,CAAoBC,iBAAnC;AACA,cAAIC,WAAW,GAAGhB,CAAC,CAACQ,MAAF,CAASE,KAA3B;;AACA,cAAI,CAACG,QAAQ,CAACI,IAAT,CAAcD,WAAd,CAAL,EAAiC;AAC/B,iBAAKhE,QAAL,CAAc;AAAE2D,cAAAA,gBAAgB,EAAE;AAApB,aAAd;AACA,iBAAKC,IAAL,CAAU,aAAV,EAAyB,IAAzB;AACD,WAHD,MAGO;AACL,iBAAK5D,QAAL,CAAc;AAAE2D,cAAAA,gBAAgB,EAAE,KAApB;AAA2BK,cAAAA,WAAW,EAAEhB,CAAC,CAACQ,MAAF,CAASE;AAAjD,aAAd;AACA,iBAAKE,IAAL,CAAU,aAAV,EAAyB,KAAzB;AAEA,gBAAIM,OAAO,GAAG,KAAKjC,KAAL,CAAWkC,cAAzB;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAAChB,MAA5B,EAAoCkB,CAAC,EAArC,EAAyC;AACvCF,cAAAA,OAAO,CAACE,CAAD,CAAP,CAAWC,OAAX,GAAqB,KAArB;AACD;;AACD,gBAAIC,UAAU,GAAG,EAAjB;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtC,KAAL,CAAWuC,GAAX,CAAetB,MAAnC,EAA2CqB,CAAC,EAA5C,EAAgD;AAC9C,kBAAI,KAAKtC,KAAL,CAAWuC,GAAX,CAAeD,CAAf,EAAkBE,WAAlB,IAAiCT,WAArC,EAAkD;AAChDM,gBAAAA,UAAU,CAACI,IAAX,CACE,KAAKzC,KAAL,CAAWuC,GAAX,CAAeD,CAAf,EAAkBI,YADpB;AAGD;AACF;;AACD,iBAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACpB,MAA/B,EAAuCqB,CAAC,EAAxC,EAA4C;AAC1C,kBAAIK,KAAK,GAAGV,OAAO,CAACW,SAAR,CAAkBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYT,UAAU,CAACC,CAAD,CAA7C,CAAZ;;AACA,kBAAIK,KAAK,IAAI,CAAb,EAAgB;AACdV,gBAAAA,OAAO,CAACU,KAAD,CAAP,CAAeP,OAAf,GAAyB,IAAzB;AACD;AACF;;AACD,iBAAKrE,QAAL,CAAc;AAAEmE,cAAAA,cAAc,EAAED;AAAlB,aAAd;AACD;AACF;AACF;;AAED,UAAIlB,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACrC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAEgF,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;AACA,eAAKpB,IAAL,CAAU,eAAV,EAA2B,IAA3B;AACD,SAHD,MAGQ,IAAIrG,MAAM,CAACyF,CAAC,CAACQ,MAAF,CAASE,KAAV,CAAN,CAAuBuB,MAAvB,CAA8B,YAA9B,IAA8C1H,MAAM,GAAG0H,MAAT,CAAgB,YAAhB,CAAlD,EAAiF;AACvF,eAAKjF,QAAL,CAAc;AAAEgF,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;AACA,eAAKpB,IAAL,CAAU,eAAV,EAA2B,IAA3B;AACD,SAHO,MAGA;AACN,eAAK5D,QAAL,CAAc;AAAEgF,YAAAA,kBAAkB,EAAE,KAAtB;AAA6BE,YAAAA,aAAa,EAAElC,CAAC,CAACQ,MAAF,CAASE;AAArD,WAAd;AACA,eAAKE,IAAL,CAAU,eAAV,EAA2B,KAA3B;AACD;AACF;;AAED,UAAIZ,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACrC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAEmF,YAAAA,kBAAkB,EAAE;AAAtB,WAAd;AACA,eAAKvB,IAAL,CAAU,eAAV,EAA2B,IAA3B;AACD,SAHD,MAGO;AACL,cAAIC,QAAQ,GAAGtF,YAAY,CAACuF,MAAb,CAAoBC,iBAAnC;AACA,cAAIqB,aAAa,GAAGpC,CAAC,CAACQ,MAAF,CAASE,KAA7B;;AACA,cAAI,CAACG,QAAQ,CAACI,IAAT,CAAcmB,aAAd,CAAL,EAAmC;AACjC,iBAAKpF,QAAL,CAAc;AAAEmF,cAAAA,kBAAkB,EAAE;AAAtB,aAAd;AACA,iBAAKvB,IAAL,CAAU,eAAV,EAA2B,IAA3B;AACD,WAHD,MAGO;AACL,iBAAK5D,QAAL,CAAc;AAAEmF,cAAAA,kBAAkB,EAAE,KAAtB;AAA6BC,cAAAA,aAAa,EAAEpC,CAAC,CAACQ,MAAF,CAASE;AAArD,aAAd;AACA,iBAAKE,IAAL,CAAU,eAAV,EAA2B,KAA3B;AACD;AACF;AACF;;AAED,UAAIZ,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,iBAAtB,EAAyC;AACvC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAEqF,YAAAA,oBAAoB,EAAE;AAAxB,WAAd;AACA,eAAKzB,IAAL,CAAU,iBAAV,EAA6B,IAA7B;AACD,SAHD,MAGO;AACL,cAAIC,QAAQ,GAAGtF,YAAY,CAACuF,MAAb,CAAoBC,iBAAnC;AACA,cAAIuB,eAAe,GAAGtC,CAAC,CAACQ,MAAF,CAASE,KAA/B;;AACA,cAAI,CAACG,QAAQ,CAACI,IAAT,CAAcqB,eAAd,CAAL,EAAqC;AACnC,iBAAKtF,QAAL,CAAc;AAAEqF,cAAAA,oBAAoB,EAAE;AAAxB,aAAd;AACA,iBAAKzB,IAAL,CAAU,iBAAV,EAA6B,IAA7B;AACD,WAHD,MAGO;AACL,iBAAK5D,QAAL,CAAc;AAAEqF,cAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,cAAAA,eAAe,EAAEtC,CAAC,CAACQ,MAAF,CAASE;AAAzD,aAAd;AACA,iBAAKE,IAAL,CAAU,iBAAV,EAA6B,KAA7B;AACD;AACF;AACF;;AAED,UAAIZ,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,gBAAtB,EAAwC;AACtC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAEuF,YAAAA,mBAAmB,EAAE;AAAvB,WAAd;AACA,eAAK3B,IAAL,CAAU,gBAAV,EAA4B,IAA5B;AACD,SAHD,MAGO;AACL,cAAI4B,mBAAmB,GAAGjH,YAAY,CAACuF,MAAb,CAAoB2B,sBAA9C;AACA,cAAIC,cAAc,GAAG1C,CAAC,CAACQ,MAAF,CAASE,KAA9B;;AACA,cAAIV,CAAC,CAACQ,MAAF,CAASE,KAAT,GAAiB,GAAjB,IAAwB,CAAC8B,mBAAmB,CAACvB,IAApB,CAAyByB,cAAzB,CAA7B,EAAuE;AACrE,iBAAK1F,QAAL,CAAc;AAAEuF,cAAAA,mBAAmB,EAAE;AAAvB,aAAd;AACA,iBAAK3B,IAAL,CAAU,gBAAV,EAA4B,IAA5B;AACD,WAHD,MAGO;AACL,iBAAK5D,QAAL,CAAc;AAAEuF,cAAAA,mBAAmB,EAAE,KAAvB;AAA8BG,cAAAA,cAAc,EAAE1C,CAAC,CAACQ,MAAF,CAASE;AAAvD,aAAd;AACA,iBAAKE,IAAL,CAAU,gBAAV,EAA4B,KAA5B;AACD;AACF;AACF;;AAED,UAAIZ,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AACpC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAE2F,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACA,eAAK/B,IAAL,CAAU,cAAV,EAA0B,IAA1B;AACD,SAHD,MAGO;AACL,cAAIgC,iBAAiB,GAAGrH,YAAY,CAACuF,MAAb,CAAoBC,iBAA5C;AACA,cAAI8B,YAAY,GAAG7C,CAAC,CAACQ,MAAF,CAASE,KAA5B;;AACA,cAAIV,CAAC,CAACQ,MAAF,CAASE,KAAT,GAAiB,GAAjB,IAAwB,CAACkC,iBAAiB,CAAC3B,IAAlB,CAAuB4B,YAAvB,CAA7B,EAAmE;AACjE,iBAAK7F,QAAL,CAAc;AAAE2F,cAAAA,iBAAiB,EAAE;AAArB,aAAd;AACA,iBAAK/B,IAAL,CAAU,cAAV,EAA0B,IAA1B;AACD,WAHD,MAGO;AACL,iBAAK5D,QAAL,CAAc;AAAE2F,cAAAA,iBAAiB,EAAE,KAArB;AAA4BE,cAAAA,YAAY,EAAE7C,CAAC,CAACQ,MAAF,CAASE;AAAnD,aAAd;AACA,iBAAKE,IAAL,CAAU,cAAV,EAA0B,KAA1B;AACD;AACF;AACF;;AAED,UAAIZ,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAChC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAE8F,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACA,eAAKlC,IAAL,CAAU,UAAV,EAAsB,IAAtB;AACD,SAHD,MAGO;AACL,cAAImC,aAAa,GAAGxH,YAAY,CAACuF,MAAb,CAAoBkC,MAAxC;AACA,cAAI5F,QAAQ,GAAG4C,CAAC,CAACQ,MAAF,CAASE,KAAxB;;AACA,cAAI,CAACqC,aAAa,CAAC9B,IAAd,CAAmB7D,QAAnB,CAAL,EAAmC;AACjC,iBAAKJ,QAAL,CAAc;AAAE8F,cAAAA,aAAa,EAAE;AAAjB,aAAd;AACA,iBAAKlC,IAAL,CAAU,UAAV,EAAsB,IAAtB;AACD,WAHD,MAGO;AACL,iBAAK5D,QAAL,CAAc;AAAE8F,cAAAA,aAAa,EAAE,KAAjB;AAAwB1F,cAAAA,QAAQ,EAAE4C,CAAC,CAACQ,MAAF,CAASE;AAA3C,aAAd;AACA,iBAAKE,IAAL,CAAU,UAAV,EAAsB,KAAtB;AACD;AACF;AACF;;AAED,UAAIZ,CAAC,CAACQ,MAAF,CAASC,IAAT,KAAkB,WAAtB,EAAmC;AACjC,YAAIT,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,EAAnB,IAAyBV,CAAC,CAACQ,MAAF,CAASE,KAAT,KAAmB,IAAhD,EAAsD;AACpD,eAAK1D,QAAL,CAAc;AAAEiG,YAAAA,cAAc,EAAE;AAAlB,WAAd;AACA,eAAKrC,IAAL,CAAU,WAAV,EAAuB,IAAvB;AACD,SAHD,MAGO;AACL,cAAIsC,cAAc,GAAG3H,YAAY,CAACuF,MAAb,CAAoBkC,MAAzC;AACA,cAAI1F,SAAS,GAAG0C,CAAC,CAACQ,MAAF,CAASE,KAAzB;;AACA,cAAI,CAACwC,cAAc,CAACjC,IAAf,CAAoB3D,SAApB,CAAL,EAAqC;AACnC,iBAAKN,QAAL,CAAc;AAAEiG,cAAAA,cAAc,EAAE;AAAlB,aAAd;AACA,iBAAKrC,IAAL,CAAU,WAAV,EAAuB,IAAvB;AACD,WAHD,MAGO;AACL,iBAAK5D,QAAL,CAAc;AAAEiG,cAAAA,cAAc,EAAE,KAAlB;AAAyB3F,cAAAA,SAAS,EAAE0C,CAAC,CAACQ,MAAF,CAASE;AAA7C,aAAd;AACA,iBAAKE,IAAL,CAAU,WAAV,EAAuB,KAAvB;AACD;AACF;AACF;AACF,KApfkB;;AAAA,SA+kBnBuC,UA/kBmB,GA+kBLnD,CAAD,IAAO;AAClB,WAAKhD,QAAL,CAAc;AAAEoG,QAAAA,kBAAkB,EAAEpD,CAAC,CAACqD,MAAF,CAASlG,GAAT,GAAemG,OAAf,CAAuB,CAAvB,IAA4B,IAA5B,GAAmCtD,CAAC,CAACqD,MAAF,CAAShG,GAAT,GAAeiG,OAAf,CAAuB,CAAvB,CAAzD;AAAoFlG,QAAAA,QAAQ,EAAE4C,CAAC,CAACqD,MAAF,CAASlG,GAAT,EAA9F;AAA8GG,QAAAA,SAAS,EAAE0C,CAAC,CAACqD,MAAF,CAAShG,GAAT,EAAzH;AAAyIkG,QAAAA,uBAAuB,EAAE;AAAlK,OAAd;AACD,KAjlBkB;;AAAA,SAulBnBC,SAvlBmB,GAulBNxD,CAAD,IAAO;AACjBpD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBmD,CAAzB;;AACA,UAAIA,CAAC,CAACU,KAAF,CAAQR,MAAR,IAAkB,CAAtB,EAAyB;AACvB,aAAKlD,QAAL,CAAc;AAAEyG,UAAAA,oBAAoB,EAAE,IAAxB;AAA8BC,UAAAA,WAAW,EAAE1D,CAAC,CAACU;AAA7C,SAAd;AACA,aAAKE,IAAL,CAAU,aAAV,EAAyB,IAAzB;AACD,OAHD,MAGO;AACL,aAAK5D,QAAL,CAAc;AAAEyG,UAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,UAAAA,WAAW,EAAE1D,CAAC,CAACU;AAA9C,SAAd;AACA,aAAKE,IAAL,CAAU,aAAV,EAAyB,KAAzB;AACD,OARgB,CASjB;;AAED,KAlmBkB;;AAAA,SA+pBnB+C,WA/pBmB,GA+pBL,MAAM;AAClB,WAAK3G,QAAL,CAAc;AACZ4G,QAAAA,aAAa,EAAE,KADH;AAEZC,QAAAA,cAAc,EAAE,EAFJ;AAGZ7C,QAAAA,WAAW,EAAE;AAHD,OAAd;AAKD,KArqBkB;;AAEjB,SAAK/B,KAAL,GAAa;AACX4E,MAAAA,cAAc,EAAE,EADL;AAGXC,MAAAA,WAAW,EAAE,QAHF;AAIX9C,MAAAA,WAAW,EAAE,EAJF;AAKXL,MAAAA,gBAAgB,EAAE,IALP;AAOXoD,MAAAA,WAAW,EAAE,gBAPF;AAQXC,MAAAA,WAAW,EAAE,EARF;AASX7C,MAAAA,cAAc,EAAE,EATL;AAUX8C,MAAAA,gBAAgB,EAAE,IAVP;AAYXC,MAAAA,cAAc,EAAE,WAZL;AAaXC,MAAAA,cAAc,EAAE,EAbL;AAcXC,MAAAA,iBAAiB,EAAE,EAdR;AAeXC,MAAAA,mBAAmB,EAAE,IAfV;AAiBXC,MAAAA,aAAa,EAAE,mBAjBJ;AAkBXlC,MAAAA,aAAa,EAAE,EAlBJ;AAmBXD,MAAAA,kBAAkB,EAAE,IAnBT;AAqBXoC,MAAAA,eAAe,EAAE,UArBN;AAsBXjC,MAAAA,eAAe,EAAE,EAtBN;AAuBXD,MAAAA,oBAAoB,EAAE,IAvBX;AAyBXmC,MAAAA,mBAAmB,EAAE,iBAzBV;AA0BXC,MAAAA,mBAAmB,EAAE,EA1BV;AA2BXC,MAAAA,sBAAsB,EAAE,EA3Bb;AA4BXC,MAAAA,wBAAwB,EAAE,IA5Bf;AA8BXC,MAAAA,kBAAkB,EAAE,aA9BT;AA+BXxB,MAAAA,kBAAkB,EAAE,EA/BT;AAgCXG,MAAAA,uBAAuB,EAAE,IAhCd;AAkCXsB,MAAAA,WAAW,EAAE,MAlCF;AAmCXnB,MAAAA,WAAW,EAAE,EAnCF;AAoCXoB,MAAAA,kBAAkB,EAAE,EApCT;AAqCXC,MAAAA,gBAAgB,EAAE,EArCP;AAsCXtB,MAAAA,oBAAoB,EAAE,IAtCX;AAwCXuB,MAAAA,cAAc,EAAE,eAxCL;AAyCXtC,MAAAA,cAAc,EAAE,EAzCL;AA0CXH,MAAAA,mBAAmB,EAAE,IA1CV;AA4CX0C,MAAAA,eAAe,EAAE,qBA5CN;AA6CXC,MAAAA,eAAe,EAAE,EA7CN;AA8CXC,MAAAA,kBAAkB,EAAE,EA9CT;AA+CXC,MAAAA,oBAAoB,EAAE,IA/CX;AAiDXC,MAAAA,YAAY,EAAE,OAjDH;AAkDXxC,MAAAA,YAAY,EAAE,EAlDH;AAmDXF,MAAAA,iBAAiB,EAAE,IAnDR;AAqDX2C,MAAAA,aAAa,EAAE,kBArDJ;AAsDXpD,MAAAA,aAAa,EAAE3H,MAAM,GAAG0H,MAAT,CAAgB,YAAhB,CAtDJ;AAuDXD,MAAAA,kBAAkB,EAAE,KAvDT;AAyDXR,MAAAA,GAAG,EAAE,EAzDM;AA2DXzB,MAAAA,aAAa,EAAE,KA3DJ;AA4DXwF,MAAAA,MAAM,EAAE,KA5DG;AA6DXC,MAAAA,QAAQ,EAAE,KA7DC;AA8DXC,MAAAA,YAAY,EAAE,KA9DH;AA+DX7B,MAAAA,aAAa,EAAE,KA/DJ;AAiEXxG,MAAAA,QAAQ,EAAE,IAjEC;AAkEX0F,MAAAA,aAAa,EAAE,IAlEJ;AAmEXxF,MAAAA,SAAS,EAAE,IAnEA;AAoEX2F,MAAAA,cAAc,EAAE,IApEL;AAsEXyC,MAAAA,UAAU,EAAE,CAtED;AAuEXC,MAAAA,UAAU,EAAE,CAvED;AAyEXC,MAAAA,UAAU,EAAG9I,KAAK,CAAC+I,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4ChJ,KAAK,CAAC+I,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA4ChJ,KAAK,CAAC+I,IAAN,CAAWC,QAAX,KAAwB,IAAzB,GAAiC,OAAjC,GAA2ChJ,KAAK,CAAC+I,IAAN,CAAWC;AAzE7I,KAAb;AA2ED;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKjJ,KAAL,CAAWkJ,KAAX,CAAiBC,MAAjB,CAAwB7F,WAAxB,KAAwC8F,MAAxC,IAAkDA,MAAM,CAACC,IAAP,CAAY,KAAKrJ,KAAL,CAAWkJ,KAAX,CAAiBC,MAA7B,EAAqC/F,MAArC,KAAgD,CAAtG,EAAyG;AACvG,WAAKkG,mBAAL,CAAyB,KAAKtJ,KAAL,CAAWkJ,KAAX,CAAiBC,MAAjB,CAAwBI,EAAjD;AACD;;AACD,SAAKC,eAAL;AACA,SAAKC,UAAL;AACA,SAAKC,cAAL;AACA,SAAKC,eAAL;AACA,SAAKC,WAAL;AACA,SAAKC,cAAL;AACA,SAAKtG,iBAAL;AACD;;AAEDiG,EAAAA,eAAe,GAAG;AAChBjL,IAAAA,GAAG,CAACuL,IAAJ,CAAS,qBAAT,EAAgCC,IAAhC,CAAqCC,GAAG,IAAI;AAC1C,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACf,YAAIC,aAAa,GAAG,EAApB;;AACA,aAAK,IAAIzF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,GAAG,CAACG,IAAJ,CAAS/G,MAA7B,EAAqCqB,CAAC,EAAtC,EAA0C;AACxCyF,UAAAA,aAAa,CAACtF,IAAd,CAAmB;AACjBmC,YAAAA,cAAc,EAAEiD,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYsC,cADX;AAEjBpC,YAAAA,WAAW,EAAEqF,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYE,WAFR;AAGjBE,YAAAA,YAAY,EAAEmF,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAY2F;AAHT,WAAnB;AAKD;;AACD,aAAKlK,QAAL,CAAc;AAAEwE,UAAAA,GAAG,EAAEwF;AAAP,SAAd;AACApK,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKoC,KAAL,CAAWuC,GAAvC;AACD,OAXD,MAWO;AACL5E,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAED;AACF,KAhBD,EAgBGsK,KAhBH,CAgBSC,GAAG,IAAI,CAEf,CAlBD;AAmBD;;AAEDhB,EAAAA,mBAAmB,CAACC,EAAD,EAAK;AACtB,QAAIY,IAAI,GAAG;AACTpD,MAAAA,cAAc,EAAEwC;AADP,KAAX;AAGAhL,IAAAA,GAAG,CAACuL,IAAJ,CAAS,yBAAT,EAAoCK,IAApC,EAA0CJ,IAA1C,CAA+CC,GAAG,IAAI;AACpD,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACfnK,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCiK,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAnC;AACA,YAAII,SAAS,GAAG9L,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYI,SAAjC,IAA8C,KAAKpI,KAAL,CAAW0G,UAAzD,GAAsE4B,MAAM,CAACT,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYI,SAAb,CAA5F;AACA,YAAIG,QAAQ,GAAGjM,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYO,QAAjC,IAA6C,KAAKvI,KAAL,CAAWyG,UAAxD,GAAqE6B,MAAM,CAACT,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYO,QAAb,CAA1F;AACA,aAAKxK,QAAL,CAAc;AACZ6G,UAAAA,cAAc,EAAEtI,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYpD,cAAjC,IAAmD,EAAnD,GAAwDiD,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYpD,cADxE;AAEZ9D,UAAAA,aAAa,EAAE,IAFH;AAGZiB,UAAAA,WAAW,EAAEzF,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYxF,WAAjC,IAAgD,EAAhD,GAAqDqF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYxF,WAHlE;AAIZ0C,UAAAA,cAAc,EAAE5I,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYQ,SAAjC,IAA8C,EAA9C,GAAmDX,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYQ,SAJnE;AAKZrF,UAAAA,aAAa,EAAE7G,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYS,MAAjC,IAA2C,EAA3C,GAAgDZ,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYS,MAL/D;AAMZpF,UAAAA,eAAe,EAAE/G,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,QAAjC,IAA6C,EAA7C,GAAkDb,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYU,QANnE;AAOZlD,UAAAA,mBAAmB,EAAElJ,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYW,YAAjC,IAAiD,EAAjD,GAAsDd,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYW,YAP3E;AAQZlF,UAAAA,cAAc,EAAEnH,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYY,cAAjC,IAAmD,CAAnD,GAAuDf,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYY,cARvE;AASZ7D,UAAAA,WAAW,EAAEzI,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYC,WAAjC,IAAgD,EAAhD,GAAqDJ,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYC,WATlE;AAUZhC,UAAAA,eAAe,EAAE3J,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYa,kBAAjC,IAAuD,EAAvD,GAA8DhB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYa,kBAAZ,CAA+Bb,IAA/B,CAAoC,CAApC,MAA2C,CAA5C,GAAiD,IAAjD,GAAwD,KAV1H;AAWZpE,UAAAA,YAAY,EAAEtH,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYc,KAAjC,IAA0C,EAA1C,GAA+CjB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYc,KAX7D;AAYZ3E,UAAAA,kBAAkB,EAAEoE,QAAQ,GAAG,IAAX,GAAkBH,SAZ1B;AAaZ3D,UAAAA,WAAW,EAAEnI,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYe,WAAjC,IAAgD,EAAhD,GAAqDlB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYe,WAblE;AAcZC,UAAAA,cAAc,EAAE1M,YAAY,CAAC+L,OAAb,CAAqBR,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYe,WAAjC,IAAgD,EAAhD,GAAqDlB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYe,WAdrE;AAeZE,UAAAA,aAAa,EAAEpB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYiB,aAff;AAgBZC,UAAAA,kBAAkB,EAAErB,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYkB,kBAhBpB;AAiBZjG,UAAAA,aAAa,EAAE3H,MAAM,GAAG0H,MAAT,CAAgB,YAAhB,CAjBH;AAkBZ7E,UAAAA,QAAQ,EAAEoK,QAlBE;AAmBZlK,UAAAA,SAAS,EAAE+J,SAnBC;AAoBZ9B,UAAAA,MAAM,EAAE,IApBI;AAsBZ5E,UAAAA,gBAAgB,EAAE,KAtBN;AAsBa0D,UAAAA,mBAAmB,EAAE,KAtBlC;AAsByClC,UAAAA,kBAAkB,EAAE,KAtB7D;AAsBoEE,UAAAA,oBAAoB,EAAE,KAtB1F;AAsBiGsC,UAAAA,wBAAwB,EAAE,KAtB3H;AAsBkIpC,UAAAA,mBAAmB,EAAE,KAtBvJ;AAsB8J0B,UAAAA,gBAAgB,EAAE,KAtBhL;AAsBuLmB,UAAAA,oBAAoB,EAAE,KAtB7M;AAsBoNzC,UAAAA,iBAAiB,EAAE,KAtBvO;AAsB8OY,UAAAA,uBAAuB,EAAE,KAtBvQ;AAsB8QE,UAAAA,oBAAoB,EAAE,KAtBpS;AAsB2SzB,UAAAA,kBAAkB,EAAE,KAtB/T;AAsBsUc,UAAAA,aAAa,EAAE,KAtBrV;AAsB4VG,UAAAA,cAAc,EAAE;AAtB5W,SAAd;AAwBD;;AACDrG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KA/BD,EA+BGsK,KA/BH,CA+BSC,GAAG,IAAI;AACdxK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBuK,GAAnB;AACD,KAjCD,EAJsB,CAsCtB;AACD;;AAEDb,EAAAA,UAAU,GAAG;AACX,QAAI;AACF,YAAMU,IAAI,GAAG;AACXmB,QAAAA,aAAa,EAAE;AADJ,OAAb;AAGA/M,MAAAA,GAAG,CAACuL,IAAJ,CAAStL,WAAW,CAAC+M,IAAZ,CAAiBC,cAA1B,EAA0CrB,IAA1C,EAAgDJ,IAAhD,CAAqDC,GAAG,IAAI;AAC1D,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACfnK,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBiK,GAAG,CAACG,IAA3B;AACA,cAAIsB,OAAO,GAAG,EAAd;;AACA,eAAK,IAAIhH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,GAAG,CAACG,IAAJ,CAAS/G,MAA7B,EAAqCqB,CAAC,EAAtC,EAA0C;AACxCgH,YAAAA,OAAO,CAAC7G,IAAR,CAAa;AACXK,cAAAA,KAAK,EAAE+E,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYiH,aADR;AAEX9H,cAAAA,KAAK,EAAEoG,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYkH;AAFR,aAAb;AAID;;AACD,eAAKzL,QAAL,CAAc;AAAEoH,YAAAA,iBAAiB,EAAE0C,GAAG,CAACG;AAAzB,WAAd;AACD,SAVD,MAUO,CAEN;AACF,OAdD,EAcGE,KAdH,CAcSC,GAAG,IAAI;AACdxK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuK,GAArB;AACD,OAhBD;AAiBD,KArBD,CAqBE,OAAOsB,KAAP,EAAc;AACd9L,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6L,KAArB;AAED;AACF;;AAEDlC,EAAAA,cAAc,GAAG;AACf,QAAI;AACF,YAAMS,IAAI,GAAG;AACXmB,QAAAA,aAAa,EAAE;AADJ,OAAb;AAGA/M,MAAAA,GAAG,CAACuL,IAAJ,CAAStL,WAAW,CAAC+M,IAAZ,CAAiBC,cAA1B,EAA0CrB,IAA1C,EAAgDJ,IAAhD,CAAqDC,GAAG,IAAI;AAC1DlK,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BiK,GAA3B;;AACA,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACfnK,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,cAAIkH,WAAW,GAAG,EAAlB;;AACA,eAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,GAAG,CAACG,IAAJ,CAAS/G,MAA7B,EAAqCqB,CAAC,EAAtC,EAA0C;AACxCwC,YAAAA,WAAW,CAACrC,IAAZ,CAAiB;AACfK,cAAAA,KAAK,EAAE+E,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYiH,aADJ;AAEf9H,cAAAA,KAAK,EAAEoG,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYkH,WAFJ;AAGfpH,cAAAA,OAAO,EAAE;AAHM,aAAjB;AAKD;;AACD,eAAKrE,QAAL,CAAc;AAAEmE,YAAAA,cAAc,EAAE4C,WAAlB;AAA+BgB,YAAAA,gBAAgB,EAAEhB;AAAjD,WAAd;AACD,SAXD,MAWO,CAEN;AACF,OAhBD,EAgBGoD,KAhBH,CAgBSC,GAAG,IAAI;AACdxK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuK,GAArB;AACD,OAlBD;AAmBD,KAvBD,CAuBE,OAAOsB,KAAP,EAAc;AACd9L,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6L,KAArB;AAED;AACF;;AAEDjC,EAAAA,eAAe,GAAG;AAChB,QAAI;AACF,YAAMQ,IAAI,GAAG;AACXmB,QAAAA,aAAa,EAAE;AADJ,OAAb;AAGA/M,MAAAA,GAAG,CAACuL,IAAJ,CAAStL,WAAW,CAAC+M,IAAZ,CAAiBC,cAA1B,EAA0CrB,IAA1C,EAAgDJ,IAAhD,CAAqDC,GAAG,IAAI;AAC1DlK,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBiK,GAAzB;;AACA,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACfnK,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,cAAI8L,YAAY,GAAG,EAAnB;;AACA,eAAK,IAAIpH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,GAAG,CAACG,IAAJ,CAAS/G,MAA7B,EAAqCqB,CAAC,EAAtC,EAA0C;AACxCoH,YAAAA,YAAY,CAACjH,IAAb,CAAkB;AAChBK,cAAAA,KAAK,EAAE+E,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYiH,aADH;AAEhB9H,cAAAA,KAAK,EAAEoG,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYkH;AAFH,aAAlB;AAID;;AACD,eAAKzL,QAAL,CAAc;AAAE0H,YAAAA,sBAAsB,EAAEiE;AAA1B,WAAd;AACD,SAVD,MAUO,CAEN;AACF,OAfD,EAeGxB,KAfH,CAeSC,GAAG,IAAI;AACdxK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuK,GAArB;AACD,OAjBD;AAkBD,KAtBD,CAsBE,OAAOsB,KAAP,EAAc;AACd9L,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6L,KAArB;AAED;AACF;;AAEDhC,EAAAA,WAAW,GAAG;AACZ,QAAI;AACF,YAAMO,IAAI,GAAG;AACXmB,QAAAA,aAAa,EAAE;AADJ,OAAb;AAGA/M,MAAAA,GAAG,CAACuL,IAAJ,CAAStL,WAAW,CAAC+M,IAAZ,CAAiBC,cAA1B,EAA0CrB,IAA1C,EAAgDJ,IAAhD,CAAqDC,GAAG,IAAI;AAC1DlK,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBiK,GAAzB;;AACA,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACfnK,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,cAAI+L,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,GAAG,CAACG,IAAJ,CAAS/G,MAA7B,EAAqCqB,CAAC,EAAtC,EAA0C;AACxCqH,YAAAA,QAAQ,CAAClH,IAAT,CAAc;AACZK,cAAAA,KAAK,EAAE+E,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYiH,aADP;AAEZ9H,cAAAA,KAAK,EAAEoG,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYkH;AAFP,aAAd;AAID;;AACD,eAAKzL,QAAL,CAAc;AAAEmI,YAAAA,kBAAkB,EAAEyD;AAAtB,WAAd;AACD,SAVD,MAUO,CAEN;AACF,OAfD,EAeGzB,KAfH,CAeSC,GAAG,IAAI;AACdxK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuK,GAArB;AACD,OAjBD;AAkBD,KAtBD,CAsBE,OAAOsB,KAAP,EAAc;AACd9L,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6L,KAArB;AAED;AACF;;AAED/B,EAAAA,cAAc,GAAG;AACf,QAAI;AACFtL,MAAAA,GAAG,CAACuL,IAAJ,CAAS,yBAAT,EAAoCC,IAApC,CAAyCC,GAAG,IAAI;AAC9ClK,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCiK,GAAnC;;AACA,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACfnK,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCiK,GAAG,CAACG,IAAvC;AACA,cAAIpC,WAAW,GAAG,EAAlB;;AACA,eAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,GAAG,CAACG,IAAJ,CAAS/G,MAA7B,EAAqCqB,CAAC,EAAtC,EAA0C;AACxCsD,YAAAA,WAAW,CAACnD,IAAZ,CAAiB;AACfK,cAAAA,KAAK,EAAE+E,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAYsH,eADJ;AAEfnI,cAAAA,KAAK,EAAEoG,GAAG,CAACG,IAAJ,CAAS1F,CAAT,EAAY2G,aAFJ;AAGfC,cAAAA,kBAAkB,EAAE;AAHL,aAAjB;AAKD;;AACD,eAAKnL,QAAL,CAAc;AAAE8H,YAAAA,kBAAkB,EAAED;AAAtB,WAAd;AACD,SAXD,MAWO,CAEN;AACF,OAhBD,EAgBGsC,KAhBH,CAgBSC,GAAG,IAAI;AACdxK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuK,GAArB;AACD,OAlBD;AAmBD,KApBD,CAoBE,OAAOsB,KAAP,EAAc;AACd9L,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6L,KAArB;AACD;AACF;;AAQDI,EAAAA,UAAU,CAACpI,KAAD,EAAQqI,IAAR,EAAc;AAEtB,QAAIA,IAAI,KAAK,aAAb,EAA4B;AAC1B,UAAIrI,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,IAA9B,EAAoC;AAClC,aAAK1D,QAAL,CAAc;AAAEiH,UAAAA,gBAAgB,EAAE,IAApB;AAA0BD,UAAAA,WAAW,EAAEtD;AAAvC,SAAd;AACA,aAAKE,IAAL,CAAU,aAAV,EAAyB,IAAzB;AACD,OAHD,MAGO;AACL,aAAK5D,QAAL,CAAc;AAAEiH,UAAAA,gBAAgB,EAAE,KAApB;AAA2BD,UAAAA,WAAW,EAAEtD;AAAxC,SAAd;AACA,aAAKE,IAAL,CAAU,aAAV,EAAyB,KAAzB;AACD;AACF;;AAED,QAAImI,IAAI,KAAK,gBAAb,EAA+B;AAC7B,UAAIrI,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,IAA9B,EAAoC;AAClC,aAAK1D,QAAL,CAAc;AAAEqH,UAAAA,mBAAmB,EAAE,IAAvB;AAA6BF,UAAAA,cAAc,EAAEzD;AAA7C,SAAd;AACA,aAAKE,IAAL,CAAU,gBAAV,EAA4B,IAA5B;AACD,OAHD,MAGO;AACL,aAAK5D,QAAL,CAAc;AAAEqH,UAAAA,mBAAmB,EAAE,KAAvB;AAA8BF,UAAAA,cAAc,EAAEzD;AAA9C,SAAd;AACA,aAAKE,IAAL,CAAU,gBAAV,EAA4B,KAA5B;AACD;AACF;;AAED,QAAImI,IAAI,KAAK,qBAAb,EAAoC;AAClC,UAAIrI,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,IAA9B,EAAoC;AAClC,aAAK1D,QAAL,CAAc;AAAE2H,UAAAA,wBAAwB,EAAE,IAA5B;AAAkCF,UAAAA,mBAAmB,EAAE/D;AAAvD,SAAd;AACA,aAAKE,IAAL,CAAU,qBAAV,EAAiC,IAAjC;AACD,OAHD,MAGO;AACL,aAAK5D,QAAL,CAAc;AAAE2H,UAAAA,wBAAwB,EAAE,KAA5B;AAAmCF,UAAAA,mBAAmB,EAAE/D;AAAxD,SAAd;AACA,aAAKE,IAAL,CAAU,qBAAV,EAAiC,KAAjC;AACD;AACF;;AAED,QAAImI,IAAI,KAAK,iBAAb,EAAgC;AAC9B,UAAIrI,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,IAA9B,EAAoC;AAClC,aAAK1D,QAAL,CAAc;AAAEoI,UAAAA,oBAAoB,EAAE,IAAxB;AAA8BF,UAAAA,eAAe,EAAExE;AAA/C,SAAd;AACA,aAAKE,IAAL,CAAU,iBAAV,EAA6B,IAA7B;AACD,OAHD,MAGO;AACL,aAAK5D,QAAL,CAAc;AAAEoI,UAAAA,oBAAoB,EAAE,KAAxB;AAA+BF,UAAAA,eAAe,EAAExE;AAAhD,SAAd;AACA,aAAKE,IAAL,CAAU,iBAAV,EAA6B,KAA7B;AACD;AACF;AACF;;AA8JDA,EAAAA,IAAI,CAACoI,KAAD,EAAQC,SAAR,EAAmB;AACrB,QAAIA,SAAJ,EAAe;AACbC,MAAAA,QAAQ,CAACC,cAAT,CAAwBH,KAAxB,EAA+BI,SAA/B,GAA2C,yBAA3C;AACD,KAFD,MAEO;AACLF,MAAAA,QAAQ,CAACC,cAAT,CAAwBH,KAAxB,EAA+BI,SAA/B,GAA2C,cAA3C;AACD;AACF;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKvM,KAAL,CAAWwM,OAAX,CAAmB5H,IAAnB,CAAwB;AACtB6H,MAAAA,QAAQ,EAAE;AADY,KAAxB;AAGD;;AAEDC,EAAAA,IAAI,GAAG;AACL;;AACA,QACE,KAAKvK,KAAL,CAAW0B,gBAAX,KAAgC,KAAhC,IACA,KAAK1B,KAAL,CAAWgF,gBAAX,KAAgC,KADhC,IAEA,KAAKhF,KAAL,CAAWoF,mBAAX,KAAmC,KAFnC,IAGA,KAAKpF,KAAL,CAAWkD,kBAAX,KAAkC,KAHlC,IAIA;AACA,SAAKlD,KAAL,CAAW0F,wBAAX,KAAwC,KALxC,IAMA,KAAK1F,KAAL,CAAWsD,mBAAX,KAAmC,KANnC,IAOA,KAAKtD,KAAL,CAAWmG,oBAAX,KAAoC,KAPpC,IAQA,KAAKnG,KAAL,CAAW+C,kBAAX,KAAkC,KATpC,CAUE;AACA;AACA;AAZF,MAaE;AACA,YAAIiF,IAAI,GACR;AACEpD,UAAAA,cAAc,EAAE,KAAK5E,KAAL,CAAW4E,cAD7B;AAEE7C,UAAAA,WAAW,EAAE,KAAK/B,KAAL,CAAW+B,WAF1B;AAGEgD,UAAAA,WAAW,EAAE,KAAK/E,KAAL,CAAW+E,WAH1B;AAIEG,UAAAA,cAAc,EAAE,KAAKlF,KAAL,CAAWkF,cAJ7B;AAKE/B,UAAAA,aAAa,EAAE,KAAKnD,KAAL,CAAWmD,aAL5B;AAMEE,UAAAA,eAAe,EAAE,KAAKrD,KAAL,CAAWqD,eAN9B;AAOEmC,UAAAA,mBAAmB,EAAE,KAAKxF,KAAL,CAAWwF,mBAPlC;AAQErH,UAAAA,QAAQ,EAAE,KAAK6B,KAAL,CAAW7B,QARvB;AASEE,UAAAA,SAAS,EAAE,KAAK2B,KAAL,CAAW3B,SATxB;AAUEoF,UAAAA,cAAc,EAAE,KAAKzD,KAAL,CAAWyD,cAV7B;AAWEwC,UAAAA,eAAe,EAAG,KAAKjG,KAAL,CAAWiG,eAAX,IAA8B,KAA/B,GAAyC,IAAzC,GAAkD,KAXrE;AAYErC,UAAAA,YAAY,EAAE,KAAK5D,KAAL,CAAW4D,YAZ3B;AAaEX,UAAAA,aAAa,EAAE,KAAKjD,KAAL,CAAWiD,aAb5B;AAcEuH,UAAAA,cAAc,EAAElO,YAAY,CAACmO,cAAb;AAdlB,SADA;AAiBA9M,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BoK,IAA5B;AAEA5L,QAAAA,GAAG,CAACuL,IAAJ,CAAS,2BAAT,EAAsCK,IAAtC,EAA4CJ,IAA5C,CAAiDC,GAAG,IAAI;AACtDlK,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiK,GAAxB;;AACA,cAAIA,GAAG,CAACC,OAAR,EAAiB;AACf;AACAzM,YAAAA,KAAK,CAACyM,OAAN,CAAc,kCAAd,EAFe,CAGf;AACA;AACD,WALD,MAKO,CAEN;AACF,SAVD,EAUGI,KAVH,CAUSC,GAAG,IAAI,CACf,CAXD;AAaD,OA9CD,MA8CO;AACL,WAAKxG,IAAL,CAAU,aAAV,EAAyB,KAAK3B,KAAL,CAAW0B,gBAApC;AACA,WAAKC,IAAL,CAAU,aAAV,EAAyB,KAAK3B,KAAL,CAAWgF,gBAApC;AACA,WAAKrD,IAAL,CAAU,gBAAV,EAA4B,KAAK3B,KAAL,CAAWoF,mBAAvC;AACA,WAAKzD,IAAL,CAAU,eAAV,EAA2B,KAAK3B,KAAL,CAAWkD,kBAAtC,EAJK,CAKL;;AACA,WAAKvB,IAAL,CAAU,qBAAV,EAAiC,KAAK3B,KAAL,CAAW0F,wBAA5C,EANK,CAOL;AACA;AACA;;AACA,WAAK/D,IAAL,CAAU,gBAAV,EAA4B,KAAK3B,KAAL,CAAWsD,mBAAvC;AACA,WAAK3B,IAAL,CAAU,iBAAV,EAA6B,KAAK3B,KAAL,CAAWmG,oBAAxC;AACA,WAAKxE,IAAL,CAAU,eAAV,EAA2B,KAAK3B,KAAL,CAAW+C,kBAAtC;AACD;AACF;;AAED2H,EAAAA,kBAAkB,GAAG;AACnB,SAAK3M,QAAL,CAAc;AACZgE,MAAAA,WAAW,EAAE,EADD;AACKgD,MAAAA,WAAW,EAAE,EADlB;AACsBG,MAAAA,cAAc,EAAE,EADtC;AAC0C/B,MAAAA,aAAa,EAAE,EADzD;AAC6DE,MAAAA,eAAe,EAAE,EAD9E;AAEZmC,MAAAA,mBAAmB,EAAE,EAFT;AAEarB,MAAAA,kBAAkB,EAAE,EAFjC;AAEqCV,MAAAA,cAAc,EAAE,EAFrD;AAEyDwC,MAAAA,eAAe,EAAE,EAF1E;AAGZrC,MAAAA,YAAY,EAAE;AAHF,KAAd;AAKA,SAAK/F,KAAL,CAAWwM,OAAX,CAAmB5H,IAAnB,CAAwB;AACtB6H,MAAAA,QAAQ,EAAE;AADY,KAAxB;AAGD;;AAMDK,EAAAA,kBAAkB,GAAG;AACnB,SAAK5M,QAAL,CAAc;AAAE4G,MAAAA,aAAa,EAAE;AAAjB,KAAd;AACD;;AAeDiG,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,QAAIA,IAAI,IAAI,MAAZ,EAAoB;AAClB,WAAK9M,QAAL,CAAc;AAAEwI,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EADkB,CAElB;AACD,KAHD,MAGO;AACL,WAAKxI,QAAL,CAAc;AAAEwI,QAAAA,QAAQ,EAAE,IAAZ;AAAkB/B,QAAAA,oBAAoB,EAAE;AAAxC,OAAd;AACA,UAAIsG,OAAO,GAAGxO,YAAY,CAAC+L,OAAb,CAAqB,KAAKrI,KAAL,CAAWiJ,aAAhC,IAAiD,EAAjD,GAAsD,KAAKjJ,KAAL,CAAWiJ,aAAX,CAAyB8B,KAAzB,CAA+B,GAA/B,CAApE;AACA,UAAIC,YAAY,GAAG1O,YAAY,CAAC+L,OAAb,CAAqB,KAAKrI,KAAL,CAAWkJ,kBAAhC,IAAsD,EAAtD,GAA2D,KAAKlJ,KAAL,CAAWkJ,kBAAX,CAA8B6B,KAA9B,CAAoC,GAApC,CAA9E;AACA,UAAIE,UAAU,GAAG,EAAjB;;AACA,UAAIH,OAAO,CAAC7J,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwI,OAAO,CAAC7J,MAA5B,EAAoCqB,CAAC,EAArC,EAAyC;AACvC,cAAI4I,MAAM,GAAG,KAAKlL,KAAL,CAAW6F,kBAAX,CAA8BsF,IAA9B,CAAmCtI,CAAC,IAAIA,CAAC,CAACpB,KAAF,IAAWqJ,OAAO,CAACxI,CAAD,CAA1D,CAAb;AACA4I,UAAAA,MAAM,CAAChC,kBAAP,GAA4B8B,YAAY,CAAC1I,CAAD,CAAxC;AACA3E,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsN,MAAxB;AACAD,UAAAA,UAAU,CAACxI,IAAX,CAAgByI,MAAhB;AACD;AACF;;AACD,WAAKnN,QAAL,CAAc;AAAE0G,QAAAA,WAAW,EAAEwG;AAAf,OAAd;AACD;AACF;;AAEDG,EAAAA,UAAU,CAACP,IAAD,EAAO;AACf,QAAIA,IAAI,IAAI,MAAZ,EAAoB;AAClB,WAAK9M,QAAL,CAAc;AAAEyI,QAAAA,YAAY,EAAE;AAAhB,OAAd,EADkB,CAElB;AACD,KAHD,MAGO;AACL,WAAKzI,QAAL,CAAc;AAAEyI,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD;AACF;;AAED6E,EAAAA,iBAAiB,GAAG;AAClB,SAAKtN,QAAL,CAAc;AAAEwI,MAAAA,QAAQ,EAAE;AAAZ,KAAd,EADkB,CAElB;AACD;;AAED+E,EAAAA,eAAe,GAAG;AAChB,QAAI;AACF,UAAItD,IAAI,GAAG;AACTvD,QAAAA,WAAW,EAAE,KAAKzE,KAAL,CAAWyE,WADf;AAETG,QAAAA,cAAc,EAAE,KAAK/G,KAAL,CAAWkJ,KAAX,CAAiBC,MAAjB,CAAwBI,EAF/B;AAGTmE,QAAAA,WAAW,EAAEjP,YAAY,CAACmO,cAAb,EAHJ;AAIT9D,QAAAA,UAAU,EAAE,KAAK3G,KAAL,CAAW2G;AAJd,OAAX;AAMAhJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BoK,IAA1B;AACA5L,MAAAA,GAAG,CAACuL,IAAJ,CAAS,uBAAT,EAAkCK,IAAlC,EAAwCJ,IAAxC,CAA6CC,GAAG,IAAI;AAClDlK,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiK,GAA/B;;AACA,YAAIA,GAAG,CAACC,OAAJ,IAAe,IAAnB,EAAyB;AACvBzM,UAAAA,KAAK,CAACyM,OAAN,CAAc,mCAAd;AACAzG,UAAAA,UAAU,CAAC,YAAY;AACrBmK,YAAAA,MAAM,CAAC7L,QAAP,CAAgB8L,MAAhB;AACD,WAFS,EAEP,GAFO,CAAV;AAGD;AACF,OARD;AASD,KAjBD,CAiBE,OAAOhC,KAAP,EAAc;AACd9L,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B6L,KAA/B;AACD;AAEF;;AAUDiC,EAAAA,MAAM,GAAG;AACP,QAAI;AACF,UAAI1D,IAAI,GAAG;AACTpD,QAAAA,cAAc,EAAE,KAAK5E,KAAL,CAAW4E,cADlB;AAET+G,QAAAA,SAAS,EAAErP,YAAY,CAACmO,cAAb;AAFF,OAAX;AAIA9M,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBoK,IAAtB;AACA5L,MAAAA,GAAG,CAACuL,IAAJ,CAAS,wBAAT,EAAmCK,IAAnC,EAAyCJ,IAAzC,CAA8CC,GAAG,IAAI;AACnD,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACf,eAAKpD,WAAL;AACArJ,UAAAA,KAAK,CAACyM,OAAN,CAAc,mCAAd;AACA,eAAK4C,kBAAL;AACD;AACF,OAND;AAOD,KAbD,CAaE,OAAOjB,KAAP,EAAc;AACd9L,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6L,KAArB;AACD;AACF;;AAEDmC,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAK5L,KAAL,CAAWsG,MAAX,GAAoB,oBAApB,GAA2C,mBAAjD,MADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,qBAAd;AAAoC,MAAA,YAAY,EAAC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKtG,KAAL,CAAW6E,WAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,MAAnB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,IAAI,EAAC,aAA3C;AAAyD,MAAA,EAAE,EAAC,aAA5D;AAA0E,MAAA,QAAQ,EAAG9D,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAA3F;AAAiH,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAW+B,WAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHF,CADF,CAJF,CADF,CAFF,eAiBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAK/B,KAAL,CAAW8E,WAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,aAA1B;AAAwC,MAAA,EAAE,EAAC,aAA3C;AAAyD,MAAA,QAAQ,EAAG/D,CAAD,IAAO,KAAK8I,UAAL,CAAgB9I,CAAC,CAACQ,MAAF,CAASE,KAAzB,EAAgC,aAAhC,CAA1E;AAA0H,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW+E,WAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEG,KAAK/E,KAAL,CAAWkC,cAAX,CAA0BzD,GAA1B,CAA8B,CAACqL,IAAD,EAAOxH,CAAP,KAAa;AAC1C,UAAI,CAACwH,IAAI,CAAC1H,OAAV,EAAmB;AACjB,4BAAQ;AAAQ,UAAA,KAAK,EAAE0H,IAAI,CAAChH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BgH,IAAI,CAACrI,KAAjC,CAAR;AACD;AACF,KAJA,CAFH,CADF,eAUE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAVF,CADF,CAJF,CADF,CAjBF,eAuCE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKzB,KAAL,CAAWiF,cAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,gBAA1B;AAA2C,MAAA,EAAE,EAAC,gBAA9C;AAA+D,MAAA,QAAQ,EAAGlE,CAAD,IAAO,KAAK8I,UAAL,CAAgB9I,CAAC,CAACQ,MAAF,CAASE,KAAzB,EAAgC,gBAAhC,CAAhF;AAAmI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWkF,cAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEG,KAAKlF,KAAL,CAAWmF,iBAAX,CAA6B1G,GAA7B,CAAiC,CAACqL,IAAD,EAAOxH,CAAP,KAAa;AAC7C,0BAAQ;AAAQ,QAAA,KAAK,EAAEwH,IAAI,CAAC+B,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B/B,IAAI,CAAChH,KAA/B,CAAR;AACD,KAFA,CAFH,CADF,eAQE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,CADF,CAJF,CADF,CAvCF,eA2DE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAK9C,KAAL,CAAWqF,aAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,iBAAnB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,IAAI,EAAC,eAAtD;AAAsE,MAAA,EAAE,EAAC,eAAzE;AAAyF,MAAA,QAAQ,EAAGtE,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAA1G;AAAgI,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWmD,aAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CADF,CAJF,CADF,CA3DF,eA0EE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKnD,KAAL,CAAWsF,eAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,UAAnB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,IAAI,EAAC,iBAA/C;AAAiE,MAAA,EAAE,EAAC,iBAApE;AAAsF,MAAA,QAAQ,EAAGvE,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAAvG;AAA6H,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWqD,eAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,CADF,CAJF,CADF,CA1EF,eAyFE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKrD,KAAL,CAAWuF,mBAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,qBAA1B;AAAgD,MAAA,EAAE,EAAC,qBAAnD;AAAyE,MAAA,QAAQ,EAAGxE,CAAD,IAAO,KAAK8I,UAAL,CAAgB9I,CAAC,CAACQ,MAAF,CAASE,KAAzB,EAAgC,qBAAhC,CAA1F;AAAkJ,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWwF,mBAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEG,KAAKxF,KAAL,CAAWyF,sBAAX,CAAkChH,GAAlC,CAAsC,CAACqL,IAAD,EAAOxH,CAAP,KAAa;AAClD,0BAAQ;AAAQ,QAAA,KAAK,EAAEwH,IAAI,CAAChH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BgH,IAAI,CAACrI,KAAjC,CAAR;AACD,KAFA,CAFH,CADF,eAQE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCARF,CADF,CAJF,CADF,CAzFF,eA6GE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKzB,KAAL,CAAW2F,kBAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAIE;AAAK,MAAA,KAAK,EAAE;AAAEpF,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CAJF,EAYI,KAAKP,KAAL,CAAWsG,MAAZ,gBACC,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEwF,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,YAAY,EAAE;AAAhC,OAAf;AAAyD,MAAA,KAAK,EAAC,SAA/D;AACE,MAAA,OAAO,EAAE,KAAK/L,KAAL,CAAWwG,YAAX,GAA0B,MAAM,KAAK4E,UAAL,CAAgB,MAAhB,CAAhC,GAA0D,MAAM,KAAKA,UAAL,CAAgB,MAAhB,CAD3E;AAEE,MAAA,KAAK,EAAE,KAAKpL,KAAL,CAAWwG,YAAX,GAA0B,MAA1B,GAAmC,MAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAG,MAAA,SAAS,EAAE,KAAKxG,KAAL,CAAWwG,YAAX,GAA0B,WAA1B,GAAwC,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADD,gBAUG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBN,eAsCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKxG,KAAL,CAAWsG,MAAX,GAAqB,KAAKtG,KAAL,CAAWwG,YAAX,IAA2B,KAAhD,GAA0D,KAAKxG,KAAL,CAAWwG,YAAX,IAA2B,IAAtG;AAA6G,MAAA,IAAI,EAAC,MAAlH;AAAyH,MAAA,IAAI,EAAC,UAA9H;AAAyI,MAAA,EAAE,EAAC,UAA5I;AAAuJ,MAAA,QAAQ,EAAGzF,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAAxK;AAA8L,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAW7B,QAAhN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHF,CADF,eAOE;AAAK,MAAA,KAAK,EAAE;AAAEoC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWsG,MAAX,GAAqB,KAAKtG,KAAL,CAAWwG,YAAX,IAA2B,KAAhD,GAA0D,KAAKxG,KAAL,CAAWwG,YAAX,IAA2B,IAAtG;AAA6G,MAAA,IAAI,EAAC,MAAlH;AAAyH,MAAA,IAAI,EAAC,WAA9H;AAA0I,MAAA,EAAE,EAAC,WAA7I;AAAyJ,MAAA,QAAQ,EAAGzF,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAA1K;AAAgM,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAW3B,SAAlN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHF,CAPF,CAtCF,CADF,CA7GF,EA4KI,KAAK2B,KAAL,CAAWsG,MAAZ,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKtG,KAAL,CAAW4F,WAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEkG,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,YAAY,EAAE;AAAhC,OAAf;AAAyD,MAAA,KAAK,EAAC,SAA/D;AACE,MAAA,OAAO,EAAE,KAAK/L,KAAL,CAAWuG,QAAX,GAAsB,MAAM,KAAKqE,QAAL,CAAc,MAAd,CAA5B,GAAoD,MAAM,KAAKA,QAAL,CAAc,MAAd,CADrE;AAEE,MAAA,KAAK,EAAE,KAAK5K,KAAL,CAAWuG,QAAX,GAAsB,MAAtB,GAA+B,MAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAG,MAAA,SAAS,EAAE,KAAKvG,KAAL,CAAWuG,QAAX,GAAsB,WAAtB,GAAoC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CAJF,EAYG,KAAKvG,KAAL,CAAWuG,QAAX,IAAuB,IAAvB,gBACC,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgC,MAAA,EAAE,EAAC,aAAnC;AAAiD,MAAA,WAAW,EAAC,OAA7D;AAAqE,MAAA,KAAK,EAAE,KAAKvG,KAAL,CAAWyE,WAAvF;AAAoG,MAAA,OAAO,EAAE,KAAKzE,KAAL,CAAW6F,kBAAxH;AAA4I,MAAA,KAAK,EAAE;AAAEvF,QAAAA,KAAK,EAAE;AAAT,OAAnJ;AACE,MAAA,QAAQ,EAAGS,CAAD,IAAO,KAAKwD,SAAL,CAAexD,CAAf;AAAoB;AADvC;AAEE,MAAA,MAAM,EAAE,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADD,gBAUG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKf,KAAL,CAAWgJ,cAAnB,CADF,CADF,CAtBN,CADF,CADF,eAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhJ,KAAL,CAAWuG,QAAX,IAAuB,IAAvB,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,yCAAlB;AAA4D,MAAA,OAAO,EAAE,MAAM,KAAK+E,eAAL,EAA3E;AAAmG,MAAA,KAAK,EAAE;AAAEU,QAAAA,UAAU,EAAE;AAAd,OAA1G;AAA6H,MAAA,KAAK,EAAC,SAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,yCAAlB;AAA4D,MAAA,OAAO,EAAE,MAAM,KAAKX,iBAAL,EAA3E;AAAqG,MAAA,KAAK,EAAE;AAAEW,QAAAA,UAAU,EAAE;AAAd,OAA5G;AAA+H,MAAA,KAAK,EAAC,QAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAHF,CADD,GAaI,IAdP,CAlCF,CADD,GAoDI,IAhOP,eAkOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEzL,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKP,KAAL,CAAW+F,cAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAA6C,MAAA,IAAI,EAAC,gBAAlD;AAAmE,MAAA,EAAE,EAAC,gBAAtE;AAAuF,MAAA,QAAQ,EAAGhF,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAAxG;AAA8H,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWyD,cAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHF,CADF,CAJF,CADF,CAlOF,eAiPE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKzD,KAAL,CAAWgG,eAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,iBAA1B;AAA4C,MAAA,EAAE,EAAC,iBAA/C;AAAiE,MAAA,QAAQ,EAAGjF,CAAD,IAAO,KAAK8I,UAAL,CAAgB9I,CAAC,CAACQ,MAAF,CAASE,KAAzB,EAAgC,iBAAhC,CAAlF;AAAsI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWiG,eAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEG,KAAKjG,KAAL,CAAWkG,kBAAX,CAA8BzH,GAA9B,CAAkC,CAACqL,IAAD,EAAOxH,CAAP,KAAa;AAC9C,0BAAQ;AAAQ,QAAA,KAAK,EAAEwH,IAAI,CAAChH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BgH,IAAI,CAACrI,KAAjC,CAAR;AACD,KAFA,CAFH,CADF,eAQE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCARF,CADF,CAJF,CADF,CAjPF,eAqQE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKzB,KAAL,CAAWoG,YAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAA2C,MAAA,IAAI,EAAC,cAAhD;AAA+D,MAAA,EAAE,EAAC,cAAlE;AAAiF,MAAA,QAAQ,EAAGrF,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAAlG;AAAwH,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAW4D,YAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHF,CAJF,CADF,CArQF,eAkRE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAK5D,KAAL,CAAWqG,aAAnB,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,eAAxB;AAAwC,MAAA,EAAE,EAAC,eAA3C;AAA2D,MAAA,QAAQ,EAAGtF,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,CAA5E;AAAkG,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWiD,aAApH;AACE,MAAA,GAAG,EAAE3H,MAAM,GAAG0H,MAAT,CAAgB,YAAhB,CADP;AAEE,MAAA,GAAG,EAAE1H,MAAM,GAAG2Q,GAAT,CAAa,GAAb,EAAkB,OAAlB,EAA2BjJ,MAA3B,CAAkC,YAAlC,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALF,CAJF,CADF,CAlRF,CADF,CADF,CADF,eAwSE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,CAAC1G,YAAY,CAAC+L,OAAb,CAAqB,KAAKrI,KAAL,CAAW7B,QAAhC,CAAD,IAA8C,CAAC7B,YAAY,CAAC+L,OAAb,CAAqB,KAAKrI,KAAL,CAAW3B,SAAhC,CAAhD,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AACE,MAAA,aAAa,EAAE,KAAK2B,KAAL,CAAWc,aAD5B;AAEE,MAAA,WAAW,EAAGC,CAAD,IAAO,KAAKmD,UAAL,CAAgBnD,CAAhB,CAFtB;AAGE,MAAA,QAAQ,EAAEd,UAAU,CAAC,KAAKD,KAAL,CAAW7B,QAAZ,CAHtB;AAIE,MAAA,SAAS,EAAE8B,UAAU,CAAC,KAAKD,KAAL,CAAW3B,SAAZ,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAUG,IAXN,CADF,CADF,CAxSF,CADF,eA8TE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAE6N,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAK3B,IAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoD;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApD,UAFF,EAEgG,GAFhG,EAGI,KAAKvK,KAAL,CAAWsG,MAAX,IAAqB,IAAtB,gBACC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAE,MAAM,KAAKqE,kBAAL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiE;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE,YADD,GAGG,IANN,EAQG,GARH,eAQO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAKD,kBAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkE;AAAG,MAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlE,YARP,CADF,CADF,CADF,CA9TF,CADF,CADF,CAJF,eAuVE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAK1K,KAAL,CAAW2E,aAA1B;AAAyC,MAAA,MAAM,EAAE,KAAKD,WAAtD;AACE,MAAA,SAAS,EAAE,cAAc,KAAK7G,KAAL,CAAWsM,SADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKzF,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DACsD,KAAK1E,KAAL,CAAW+B,WADjE,MAHF,eAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAK2J,MAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsD;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,QADF,EACgG,GADhG,eAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,KAAKhH,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmD;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnD,OAFF,CANF,CAvVF,CADF;AAqWD;;AAliCqC;;AAqiCxC,eAAe3H,eAAe,GAAImE,eAAJ,CAA9B","sourcesContent":["/* eslint-disable no-undef */\r\nimport React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport moment from 'moment';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Container, Form, Col, Row, Input, Card, CardBody, Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport api from '../../../utils/apiClient';\r\nimport APIConstant, { CommonConfig } from '../../../utils/constants';\r\nimport { compose, withProps, lifecycle } from \"recompose\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nconst { SearchBox } = require(\"react-google-maps/lib/components/places/SearchBox\");\r\nconst _ = require(\"lodash\");\r\n\r\nconst MyMapComponent = compose(\r\n  withProps({\r\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCMQQ0t3ArJGJlKkURVXKCkDZvJ0IQIsuo&v=3.exp&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n  }),\r\n  lifecycle({\r\n    componentWillMount() {\r\n      console.log(\"sdv=vd=v=dsvd=vsdv=props\", this.props);\r\n      const refs = {}\r\n\r\n      this.setState({\r\n        bounds: null,\r\n        center: {\r\n          // lat: 41.9, lng: -87.624\r\n          lat: this.props.latitude, lng: this.props.longitude\r\n        },\r\n        markers: [],\r\n        onMapMounted: ref => {\r\n          refs.map = ref;\r\n        },\r\n        onBoundsChanged: () => {\r\n          this.setState({\r\n            bounds: refs.map.getBounds(),\r\n            center: refs.map.getCenter(),\r\n          })\r\n        },\r\n        onSearchBoxMounted: ref => {\r\n          refs.searchBox = ref;\r\n        },\r\n        onPlacesChanged: () => {\r\n          const places = refs.searchBox.getPlaces();\r\n          const bounds = new google.maps.LatLngBounds();\r\n          places.forEach(place => {\r\n            if (place.geometry.viewport) {\r\n              bounds.union(place.geometry.viewport)\r\n            } else {\r\n              bounds.extend(place.geometry.location)\r\n            }\r\n          });\r\n          const nextMarkers = places.map(place => ({\r\n            position: place.geometry.location,\r\n          }));\r\n          console.log(\"sdv=vd=v=dsvd=vsdv=nextMarkers\", nextMarkers);\r\n          const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\r\n          this.setState({\r\n            center: nextCenter,\r\n            markers: nextMarkers,\r\n          });\r\n          // refs.map.fitBounds(bounds);\r\n        },\r\n      })\r\n    },\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)((props) =>\r\n  <div>\r\n    {console.log(\"sdv=vd=v=dsvd=vsdv=\", props, typeof props.center.lat)}\r\n    <GoogleMap\r\n      ref={props.onMapMounted}\r\n      defaultZoom={8}\r\n      center={(typeof props.center.lat === \"number\") ?\r\n        ({ lat: props.latitude != props.center.lat ? parseFloat(props.latitude) : props.center.lat, lng: props.longitude != props.center.lng ? parseFloat(props.longitude) : props.center.lng })\r\n        : ({ lat: props.center.lat(), lng: props.center.lng() })}\r\n    >\r\n      <SearchBox\r\n        ref={props.onSearchBoxMounted}\r\n        bounds={props.bounds}\r\n        controlPosition={google.maps.ControlPosition.TOP_LEFT}\r\n        onPlacesChanged={props.onPlacesChanged}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search your place here\"\r\n          style={{\r\n            boxSizing: `border-box`,\r\n            border: `1px solid transparent`,\r\n            width: `240px`,\r\n            height: `32px`,\r\n            marginTop: `27px`,\r\n            padding: `0 12px`,\r\n            borderRadius: `3px`,\r\n            boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n            fontSize: `14px`,\r\n            outline: `none`,\r\n            textOverflow: `ellipses`,\r\n          }}\r\n        />\r\n      </SearchBox>\r\n      {props.isMarkerShown && <Marker onDragEnd={(e) => props.getPosition(e)}\r\n        draggable={true}\r\n        position={(props.markers.length) ? (props.markers[0].position) : { lat: parseFloat(props.latitude), lng: parseFloat(props.longitude) }}\r\n      />\r\n      }\r\n    </GoogleMap>\r\n  </div>\r\n)\r\n\r\nclass AddMooringGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MooringGuideId: '',\r\n\r\n      mooringname: 'Name *',\r\n      mooringName: '',\r\n      mooringNameError: true,\r\n\r\n      mooringtype: 'Mooring Type *',\r\n      mooringType: '',\r\n      mooringTypearr: [],\r\n      mooringTypeError: true,\r\n\r\n      mooringcountry: 'Country *',\r\n      mooringCountry: '',\r\n      mooringCountryarr: [],\r\n      mooringCountryError: true,\r\n\r\n      mooringcounty: 'County / Region *',\r\n      mooringCounty: '',\r\n      mooringCountyError: true,\r\n\r\n      mooringlocation: 'Location',\r\n      mooringLocation: '',\r\n      mooringLocationError: true,\r\n\r\n      mooringlocationType: 'Location Type *',\r\n      mooringLocationType: '',\r\n      mooringLocationTypearr: [],\r\n      mooringLocationTypeError: true,\r\n\r\n      mooringcoordinates: 'Coordinates',\r\n      mooringCoordinates: '',\r\n      mooringCoordinatesError: true,\r\n\r\n      mooringzone: 'Zone',\r\n      mooringZone: '',\r\n      mooringZoneTypearr: [],\r\n      mooringTypearrCp: [],\r\n      mooringZoneTypeError: true,\r\n\r\n      mooringloading: 'Loading (%) *',\r\n      mooringLoading: '',\r\n      mooringLoadingError: true,\r\n\r\n      mooringapproval: 'Approval Required *',\r\n      mooringApproval: '',\r\n      mooringApprovalarr: [],\r\n      mooringApprovalError: true,\r\n\r\n      mooringnotes: 'Notes',\r\n      mooringNotes: '',\r\n      mooringNotesError: true,\r\n\r\n      effectivedate: 'Effective Date *',\r\n      effectiveDate: moment().format('YYYY-MM-DD'),\r\n      effectiveDateError: false,\r\n\r\n      arr: [],\r\n\r\n      isMarkerShown: false,\r\n      isEdit: false,\r\n      isEnable: false,\r\n      enableLatlng: false,\r\n      isDeleteModel: false,\r\n\r\n      latitude: null,\r\n      latitudeError: true,\r\n      longitude: null,\r\n      longitudeError: true,\r\n\r\n      defaultLat: 0,\r\n      defaultLng: 0,\r\n\r\n      LanguageId: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n      this.getMooringGuideData(this.props.match.params.Id);\r\n    }\r\n    this.getMooringGuide();\r\n    this.getCountry();\r\n    this.getmooringType();\r\n    this.getLocationType();\r\n    this.getApproval();\r\n    this.getMooringZone();\r\n    this.delayedShowMarker();\r\n  }\r\n\r\n  getMooringGuide() {\r\n    api.post('api/getMooringGuide').then(res => {\r\n      if (res.success) {\r\n        var formattedData = [];\r\n        for (var i = 0; i < res.data.length; i++) {\r\n          formattedData.push({\r\n            MooringGuideId: res.data[i].MooringGuideId,\r\n            MooringName: res.data[i].MooringName,\r\n            mooring_Type: res.data[i].MooringType,\r\n          });\r\n        }\r\n        this.setState({ arr: formattedData });\r\n        console.log(\"handleChange\", this.state.arr);\r\n      } else {\r\n        console.log(\"Else\");\r\n\r\n      }\r\n    }).catch(err => {\r\n\r\n    });\r\n  }\r\n\r\n  getMooringGuideData(Id) {\r\n    var data = {\r\n      MooringGuideId: Id,\r\n    }\r\n    api.post('api/getMooringGuideData', data).then(res => {\r\n      if (res.success) {\r\n        console.log(\"getMooringGuideData\", res.data[0]);\r\n        var Longitude = CommonConfig.isEmpty(res.data[0].Longitude) ? this.state.defaultLng : Number(res.data[0].Longitude);\r\n        var Latitude = CommonConfig.isEmpty(res.data[0].Latitude) ? this.state.defaultLat : Number(res.data[0].Latitude);\r\n        this.setState({\r\n          MooringGuideId: CommonConfig.isEmpty(res.data[0].MooringGuideId) ? '' : res.data[0].MooringGuideId,\r\n          isMarkerShown: true,\r\n          mooringName: CommonConfig.isEmpty(res.data[0].MooringName) ? '' : res.data[0].MooringName,\r\n          mooringCountry: CommonConfig.isEmpty(res.data[0].CountryId) ? '' : res.data[0].CountryId,\r\n          mooringCounty: CommonConfig.isEmpty(res.data[0].Region) ? '' : res.data[0].Region,\r\n          mooringLocation: CommonConfig.isEmpty(res.data[0].Location) ? '' : res.data[0].Location,\r\n          mooringLocationType: CommonConfig.isEmpty(res.data[0].LocationType) ? '' : res.data[0].LocationType,\r\n          mooringLoading: CommonConfig.isEmpty(res.data[0].LoadingPercent) ? 0 : res.data[0].LoadingPercent,\r\n          mooringType: CommonConfig.isEmpty(res.data[0].MooringType) ? '' : res.data[0].MooringType,\r\n          mooringApproval: CommonConfig.isEmpty(res.data[0].IsApprovalRequired) ? '' : ((res.data[0].IsApprovalRequired.data[0] === 0) ? 'No' : 'Yes'),\r\n          mooringNotes: CommonConfig.isEmpty(res.data[0].Notes) ? '' : res.data[0].Notes,\r\n          mooringCoordinates: Latitude + ' ,' + Longitude,\r\n          mooringZone: CommonConfig.isEmpty(res.data[0].MooringZone) ? '' : res.data[0].MooringZone,\r\n          mooringZoneDis: CommonConfig.isEmpty(res.data[0].MooringZone) ? '' : res.data[0].MooringZone,\r\n          MooringZoneId: res.data[0].MooringZoneId,\r\n          MooringZoneGuideId: res.data[0].MooringZoneGuideId,\r\n          effectiveDate: moment().format('YYYY-MM-DD'),\r\n          latitude: Latitude,\r\n          longitude: Longitude,\r\n          isEdit: true,\r\n\r\n          mooringNameError: false, mooringCountryError: false, mooringCountyError: false, mooringLocationError: false, mooringLocationTypeError: false, mooringLoadingError: false, mooringTypeError: false, mooringApprovalError: false, mooringNotesError: false, mooringCoordinatesError: false, mooringZoneTypeError: false, effectiveDateError: false, latitudeError: false, longitudeError: false\r\n        });\r\n      }\r\n      console.log(\"xfgxffg\");\r\n    }).catch(err => {\r\n      console.log(\"err\", err);\r\n    });\r\n    // }\r\n  }\r\n\r\n  getCountry() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'COUNTRY',\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        if (res.success) {\r\n          console.log(\"COUNTRY\", res.data);\r\n          var Country = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            Country.push({\r\n              label: res.data[i].StringMapName,\r\n              value: res.data[i].Description\r\n            })\r\n          }\r\n          this.setState({ mooringCountryarr: res.data });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n\r\n    }\r\n  }\r\n\r\n  getmooringType() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'MOORINGTYPE',\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        console.log(\"MOORINGTYPE\", res);\r\n        if (res.success) {\r\n          console.log(\"IF\");\r\n          var mooringtype = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            mooringtype.push({\r\n              label: res.data[i].StringMapName,\r\n              value: res.data[i].Description,\r\n              isAdded: false,\r\n            })\r\n          }\r\n          this.setState({ mooringTypearr: mooringtype, mooringTypearrCp: mooringtype });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n\r\n    }\r\n  }\r\n\r\n  getLocationType() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'LOCATIONTYPE',\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        console.log(\"resssssss\", res);\r\n        if (res.success) {\r\n          console.log(\"IF\");\r\n          var locationtype = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            locationtype.push({\r\n              label: res.data[i].StringMapName,\r\n              value: res.data[i].Description\r\n            })\r\n          }\r\n          this.setState({ mooringLocationTypearr: locationtype });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n\r\n    }\r\n  }\r\n\r\n  getApproval() {\r\n    try {\r\n      const data = {\r\n        stringmaptype: 'MOORINGAPPROVAL',\r\n      };\r\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n        console.log(\"resssssss\", res);\r\n        if (res.success) {\r\n          console.log(\"IF\");\r\n          var approval = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            approval.push({\r\n              label: res.data[i].StringMapName,\r\n              value: res.data[i].Description\r\n            })\r\n          }\r\n          this.setState({ mooringApprovalarr: approval });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n\r\n    }\r\n  }\r\n\r\n  getMooringZone() {\r\n    try {\r\n      api.post('api/getMooringZoneLists').then(res => {\r\n        console.log(\"getMooringZoneLists\", res);\r\n        if (res.success) {\r\n          console.log(\"getMooringZoneLists\", res.data);\r\n          var mooringzone = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            mooringzone.push({\r\n              label: res.data[i].MooringZoneName,\r\n              value: res.data[i].MooringZoneId,\r\n              MooringZoneGuideId: ''\r\n            })\r\n          }\r\n          this.setState({ mooringZoneTypearr: mooringzone });\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"error\", err);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n\r\n  delayedShowMarker = () => {\r\n    setTimeout(() => {\r\n      this.setState({ isMarkerShown: true })\r\n    }, 3000)\r\n  }\r\n\r\n  selectType(value, type) {\r\n\r\n    if (type === 'mooringType') {\r\n      if (value === '' || value === null) {\r\n        this.setState({ mooringTypeError: true, mooringType: value });\r\n        this.show('mooringType', true);\r\n      } else {\r\n        this.setState({ mooringTypeError: false, mooringType: value });\r\n        this.show('mooringType', false);\r\n      }\r\n    }\r\n\r\n    if (type === 'mooringCountry') {\r\n      if (value === '' || value === null) {\r\n        this.setState({ mooringCountryError: true, mooringCountry: value });\r\n        this.show('mooringCountry', true);\r\n      } else {\r\n        this.setState({ mooringCountryError: false, mooringCountry: value });\r\n        this.show('mooringCountry', false);\r\n      }\r\n    }\r\n\r\n    if (type === 'mooringLocationType') {\r\n      if (value === '' || value === null) {\r\n        this.setState({ mooringLocationTypeError: true, mooringLocationType: value });\r\n        this.show('mooringLocationType', true);\r\n      } else {\r\n        this.setState({ mooringLocationTypeError: false, mooringLocationType: value });\r\n        this.show('mooringLocationType', false);\r\n      }\r\n    }\r\n\r\n    if (type === 'mooringApproval') {\r\n      if (value === '' || value === null) {\r\n        this.setState({ mooringApprovalError: true, mooringApproval: value });\r\n        this.show('mooringApproval', true);\r\n      } else {\r\n        this.setState({ mooringApprovalError: false, mooringApproval: value });\r\n        this.show('mooringApproval', false);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === 'mooringName') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ mooringNameError: true });\r\n        this.show(\"mooringName\", true);\r\n      } else {\r\n        let invSpace = CommonConfig.RegExp.allowAllWithSpace;\r\n        let mooringName = e.target.value;\r\n        if (!invSpace.test(mooringName)) {\r\n          this.setState({ mooringNameError: true });\r\n          this.show(\"mooringName\", true);\r\n        } else {\r\n          this.setState({ mooringNameError: false, mooringName: e.target.value });\r\n          this.show(\"mooringName\", false);\r\n\r\n          let tempArr = this.state.mooringTypearr;\r\n          for (var j = 0; j < tempArr.length; j++) {\r\n            tempArr[j].isAdded = false;\r\n          }\r\n          var recordTemp = [];\r\n          for (let i = 0; i < this.state.arr.length; i++) {\r\n            if (this.state.arr[i].MooringName == mooringName) {\r\n              recordTemp.push(\r\n                this.state.arr[i].mooring_Type\r\n              );\r\n            }\r\n          }\r\n          for (let i = 0; i < recordTemp.length; i++) {\r\n            let index = tempArr.findIndex(x => x.label === recordTemp[i]);\r\n            if (index >= 0) {\r\n              tempArr[index].isAdded = true;\r\n            }\r\n          }\r\n          this.setState({ mooringTypearr: tempArr });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'effectiveDate') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ effectiveDateError: true });\r\n        this.show(\"effectiveDate\", true);\r\n      }  else if (moment(e.target.value).format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')) {\r\n        this.setState({ effectiveDateError: true });\r\n        this.show(\"effectiveDate\", true);\r\n      }  else {\r\n        this.setState({ effectiveDateError: false, effectiveDate: e.target.value });\r\n        this.show(\"effectiveDate\", false);\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'mooringCounty') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ mooringCountyError: true });\r\n        this.show(\"mooringCounty\", true);\r\n      } else {\r\n        let invSpace = CommonConfig.RegExp.allowAllWithSpace;\r\n        let mooringCounty = e.target.value;\r\n        if (!invSpace.test(mooringCounty)) {\r\n          this.setState({ mooringCountyError: true });\r\n          this.show(\"mooringCounty\", true);\r\n        } else {\r\n          this.setState({ mooringCountyError: false, mooringCounty: e.target.value });\r\n          this.show(\"mooringCounty\", false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'mooringLocation') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ mooringLocationError: true });\r\n        this.show(\"mooringLocation\", true);\r\n      } else {\r\n        let invSpace = CommonConfig.RegExp.allowAllWithSpace;\r\n        let mooringLocation = e.target.value;\r\n        if (!invSpace.test(mooringLocation)) {\r\n          this.setState({ mooringLocationError: true });\r\n          this.show(\"mooringLocation\", true);\r\n        } else {\r\n          this.setState({ mooringLocationError: false, mooringLocation: e.target.value });\r\n          this.show(\"mooringLocation\", false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'mooringLoading') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ mooringLoadingError: true });\r\n        this.show(\"mooringLoading\", true);\r\n      } else {\r\n        let mooringLoadingRegEx = CommonConfig.RegExp.percentageWithNegative;\r\n        let mooringLoading = e.target.value;\r\n        if (e.target.value > 100 || !mooringLoadingRegEx.test(mooringLoading)) {\r\n          this.setState({ mooringLoadingError: true });\r\n          this.show(\"mooringLoading\", true);\r\n        } else {\r\n          this.setState({ mooringLoadingError: false, mooringLoading: e.target.value });\r\n          this.show(\"mooringLoading\", false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'mooringNotes') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ mooringNotesError: true });\r\n        this.show(\"mooringNotes\", true);\r\n      } else {\r\n        let mooringNotesRegEx = CommonConfig.RegExp.allowAllWithSpace;\r\n        let mooringNotes = e.target.value;\r\n        if (e.target.value > 100 || !mooringNotesRegEx.test(mooringNotes)) {\r\n          this.setState({ mooringNotesError: true });\r\n          this.show(\"mooringNotes\", true);\r\n        } else {\r\n          this.setState({ mooringNotesError: false, mooringNotes: e.target.value });\r\n          this.show(\"mooringNotes\", false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'latitude') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ latitudeError: true });\r\n        this.show(\"latitude\", true);\r\n      } else {\r\n        let latitudeRegEx = CommonConfig.RegExp.latlng;\r\n        let latitude = e.target.value;\r\n        if (!latitudeRegEx.test(latitude)) {\r\n          this.setState({ latitudeError: true });\r\n          this.show(\"latitude\", true);\r\n        } else {\r\n          this.setState({ latitudeError: false, latitude: e.target.value });\r\n          this.show(\"latitude\", false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.name === 'longitude') {\r\n      if (e.target.value === '' || e.target.value === null) {\r\n        this.setState({ longitudeError: true });\r\n        this.show(\"longitude\", true);\r\n      } else {\r\n        let longitudeRegEx = CommonConfig.RegExp.latlng;\r\n        let longitude = e.target.value;\r\n        if (!longitudeRegEx.test(longitude)) {\r\n          this.setState({ longitudeError: true });\r\n          this.show(\"longitude\", true);\r\n        } else {\r\n          this.setState({ longitudeError: false, longitude: e.target.value });\r\n          this.show(\"longitude\", false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  show(field, condition) {\r\n    if (condition) {\r\n      document.getElementById(field).className = \"form-control is-invalid\";\r\n    } else {\r\n      document.getElementById(field).className = \"form-control\";\r\n    }\r\n  }\r\n\r\n  goBckToListingPage() {\r\n    this.props.history.push({\r\n      pathname: '/Master/MooringGuide'\r\n    });\r\n  }\r\n\r\n  Save() {\r\n    debugger\r\n    if (\r\n      this.state.mooringNameError === false &&\r\n      this.state.mooringTypeError === false &&\r\n      this.state.mooringCountryError === false &&\r\n      this.state.mooringCountyError === false &&\r\n      // this.state.mooringLocationError === false &&\r\n      this.state.mooringLocationTypeError === false &&\r\n      this.state.mooringLoadingError === false &&\r\n      this.state.mooringApprovalError === false &&\r\n      this.state.effectiveDateError === false\r\n      // &&\r\n      // this.state.isEnable == true ? this.state.mooringZoneTypeError === false : ''\r\n      // this.state.mooringNotesError === false\r\n    ) {\r\n      let data =\r\n      {\r\n        MooringGuideId: this.state.MooringGuideId,\r\n        mooringName: this.state.mooringName,\r\n        mooringType: this.state.mooringType,\r\n        mooringCountry: this.state.mooringCountry,\r\n        mooringCounty: this.state.mooringCounty,\r\n        mooringLocation: this.state.mooringLocation,\r\n        mooringLocationType: this.state.mooringLocationType,\r\n        latitude: this.state.latitude,\r\n        longitude: this.state.longitude,\r\n        mooringLoading: this.state.mooringLoading,\r\n        mooringApproval: (this.state.mooringApproval == 'Yes') ? (true) : (false),\r\n        mooringNotes: this.state.mooringNotes,\r\n        effectiveDate: this.state.effectiveDate,\r\n        LoggedInUserId: CommonConfig.loggedInUserId()\r\n      };\r\n      console.log('MooringGuide', data);\r\n      \r\n      api.post('api/addUpdateMooringGuide', data).then(res => {\r\n        console.log(\"ressssss\", res);\r\n        if (res.success) {\r\n          // debugger\r\n          toast.success('Mooring Guide added successfully');\r\n          // this.goBckToListingPage();\r\n          // this.reset();\r\n        } else {\r\n\r\n        }\r\n      }).catch(err => {\r\n      });\r\n\r\n    } else {\r\n      this.show(\"mooringName\", this.state.mooringNameError);\r\n      this.show(\"mooringType\", this.state.mooringTypeError);\r\n      this.show(\"mooringCountry\", this.state.mooringCountryError);\r\n      this.show(\"mooringCounty\", this.state.mooringCountyError);\r\n      // this.show(\"mooringLocation\", this.state.mooringLocationError);\r\n      this.show(\"mooringLocationType\", this.state.mooringLocationTypeError);\r\n      // if (this.state.isEnable == true) {\r\n      //   this.show(\"mooringZone\", this.state.mooringZoneTypeError);\r\n      // }\r\n      this.show(\"mooringLoading\", this.state.mooringLoadingError);\r\n      this.show(\"mooringApproval\", this.state.mooringApprovalError);\r\n      this.show(\"effectiveDate\", this.state.effectiveDateError);\r\n    }\r\n  }\r\n\r\n  cancelMooringGuide() {\r\n    this.setState({\r\n      mooringName: '', mooringType: '', mooringCountry: '', mooringCounty: '', mooringLocation: '',\r\n      mooringLocationType: '', mooringCoordinates: '', mooringLoading: '', mooringApproval: '',\r\n      mooringNotes: ''\r\n    })\r\n    this.props.history.push({\r\n      pathname: '/Master/MooringGuide'\r\n    });\r\n  }\r\n\r\n  getLatLong = (e) => {\r\n    this.setState({ mooringCoordinates: e.latLng.lat().toFixed(3) + \", \" + e.latLng.lng().toFixed(3), latitude: e.latLng.lat(), longitude: e.latLng.lng(), mooringCoordinatesError: false });\r\n  }\r\n\r\n  deleteMooringGuide() {\r\n    this.setState({ isDeleteModel: true });\r\n  }\r\n\r\n  mulSelVal = (e) => {\r\n    console.log(\"mulSelVal\", e);\r\n    if (e.value.length == 0) {\r\n      this.setState({ mooringZoneTypeError: true, mooringZone: e.value, });\r\n      this.show('mooringZone', true);\r\n    } else {\r\n      this.setState({ mooringZoneTypeError: false, mooringZone: e.value });\r\n      this.show('mooringZone', false);\r\n    }\r\n    // console.log(\"Afdsas\", this.state.Task_Followers);\r\n\r\n  }\r\n\r\n  editZone(task) {\r\n    if (task == \"view\") {\r\n      this.setState({ isEnable: false });\r\n      // window.location.reload();\r\n    } else {\r\n      this.setState({ isEnable: true, mooringZoneTypeError: false });\r\n      var zone_Id = CommonConfig.isEmpty(this.state.MooringZoneId) ? '' : this.state.MooringZoneId.split(',');\r\n      var zoneGuide_Id = CommonConfig.isEmpty(this.state.MooringZoneGuideId) ? '' : this.state.MooringZoneGuideId.split(',');\r\n      var newZone_Id = [];\r\n      if (zone_Id.length > 0) {\r\n        for (var i = 0; i < zone_Id.length; i++) {\r\n          var record = this.state.mooringZoneTypearr.find(x => x.value == zone_Id[i]);\r\n          record.MooringZoneGuideId = zoneGuide_Id[i];\r\n          console.log(\"editZone\", record);\r\n          newZone_Id.push(record);\r\n        }\r\n      }\r\n      this.setState({ mooringZone: newZone_Id });\r\n    }\r\n  }\r\n\r\n  editLatlng(task) {\r\n    if (task == \"view\") {\r\n      this.setState({ enableLatlng: false });\r\n      // window.location.reload();\r\n    } else {\r\n      this.setState({ enableLatlng: true });\r\n    }\r\n  }\r\n\r\n  cancelMooringZone() {\r\n    this.setState({ isEnable: false });\r\n    // window.location.reload();\r\n  }\r\n\r\n  editMooringZone() {\r\n    try {\r\n      var data = {\r\n        mooringZone: this.state.mooringZone,\r\n        MooringGuideId: this.props.match.params.Id,\r\n        CurrentUser: CommonConfig.loggedInUserId(),\r\n        LanguageId: this.state.LanguageId,\r\n      }\r\n      console.log('mooringZone',data);      \r\n      api.post('api/updateMooringZone', data).then(res => {\r\n        console.log(\"editMooringZone\", res);\r\n        if (res.success == true) {\r\n          toast.success('Mooring Zone updated successfully');\r\n          setTimeout(function () {\r\n            window.location.reload();\r\n          }, 600);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(\"editMooringZone\", error);\r\n    }\r\n\r\n  }\r\n\r\n  toggleLarge = () => {\r\n    this.setState({\r\n      isDeleteModel: false,\r\n      MooringGuideId: '',\r\n      mooringName: ''\r\n    });\r\n  }\r\n\r\n  Delete() {\r\n    try {\r\n      let data = {\r\n        MooringGuideId: this.state.MooringGuideId,\r\n        CreatedBy: CommonConfig.loggedInUserId()\r\n      }\r\n      console.log(\"Delete\", data);\r\n      api.post('api/deleteMooringGuide', data).then(res => {\r\n        if (res.success) {\r\n          this.toggleLarge();\r\n          toast.success(\"MooringGuide deleted successfully\");\r\n          this.cancelMooringGuide();\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"sdv=dsv=dv=v=\", this.state.mooringZone);\r\n    return (\r\n      <div>\r\n        <div className=\"basic-header\">\r\n          <h1> {this.state.isEdit ? \"Edit Mooring Guide\" : \"Add Mooring Guide\"} </h1>\r\n        </div>\r\n        <div>\r\n          <Container>\r\n            <Form encType=\"multipart/form-data\" autoComplete=\"of\">\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <Card>\r\n                    <CardBody>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringname}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input placeholder=\"Name\" type=\"text\" name=\"mooringName\" id=\"mooringName\" onChange={(e) => this.handleChange(e)} value={this.state.mooringName}>\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please enter valid mooring name</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringtype}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input type=\"select\" name=\"mooringType\" id=\"mooringType\" onChange={(e) => this.selectType(e.target.value, 'mooringType')} value={this.state.mooringType}>\r\n                                <option value=''>Select Mooring Type</option>\r\n                                {this.state.mooringTypearr.map((type, i) => {\r\n                                  if (!type.isAdded) {\r\n                                    return (<option value={type.label}>{type.value}</option>)\r\n                                  }\r\n                                })\r\n                                }\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please select mooring type</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringcountry}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input type=\"select\" name=\"mooringCountry\" id=\"mooringCountry\" onChange={(e) => this.selectType(e.target.value, 'mooringCountry')} value={this.state.mooringCountry}>\r\n                                <option value=''>Select Country</option>\r\n                                {this.state.mooringCountryarr.map((type, i) => {\r\n                                  return (<option value={type.key}>{type.label}</option>)\r\n                                })\r\n                                }\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please select country</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringcounty}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input placeholder=\"County / Region\" type=\"text\" name=\"mooringCounty\" id=\"mooringCounty\" onChange={(e) => this.handleChange(e)} value={this.state.mooringCounty}>\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please enter county</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringlocation}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input placeholder=\"Location\" type=\"text\" name=\"mooringLocation\" id=\"mooringLocation\" onChange={(e) => this.handleChange(e)} value={this.state.mooringLocation}>\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please enter location</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringlocationType}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input type=\"select\" name=\"mooringLocationType\" id=\"mooringLocationType\" onChange={(e) => this.selectType(e.target.value, 'mooringLocationType')} value={this.state.mooringLocationType}>\r\n                                <option value=''>Select Location Type</option>\r\n                                {this.state.mooringLocationTypearr.map((type, i) => {\r\n                                  return (<option value={type.label}>{type.value}</option>)\r\n                                })\r\n                                }\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please select location type</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"3\">\r\n                            <label>{this.state.mooringcoordinates}</label>\r\n                          </Col>\r\n                          <Col md=\"2\">\r\n                            <div>\r\n                              <label>Lat.</label>\r\n                            </div>\r\n                            <div style={{ marginTop: 15 }}>\r\n                              <label>Lng.</label>\r\n                            </div>\r\n                          </Col>\r\n                          {(this.state.isEdit) ? (\r\n                            <Col md=\"1\">\r\n                              <Button style={{ float: \"right\", marginBottom: \"10px\" }} color=\"primary\"\r\n                                onClick={this.state.enableLatlng ? () => this.editLatlng(\"view\") : () => this.editLatlng(\"edit\")}\r\n                                title={this.state.enableLatlng ? \"View\" : \"Edit\"}\r\n                              >\r\n                                <i className={this.state.enableLatlng ? \"fa fa-eye\" : \"fa fa-pencil\"}></i>\r\n                              </Button>\r\n                            </Col>\r\n                          ) : (\r\n                              <Col md=\"1\">\r\n                              </Col>\r\n                            )}\r\n\r\n\r\n                          {/* <Col md=\"1\">\r\n                            {(this.state.enableLatlng == true) ? (\r\n                              <Button onClick={() => this.editMooringLatlng()} style={{ marginLeft: 5 }} color=\"primary\">\r\n                                <i className=\"fa fa-check\"></i>\r\n                              </Button>\r\n                            ) : (\r\n                                null\r\n                              )}\r\n                          </Col> */}\r\n\r\n\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input disabled={this.state.isEdit ? (this.state.enableLatlng == false) : (this.state.enableLatlng == true)} type=\"text\" name=\"latitude\" id=\"latitude\" onChange={(e) => this.handleChange(e)} value={this.state.latitude}>\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please select mooring co-ordinates from the map</em>\r\n                            </div>\r\n\r\n                            <div style={{ marginTop: 5 }}>\r\n                              <Input disabled={this.state.isEdit ? (this.state.enableLatlng == false) : (this.state.enableLatlng == true)} type=\"text\" name=\"longitude\" id=\"longitude\" onChange={(e) => this.handleChange(e)} value={this.state.longitude}>\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please select mooring co-ordinates from the map</em>\r\n                            </div>\r\n\r\n                          </Col>\r\n                          {/* <Col md=\"3\">\r\n                            <div>\r\n                              <Input disabled={this.state.enableLatlng == false} type=\"text\" name=\"longitude\" id=\"longitude\" onChange={(e) => this.handleChange(e)} value={this.state.longitude}>\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please select mooring co-ordinates from the map</em>\r\n                            </div>\r\n                          </Col> */}\r\n                        </Row>\r\n                      </div>\r\n\r\n                      {(this.state.isEdit) ? (\r\n                        <div>\r\n                          <div className=\"input-box\">\r\n                            <Row>\r\n                              <Col md=\"5\">\r\n                                <label>{this.state.mooringzone}</label>\r\n                              </Col>\r\n                              <Col md=\"1\">\r\n                                <Button style={{ float: \"right\", marginBottom: \"10px\" }} color=\"primary\"\r\n                                  onClick={this.state.isEnable ? () => this.editZone(\"view\") : () => this.editZone(\"edit\")}\r\n                                  title={this.state.isEnable ? \"View\" : \"Edit\"}\r\n                                >\r\n                                  <i className={this.state.isEnable ? \"fa fa-eye\" : \"fa fa-pencil\"}></i>\r\n                                </Button>\r\n                              </Col>\r\n                              {this.state.isEnable == true ? (\r\n                                <Col md=\"6\">\r\n                                  <div>\r\n                                    {/* <label>{this.state.mooringZone}</label> */}\r\n                                    <MultiSelect name=\"mooringZone\" id=\"mooringZone\" optionLabel=\"label\" value={this.state.mooringZone} options={this.state.mooringZoneTypearr} style={{ width: '233px' }}\r\n                                      onChange={(e) => this.mulSelVal(e) } /*onBlur={() => this.editMooringZone()}*/\r\n                                      filter={true} />\r\n                                  </div>\r\n                                </Col>\r\n                              ) : (\r\n                                  <Col md=\"6\">\r\n                                    <div>\r\n                                      <label>{this.state.mooringZoneDis}</label>\r\n                                    </div>\r\n                                  </Col>\r\n                                )}\r\n                            </Row>\r\n                          </div>\r\n\r\n\r\n                          <div>\r\n                            {this.state.isEnable == true ? (\r\n                              <Row>\r\n                                <Col md=\"6\">\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                  <Button className=\"p-button p-component p-button-icon-only\" onClick={() => this.editMooringZone()} style={{ marginLeft: 5 }} color=\"warning\">\r\n                                    <i className=\"fa fa-check\"></i>\r\n                                  </Button>\r\n                                  <Button className=\"p-button p-component p-button-icon-only\" onClick={() => this.cancelMooringZone()} style={{ marginLeft: 5 }} color=\"danger\">\r\n                                    <i className=\"fa fa-times\"></i>\r\n                                  </Button>\r\n                                </Col>\r\n                              </Row>\r\n                            ) : (null)}\r\n                          </div>\r\n                        </div>\r\n                      ) : (null)}\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row style={{ marginTop: 10 }}>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringloading}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input placeholder=\"Loading (%)\" type=\"text\" name=\"mooringLoading\" id=\"mooringLoading\" onChange={(e) => this.handleChange(e)} value={this.state.mooringLoading}>\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please enter mooring loading</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringapproval}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <div>\r\n                              <Input type=\"select\" name=\"mooringApproval\" id=\"mooringApproval\" onChange={(e) => this.selectType(e.target.value, 'mooringApproval')} value={this.state.mooringApproval}>\r\n                                <option value=''>Select Mooring Approval</option>\r\n                                {this.state.mooringApprovalarr.map((type, i) => {\r\n                                  return (<option value={type.label}>{type.value}</option>)\r\n                                })\r\n                                }\r\n                              </Input>\r\n                              <em className=\"error invalid-feedback\" >Please select mooring approval</em>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.mooringnotes}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <Input placeholder=\"Notes\" type=\"textarea\" name=\"mooringNotes\" id=\"mooringNotes\" onChange={(e) => this.handleChange(e)} value={this.state.mooringNotes}>\r\n                            </Input>\r\n                            <em className=\"error invalid-feedback\" >Please enter mooring notes</em>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      <div className=\"input-box\">\r\n                        <Row>\r\n                          <Col md=\"6\">\r\n                            <label>{this.state.effectivedate}</label>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <Input type=\"date\" name=\"effectiveDate\" id=\"effectiveDate\" onChange={(e) => this.handleChange(e)} value={this.state.effectiveDate}\r\n                              min={moment().format('YYYY-MM-DD')}\r\n                              max={moment().add(100, 'years').format('YYYY-MM-DD')}\r\n                            />\r\n                            <em className=\"error invalid-feedback\" >Please enter effective date</em>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col md=\"6\">\r\n                  <Card>\r\n                    <CardBody>\r\n                      {(!CommonConfig.isEmpty(this.state.latitude) && !CommonConfig.isEmpty(this.state.longitude)) ? (\r\n                        <div className=\"input-box\">\r\n                          <MyMapComponent\r\n                            isMarkerShown={this.state.isMarkerShown}\r\n                            getPosition={(e) => this.getLatLong(e)}\r\n                            latitude={parseFloat(this.state.latitude)}\r\n                            longitude={parseFloat(this.state.longitude)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                          null\r\n                        )}\r\n\r\n\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <Col md=\"12\">\r\n                <div style={{ margin: \"15px\" }}>\r\n                  <Row >\r\n                    <div>\r\n\r\n                      <Button color=\"success\" onClick={() => this.Save()}><i class=\"fa fa-check\"></i> Save</Button>{' '}\r\n                      {(this.state.isEdit == true) ? (\r\n                        <Button color=\"danger\" onClick={() => this.deleteMooringGuide()}><i class=\"fa fa-times\"></i> Delete</Button>\r\n                      ) : (\r\n                          null\r\n                        )}\r\n                      {' '}<Button color=\"primary\" onClick={() => this.cancelMooringGuide()}><i class=\"fa fa-angle-left\"></i> Cancel</Button>\r\n                    </div>\r\n                  </Row>\r\n                </div>\r\n              </Col>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        <Modal isOpen={this.state.isDeleteModel} toggle={this.toggleLarge}\r\n          className={'modal-lg ' + this.props.className}>\r\n          <ModalHeader toggle={this.toggleLarge}>Delete MooringGuide</ModalHeader>\r\n          <ModalBody>\r\n            Are you sure, You want to delete this MooringGuide {this.state.mooringName}?\r\n                    </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"success\" onClick={() => this.Delete()}><i class=\"fa fa-check\"></i>Yes</Button>{' '}\r\n            <Button color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-close\"></i>No</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTranslation() (AddMooringGuide);"]},"metadata":{},"sourceType":"module"}