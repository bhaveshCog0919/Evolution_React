{"ast":null,"code":"import _defineProperty from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Button,Card,CardBody,Col,Container,Form,Input,InputGroup,InputGroupAddon,InputGroupText,Row}from\"reactstrap\";import{ToastContainer,toast}from\"react-toastify\";import Cookies from'js-cookie';import api from\"../../../utils/apiClient\";import APIConstant from\"../../../utils/constants\";import{withTranslation}from'react-i18next';import{CommonConfig}from'../../../utils/constants';var ChangePassword=/*#__PURE__*/function(_Component){_inherits(ChangePassword,_Component);var _super=_createSuper(ChangePassword);function ChangePassword(props,context){var _this;_classCallCheck(this,ChangePassword);_this=_super.call(this,props,context);_this.handleChange=function(e){var t=_this.props.t;_this.setState(_defineProperty({},e.target.name,e.target.value));var passwordRegExp=CommonConfig.RegExp.password;if(e.target.name==='currentPassword'){if(e.target.value===''||e.target.value===null){_this.setState({currentPasswordError:true});_this.show(\"currentPassword\",true,\"currentPasswordError\",t(\"ChangePassword.currentPassword.error_blank\"));}else{_this.setState({currentPasswordError:false,currentPassword:e.target.value});_this.show(\"currentPassword\",false,\"currentPasswordError\",\"\");}}if(e.target.name==='newPassword'){if(e.target.value===''||e.target.value===null){_this.setState({newPasswordError:true});_this.show(\"newPassword\",true,\"newPasswordError\",t(\"ChangePassword.newPassword.error_blank\"));}else if(!passwordRegExp.test(e.target.value)){_this.setState({newPasswordError:true});_this.show(\"newPassword\",true,\"newPasswordError\",t(\"ChangePassword.newPassword.error_pattern\"));}else if(e.target.value.length<6){}else if(e.target.value.length>15){_this.setState({newPasswordError:true});_this.show(\"newPassword\",true,\"newPasswordError\",t(\"ChangePassword.newPassword.error_maxLength\"));}else{_this.setState(_defineProperty({newPasswordError:false},\"newPasswordError\",e.target.value));_this.show(\"newPassword\",false,\"newPasswordError\",\"\");}}if(e.target.name==='confirmNewPassword'){if(e.target.value===''||e.target.value===null){_this.setState({confirmNewPasswordError:true});_this.show(\"confirmNewPassword\",true,\"confirmNewPasswordError\",t(\"ChangePassword.confirmNewPassword.error_blank\"));}else if(e.target.value!==_this.state.newPassword){_this.setState({confirmNewPasswordError:true});_this.show(\"confirmNewPassword\",true,\"confirmNewPasswordError\",t(\"ChangePassword.confirmNewPassword.error_pattern\"));}else{_this.setState({confirmNewPasswordError:true});_this.show(\"confirmNewPassword\",false,\"confirmNewPasswordError\",\"\");}}};_this.state={currentPassword:'',currentPasswordError:true,isShowCurrentPassword:false,newPassword:'',newPasswordError:true,isShowNewPassword:false,confirmNewPassword:'',confirmNewPasswordError:true,isShowConfirmNewPassword:false};return _this;}_createClass(ChangePassword,[{key:\"toggle\",value:function toggle(type){if(type==='currentPassword'){this.setState({isShowCurrentPassword:!this.state.isShowCurrentPassword});}else if(type==='newPassword'){this.setState({isShowNewPassword:!this.state.isShowNewPassword});}else if(type==='confirmNewPassword'){this.setState({isShowConfirmNewPassword:!this.state.isShowConfirmNewPassword});}}},{key:\"show\",value:function show(field,condition,errorField,message){if(condition){document.getElementById(field).className=\"form-control is-invalid\";document.getElementById(errorField).innerHTML='<p>'+message+' </p>';}else{document.getElementById(field).className=\"form-control\";document.getElementById(errorField).innerHTML=null;}}},{key:\"validate\",value:function validate(){var t=this.props.t;var passwordRegExp=CommonConfig.RegExp.password;var errCount=0;if(CommonConfig.isEmpty(this.state.currentPassword)||CommonConfig.isEmpty(this.state.newPassword)||CommonConfig.isEmpty(this.state.confirmNewPassword)){errCount++;this.show(\"currentPassword\",this.state.currentPasswordError,\"currentPasswordError\",t(\"ChangePassword.currentPassword.error_blank\"));this.show(\"newPassword\",this.state.newPasswordError,\"newPasswordError\",t(\"ChangePassword.newPassword.error_blank\"));this.show(\"confirmNewPassword\",this.state.confirmNewPasswordError,\"confirmNewPasswordError\",t(\"ChangePassword.confirmNewPassword.error_blank\"));}if(!passwordRegExp.test(this.state.newPassword)||this.state.newPassword.length<6||this.state.newPassword.length>15){errCount++;this.show(\"newPassword\",true,\"newPasswordError\",t(\"ChangePassword.newPassword.error_pattern\"));}if(this.state.newPassword!==this.state.confirmNewPassword){errCount++;this.show(\"confirmNewPassword\",true,\"confirmNewPasswordError\",t(\"ChangePassword.confirmNewPassword.error_pattern\"));}if(errCount>0){return false;}else{return true;}}},{key:\"changePassword\",value:function changePassword(){var _this2=this;try{if(this.validate()){var loggedInUserData=CommonConfig.loggedInUserData();var data={currentPassword:this.state.currentPassword,newPassword:this.state.newPassword,confirmNewPassword:this.state.confirmNewPassword,userId:loggedInUserData.LoginId,token:Cookies.get('access_token')};api.post('api/changePassword',data).then(function(res){console.log(\"Fgdf\",res);if(res.data.success){_this2.reset();toast.success(res.data.message);Cookies.remove('access_token');_this2.props.history.push('/login');}else{toast.error(res.data.message);}}).catch(function(err){console.log(\"api error\",err);});}else{// validation error\n}}catch(error){console.log(\"front error\",error);}}// onForgot() {\n//     if (this.state.usernameError === false) {\n//         const form = {\n//             'username': this.state.username\n//         }\n//         api.post(APIConstant.path.forgotpassword, form).then(res => {\n//             if (res.success) {\n//                 toast.success(res.message)\n//                 this.props.history.push('/login')\n//             } else {\n//                 toast.error(res.message)\n//             }\n//         }).catch(err => {\n//             toast.error(err)\n//         })\n//     } else {\n//         this.show(\"username\", this.state.usernameError)\n//     }\n// }\n},{key:\"render\",value:function render(){var _this3=this;var t=this.props.t;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ToastContainer,null),/*#__PURE__*/React.createElement(\"div\",{className:\"app flex-row align-items-center\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,{className:\"justify-content-center\"},/*#__PURE__*/React.createElement(Col,{md:\"9\",lg:\"7\",xl:\"6\"},/*#__PURE__*/React.createElement(Card,{className:\"mx-4\"},/*#__PURE__*/React.createElement(CardBody,{className:\"p-4\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Change Password\"),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{name:\"currentPassword\",type:this.state.isShowCurrentPassword?\"text\":\"password\",id:\"currentPassword\",className:\"\",placeholder:t(\"ChangePassword.currentPassword.placeholder\"),onChange:function onChange(e){return _this3.handleChange(e);},value:this.state.currentPassword,onBlur:function onBlur(e){return _this3.handleChange(e);},maxLength:\"15\"}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:this.state.isShowCurrentPassword?\"fa fa-eye\":\"fa fa-eye-slash\",onClick:function onClick(){return _this3.toggle('currentPassword');},title:this.state.isShowCurrentPassword?t(\"ChangePassword.currentPassword.hide\"):t(\"ChangePassword.currentPassword.show\")}))),/*#__PURE__*/React.createElement(\"em\",{className:\"error invalid-feedback\",id:\"currentPasswordError\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{name:\"newPassword\",type:this.state.isShowNewPassword?\"text\":\"password\",id:\"newPassword\",className:\"\",placeholder:t(\"ChangePassword.newPassword.placeholder\"),onChange:function onChange(e){return _this3.handleChange(e);},value:this.state.newPassword,onBlur:function onBlur(e){return _this3.handleChange(e);},maxLength:\"15\"}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:this.state.isShowNewPassword?\"fa fa-eye\":\"fa fa-eye-slash\",onClick:function onClick(){return _this3.toggle('newPassword');},title:this.state.isShowNewPassword?t(\"ChangePassword.newPassword.hide\"):t(\"ChangePassword.newPassword.show\")}))),/*#__PURE__*/React.createElement(\"em\",{className:\"error invalid-feedback\",id:\"newPasswordError\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-box\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{name:\"confirmNewPassword\",type:this.state.isShowConfirmNewPassword?\"text\":\"password\",id:\"confirmNewPassword\",className:\"\",placeholder:t(\"ChangePassword.confirmNewPassword.placeholder\"),onChange:function onChange(e){return _this3.handleChange(e);},value:this.state.confirmNewPassword,onBlur:function onBlur(e){return _this3.handleChange(e);},maxLength:\"15\"}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:this.state.isShowConfirmNewPassword?\"fa fa-eye\":\"fa fa-eye-slash\",onClick:function onClick(){return _this3.toggle('confirmNewPassword');},title:this.state.isShowConfirmNewPassword?t(\"ChangePassword.confirmNewPassword.hide\"):t(\"ChangePassword.confirmNewPassword.show\")}))),/*#__PURE__*/React.createElement(\"em\",{className:\"error invalid-feedback\",id:\"confirmNewPasswordError\"}))),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"px-4\",onClick:function onClick(){return _this3.changePassword();}},\"Submit\")))))))));}}]);return ChangePassword;}(Component);export default withTranslation()(ChangePassword);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Pages/ChangePassword/ChangePassword.js"],"names":["React","Component","Button","Card","CardBody","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","ToastContainer","toast","Cookies","api","APIConstant","withTranslation","CommonConfig","ChangePassword","props","context","handleChange","e","t","setState","target","name","value","passwordRegExp","RegExp","password","currentPasswordError","show","currentPassword","newPasswordError","test","length","confirmNewPasswordError","state","newPassword","isShowCurrentPassword","isShowNewPassword","confirmNewPassword","isShowConfirmNewPassword","type","field","condition","errorField","message","document","getElementById","className","innerHTML","errCount","isEmpty","validate","loggedInUserData","data","userId","LoginId","token","get","post","then","res","console","log","success","reset","remove","history","push","error","catch","err","toggle","changePassword"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Card, CardBody, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Cookies from 'js-cookie';\nimport api from \"../../../utils/apiClient\";\nimport APIConstant from \"../../../utils/constants\";\nimport { withTranslation } from 'react-i18next';\nimport { CommonConfig } from '../../../utils/constants';\n\nclass ChangePassword extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            currentPassword: '',\n            currentPasswordError: true,\n            isShowCurrentPassword: false,\n\n            newPassword: '',\n            newPasswordError: true,\n            isShowNewPassword: false,\n\n            confirmNewPassword: '',\n            confirmNewPasswordError: true,\n            isShowConfirmNewPassword: false\n        };\n    }\n\n    handleChange = (e) => {\n        const { t } = this.props;\n\n        this.setState({ [e.target.name]: e.target.value });\n\n        let passwordRegExp = CommonConfig.RegExp.password;\n\n        if (e.target.name === 'currentPassword') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ currentPasswordError: true });\n                this.show(\"currentPassword\", true, \"currentPasswordError\", t(\"ChangePassword.currentPassword.error_blank\"));\n            } else {\n                this.setState({ currentPasswordError: false, currentPassword: e.target.value });\n                this.show(\"currentPassword\", false, \"currentPasswordError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'newPassword') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ newPasswordError: true });\n                this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_blank\"));\n            } else if (!passwordRegExp.test(e.target.value)) {\n                this.setState({ newPasswordError: true });\n                this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_pattern\"));\n            } else if (e.target.value.length < 6) {\n\n            } else if (e.target.value.length > 15) {\n                this.setState({ newPasswordError: true });\n                this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_maxLength\"));\n            } else {\n                this.setState({ newPasswordError: false, newPasswordError: e.target.value });\n                this.show(\"newPassword\", false, \"newPasswordError\", \"\");\n            }\n        }\n\n        if (e.target.name === 'confirmNewPassword') {\n            if (e.target.value === '' || e.target.value === null) {\n                this.setState({ confirmNewPasswordError: true });\n                this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_blank\"));\n            } else if (e.target.value !== this.state.newPassword) {\n                this.setState({ confirmNewPasswordError: true });\n                this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_pattern\"));\n            } else {\n                this.setState({ confirmNewPasswordError: true });\n                this.show(\"confirmNewPassword\", false, \"confirmNewPasswordError\", \"\");\n            }\n        }\n    }\n\n    toggle(type) {\n        if (type === 'currentPassword') {\n            this.setState({ isShowCurrentPassword: !this.state.isShowCurrentPassword });\n        } else if (type === 'newPassword') {\n            this.setState({ isShowNewPassword: !this.state.isShowNewPassword });\n        } else if (type === 'confirmNewPassword') {\n            this.setState({ isShowConfirmNewPassword: !this.state.isShowConfirmNewPassword });\n        }\n    }\n\n    show(field, condition, errorField, message) {\n        if (condition) {\n            document.getElementById(field).className = \"form-control is-invalid\";\n            document.getElementById(errorField).innerHTML = '<p>' + message + ' </p>';\n        } else {\n            document.getElementById(field).className = \"form-control\";\n            document.getElementById(errorField).innerHTML = null;\n        }\n    }\n\n    validate() {\n        const { t } = this.props;\n        let passwordRegExp = CommonConfig.RegExp.password;\n        let errCount = 0;\n\n        if (CommonConfig.isEmpty(this.state.currentPassword) || CommonConfig.isEmpty(this.state.newPassword) || CommonConfig.isEmpty(this.state.confirmNewPassword)) {\n            errCount++;\n            this.show(\"currentPassword\", this.state.currentPasswordError, \"currentPasswordError\", t(\"ChangePassword.currentPassword.error_blank\"));\n            this.show(\"newPassword\", this.state.newPasswordError, \"newPasswordError\", t(\"ChangePassword.newPassword.error_blank\"));\n            this.show(\"confirmNewPassword\", this.state.confirmNewPasswordError, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_blank\"));\n        }\n\n        if (!passwordRegExp.test(this.state.newPassword) || this.state.newPassword.length < 6 || this.state.newPassword.length > 15) {\n            errCount++;\n            this.show(\"newPassword\", true, \"newPasswordError\", t(\"ChangePassword.newPassword.error_pattern\"));\n        }\n\n        if (this.state.newPassword !== this.state.confirmNewPassword) {\n            errCount++;\n            this.show(\"confirmNewPassword\", true, \"confirmNewPasswordError\", t(\"ChangePassword.confirmNewPassword.error_pattern\"));\n        }\n\n        if (errCount > 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    changePassword() {\n        try {\n            if (this.validate()) {\n                let loggedInUserData = CommonConfig.loggedInUserData();\n                let data = {\n                    currentPassword: this.state.currentPassword,\n                    newPassword: this.state.newPassword,\n                    confirmNewPassword: this.state.confirmNewPassword,\n                    userId: loggedInUserData.LoginId,\n                    token: Cookies.get('access_token')\n                }\n                api.post('api/changePassword', data).then(res => {\n                    console.log(\"Fgdf\", res);\n                    if (res.data.success) {\n                        this.reset();\n                        toast.success(res.data.message);\n                        Cookies.remove('access_token');\n                        this.props.history.push('/login');\n                    } else {\n                        toast.error(res.data.message);\n                    }\n                }).catch(err => {\n                    console.log(\"api error\", err);\n                });\n            } else {\n                // validation error\n            }\n        } catch (error) {\n            console.log(\"front error\", error);\n        }\n    }\n\n    // onForgot() {\n    //     if (this.state.usernameError === false) {\n    //         const form = {\n    //             'username': this.state.username\n    //         }\n\n    //         api.post(APIConstant.path.forgotpassword, form).then(res => {\n    //             if (res.success) {\n    //                 toast.success(res.message)\n    //                 this.props.history.push('/login')\n    //             } else {\n    //                 toast.error(res.message)\n    //             }\n    //         }).catch(err => {\n    //             toast.error(err)\n    //         })\n    //     } else {\n    //         this.show(\"username\", this.state.usernameError)\n    //     }\n    // }\n\n    render() {\n        const { t } = this.props;\n        return (\n            <div>\n                <ToastContainer></ToastContainer>\n\n                <div className=\"app flex-row align-items-center\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Col md=\"9\" lg=\"7\" xl=\"6\">\n                                <Card className=\"mx-4\">\n                                    <CardBody className=\"p-4\">\n                                        <Form>\n                                            <h1>Change Password</h1>\n\n                                            {/* <p className=\"text-muted\">Reset Password Form</p> */}\n                                            <div className=\"input-box\">\n                                                <InputGroup>\n                                                    <Input name=\"currentPassword\" type={this.state.isShowCurrentPassword ? \"text\" : \"password\"}\n                                                        id=\"currentPassword\" className=\"\" placeholder={t(\"ChangePassword.currentPassword.placeholder\")}\n                                                        onChange={e => this.handleChange(e)} value={this.state.currentPassword}\n                                                        onBlur={e => this.handleChange(e)} maxLength=\"15\"\n                                                    />\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText>\n                                                            <i className={this.state.isShowCurrentPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\n                                                                onClick={() => this.toggle('currentPassword')} title={this.state.isShowCurrentPassword ? t(\"ChangePassword.currentPassword.hide\") : t(\"ChangePassword.currentPassword.show\")}>\n                                                            </i>\n                                                        </InputGroupText>\n                                                    </InputGroupAddon>\n                                                    <em className=\"error invalid-feedback\" id=\"currentPasswordError\"></em>\n                                                </InputGroup>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <InputGroup>\n                                                    <Input name=\"newPassword\" type={this.state.isShowNewPassword ? \"text\" : \"password\"}\n                                                        id=\"newPassword\" className=\"\" placeholder={t(\"ChangePassword.newPassword.placeholder\")}\n                                                        onChange={e => this.handleChange(e)} value={this.state.newPassword}\n                                                        onBlur={e => this.handleChange(e)} maxLength=\"15\"\n                                                    />\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText>\n                                                            <i className={this.state.isShowNewPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\n                                                                onClick={() => this.toggle('newPassword')} title={this.state.isShowNewPassword ? t(\"ChangePassword.newPassword.hide\") : t(\"ChangePassword.newPassword.show\")}>\n                                                            </i>\n                                                        </InputGroupText>\n                                                    </InputGroupAddon>\n                                                    <em className=\"error invalid-feedback\" id=\"newPasswordError\"></em>\n                                                </InputGroup>\n                                            </div>\n\n                                            <div className=\"input-box\">\n                                                <InputGroup>\n                                                    <Input name=\"confirmNewPassword\" type={this.state.isShowConfirmNewPassword ? \"text\" : \"password\"}\n                                                        id=\"confirmNewPassword\" className=\"\" placeholder={t(\"ChangePassword.confirmNewPassword.placeholder\")}\n                                                        onChange={e => this.handleChange(e)} value={this.state.confirmNewPassword}\n                                                        onBlur={e => this.handleChange(e)} maxLength=\"15\"\n                                                    />\n                                                    <InputGroupAddon addonType=\"prepend\">\n                                                        <InputGroupText>\n                                                            <i className={this.state.isShowConfirmNewPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"}\n                                                                onClick={() => this.toggle('confirmNewPassword')} title={this.state.isShowConfirmNewPassword ? t(\"ChangePassword.confirmNewPassword.hide\") : t(\"ChangePassword.confirmNewPassword.show\")}>\n                                                            </i>\n                                                        </InputGroupText>\n                                                    </InputGroupAddon>\n                                                    <em className=\"error invalid-feedback\" id=\"confirmNewPasswordError\"></em>\n                                                </InputGroup>\n                                            </div>\n                                            {/* <Button color=\"primary\" className=\"px-4\" onClick={() => this.onForgot()}>\n                                                Submit\n                                            </Button> */}\n\n                                            <Button color=\"primary\" className=\"px-4\" onClick={() => this.changePassword()}>\n                                                Submit\n                                            </Button>\n                                        </Form>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChangePassword);"]},"metadata":{},"sourceType":"module"}