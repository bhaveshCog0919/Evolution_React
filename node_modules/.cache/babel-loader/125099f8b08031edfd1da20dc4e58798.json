{"ast":null,"code":"var _jsxFileName = \"/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/Info/BounderOfRisk.js\";\nimport React, { Component } from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { toast } from 'react-toastify';\nimport api from '../../../../utils/apiClient';\nimport APIConstant, { CommonConfig } from '../../../../utils/constants';\n\nclass BounderOfRisk extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectType = (value, type) => {\n      if (type == \"country\") {\n        this.setState({\n          country: value\n        });\n      }\n    };\n\n    this.getPageString = e => {\n      let firstPage = e.first + 1;\n      let l = e.rows * (e.page + 1);\n      let lastPage = l < this.state.bounderRiskArray.length ? l : this.state.bounderRiskArray.length;\n      var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.bounderRiskArray.length + ' records';\n      this.setState({\n        selectedPage: e.first,\n        str: str,\n        rowsPerPage: e.rows\n      });\n    };\n\n    this.openDeleteModal = rowData => {\n      this.setState({\n        toggleModal: !this.state.toggleModal,\n        deleteRiskLocatorId: rowData.id,\n        deletecountry: rowData.country\n      });\n    };\n\n    this.toggleLarge = () => {\n      this.setState({\n        toggleModal: false,\n        deleteRiskLocatorId: '',\n        deletecountry: ''\n      });\n    };\n\n    let columns = [{\n      field: \"country\",\n      header: \"Country\",\n      sortable: true,\n      filter: true,\n      filterMatchMode: 'contains',\n      id: 0\n    }, {\n      body: this.actionTemplate.bind(this),\n      header: \"Action\",\n      sortable: false,\n      filter: false,\n      filterMatchMode: 'contains',\n      id: 1\n    }];\n    const orginial = this.setState; // this.state = JSON.parse(localStorage.getItem('bounderriskstate'))\n    //     ? JSON.parse(localStorage.getItem('bounderriskstate'))\n    //     : \n\n    this.state = {\n      toggleModal: false,\n      selectedLanguage: props.i18n.language === 'en' ? 'en-GB' : props.i18n.language === 'es' ? 'es-ES' : props.i18n.language === 'ie' ? 'en-IE' : props.i18n.language,\n      cols: columns,\n      country: \"\",\n      BinderId: \"\",\n      RiskLocatorId: \"\",\n      countryError: false,\n      bounderRiskArray: [],\n      countryarr: [],\n      selectedPage: 0,\n      rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\n      rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\n      globalFilter: null,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n    };\n    this.colOptions = [];\n\n    for (let col of columns) {\n      this.colOptions.push({\n        label: col.header,\n        value: col\n      });\n    }\n\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.actionTemplate = this.actionTemplate.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  componentWillUnmount() {\n    localStorage.removeItem('bounderriskstate');\n  }\n\n  editBounderRisk(event) {\n    let index = this.state.bounderRiskArray.findIndex(x => x.country === event.country);\n\n    if (index !== -1) {\n      let data = this.state.bounderRiskArray[index];\n      this.setState({\n        country: data.country,\n        RiskLocatorId: data.id\n      });\n    }\n  }\n\n  deleteBounderRisk() {\n    let data = {\n      \"RiskLocatorId\": this.state.deleteRiskLocatorId,\n      \"UserId\": CommonConfig.loggedInUserId(),\n      \"BinderId\": this.state.BinderId\n    };\n    console.log(data);\n    api.post(APIConstant.path.deleteBounder, data).then(res => {\n      if (res.success) {\n        // let index = this.state.bounderRiskArray.findIndex(x => x.country === this.state.country);\n        // if (index !== -1) {\n        //     this.state.bounderRiskArray.splice(index, 1);\n        //     this.setState({ bounderRiskArray: this.state.bounderRiskArray });\n        // }\n        if (res.data[0][0].ErrorMsg !== \"\") {\n          toast.error(res.data[0][0].ErrorMsg);\n        } else {\n          toast.success(\"Risk Locator successfully deleted\");\n        }\n\n        this.getBounderRisk(this.state.BinderId);\n        this.toggleLarge();\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onColumnToggle(event) {\n    let valueInOrder = event.value.sort((x, y) => {\n      return x.id - y.id;\n    });\n    this.setState({\n      cols: valueInOrder\n    });\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n\n  actionTemplate(rowData, column) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-trash\",\n      className: \"p-button-danger\",\n      tooltip: \"Delete\",\n      onClick: () => this.openDeleteModal(rowData),\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.getCountry(); // this.getBounderRisk();\n  }\n\n  addBounderRisk() {\n    if (this.state.BinderId == \"\") {\n      toast.error('To add Risk Locator Please Create New binder or edit existing Binder');\n    } else if (this.state.country == '') {\n      toast.error('Please Select Country');\n    } else {\n      let data = {\n        \"BinderId\": this.state.BinderId,\n        \"CountryId\": this.state.country,\n        \"RiskLocatorId\": this.state.RiskLocatorId,\n        \"UserId\": CommonConfig.loggedInUserId()\n      };\n      api.post(APIConstant.path.addRiskLocator, data).then(res => {\n        if (res.success) {\n          console.log(\"===========Bounder Class Created\");\n          toast.success(res.data.message);\n          this.getBounderRisk(this.state.BinderId); // setTimeout(function () {\n          //     window.location.reload();\n          // }, 2000);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.setState({\n        RiskLocatorId: \"\",\n        country: \"\"\n      });\n    }\n  }\n\n  getBounderRisk(BinderId) {\n    debugger;\n    let data = {\n      \"BinderId\": BinderId,\n      \"UserId\": CommonConfig.loggedInUserId()\n    };\n    api.post(APIConstant.path.getRiskLocator, data).then(res => {\n      console.log(res);\n\n      if (res.success) {\n        console.log(\"===========Bounder Class Data\");\n        console.log(res.data);\n        var countryarr = [...this.state.allcountryarr]; // make a separate copy of the array\n\n        for (let i = 0; i < res.data.length; i++) {\n          let index = countryarr.findIndex(x => x.value === res.data[i].Country);\n\n          if (index !== -1) {\n            countryarr.splice(index, 1);\n          }\n        }\n\n        this.setState({\n          bounderRiskArray: res.data.map(obj => {\n            return {\n              country: obj.Country,\n              id: obj.RiskLocatorId\n            };\n          }),\n          countryarr: countryarr\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getCountry() {\n    try {\n      const data = {\n        stringmaptype: 'COUNTRY'\n      };\n      api.post(APIConstant.path.dropdownbycode, data).then(res => {\n        if (res.success) {\n          console.log(\"COUNTRY\", res.data);\n          var country = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            country.push({\n              label: res.data[i].StringMapName,\n              value: res.data[i].Description\n            });\n          }\n\n          this.setState({\n            allcountryarr: country\n          }); // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\n          //     this.setState({ BinderId: this.props.match.params.Id })\n          //     this.getBounderRisk(this.props.match.params.Id)\n          // }\n\n          var splitData = this.props.location.pathname.split(\"/\"); // if (splitData[3] !== undefined) {\n\n          if (!CommonConfig.isEmpty(splitData[3])) {\n            this.setState({\n              BinderId: splitData[3]\n            });\n            this.getBounderRisk(splitData[3]);\n          }\n        } else {}\n      }).catch(err => {\n        console.log(\"error\", err);\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  render() {\n    let columns = this.state.cols.map((col, i) => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: i,\n        field: col.field,\n        header: col.header,\n        body: col.body,\n        sortable: col.sortable,\n        filter: col.filter,\n        filterMatchMode: col.filterMatchMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basic-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 33\n      }\n    }, \"Country\")), /*#__PURE__*/React.createElement(Col, {\n      md: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"country\",\n      id: \"country\",\n      onChange: e => this.selectType(e.target.value, 'country'),\n      value: this.state.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 37\n      }\n    }, \"Select Country\"), this.state.countryarr.map((type, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 49\n        }\n      }, type.label);\n    })), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"error invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }, \"Please select Country\")), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: \"fit-content\"\n      },\n      type: \"button\",\n      icon: this.state.RiskLocatorId == \"\" ? \"pi pi-plus\" : \"pi pi-pencil\",\n      tooltip: this.state.BinderAuthorisedClassId == \"\" ? \"Add Bounder Risk\" : \"Update Bounder Risk\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: () => this.addBounderRisk(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.cols,\n      options: this.colOptions,\n      fixedPlaceholder: true,\n      placeholder: CommonConfig.dataTableConfig.columnToggleIcon,\n      tooltip: \"Show / Hide Column\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      icon: \"pi pi-external-link\",\n      tooltip: \"Export as CSV\",\n      tooltipOptions: {\n        position: 'bottom'\n      },\n      onClick: this.export,\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.bounderRiskArray,\n      first: this.state.selectedPage,\n      onPage: e => this.getPageString(e),\n      paginator: true,\n      rows: this.state.rowsPerPage,\n      totalRecords: this.state.bounderRiskArray.length,\n      exportFilename: \"Risk Locator List\",\n      currentPageReportTemplate: this.state.str,\n      scrollable: true,\n      scrollHeight: \"340px\",\n      paginatorTemplate: this.state.paginatorTemplate,\n      rowsPerPageOptions: this.state.rowsPerPageOptions,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      responsive: true,\n      resizableColumns: true,\n      columnResizeMode: \"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, columns)), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.toggleModal,\n      toggle: this.toggleLarge,\n      className: 'modal-lg ' + this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, \"Delete Risk Locator\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, \"Are you sure, You want to delete \", this.state.deletecountry, \" Risk Locator?\"), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BTN, {\n      color: \"success\",\n      onClick: () => this.deleteBounderRisk(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 87\n      }\n    }), \" Delete\"), ' ', /*#__PURE__*/React.createElement(BTN, {\n      color: \"primary\",\n      onClick: this.toggleLarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 73\n      }\n    }), \"Cancel\"))));\n  }\n\n}\n\nexport default withTranslation()(BounderOfRisk);","map":{"version":3,"sources":["/Users/bhavik/Downloads/Cognisun/Evolution/Evolution_React/evolution_new/src/views/Binder/AddUdateBinder/Info/BounderOfRisk.js"],"names":["React","Component","Col","Row","Modal","ModalBody","ModalHeader","ModalFooter","Button","BTN","Input","withTranslation","DataTable","Column","MultiSelect","InputText","toast","api","APIConstant","CommonConfig","BounderOfRisk","constructor","props","selectType","value","type","setState","country","getPageString","e","firstPage","first","l","rows","page","lastPage","state","bounderRiskArray","length","str","selectedPage","rowsPerPage","openDeleteModal","rowData","toggleModal","deleteRiskLocatorId","id","deletecountry","toggleLarge","columns","field","header","sortable","filter","filterMatchMode","body","actionTemplate","bind","orginial","selectedLanguage","i18n","language","cols","BinderId","RiskLocatorId","countryError","countryarr","rowsPerPageOptions","dataTableConfig","globalFilter","paginatorTemplate","colOptions","col","push","label","onColumnToggle","export","componentWillUnmount","localStorage","removeItem","editBounderRisk","event","index","findIndex","x","data","deleteBounderRisk","loggedInUserId","console","log","post","path","deleteBounder","then","res","success","ErrorMsg","error","getBounderRisk","catch","err","valueInOrder","sort","y","dt","exportCSV","column","position","componentWillMount","componentDidMount","getCountry","addBounderRisk","addRiskLocator","message","getRiskLocator","allcountryarr","i","Country","splice","map","obj","stringmaptype","dropdownbycode","StringMapName","Description","splitData","location","pathname","split","isEmpty","render","target","key","height","BinderAuthorisedClassId","columnToggleIcon","width","marginRight","el","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Col, Row, Modal, ModalBody, ModalHeader, ModalFooter, Button as BTN, Input } from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport api from '../../../../utils/apiClient';\r\n\r\nimport APIConstant, { CommonConfig } from '../../../../utils/constants';\r\n\r\nclass BounderOfRisk extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let columns = [\r\n            { field: \"country\", header: \"Country\", sortable: true, filter: true, filterMatchMode: 'contains',id: 0 },\r\n            { body: this.actionTemplate.bind(this), header: \"Action\", sortable: false, filter: false, filterMatchMode: 'contains',id: 1 }\r\n        ];\r\n\r\n        const orginial = this.setState;\r\n        // this.state = JSON.parse(localStorage.getItem('bounderriskstate'))\r\n        //     ? JSON.parse(localStorage.getItem('bounderriskstate'))\r\n        //     : \r\n            this.state = {\r\n                toggleModal: false,\r\n                selectedLanguage: (props.i18n.language === 'en') ? 'en-GB' : (props.i18n.language === 'es') ? 'es-ES' : (props.i18n.language === 'ie') ? 'en-IE' : props.i18n.language,\r\n                cols: columns,\r\n                country: \"\",\r\n                BinderId: \"\",\r\n                RiskLocatorId: \"\",\r\n                countryError: false,\r\n                bounderRiskArray: [],\r\n                countryarr: [],\r\n                selectedPage: 0,\r\n                rowsPerPageOptions: CommonConfig.dataTableConfig.rowsPerPageOptions,\r\n                rowsPerPage: CommonConfig.dataTableConfig.rowsPerPage,\r\n                globalFilter: null,\r\n                paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n            };\r\n\r\n        this.colOptions = [];\r\n        for (let col of columns) {\r\n            this.colOptions.push({ label: col.header, value: col });\r\n        }\r\n\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n        this.export = this.export.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.removeItem('bounderriskstate')\r\n    }\r\n\r\n    selectType = (value, type) => {\r\n        if (type == \"country\") {\r\n            this.setState({ country: value })\r\n        }\r\n    }\r\n\r\n\r\n    editBounderRisk(event) {\r\n        \r\n        let index = this.state.bounderRiskArray.findIndex(x => x.country === event.country);\r\n        if (index !== -1) {\r\n            let data = this.state.bounderRiskArray[index]\r\n            this.setState({\r\n                country: data.country,\r\n                RiskLocatorId: data.id\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteBounderRisk() {\r\n\r\n        let data = {\r\n            \"RiskLocatorId\": this.state.deleteRiskLocatorId,\r\n            \"UserId\": CommonConfig.loggedInUserId(),\r\n            \"BinderId\": this.state.BinderId\r\n        }\r\n        console.log(data)\r\n\r\n        api.post(APIConstant.path.deleteBounder, data).then(res => {\r\n            if (res.success) {\r\n                // let index = this.state.bounderRiskArray.findIndex(x => x.country === this.state.country);\r\n                // if (index !== -1) {\r\n                //     this.state.bounderRiskArray.splice(index, 1);\r\n                //     this.setState({ bounderRiskArray: this.state.bounderRiskArray });\r\n                // }\r\n                if(res.data[0][0].ErrorMsg !== \"\"){\r\n                    toast.error(res.data[0][0].ErrorMsg);\r\n                } else {\r\n                    toast.success(\"Risk Locator successfully deleted\");\r\n                }\r\n                this.getBounderRisk(this.state.BinderId);\r\n                this.toggleLarge();\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getPageString = (e) => {\r\n        let firstPage = e.first + 1;\r\n        let l = e.rows * (e.page + 1);\r\n        let lastPage = (l < this.state.bounderRiskArray.length) ? l : this.state.bounderRiskArray.length\r\n        var str = firstPage + ' to ' + lastPage + ' out of ' + this.state.bounderRiskArray.length + ' records';\r\n        this.setState({ selectedPage: e.first, str: str, rowsPerPage: e.rows });\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let valueInOrder = event.value.sort((x, y) => { return x.id - y.id });\r\n        this.setState({ cols: valueInOrder });\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    actionTemplate(rowData, column) {\r\n        return <div>\r\n            {/* <Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-warning\" onClick={() => this.editBounderRisk(rowData)}\r\n                style={{ marginRight: '.5em' }} tooltip=\"View\" tooltipOptions={{ position: 'bottom' }}>\r\n            </Button> */}\r\n            {/* <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={() => this.deleteBounderRisk(rowData)} tooltip=\"Delete\" tooltipOptions={{ position: 'bottom' }}></Button> */}\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" tooltip=\"Delete\" onClick={() => this.openDeleteModal(rowData)} tooltipOptions={{ position: 'bottom' }}></Button>\r\n                    </div>;\r\n    }\r\n\r\n    openDeleteModal = (rowData) => {\r\n        this.setState({\r\n            toggleModal: !this.state.toggleModal,\r\n            deleteRiskLocatorId: rowData.id,\r\n            deletecountry: rowData.country,\r\n        });\r\n    }\r\n\r\n    toggleLarge = () => {\r\n        this.setState({\r\n            toggleModal: false,\r\n            deleteRiskLocatorId: '',\r\n            deletecountry: ''\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCountry();\r\n\r\n        // this.getBounderRisk();\r\n    }\r\n\r\n    addBounderRisk() {\r\n        if(this.state.BinderId == \"\") {\r\n            toast.error('To add Risk Locator Please Create New binder or edit existing Binder');\r\n        }\r\n        else if(this.state.country == '') {\r\n            toast.error('Please Select Country');\r\n        }\r\n        else {\r\n            let data = {\r\n            \"BinderId\": this.state.BinderId,\r\n            \"CountryId\": this.state.country,\r\n            \"RiskLocatorId\": this.state.RiskLocatorId,\r\n            \"UserId\": CommonConfig.loggedInUserId()\r\n            }\r\n            api.post(APIConstant.path.addRiskLocator, data).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"===========Bounder Class Created\")\r\n                    toast.success(res.data.message);\r\n                    this.getBounderRisk(this.state.BinderId);\r\n                    // setTimeout(function () {\r\n                    //     window.location.reload();\r\n                    // }, 2000);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n            this.setState({\r\n                RiskLocatorId: \"\",\r\n                country: \"\"\r\n\r\n            })\r\n            }\r\n    }\r\n\r\n    getBounderRisk(BinderId) {\r\n        debugger;\r\n        let data = {\r\n            \"BinderId\": BinderId,\r\n            \"UserId\": CommonConfig.loggedInUserId()\r\n        }\r\n        api.post(APIConstant.path.getRiskLocator, data).then(res => {\r\n            console.log(res)\r\n            if (res.success) {\r\n                console.log(\"===========Bounder Class Data\")\r\n                console.log(res.data)\r\n                \r\n                var countryarr = [...this.state.allcountryarr]; // make a separate copy of the array\r\n\r\n                for (let i = 0; i < res.data.length; i++) {\r\n                    let index = countryarr.findIndex(x => x.value === res.data[i].Country);\r\n                    if (index !== -1) {\r\n                        countryarr.splice(index, 1);\r\n                    }\r\n                }\r\n                \r\n                \r\n                this.setState({\r\n                    bounderRiskArray: res.data.map((obj) => {\r\n                        return {\r\n                            country: obj.Country,\r\n                            id: obj.RiskLocatorId\r\n                        }\r\n                    }),\r\n                    countryarr: countryarr\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    getCountry() {\r\n        try {\r\n            const data = {\r\n                stringmaptype: 'COUNTRY',\r\n            };\r\n            api.post(APIConstant.path.dropdownbycode, data).then(res => {\r\n                if (res.success) {\r\n                    console.log(\"COUNTRY\", res.data);\r\n                    var country = [];\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        country.push({\r\n                            label: res.data[i].StringMapName,\r\n                            value: res.data[i].Description\r\n                        })\r\n                    }\r\n                    this.setState({ allcountryarr: country });\r\n                    // if (this.props.match.params.constructor === Object && Object.keys(this.props.match.params).length !== 0) {\r\n                    //     this.setState({ BinderId: this.props.match.params.Id })\r\n                    //     this.getBounderRisk(this.props.match.params.Id)\r\n                        \r\n                    // }\r\n                    var splitData = this.props.location.pathname.split(\"/\");\r\n                    // if (splitData[3] !== undefined) {\r\n                    if (!CommonConfig.isEmpty(splitData[3])) {\r\n                        this.setState({ BinderId: splitData[3] })\r\n                        this.getBounderRisk(splitData[3])\r\n                    } \r\n                } else {\r\n\r\n                }\r\n            }).catch(err => {\r\n                console.log(\"error\", err);\r\n            });\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.state.cols.map((col, i) => {\r\n            return <Column key={i} field={col.field} header={col.header} body={col.body} sortable={col.sortable} filter={col.filter}  filterMatchMode={col.filterMatchMode}/>;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"basic-header\">\r\n                    <div className=\"input-box\">\r\n                        <Row>\r\n                            <Col md=\"1\">\r\n                                <label>Country</label>\r\n                            </Col>\r\n                            <Col md=\"3\">\r\n                                <Input type=\"select\" name=\"country\" id=\"country\" onChange={(e) => this.selectType(e.target.value, 'country')} value={this.state.country}>\r\n                                    <option value='' disabled={\"disabled\"}>Select Country</option>\r\n\r\n                                    {this.state.countryarr.map((type, i) => {\r\n                                        return (<option value={type.key}>{type.label}</option>)\r\n                                    })\r\n                                    }\r\n\r\n                                </Input>\r\n                                <em className=\"error invalid-feedback\" >Please select Country</em>\r\n                            </Col>\r\n                            <Button style={{ height: \"fit-content\" }} type=\"button\" icon={this.state.RiskLocatorId == \"\" ? \"pi pi-plus\" : \"pi pi-pencil\"} tooltip={this.state.BinderAuthorisedClassId == \"\" ? \"Add Bounder Risk\" : \"Update Bounder Risk\"} tooltipOptions={{ position: 'bottom' }} onClick={() => this.addBounderRisk()}></Button>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"header-right-option\">\r\n                        <MultiSelect value={this.state.cols} options={this.colOptions}\r\n                            fixedPlaceholder={true} placeholder={CommonConfig.dataTableConfig.columnToggleIcon} tooltip=\"Show / Hide Column\"\r\n                            onChange={this.onColumnToggle} style={{ width: '50px' }}\r\n                        />\r\n                        <Button type=\"button\" icon=\"pi pi-external-link\" tooltip=\"Export as CSV\" tooltipOptions={{ position: 'bottom' }} onClick={this.export} style={{ marginRight: 10 }}></Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-custom\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.bounderRiskArray} first={this.state.selectedPage} onPage={(e) => this.getPageString(e)}\r\n                        paginator={true} rows={this.state.rowsPerPage} totalRecords={this.state.bounderRiskArray.length} exportFilename=\"Risk Locator List\"\r\n                        currentPageReportTemplate={this.state.str} scrollable={true} scrollHeight=\"340px\"\r\n                        paginatorTemplate={this.state.paginatorTemplate}\r\n                        rowsPerPageOptions={this.state.rowsPerPageOptions} globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"\r\n                        responsive={true} resizableColumns={true} columnResizeMode=\"fit\" //stateKey=\"contactList\" stateStorage=\"local\" header={header} \r\n                    >{columns}</DataTable>\r\n                </div>\r\n\r\n                <Modal isOpen={this.state.toggleModal} toggle={this.toggleLarge}\r\n                    className={'modal-lg ' + this.props.className}>\r\n                    <ModalHeader toggle={this.toggleLarge}>Delete Risk Locator</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure, You want to delete {this.state.deletecountry} Risk Locator?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <BTN color=\"success\" onClick={() => this.deleteBounderRisk()}><i class=\"fa fa-check\"></i> Delete</BTN>{' '}\r\n                        <BTN color=\"primary\" onClick={this.toggleLarge}><i class=\"fa fa-close\"></i>Cancel</BTN>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(BounderOfRisk);"]},"metadata":{},"sourceType":"module"}